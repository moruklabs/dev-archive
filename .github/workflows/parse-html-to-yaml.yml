name: Parse HTML to YAML

on:
  schedule:
    - cron: '*/20 * * * *'  # Runs every 20 minutes
  workflow_dispatch:

permissions:
  contents: write

jobs:
  parse-html-to-yaml:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run HTML to YAML parser
        run: python parse_html_to_yaml.py

      - name: Upload parsed data as artifact
        uses: actions/upload-artifact@v4
        with:
          name: parsed-yaml-artifact
          path: parsed

  commit-parsed-data:
    runs-on: ubuntu-latest
    needs: parse-html-to-yaml
    if: success()
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download parsed data artifact
        uses: actions/download-artifact@v4
        with:
          name: parsed-yaml-artifact
          path: parsed

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Pull latest changes
        run: git pull --rebase origin main

      - name: Commit and push parsed YAML files
        run: |
          git add parsed/
          if git diff --staged --quiet; then
            echo "No new parsed data to commit."
            exit 0
          fi
          git commit -m "feat: Update parsed YAML data $(date +'%Y-%m-%d %H:%M:%S UTC')"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}