<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Monthly Trending</title>
    <description>Monthly Trending of TypeScript in GitHub</description>
    <pubDate>Fri, 01 Aug 2025 02:00:55 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>freeCodeCamp/freeCodeCamp</title>
      <link>https://github.com/freeCodeCamp/freeCodeCamp</link>
      <description>&lt;p&gt;freeCodeCamp.org's open-source codebase and curriculum. Learn math, programming, and computer science for free.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://www.freecodecamp.org/"&gt;&lt;img src="https://cdn.freecodecamp.org/platform/universal/fcc_banner_new.png" alt="freeCodeCamp Social Banner"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://makeapullrequest.com"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat" alt="Pull Requests Welcome"&gt;&lt;/a&gt; &lt;a href="https://www.firsttimersonly.com/"&gt;&lt;img src="https://img.shields.io/badge/first--timers--only-friendly-blue.svg?sanitize=true" alt="first-timers-only Friendly"&gt;&lt;/a&gt; &lt;a href="https://www.codetriage.com/freecodecamp/freecodecamp"&gt;&lt;img src="https://www.codetriage.com/freecodecamp/freecodecamp/badges/users.svg?sanitize=true" alt="Open Source Helpers"&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/from-referrer/"&gt;&lt;img src="https://img.shields.io/badge/setup-automated-blue?logo=gitpod" alt="Setup Automated"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/PRyKn3Vbay"&gt;&lt;img src="https://img.shields.io/discord/692816967895220344?logo=discord&amp;amp;label=Discord&amp;amp;color=5865F2" alt="Discord"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;freeCodeCamp.org's open-source codebase and curriculum&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.freecodecamp.org"&gt;freeCodeCamp.org&lt;/a&gt; is a friendly community where you can learn to code for free. It is run by a &lt;a href="https://www.freecodecamp.org/donate"&gt;donor-supported 501(c)(3) charity&lt;/a&gt; to help millions of busy adults transition into tech. Our community has already helped more than 100,000 people get their first developer job.&lt;/p&gt; 
&lt;p&gt;Our full-stack web development and machine learning curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#certifications"&gt;Certifications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#the-learning-platform"&gt;The Learning Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#reporting-bugs-and-issues"&gt;Reporting Bugs and Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#reporting-security-issues-and-responsible-disclosure"&gt;Reporting Security Issues and Responsible Disclosure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#platform-build-and-deployment-status"&gt;Platform, Build and Deployment Status&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Certifications&lt;/h3&gt; 
&lt;p&gt;freeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginner programmer around 300 hours to earn.&lt;/p&gt; 
&lt;p&gt;Each of these 50 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you've fulfilled all the user stories before you submit it.&lt;/p&gt; 
&lt;p&gt;You can pull in these test suites through &lt;a href="https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js"&gt;freeCodeCamp's CDN&lt;/a&gt;. This means you can build these projects on websites like CodePen and Replit - or even on your local computer's development environment.&lt;/p&gt; 
&lt;p&gt;Once you've earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or resume. And when your prospective employers or freelance clients click that link, they'll see a verified certification specific to you.&lt;/p&gt; 
&lt;p&gt;The one exception to this is if we discover violations of our &lt;a href="https://www.freecodecamp.org/news/academic-honesty-policy/"&gt;Academic Honesty Policy&lt;/a&gt;. When we catch people unambiguously plagiarizing (submitting other people's code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.&lt;/p&gt; 
&lt;p&gt;Here are our twelve core certifications:&lt;/p&gt; 
&lt;h4&gt;1. &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/"&gt;Responsive Web Design Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-html-by-building-a-cat-photo-app"&gt;Learn HTML by Building a Cat Photo App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-basic-css-by-building-a-cafe-menu"&gt;Learn Basic CSS by Building a Cafe Menu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-colors-by-building-a-set-of-colored-markers"&gt;Learn CSS Colors by Building a Set of Colored Markers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-html-forms-by-building-a-registration-form"&gt;Learn HTML Forms by Building a Registration Form&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-the-css-box-model-by-building-a-rothko-painting"&gt;Learn the CSS Box Model by Building a Rothko Painting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-flexbox-by-building-a-photo-gallery"&gt;Learn CSS Flexbox by Building a Photo Gallery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-typography-by-building-a-nutrition-label"&gt;Learn Typography by Building a Nutrition Label&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-accessibility-by-building-a-quiz"&gt;Learn Accessibility by Building a Quiz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-more-about-css-pseudo-selectors-by-building-a-balance-sheet"&gt;Learn More About CSS Pseudo Selectors by Building A Balance Sheet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-intermediate-css-by-building-a-cat-painting"&gt;Learn Intermediate CSS by Building a Cat Painting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-responsive-web-design-by-building-a-piano"&gt;Learn Responsive Web Design by Building a Piano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-variables-by-building-a-city-skyline"&gt;Learn CSS Variables by Building a City Skyline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-grid-by-building-a-magazine"&gt;Learn CSS Grid by Building a Magazine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-transforms-by-building-a-penguin"&gt;Learn CSS Transforms by Building a Penguin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-animation-by-building-a-ferris-wheel"&gt;Learn CSS Animations by Building a Ferris Wheel&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-survey-form-project/build-a-survey-form"&gt;Survey Form&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-tribute-page-project/build-a-tribute-page"&gt;Tribute Page&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-technical-documentation-page-project/build-a-technical-documentation-page"&gt;Technical Documentation Page&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-product-landing-page-project/build-a-product-landing-page"&gt;Product Landing Page&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-personal-portfolio-webpage-project/build-a-personal-portfolio-webpage"&gt;Personal Portfolio Webpage&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2. &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/"&gt;JavaScript Algorithms and Data Structures Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-introductory-javascript-by-building-a-pyramid-generator"&gt;Learn Introductory JavaScript by Building a Pyramid Generator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-javascript-by-building-a-role-playing-game"&gt;Learn Basic JavaScript by Building a Role Playing Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-form-validation-by-building-a-calorie-counter"&gt;Learn Form Validation by Building a Calorie Counter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-string-and-array-methods-by-building-a-music-player"&gt;Learn Basic String and Array Methods by Building a Music Player&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-the-date-object-by-building-a-date-formatter"&gt;Learn the Date Object by Building a Date Formatter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-modern-javascript-methods-by-building-football-team-cards"&gt;Learn Modern JavaScript Methods By Building Football Team Cards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-localstorage-by-building-a-todo-app"&gt;Learn localStorage by Building a Todo App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-recursion-by-building-a-decimal-to-binary-converter"&gt;Learn Recursion by Building a Decimal to Binary Converter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-algorithmic-thinking-by-building-a-number-sorter"&gt;Learn Basic Algorithmic Thinking by Building a Number Sorter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-advanced-array-methods-by-building-a-statistics-calculator"&gt;Learn Advanced Array Methods by Building a Statistics Calculator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-functional-programming-by-building-a-spreadsheet"&gt;Learn Functional Programming by Building a Spreadsheet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-regular-expressions-by-building-a-spam-filter"&gt;Learn Regular Expressions by Building a Spam Filter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-oop-by-building-a-shopping-cart"&gt;Learn Basic OOP by Building a Shopping Cart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-intermediate-oop-by-building-a-platformer-game"&gt;Learn Intermediate OOP by Building a Platformer Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#review-algorithmic-thinking-by-building-a-dice-game"&gt;Learn Intermediate Algorithmic Thinking by Building a Dice Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-fetch-and-promises-by-building-an-fcc-authors-page"&gt;Learn Fetch and Promises By Building an fCC Authors Page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard"&gt;Learn Asynchronous Programming by Building an fCC Forum Leaderboard&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-palindrome-checker-project/build-a-palindrome-checker"&gt;Palindrome Checker&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-roman-numeral-converter-project/build-a-roman-numeral-converter"&gt;Roman Numeral Converter&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-telephone-number-validator-project/build-a-telephone-number-validator"&gt;Telephone Number Validator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-cash-register-project/build-a-cash-register"&gt;Cash Register&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-an-rpg-creature-search-app-project/build-an-rpg-creature-search-app"&gt;RPG Creature Search App&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;3. &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/"&gt;Front End Libraries Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#bootstrap"&gt;Bootstrap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#jquery"&gt;jQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#sass"&gt;Sass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#react"&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#redux"&gt;Redux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#react-and-redux"&gt;React and Redux&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-random-quote-machine"&gt;Random Quote Machine&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-markdown-previewer"&gt;Markdown Previewer&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-drum-machine"&gt;Drum Machine&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-javascript-calculator"&gt;JavaScript Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-25--5-clock"&gt;25 + 5 Clock&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;4. &lt;a href="https://www.freecodecamp.org/learn/data-visualization/"&gt;Data Visualization Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/data-visualization/#data-visualization-with-d3"&gt;Data Visualization with D3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/data-visualization/#json-apis-and-ajax"&gt;JSON APIs and Ajax&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-bar-chart"&gt;Bar Chart&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-scatterplot-graph"&gt;Scatterplot Graph&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-heat-map"&gt;Heat Map&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-choropleth-map"&gt;Choropleth Map&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-treemap-diagram"&gt;Treemap Diagram&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;5. &lt;a href="https://www.freecodecamp.org/learn/relational-database/"&gt;Relational Database&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-bash-by-building-a-boilerplate"&gt;Learn Bash by Building a Boilerplate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-relational-databases-by-building-a-database-of-video-game-characters"&gt;Learn Relational Databases by Building a Database of Video Game Characters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-bash-scripting-by-building-five-programs"&gt;Learn Bash Scripting by Building Five Programs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-sql-by-building-a-student-database-part-1"&gt;Learn SQL by Building a Student Database: Part 1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-sql-by-building-a-student-database-part-2"&gt;Learn SQL by Building a Student Database: Part 2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-advanced-bash-by-building-a-kitty-ipsum-translator"&gt;Learn Advanced Bash by Building a Kitty Ipsum Translator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-bash-and-sql-by-building-a-bike-rental-shop"&gt;Learn Bash and SQL by Building a Bike Rental Shop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-nano-by-building-a-castle"&gt;Learn Nano by Building a Castle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-git-by-building-an-sql-reference-object"&gt;Learn Git by Building an SQL Reference Object&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/relational-database/#build-a-salon-appointment-scheduler-project"&gt;Salon Appointment Scheduler&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/relational-database/#build-a-celestial-bodies-database-project"&gt;Celestial Bodies Database&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/relational-database/#build-a-periodic-table-database-project"&gt;Periodic Table Database&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/relational-database/#build-a-number-guessing-game-project"&gt;Number Guessing Game&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/relational-database/#build-a-world-cup-database-project"&gt;World Cup Database&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;6. &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/"&gt;Back End Development and APIs Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/#managing-packages-with-npm"&gt;Managing Packages with Npm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/#basic-node-and-express"&gt;Basic Node and Express&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/#mongodb-and-mongoose"&gt;MongoDB and Mongoose&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/timestamp-microservice"&gt;Timestamp Microservice&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/request-header-parser-microservice"&gt;Request Header Parser&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/url-shortener-microservice"&gt;URL Shortener&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/exercise-tracker"&gt;Exercise Tracker&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/file-metadata-microservice"&gt;File Metadata Microservice&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;7. &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/"&gt;Quality Assurance Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/quality-assurance/#quality-assurance-and-testing-with-chai"&gt;Quality Assurance and Testing with Chai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/quality-assurance/#advanced-node-and-express"&gt;Advanced Node and Express&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/metric-imperial-converter"&gt;Metric-Imperial Converter&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/issue-tracker"&gt;Issue Tracker&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/personal-library"&gt;Personal Library&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/sudoku-solver"&gt;Sudoku Solver&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/american-british-translator"&gt;American British Translator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;8. &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/"&gt;Scientific Computing with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-string-manipulation-by-building-a-cipher"&gt;Learn String Manipulation by Building a Cipher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm"&gt;Learn How to Work with Numbers and Strings by Implementing the Luhn Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-lambda-functions-by-building-an-expense-tracker"&gt;Learn Lambda Functions by Building an Expense Tracker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-list-comprehension-by-building-a-case-converter-program"&gt;Learn List Comprehension by Building a Case Converter Program&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-the-bisection-method-by-finding-the-square-root-of-a-number"&gt;Learn the Bisection Method by Finding the Square Root of a Number&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-regular-expressions-by-building-a-password-generator"&gt;Learn Regular Expressions by Building a Password Generator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-algorithm-design-by-building-a-shortest-path-algorithm"&gt;Learn Algorithm Design by Building a Shortest Path Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-recursion-by-solving-the-tower-of-hanoi-puzzle"&gt;Learn Recursion by Solving the Tower of Hanoi Puzzle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-data-structures-by-building-the-merge-sort-algorithm"&gt;Learn Data Structures by Building the Merge Sort Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-classes-and-objects-by-building-a-sudoku-solver"&gt;Learn Classes and Objects by Building a Sudoku Solver&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-tree-traversal-by-building-a-binary-search-tree"&gt;Learn Tree Traversal by Building a Binary Search Tree&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-special-methods-by-building-a-vector-space"&gt;Learn Special Methods by Building a Vector Space&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/build-an-arithmetic-formatter-project/build-an-arithmetic-formatter-project"&gt;Arithmetic Formatter&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/build-a-time-calculator-project/build-a-time-calculator-project"&gt;Time Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/build-a-budget-app-project/build-a-budget-app-project"&gt;Budget App&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/build-a-polygon-area-calculator-project/build-a-polygon-area-calculator-project"&gt;Polygon Area Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/build-a-probability-calculator-project/build-a-probability-calculator-project"&gt;Probability Calculator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;9. &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/"&gt;Data Analysis with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/#data-analysis-with-python-course"&gt;Data Analysis with Python Course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/#numpy"&gt;NumPy&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/mean-variance-standard-deviation-calculator"&gt;Mean-Variance-Standard Deviation Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/demographic-data-analyzer"&gt;Demographic Data Analyzer&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/medical-data-visualizer"&gt;Medical Data Visualizer&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/page-view-time-series-visualizer"&gt;Page View Time Series Visualizer&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/sea-level-predictor"&gt;Sea Level Predictor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;10. &lt;a href="https://www.freecodecamp.org/learn/information-security/"&gt;Information Security Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/information-security/#information-security-with-helmetjs"&gt;Information Security with HelmetJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/information-security/#python-for-penetration-testing"&gt;Python for Penetration Testing&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/information-security/information-security-projects/stock-price-checker"&gt;Stock Price Checker&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/information-security/information-security-projects/anonymous-message-board"&gt;Anonymous Message Board&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/information-security/information-security-projects/port-scanner"&gt;Port Scanner&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/information-security/information-security-projects/sha-1-password-cracker"&gt;SHA-1 Password Cracker&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/information-security/information-security-projects/secure-real-time-multiplayer-game"&gt;Secure Real Time Multiplayer Game &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;11. &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/"&gt;Machine Learning with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/#tensorflow"&gt;TensorFlow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/#how-neural-networks-work"&gt;How Neural Networks Work&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/rock-paper-scissors"&gt;Rock Paper Scissors&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/cat-and-dog-image-classifier"&gt;Cat and Dog Image Classifier&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/book-recommendation-engine-using-knn"&gt;Book Recommendation Engine using KNN&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/linear-regression-health-costs-calculator"&gt;Linear Regression Health Costs Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/neural-network-sms-text-classifier"&gt;Neural Network SMS Text Classifier&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;12. &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/"&gt;College Algebra with Python&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-ratios-and-proportions"&gt;Learn Ratios and Proportions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-how-to-solve-for-x"&gt;Learn How to Solve for X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-fractions-and-decimals"&gt;Learn Fractions and Decimals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-functions-and-graphing"&gt;Learn Functions and Graphing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-linear-functions"&gt;Learn Linear Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-common-factors-and-square-roots"&gt;Learn Common Factors and Square Roots&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-how-to-graph-systems-of-equations"&gt;Learn How to Graph Systems of Equations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-how-to-solve-systems-of-equations"&gt;Learn How to Solve Systems of Equations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-applications-of-linear-systems"&gt;Learn Applications of Linear Systems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-quadratic-equations"&gt;Learn Quadratic Equations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-parent-graphs-and-polynomials"&gt;Learn Parent Graphs and Polynomials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-business-applications-of-college-algebra"&gt;Learn Business Applications of College Algebra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-simple-and-compound-interest"&gt;Learn Simple and Compound Interest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-exponents-and-logarithms"&gt;Learn Exponents and Logarithms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#college-algebra-with-python-conclusion"&gt;College Algebra with Python: Conclusion&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#build-a-multi-function-calculator-project"&gt;Multi-Function Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#build-a-graphing-calculator-project"&gt;Graphing Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#build-three-math-games-project"&gt;Three Math Games&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#build-a-financial-calculator-project"&gt;Financial Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#build-a-data-graph-explorer-project"&gt;Data Graph Explorer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Legacy Full Stack Development Certification&lt;/h4&gt; 
&lt;p&gt;Once you have earned the Responsive Web Design, Algorithms and Data Structures, Front End Development Libraries, Data Visualization, Back End Development and APIs, and Legacy Information Security and Quality Assurance certifications, you'll be able to claim your freeCodeCamp.org Full Stack Development Certification. This distinction signifies that you've completed around 1,800 hours of coding with a wide range of web development tools.&lt;/p&gt; 
&lt;h4&gt;Legacy Certifications&lt;/h4&gt; 
&lt;p&gt;We also have 4 legacy certifications dating back to our 2015 curriculum, which are still available. All of the required projects for these legacy certifications will remain available on freeCodeCamp.org.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Legacy Front End Development Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Data Visualization Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Back End Development Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Information Security and Quality Assurance Certification&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Free professional certifications&lt;/h3&gt; 
&lt;h4&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/"&gt;(New) Foundational C# with Microsoft&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#write-your-first-code-using-c-sharp"&gt;Write Your First Code Using C#&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#create-and-run-simple-c-sharp-console-applications"&gt;Create and Run Simple C# Console Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#add-logic-to-c-sharp-console-applications"&gt;Add Logic to C# Console Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#work-with-variable-data-in-c-sharp-console-applications"&gt;Work with Variable Data in C# Console Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#create-methods-in-c-sharp-console-applications"&gt;Create Methods in C# Console Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#debug-c-sharp-console-applications"&gt;Debug C# Console Applications&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Exam&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/foundational-c-sharp-with-microsoft-certification-exam/foundational-c-sharp-with-microsoft-certification-exam"&gt;Foundational C# with Microsoft Certification Exam&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;The Learning Platform&lt;/h3&gt; 
&lt;p&gt;This code is running live at &lt;a href="https://www.freecodecamp.org"&gt;freeCodeCamp.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our community also has:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A &lt;a href="https://forum.freecodecamp.org"&gt;forum&lt;/a&gt; where you can usually get programming help or project feedback within hours.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href="https://youtube.com/freecodecamp"&gt;YouTube channel&lt;/a&gt; with free courses on Python, SQL, Android, and a wide variety of other technologies.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href="https://www.freecodecamp.org/news"&gt;technical publication&lt;/a&gt; with thousands of programming tutorials and articles about mathematics and computer science.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href="https://discord.gg/Z7Fm39aNtZ"&gt;Discord server&lt;/a&gt; where you can hang out and talk with developers and people who are learning to code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href="https://www.freecodecamp.org/signin"&gt;Join the community here&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Reporting Bugs and Issues&lt;/h3&gt; 
&lt;p&gt;If you think you've found a bug, first read the &lt;a href="https://forum.freecodecamp.org/t/how-to-report-a-bug/19543"&gt;how to report a bug&lt;/a&gt; article and follow its instructions.&lt;/p&gt; 
&lt;p&gt;If you're confident it's a new bug and have confirmed that someone else is facing the same issue, go ahead and create a new GitHub issue. Be sure to include as much information as possible so we can reproduce the bug.&lt;/p&gt; 
&lt;h3&gt;Reporting Security Issues and Responsible Disclosure&lt;/h3&gt; 
&lt;p&gt;We appreciate responsible disclosure of vulnerabilities that might impact the integrity of our platforms and users.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href="https://contribute.freecodecamp.org/#/security"&gt;Read our security policy and follow these steps to report a vulnerability&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;The freeCodeCamp.org community is possible thanks to thousands of kind volunteers like you. We welcome all contributions to the community and are excited to welcome you aboard.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href="https://contribute.freecodecamp.org"&gt;Please follow these steps to contribute&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Recent Contributions:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/89be0a1a1c8f641c54f9234a7423e7755352c746.svg?sanitize=true" alt="Alt" title="Repobeats analytics image"&gt;&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Copyright © 2025 freeCodeCamp.org&lt;/p&gt; 
&lt;p&gt;The content of this repository is bound by the following licenses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The computer software is licensed under the &lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/LICENSE.md"&gt;BSD-3-Clause&lt;/a&gt; license.&lt;/li&gt; 
 &lt;li&gt;The learning resources in the &lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/curriculum"&gt;&lt;code&gt;/curriculum&lt;/code&gt;&lt;/a&gt; directory including their subdirectories thereon are copyright © 2025 freeCodeCamp.org&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>musistudio/claude-code-router</title>
      <link>https://github.com/musistudio/claude-code-router</link>
      <description>&lt;p&gt;Use Claude Code as the foundation for coding infrastructure, allowing you to decide how to interact with the model while enjoying updates from Anthropic.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Claude Code Router&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/musistudio/claude-code-router/main/README_zh.md"&gt;中文版&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A powerful tool to route Claude Code requests to different models and customize any request.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/images/claude-code.png" alt=""&gt;&lt;/p&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Model Routing&lt;/strong&gt;: Route requests to different models based on your needs (e.g., background tasks, thinking, long context).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Provider Support&lt;/strong&gt;: Supports various model providers like OpenRouter, DeepSeek, Ollama, Gemini, Volcengine, and SiliconFlow.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Request/Response Transformation&lt;/strong&gt;: Customize requests and responses for different providers using transformers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Model Switching&lt;/strong&gt;: Switch models on-the-fly within Claude Code using the &lt;code&gt;/model&lt;/code&gt; command.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Actions Integration&lt;/strong&gt;: Trigger Claude Code tasks in your GitHub workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt;: Extend functionality with custom transformers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;h3&gt;1. Installation&lt;/h3&gt; 
&lt;p&gt;First, ensure you have &lt;a href="https://docs.anthropic.com/en/docs/claude-code/quickstart"&gt;Claude Code&lt;/a&gt; installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm install -g @anthropic-ai/claude-code
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, install Claude Code Router:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm install -g @musistudio/claude-code-router
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. Configuration&lt;/h3&gt; 
&lt;p&gt;Create and configure your &lt;code&gt;~/.claude-code-router/config.json&lt;/code&gt; file. For more details, you can refer to &lt;code&gt;config.example.json&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;config.json&lt;/code&gt; file has several key sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;PROXY_URL&lt;/code&gt;&lt;/strong&gt; (optional): You can set a proxy for API requests, for example: &lt;code&gt;"PROXY_URL": "http://127.0.0.1:7890"&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;LOG&lt;/code&gt;&lt;/strong&gt; (optional): You can enable logging by setting it to &lt;code&gt;true&lt;/code&gt;. The log file will be located at &lt;code&gt;$HOME/.claude-code-router.log&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;APIKEY&lt;/code&gt;&lt;/strong&gt; (optional): You can set a secret key to authenticate requests. When set, clients must provide this key in the &lt;code&gt;Authorization&lt;/code&gt; header (e.g., &lt;code&gt;Bearer your-secret-key&lt;/code&gt;) or the &lt;code&gt;x-api-key&lt;/code&gt; header. Example: &lt;code&gt;"APIKEY": "your-secret-key"&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/strong&gt; (optional): You can set the host address for the server. If &lt;code&gt;APIKEY&lt;/code&gt; is not set, the host will be forced to &lt;code&gt;127.0.0.1&lt;/code&gt; for security reasons to prevent unauthorized access. Example: &lt;code&gt;"HOST": "0.0.0.0"&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;Providers&lt;/code&gt;&lt;/strong&gt;: Used to configure different model providers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;Router&lt;/code&gt;&lt;/strong&gt;: Used to set up routing rules. &lt;code&gt;default&lt;/code&gt; specifies the default model, which will be used for all requests if no other route is configured.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;API_TIMEOUT_MS&lt;/code&gt;&lt;/strong&gt;: Specifies the timeout for API calls in milliseconds.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Here is a comprehensive example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "APIKEY": "your-secret-key",
  "PROXY_URL": "http://127.0.0.1:7890",
  "LOG": true,
  "API_TIMEOUT_MS": 600000,
  "Providers": [
    {
      "name": "openrouter",
      "api_base_url": "https://openrouter.ai/api/v1/chat/completions",
      "api_key": "sk-xxx",
      "models": [
        "google/gemini-2.5-pro-preview",
        "anthropic/claude-sonnet-4",
        "anthropic/claude-3.5-sonnet",
        "anthropic/claude-3.7-sonnet:thinking"
      ],
      "transformer": {
        "use": ["openrouter"]
      }
    },
    {
      "name": "deepseek",
      "api_base_url": "https://api.deepseek.com/chat/completions",
      "api_key": "sk-xxx",
      "models": ["deepseek-chat", "deepseek-reasoner"],
      "transformer": {
        "use": ["deepseek"],
        "deepseek-chat": {
          "use": ["tooluse"]
        }
      }
    },
    {
      "name": "ollama",
      "api_base_url": "http://localhost:11434/v1/chat/completions",
      "api_key": "ollama",
      "models": ["qwen2.5-coder:latest"]
    },
    {
      "name": "gemini",
      "api_base_url": "https://generativelanguage.googleapis.com/v1beta/models/",
      "api_key": "sk-xxx",
      "models": ["gemini-2.5-flash", "gemini-2.5-pro"],
      "transformer": {
        "use": ["gemini"]
      }
    },
    {
      "name": "volcengine",
      "api_base_url": "https://ark.cn-beijing.volces.com/api/v3/chat/completions",
      "api_key": "sk-xxx",
      "models": ["deepseek-v3-250324", "deepseek-r1-250528"],
      "transformer": {
        "use": ["deepseek"]
      }
    },
    {
      "name": "modelscope",
      "api_base_url": "https://api-inference.modelscope.cn/v1/chat/completions",
      "api_key": "",
      "models": ["Qwen/Qwen3-Coder-480B-A35B-Instruct", "Qwen/Qwen3-235B-A22B-Thinking-2507"],
      "transformer": {
        "use": [
          [
            "maxtoken",
            {
              "max_tokens": 65536
            }
          ],
          "enhancetool"
        ],
        "Qwen/Qwen3-235B-A22B-Thinking-2507": {
          "use": ["reasoning"]
        }
      }
    },
    {
      "name": "dashscope",
      "api_base_url": "https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions",
      "api_key": "",
      "models": ["qwen3-coder-plus"],
      "transformer": {
        "use": [
          [
            "maxtoken",
            {
              "max_tokens": 65536
            }
          ],
          "enhancetool"
        ]
      }
    },
    {
      "name": "aihubmix",
      "api_base_url": "https://aihubmix.com/v1/chat/completions",
      "api_key": "sk-",
      "models": [
        "Z/glm-4.5",
        "claude-opus-4-20250514",
        "gemini-2.5-pro"
      ]
    }
  ],
  "Router": {
    "default": "deepseek,deepseek-chat",
    "background": "ollama,qwen2.5-coder:latest",
    "think": "deepseek,deepseek-reasoner",
    "longContext": "openrouter,google/gemini-2.5-pro-preview",
    "longContextThreshold": 60000,
    "webSearch": "gemini,gemini-2.5-flash"
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3. Running Claude Code with the Router&lt;/h3&gt; 
&lt;p&gt;Start Claude Code using the router:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ccr code
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: After modifying the configuration file, you need to restart the service for the changes to take effect:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;ccr restart
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;4. UI Mode (Beta)&lt;/h3&gt; 
&lt;p&gt;For a more intuitive experience, you can use the UI mode to manage your configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ccr ui
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will open a web-based interface where you can easily view and edit your &lt;code&gt;config.json&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/images/ui.png" alt="UI"&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The UI mode is currently in beta. 100% vibe coding: including project initialization, I just created a folder and a project.md document, and all code was generated by ccr + qwen3-coder + gemini(webSearch). If you encounter any issues, please submit an issue on GitHub.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Providers&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;Providers&lt;/code&gt; array is where you define the different model providers you want to use. Each provider object requires:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;name&lt;/code&gt;: A unique name for the provider.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;api_base_url&lt;/code&gt;: The full API endpoint for chat completions.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;api_key&lt;/code&gt;: Your API key for the provider.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;models&lt;/code&gt;: A list of model names available from this provider.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;transformer&lt;/code&gt; (optional): Specifies transformers to process requests and responses.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Transformers&lt;/h4&gt; 
&lt;p&gt;Transformers allow you to modify the request and response payloads to ensure compatibility with different provider APIs.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Global Transformer&lt;/strong&gt;: Apply a transformer to all models from a provider. In this example, the &lt;code&gt;openrouter&lt;/code&gt; transformer is applied to all models under the &lt;code&gt;openrouter&lt;/code&gt; provider.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "name": "openrouter",
  "api_base_url": "https://openrouter.ai/api/v1/chat/completions",
  "api_key": "sk-xxx",
  "models": [
    "google/gemini-2.5-pro-preview",
    "anthropic/claude-sonnet-4",
    "anthropic/claude-3.5-sonnet"
  ],
  "transformer": { "use": ["openrouter"] }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Model-Specific Transformer&lt;/strong&gt;: Apply a transformer to a specific model. In this example, the &lt;code&gt;deepseek&lt;/code&gt; transformer is applied to all models, and an additional &lt;code&gt;tooluse&lt;/code&gt; transformer is applied only to the &lt;code&gt;deepseek-chat&lt;/code&gt; model.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "name": "deepseek",
  "api_base_url": "https://api.deepseek.com/chat/completions",
  "api_key": "sk-xxx",
  "models": ["deepseek-chat", "deepseek-reasoner"],
  "transformer": {
    "use": ["deepseek"],
    "deepseek-chat": { "use": ["tooluse"] }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Passing Options to a Transformer&lt;/strong&gt;: Some transformers, like &lt;code&gt;maxtoken&lt;/code&gt;, accept options. To pass options, use a nested array where the first element is the transformer name and the second is an options object.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "name": "siliconflow",
  "api_base_url": "https://api.siliconflow.cn/v1/chat/completions",
  "api_key": "sk-xxx",
  "models": ["moonshotai/Kimi-K2-Instruct"],
  "transformer": {
    "use": [
      [
        "maxtoken",
        {
          "max_tokens": 16384
        }
      ]
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Available Built-in Transformers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;deepseek&lt;/code&gt;: Adapts requests/responses for DeepSeek API.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;gemini&lt;/code&gt;: Adapts requests/responses for Gemini API.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;openrouter&lt;/code&gt;: Adapts requests/responses for OpenRouter API.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;groq&lt;/code&gt;: Adapts requests/responses for groq API.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;maxtoken&lt;/code&gt;: Sets a specific &lt;code&gt;max_tokens&lt;/code&gt; value.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tooluse&lt;/code&gt;: Optimizes tool usage for certain models via &lt;code&gt;tool_choice&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;gemini-cli&lt;/code&gt; (experimental): Unofficial support for Gemini via Gemini CLI &lt;a href="https://gist.github.com/musistudio/1c13a65f35916a7ab690649d3df8d1cd"&gt;gemini-cli.js&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;reasoning&lt;/code&gt;: Used to process the &lt;code&gt;reasoning_content&lt;/code&gt; field.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sampling&lt;/code&gt;: Used to process sampling information fields such as &lt;code&gt;temperature&lt;/code&gt;, &lt;code&gt;top_p&lt;/code&gt;, &lt;code&gt;top_k&lt;/code&gt;, and &lt;code&gt;repetition_penalty&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;enhancetool&lt;/code&gt;: Adds a layer of error tolerance to the tool call parameters returned by the LLM (this will cause the tool call information to no longer be streamed).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cleancache&lt;/code&gt;: Clears the &lt;code&gt;cache_control&lt;/code&gt; field from requests.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vertex-gemini&lt;/code&gt;: Handles the Gemini API using Vertex authentication.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Custom Transformers:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can also create your own transformers and load them via the &lt;code&gt;transformers&lt;/code&gt; field in &lt;code&gt;config.json&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "transformers": [
    {
      "path": "$HOME/.claude-code-router/plugins/gemini-cli.js",
      "options": {
        "project": "xxx"
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Router&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;Router&lt;/code&gt; object defines which model to use for different scenarios:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;default&lt;/code&gt;: The default model for general tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;background&lt;/code&gt;: A model for background tasks. This can be a smaller, local model to save costs.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;think&lt;/code&gt;: A model for reasoning-heavy tasks, like Plan Mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;longContext&lt;/code&gt;: A model for handling long contexts (e.g., &amp;gt; 60K tokens).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;longContextThreshold&lt;/code&gt; (optional): The token count threshold for triggering the long context model. Defaults to 60000 if not specified.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;webSearch&lt;/code&gt;: Used for handling web search tasks and this requires the model itself to support the feature. If you're using openrouter, you need to add the &lt;code&gt;:online&lt;/code&gt; suffix after the model name.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also switch models dynamically in Claude Code with the &lt;code&gt;/model&lt;/code&gt; command: &lt;code&gt;/model provider_name,model_name&lt;/code&gt; Example: &lt;code&gt;/model openrouter,anthropic/claude-3.5-sonnet&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;Custom Router&lt;/h4&gt; 
&lt;p&gt;For more advanced routing logic, you can specify a custom router script via the &lt;code&gt;CUSTOM_ROUTER_PATH&lt;/code&gt; in your &lt;code&gt;config.json&lt;/code&gt;. This allows you to implement complex routing rules beyond the default scenarios.&lt;/p&gt; 
&lt;p&gt;In your &lt;code&gt;config.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "CUSTOM_ROUTER_PATH": "$HOME/.claude-code-router/custom-router.js"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The custom router file must be a JavaScript module that exports an &lt;code&gt;async&lt;/code&gt; function. This function receives the request object and the config object as arguments and should return the provider and model name as a string (e.g., &lt;code&gt;"provider_name,model_name"&lt;/code&gt;), or &lt;code&gt;null&lt;/code&gt; to fall back to the default router.&lt;/p&gt; 
&lt;p&gt;Here is an example of a &lt;code&gt;custom-router.js&lt;/code&gt; based on &lt;code&gt;custom-router.example.js&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// $HOME/.claude-code-router/custom-router.js

/**
 * A custom router function to determine which model to use based on the request.
 *
 * @param {object} req - The request object from Claude Code, containing the request body.
 * @param {object} config - The application's config object.
 * @returns {Promise&amp;lt;string|null&amp;gt;} - A promise that resolves to the "provider,model_name" string, or null to use the default router.
 */
module.exports = async function router(req, config) {
  const userMessage = req.body.messages.find((m) =&amp;gt; m.role === "user")?.content;

  if (userMessage &amp;amp;&amp;amp; userMessage.includes("explain this code")) {
    // Use a powerful model for code explanation
    return "openrouter,anthropic/claude-3.5-sonnet";
  }

  // Fallback to the default router configuration
  return null;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🤖 GitHub Actions&lt;/h2&gt; 
&lt;p&gt;Integrate Claude Code Router into your CI/CD pipeline. After setting up &lt;a href="https://docs.anthropic.com/en/docs/claude-code/github-actions"&gt;Claude Code Actions&lt;/a&gt;, modify your &lt;code&gt;.github/workflows/claude.yaml&lt;/code&gt; to use the router:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;name: Claude Code

on:
  issue_comment:
    types: [created]
  # ... other triggers

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' &amp;amp;&amp;amp; contains(github.event.comment.body, '@claude')) ||
      # ... other conditions
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Prepare Environment
        run: |
          curl -fsSL https://bun.sh/install | bash
          mkdir -p $HOME/.claude-code-router
          cat &amp;lt;&amp;lt; 'EOF' &amp;gt; $HOME/.claude-code-router/config.json
          {
            "log": true,
            "OPENAI_API_KEY": "${{ secrets.OPENAI_API_KEY }}",
            "OPENAI_BASE_URL": "https://api.deepseek.com",
            "OPENAI_MODEL": "deepseek-chat"
          }
          EOF
        shell: bash

      - name: Start Claude Code Router
        run: |
          nohup ~/.bun/bin/bunx @musistudio/claude-code-router@1.0.8 start &amp;amp;
        shell: bash

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        env:
          ANTHROPIC_BASE_URL: http://localhost:3456
        with:
          anthropic_api_key: "any-string-is-ok"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This setup allows for interesting automations, like running tasks during off-peak hours to reduce API costs.&lt;/p&gt; 
&lt;h2&gt;📝 Further Reading&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/en/project-motivation-and-how-it-works.md"&gt;Project Motivation and How It Works&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/en/maybe-we-can-do-more-with-the-route.md"&gt;Maybe We Can Do More with the Router&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;❤️ Support &amp;amp; Sponsoring&lt;/h2&gt; 
&lt;p&gt;If you find this project helpful, please consider sponsoring its development. Your support is greatly appreciated!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://ko-fi.com/F1F31GN2GM"&gt;&lt;img src="https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true" alt="ko-fi"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/images/alipay.jpg" width="200" alt="Alipay"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/images/wechat.jpg" width="200" alt="WeChat Pay"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Our Sponsors&lt;/h3&gt; 
&lt;p&gt;A huge thank you to all our sponsors for their generous support!&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://aihubmix.com/" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/images/sponsors/aihubmix.png" width="100" alt="aihubmix"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;@Simon Leischnig&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/duanshuaimin"&gt;@duanshuaimin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vrgitadmin"&gt;@vrgitadmin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*o&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ceilwoo"&gt;@ceilwoo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*说&lt;/li&gt; 
 &lt;li&gt;@*更&lt;/li&gt; 
 &lt;li&gt;@K*g&lt;/li&gt; 
 &lt;li&gt;@R*R&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobleer"&gt;@bobleer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*苗&lt;/li&gt; 
 &lt;li&gt;@*划&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Clarence-pan"&gt;@Clarence-pan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carter003"&gt;@carter003&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@S*r&lt;/li&gt; 
 &lt;li&gt;@*晖&lt;/li&gt; 
 &lt;li&gt;@*敏&lt;/li&gt; 
 &lt;li&gt;@Z*z&lt;/li&gt; 
 &lt;li&gt;@*然&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cluic"&gt;@cluic&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*苗&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PromptExpert"&gt;@PromptExpert&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*应&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yusnake"&gt;@yusnake&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*飞&lt;/li&gt; 
 &lt;li&gt;@董*&lt;/li&gt; 
 &lt;li&gt;@*汀&lt;/li&gt; 
 &lt;li&gt;@*涯&lt;/li&gt; 
 &lt;li&gt;@*:-）&lt;/li&gt; 
 &lt;li&gt;@**磊&lt;/li&gt; 
 &lt;li&gt;@*琢&lt;/li&gt; 
 &lt;li&gt;@*成&lt;/li&gt; 
 &lt;li&gt;@Z*o&lt;/li&gt; 
 &lt;li&gt;@*琨&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/congzhangzh"&gt;@congzhangzh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*_&lt;/li&gt; 
 &lt;li&gt;@Z*m&lt;/li&gt; 
 &lt;li&gt;@*鑫&lt;/li&gt; 
 &lt;li&gt;@c*y&lt;/li&gt; 
 &lt;li&gt;@*昕&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;(If your name is masked, please contact me via my homepage email to update it with your GitHub username.)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>devlikeapro/waha</title>
      <link>https://github.com/devlikeapro/waha</link>
      <description>&lt;p&gt;WAHA - WhatsApp HTTP API (REST API) that you can configure in a click! 3 engines: WEBJS (browser based), NOWEB (websocket nodejs), GOWS (websocket go)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WAHA&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/devlikeapro/waha/core/logo.png" style="border-radius: 50%" width="150"&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WAHA&lt;/strong&gt; - &lt;strong&gt;W&lt;/strong&gt;hats&lt;strong&gt;A&lt;/strong&gt;pp &lt;strong&gt;H&lt;/strong&gt;TTP &lt;strong&gt;A&lt;/strong&gt;PI (REST API) that you can install on your own server and run in less than 5 minutes!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/devlikeapro/waha"&gt;&lt;img src="https://img.shields.io/docker/pulls/devlikeapro/waha" alt="Docker Pulls"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://waha.devlike.pro/"&gt;https://waha.devlike.pro/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dashboard Example: &lt;a href="https://waha.devlike.pro/dashboard"&gt;https://waha.devlike.pro/dashboard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Swagger Example: &lt;a href="https://waha.devlike.pro/swagger"&gt;https://waha.devlike.pro/swagger&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Tables of Contents&lt;/h1&gt; 
&lt;!-- toc --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#quick-start"&gt;Quick start&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#send-your-first-message"&gt;Send your first message&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#1-download-image"&gt;1. Download image&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#2-run-whatsapp-http-api"&gt;2. Run WhatsApp HTTP API&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#3-start-a-new-session"&gt;3. Start a new session&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#4-get-and-scan-qr"&gt;4. Get and scan QR&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#5-get-the-screenshot"&gt;5. Get the screenshot&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#6-send-a-text-message"&gt;6. Send a text message&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#what-is-next"&gt;What is next?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#development"&gt;Development&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#start-the-project"&gt;Start the project&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- tocstop --&gt; 
&lt;h1&gt;Quick start&lt;/h1&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;Only thing that you must have - installed docker. Please follow the original instruction &lt;a href="https://docs.docker.com/get-docker/" target="_blank" rel="noopener"&gt;how to install docker -&amp;gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you are ready - come back and follows the below steps to send the first text message to WhatsApp via HTTP API!&lt;/p&gt; 
&lt;h2&gt;Send your first message&lt;/h2&gt; 
&lt;p&gt;Let's go over steps that allow you to send your first text message via WhatsApp HTTP API!&lt;/p&gt; 
&lt;h3&gt;1. Download image&lt;/h3&gt; 
&lt;p&gt;Assuming you have installed &lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt;, let's download the image.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull devlikeapro/waha
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker login -u devlikeapro -p {KEY}
docker pull devlikeapro/waha-plus
docker logout
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about how to get &lt;code&gt;PASSWORD&lt;/code&gt; for &lt;a href="https://waha.devlike.pro/docs/how-to/waha-plus/"&gt;&lt;strong&gt;➕ WAHA Plus&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;2. Run WhatsApp HTTP API&lt;/h3&gt; 
&lt;p&gt;Run WhatsApp HTTP API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -it --rm -p 3000:3000/tcp --name waha devlikeapro/waha

# It prints logs and the last line must be
# WhatsApp HTTP API is running on: http://[::1]:3000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the link in your browser &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt; and you'll see API documentation (Swagger).&lt;/p&gt; 
&lt;h3&gt;3. Start a new session&lt;/h3&gt; 
&lt;p&gt;To start a new session you should have your mobile phone with installed WhatsApp application close to you.&lt;/p&gt; 
&lt;p&gt;Please go and read how what we'll need to a bit later: &lt;a href="https://faq.whatsapp.com/381777293328336/?helpref=hc_fnav" target="_blank"&gt; How to log in - the instruction on WhatsApp site &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;When your ready - find &lt;code&gt;POST /api/sessions&lt;/code&gt;, click on &lt;strong&gt;Try it out&lt;/strong&gt;, then &lt;strong&gt;Execute&lt;/strong&gt; a bit below.&lt;/p&gt; 
&lt;p&gt;The example payload:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "name": "default"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By using the request with &lt;code&gt;name&lt;/code&gt; values you can start multiple session (WhatsApp accounts) inside the single docker container in Plus&lt;/p&gt; 
&lt;h3&gt;4. Get and scan QR&lt;/h3&gt; 
&lt;p&gt;Find &lt;code&gt;GET /api/screenshot&lt;/code&gt; and execute it, it shows you QR code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Scan the QR with your cell phone's WhatsApp app.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;5. Get the screenshot&lt;/h3&gt; 
&lt;p&gt;Execute &lt;code&gt;GET /api/screenshot&lt;/code&gt; after a few seconds after scanning the QR - it'll show you the screenshot of you Whatsapp instance. If you can get the actual screenshot - then you're ready to start sending messages!&lt;/p&gt; 
&lt;h3&gt;6. Send a text message&lt;/h3&gt; 
&lt;p&gt;Let's send a text message - find &lt;code&gt;POST /api/sendText&lt;/code&gt; in &lt;a href="http://localhost:3000/"&gt;swagger&lt;/a&gt; and change &lt;code&gt;chatId&lt;/code&gt; this way: use a phone international phone number without &lt;code&gt;+&lt;/code&gt; symbol and add &lt;code&gt;@c.us&lt;/code&gt; at the end.&lt;/p&gt; 
&lt;p&gt;For phone number &lt;code&gt;12132132131&lt;/code&gt; the &lt;code&gt;chatId&lt;/code&gt; is &lt;code&gt;12132132131@c.us&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The example payload:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "chatId": "12132132130@c.us",
  "text": "Hi there!",
  "session": "default"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also, you can use &lt;code&gt;curl&lt;/code&gt; and send POST request like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Phone without +
export PHONE=12132132130
curl -d "{\"chatId\": \"${PHONE}@c.us\", \"text\": \"Hello from WhatsApp HTTP API\" }" -H "Content-Type: application/json" -X POST http://localhost:3000/api/sendText
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What is next?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://waha.devlike.pro/docs/overview/introduction/"&gt;Go and read the full documentation!&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Development&lt;/h1&gt; 
&lt;h2&gt;Start the project&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository&lt;/li&gt; 
 &lt;li&gt;Make sure you're using node&amp;gt;=22 (check &lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/.nvmrc"&gt;.nvmrc&lt;/a&gt; to get the version)&lt;/li&gt; 
 &lt;li&gt;Run the following commands:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install dependencies
yarn install
# Fetch and compile proto files
yarn gows:proto
# Run
yarn start
# open http://localhost:3000
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Kilo-Org/kilocode</title>
      <link>https://github.com/Kilo-Org/kilocode</link>
      <description>&lt;p&gt;Open Source AI coding assistant for planning, building, and fixing code. We're a superset of Roo, Cline, and our own features. Follow us: kilocode.ai/social&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code"&gt;&lt;img src="https://img.shields.io/visual-studio-marketplace/v/kilocode.Kilo-Code.svg?label=VS%20Code%20Marketplace" alt="VS Code Marketplace"&gt;&lt;/a&gt; 
 &lt;!--&lt;a href="https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code"&gt;&lt;img src="https://img.shields.io/badge/Get%20$20%20of%20free%20tokens-green?logo=claude&amp;logoColor=white" alt="Get $20 of tokens for free"&gt;&lt;/a&gt;--&gt; &lt;a href="https://x.com/kilo_code"&gt;&lt;img src="https://img.shields.io/twitter/follow/kilo_code?style=flat&amp;amp;logo=x&amp;amp;color=555" alt="X (Twitter)"&gt;&lt;/a&gt; &lt;a href="https://blog.kilocode.ai"&gt;&lt;img src="https://img.shields.io/badge/Blog-555?style=flat&amp;amp;logo=substack&amp;amp;logoColor=white" alt="Substack Blog"&gt;&lt;/a&gt; &lt;a href="https://kilocode.ai/discord"&gt;&lt;img src="https://img.shields.io/discord/1349288496988160052?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord"&gt;&lt;/a&gt; &lt;a href="https://www.reddit.com/r/kilocode/"&gt;&lt;img src="https://img.shields.io/reddit/subreddit-subscribers/kilocode?style=flat&amp;amp;logo=reddit&amp;amp;logoColor=white" alt="Reddit"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;🚀 Kilo Code&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Open-source VS Code AI agent. Merged features from &lt;a href="https://github.com/RooVetGit/Roo-Code"&gt;Roo Code&lt;/a&gt; and &lt;a href="https://github.com/cline/cline"&gt;Cline&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;✨ Generate code from natural language&lt;/li&gt; 
 &lt;li&gt;✅ Checks its own work&lt;/li&gt; 
 &lt;li&gt;🧪 Run terminal commands&lt;/li&gt; 
 &lt;li&gt;🌐 Automate the browser&lt;/li&gt; 
 &lt;li&gt;🤖 Latest AI models&lt;/li&gt; 
 &lt;li&gt;🎁 API keys optional&lt;/li&gt; 
 &lt;li&gt;💡 &lt;strong&gt;$20 free credits for Gemini 2.5 Pro, Claude 4 Sonnet &amp;amp; Opus, and GPT-4.1&lt;/strong&gt;&lt;br&gt;Share feedback and earn more credits!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Kilo-Org/kilocode/refs/heads/main/kilo.gif" width="100%"&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://kilocode.ai/vscode-marketplace?utm_source=Readme"&gt;VS Code Marketplace&lt;/a&gt; (download)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kilocode.ai"&gt;Official KiloCode.ai Home page&lt;/a&gt; (learn more)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Code Generation:&lt;/strong&gt; Generate code using natural language.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Task Automation:&lt;/strong&gt; Automate repetitive coding tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automated Refactoring:&lt;/strong&gt; Refactor and improve existing code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Server Marketplace&lt;/strong&gt;: Easily find, and use MCP servers to extend the agent capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi Mode&lt;/strong&gt;: Plan with Architect, Code with Coder, and Debug with Debugger, and make your own custom modes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to get started with Kilo Code&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the Kilo Code extension from the &lt;a href="https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code"&gt;VS Code Marketplace&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Log in with your Google Account to get $20 in free Claude 4 Sonnet &amp;amp; Opus credits.&lt;/li&gt; 
 &lt;li&gt;Start using the extension. Here's a video to help you get started (just click on the image below and you'll be redirected to YouTube):&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/pqGfYXgrhig"&gt;&lt;img src="https://img.youtube.com/vi/pqGfYXgrhig/maxresdefault.jpg" alt="Watch the video"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Difference between Roo Code and Cline&lt;/h2&gt; 
&lt;p&gt;We're doing our best to combine the best of both worlds. Kilo Code combines all features of Cline, Roo, and adds a few of our own additions. It has the best features of both, and we're working on making it even better!&lt;/p&gt; 
&lt;p&gt;No need to fiddle with API keys, Kilo Code ships with the latest AI models plugged in, including Claude 4 Sonnet and Opus and Gemini 2.5 Pro.&lt;/p&gt; 
&lt;p&gt;Kilo Code is a direct fork from Roo Code, but also includes the following features from Cline (and more):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MCP Server Marketplace: Easily find, and use MCP servers to extend the agent capabilities.&lt;/li&gt; 
 &lt;li&gt;System notifications: Get notified when the agent is done with a task.&lt;/li&gt; 
 &lt;li&gt;Easy model connection: with bigger free tier.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Extension Development&lt;/h2&gt; 
&lt;p&gt;For details on building and developing the extension, see &lt;a href="https://raw.githubusercontent.com/Kilo-Org/kilocode/main/DEVELOPMENT.md"&gt;DEVELOPMENT.md&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RSSNext/Folo</title>
      <link>https://github.com/RSSNext/Folo</link>
      <description>&lt;p&gt;🧡 Follow everything in one place&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://github.com/RSSNext/Folo"&gt; &lt;img src="https://github.com/RSSNext/Folo/raw/refs/heads/dev/apps/desktop/layer/renderer/public/icon.svg?sanitize=true" alt="Logo" width="80" height="80"&gt; &lt;/a&gt; 
 &lt;h3&gt;Folo&lt;/h3&gt; 
 &lt;p&gt; &lt;img src="https://github.com/user-attachments/assets/cbe924f2-d8b0-48b0-814e-7c06ccb1911c" height="60"&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://github.com/user-attachments/assets/6997a236-3df3-49d5-98a4-514f6d1a02c4" height="60"&gt; &lt;br&gt; &lt;br&gt; &lt;a href="https://github.com/RSSNext/Folo/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/RSSNext/Follow?color=ffcb47&amp;amp;labelColor=black&amp;amp;style=flat-square&amp;amp;logo=github&amp;amp;label=Stars"&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/RSSNext/Folo?style=flat-square&amp;amp;logo=github&amp;amp;label=Contributors&amp;amp;labelColor=black"&gt;&lt;/a&gt; &lt;a href="https://status.follow.is/" target="_blank"&gt;&lt;img src="https://status.follow.is/api/badge/18/uptime?color=%2344CC10&amp;amp;labelColor=black&amp;amp;style=flat-square"&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/RSSNext/Folo/total?color=369eff&amp;amp;labelColor=black&amp;amp;logo=github&amp;amp;style=flat-square&amp;amp;label=Downloads"&gt;&lt;/a&gt; &lt;a href="https://x.com/intent/follow?screen_name=folo_is"&gt;&lt;img src="https://img.shields.io/badge/Follow-blue?color=1d9bf0&amp;amp;logo=x&amp;amp;labelColor=black&amp;amp;style=flat-square"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/followapp" target="_blank"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2Ffollowapp%3Fwith_counts%3Dtrue&amp;amp;query=approximate_member_count&amp;amp;color=5865F2&amp;amp;label=Discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square"&gt;&lt;/a&gt; &lt;br&gt; &lt;a href="https://github.com/RSSNext/Folo/releases"&gt;&lt;img src="https://img.shields.io/github/package-json/v/RSSNext/Folo?filename=%2Fapps%2Fmobile%2Fpackage.json&amp;amp;style=flat-square&amp;amp;logo=folo&amp;amp;logoColor=white&amp;amp;label=Mobile&amp;amp;labelColor=black&amp;amp;color=FF5C00"&gt;&lt;/a&gt; &lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604"&gt;&lt;img src="https://img.shields.io/itunes/v/6739802604?style=flat-square&amp;amp;logo=apple&amp;amp;label=App%20Store&amp;amp;color=FF5C00&amp;amp;labelColor=black"&gt;&lt;/a&gt; &lt;a href="https://play.google.com/store/apps/details?id=is.follow" target="_blank"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fplay.cuzi.workers.dev%2Fplay%3Fi%3Dis.follow%26gl%3DUS%26hl%3Den%26l%3DAndroid%26m%3D%24version&amp;amp;style=flat-square&amp;amp;logo=google-play&amp;amp;label=Google%20Play&amp;amp;labelColor=black&amp;amp;color=FF5C00"&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/releases"&gt;&lt;img src="https://img.shields.io/github/package-json/v/RSSNext/Folo?filename=%2Fapps%2Fdesktop%2Fpackage.json&amp;amp;style=flat-square&amp;amp;logo=folo&amp;amp;logoColor=white&amp;amp;label=Desktop&amp;amp;labelColor=black&amp;amp;color=FF5C00"&gt;&lt;/a&gt; &lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Ffolo-mac-app-store-version.rss3.workers.dev%2F&amp;amp;query=version&amp;amp;prefix=v&amp;amp;style=flat-square&amp;amp;logo=apple&amp;amp;label=Mac%20App%20Store&amp;amp;labelColor=black&amp;amp;color=FF5C00&amp;amp;cacheSeconds=3600"&gt;&lt;/a&gt; &lt;a href="https://apps.microsoft.com/detail/9nvfzpv0v0ht?mode=direct"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Ffolo-microsoft-store-version.rss3.workers.dev%2F&amp;amp;query=version&amp;amp;style=flat-square&amp;amp;logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIj48cGF0aCBmaWxsPSIjZmZmIiBkPSJNMyAzaDguNTN2OC41M0gzek0xMi40NjkgM2g4LjUzdjguNTNoLTguNTN6TTMgMTIuNDdoOC41M1YyMUgzek0xMi40NjkgMTIuNDdoOC41M1YyMWgtOC41M3oiLz48L3N2Zz4%3D&amp;amp;logoColor=white&amp;amp;label=Microsoft%20Store&amp;amp;labelColor=black&amp;amp;color=FF5C00&amp;amp;cacheSeconds=3600&amp;amp;prefix=v"&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; 
  &lt;!-- &lt;a href="https://github.com/RSSNext/Folo" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/59b957fb-59ed-4ef0-994e-f6a402a6fe2b" alt="GitHub Trending" height="55"/&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt; --&gt; &lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/35747716-28bf-413a-822b-aa49d49f1aa0" alt="Folo Mobile" width="52%"&gt;&lt;/a&gt; &lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/198a0165-b8c9-45c1-9116-b473a13a8d0c" alt="Folo Desktop" width="46%"&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;As they say, your thoughts are what you read—and we’ve been consuming noisy feeds for too long! Folo organizes content into one timeline, keeping you updated on what matters, noise-free. Share lists, explore collections, and enjoy distraction-free browsing.&lt;/p&gt; 
&lt;h2&gt;👋🏻 Getting Started &amp;amp; Join Our Community&lt;/h2&gt; 
&lt;p&gt;Whether for users or professional developers, Folo will be your open information playground. Please be aware that Folo is currently under active development, and feedback is welcome for any &lt;a href="https://github.com/RSSNext/Folo/issues"&gt;issue&lt;/a&gt; encountered.&lt;/p&gt; 
&lt;p&gt;Feel free to try it using the following methods:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Operating System&lt;/th&gt; 
   &lt;th align="left"&gt;Source&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Any&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://app.folo.is" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/51ef7800-b683-4493-83e8-eb4752366997" alt="Browser" height="55"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;iOS&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/a94d8698-2a11-4f43-9b0a-b756b17b61f7" alt="App Store" height="55"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Android&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://play.google.com/store/apps/details?id=is.follow" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/0d178e0b-3ace-4f75-bbde-ab3c0a416ce8" alt="Google Play" height="55"&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/releases/latest" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc" alt="App Store" height="55"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;macOS&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/0d47f902-7fa3-494e-ad28-9ab11af5e6d4" alt="Microsoft Store" height="55"&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/releases/latest" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc" alt="App Store" height="55"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Windows&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://apps.microsoft.com/detail/9nvfzpv0v0ht?mode=direct" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/b3112bab-9dd0-4893-9488-890dcb368f70" alt="Microsoft Store" height="55"&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/releases/latest" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc" alt="App Store" height="55"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Linux&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/RSSNext/Folo/releases/latest" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc" alt="App Store" height="55"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;You can also install using the following methods maintained by our community:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you are using Arch Linux, you can install package &lt;a href="https://aur.archlinux.org/packages/folo-appimage"&gt;folo-appimage&lt;/a&gt; that maintained by &lt;a href="https://github.com/ttimochan"&gt;timochan&lt;/a&gt; and &lt;a href="https://github.com/grtsinry43"&gt;grtsinry43&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you are using Nix, you can install package &lt;a href="https://github.com/NixOS/nixpkgs/raw/master/pkgs/by-name/fo/follow/package.nix"&gt;follow&lt;/a&gt; that maintained by &lt;a href="https://github.com/iosmanthus"&gt;iosmanthus&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you are using macOS with &lt;a href="https://brew.sh"&gt;Homebrew&lt;/a&gt;, you can install cask &lt;a href="https://formulae.brew.sh/cask/folo"&gt;folo&lt;/a&gt; that maintained by &lt;a href="https://github.com/realSunyz"&gt;realSunyz&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you are using Windows with &lt;a href="https://scoop.sh"&gt;Scoop&lt;/a&gt;, you can install manifest &lt;a href="https://github.com/cscnk52/cetacea/raw/master/bucket/folo.json"&gt;folo&lt;/a&gt; that maintained by &lt;a href="https://github.com/cscnk52"&gt;cscnk52&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;&lt;a href="https://discord.gg/followapp"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2Ffollowapp%3Fwith_counts%3Dtrue&amp;amp;query=approximate_member_count&amp;amp;color=5865F2&amp;amp;label=Discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="Discord"&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align="left"&gt;Join our Discord server to connect with developers, request features, and receive support.&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://x.com/intent/follow?screen_name=folo_is"&gt;&lt;img src="https://img.shields.io/badge/any_text-Follow-blue?color=2CA5E0&amp;amp;label=_&amp;amp;logo=x&amp;amp;labelColor=black&amp;amp;style=flat-square" alt=""&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Follow us on X/Twitter for product updates and to join in on reward activities.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Star Us&lt;/strong&gt;, You will receive all release notifications from GitHub without any delay ~&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/a08f9437-b24c-4388-8f01-2826e09eeaf2" alt="Image"&gt;&lt;/p&gt; 
&lt;a href="https://next.ossinsight.io/widgets/official/compose-last-28-days-stats?repo_id=783512367" target="_blank" style="display: block" align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=783512367&amp;amp;image_size=auto&amp;amp;color_scheme=dark" width="655" height="auto"&gt; 
  &lt;img alt="Performance Stats of RSSNext/Folo - Last 28 days" src="https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=783512367&amp;amp;image_size=auto&amp;amp;color_scheme=light" width="655" height="auto"&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;h3&gt;Customized Information Hub&lt;/h3&gt; 
&lt;p&gt;Subscribe to a vast range of feeds and curated lists. Curate your favorites and keep track of what matters most to you.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/11dc7d21-f5d8-4e41-9269-24fc352aa02b" alt=""&gt;&lt;/p&gt; 
&lt;h3&gt;AI At Your Fingertips&lt;/h3&gt; 
&lt;p&gt;A smarter and more efficient browsing with AI-powered features like translation, summary, and more.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/37cf4f2f-4c5e-4775-86e8-2fa1a1b2ecf5" alt=""&gt;&lt;/p&gt; 
&lt;h3&gt;Dynamic Content Support&lt;/h3&gt; 
&lt;p&gt;Because we know content is more than just text. From articles to videos, images to audio — Folo gets it all covered.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/d1379fd6-8767-476e-b0dc-d61753715e26" alt=""&gt;&lt;/p&gt; 
&lt;h3&gt;$POWER An Ownership Economy&lt;/h3&gt; 
&lt;p&gt;Tip creators across instantly with $POWER, support content you love, and unlock value in your own work. Your content, your power.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/23bbcd63-45ca-40c8-83ef-96bd1100b701" alt=""&gt;&lt;/p&gt; 
&lt;h3&gt;More Than Just An App&lt;/h3&gt; 
&lt;p&gt;This isn’t just another app. Folo is a community — introducing a new era of openness and community-driven experience.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/62004a04-eaea-4f5d-bfbf-4e68b6b90286" alt=""&gt;&lt;/p&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;You are welcome to join the open source community to build together, please check our &lt;a href="https://raw.githubusercontent.com/RSSNext/Folo/dev/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;🔏 Code signing policy&lt;/h2&gt; 
&lt;p&gt;Folo for Windows uses free code signing provided by &lt;a href="https://about.signpath.io/"&gt;SignPath.io&lt;/a&gt;, certificate by &lt;a href="https://signpath.org/"&gt;SignPath Foundation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Folo for macOS and iOS are signed and notarized by &lt;a href="https://developer.apple.com/programs/"&gt;Apple Developer Program&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All released files are verified with &lt;a href="https://github.com/RSSNext/Folo/attestations"&gt;GitHub artifact attestations&lt;/a&gt; to ensure their provenance and integrity.&lt;/p&gt; 
&lt;h2&gt;📝 License&lt;/h2&gt; 
&lt;p&gt;Folo is licensed under the GNU General Public License version 3 with the addition of the following special exception:&lt;/p&gt; 
&lt;p&gt;All content in the &lt;code&gt;icons/mgc&lt;/code&gt; directory is copyrighted by &lt;a href="https://mgc.mingcute.com/"&gt;https://mgc.mingcute.com/&lt;/a&gt; and cannot be redistributed.&lt;/p&gt; 
&lt;p&gt;All content in the &lt;code&gt;lottie&lt;/code&gt; directory is distributed under the &lt;a href="https://lottiefiles.com/page/license"&gt;Lottie Simple License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>humanlayer/12-factor-agents</title>
      <link>https://github.com/humanlayer/12-factor-agents</link>
      <description>&lt;p&gt;What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;12-Factor Agents - Principles for building reliable LLM applications&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt; &lt;img src="https://img.shields.io/badge/Code-Apache%202.0-blue.svg?sanitize=true" alt="Code License: Apache 2.0"&gt;&lt;/a&gt; 
 &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/"&gt; &lt;img src="https://img.shields.io/badge/Content-CC%20BY--SA%204.0-lightgrey.svg?sanitize=true" alt="Content License: CC BY-SA 4.0"&gt;&lt;/a&gt; 
 &lt;a href="https://humanlayer.dev/discord"&gt; &lt;img src="https://img.shields.io/badge/chat-discord-5865F2" alt="Discord Server"&gt;&lt;/a&gt; 
 &lt;a href="https://www.youtube.com/watch?v=8kMaTybvDUw"&gt; &lt;img src="https://img.shields.io/badge/aidotengineer-conf_talk_(17m)-white" alt="YouTube
Deep Dive"&gt;&lt;/a&gt; 
 &lt;a href="https://www.youtube.com/watch?v=yxJDyQ8v6P0"&gt; &lt;img src="https://img.shields.io/badge/youtube-deep_dive-crimson" alt="YouTube
Deep Dive"&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;In the spirit of &lt;a href="https://12factor.net/"&gt;12 Factor Apps&lt;/a&gt;&lt;/em&gt;. &lt;em&gt;The source for this project is public at &lt;a href="https://github.com/humanlayer/12-factor-agents"&gt;https://github.com/humanlayer/12-factor-agents&lt;/a&gt;, and I welcome your feedback and contributions. Let's figure this out together!&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Missed the AI Engineer World's Fair? &lt;a href="https://www.youtube.com/watch?v=8kMaTybvDUw"&gt;Catch the talk here&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Looking for Context Engineering? &lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;Jump straight to factor 3&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Want to contribute to &lt;code&gt;npx/uvx create-12-factor-agent&lt;/code&gt; - check out &lt;a href="https://github.com/humanlayer/12-factor-agents/discussions/61"&gt;the discussion thread&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;img referrerpolicy="no-referrer-when-downgrade" src="https://static.scarf.sh/a.png?x-pxid=2acad99a-c2d9-48df-86f5-9ca8061b7bf9"&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/humanlayer/12-factor-agents/main/#visual-nav"&gt;&lt;img width="907" alt="Screenshot 2025-04-03 at 2 49 07 PM" src="https://github.com/user-attachments/assets/23286ad8-7bef-4902-b371-88ff6a22e998"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Hi, I'm Dex. I've been &lt;a href="https://youtu.be/8bIHcttkOTE"&gt;hacking&lt;/a&gt; on &lt;a href="https://theouterloop.substack.com"&gt;AI agents&lt;/a&gt; for &lt;a href="https://humanlayer.dev"&gt;a while&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I've tried every agent framework out there&lt;/strong&gt;, from the plug-and-play crew/langchains to the "minimalist" smolagents of the world to the "production grade" langraph, griptape, etc.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I've talked to a lot of really strong founders&lt;/strong&gt;, in and out of YC, who are all building really impressive things with AI. Most of them are rolling the stack themselves. I don't see a lot of frameworks in production customer-facing agents.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I've been surprised to find&lt;/strong&gt; that most of the products out there billing themselves as "AI Agents" are not all that agentic. A lot of them are mostly deterministic code, with LLM steps sprinkled in at just the right points to make the experience truly magical.&lt;/p&gt; 
&lt;p&gt;Agents, at least the good ones, don't follow the &lt;a href="https://www.anthropic.com/engineering/building-effective-agents#agents"&gt;"here's your prompt, here's a bag of tools, loop until you hit the goal"&lt;/a&gt; pattern. Rather, they are comprised of mostly just software.&lt;/p&gt; 
&lt;p&gt;So, I set out to answer:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h3&gt;&lt;strong&gt;What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?&lt;/strong&gt;&lt;/h3&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Welcome to 12-factor agents. As every Chicago mayor since Daley has consistently plastered all over the city's major airports, we're glad you're here.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Special thanks to &lt;a href="https://github.com/iantbutler01"&gt;@iantbutler01&lt;/a&gt;, &lt;a href="https://github.com/tnm"&gt;@tnm&lt;/a&gt;, &lt;a href="https://www.github.com/hellovai"&gt;@hellovai&lt;/a&gt;, &lt;a href="https://www.github.com/stantonk"&gt;@stantonk&lt;/a&gt;, &lt;a href="https://www.github.com/balanceiskey"&gt;@balanceiskey&lt;/a&gt;, &lt;a href="https://www.github.com/AdjectiveAllison"&gt;@AdjectiveAllison&lt;/a&gt;, &lt;a href="https://www.github.com/pfbyjy"&gt;@pfbyjy&lt;/a&gt;, &lt;a href="https://www.github.com/a-churchill"&gt;@a-churchill&lt;/a&gt;, and the SF MLOps community for early feedback on this guide.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;The Short Version: The 12 Factors&lt;/h2&gt; 
&lt;p&gt;Even if LLMs &lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md#what-if-llms-get-smarter"&gt;continue to get exponentially more powerful&lt;/a&gt;, there will be core engineering techniques that make LLM-powered software more reliable, more scalable, and easier to maintain.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md"&gt;How We Got Here: A Brief History of Software&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md"&gt;Factor 1: Natural Language to Tool Calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md"&gt;Factor 2: Own your prompts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;Factor 3: Own your context window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md"&gt;Factor 4: Tools are just structured outputs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md"&gt;Factor 5: Unify execution state and business state&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md"&gt;Factor 6: Launch/Pause/Resume with simple APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md"&gt;Factor 7: Contact humans with tool calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md"&gt;Factor 8: Own your control flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md"&gt;Factor 9: Compact Errors into Context Window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md"&gt;Factor 10: Small, Focused Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md"&gt;Factor 11: Trigger from anywhere, meet users where they are&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md"&gt;Factor 12: Make your agent a stateless reducer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Visual Nav&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/110-natural-language-tool-calls.png" alt="factor 1"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/120-own-your-prompts.png" alt="factor 2"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/130-own-your-context-building.png" alt="factor 3"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/140-tools-are-just-structured-outputs.png" alt="factor 4"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/150-unify-state.png" alt="factor 5"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/160-pause-resume-with-simple-apis.png" alt="factor 6"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/170-contact-humans-with-tools.png" alt="factor 7"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/180-control-flow.png" alt="factor 8"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/190-factor-9-errors-static.png" alt="factor 9"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/1a0-small-focused-agents.png" alt="factor 10"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/1b0-trigger-from-anywhere.png" alt="factor 11"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/1c0-stateless-reducer.png" alt="factor 12"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;How we got here&lt;/h2&gt; 
&lt;p&gt;For a deeper dive on my agent journey and what led us here, check out &lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md"&gt;A Brief History of Software&lt;/a&gt; - a quick summary here:&lt;/p&gt; 
&lt;h3&gt;The promise of agents&lt;/h3&gt; 
&lt;p&gt;We're gonna talk a lot about Directed Graphs (DGs) and their Acyclic friends, DAGs. I'll start by pointing out that...well...software is a directed graph. There's a reason we used to represent programs as flow charts.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/010-software-dag.png" alt="010-software-dag"&gt;&lt;/p&gt; 
&lt;h3&gt;From code to DAGs&lt;/h3&gt; 
&lt;p&gt;Around 20 years ago, we started to see DAG orchestrators become popular. We're talking classics like &lt;a href="https://airflow.apache.org/"&gt;Airflow&lt;/a&gt;, &lt;a href="https://www.prefect.io/"&gt;Prefect&lt;/a&gt;, some predecessors, and some newer ones like (&lt;a href="https://dagster.io/"&gt;dagster&lt;/a&gt;, &lt;a href="https://www.inngest.com/"&gt;inggest&lt;/a&gt;, &lt;a href="https://www.windmill.dev/"&gt;windmill&lt;/a&gt;). These followed the same graph pattern, with the added benefit of observability, modularity, retries, administration, etc.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/015-dag-orchestrators.png" alt="015-dag-orchestrators"&gt;&lt;/p&gt; 
&lt;h3&gt;The promise of agents&lt;/h3&gt; 
&lt;p&gt;I'm not the first &lt;a href="https://youtu.be/Dc99-zTMyMg?si=bcT0hIwWij2mR-40&amp;amp;t=73"&gt;person to say this&lt;/a&gt;, but my biggest takeaway when I started learning about agents, was that you get to throw the DAG away. Instead of software engineers coding each step and edge case, you can give the agent a goal and a set of transitions:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/025-agent-dag.png" alt="025-agent-dag"&gt;&lt;/p&gt; 
&lt;p&gt;And let the LLM make decisions in real time to figure out the path&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/026-agent-dag-lines.png" alt="026-agent-dag-lines"&gt;&lt;/p&gt; 
&lt;p&gt;The promise here is that you write less software, you just give the LLM the "edges" of the graph and let it figure out the nodes. You can recover from errors, you can write less code, and you may find that LLMs find novel solutions to problems.&lt;/p&gt; 
&lt;h3&gt;Agents as loops&lt;/h3&gt; 
&lt;p&gt;As we'll see later, it turns out this doesn't quite work.&lt;/p&gt; 
&lt;p&gt;Let's dive one step deeper - with agents you've got this loop consisting of 3 steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;LLM determines the next step in the workflow, outputting structured json ("tool calling")&lt;/li&gt; 
 &lt;li&gt;Deterministic code executes the tool call&lt;/li&gt; 
 &lt;li&gt;The result is appended to the context window&lt;/li&gt; 
 &lt;li&gt;Repeat until the next step is determined to be "done"&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;initial_event = {"message": "..."}
context = [initial_event]
while True:
  next_step = await llm.determine_next_step(context)
  context.append(next_step)

  if (next_step.intent === "done"):
    return next_step.final_answer

  result = await execute_step(next_step)
  context.append(result)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Our initial context is just the starting event (maybe a user message, maybe a cron fired, maybe a webhook, etc), and we ask the llm to choose the next step (tool) or to determine that we're done.&lt;/p&gt; 
&lt;p&gt;Here's a multi-step example:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/3beb0966-fdb1-4c12-a47f-ed4e8240f8fd"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif" alt="027-agent-loop-animation"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif"&gt;GIF Version&lt;/a&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif" alt="027-agent-loop-animation"&gt;]&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Why 12-factor agents?&lt;/h2&gt; 
&lt;p&gt;At the end of the day, this approach just doesn't work as well as we want it to.&lt;/p&gt; 
&lt;p&gt;In building HumanLayer, I've talked to at least 100 SaaS builders (mostly technical founders) looking to make their existing product more agentic. The journey usually goes something like:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Decide you want to build an agent&lt;/li&gt; 
 &lt;li&gt;Product design, UX mapping, what problems to solve&lt;/li&gt; 
 &lt;li&gt;Want to move fast, so grab $FRAMEWORK and &lt;em&gt;get to building&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Get to 70-80% quality bar&lt;/li&gt; 
 &lt;li&gt;Realize that 80% isn't good enough for most customer-facing features&lt;/li&gt; 
 &lt;li&gt;Realize that getting past 80% requires reverse-engineering the framework, prompts, flow, etc.&lt;/li&gt; 
 &lt;li&gt;Start over from scratch&lt;/li&gt; 
&lt;/ol&gt; 
&lt;details&gt; 
 &lt;summary&gt;Random Disclaimers&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: I'm not sure the exact right place to say this, but here seems as good as any: &lt;strong&gt;this in BY NO MEANS meant to be a dig on either the many frameworks out there, or the pretty dang smart people who work on them&lt;/strong&gt;. They enable incredible things and have accelerated the AI ecosystem.&lt;/p&gt; 
 &lt;p&gt;I hope that one outcome of this post is that agent framework builders can learn from the journeys of myself and others, and make frameworks even better.&lt;/p&gt; 
 &lt;p&gt;Especially for builders who want to move fast but need deep control.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER 2&lt;/strong&gt;: I'm not going to talk about MCP. I'm sure you can see where it fits in.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER 3&lt;/strong&gt;: I'm using mostly typescript, for &lt;a href="https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e?utm_source=share&amp;amp;utm_medium=member_desktop&amp;amp;rcm=ACoAAA4oHTkByAiD-wZjnGsMBUL_JT6nyyhOh30"&gt;reasons&lt;/a&gt; but all this stuff works in python or any other language you prefer.&lt;/p&gt; 
 &lt;p&gt;Anyways back to the thing...&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Design Patterns for great LLM applications&lt;/h3&gt; 
&lt;p&gt;After digging through hundreds of AI libriaries and working with dozens of founders, my instinct is this:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;There are some core things that make agents great&lt;/li&gt; 
 &lt;li&gt;Going all in on a framework and building what is essentially a greenfield rewrite may be counter-productive&lt;/li&gt; 
 &lt;li&gt;There are some core principles that make agents great, and you will get most/all of them if you pull in a framework&lt;/li&gt; 
 &lt;li&gt;BUT, the fastest way I've seen for builders to get high-quality AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product&lt;/li&gt; 
 &lt;li&gt;These modular concepts from agents can be defined and applied by most skilled software engineers, even if they don't have an AI background&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;The fastest way I've seen for builders to get good AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;The 12 Factors (again)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md"&gt;How We Got Here: A Brief History of Software&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md"&gt;Factor 1: Natural Language to Tool Calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md"&gt;Factor 2: Own your prompts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;Factor 3: Own your context window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md"&gt;Factor 4: Tools are just structured outputs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md"&gt;Factor 5: Unify execution state and business state&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md"&gt;Factor 6: Launch/Pause/Resume with simple APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md"&gt;Factor 7: Contact humans with tool calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md"&gt;Factor 8: Own your control flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md"&gt;Factor 9: Compact Errors into Context Window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md"&gt;Factor 10: Small, Focused Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md"&gt;Factor 11: Trigger from anywhere, meet users where they are&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md"&gt;Factor 12: Make your agent a stateless reducer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Honorable Mentions / other advice&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/appendix-13-pre-fetch.md"&gt;Factor 13: Pre-fetch all the context you might need&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Related Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Contribute to this guide &lt;a href="https://github.com/humanlayer/12-factor-agents"&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/8bIHcttkOTE"&gt;I talked about a lot of this on an episode of the Tool Use podcast&lt;/a&gt; in March 2025&lt;/li&gt; 
 &lt;li&gt;I write about some of this stuff at &lt;a href="https://theouterloop.substack.com"&gt;The Outer Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;I do &lt;a href="https://github.com/hellovai/ai-that-works/tree/main"&gt;webinars about Maximizing LLM Performance&lt;/a&gt; with &lt;a href="https://github.com/hellovai"&gt;@hellovai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;We build OSS agents with this methodology under &lt;a href="https://github.com/got-agents/agents"&gt;got-agents/agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;We ignored all our own advice and built a &lt;a href="https://github.com/humanlayer/kubechain"&gt;framework for running distributed agents in kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Other links from this guide: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://12factor.net"&gt;12 Factor Apps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.anthropic.com/engineering/building-effective-agents#agents"&gt;Building Effective Agents (Anthropic)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://thedataexchange.media/baml-revolution-in-ai-engineering/"&gt;Prompts are Functions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tomasp.net/blog/2015/library-frameworks/"&gt;Library patterns: Why frameworks are evil&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://sandimetz.com/blog/2016/1/20/the-wrong-abstraction"&gt;The Wrong Abstraction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/dexhorthy/mailcrew"&gt;Mailcrew Agent&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=f_cKnoPC_Oo"&gt;Mailcrew Demo Video&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://x.com/chainlit_io/status/1858613325921480922"&gt;Chainlit Demo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e"&gt;TypeScript for LLMs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.boundaryml.com/blog/schema-aligned-parsing"&gt;Schema Aligned Parsing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.vellum.ai/blog/when-should-i-use-function-calling-structured-outputs-or-json-mode"&gt;Function Calling vs Structured Outputs vs JSON Mode&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/boundaryml/baml"&gt;BAML on GitHub&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.llamaindex.ai/en/stable/examples/llm/openai_json_vs_function_calling/"&gt;OpenAI JSON vs Function Calling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://theouterloop.substack.com/p/openais-realtime-api-is-a-step-towards"&gt;Outer Loop Agents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://airflow.apache.org/"&gt;Airflow&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.prefect.io/"&gt;Prefect&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://dagster.io/"&gt;Dagster&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.inngest.com/"&gt;Inngest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.windmill.dev/"&gt;Windmill&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://aiagentindex.mit.edu/"&gt;The AI Agent Index (MIT)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://open.substack.com/pub/swyx/p/notebooklm?selection=08e1187c-cfee-4c63-93c9-71216640a5f8"&gt;NotebookLM on Finding Model Capability Boundaries&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks to everyone who has contributed to 12-factor agents!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/dexhorthy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3730605?v=4&amp;amp;s=80" width="80px" alt="dexhorthy"&gt;&lt;/a&gt; &lt;a href="https://github.com/Sypherd"&gt;&lt;img src="https://avatars.githubusercontent.com/u/50557586?v=4&amp;amp;s=80" width="80px" alt="Sypherd"&gt;&lt;/a&gt; &lt;a href="https://github.com/tofaramususa"&gt;&lt;img src="https://avatars.githubusercontent.com/u/66259401?v=4&amp;amp;s=80" width="80px" alt="tofaramususa"&gt;&lt;/a&gt; &lt;a href="https://github.com/a-churchill"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18105223?v=4&amp;amp;s=80" width="80px" alt="a-churchill"&gt;&lt;/a&gt; &lt;a href="https://github.com/Elijas"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4084885?v=4&amp;amp;s=80" width="80px" alt="Elijas"&gt;&lt;/a&gt; &lt;a href="https://github.com/hugolmn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/39267118?v=4&amp;amp;s=80" width="80px" alt="hugolmn"&gt;&lt;/a&gt; &lt;a href="https://github.com/jeremypeters"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1882972?v=4&amp;amp;s=80" width="80px" alt="jeremypeters"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/kndl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/380402?v=4&amp;amp;s=80" width="80px" alt="kndl"&gt;&lt;/a&gt; &lt;a href="https://github.com/maciejkos"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16674643?v=4&amp;amp;s=80" width="80px" alt="maciejkos"&gt;&lt;/a&gt; &lt;a href="https://github.com/pfbyjy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/85041180?v=4&amp;amp;s=80" width="80px" alt="pfbyjy"&gt;&lt;/a&gt; &lt;a href="https://github.com/0xRaduan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/36044389?v=4&amp;amp;s=80" width="80px" alt="0xRaduan"&gt;&lt;/a&gt; &lt;a href="https://github.com/zyuanlim"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7169731?v=4&amp;amp;s=80" width="80px" alt="zyuanlim"&gt;&lt;/a&gt; &lt;a href="https://github.com/lombardo-chcg"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15862501?v=4&amp;amp;s=80" width="80px" alt="lombardo-chcg"&gt;&lt;/a&gt; &lt;a href="https://github.com/sahanatvessel"&gt;&lt;img src="https://avatars.githubusercontent.com/u/160066852?v=4&amp;amp;s=80" width="80px" alt="sahanatvessel"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Versions&lt;/h2&gt; 
&lt;p&gt;This is the current version of 12-factor agents, version 1.0. There is a draft of version 1.1 on the &lt;a href="https://github.com/humanlayer/12-factor-agents/tree/v1.1"&gt;v1.1 branch&lt;/a&gt;. There are a few &lt;a href="https://github.com/humanlayer/12-factor-agents/issues?q=is%3Aissue%20state%3Aopen%20label%3Aversion%3A%3A1.1"&gt;Issues to track work on v1.1&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;All content and images are licensed under a &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/"&gt;CC BY-SA 4.0 License&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Code is licensed under the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;Apache 2.0 License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>browserbase/stagehand</title>
      <link>https://github.com/browserbase/stagehand</link>
      <description>&lt;p&gt;The AI Browser Automation Framework&lt;/p&gt;&lt;hr&gt;&lt;div id="toc" align="center" style="margin-bottom: 0;"&gt; 
 &lt;ul style="list-style: none; margin: 0; padding: 0;"&gt; 
  &lt;a href="https://stagehand.dev"&gt; 
   &lt;picture&gt; 
    &lt;source media="(prefers-color-scheme: dark)" srcset="media/dark_logo.png"&gt; 
    &lt;img alt="Stagehand" src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/light_logo.png" width="200" style="margin-right: 30px;"&gt; 
   &lt;/picture&gt; &lt;/a&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;strong&gt;The AI Browser Automation Framework&lt;/strong&gt;&lt;br&gt; &lt;a href="https://docs.stagehand.dev"&gt;Read the Docs&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/browserbase/stagehand/tree/main?tab=MIT-1-ov-file#MIT-1-ov-file"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="media/dark_license.svg"&gt; 
   &lt;img alt="MIT License" src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/light_license.svg?sanitize=true"&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="media/dark_slack.svg"&gt; 
   &lt;img alt="Slack Community" src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/light_slack.svg?sanitize=true"&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/12122" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/12122" alt="browserbase%2Fstagehand | Trendshift" style="width: 250px; height: 55px;" width="250" height="55"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; If you're looking for the Python implementation, you can find it &lt;a href="https://github.com/browserbase/stagehand-python"&gt; here&lt;/a&gt; &lt;/p&gt; 
&lt;div align="center" style="display: flex; align-items: center; justify-content: center; gap: 4px; margin-bottom: 0;"&gt; 
 &lt;b&gt;Vibe code&lt;/b&gt; 
 &lt;span style="font-size: 1.05em;"&gt; Stagehand with &lt;/span&gt; 
 &lt;a href="https://director.ai" style="display: flex; align-items: center;"&gt; &lt;span&gt;Director&lt;/span&gt; &lt;/a&gt; 
 &lt;span&gt; &lt;/span&gt; 
 &lt;picture&gt; 
  &lt;img alt="Director" src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/director_icon.svg?sanitize=true" width="25"&gt; 
 &lt;/picture&gt; 
&lt;/div&gt; 
&lt;h2&gt;Why Stagehand?&lt;/h2&gt; 
&lt;p&gt;Most existing browser automation tools either require you to write low-level code in a framework like Selenium, Playwright, or Puppeteer, or use high-level agents that can be unpredictable in production. By letting developers choose what to write in code vs. natural language, Stagehand is the natural choice for browser automations in production.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Choose when to write code vs. natural language&lt;/strong&gt;: use AI when you want to navigate unfamiliar pages, and use code (&lt;a href="https://playwright.dev/"&gt;Playwright&lt;/a&gt;) when you know exactly what you want to do.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Preview and cache actions&lt;/strong&gt;: Stagehand lets you preview AI actions before running them, and also helps you easily cache repeatable actions to save time and tokens.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Computer use models with one line of code&lt;/strong&gt;: Stagehand lets you integrate SOTA computer use models from OpenAI and Anthropic into the browser with one line of code.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;p&gt;Here's how to build a sample browser automation with Stagehand:&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;div style="max-width:300px;"&gt; 
  &lt;img src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/github_demo.gif" alt="See Stagehand in Action"&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;// Use Playwright functions on the page object
const page = stagehand.page;
await page.goto("https://github.com/browserbase");

// Use act() to execute individual actions
await page.act("click on the stagehand repo");

// Use Computer Use agents for larger actions
const agent = stagehand.agent({
    provider: "openai",
    model: "computer-use-preview",
});
await agent.execute("Get to the latest PR");

// Use extract() to read data from the page
const { author, title } = await page.extract({
  instruction: "extract the author and title of the PR",
  schema: z.object({
    author: z.string().describe("The username of the PR author"),
    title: z.string().describe("The title of the PR"),
  }),
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://docs.stagehand.dev"&gt;docs.stagehand.dev&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Start with Stagehand with one line of code, or check out our &lt;a href="https://docs.stagehand.dev/get_started/quickstart"&gt;Quickstart Guide&lt;/a&gt; for more information:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx create-browser-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7"&gt; &lt;p&gt;Watch Anirudh demo create-browser-app to create a Stagehand project!&lt;/p&gt; &lt;/a&gt; 
 &lt;a href="https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7"&gt; &lt;img style="max-width:300px;" src="https://cdn.loom.com/sessions/thumbnails/f5107f86d8c94fa0a8b4b1e89740f7a7-ec3f428b6775ceeb-full-play.gif"&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h3&gt;Build and Run from Source&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/browserbase/stagehand.git
cd stagehand
pnpm install
pnpm playwright install
pnpm run build
pnpm run example # run the blank script at ./examples/example.ts
pnpm run example 2048 # run the 2048 example at ./examples/2048.ts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Stagehand is best when you have an API key for an LLM provider and Browserbase credentials. To add these to your project, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cp .env.example .env
nano .env # Edit the .env file to add API keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br&gt; We highly value contributions to Stagehand! For questions or support, please join our &lt;a href="https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg"&gt;Slack community&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;At a high level, we're focused on improving reliability, speed, and cost in that order of priority. If you're interested in contributing, we strongly recommend reaching out to &lt;a href="https://x.com/miguel_gonzf"&gt;Miguel Gonzalez&lt;/a&gt; or &lt;a href="https://x.com/pk_iv"&gt;Paul Klein&lt;/a&gt; in our &lt;a href="https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg"&gt;Slack community&lt;/a&gt; before starting to ensure that your contribution aligns with our goals.&lt;/p&gt; 
&lt;p&gt;For more information, please see our &lt;a href="https://docs.stagehand.dev/examples/contributing"&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;This project heavily relies on &lt;a href="https://playwright.dev/"&gt;Playwright&lt;/a&gt; as a resilient backbone to automate the web. It also would not be possible without the awesome techniques and discoveries made by &lt;a href="https://github.com/reworkd/tarsier"&gt;tarsier&lt;/a&gt;, &lt;a href="https://github.com/jbeoris/gemini-zod"&gt;gemini-zod&lt;/a&gt;, and &lt;a href="https://github.com/normal-computing/fuji-web"&gt;fuji-web&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We'd like to thank the following people for their major contributions to Stagehand:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pkiv"&gt;Paul Klein&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kamath"&gt;Anirudh Kamath&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seanmcguire12"&gt;Sean McGuire&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miguelg719"&gt;Miguel Gonzalez&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sameelarif"&gt;Sameel Arif&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/filip-michalsky"&gt;Filip Michalsky&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/jeremypress"&gt;Jeremy Press&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/navidpour"&gt;Navid Pour&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under the MIT License.&lt;/p&gt; 
&lt;p&gt;Copyright 2025 Browserbase, Inc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>simstudioai/sim</title>
      <link>https://github.com/simstudioai/sim</link>
      <description>&lt;p&gt;Sim is an open-source AI agent workflow builder. Sim Studio's interface is a lightweight, intuitive way to quickly build and deploy LLMs that connect with your favorite tools.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/simstudioai/sim/main/apps/sim/public/static/sim.png" alt="Sim Logo" width="500"&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License: Apache-2.0"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/Hr4UWYEcTT"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join%20Server-7289DA?logo=discord&amp;amp;logoColor=white" alt="Discord"&gt;&lt;/a&gt; &lt;a href="https://x.com/simstudioai"&gt;&lt;img src="https://img.shields.io/twitter/follow/simstudioai?style=social" alt="Twitter"&gt;&lt;/a&gt; &lt;a href="https://github.com/simstudioai/sim/pulls"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true" alt="PRs welcome"&gt;&lt;/a&gt; &lt;a href="https://docs.sim.ai"&gt;&lt;img src="https://img.shields.io/badge/Docs-visit%20documentation-blue.svg?sanitize=true" alt="Documentation"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;strong&gt;Sim&lt;/strong&gt; is a lightweight, user-friendly platform for building AI agent workflows. &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/simstudioai/sim/main/apps/sim/public/static/demo.gif" alt="Sim Demo" width="800"&gt; &lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Use our &lt;a href="https://sim.ai"&gt;cloud-hosted version&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Self-host using one of the methods below&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Self-Hosting Options&lt;/h2&gt; 
&lt;h3&gt;Option 1: NPM Package (Simplest)&lt;/h3&gt; 
&lt;p&gt;The easiest way to run Sim locally is using our &lt;a href="https://www.npmjs.com/package/simstudio?activeTab=readme"&gt;NPM package&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx simstudio
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After running these commands, open &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt; in your browser.&lt;/p&gt; 
&lt;h4&gt;Options&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-p, --port &amp;lt;port&amp;gt;&lt;/code&gt;: Specify the port to run Sim on (default: 3000)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--no-pull&lt;/code&gt;: Skip pulling the latest Docker images&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Requirements&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker must be installed and running on your machine&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Option 2: Docker Compose&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone the repository
git clone https://github.com/simstudioai/sim.git

# Navigate to the project directory
cd sim

# Start Sim
docker compose -f docker-compose.prod.yml up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Access the application at &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Using Local Models&lt;/h4&gt; 
&lt;p&gt;To use local models with Sim:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Pull models using our helper script:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./apps/sim/scripts/ollama_docker.sh pull &amp;lt;model_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Start Sim with local model support:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# With NVIDIA GPU support
docker compose --profile local-gpu -f docker-compose.ollama.yml up -d

# Without GPU (CPU only)
docker compose --profile local-cpu -f docker-compose.ollama.yml up -d

# If hosting on a server, update the environment variables in the docker-compose.prod.yml file to include the server's public IP then start again (OLLAMA_URL to i.e. http://1.1.1.1:11434)
docker compose -f docker-compose.prod.yml up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Option 3: Dev Containers&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open VS Code with the &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers"&gt;Remote - Containers extension&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Open the project and click "Reopen in Container" when prompted&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;bun run dev:full&lt;/code&gt; in the terminal or use the &lt;code&gt;sim-start&lt;/code&gt; alias 
  &lt;ul&gt; 
   &lt;li&gt;This starts both the main application and the realtime socket server&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Option 4: Manual Setup&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://bun.sh/"&gt;Bun&lt;/a&gt; runtime&lt;/li&gt; 
 &lt;li&gt;PostgreSQL 12+ with &lt;a href="https://github.com/pgvector/pgvector"&gt;pgvector extension&lt;/a&gt; (required for AI embeddings)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Sim uses vector embeddings for AI features like knowledge bases and semantic search, which requires the &lt;code&gt;pgvector&lt;/code&gt; PostgreSQL extension.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone and install dependencies:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/simstudioai/sim.git
cd sim
bun install
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Set up PostgreSQL with pgvector:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You need PostgreSQL with the &lt;code&gt;vector&lt;/code&gt; extension for embedding support. Choose one option:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Option A: Using Docker (Recommended)&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start PostgreSQL with pgvector extension
docker run --name simstudio-db \
  -e POSTGRES_PASSWORD=your_password \
  -e POSTGRES_DB=simstudio \
  -p 5432:5432 -d \
  pgvector/pgvector:pg17
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Option B: Manual Installation&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install PostgreSQL 12+ and the pgvector extension&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://github.com/pgvector/pgvector#installation"&gt;pgvector installation guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Set up environment:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd apps/sim
cp .env.example .env  # Configure with required variables (DATABASE_URL, BETTER_AUTH_SECRET, BETTER_AUTH_URL)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Update your &lt;code&gt;.env&lt;/code&gt; file with the database URL:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;DATABASE_URL="postgresql://postgres:your_password@localhost:5432/simstudio"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Set up the database:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bunx drizzle-kit migrate 
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Start the development servers:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Recommended approach - run both servers together (from project root):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bun run dev:full
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This starts both the main Next.js application and the realtime socket server required for full functionality.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Alternative - run servers separately:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Next.js app (from project root):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bun run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Realtime socket server (from &lt;code&gt;apps/sim&lt;/code&gt; directory in a separate terminal):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd apps/sim
bun run dev:sockets
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tech Stack&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Framework&lt;/strong&gt;: &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; (App Router)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Runtime&lt;/strong&gt;: &lt;a href="https://bun.sh/"&gt;Bun&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Database&lt;/strong&gt;: PostgreSQL with &lt;a href="https://orm.drizzle.team"&gt;Drizzle ORM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Authentication&lt;/strong&gt;: &lt;a href="https://better-auth.com"&gt;Better Auth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UI&lt;/strong&gt;: &lt;a href="https://ui.shadcn.com/"&gt;Shadcn&lt;/a&gt;, &lt;a href="https://tailwindcss.com"&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;State Management&lt;/strong&gt;: &lt;a href="https://zustand-demo.pmnd.rs/"&gt;Zustand&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flow Editor&lt;/strong&gt;: &lt;a href="https://reactflow.dev/"&gt;ReactFlow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docs&lt;/strong&gt;: &lt;a href="https://fumadocs.vercel.app/"&gt;Fumadocs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Monorepo&lt;/strong&gt;: &lt;a href="https://turborepo.org/"&gt;Turborepo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Realtime&lt;/strong&gt;: &lt;a href="https://socket.io/"&gt;Socket.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Background Jobs&lt;/strong&gt;: &lt;a href="https://trigger.dev/"&gt;Trigger.dev&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Please see our &lt;a href="https://raw.githubusercontent.com/simstudioai/sim/main/.github/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the Apache License 2.0 - see the &lt;a href="https://raw.githubusercontent.com/simstudioai/sim/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;p align="center"&gt;Made with ❤️ by the Sim Team&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AIDC-AI/ComfyUI-Copilot</title>
      <link>https://github.com/AIDC-AI/ComfyUI-Copilot</link>
      <description>&lt;p&gt;An AI-powered custom node for ComfyUI designed to enhance workflow automation and provide intelligent assistance&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/README_CN.md"&gt;中文&lt;/a&gt; ｜ English&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;🎯 ComfyUI-Copilot: Your Intelligent Assistant for Comfy-UI&lt;/h1&gt; 
 &lt;!-- Enhancing Image Generation Development with Smart Assistance --&gt; 
 &lt;h4 align="center"&gt; 
  &lt;div align="center"&gt; 
   &lt;img src="https://img.shields.io/badge/Version-1.0.0-blue.svg?sanitize=true" alt="Version"&gt; 
   &lt;img src="https://img.shields.io/badge/License-MIT-green.svg?sanitize=true" alt="License"&gt; 
   &lt;img src="https://img.shields.io/github/stars/AIDC-AI/ComfyUI-Copilot?color=yellow" alt="Stars"&gt; 
   &lt;img src="https://img.shields.io/github/issues/AIDC-AI/ComfyUI-Copilot?color=red" alt="Issues"&gt; 
   &lt;img src="https://img.shields.io/badge/python-3.10%2B-purple.svg?sanitize=true" alt="Python"&gt; 
  &lt;/div&gt;&lt;/h4&gt; 
 &lt;p&gt;👾 &lt;em&gt;&lt;strong&gt;Alibaba International Digital Commerce&lt;/strong&gt;&lt;/em&gt; 👾&lt;/p&gt; 
 &lt;p&gt;&lt;img alt="octocat" src="https://github.githubassets.com/images/icons/emoji/octocat.png?v8"&gt;) &lt;a href="https://github.com/AIDC-AI/ComfyUI-Copilot"&gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/0372faf4-eb64-4aad-82e6-5fd69f349c2c"&gt;https://github.com/user-attachments/assets/0372faf4-eb64-4aad-82e6-5fd69f349c2c&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🌟 Introduction&lt;/h2&gt; 
&lt;p&gt;Welcome to &lt;strong&gt;ComfyUI-Copilot&lt;/strong&gt;, an intelligent assistant built on the Comfy-UI framework that simplifies and enhances the AI algorithm debugging and deployment process through natural language interactions.&lt;/p&gt; 
&lt;p&gt;Whether it's generating text, images, or audio, ComfyUI-Copilot offers intuitive node recommendations, workflow building aids, and model querying services to streamline your development process.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/Framework.png"&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;🤔 Why Choose ComfyUI-Copilot?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🍀 &lt;strong&gt;Ease of Use&lt;/strong&gt;: Lower the barriers to entry with natural language interaction, making Comfy-UI accessible even for beginners.&lt;/li&gt; 
 &lt;li&gt;🍀 &lt;strong&gt;Smart Recommendations&lt;/strong&gt;: Leverage AI-driven node suggestions and workflow implementations to boost development efficiency.&lt;/li&gt; 
 &lt;li&gt;🍀 &lt;strong&gt;Real-Time Assistance&lt;/strong&gt;: Benefit from round-the-clock interactive support to address any issues encountered during development.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🚀 Updates&lt;/h2&gt; 
&lt;h3&gt;2025.05.16 Release&lt;/h3&gt; 
&lt;h4&gt;✨ New Features&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;GenLab History: Support querying historical results after parameter exploration.&lt;/li&gt; 
 &lt;li&gt;Personalized workflow generation: Users can input their own requirements, and a large language model generates a tailored workflow for them.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/GenLabHistory.png" width="50%"&gt; 
&lt;/div&gt; 
&lt;h3&gt;2025.04.28 Release&lt;/h3&gt; 
&lt;h4&gt;✨ New Features&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Our frontend UI is embedded within the ComfyUI interface. Simply click on the ComfyUI-Copilot icon in the left sidebar to launch our service.&lt;/li&gt; 
 &lt;li&gt;The UI automatically adapts to ComfyUI's black/light theme, switching background colors accordingly.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/comfyui_ui_icon.png"&gt; 
&lt;h3&gt;2025.04.08 Release&lt;/h3&gt; 
&lt;h4&gt;✨ New Features&lt;/h4&gt; 
&lt;h5&gt;1. 🎉 GenLab Launch&lt;/h5&gt; 
&lt;p&gt;We are excited to announce that GenLab is now officially live, bringing two powerful new features:&lt;/p&gt; 
&lt;h6&gt;a. 🔍 Parameter Exploration&lt;/h6&gt; 
&lt;ul&gt; 
 &lt;li&gt;Now you can optimize parameters for executable workflows&lt;/li&gt; 
 &lt;li&gt;How to use: 
  &lt;ul&gt; 
   &lt;li&gt;Click on the node you wish to explore&lt;/li&gt; 
   &lt;li&gt;Select the parameters to explore&lt;/li&gt; 
   &lt;li&gt;Set the parameter value ranges&lt;/li&gt; 
   &lt;li&gt;The system will automatically batch execute different parameter combinations&lt;/li&gt; 
   &lt;li&gt;Generated results support visual comparison, helping you quickly find the optimal parameter configuration&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/8069744a-411e-4a25-b1a5-4503a303bc6c"&gt;https://github.com/user-attachments/assets/8069744a-411e-4a25-b1a5-4503a303bc6c&lt;/a&gt;&lt;/p&gt; 
&lt;h6&gt;b. ✏️ Prompt Rewriting Assistant&lt;/h6&gt; 
&lt;ul&gt; 
 &lt;li&gt;New feature helps users generate rich, high-quality "spells"&lt;/li&gt; 
 &lt;li&gt;Optimize your prompts to enhance the quality and diversity of generated content&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/85decdbf-9ae5-4c78-818b-8db444ed4e7b"&gt;https://github.com/user-attachments/assets/85decdbf-9ae5-4c78-818b-8db444ed4e7b&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;🛠️ Bug Fixes&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 Fixed multiple known issues, improving system stability&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2025.02.27 Release&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple Model Support&lt;/strong&gt;: Added DeepSeek AI and Qwen-plus models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Node Installation Guide&lt;/strong&gt;: Smart redirection to GitHub repos or Google search results for uninstalled nodes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Prompt Generation&lt;/strong&gt;: Enhanced SD prompt generation and error log analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: Fixed lag issues reported in GitHub Issues when using Copilot&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multilingual Support&lt;/strong&gt;: Implemented multilingual responses for node queries&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Subgraph Recommendation&lt;/strong&gt;: Redesigned downstream subgraph generation with improved filtering&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model Database&lt;/strong&gt;: Added coverage for 60,000+ LoRA and Checkpoint models&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🔥 Core Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;💎 &lt;strong&gt;Interactive Q&amp;amp;A Bot&lt;/strong&gt;: Access a robust Q&amp;amp;A platform where users can inquire about model intricacies, node details, and parameter utilization with ease.&lt;/li&gt; 
 &lt;li&gt;💎 &lt;strong&gt;Natural Language Node Suggestions&lt;/strong&gt;: Employ our advanced search mechanism to swiftly identify desired nodes and enhance workflow construction efficacy.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/comfycopilot_nodes_recommend.gif"&gt; 
&lt;ul&gt; 
 &lt;li&gt;💎 &lt;strong&gt;Node Query System&lt;/strong&gt;: Dive deeper into nodes by exploring their explanations, parameter definitions, usage tips, and downstream workflow recommendations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/comfycopilot_nodes_search.gif"&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;💎 &lt;strong&gt;Smart Workflow Assistance&lt;/strong&gt;: Automatically discern developer needs to recommend and build fitting workflow frameworks, minimizing manual setup time.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;💎 &lt;strong&gt;Model Querying&lt;/strong&gt;: Prompt Copilot to seek foundational models and 'lora' based on requirements.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;💎 &lt;strong&gt;Up-and-Coming Features&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Automated Parameter Tuning&lt;/strong&gt;: Exploit machine learning algorithms for seamless analysis and optimization of critical workflow parameters.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Error Diagnosis and Fix Suggestions&lt;/strong&gt;: Receive comprehensive error insights and corrective advice to swiftly pinpoint and resolve issues.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Repository Overview&lt;/strong&gt;: Visit the &lt;a href="https://github.com/AIDC-AI/ComfyUI-Copilot"&gt;GitHub Repository&lt;/a&gt; to access the complete codebase.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;cd ComfyUI/custom_nodes
git clone git@github.com:AIDC-AI/ComfyUI-Copilot.git
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;cd ComfyUI/custom_nodes
git clone https://github.com/AIDC-AI/ComfyUI-Copilot
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Using ComfyUI Manager&lt;/strong&gt;: Open ComfyUI Manager, click on Custom Nodes Manager, search for ComfyUI-Copilot, and click the install button. &lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/comfyui_manager.png"&gt; &lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/comfyui_manager_install.png"&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Activation&lt;/strong&gt;: After running the ComfyUI project, find the Copilot activation button at the top-right corner of the board to launch its service.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/start.png"&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;strong&gt;KeyGeneration&lt;/strong&gt;：Enter&amp;nbsp;your&amp;nbsp;email&amp;nbsp;address&amp;nbsp;on&amp;nbsp;the&amp;nbsp;link,&amp;nbsp;the&amp;nbsp;api-key&amp;nbsp;will&amp;nbsp;automatically&amp;nbsp;be&amp;nbsp;sent&amp;nbsp;to&amp;nbsp;your&amp;nbsp;email&amp;nbsp;address&amp;nbsp;later.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/keygen.png"&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; This project is in its early stages. Please regularly update to the latest code to access new features. You can either use &lt;code&gt;git pull&lt;/code&gt; to fetch the latest code or click "Update" in the ComfyUI Manager.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h2&gt;🤝 Contributions&lt;/h2&gt; 
&lt;p&gt;We welcome any form of contribution! Feel free to make issues, pull requests, or suggest new features.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;📞 Contact Us&lt;/h2&gt; 
&lt;p&gt;For any queries or suggestions, please feel free to contact: &lt;a href="mailto:ComfyUI-Copilot@service.alibaba.com"&gt;ComfyUI-Copilot@service.alibaba.com&lt;/a&gt;.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/qrcode1.png" width="20%"&gt; 
 &lt;p&gt;WeChat&lt;/p&gt; 
 &lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/discordqrcode.png" width="20%"&gt; 
 &lt;p&gt;Discord&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;📚 License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href="https://opensource.org/licenses/MIT"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#AIDC-AI/ComfyUI-Copilot&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=AIDC-AI/ComfyUI-Copilot&amp;amp;type=Date" alt="Star History Chart"&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>clash-verge-rev/clash-verge-rev</title>
      <link>https://github.com/clash-verge-rev/clash-verge-rev</link>
      <description>&lt;p&gt;A modern GUI client based on Tauri, designed to run in Windows, macOS and Linux for tailored proxy experience&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;img src="https://raw.githubusercontent.com/clash-verge-rev/clash-verge-rev/dev/src-tauri/icons/icon.png" alt="Clash" width="128"&gt; &lt;br&gt; Continuation of &lt;a href="https://github.com/zzzgydi/clash-verge"&gt;Clash Verge&lt;/a&gt; &lt;br&gt; &lt;/h1&gt; 
&lt;h3 align="center"&gt; A Clash Meta GUI based on &lt;a href="https://github.com/tauri-apps/tauri"&gt;Tauri&lt;/a&gt;. &lt;/h3&gt; 
&lt;h2&gt;Preview&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Dark&lt;/th&gt; 
   &lt;th&gt;Light&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/clash-verge-rev/clash-verge-rev/dev/docs/preview_dark.png" alt="预览"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/clash-verge-rev/clash-verge-rev/dev/docs/preview_light.png" alt="预览"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;请到发布页面下载对应的安装包：&lt;a href="https://github.com/clash-verge-rev/clash-verge-rev/releases"&gt;Release page&lt;/a&gt;&lt;br&gt; Go to the &lt;a href="https://github.com/clash-verge-rev/clash-verge-rev/releases"&gt;Release page&lt;/a&gt; to download the corresponding installation package&lt;br&gt; Supports Windows (x64/x86), Linux (x64/arm64) and macOS 10.15+ (intel/apple).&lt;/p&gt; 
&lt;h4&gt;我应当怎样选择发行版&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;版本&lt;/th&gt; 
   &lt;th align="left"&gt;特征&lt;/th&gt; 
   &lt;th align="left"&gt;链接&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Stable&lt;/td&gt; 
   &lt;td align="left"&gt;正式版，高可靠性，适合日常使用。&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/clash-verge-rev/clash-verge-rev/releases"&gt;Release&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Alpha&lt;/td&gt; 
   &lt;td align="left"&gt;早期测试版，功能未完善，可能存在缺陷。&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/clash-verge-rev/clash-verge-rev/releases/tag/alpha"&gt;Alpha&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;AutoBuild&lt;/td&gt; 
   &lt;td align="left"&gt;滚动更新版，持续集成更新，适合开发测试。&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/clash-verge-rev/clash-verge-rev/releases/tag/autobuild"&gt;AutoBuild&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;安装说明和常见问题，请到 &lt;a href="https://clash-verge-rev.github.io/"&gt;文档页&lt;/a&gt; 查看&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;TG 频道: &lt;a href="https://t.me/clash_verge_re"&gt;@clash_verge_rev&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;Promotion&lt;/h2&gt; 
&lt;h4&gt;&lt;a href="https://verge.dginv.click/#/register?code=oaxsAGo6"&gt;狗狗加速 —— 技术流机场 Doggygo VPN&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;高性能海外机场，免费试用，优惠套餐，解锁流媒体，全球首家支持 Hysteria 协议。&lt;/li&gt; 
 &lt;li&gt;使用 Clash Verge 专属邀请链接注册送 3 天，每天 1G 流量免费试用：&lt;a href="https://verge.dginv.click/#/register?code=oaxsAGo6"&gt;点此注册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Clash Verge 专属 8 折优惠码: verge20 (仅有 500 份)&lt;/li&gt; 
 &lt;li&gt;优惠套餐每月仅需 15.8 元，160G 流量，年付 8 折&lt;/li&gt; 
 &lt;li&gt;海外团队，无跑路风险，高达 50% 返佣&lt;/li&gt; 
 &lt;li&gt;集群负载均衡设计，高速专线(兼容老客户端)，极低延迟，无视晚高峰，4K 秒开&lt;/li&gt; 
 &lt;li&gt;全球首家 Hysteria 协议机场，现已上线更快的 &lt;code&gt;Hysteria2&lt;/code&gt; 协议(Clash Verge 客户端最佳搭配)&lt;/li&gt; 
 &lt;li&gt;解锁流媒体及 ChatGPT&lt;/li&gt; 
 &lt;li&gt;官网：&lt;a href="https://verge.dginv.click/#/register?code=oaxsAGo6"&gt;https://狗狗加速.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;本项目的构建与发布环境由 &lt;a href="https://yxvm.com/aff.php?aff=827"&gt;YXVM&lt;/a&gt; 独立服务器全力支持，&lt;/h4&gt; 
&lt;p&gt;感谢提供 独享资源、高性能、高速网络 的强大后端环境。如果你觉得下载够快、使用够爽，那是因为我们用了好服务器！&lt;/p&gt; 
&lt;p&gt;🧩 YXVM 独立服务器优势：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🌎 优质网络，回程优化，下载快到飞起&lt;/li&gt; 
 &lt;li&gt;🔧 物理机独享资源，非VPS可比，性能拉满&lt;/li&gt; 
 &lt;li&gt;🧠 适合跑代理、搭建 WEB 站 CDN 站 、搞 CI/CD 或任何高负载应用&lt;/li&gt; 
 &lt;li&gt;💡 支持即开即用，多机房选择，CN2 / IEPL 可选&lt;/li&gt; 
 &lt;li&gt;📦 本项目使用配置已在售，欢迎同款入手！&lt;/li&gt; 
 &lt;li&gt;🎯 想要同款构建体验？&lt;a href="https://yxvm.com/aff.php?aff=827"&gt;立即下单 YXVM 独立服务器！&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;基于性能强劲的 Rust 和 Tauri 2 框架&lt;/li&gt; 
 &lt;li&gt;内置&lt;a href="https://github.com/MetaCubeX/mihomo"&gt;Clash.Meta(mihomo)&lt;/a&gt;内核，并支持切换 &lt;code&gt;Alpha&lt;/code&gt; 版本内核。&lt;/li&gt; 
 &lt;li&gt;简洁美观的用户界面，支持自定义主题颜色、代理组/托盘图标以及 &lt;code&gt;CSS Injection&lt;/code&gt;。&lt;/li&gt; 
 &lt;li&gt;配置文件管理和增强（Merge 和 Script），配置文件语法提示。&lt;/li&gt; 
 &lt;li&gt;系统代理和守卫、&lt;code&gt;TUN(虚拟网卡)&lt;/code&gt; 模式。&lt;/li&gt; 
 &lt;li&gt;可视化节点和规则编辑&lt;/li&gt; 
 &lt;li&gt;WebDav 配置备份和同步&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;p&gt;Refer to &lt;a href="https://clash-verge-rev.github.io/faq/windows.html"&gt;Doc FAQ Page&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Donation&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/clash-verge-rev"&gt;捐助Clash Verge Rev的开发&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/clash-verge-rev/clash-verge-rev/dev/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;To run the development server, execute the following commands after all prerequisites for &lt;strong&gt;Tauri&lt;/strong&gt; are installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm i
pnpm run check
pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;p&gt;Issue and PR welcome!&lt;/p&gt; 
&lt;h2&gt;Acknowledgement&lt;/h2&gt; 
&lt;p&gt;Clash Verge rev was based on or inspired by these projects and so on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zzzgydi/clash-verge"&gt;zzzgydi/clash-verge&lt;/a&gt;: A Clash GUI based on tauri. Supports Windows, macOS and Linux.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tauri-apps/tauri"&gt;tauri-apps/tauri&lt;/a&gt;: Build smaller, faster, and more secure desktop applications with a web frontend.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Dreamacro/clash"&gt;Dreamacro/clash&lt;/a&gt;: A rule-based tunnel in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MetaCubeX/mihomo"&gt;MetaCubeX/mihomo&lt;/a&gt;: A rule-based tunnel in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Fndroid/clash_for_windows_pkg"&gt;Fndroid/clash_for_windows_pkg&lt;/a&gt;: A Windows/macOS GUI based on Clash.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vitejs/vite"&gt;vitejs/vite&lt;/a&gt;: Next generation frontend tooling. It's fast!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;GPL-3.0 License. See &lt;a href="https://raw.githubusercontent.com/clash-verge-rev/clash-verge-rev/dev/LICENSE"&gt;License here&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dyad-sh/dyad</title>
      <link>https://github.com/dyad-sh/dyad</link>
      <description>&lt;p&gt;Free, local, open-source AI app builder | v0 / lovable / Bolt alternative | 🌟 Star if you like it!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dyad&lt;/h1&gt; 
&lt;p&gt;Dyad is a local, open-source AI app builder. It's fast, private and fully under your control — like Lovable, v0, or Bolt, but running right on your machine.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/f6c83dfc-6ffd-4d32-93dd-4b9c46d17790" alt="Image"&gt;&lt;/p&gt; 
&lt;p&gt;More info at: &lt;a href="http://dyad.sh/"&gt;http://dyad.sh/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚡️ &lt;strong&gt;Local&lt;/strong&gt;: Fast, private and no lock-in.&lt;/li&gt; 
 &lt;li&gt;🛠 &lt;strong&gt;Bring your own keys&lt;/strong&gt;: Use your own AI API keys with no vendor lock-in.&lt;/li&gt; 
 &lt;li&gt;🖥️ &lt;strong&gt;Cross-platform&lt;/strong&gt;: Easy to run on Mac or Windows.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📦 Download&lt;/h2&gt; 
&lt;p&gt;No sign-up required. Just download and go.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://www.dyad.sh/#download"&gt;👉 Download for your platform&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;dyad&lt;/strong&gt; is open source (Apache 2.0-licensed).&lt;/p&gt; 
&lt;p&gt;If you're interested in contributing to dyad, please read our &lt;a href="https://raw.githubusercontent.com/dyad-sh/dyad/main/CONTRIBUTING.md"&gt;contributing&lt;/a&gt; doc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>th-ch/youtube-music</title>
      <link>https://github.com/th-ch/youtube-music</link>
      <description>&lt;p&gt;YouTube Music Desktop App bundled with custom plugins&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt;YouTube Music&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://github.com/th-ch/youtube-music/releases/"&gt;&lt;img src="https://img.shields.io/github/release/th-ch/youtube-music.svg?style=for-the-badge&amp;amp;logo=youtube-music" alt="GitHub release"&gt;&lt;/a&gt; &lt;a href="https://github.com/th-ch/youtube-music/raw/master/license"&gt;&lt;img src="https://img.shields.io/github/license/th-ch/youtube-music.svg?style=for-the-badge" alt="GitHub license"&gt;&lt;/a&gt; &lt;a href="https://github.com/th-ch/youtube-music/raw/master/eslint.config.mjs"&gt;&lt;img src="https://img.shields.io/badge/code_style-eslint-5ed9c7.svg?style=for-the-badge" alt="eslint code style"&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/th-ch/youtube-music/releases/"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/th-ch/youtube-music/build.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;logo=youtube-music" alt="Build status"&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/th-ch/youtube-music/releases/"&gt;&lt;img src="https://img.shields.io/github/downloads/th-ch/youtube-music/total?style=for-the-badge&amp;amp;logo=youtube-music" alt="GitHub All Releases"&gt;&lt;/a&gt; &lt;a href="https://aur.archlinux.org/packages/youtube-music-bin"&gt;&lt;img src="https://img.shields.io/aur/version/youtube-music-bin?color=blueviolet&amp;amp;style=for-the-badge&amp;amp;logo=youtube-music" alt="AUR"&gt;&lt;/a&gt; &lt;a href="https://snyk.io/test/github/th-ch/youtube-music"&gt;&lt;img src="https://snyk.io/test/github/th-ch/youtube-music/badge.svg?sanitize=true" alt="Known Vulnerabilities"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/th-ch/youtube-music/master/web/screenshot.png" alt="Screenshot" title="Screenshot"&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/th-ch/youtube-music/releases/latest"&gt; &lt;img src="https://raw.githubusercontent.com/th-ch/youtube-music/master/web/youtube-music.svg?sanitize=true" width="400" height="100" alt="YouTube Music SVG"&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;Read this in other languages: &lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/docs/readme/README-ko.md"&gt;한국어&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/docs/readme/README-fr.md"&gt;Française&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/docs/readme/README-is.md"&gt;Íslenska&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/docs/readme/README-es.md"&gt;Español&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/docs/readme/README-ru.md"&gt;Pусский&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/docs/readme/README-uk.md"&gt;Українська&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/docs/readme/README-hu.md"&gt;Magyar&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/docs/readme/README-pt.md"&gt;Português&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/docs/readme/README-ja.md"&gt;日本語&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Electron wrapper around YouTube Music featuring:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Native look &amp;amp; feel, aims at keeping the original interface&lt;/li&gt; 
 &lt;li&gt;Framework for custom plugins: change YouTube Music to your needs (style, content, features), enable/disable plugins in one click&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo Image&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Player Screen (album color theme &amp;amp; ambient light)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/th-ch/youtube-music/assets/16558115/53efdf73-b8fa-4d7b-a235-b96b91ea77fc" alt="Screenshot1"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Content&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#available-plugins"&gt;Available plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#translation"&gt;Translation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#download"&gt;Download&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#arch-linux"&gt;Arch Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#macos"&gt;MacOS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#windows"&gt;Windows&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#how-to-install-without-a-network-connection-in-windows"&gt;How to install without a network connection? (in Windows)&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#themes"&gt;Themes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#dev"&gt;Dev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#build-your-own-plugins"&gt;Build your own plugins&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#creating-a-plugin"&gt;Creating a plugin&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#common-use-cases"&gt;Common use cases&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#build"&gt;Build&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#production-preview"&gt;Production Preview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#tests"&gt;Tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/th-ch/youtube-music/master/#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Auto confirm when paused&lt;/strong&gt; (Always Enabled): disable the &lt;a href="https://user-images.githubusercontent.com/61631665/129977894-01c60740-7ec6-4bf0-9a2c-25da24491b0e.png"&gt;"Continue Watching?"&lt;/a&gt; popup that pause music after a certain time&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;And more ...&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Available plugins:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Ad Blocker&lt;/strong&gt;: Block all ads and tracking out of the box&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Album Actions&lt;/strong&gt;: Adds Undislike, Dislike, Like, and Unlike buttons to apply this to all songs in a playlist or album&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Album Color Theme&lt;/strong&gt;: Applies a dynamic theme and visual effects based on the album color palette&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Ambient Mode&lt;/strong&gt;: Applies a lighting effect by casting gentle colors from the video, into your screen’s background&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Audio Compressor&lt;/strong&gt;: Apply compression to audio (lowers the volume of the loudest parts of the signal and raises the volume of the softest parts)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Blur Navigation Bar&lt;/strong&gt;: makes navigation bar transparent and blurry&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Bypass Age Restrictions&lt;/strong&gt;: bypass YouTube's age verification&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Captions Selector&lt;/strong&gt;: Enable captions&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Compact Sidebar&lt;/strong&gt;: Always set the sidebar in compact mode&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Crossfade&lt;/strong&gt;: Crossfade between songs&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Disable Autoplay&lt;/strong&gt;: Makes every song start in "paused" mode&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://discord.com/"&gt;Discord&lt;/a&gt; Rich Presence&lt;/strong&gt;: Show your friends what you listen to with &lt;a href="https://user-images.githubusercontent.com/28219076/104362104-a7a0b980-5513-11eb-9744-bb89eabe0016.png"&gt;Rich Presence&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Downloader&lt;/strong&gt;: downloads MP3 &lt;a href="https://user-images.githubusercontent.com/61631665/129977677-83a7d067-c192-45e1-98ae-b5a4927393be.png"&gt;directly from the interface&lt;/a&gt; &lt;a href="https://github.com/ytdl-org/youtube-dl"&gt;(youtube-dl)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Equalizer&lt;/strong&gt;: add filters to boost or cut specific range of frequencies (e.g. bass booster)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Exponential Volume&lt;/strong&gt;: Makes the volume slider &lt;a href="https://greasyfork.org/en/scripts/397686-youtube-music-fix-volume-ratio/"&gt;exponential&lt;/a&gt; so it's easier to select lower volumes&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;In-App Menu&lt;/strong&gt;: &lt;a href="https://user-images.githubusercontent.com/78568641/112215894-923dbf00-8c29-11eb-95c3-3ce15db27eca.png"&gt;gives bars a fancy, dark look&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;(see &lt;a href="https://github.com/th-ch/youtube-music/issues/410#issuecomment-952060709"&gt;this post&lt;/a&gt; if you have problem accessing the menu after enabling this plugin and hide-menu option)&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Scrobbler&lt;/strong&gt;: Adds scrobbling support for &lt;a href="https://www.last.fm/"&gt;Last.fm&lt;/a&gt; and &lt;a href="https://listenbrainz.org/"&gt;ListenBrainz&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Lumia Stream&lt;/strong&gt;: Adds &lt;a href="https://lumiastream.com/"&gt;Lumia Stream&lt;/a&gt; support&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Lyrics Genius&lt;/strong&gt;: Adds lyrics support for most songs&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Music Together&lt;/strong&gt;: Share a playlist with others. When the host plays a song, everyone else will hear the same song&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Navigation&lt;/strong&gt;: Next/Back navigation arrows directly integrated in the interface, like in your favorite browser&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Google Login&lt;/strong&gt;: Remove Google login buttons and links from the interface&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Notifications&lt;/strong&gt;: Display a notification when a song starts playing (&lt;a href="https://user-images.githubusercontent.com/78568641/114102651-63ce0e00-98d0-11eb-9dfe-c5a02bb54f9c.png"&gt;interactive notifications&lt;/a&gt; are available on windows)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Picture-in-picture&lt;/strong&gt;: allows to switch the app to picture-in-picture mode&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Playback Speed&lt;/strong&gt;: Listen fast, listen slow! &lt;a href="https://user-images.githubusercontent.com/61631665/129976003-e55db5ba-bf42-448c-a059-26a009775e68.png"&gt;Adds a slider that controls song speed&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Precise Volume&lt;/strong&gt;: Control the volume precisely using mousewheel/hotkeys, with a custom hud and customizable volume steps&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Shortcuts (&amp;amp; MPRIS)&lt;/strong&gt;: Allows setting global hotkeys for playback (play/pause/next/previous) + disable &lt;a href="https://user-images.githubusercontent.com/84923831/128601225-afa38c1f-dea8-4209-9f72-0f84c1dd8b54.png"&gt;media osd&lt;/a&gt; by overriding media keys + enable Ctrl/CMD + F to search + enable linux mpris support for mediakeys + &lt;a href="https://github.com/Araxeus/youtube-music/raw/1e591d6a3df98449bcda6e63baab249b28026148/providers/song-controls.js#L13-L50"&gt;custom hotkeys&lt;/a&gt; for &lt;a href="https://github.com/th-ch/youtube-music/issues/106#issuecomment-952156902"&gt;advanced users&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Skip Disliked Song&lt;/strong&gt;: Skips disliked songs&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Skip Silences&lt;/strong&gt;: Automatically skip silenced sections&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/ajayyy/SponsorBlock"&gt;&lt;strong&gt;SponsorBlock&lt;/strong&gt;&lt;/a&gt;: Automatically Skips non-music parts like intro/outro or parts of music videos where the song isn't playing&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Synced Lyrics&lt;/strong&gt;: Provides synced lyrics to songs, using providers like &lt;a href="https://lrclib.net"&gt;LRClib&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Taskbar Media Control&lt;/strong&gt;: Control playback from your &lt;a href="https://user-images.githubusercontent.com/78568641/111916130-24a35e80-8a82-11eb-80c8-5021c1aa27f4.png"&gt;Windows taskbar&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;TouchBar&lt;/strong&gt;: Custom TouchBar layout for macOS&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tuna OBS&lt;/strong&gt;: Integration with &lt;a href="https://obsproject.com/"&gt;OBS&lt;/a&gt;'s plugin &lt;a href="https://obsproject.com/forum/resources/tuna.843/"&gt;Tuna&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unobtrusive Player&lt;/strong&gt;: Prevents the player from popping up when playing a song&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Video Quality Changer&lt;/strong&gt;: Allows changing the video quality with a &lt;a href="https://user-images.githubusercontent.com/78568641/138574366-70324a5e-2d64-4f6a-acdd-dc2a2b9cecc5.png"&gt;button&lt;/a&gt; on the video overlay&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Video Toggle&lt;/strong&gt;: Adds a &lt;a href="https://user-images.githubusercontent.com/28893833/173663950-63e6610e-a532-49b7-9afa-54cb57ddfc15.png"&gt;button&lt;/a&gt; to switch between Video/Song mode. can also optionally remove the whole video tab&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Visualizer&lt;/strong&gt;: Different music visualizers&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;You can help with translation on &lt;a href="https://hosted.weblate.org/projects/youtube-music/"&gt;Hosted Weblate&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://hosted.weblate.org/engage/youtube-music/"&gt; &lt;img src="https://hosted.weblate.org/widget/youtube-music/i18n/multi-auto.svg?sanitize=true" alt="translation status"&gt; &lt;img src="https://hosted.weblate.org/widget/youtube-music/i18n/287x66-black.png" alt="translation status 2"&gt; &lt;/a&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p&gt;You can check out the &lt;a href="https://github.com/th-ch/youtube-music/releases/latest"&gt;latest release&lt;/a&gt; to quickly find the latest version.&lt;/p&gt; 
&lt;h3&gt;Arch Linux&lt;/h3&gt; 
&lt;p&gt;Install the &lt;a href="https://aur.archlinux.org/packages/youtube-music-bin"&gt;&lt;code&gt;youtube-music-bin&lt;/code&gt;&lt;/a&gt; package from the AUR. For AUR installation instructions, take a look at this &lt;a href="https://wiki.archlinux.org/index.php/Arch_User_Repository#Installing_packages"&gt;wiki page&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;p&gt;You can install the app using Homebrew (see the &lt;a href="https://github.com/th-ch/homebrew-youtube-music"&gt;cask definition&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install th-ch/youtube-music/youtube-music
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you install the app manually and get an error "is damaged and can’t be opened." when launching the app, run the following in the Terminal:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;/usr/bin/xattr -cr /Applications/YouTube\ Music.app
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;a href="https://scoop.sh"&gt;Scoop package manager&lt;/a&gt; to install the &lt;code&gt;youtube-music&lt;/code&gt; package from the &lt;a href="https://github.com/ScoopInstaller/Extras"&gt;&lt;code&gt;extras&lt;/code&gt; bucket&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;scoop bucket add extras
scoop install extras/youtube-music
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternately you can use &lt;a href="https://learn.microsoft.com/en-us/windows/package-manager/winget/"&gt;Winget&lt;/a&gt;, Windows 11s official CLI package manager to install the &lt;code&gt;th-ch.YouTubeMusic&lt;/code&gt; package.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: Microsoft Defender SmartScreen might block the installation since it is from an "unknown publisher". This is also true for the manual installation when trying to run the executable(.exe) after a manual download here on github (same file).&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;winget install th-ch.YouTubeMusic
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;How to install without a network connection? (in Windows)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download the &lt;code&gt;*.nsis.7z&lt;/code&gt; file for &lt;em&gt;your device architecture&lt;/em&gt; in &lt;a href="https://github.com/th-ch/youtube-music/releases/latest"&gt;release page&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;x64&lt;/code&gt; for 64-bit Windows&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;ia32&lt;/code&gt; for 32-bit Windows&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;arm64&lt;/code&gt; for ARM64 Windows&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Download installer in release page. (&lt;code&gt;*-Setup.exe&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Place them in the &lt;strong&gt;same directory&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Run the installer.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Themes&lt;/h2&gt; 
&lt;p&gt;You can load CSS files to change the look of the application (Options &amp;gt; Visual Tweaks &amp;gt; Themes).&lt;/p&gt; 
&lt;p&gt;Some predefined themes are available in &lt;a href="https://github.com/kerichdev/themes-for-ytmdesktop-player"&gt;https://github.com/kerichdev/themes-for-ytmdesktop-player&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Dev&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/th-ch/youtube-music
cd youtube-music
pnpm install --frozen-lockfile
pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build your own plugins&lt;/h2&gt; 
&lt;p&gt;Using plugins, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;manipulate the app - the &lt;code&gt;BrowserWindow&lt;/code&gt; from electron is passed to the plugin handler&lt;/li&gt; 
 &lt;li&gt;change the front by manipulating the HTML/CSS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Creating a plugin&lt;/h3&gt; 
&lt;p&gt;Create a folder in &lt;code&gt;src/plugins/YOUR-PLUGIN-NAME&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;index.ts&lt;/code&gt;: the main file of the plugin&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import style from './style.css?inline'; // import style as inline

import { createPlugin } from '@/utils';

export default createPlugin({
  name: 'Plugin Label',
  restartNeeded: true, // if value is true, ytmusic show restart dialog
  config: {
    enabled: false,
  }, // your custom config
  stylesheets: [style], // your custom style,
  menu: async ({ getConfig, setConfig }) =&amp;gt; {
    // All *Config methods are wrapped Promise&amp;lt;T&amp;gt;
    const config = await getConfig();
    return [
      {
        label: 'menu',
        submenu: [1, 2, 3].map((value) =&amp;gt; ({
          label: `value ${value}`,
          type: 'radio',
          checked: config.value === value,
          click() {
            setConfig({ value });
          },
        })),
      },
    ];
  },
  backend: {
    start({ window, ipc }) {
      window.maximize();

      // you can communicate with renderer plugin
      ipc.handle('some-event', () =&amp;gt; {
        return 'hello';
      });
    },
    // it fired when config changed
    onConfigChange(newConfig) { /* ... */ },
    // it fired when plugin disabled
    stop(context) { /* ... */ },
  },
  renderer: {
    async start(context) {
      console.log(await context.ipc.invoke('some-event'));
    },
    // Only renderer available hook
    onPlayerApiReady(api: YoutubePlayer, context: RendererContext) {
      // set plugin config easily
      context.setConfig({ myConfig: api.getVolume() });
    },
    onConfigChange(newConfig) { /* ... */ },
    stop(_context) { /* ... */ },
  },
  preload: {
    async start({ getConfig }) {
      const config = await getConfig();
    },
    onConfigChange(newConfig) {},
    stop(_context) {},
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Common use cases&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;injecting custom CSS: create a &lt;code&gt;style.css&lt;/code&gt; file in the same folder then:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;// index.ts
import style from './style.css?inline'; // import style as inline

import { createPlugin } from '@/utils';

export default createPlugin({
  name: 'Plugin Label',
  restartNeeded: true, // if value is true, ytmusic will show a restart dialog
  config: {
    enabled: false,
  }, // your custom config
  stylesheets: [style], // your custom style
  renderer() {} // define renderer hook
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you want to change the HTML:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { createPlugin } from '@/utils';

export default createPlugin({
  name: 'Plugin Label',
  restartNeeded: true, // if value is true, ytmusic will show the restart dialog
  config: {
    enabled: false,
  }, // your custom config
  renderer() {
    // Remove the login button
    document.querySelector(".sign-in-link.ytmusic-nav-bar").remove();
  } // define renderer hook
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;communicating between the front and back: can be done using the ipcMain module from electron. See &lt;code&gt;index.ts&lt;/code&gt; file and example in &lt;code&gt;sponsorblock&lt;/code&gt; plugin.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repo&lt;/li&gt; 
 &lt;li&gt;Follow &lt;a href="https://pnpm.io/installation"&gt;this guide&lt;/a&gt; to install &lt;code&gt;pnpm&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;pnpm install --frozen-lockfile&lt;/code&gt; to install dependencies&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;pnpm build:OS&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;pnpm dist:win&lt;/code&gt; - Windows&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pnpm dist:linux&lt;/code&gt; - Linux (amd64)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pnpm dist:linux:deb-arm64&lt;/code&gt; - Linux (arm64 for Debian)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pnpm dist:linux:rpm-arm64&lt;/code&gt; - Linux (arm64 for Fedora)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pnpm dist:mac&lt;/code&gt; - macOS (amd64)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pnpm dist:mac:arm64&lt;/code&gt; - macOS (arm64)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Builds the app for macOS, Linux, and Windows, using &lt;a href="https://github.com/electron-userland/electron-builder"&gt;electron-builder&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Production Preview&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Uses &lt;a href="https://playwright.dev/"&gt;Playwright&lt;/a&gt; to test the app.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT © &lt;a href="https://github.com/th-ch/youtube-music"&gt;th-ch&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;Why apps menu isn't showing up?&lt;/h3&gt; 
&lt;p&gt;If &lt;code&gt;Hide Menu&lt;/code&gt; option is on - you can show the menu with the &lt;kbd&gt;alt&lt;/kbd&gt; key (or &lt;kbd&gt;`&lt;/kbd&gt; [backtick] if using the in-app-menu plugin)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>zaidmukaddam/scira</title>
      <link>https://github.com/zaidmukaddam/scira</link>
      <description>&lt;p&gt;Scira (Formerly MiniPerplx) is a minimalistic AI-powered search engine that helps you find information on the internet and cites it too. Powered by Vercel AI SDK! Search with models like xAI's Grok 3.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Scira&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/zaidmukaddam/scira/main/app/opengraph-image.png" alt="Scira"&gt;&lt;/p&gt; 
&lt;p&gt;A minimalistic AI-powered search engine that helps you find information on the internet.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;strong&gt;&lt;a href="https://scira.ai"&gt;Try Scira at scira.ai&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://deepwiki.com/zaidmukaddam/scira"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Powered By&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align="center"&gt;&lt;a href="https://sdk.vercel.ai/docs"&gt;Vercel AI SDK&lt;/a&gt;&lt;/th&gt; 
    &lt;th align="center"&gt;&lt;a href="https://exa.ai"&gt;Exa AI&lt;/a&gt;&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align="center"&gt;&lt;img src="https://raw.githubusercontent.com/zaidmukaddam/scira/main/public/one.svg?sanitize=true" alt="Vercel AI SDK" height="40"&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;&lt;img src="https://raw.githubusercontent.com/zaidmukaddam/scira/main/public/exa.png" alt="Exa AI" height="40"&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="center"&gt;For AI model integration and streaming&lt;/td&gt; 
    &lt;td align="center"&gt;For web search and content retrieval&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;h2&gt;Special Thanks&lt;/h2&gt; 
&lt;div align="center" markdown="1"&gt; 
 &lt;p&gt;&lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=scira"&gt;&lt;img src="https://github.com/user-attachments/assets/2bda420d-4211-4900-a37e-e3c7056d799c" alt="Warp"&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;strong&gt;&lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=scira"&gt;Warp, the intelligent terminal&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;/h3&gt; 
 &lt;p&gt;&lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=scira"&gt;Available for MacOS, Linux, &amp;amp; Windows&lt;/a&gt;&lt;br&gt; &lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=scira"&gt;Visit warp.dev to learn more&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Core Search &amp;amp; Information&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AI-powered search&lt;/strong&gt;: Get answers to your questions using multiple AI models including xAI's Grok, Anthropic's Claude, Google's Gemini, and OpenAI's GPT models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Web search&lt;/strong&gt;: Search the web using Exa's API with support for multiple queries, search depths, and topics&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;URL content retrieval&lt;/strong&gt;: Extract and analyze content from any URL using Exa AI with live crawling capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reddit search&lt;/strong&gt;: Search Reddit content with time range filtering using Tavily API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;X (Twitter) search&lt;/strong&gt;: Search X posts with date ranges and specific handle filtering using xAI Live Search&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extreme search&lt;/strong&gt;: Advanced multi-step search capability for complex queries&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Academic &amp;amp; Research&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Academic search&lt;/strong&gt;: Search for academic papers and research using Exa AI with abstracts and summaries&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;YouTube search&lt;/strong&gt;: Find YouTube videos with detailed information, captions, and timestamps powered by Exa AI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Entertainment &amp;amp; Media&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Movie &amp;amp; TV show search&lt;/strong&gt;: Get detailed information about movies and TV shows using TMDB API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trending movies&lt;/strong&gt;: Discover trending movies with cast, ratings, and detailed information&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trending TV shows&lt;/strong&gt;: Find popular TV shows with comprehensive metadata&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Financial &amp;amp; Data Analysis&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Stock charts&lt;/strong&gt;: Generate interactive stock charts with news integration using yfinance and Tavily&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Currency converter&lt;/strong&gt;: Convert between currencies with real-time exchange rates using yfinance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code interpreter&lt;/strong&gt;: Write and execute Python code with chart generation capabilities using Daytona sandbox&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Location &amp;amp; Travel&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Weather information&lt;/strong&gt;: Get current weather and forecasts for any location using OpenWeather API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Maps &amp;amp; geocoding&lt;/strong&gt;: Find places and get coordinates using Google Maps API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nearby places search&lt;/strong&gt;: Discover nearby restaurants, attractions, and services with Google Places API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flight tracking&lt;/strong&gt;: Track real-time flight information using Aviation Stack API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Productivity &amp;amp; Utilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Text translation&lt;/strong&gt;: Translate text between languages using AI models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Date &amp;amp; time&lt;/strong&gt;: Get current date and time in user's timezone with multiple format options&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Memory management&lt;/strong&gt;: Add and search personal memories using Mem0 AI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP server search&lt;/strong&gt;: Search for Model Context Protocol servers using Smithery Registry&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Search Groups&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Web&lt;/strong&gt;: Search across the entire internet powered by Tavily&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Memory&lt;/strong&gt;: Your personal memory companion (requires authentication)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Analysis&lt;/strong&gt;: Code execution, stock charts, and currency conversion&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chat&lt;/strong&gt;: Direct conversation with AI models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;X&lt;/strong&gt;: Search X (Twitter) posts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reddit&lt;/strong&gt;: Search Reddit posts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Academic&lt;/strong&gt;: Search academic papers powered by Exa&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;YouTube&lt;/strong&gt;: Search YouTube videos powered by Exa&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extreme&lt;/strong&gt;: Deep research with multiple sources and analysis&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;LLM Models Supported&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;xAI&lt;/strong&gt;: Grok 3, Grok 3 Mini, Grok 2 Vision&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Google&lt;/strong&gt;: Gemini 2.5 Flash (Preview), Gemini 2.5 Pro (Preview)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Anthropic&lt;/strong&gt;: Claude 4 Sonnet&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OpenAI&lt;/strong&gt;: GPT-4o, o4-mini, o3 (with reasoning capabilities)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Groq&lt;/strong&gt;: Qwen QwQ 32B, Qwen 3 32B, Meta's Llama 4 Maverick&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Built with&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; - React framework&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt; - Styling&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sdk.vercel.ai/docs"&gt;Vercel AI SDK&lt;/a&gt; - AI model integration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ui.shadcn.com/"&gt;Shadcn/UI&lt;/a&gt; - UI components&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://exa.ai/"&gt;Exa.AI&lt;/a&gt; - Web search and content retrieval&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tavily.com/"&gt;Tavily&lt;/a&gt; - Search grounding for reddit search&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://openweathermap.org/"&gt;OpenWeather&lt;/a&gt; - Weather data&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://daytona.io/"&gt;Daytona&lt;/a&gt; - Code execution sandbox&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.google.com/maps"&gt;Google Maps&lt;/a&gt; - Location services&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aviationstack.com/"&gt;Aviation Stack&lt;/a&gt; - Flight tracking&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.themoviedb.org/"&gt;TMDB&lt;/a&gt; - Movie and TV data&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mem0.ai/"&gt;Mem0&lt;/a&gt; - Memory management&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/better-auth/better-auth"&gt;Better Auth&lt;/a&gt; - Authentication&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://orm.drizzle.team/"&gt;Drizzle ORM&lt;/a&gt; - Database management&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Deploy your own&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fzaidmukaddam%2Fscira&amp;amp;env=XAI_API_KEY,OPENAI_API_KEY,ANTHROPIC_API_KEY,GROQ_API_KEY,GOOGLE_GENERATIVE_AI_API_KEY,DAYTONA_API_KEY,DATABASE_URL,BETTER_AUTH_SECRET,GITHUB_CLIENT_ID,GITHUB_CLIENT_SECRET,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,TWITTER_CLIENT_ID,TWITTER_CLIENT_SECRET,REDIS_URL,ELEVENLABS_API_KEY,TAVILY_API_KEY,EXA_API_KEY,TMDB_API_KEY,YT_ENDPOINT,FIRECRAWL_API_KEY,OPENWEATHER_API_KEY,GOOGLE_MAPS_API_KEY,MAPBOX_ACCESS_TOKEN,AVIATION_STACK_API_KEY,CRON_SECRET,BLOB_READ_WRITE_TOKEN,MEM0_API_KEY,MEM0_ORG_ID,MEM0_PROJECT_ID,SMITHERY_API_KEY,NEXT_PUBLIC_MAPBOX_TOKEN,NEXT_PUBLIC_POSTHOG_KEY,NEXT_PUBLIC_POSTHOG_HOST,NEXT_PUBLIC_SCIRA_PUBLIC_API_KEY,SCIRA_API_KEY&amp;amp;envDescription=API%20keys%20and%20configuration%20required%20for%20Scira%20to%20function"&gt;&lt;img src="https://vercel.com/button" alt="Deploy with Vercel"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Set Scira as your default search engine&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open the Chrome browser settings&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Click on the three vertical dots in the upper right corner of the browser.&lt;/li&gt; 
   &lt;li&gt;Select "Settings" from the dropdown menu.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Go to the search engine settings&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;In the left sidebar, click on "Search engine."&lt;/li&gt; 
   &lt;li&gt;Then select "Manage search engines and site search."&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Add a new search engine&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Click on "Add" next to "Site search."&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set the search engine name&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Enter &lt;code&gt;Scira&lt;/code&gt; in the "Search engine" field.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set the search engine URL&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Enter &lt;code&gt;https://scira.ai?q=%s&lt;/code&gt; in the "URL with %s in place of query" field.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set the search engine shortcut&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Enter &lt;code&gt;sh&lt;/code&gt; in the "Shortcut" field.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set Default&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Click on the three dots next to the search engine you just added.&lt;/li&gt; 
   &lt;li&gt;Select "Make default" from the dropdown menu.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;After completing these steps, you should be able to use Scira as your default search engine in Chrome.&lt;/p&gt; 
&lt;h3&gt;Local development&lt;/h3&gt; 
&lt;h4&gt;Run via Docker&lt;/h4&gt; 
&lt;p&gt;The application can be run using Docker in two ways:&lt;/p&gt; 
&lt;h5&gt;Using Docker Compose (Recommended)&lt;/h5&gt; 
&lt;ol&gt; 
 &lt;li&gt;Make sure you have Docker and Docker Compose installed on your system&lt;/li&gt; 
 &lt;li&gt;Create a &lt;code&gt;.env&lt;/code&gt; file based on &lt;code&gt;.env.example&lt;/code&gt; with your API keys&lt;/li&gt; 
 &lt;li&gt;Run the following command in the project root: &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;The application will be available at &lt;code&gt;http://localhost:3000&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h5&gt;Using Docker Directly&lt;/h5&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create a &lt;code&gt;.env&lt;/code&gt; file based on &lt;code&gt;.env.example&lt;/code&gt; with your API keys&lt;/li&gt; 
 &lt;li&gt;Build the Docker image: &lt;pre&gt;&lt;code class="language-bash"&gt;docker build -t scira.app .
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Run the container: &lt;pre&gt;&lt;code class="language-bash"&gt;docker run --env-file .env -p 3000:3000 scira.app
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The application uses a multi-stage build process to minimize the final image size and implements security best practices. The production image runs on Node.js LTS with Alpine Linux for a minimal footprint.&lt;/p&gt; 
&lt;h4&gt;Run with Node.js&lt;/h4&gt; 
&lt;p&gt;To run the application locally without Docker:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Sign up for accounts with the required AI providers: 
  &lt;ul&gt; 
   &lt;li&gt;OpenAI (required)&lt;/li&gt; 
   &lt;li&gt;Anthropic (required)&lt;/li&gt; 
   &lt;li&gt;Exa (required for web search feature)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env.local&lt;/code&gt; and fill in your API keys&lt;/li&gt; 
 &lt;li&gt;Install dependencies: &lt;pre&gt;&lt;code class="language-bash"&gt;pnpm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Start the development server: &lt;pre&gt;&lt;code class="language-bash"&gt;pnpm dev
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Open &lt;code&gt;http://localhost:3000&lt;/code&gt; in your browser&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;This project is licensed under the Apache 2.0 License - see the &lt;a href="https://raw.githubusercontent.com/zaidmukaddam/scira/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>leonardsellem/n8n-mcp-server</title>
      <link>https://github.com/leonardsellem/n8n-mcp-server</link>
      <description>&lt;p&gt;MCP server that provides tools and resources for interacting with n8n API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;n8n MCP Server&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://badge.fury.io/js/%40leonardsellem%2Fn8n-mcp-server"&gt;&lt;img src="https://badge.fury.io/js/%40leonardsellem%2Fn8n-mcp-server.svg?sanitize=true" alt="npm version"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A Model Context Protocol (MCP) server that allows AI assistants to interact with n8n workflows through natural language.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;This project provides a Model Context Protocol (MCP) server that empowers AI assistants to seamlessly interact with n8n, a popular workflow automation tool. It acts as a bridge, enabling AI assistants to programmatically manage and control n8n workflows and executions using natural language commands.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js 20 or later&lt;/li&gt; 
 &lt;li&gt;n8n instance with API access enabled&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Install from npm&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @leonardsellem/n8n-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install from source&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone the repository
git clone https://github.com/leonardsellem/n8n-mcp-server.git
cd n8n-mcp-server

# Install dependencies
npm install

# Build the project
npm run build

# Optional: Install globally
npm install -g .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker Installation&lt;/h3&gt; 
&lt;p&gt;You can also run the server using Docker:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Pull the image
docker pull leonardsellem/n8n-mcp-server

# Run the container with your n8n API configuration
docker run -e N8N_API_URL=http://your-n8n:5678/api/v1 \
  -e N8N_API_KEY=your_n8n_api_key \
  -e N8N_WEBHOOK_USERNAME=username \
  -e N8N_WEBHOOK_PASSWORD=password \
  leonardsellem/n8n-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Updating the Server&lt;/h2&gt; 
&lt;p&gt;How you update the server depends on how you initially installed it.&lt;/p&gt; 
&lt;h3&gt;1. Installed globally via npm&lt;/h3&gt; 
&lt;p&gt;If you installed the server using &lt;code&gt;npm install -g @leonardsellem/n8n-mcp-server&lt;/code&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open your terminal or command prompt.&lt;/li&gt; 
 &lt;li&gt;Run the following command to get the latest version: &lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @leonardsellem/n8n-mcp-server@latest
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;If the server is currently running (e.g., as a background process or service), you'll need to restart it for the changes to take effect.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;2. Installed from source&lt;/h3&gt; 
&lt;p&gt;If you cloned the repository and installed from source:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open your terminal or command prompt.&lt;/li&gt; 
 &lt;li&gt;Navigate to the directory where you cloned the project: &lt;pre&gt;&lt;code class="language-bash"&gt;cd path/to/n8n-mcp-server
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;If you've made any local changes to the code that you want to keep, consider stashing them (optional): &lt;pre&gt;&lt;code class="language-bash"&gt;git stash
&lt;/code&gt;&lt;/pre&gt; You can apply them later with &lt;code&gt;git stash pop&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Pull the latest changes from the repository (assuming you are on the &lt;code&gt;main&lt;/code&gt; branch): &lt;pre&gt;&lt;code class="language-bash"&gt;git pull origin main
&lt;/code&gt;&lt;/pre&gt; If you are on a different branch, replace &lt;code&gt;main&lt;/code&gt; with your branch name.&lt;/li&gt; 
 &lt;li&gt;Install or update any changed dependencies: &lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Rebuild the project to include the latest updates: &lt;pre&gt;&lt;code class="language-bash"&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;If you previously installed it globally from this source folder using &lt;code&gt;npm install -g .&lt;/code&gt;, you might want to run this command again to update the global link: &lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g .
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Restart the server. 
  &lt;ul&gt; 
   &lt;li&gt;If you run the server directly using a command like &lt;code&gt;node build/index.js&lt;/code&gt; in your AI assistant's MCP configuration, ensure the path is still correct. Using &lt;code&gt;npm install -g .&lt;/code&gt; and then &lt;code&gt;n8n-mcp-server&lt;/code&gt; as the command should keep this consistent.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3. Using Docker&lt;/h3&gt; 
&lt;p&gt;If you are running the server using Docker:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Pull the latest image from Docker Hub: &lt;pre&gt;&lt;code class="language-bash"&gt;docker pull leonardsellem/n8n-mcp-server:latest
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Stop and remove your old container. You'll need your container's name or ID (you can find it using &lt;code&gt;docker ps&lt;/code&gt;): &lt;pre&gt;&lt;code class="language-bash"&gt;docker stop &amp;lt;your_container_name_or_id&amp;gt;
docker rm &amp;lt;your_container_name_or_id&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Start a new container with the updated image. Use the same &lt;code&gt;docker run&lt;/code&gt; command you used previously, including all your necessary environment variables (refer to the "Docker Installation" section for an example command). For instance: &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -e N8N_API_URL=http://your-n8n:5678/api/v1 \
  -e N8N_API_KEY=your_n8n_api_key \
  -e N8N_WEBHOOK_USERNAME=username \
  -e N8N_WEBHOOK_PASSWORD=password \
  leonardsellem/n8n-mcp-server:latest
&lt;/code&gt;&lt;/pre&gt; Ensure you use &lt;code&gt;:latest&lt;/code&gt; or the specific version tag you intend to run.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Create a &lt;code&gt;.env&lt;/code&gt; file in the directory where you'll run the server, using &lt;code&gt;.env.example&lt;/code&gt; as a template:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cp .env.example .env
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Configure the following environment variables:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Variable&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;N8N_API_URL&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Full URL of the n8n API, including &lt;code&gt;/api/v1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;http://localhost:5678/api/v1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;N8N_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;API key for authenticating with n8n&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;n8n_api_...&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;N8N_WEBHOOK_USERNAME&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Username for webhook authentication (if using webhooks)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;username&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;N8N_WEBHOOK_PASSWORD&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Password for webhook authentication&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;password&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enable debug logging (optional)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Generating an n8n API Key&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open your n8n instance in a browser&lt;/li&gt; 
 &lt;li&gt;Go to Settings &amp;gt; API &amp;gt; API Keys&lt;/li&gt; 
 &lt;li&gt;Create a new API key with appropriate permissions&lt;/li&gt; 
 &lt;li&gt;Copy the key to your &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Running the Server&lt;/h3&gt; 
&lt;p&gt;From the installation directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;n8n-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or if installed globally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;n8n-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Integrating with AI Assistants&lt;/h3&gt; 
&lt;p&gt;After building the server (&lt;code&gt;npm run build&lt;/code&gt;), you need to configure your AI assistant (like VS Code with the Claude extension or the Claude Desktop app) to run it. This typically involves editing a JSON configuration file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example Configuration (e.g., in VS Code &lt;code&gt;settings.json&lt;/code&gt; or Claude Desktop &lt;code&gt;claude_desktop_config.json&lt;/code&gt;):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    // Give your server a unique name
    "n8n-local": {
      // Use 'node' to execute the built JavaScript file
      "command": "node",
      // Provide the *absolute path* to the built index.js file
      "args": [
        "/path/to/your/cloned/n8n-mcp-server/build/index.js"
        // On Windows, use double backslashes:
        // "C:\\path\\to\\your\\cloned\\n8n-mcp-server\\build\\index.js"
      ],
      // Environment variables needed by the server
      "env": {
        "N8N_API_URL": "http://your-n8n-instance:5678/api/v1", // Replace with your n8n URL
        "N8N_API_KEY": "YOUR_N8N_API_KEY", // Replace with your key
        // Add webhook credentials only if you plan to use webhook tools
        // "N8N_WEBHOOK_USERNAME": "your_webhook_user",
        // "N8N_WEBHOOK_PASSWORD": "your_webhook_password"
      },
      // Ensure the server is enabled
      "disabled": false,
      // Default autoApprove settings
      "autoApprove": []
    }
    // ... other servers might be configured here
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Key Points:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Replace &lt;code&gt;/path/to/your/cloned/n8n-mcp-server/&lt;/code&gt; with the actual absolute path where you cloned and built the repository.&lt;/li&gt; 
 &lt;li&gt;Use the correct path separator for your operating system (forward slashes &lt;code&gt;/&lt;/code&gt; for macOS/Linux, double backslashes &lt;code&gt;\\&lt;/code&gt; for Windows).&lt;/li&gt; 
 &lt;li&gt;Ensure you provide the correct &lt;code&gt;N8N_API_URL&lt;/code&gt; (including &lt;code&gt;/api/v1&lt;/code&gt;) and &lt;code&gt;N8N_API_KEY&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;The server needs to be built (&lt;code&gt;npm run build&lt;/code&gt;) before the assistant can run the &lt;code&gt;build/index.js&lt;/code&gt; file.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Available Tools&lt;/h2&gt; 
&lt;p&gt;The server provides the following tools:&lt;/p&gt; 
&lt;h3&gt;Using Webhooks&lt;/h3&gt; 
&lt;p&gt;This MCP server supports executing workflows through n8n webhooks. To use this functionality:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create a webhook-triggered workflow in n8n.&lt;/li&gt; 
 &lt;li&gt;Set up Basic Authentication on your webhook node.&lt;/li&gt; 
 &lt;li&gt;Use the &lt;code&gt;run_webhook&lt;/code&gt; tool to trigger the workflow, passing just the workflow name.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const result = await useRunWebhook({
  workflowName: "hello-world", // Will call &amp;lt;n8n-url&amp;gt;/webhook/hello-world
  data: {
    prompt: "Hello from AI assistant!"
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The webhook authentication is handled automatically using the &lt;code&gt;N8N_WEBHOOK_USERNAME&lt;/code&gt; and &lt;code&gt;N8N_WEBHOOK_PASSWORD&lt;/code&gt; environment variables.&lt;/p&gt; 
&lt;h3&gt;Workflow Management&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;workflow_list&lt;/code&gt;: List all workflows&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;workflow_get&lt;/code&gt;: Get details of a specific workflow&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;workflow_create&lt;/code&gt;: Create a new workflow&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;workflow_update&lt;/code&gt;: Update an existing workflow&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;workflow_delete&lt;/code&gt;: Delete a workflow&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;workflow_activate&lt;/code&gt;: Activate a workflow&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;workflow_deactivate&lt;/code&gt;: Deactivate a workflow&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Execution Management&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;execution_run&lt;/code&gt;: Execute a workflow via the API&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;run_webhook&lt;/code&gt;: Execute a workflow via a webhook&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;execution_get&lt;/code&gt;: Get details of a specific execution&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;execution_list&lt;/code&gt;: List executions for a workflow&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;execution_stop&lt;/code&gt;: Stop a running execution&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;The server provides the following resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;n8n://workflows/list&lt;/code&gt;: List of all workflows&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;n8n://workflow/{id}&lt;/code&gt;: Details of a specific workflow&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;n8n://executions/{workflowId}&lt;/code&gt;: List of executions for a workflow&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;n8n://execution/{id}&lt;/code&gt;: Details of a specific execution&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The n8n MCP Server is a community-driven project, and its future direction will be shaped by your feedback and contributions!&lt;/p&gt; 
&lt;p&gt;Currently, our roadmap is flexible and under continuous development. We believe in evolving the server based on the needs and ideas of our users.&lt;/p&gt; 
&lt;p&gt;We encourage you to get involved in shaping the future of this tool:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Suggest Features:&lt;/strong&gt; Have an idea for a new tool, resource, or improvement?&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Discuss Priorities:&lt;/strong&gt; Want to weigh in on what we should focus on next?&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please share your thoughts, feature requests, and ideas by opening an issue on our &lt;a href="https://github.com/leonardsellem/n8n-mcp-server/issues"&gt;GitHub Issues page&lt;/a&gt;. Let's build a powerful tool for AI assistants together!&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;Building&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running in Development Mode&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linting&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from the community and are excited to see how you can help improve the n8n MCP Server! Whether you're fixing a bug, proposing a new feature, or improving documentation, your help is valued.&lt;/p&gt; 
&lt;h3&gt;Reporting Bugs&lt;/h3&gt; 
&lt;p&gt;If you encounter a bug, please report it by opening an issue on our &lt;a href="https://github.com/leonardsellem/n8n-mcp-server/issues"&gt;GitHub Issues page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When submitting a bug report, please include the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A clear and descriptive title.&lt;/li&gt; 
 &lt;li&gt;A detailed description of the problem, including steps to reproduce the bug.&lt;/li&gt; 
 &lt;li&gt;Information about your environment (e.g., Node.js version, n8n MCP Server version, operating system).&lt;/li&gt; 
 &lt;li&gt;Any relevant error messages or screenshots.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Suggesting Enhancements&lt;/h3&gt; 
&lt;p&gt;We're always looking for ways to make the server better. If you have an idea for an enhancement or a new feature, please open an issue on our &lt;a href="https://github.com/leonardsellem/n8n-mcp-server/issues"&gt;GitHub Issues page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please provide:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A clear and descriptive title for your suggestion.&lt;/li&gt; 
 &lt;li&gt;A detailed explanation of the proposed enhancement and why it would be beneficial.&lt;/li&gt; 
 &lt;li&gt;Any potential use cases or examples.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Submitting Pull Requests&lt;/h3&gt; 
&lt;p&gt;If you'd like to contribute code, please follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork the repository:&lt;/strong&gt; Create your own fork of the &lt;a href="https://github.com/leonardsellem/n8n-mcp-server"&gt;n8n-mcp-server repository&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create a branch:&lt;/strong&gt; Create a new branch in your fork for your changes (e.g., &lt;code&gt;git checkout -b feature/your-feature-name&lt;/code&gt; or &lt;code&gt;bugfix/issue-number&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Make your changes:&lt;/strong&gt; Implement your feature or bug fix. 
  &lt;ul&gt; 
   &lt;li&gt;Ensure your code adheres to the existing coding style. (We use Prettier for formatting, which can be run with &lt;code&gt;npm run lint&lt;/code&gt;).&lt;/li&gt; 
   &lt;li&gt;Include tests for your changes if applicable. You can run tests using &lt;code&gt;npm test&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Commit your changes:&lt;/strong&gt; Write clear and concise commit messages.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Push to your fork:&lt;/strong&gt; Push your changes to your forked repository.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Open a Pull Request (PR):&lt;/strong&gt; Submit a PR to the &lt;code&gt;main&lt;/code&gt; branch of the official &lt;code&gt;n8n-mcp-server&lt;/code&gt; repository. 
  &lt;ul&gt; 
   &lt;li&gt;Provide a clear title and description for your PR, explaining the changes you've made and referencing any related issues.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We'll review your PR as soon as possible and provide feedback. Thank you for your contribution!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/leonardsellem/n8n-mcp-server/main/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Join Our Team: Call for Co-Maintainers!&lt;/h2&gt; 
&lt;p&gt;This project is a vibrant, community-driven tool actively used by AI enthusiasts and developers. Currently, it's maintained on a part-time basis by a passionate individual who isn't a seasoned engineer but is dedicated to bridging AI with workflow automation. To help this project flourish, ensure its long-term health, and keep up with its growing user base, we're looking for enthusiastic &lt;strong&gt;co-maintainers&lt;/strong&gt; to join the team!&lt;/p&gt; 
&lt;h3&gt;Why Contribute?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Learn and Grow:&lt;/strong&gt; Sharpen your skills in areas like TypeScript, Node.js, API integration, and AI tool development.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Collaborate:&lt;/strong&gt; Work alongside other motivated developers and AI users.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Make an Impact:&lt;/strong&gt; Directly shape the future of this project and help build a valuable tool for the AI community.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Open Source:&lt;/strong&gt; Gain experience contributing to an open-source project.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;How You Can Help&lt;/h3&gt; 
&lt;p&gt;We welcome contributions in many forms! Here are some areas where you could make a big difference:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Bug Fixing:&lt;/strong&gt; Help us identify and squash bugs to improve stability.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Feature Development:&lt;/strong&gt; Implement new tools and functionalities based on user needs and your ideas.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; Improve our guides, examples, and API references to make the project more accessible.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Testing:&lt;/strong&gt; Enhance our test suite (unit, integration) to ensure code quality and reliability.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CI/CD:&lt;/strong&gt; Help streamline our development and deployment pipelines.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code Reviews:&lt;/strong&gt; Provide feedback on pull requests and help maintain code standards.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Community Support:&lt;/strong&gt; Assist users with questions and help manage discussions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Get Involved!&lt;/h3&gt; 
&lt;p&gt;If you're excited about the intersection of AI and workflow automation, and you're looking for a rewarding open-source opportunity, we'd love to hear from you!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Ready to contribute?&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Check out our &lt;a href="https://github.com/leonardsellem/n8n-mcp-server/issues"&gt;GitHub Issues page&lt;/a&gt; to find existing tasks, suggest new ideas, or express your interest in becoming a co-maintainer.&lt;/li&gt; 
 &lt;li&gt;You can open an issue titled "Co-maintainer Application" to formally apply, or simply start contributing to existing issues.&lt;/li&gt; 
 &lt;li&gt;Alternatively, feel free to reach out to the existing maintainers if you have questions.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Let’s build the future of AI-powered workflow automation together! 🙌&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Thanks to the community for the support!&lt;/strong&gt; &lt;a href="https://www.star-history.com/#leonardsellem/n8n-mcp-server&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=leonardsellem/n8n-mcp-server&amp;amp;type=Date" alt="Star History Chart"&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mattermost-community/focalboard</title>
      <link>https://github.com/mattermost-community/focalboard</link>
      <description>&lt;p&gt;Focalboard is an open source, self-hosted alternative to Trello, Notion, and Asana.&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] This repository is currently not maintained. If you're interested in becoming a maintainer please &lt;a href="https://github.com/mattermost-community/focalboard/issues/5038"&gt;let us know here&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;This repository only contains standalone Focalboard. If you're looking for the Mattermost plugin please see &lt;a href="https://github.com/mattermost/mattermost-plugin-boards"&gt;mattermost/mattermost-plugin-boards&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Focalboard&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://github.com/mattermost/focalboard/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI Status"&gt; &lt;img src="https://github.com/mattermost/focalboard/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true" alt="CodeQL"&gt; &lt;img src="https://github.com/mattermost/focalboard/actions/workflows/dev-release.yml/badge.svg?sanitize=true" alt="Dev Release"&gt; &lt;img src="https://github.com/mattermost/focalboard/actions/workflows/prod-release.yml/badge.svg?sanitize=true" alt="Prod Release"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/mattermost-community/focalboard/main/website/site/static/img/hero.jpg" alt="Focalboard"&gt;&lt;/p&gt; 
&lt;p&gt;Focalboard is an open source, multilingual, self-hosted project management tool that's an alternative to Trello, Notion, and Asana.&lt;/p&gt; 
&lt;p&gt;It helps define, organize, track and manage work across individuals and teams. Focalboard comes in two editions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.focalboard.com/docs/personal-edition/desktop/"&gt;Personal Desktop&lt;/a&gt;&lt;/strong&gt;: A standalone, single-user &lt;a href="https://apps.apple.com/app/apple-store/id1556908618?pt=2114704&amp;amp;ct=website&amp;amp;mt=8"&gt;macOS&lt;/a&gt;, &lt;a href="https://www.microsoft.com/store/apps/9NLN2T0SX9VF?cid=website"&gt;Windows&lt;/a&gt;, or &lt;a href="https://www.focalboard.com/download/personal-edition/desktop/#linux-desktop"&gt;Linux&lt;/a&gt; desktop app for your own todos and personal projects.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.focalboard.com/download/personal-edition/ubuntu/"&gt;Personal Server&lt;/a&gt;&lt;/strong&gt;: A standalone, multi-user server for development and personal use.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Try Focalboard&lt;/h2&gt; 
&lt;h3&gt;Personal Desktop (Windows, Mac or Linux Desktop)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Download from the &lt;a href="https://www.microsoft.com/store/productId/9NLN2T0SX9VF"&gt;Windows App Store&lt;/a&gt; or download &lt;code&gt;focalboard-win.zip&lt;/code&gt; from the &lt;a href="https://github.com/mattermost/focalboard/releases"&gt;latest release&lt;/a&gt;, unpack, and run &lt;code&gt;Focalboard.exe&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mac&lt;/strong&gt;: Download from the &lt;a href="https://apps.apple.com/us/app/focalboard-insiders/id1556908618?mt=12"&gt;Mac App Store&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux Desktop&lt;/strong&gt;: Download &lt;code&gt;focalboard-linux.tar.gz&lt;/code&gt; from the &lt;a href="https://github.com/mattermost/focalboard/releases"&gt;latest release&lt;/a&gt;, unpack, and open &lt;code&gt;focalboard-app&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Personal Server&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt;: You can download and run the compiled Focalboard &lt;strong&gt;Personal Server&lt;/strong&gt; on Ubuntu by following &lt;a href="https://www.focalboard.com/download/personal-edition/ubuntu/"&gt;our latest install guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;API Docs&lt;/h3&gt; 
&lt;p&gt;Boards API docs can be found over at &lt;a href="https://htmlpreview.github.io/?https://github.com/mattermost/focalboard/raw/main/server/swagger/docs/html/index.html"&gt;https://htmlpreview.github.io/?https://github.com/mattermost/focalboard/blob/main/server/swagger/docs/html/index.html&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Getting started&lt;/h3&gt; 
&lt;p&gt;Our &lt;a href="https://developers.mattermost.com/contribute/focalboard/personal-server-setup-guide"&gt;developer guide&lt;/a&gt; has detailed instructions on how to set up your development environment for the &lt;strong&gt;Personal Server&lt;/strong&gt;. You can also join the &lt;a href="https://community.mattermost.com/core/channels/focalboard"&gt;~Focalboard community channel&lt;/a&gt; to connect with other developers.&lt;/p&gt; 
&lt;p&gt;Create an &lt;code&gt;.env&lt;/code&gt; file in the focalboard directory that contains:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;EXCLUDE_ENTERPRISE="1"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make prebuild
make
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt; ./bin/focalboard-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then navigate your browser to &lt;a href="http://localhost:8000"&gt;&lt;code&gt;http://localhost:8000&lt;/code&gt;&lt;/a&gt; to access your Focalboard server. The port is configured in &lt;code&gt;config.json&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Once the server is running, you can rebuild just the web app via &lt;code&gt;make webapp&lt;/code&gt; in a separate terminal window. Reload your browser to see the changes.&lt;/p&gt; 
&lt;h3&gt;Building and running standalone desktop apps&lt;/h3&gt; 
&lt;p&gt;You can build standalone apps that package the server to run locally against SQLite:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Requires Windows 10, &lt;a href="https://developer.microsoft.com/en-us/windows/downloads/sdk-archive/"&gt;Windows 10 SDK&lt;/a&gt; 10.0.19041.0, and .NET 4.8 developer pack&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;Open a &lt;code&gt;git-bash&lt;/code&gt; prompt.&lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;make prebuild&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;The above prebuild step needs to be run only when you make changes to or want to install your npm dependencies, etc.&lt;/li&gt; 
   &lt;li&gt;Once the prebuild is completed, you can keep repeating the below steps to build the app &amp;amp; see the changes.&lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;make win-wpf-app&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;cd win-wpf/msix &amp;amp;&amp;amp; focalboard.exe&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mac&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Requires macOS 11.3+ and Xcode 13.2.1+&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;make prebuild&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;The above prebuild step needs to be run only when you make changes to or want to install your npm dependencies, etc.&lt;/li&gt; 
   &lt;li&gt;Once the prebuild is completed, you can keep repeating the below steps to build the app &amp;amp; see the changes.&lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;make mac-app&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;open mac/dist/Focalboard.app&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Tested on Ubuntu 18.04&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;Install &lt;code&gt;webgtk&lt;/code&gt; dependencies 
    &lt;ul&gt; 
     &lt;li&gt;Run &lt;code&gt;sudo apt-get install libgtk-3-dev&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;Run &lt;code&gt;sudo apt-get install libwebkit2gtk-4.0-dev&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;make prebuild&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;The above prebuild step needs to be run only when you make changes to or want to install your npm dependencies, etc.&lt;/li&gt; 
   &lt;li&gt;Once the prebuild is completed, you can keep repeating the below steps to build the app &amp;amp; see the changes.&lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;make linux-app&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Uncompress &lt;code&gt;linux/dist/focalboard-linux.tar.gz&lt;/code&gt; to a directory of your choice&lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;focalboard-app&lt;/code&gt; from the directory you have chosen&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;To run it locally from offical image: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;docker run -it -p 80:8000 mattermost/focalboard&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;To build it for your current architecture: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;docker build -f docker/Dockerfile .&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;To build it for a custom architecture (experimental): 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;docker build -f docker/Dockerfile --platform linux/arm64 .&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Cross-compilation currently isn't fully supported, so please build on the appropriate platform. Refer to the GitHub Actions workflows (&lt;code&gt;build-mac.yml&lt;/code&gt;, &lt;code&gt;build-win.yml&lt;/code&gt;, &lt;code&gt;build-ubuntu.yml&lt;/code&gt;) for the detailed list of steps on each platform.&lt;/p&gt; 
&lt;h3&gt;Unit testing&lt;/h3&gt; 
&lt;p&gt;Before checking in commits, run &lt;code&gt;make ci&lt;/code&gt;, which is similar to the &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; workflow and includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Server unit tests&lt;/strong&gt;: &lt;code&gt;make server-test&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Web app ESLint&lt;/strong&gt;: &lt;code&gt;cd webapp; npm run check&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Web app unit tests&lt;/strong&gt;: &lt;code&gt;cd webapp; npm run test&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Web app UI tests&lt;/strong&gt;: &lt;code&gt;cd webapp; npm run cypress:ci&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Staying informed&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Changes&lt;/strong&gt;: See the &lt;a href="https://raw.githubusercontent.com/mattermost-community/focalboard/main/CHANGELOG.md"&gt;CHANGELOG&lt;/a&gt; for the latest updates&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bug Reports&lt;/strong&gt;: &lt;a href="https://github.com/mattermost/focalboard/issues/new?assignees=&amp;amp;labels=bug&amp;amp;template=bug_report.md&amp;amp;title="&gt;File a bug report&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chat&lt;/strong&gt;: Join the &lt;a href="https://community.mattermost.com/core/channels/focalboard"&gt;~Focalboard community channel&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>linshenkx/prompt-optimizer</title>
      <link>https://github.com/linshenkx/prompt-optimizer</link>
      <description>&lt;p&gt;一款提示词优化器，助力于编写高质量的提示词&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Prompt Optimizer (提示词优化器) 🚀&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/README_EN.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/README.md"&gt;中文&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/linshenkx/prompt-optimizer/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/linshenkx/prompt-optimizer" alt="GitHub stars"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/chrome-web-store/users/cakkkhboolfnadechdlgdcnjammejlna?style=flat&amp;amp;label=Chrome%20Users&amp;amp;link=https%3A%2F%2Fchromewebstore.google.com%2Fdetail%2F%25E6%258F%2590%25E7%25A4%25BA%25E8%25AF%258D%25E4%25BC%2598%25E5%258C%2596%25E5%2599%25A8%2Fcakkkhboolfnadechdlgdcnjammejlna" alt="Chrome Web Store Users"&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="License"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/linshen/prompt-optimizer"&gt;&lt;img src="https://img.shields.io/docker/pulls/linshen/prompt-optimizer" alt="Docker Pulls"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/forks/linshenkx/prompt-optimizer?style=flat" alt="GitHub forks"&gt; &lt;a href="https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Flinshenkx%2Fprompt-optimizer"&gt;&lt;img src="https://img.shields.io/badge/Vercel-indigo?style=flat&amp;amp;logo=vercel" alt="Deploy with Vercel"&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://prompt.always200.com"&gt;在线体验&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B"&gt;快速开始&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98"&gt;常见问题&lt;/a&gt; | &lt;a href="https://chromewebstore.google.com/detail/prompt-optimizer/cakkkhboolfnadechdlgdcnjammejlna"&gt;Chrome插件&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/dev.md"&gt;开发文档&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/deployment/vercel.md"&gt;Vercel部署指南&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/mcp-server.md"&gt;MCP部署使用说明&lt;/a&gt; | &lt;a href="https://deepwiki.com/linshenkx/prompt-optimizer"&gt;DeepWiki文档&lt;/a&gt; | &lt;a href="https://zread.ai/linshenkx/prompt-optimizer"&gt;ZRead文档&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;📖 项目简介&lt;/h2&gt; 
&lt;p&gt;Prompt Optimizer是一个强大的AI提示词优化工具，帮助你编写更好的AI提示词，提升AI输出质量。支持Web应用、桌面应用、Chrome插件和Docker部署四种使用方式。&lt;/p&gt; 
&lt;h3&gt;🎥 功能演示&lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;b&gt;1. 角色扮演对话：激发小模型潜力&lt;/b&gt;&lt;/p&gt; 
 &lt;p&gt;在追求成本效益的生产或注重隐私的本地化场景中，结构化的提示词能让小模型稳定地进入角色，提供沉浸式、高一致性的角色扮演体验，有效激发其潜力。&lt;/p&gt; 
 &lt;img src="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/images/demo/cat-maid-roleplay.png" alt="猫女仆角色扮演演示" width="85%"&gt; 
 &lt;br&gt; 
 &lt;p&gt;&lt;b&gt;2. 知识图谱提取：保障生产环境的稳定性&lt;/b&gt;&lt;/p&gt; 
 &lt;p&gt;在需要程序化处理的生产环境中，高质量的提示词能显著降低对模型智能程度的要求，使得更经济的小模型也能稳定输出可靠的指定格式。本工具旨在辅助开发者快速达到此目的，从而加速开发、保障稳定，实现降本增效。&lt;/p&gt; 
 &lt;img src="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/images/demo/knowledge-graph-extractor.png" alt="知识图谱提取演示" width="85%"&gt; 
 &lt;br&gt; 
 &lt;p&gt;&lt;b&gt;3. 诗歌写作：辅助创意探索与需求定制&lt;/b&gt;&lt;/p&gt; 
 &lt;p&gt;当面对一个强大的AI，我们的目标不只是得到一个“好”答案，而是得到一个“我们想要的”独特答案。本工具能帮助用户将一个模糊的灵感（如“写首诗”）细化为具体的需求（关于什么主题、何种意象、何种情感），辅助您探索、发掘并精确表达自己的创意，与AI共创独一无二的作品。&lt;/p&gt; 
 &lt;img src="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/images/demo/poetry-writing.png" alt="诗歌创作演示" width="85%"&gt; 
&lt;/div&gt; 
&lt;h2&gt;✨ 核心特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎯 &lt;strong&gt;智能优化&lt;/strong&gt;：一键优化提示词，支持多轮迭代改进，提升AI回复准确度&lt;/li&gt; 
 &lt;li&gt;📝 &lt;strong&gt;双模式优化&lt;/strong&gt;：支持系统提示词优化和用户提示词优化，满足不同使用场景&lt;/li&gt; 
 &lt;li&gt;🔄 &lt;strong&gt;对比测试&lt;/strong&gt;：支持原始提示词和优化后提示词的实时对比，直观展示优化效果&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;strong&gt;多模型集成&lt;/strong&gt;：支持OpenAI、Gemini、DeepSeek、智谱AI、SiliconFlow等主流AI模型&lt;/li&gt; 
 &lt;li&gt;🔒 &lt;strong&gt;安全架构&lt;/strong&gt;：纯客户端处理，数据直接与AI服务商交互，不经过中间服务器&lt;/li&gt; 
 &lt;li&gt;📱 &lt;strong&gt;多端支持&lt;/strong&gt;：同时提供Web应用、桌面应用、Chrome插件和Docker部署四种使用方式&lt;/li&gt; 
 &lt;li&gt;🔐 &lt;strong&gt;访问控制&lt;/strong&gt;：支持密码保护功能，保障部署安全&lt;/li&gt; 
 &lt;li&gt;🧩 &lt;strong&gt;MCP协议支持&lt;/strong&gt;：支持Model Context Protocol (MCP) 协议，可与Claude Desktop等MCP兼容应用集成&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;h3&gt;1. 使用在线版本（推荐）&lt;/h3&gt; 
&lt;p&gt;直接访问：&lt;a href="https://prompt.always200.com"&gt;https://prompt.always200.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;项目是纯前端项目，所有数据只存储在浏览器本地，不会上传至任何服务器，因此直接使用在线版本也是安全可靠的&lt;/p&gt; 
&lt;h3&gt;2. Vercel部署&lt;/h3&gt; 
&lt;p&gt;方式1：一键部署到自己的Vercel(方便，但后续无法自动更新)： &lt;a href="https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Flinshenkx%2Fprompt-optimizer"&gt;&lt;img src="https://vercel.com/button" alt="部署到 Vercel"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;方式2: Fork项目后在Vercel中导入（推荐，但需参考部署文档进行手动设置）：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;先Fork项目到自己的GitHub&lt;/li&gt; 
 &lt;li&gt;然后在Vercel中导入该项目&lt;/li&gt; 
 &lt;li&gt;可跟踪源项目更新，便于同步最新功能和修复&lt;/li&gt; 
 &lt;li&gt;配置环境变量： 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;ACCESS_PASSWORD&lt;/code&gt;：设置访问密码，启用访问限制&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;VITE_OPENAI_API_KEY&lt;/code&gt;等：配置各AI服务商的API密钥&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更多详细的部署步骤和注意事项，请查看：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/deployment/vercel.md"&gt;Vercel部署指南&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3. 下载桌面应用&lt;/h3&gt; 
&lt;p&gt;从 &lt;a href="https://github.com/linshenkx/prompt-optimizer/releases"&gt;GitHub Releases&lt;/a&gt; 下载最新版本。我们为各平台提供&lt;strong&gt;安装程序&lt;/strong&gt;和&lt;strong&gt;压缩包&lt;/strong&gt;两种格式。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;安装程序 (推荐)&lt;/strong&gt;: 如 &lt;code&gt;*.exe&lt;/code&gt;, &lt;code&gt;*.dmg&lt;/code&gt;, &lt;code&gt;*.AppImage&lt;/code&gt; 等。&lt;strong&gt;强烈推荐使用此方式，因为它支持自动更新&lt;/strong&gt;。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;压缩包&lt;/strong&gt;: 如 &lt;code&gt;*.zip&lt;/code&gt;。解压即用，但无法自动更新。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;桌面应用核心优势&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ &lt;strong&gt;无跨域限制&lt;/strong&gt;：作为原生桌面应用，它能彻底摆脱浏览器跨域（CORS）问题的困扰。这意味着您可以直接连接任何AI服务提供商的API，包括本地部署的Ollama或有严格安全策略的商业API，获得最完整、最稳定的功能体验。&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;自动更新&lt;/strong&gt;：通过安装程序（如 &lt;code&gt;.exe&lt;/code&gt;, &lt;code&gt;.dmg&lt;/code&gt;）安装的版本，能够自动检查并更新到最新版。&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;独立运行&lt;/strong&gt;：无需依赖浏览器，提供更快的响应和更佳的性能。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;4. 安装Chrome插件&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;从Chrome商店安装（由于审批较慢，可能不是最新的）：&lt;a href="https://chromewebstore.google.com/detail/prompt-optimizer/cakkkhboolfnadechdlgdcnjammejlna"&gt;Chrome商店地址&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;点击图标即可打开提示词优化器&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;5. Docker部署&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看 Docker 部署命令&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 运行容器（默认配置）
docker run -d -p 8081:80 --restart unless-stopped --name prompt-optimizer linshen/prompt-optimizer

# 运行容器（配置API密钥和访问密码）
docker run -d -p 8081:80 \
  -e VITE_OPENAI_API_KEY=your_key \
  -e ACCESS_USERNAME=your_username \  # 可选，默认为"admin"
  -e ACCESS_PASSWORD=your_password \  # 设置访问密码
  --restart unless-stopped \
  --name prompt-optimizer \
  linshen/prompt-optimizer
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;国内镜像&lt;/strong&gt;: 如果Docker Hub访问较慢，可以将上述命令中的 &lt;code&gt;linshen/prompt-optimizer&lt;/code&gt; 替换为 &lt;code&gt;registry.cn-guangzhou.aliyuncs.com/prompt-optimizer/prompt-optimizer&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;6. Docker Compose部署&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看 Docker Compose 部署步骤&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 1. 克隆仓库
git clone https://github.com/linshenkx/prompt-optimizer.git
cd prompt-optimizer

# 2. 可选：创建.env文件配置API密钥和访问认证
cp env.local.example .env
# 编辑 .env 文件，填入实际的 API 密钥和配置

# 3. 启动服务
docker compose up -d

# 4. 查看日志
docker compose logs -f

# 5. 访问服务
Web 界面：http://localhost:8081
MCP 服务器：http://localhost:8081/mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;你还可以直接编辑docker-compose.yml文件，自定义配置：&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看 docker-compose.yml 示例&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  prompt-optimizer:
    # 使用Docker Hub镜像
    image: linshen/prompt-optimizer:latest
    # 或使用阿里云镜像（国内用户推荐）
    # image: registry.cn-guangzhou.aliyuncs.com/prompt-optimizer/prompt-optimizer:latest
    container_name: prompt-optimizer
    restart: unless-stopped
    ports:
      - "8081:80"  # Web应用端口（包含MCP服务器，通过/mcp路径访问）
    environment:
      # API密钥配置
      - VITE_OPENAI_API_KEY=your_openai_key
      - VITE_GEMINI_API_KEY=your_gemini_key
      # 访问控制（可选）
      - ACCESS_USERNAME=admin
      - ACCESS_PASSWORD=your_password
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;7. MCP Server 使用说明&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看 MCP Server 使用说明&lt;/summary&gt; 
 &lt;p&gt;Prompt Optimizer 现在支持 Model Context Protocol (MCP) 协议，可以与 Claude Desktop 等支持 MCP 的 AI 应用集成。&lt;/p&gt; 
 &lt;p&gt;当通过 Docker 运行时，MCP Server 会自动启动，并可通过 &lt;code&gt;http://ip:port/mcp&lt;/code&gt; 访问。&lt;/p&gt; 
 &lt;h4&gt;环境变量配置&lt;/h4&gt; 
 &lt;p&gt;MCP Server 需要配置 API 密钥才能正常工作。主要的 MCP 专属配置：&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# MCP 服务器配置
MCP_DEFAULT_MODEL_PROVIDER=openai  # 可选值：openai, gemini, deepseek, siliconflow, zhipu, custom
MCP_LOG_LEVEL=info                 # 日志级别
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Docker 环境下使用 MCP&lt;/h4&gt; 
 &lt;p&gt;在 Docker 环境中，MCP Server 会与 Web 应用一起运行，您可以通过 Web 应用的相同端口访问 MCP 服务，路径为 &lt;code&gt;/mcp&lt;/code&gt;。&lt;/p&gt; 
 &lt;p&gt;例如，如果您将容器的 80 端口映射到主机的 8081 端口：&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 8081:80 \
  -e VITE_OPENAI_API_KEY=your-openai-key \
  -e MCP_DEFAULT_MODEL_PROVIDER=openai \
  --name prompt-optimizer \
  linshen/prompt-optimizer
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;那么 MCP Server 将可以通过 &lt;code&gt;http://localhost:8081/mcp&lt;/code&gt; 访问。&lt;/p&gt; 
 &lt;h4&gt;Claude Desktop 集成示例&lt;/h4&gt; 
 &lt;p&gt;要在 Claude Desktop 中使用 Prompt Optimizer，您需要在 Claude Desktop 的配置文件中添加服务配置。&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;找到 Claude Desktop 的配置目录：&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Windows: &lt;code&gt;%APPDATA%\Claude\services&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;macOS: &lt;code&gt;~/Library/Application Support/Claude/services&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;Linux: &lt;code&gt;~/.config/Claude/services&lt;/code&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;编辑或创建 &lt;code&gt;services.json&lt;/code&gt; 文件，添加以下内容：&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "services": [
    {
      "name": "Prompt Optimizer",
      "url": "http://localhost:8081/mcp"
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;请确保将 &lt;code&gt;localhost:8081&lt;/code&gt; 替换为您实际部署 Prompt Optimizer 的地址和端口。&lt;/p&gt; 
 &lt;h4&gt;可用工具&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;optimize-user-prompt&lt;/strong&gt;: 优化用户提示词以提高 LLM 性能&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;optimize-system-prompt&lt;/strong&gt;: 优化系统提示词以提高 LLM 性能&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;iterate-prompt&lt;/strong&gt;: 对已经成熟/完善的提示词进行定向迭代优化&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;更多详细信息，请查看 &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/mcp-server.md"&gt;MCP 服务器用户指南&lt;/a&gt;。&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;⚙️ API密钥配置&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看API密钥配置方法&lt;/summary&gt; 
 &lt;h3&gt;方式一：通过界面配置（推荐）&lt;/h3&gt; 
 &lt;ol&gt; 
  &lt;li&gt;点击界面右上角的"⚙️设置"按钮&lt;/li&gt; 
  &lt;li&gt;选择"模型管理"选项卡&lt;/li&gt; 
  &lt;li&gt;点击需要配置的模型（如OpenAI、Gemini、DeepSeek等）&lt;/li&gt; 
  &lt;li&gt;在弹出的配置框中输入对应的API密钥&lt;/li&gt; 
  &lt;li&gt;点击"保存"即可&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;支持的模型：OpenAI、Gemini、DeepSeek、Zhipu智谱、SiliconFlow、自定义API（OpenAI兼容接口）&lt;/p&gt; 
 &lt;p&gt;除了API密钥，您还可以在模型配置界面为每个模型单独设置高级LLM参数。这些参数通过一个名为 &lt;code&gt;llmParams&lt;/code&gt; 的字段进行配置，它允许您以键值对的形式指定LLM SDK支持的任何参数，从而更精细地控制模型行为。&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;高级LLM参数配置示例：&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;OpenAI/兼容API&lt;/strong&gt;: &lt;code&gt;{"temperature": 0.7, "max_tokens": 4096, "timeout": 60000}&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Gemini&lt;/strong&gt;: &lt;code&gt;{"temperature": 0.8, "maxOutputTokens": 2048, "topP": 0.95}&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;DeepSeek&lt;/strong&gt;: &lt;code&gt;{"temperature": 0.5, "top_p": 0.9, "frequency_penalty": 0.1}&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;有关 &lt;code&gt;llmParams&lt;/code&gt; 的更详细说明和配置指南，请参阅 &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/developer/llm-params-guide.md"&gt;LLM参数配置指南&lt;/a&gt;。&lt;/p&gt; 
 &lt;h3&gt;方式二：通过环境变量配置&lt;/h3&gt; 
 &lt;p&gt;Docker部署时通过 &lt;code&gt;-e&lt;/code&gt; 参数配置环境变量：&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;-e VITE_OPENAI_API_KEY=your_key
-e VITE_GEMINI_API_KEY=your_key
-e VITE_DEEPSEEK_API_KEY=your_key
-e VITE_ZHIPU_API_KEY=your_key
-e VITE_SILICONFLOW_API_KEY=your_key
-e VITE_CUSTOM_API_KEY=your_custom_api_key
-e VITE_CUSTOM_API_BASE_URL=your_custom_api_base_url
-e VITE_CUSTOM_API_MODEL=your_custom_model_name
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;本地开发&lt;/h2&gt; 
&lt;p&gt;详细文档可查看 &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/dev.md"&gt;开发文档&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看本地开发命令&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 1. 克隆项目
git clone https://github.com/linshenkx/prompt-optimizer.git
cd prompt-optimizer

# 2. 安装依赖
pnpm install

# 3. 启动开发服务
pnpm dev               # 主开发命令：构建core/ui并运行web应用
pnpm dev:web          # 仅运行web应用
pnpm dev:fresh        # 完整重置并重新启动开发环境
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;🗺️ 开发路线&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 基础功能开发&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Web应用发布&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Chrome插件发布&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 国际化支持&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持系统提示词优化和用户提示词优化&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 桌面应用发布&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; mcp服务发布&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详细的项目状态可查看 &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/project-status.md"&gt;项目状态文档&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📖 相关文档&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/README.md"&gt;文档索引&lt;/a&gt; - 所有文档的索引&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/developer/technical-development-guide.md"&gt;技术开发指南&lt;/a&gt; - 技术栈和开发规范&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/developer/llm-params-guide.md"&gt;LLM参数配置指南&lt;/a&gt; - 高级LLM参数配置详细说明&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/developer/project-structure.md"&gt;项目结构&lt;/a&gt; - 详细的项目结构说明&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/project/project-status.md"&gt;项目状态&lt;/a&gt; - 当前进度和计划&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/project/prd.md"&gt;产品需求&lt;/a&gt; - 产品需求文档&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/deployment/vercel.md"&gt;Vercel部署指南&lt;/a&gt; - Vercel部署详细说明&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://star-history.com/#linshenkx/prompt-optimizer&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=linshenkx/prompt-optimizer&amp;amp;type=Date&amp;amp;theme=dark"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=linshenkx/prompt-optimizer&amp;amp;type=Date"&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=linshenkx/prompt-optimizer&amp;amp;type=Date"&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;常见问题&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看常见问题解答&lt;/summary&gt; 
 &lt;h3&gt;API连接问题&lt;/h3&gt; 
 &lt;h4&gt;Q1: 为什么配置好API密钥后仍然无法连接到模型服务？&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: 大多数连接失败是由&lt;strong&gt;跨域问题&lt;/strong&gt;（CORS）导致的。由于本项目是纯前端应用，浏览器出于安全考虑会阻止直接访问不同源的API服务。模型服务如未正确配置CORS策略，会拒绝来自浏览器的直接请求。&lt;/p&gt; 
 &lt;h4&gt;Q2: 如何解决本地Ollama的连接问题？&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: Ollama完全支持OpenAI标准接口，只需配置正确的跨域策略：&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;设置环境变量 &lt;code&gt;OLLAMA_ORIGINS=*&lt;/code&gt; 允许任意来源的请求&lt;/li&gt; 
  &lt;li&gt;如仍有问题，设置 &lt;code&gt;OLLAMA_HOST=0.0.0.0:11434&lt;/code&gt; 监听任意IP地址&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h4&gt;Q3: 如何解决商业API（如Nvidia的DS API、字节跳动的火山API）的跨域问题？&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: 这些平台通常有严格的跨域限制，推荐以下解决方案：&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;使用Vercel代理&lt;/strong&gt;（便捷方案）&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;使用在线版本：&lt;a href="https://prompt.always200.com"&gt;prompt.always200.com&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;或自行部署到Vercel平台&lt;/li&gt; 
    &lt;li&gt;在模型设置中勾选"使用Vercel代理"选项&lt;/li&gt; 
    &lt;li&gt;请求流向：浏览器→Vercel→模型服务提供商&lt;/li&gt; 
    &lt;li&gt;详细步骤请参考 &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/deployment/vercel.md"&gt;Vercel部署指南&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;使用自部署的API中转服务&lt;/strong&gt;（可靠方案）&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;部署如OneAPI等开源API聚合/代理工具&lt;/li&gt; 
    &lt;li&gt;在设置中配置为自定义API端点&lt;/li&gt; 
    &lt;li&gt;请求流向：浏览器→中转服务→模型服务提供商&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h4&gt;Q4: Vercel代理有什么缺点或风险？&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: 使用Vercel代理可能会触发某些模型服务提供商的风控机制。部分厂商可能会将来自Vercel的请求判定为代理行为，从而限制或拒绝服务。如遇此问题，建议使用自部署的中转服务。&lt;/p&gt; 
 &lt;h4&gt;Q5: 我已正确配置本地模型（如Ollama）的跨域策略，为什么使用在线版依然无法连接？&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: 这是由浏览器的&lt;strong&gt;混合内容（Mixed Content）安全策略&lt;/strong&gt;导致的。出于安全考虑，浏览器会阻止安全的HTTPS页面（如在线版）向不安全的HTTP地址（如您的本地Ollama服务）发送请求。&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;： 为了绕过此限制，您需要让应用和API处于同一种协议下（例如，都是HTTP）。推荐以下几种方式：&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;strong&gt;使用桌面版&lt;/strong&gt;：桌面应用没有浏览器限制，是连接本地模型最稳定可靠的方式。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;docker部署&lt;/strong&gt;：docker部署也是http&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;使用Chrome插件&lt;/strong&gt;：插件在某些情况下也可以绕过部分安全限制。&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;🤝 参与贡献&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看贡献指南&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Fork 本仓库&lt;/li&gt; 
  &lt;li&gt;创建特性分支 (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; 
  &lt;li&gt;提交更改 (&lt;code&gt;git commit -m '添加某个特性'&lt;/code&gt;)&lt;/li&gt; 
  &lt;li&gt;推送到分支 (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; 
  &lt;li&gt;提交 Pull Request&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;提示：使用cursor工具开发时，建议在提交前:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;使用"code_review"规则进行代码审查&lt;/li&gt; 
  &lt;li&gt;按照审查报告格式检查: 
   &lt;ul&gt; 
    &lt;li&gt;变更的整体一致性&lt;/li&gt; 
    &lt;li&gt;代码质量和实现方式&lt;/li&gt; 
    &lt;li&gt;测试覆盖情况&lt;/li&gt; 
    &lt;li&gt;文档完善程度&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;根据审查结果进行优化后再提交&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;👏 贡献者名单&lt;/h2&gt; 
&lt;p&gt;感谢所有为项目做出贡献的开发者！&lt;/p&gt; 
&lt;a href="https://github.com/linshenkx/prompt-optimizer/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=linshenkx/prompt-optimizer" alt="贡献者"&gt; &lt;/a&gt; 
&lt;h2&gt;📄 开源协议&lt;/h2&gt; 
&lt;p&gt;本项目采用 &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/LICENSE"&gt;MIT&lt;/a&gt; 协议开源。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;如果这个项目对你有帮助，请考虑给它一个 Star ⭐️&lt;/p&gt; 
&lt;h2&gt;👥 联系我们&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;提交 Issue&lt;/li&gt; 
 &lt;li&gt;发起 Pull Request&lt;/li&gt; 
 &lt;li&gt;加入讨论组&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Dokploy/dokploy</title>
      <link>https://github.com/Dokploy/dokploy</link>
      <description>&lt;p&gt;Open Source Alternative to Vercel, Netlify and Heroku.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://dokploy.com"&gt; &lt;img src="https://raw.githubusercontent.com/Dokploy/dokploy/canary/.github/sponsors/logo.png" alt="Dokploy - Open Source Alternative to Vercel, Heroku and Netlify." align="center" width="100%"&gt; &lt;/a&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;p&gt;Join us on Discord for help, feedback, and discussions!&lt;/p&gt; 
 &lt;a href="https://discord.gg/2tBnJ3jDJc"&gt; &lt;img src="https://discordapp.com/api/guilds/1234073262418563112/widget.png?style=banner2" alt="Discord Shield"&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;p&gt;Dokploy is a free, self-hostable Platform as a Service (PaaS) that simplifies the deployment and management of applications and databases.&lt;/p&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;p&gt;Dokploy includes multiple features to make your life easier.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Applications&lt;/strong&gt;: Deploy any type of application (Node.js, PHP, Python, Go, Ruby, etc.).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Databases&lt;/strong&gt;: Create and manage databases with support for MySQL, PostgreSQL, MongoDB, MariaDB, and Redis.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backups&lt;/strong&gt;: Automate backups for databases to an external storage destination.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker Compose&lt;/strong&gt;: Native support for Docker Compose to manage complex applications.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi Node&lt;/strong&gt;: Scale applications to multiple nodes using Docker Swarm to manage the cluster.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Templates&lt;/strong&gt;: Deploy open-source templates (Plausible, Pocketbase, Calcom, etc.) with a single click.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Traefik Integration&lt;/strong&gt;: Automatically integrates with Traefik for routing and load balancing.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real-time Monitoring&lt;/strong&gt;: Monitor CPU, memory, storage, and network usage for every resource.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker Management&lt;/strong&gt;: Easily deploy and manage Docker containers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CLI/API&lt;/strong&gt;: Manage your applications and databases using the command line or through the API.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Notifications&lt;/strong&gt;: Get notified when your deployments succeed or fail (via Slack, Discord, Telegram, Email, etc.).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi Server&lt;/strong&gt;: Deploy and manage your applications remotely to external servers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Self-Hosted&lt;/strong&gt;: Self-host Dokploy on your VPS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;To get started, run the following command on a VPS:&lt;/p&gt; 
&lt;p&gt;Want to skip the installation process? &lt;a href="https://app.dokploy.com"&gt;Try the Dokploy Cloud&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSL https://dokploy.com/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For detailed documentation, visit &lt;a href="https://docs.dokploy.com"&gt;docs.dokploy.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;🙏 We're deeply grateful to all our sponsors who make Dokploy possible! Your support helps cover the costs of hosting, testing, and developing new features.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/dokploy"&gt;Dokploy Open Collective&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/Siumauricio"&gt;Github Sponsors&lt;/a&gt;&lt;/p&gt; 
&lt;!-- Hero Sponsors 🎖 --&gt; 
&lt;!-- Add Hero Sponsors here --&gt; 
&lt;h3&gt;Hero Sponsors 🎖&lt;/h3&gt; 
&lt;div&gt; 
 &lt;a href="https://www.hostinger.com/vps-hosting?ref=dokploy"&gt;&lt;img src="https://raw.githubusercontent.com/Dokploy/dokploy/canary/.github/sponsors/hostinger.jpg" alt="Hostinger" width="300"&gt;&lt;/a&gt; 
 &lt;a href="https://www.lxaer.com/?ref=dokploy"&gt;&lt;img src="https://raw.githubusercontent.com/Dokploy/dokploy/canary/.github/sponsors/lxaer.png" alt="LX Aer" width="100"&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;!-- Premium Supporters 🥇 --&gt; 
&lt;!-- Add Premium Supporters here --&gt; 
&lt;h3&gt;Premium Supporters 🥇&lt;/h3&gt; 
&lt;div&gt; 
 &lt;a href="https://supafort.com/?ref=dokploy"&gt;&lt;img src="https://supafort.com/build/q-4Ht4rBZR.webp" alt="Supafort.com" width="300"&gt;&lt;/a&gt; 
 &lt;a href="https://agentdock.ai/?ref=dokploy"&gt;&lt;img src="https://raw.githubusercontent.com/Dokploy/dokploy/canary/.github/sponsors/agentdock.png" alt="agentdock.ai" width="100"&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;!-- Elite Contributors 🥈 --&gt; 
&lt;!-- Add Elite Contributors here --&gt; 
&lt;h3&gt;Elite Contributors 🥈&lt;/h3&gt; 
&lt;div&gt; 
 &lt;a href="https://americancloud.com/?ref=dokploy"&gt;&lt;img src="https://raw.githubusercontent.com/Dokploy/dokploy/canary/.github/sponsors/american-cloud.png" alt="AmericanCloud" width="300"&gt;&lt;/a&gt; 
 &lt;a href="https://tolgee.io/?utm_source=github_dokploy&amp;amp;utm_medium=banner&amp;amp;utm_campaign=dokploy"&gt;&lt;img src="https://dokploy.com/tolgee-logo.png" alt="Tolgee" width="100"&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h3&gt;Supporting Members 🥉&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p&gt;&lt;a href="https://cloudblast.io/?ref=dokploy"&gt;&lt;img src="https://cloudblast.io/img/logo-icon.193cf13e.svg?sanitize=true" width="250px" alt="Cloudblast.io"&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://synexa.ai/?ref=dokploy"&gt;&lt;img src="https://raw.githubusercontent.com/Dokploy/dokploy/canary/.github/sponsors/synexa.png" width="65px" alt="Synexa"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;Community Backers 🤝&lt;/h3&gt; 
&lt;h4&gt;Organizations:&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/dokploy"&gt;Sponsors on Open Collective&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Individuals:&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/dokploy"&gt;&lt;img src="https://opencollective.com/dokploy/individuals.svg?width=890" alt="Individual Contributors on Open Collective"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors 🤝&lt;/h3&gt; 
&lt;a href="https://github.com/dokploy/dokploy/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=dokploy/dokploy"&gt; &lt;/a&gt; 
&lt;h2&gt;Video Tutorial&lt;/h2&gt; 
&lt;a href="https://youtu.be/mznYKPvhcfw"&gt; &lt;img src="https://dokploy.com/banner.png" alt="Watch the video" width="400"&gt; &lt;/a&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Check out the &lt;a href="https://raw.githubusercontent.com/Dokploy/dokploy/canary/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for more information.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>