<rss version="2.0">
  <channel>
    <title>GitHub Go Daily Trending</title>
    <description>Daily Trending of Go in GitHub</description>
    <pubDate>Thu, 30 Oct 2025 01:34:39 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>juanfont/headscale</title>
      <link>https://github.com/juanfont/headscale</link>
      <description>&lt;p&gt;An open source, self-hosted implementation of the Tailscale control server&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/juanfont/headscale/main/docs/logo/headscale3_header_stacked_left.png" alt="headscale logo" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/juanfont/headscale/actions/workflows/test.yml/badge.svg?sanitize=true" alt="ci" /&gt;&lt;/p&gt; 
&lt;p&gt;An open source, self-hosted implementation of the Tailscale control server.&lt;/p&gt; 
&lt;p&gt;Join our &lt;a href="https://discord.gg/c84AZQhmpx"&gt;Discord server&lt;/a&gt; for a chat.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Always select the same GitHub tag as the released version you use to ensure you have the correct example configuration. The &lt;code&gt;main&lt;/code&gt; branch might contain unreleased changes. The documentation is available for stable and development versions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://headscale.net/stable/"&gt;Documentation for the stable version&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://headscale.net/development/"&gt;Documentation for the development version&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What is Tailscale&lt;/h2&gt; 
&lt;p&gt;Tailscale is &lt;a href="https://tailscale.com/"&gt;a modern VPN&lt;/a&gt; built on top of &lt;a href="https://www.wireguard.com/"&gt;Wireguard&lt;/a&gt;. It &lt;a href="https://tailscale.com/blog/how-tailscale-works/"&gt;works like an overlay network&lt;/a&gt; between the computers of your networks - using &lt;a href="https://tailscale.com/blog/how-nat-traversal-works/"&gt;NAT traversal&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Everything in Tailscale is Open Source, except the GUI clients for proprietary OS (Windows and macOS/iOS), and the control server.&lt;/p&gt; 
&lt;p&gt;The control server works as an exchange point of Wireguard public keys for the nodes in the Tailscale network. It assigns the IP addresses of the clients, creates the boundaries between each user, enables sharing machines between users, and exposes the advertised routes of your nodes.&lt;/p&gt; 
&lt;p&gt;A &lt;a href="https://tailscale.com/kb/1136/tailnet/"&gt;Tailscale network (tailnet)&lt;/a&gt; is private network which Tailscale assigns to a user in terms of private users or an organisation.&lt;/p&gt; 
&lt;h2&gt;Design goal&lt;/h2&gt; 
&lt;p&gt;Headscale aims to implement a self-hosted, open source alternative to the &lt;a href="https://tailscale.com/"&gt;Tailscale&lt;/a&gt; control server. Headscale's goal is to provide self-hosters and hobbyists with an open-source server they can use for their projects and labs. It implements a narrow scope, a &lt;em&gt;single&lt;/em&gt; Tailscale network (tailnet), suitable for a personal use, or a small open-source organisation.&lt;/p&gt; 
&lt;h2&gt;Supporting Headscale&lt;/h2&gt; 
&lt;p&gt;If you like &lt;code&gt;headscale&lt;/code&gt; and find it useful, there is a sponsorship and donation buttons available in the repo.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href="https://headscale.net/stable/about/features/"&gt;"Features" in the documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Client OS support&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href="https://headscale.net/stable/about/clients/"&gt;"Client and operating system support" in the documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Running headscale&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Please note that we do not support nor encourage the use of reverse proxies and container to run Headscale.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Please have a look at the &lt;a href="https://headscale.net/stable/"&gt;&lt;code&gt;documentation&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Talks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fosdem 2023 (video): &lt;a href="https://fosdem.org/2023/schedule/event/goheadscale/"&gt;Headscale: How we are using integration testing to reimplement Tailscale&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;presented by Juan Font Alonso and Kristoffer Dalby&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;This project is not associated with Tailscale Inc.&lt;/p&gt; 
&lt;p&gt;However, one of the active maintainers for Headscale &lt;a href="https://tailscale.com/blog/opensource"&gt;is employed by Tailscale&lt;/a&gt; and he is allowed to spend work hours contributing to the project. Contributions from this maintainer are reviewed by other maintainers.&lt;/p&gt; 
&lt;p&gt;The maintainers work together on setting the direction for the project. The underlying principle is to serve the community of self-hosters, enthusiasts and hobbyists - while having a sustainable project.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read the &lt;a href="https://raw.githubusercontent.com/juanfont/headscale/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; file.&lt;/p&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;p&gt;To contribute to headscale you would need the latest version of &lt;a href="https://golang.org"&gt;Go&lt;/a&gt; and &lt;a href="https://buf.build"&gt;Buf&lt;/a&gt; (Protobuf generator).&lt;/p&gt; 
&lt;p&gt;We recommend using &lt;a href="https://nixos.org/"&gt;Nix&lt;/a&gt; to setup a development environment. This can be done with &lt;code&gt;nix develop&lt;/code&gt;, which will install the tools and give you a shell. This guarantees that you will have the same dev env as &lt;code&gt;headscale&lt;/code&gt; maintainers.&lt;/p&gt; 
&lt;h3&gt;Code style&lt;/h3&gt; 
&lt;p&gt;To ensure we have some consistency with a growing number of contributions, this project has adopted linting and style/formatting rules:&lt;/p&gt; 
&lt;p&gt;The &lt;strong&gt;Go&lt;/strong&gt; code is linted with &lt;a href="https://golangci-lint.run"&gt;&lt;code&gt;golangci-lint&lt;/code&gt;&lt;/a&gt; and formatted with &lt;a href="https://github.com/segmentio/golines"&gt;&lt;code&gt;golines&lt;/code&gt;&lt;/a&gt; (width 88) and &lt;a href="https://github.com/mvdan/gofumpt"&gt;&lt;code&gt;gofumpt&lt;/code&gt;&lt;/a&gt;. Please configure your editor to run the tools while developing and make sure to run &lt;code&gt;make lint&lt;/code&gt; and &lt;code&gt;make fmt&lt;/code&gt; before committing any code.&lt;/p&gt; 
&lt;p&gt;The &lt;strong&gt;Proto&lt;/strong&gt; code is linted with &lt;a href="https://docs.buf.build/lint/overview"&gt;&lt;code&gt;buf&lt;/code&gt;&lt;/a&gt; and formatted with &lt;a href="https://clang.llvm.org/docs/ClangFormat.html"&gt;&lt;code&gt;clang-format&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;strong&gt;rest&lt;/strong&gt; (Markdown, YAML, etc) is formatted with &lt;a href="https://prettier.io"&gt;&lt;code&gt;prettier&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;code&gt;.golangci.yaml&lt;/code&gt; and &lt;code&gt;Makefile&lt;/code&gt; to see the specific configuration.&lt;/p&gt; 
&lt;h3&gt;Install development tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go&lt;/li&gt; 
 &lt;li&gt;Buf&lt;/li&gt; 
 &lt;li&gt;Protobuf tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Install and activate:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;nix develop
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Testing and building&lt;/h3&gt; 
&lt;p&gt;Some parts of the project require the generation of Go code from Protobuf (if changes are made in &lt;code&gt;proto/&lt;/code&gt;) and it must be (re-)generated with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make generate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Please check in changes from &lt;code&gt;gen/&lt;/code&gt; in a separate commit to make it easier to review.&lt;/p&gt; 
&lt;p&gt;To run the tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build the program:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Development workflow&lt;/h3&gt; 
&lt;p&gt;We recommend using Nix for dependency management to ensure you have all required tools. If you prefer to manage dependencies yourself, you can use Make directly:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;With Nix (recommended):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;nix develop
make test
make build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;With your own dependencies:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make test
make build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The Makefile will warn you if any required tools are missing and suggest running &lt;code&gt;nix develop&lt;/code&gt;. Run &lt;code&gt;make help&lt;/code&gt; to see all available targets.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/juanfont/headscale/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=juanfont/headscale" /&gt; &lt;/a&gt; 
&lt;p&gt;Made with &lt;a href="https://contrib.rocks"&gt;contrib.rocks&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>livekit/livekit</title>
      <link>https://github.com/livekit/livekit</link>
      <description>&lt;p&gt;End-to-end realtime stack for connecting humans and AI&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="/.github/banner_dark.png" /&gt; 
 &lt;source media="(prefers-color-scheme: light)" srcset="/.github/banner_light.png" /&gt; 
 &lt;img style="width:100%;" alt="The LiveKit icon, the name of the repository and some sample code in the background." src="https://raw.githubusercontent.com/livekit/livekit/main/.github/banner_light.png" /&gt; 
&lt;/picture&gt; 
&lt;!--END_BANNER_IMAGE--&gt; 
&lt;h1&gt;LiveKit: Real-time video, audio and data for developers&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://livekit.io"&gt;LiveKit&lt;/a&gt; is an open source project that provides scalable, multi-user conferencing based on WebRTC. It's designed to provide everything you need to build real-time video audio data capabilities in your applications.&lt;/p&gt; 
&lt;p&gt;LiveKit's server is written in Go, using the awesome &lt;a href="https://github.com/pion/webrtc"&gt;Pion WebRTC&lt;/a&gt; implementation.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/livekit/livekit/stargazers/"&gt;&lt;img src="https://img.shields.io/github/stars/livekit/livekit?style=social&amp;amp;label=Star&amp;amp;maxAge=2592000" alt="GitHub stars" /&gt;&lt;/a&gt; &lt;a href="https://livekit.io/join-slack"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Flivekit.io%2Fbadges%2Fslack" alt="Slack community" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/livekit"&gt;&lt;img src="https://img.shields.io/twitter/follow/livekit" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/livekit/livekit"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;a href="https://github.com/livekit/livekit/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/livekit/livekit" alt="GitHub release (latest SemVer)" /&gt;&lt;/a&gt; &lt;a href="https://github.com/livekit/livekit/actions/workflows/buildtest.yaml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/livekit/livekit/buildtest.yaml?branch=master" alt="GitHub Workflow Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/livekit/livekit/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/livekit/livekit" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Scalable, distributed WebRTC SFU (Selective Forwarding Unit)&lt;/li&gt; 
 &lt;li&gt;Modern, full-featured client SDKs&lt;/li&gt; 
 &lt;li&gt;Built for production, supports JWT authentication&lt;/li&gt; 
 &lt;li&gt;Robust networking and connectivity, UDP/TCP/TURN&lt;/li&gt; 
 &lt;li&gt;Easy to deploy: single binary, Docker or Kubernetes&lt;/li&gt; 
 &lt;li&gt;Advanced features including: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/client/tracks/subscribe/#speaker-detection"&gt;speaker detection&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/client/tracks/publish/#video-simulcast"&gt;simulcast&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.livekit.io/livekit-one-dot-zero/"&gt;end-to-end optimizations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/client/tracks/subscribe/#selective-subscription"&gt;selective subscription&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/server/managing-participants/"&gt;moderation APIs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;end-to-end encryption&lt;/li&gt; 
   &lt;li&gt;SVC codecs (VP9, AV1)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/server/webhooks/"&gt;webhooks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/self-hosting/distributed/"&gt;distributed and multi-region&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation &amp;amp; Guides&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.livekit.io"&gt;https://docs.livekit.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Live Demos&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://meet.livekit.io"&gt;LiveKit Meet&lt;/a&gt; (&lt;a href="https://github.com/livekit-examples/meet"&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://spatial-audio-demo.livekit.io/"&gt;Spatial Audio&lt;/a&gt; (&lt;a href="https://github.com/livekit-examples/spatial-audio"&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Livestreaming from OBS Studio (&lt;a href="https://github.com/livekit-examples/livestream"&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://livekit.io/kitt"&gt;AI voice assistant using ChatGPT&lt;/a&gt; (&lt;a href="https://github.com/livekit-examples/kitt"&gt;source&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/agents"&gt;Agents&lt;/a&gt;: build real-time multimodal AI applications with programmable backend participants&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/egress"&gt;Egress&lt;/a&gt;: record or multi-stream rooms and export individual tracks&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/ingress"&gt;Ingress&lt;/a&gt;: ingest streams from external sources like RTMP, WHIP, HLS, or OBS Studio&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;SDKs &amp;amp; Tools&lt;/h2&gt; 
&lt;h3&gt;Client SDKs&lt;/h3&gt; 
&lt;p&gt;Client SDKs enable your frontend to include interactive, multi-user experiences.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Repo&lt;/th&gt; 
   &lt;th&gt; &lt;a href="https://docs.livekit.io/home/client/events/#declarative-ui" target="_blank" rel="noopener noreferrer"&gt;Declarative UI&lt;/a&gt; &lt;/th&gt; 
   &lt;th&gt;Links&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;!-- BEGIN Template
  &lt;tr&gt;
    &lt;td&gt;Language&lt;/td&gt;
    &lt;td&gt;
      &lt;a href="" target="_blank" rel="noopener noreferrer"&gt;&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;&lt;/td&gt;
    &lt;td&gt;&lt;/td&gt;
  &lt;/tr&gt;
  END --&gt; 
  &lt;!-- JavaScript --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;JavaScript (TypeScript)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-js" target="_blank" rel="noopener noreferrer"&gt;client-sdk-js&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/livekit-react" target="_blank" rel="noopener noreferrer"&gt;React&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://docs.livekit.io/client-sdk-js/" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-js/tree/main/example" target="_blank" rel="noopener noreferrer"&gt;JS example&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-js/tree/main/example" target="_blank" rel="noopener noreferrer"&gt;React example&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Swift --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Swift (iOS / MacOS)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-swift" target="_blank" rel="noopener noreferrer"&gt;client-sdk-swift&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;Swift UI&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://docs.livekit.io/client-sdk-swift/" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-example-swift" target="_blank" rel="noopener noreferrer"&gt;example&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Kotlin --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kotlin (Android)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-android" target="_blank" rel="noopener noreferrer"&gt;client-sdk-android&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;Compose&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://docs.livekit.io/client-sdk-android/index.html" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-android/tree/main/sample-app/src/main/java/io/livekit/android/sample" target="_blank" rel="noopener noreferrer"&gt;example&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-android/tree/main/sample-app-compose/src/main/java/io/livekit/android/composesample" target="_blank" rel="noopener noreferrer"&gt;Compose example&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Flutter --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Flutter (all platforms)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-flutter" target="_blank" rel="noopener noreferrer"&gt;client-sdk-flutter&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;native&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://docs.livekit.io/client-sdk-flutter/" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-flutter/tree/main/example" target="_blank" rel="noopener noreferrer"&gt;example&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Unity --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Unity WebGL&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-unity-web" target="_blank" rel="noopener noreferrer"&gt;client-sdk-unity-web&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://livekit.github.io/client-sdk-unity-web/" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- React Native --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;React Native (beta)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-react-native" target="_blank" rel="noopener noreferrer"&gt;client-sdk-react-native&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;native&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Rust --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rust&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-rust" target="_blank" rel="noopener noreferrer"&gt;client-sdk-rust&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Server SDKs&lt;/h3&gt; 
&lt;p&gt;Server SDKs enable your backend to generate &lt;a href="https://docs.livekit.io/home/get-started/authentication/"&gt;access tokens&lt;/a&gt;, call &lt;a href="https://docs.livekit.io/reference/server/server-apis/"&gt;server APIs&lt;/a&gt;, and receive &lt;a href="https://docs.livekit.io/home/server/webhooks/"&gt;webhooks&lt;/a&gt;. In addition, the Go SDK includes client capabilities, enabling you to build automations that behave like end-users.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Language&lt;/th&gt; 
   &lt;th align="left"&gt;Repo&lt;/th&gt; 
   &lt;th align="left"&gt;Docs&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Go&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/server-sdk-go"&gt;server-sdk-go&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://pkg.go.dev/github.com/livekit/server-sdk-go"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;JavaScript (TypeScript)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/server-sdk-js"&gt;server-sdk-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://docs.livekit.io/server-sdk-js/"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Ruby&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/server-sdk-ruby"&gt;server-sdk-ruby&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Java (Kotlin)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/server-sdk-kotlin"&gt;server-sdk-kotlin&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Python (community)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/python-sdks"&gt;python-sdks&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;PHP (community)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agence104/livekit-server-sdk-php"&gt;agence104/livekit-server-sdk-php&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/livekit-cli"&gt;CLI&lt;/a&gt; - command line interface &amp;amp; load tester&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/livekit/livekit-server"&gt;Docker image&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/livekit-helm"&gt;Helm charts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] We recommend installing &lt;a href="https://github.com/livekit/livekit-cli"&gt;LiveKit CLI&lt;/a&gt; along with the server. It lets you access server APIs, create tokens, and generate test traffic.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The following will install LiveKit's media server:&lt;/p&gt; 
&lt;h3&gt;MacOS&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;brew install livekit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl -sSL https://get.livekit.io | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;Download the &lt;a href="https://github.com/livekit/livekit/releases/latest"&gt;latest release here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Starting LiveKit&lt;/h3&gt; 
&lt;p&gt;Start LiveKit in development mode by running &lt;code&gt;livekit-server --dev&lt;/code&gt;. It'll use a placeholder API key/secret pair.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;API Key: devkey
API Secret: secret
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To customize your setup for production, refer to our &lt;a href="https://docs.livekit.io/deploy/"&gt;deployment docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Creating access token&lt;/h3&gt; 
&lt;p&gt;A user connecting to a LiveKit room requires an &lt;a href="https://docs.livekit.io/home/get-started/authentication/#creating-a-token"&gt;access token&lt;/a&gt;. Access tokens (JWT) encode the user's identity and the room permissions they've been granted. You can generate a token with our CLI:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;lk token create \
    --api-key devkey --api-secret secret \
    --join --room my-first-room --identity user1 \
    --valid-for 24h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Test with example app&lt;/h3&gt; 
&lt;p&gt;Head over to our &lt;a href="https://example.livekit.io"&gt;example app&lt;/a&gt; and enter a generated token to connect to your LiveKit server. This app is built with our &lt;a href="https://github.com/livekit/livekit-react"&gt;React SDK&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Once connected, your video and audio are now being published to your new LiveKit instance!&lt;/p&gt; 
&lt;h3&gt;Simulating a test publisher&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;lk room join \
    --url ws://localhost:7880 \
    --api-key devkey --api-secret secret \
    --identity bot-user1 \
    --publish-demo \
    my-first-room
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command publishes a looped demo video to a room. Due to how the video clip was encoded (keyframes every 3s), there's a slight delay before the browser has sufficient data to begin rendering frames. This is an artifact of the simulation.&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;h3&gt;Use LiveKit Cloud&lt;/h3&gt; 
&lt;p&gt;LiveKit Cloud is the fastest and most reliable way to run LiveKit. Every project gets free monthly bandwidth and transcoding credits.&lt;/p&gt; 
&lt;p&gt;Sign up for &lt;a href="https://cloud.livekit.io/"&gt;LiveKit Cloud&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Self-host&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href="https://docs.livekit.io/deploy/"&gt;deployment docs&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;Pre-requisites:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go 1.23+ is installed&lt;/li&gt; 
 &lt;li&gt;GOPATH/bin is in your PATH&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/livekit/livekit
cd livekit
./bootstrap.sh
mage
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome your contributions toward improving LiveKit! Please join us &lt;a href="http://livekit.io/join-slack"&gt;on Slack&lt;/a&gt; to discuss your ideas and/or PRs.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;LiveKit server is licensed under Apache License v2.0.&lt;/p&gt; 
&lt;!--BEGIN_REPO_NAV--&gt; 
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table&gt; 
 &lt;thead&gt;
  &lt;tr&gt;
   &lt;th colspan="2"&gt;LiveKit Ecosystem&lt;/th&gt;
  &lt;/tr&gt;
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt;
   &lt;td&gt;LiveKit SDKs&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://github.com/livekit/client-sdk-js"&gt;Browser&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-swift"&gt;iOS/macOS/visionOS&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-android"&gt;Android&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-flutter"&gt;Flutter&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-react-native"&gt;React Native&lt;/a&gt; · &lt;a href="https://github.com/livekit/rust-sdks"&gt;Rust&lt;/a&gt; · &lt;a href="https://github.com/livekit/node-sdks"&gt;Node.js&lt;/a&gt; · &lt;a href="https://github.com/livekit/python-sdks"&gt;Python&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-unity"&gt;Unity&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-unity-web"&gt;Unity (WebGL)&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-esp32"&gt;ESP32&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;Server APIs&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://github.com/livekit/node-sdks"&gt;Node.js&lt;/a&gt; · &lt;a href="https://github.com/livekit/server-sdk-go"&gt;Golang&lt;/a&gt; · &lt;a href="https://github.com/livekit/server-sdk-ruby"&gt;Ruby&lt;/a&gt; · &lt;a href="https://github.com/livekit/server-sdk-kotlin"&gt;Java/Kotlin&lt;/a&gt; · &lt;a href="https://github.com/livekit/python-sdks"&gt;Python&lt;/a&gt; · &lt;a href="https://github.com/livekit/rust-sdks"&gt;Rust&lt;/a&gt; · &lt;a href="https://github.com/agence104/livekit-server-sdk-php"&gt;PHP (community)&lt;/a&gt; · &lt;a href="https://github.com/pabloFuente/livekit-server-sdk-dotnet"&gt;.NET (community)&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;UI Components&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://github.com/livekit/components-js"&gt;React&lt;/a&gt; · &lt;a href="https://github.com/livekit/components-android"&gt;Android Compose&lt;/a&gt; · &lt;a href="https://github.com/livekit/components-swift"&gt;SwiftUI&lt;/a&gt; · &lt;a href="https://github.com/livekit/components-flutter"&gt;Flutter&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;Agents Frameworks&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://github.com/livekit/agents"&gt;Python&lt;/a&gt; · &lt;a href="https://github.com/livekit/agents-js"&gt;Node.js&lt;/a&gt; · &lt;a href="https://github.com/livekit/agent-playground"&gt;Playground&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;Services&lt;/td&gt;
   &lt;td&gt;&lt;b&gt;LiveKit server&lt;/b&gt; · &lt;a href="https://github.com/livekit/egress"&gt;Egress&lt;/a&gt; · &lt;a href="https://github.com/livekit/ingress"&gt;Ingress&lt;/a&gt; · &lt;a href="https://github.com/livekit/sip"&gt;SIP&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;Resources&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://docs.livekit.io"&gt;Docs&lt;/a&gt; · &lt;a href="https://github.com/livekit-examples"&gt;Example apps&lt;/a&gt; · &lt;a href="https://livekit.io/cloud"&gt;Cloud&lt;/a&gt; · &lt;a href="https://docs.livekit.io/home/self-hosting/deployment"&gt;Self-hosting&lt;/a&gt; · &lt;a href="https://github.com/livekit/livekit-cli"&gt;CLI&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!--END_REPO_NAV--&gt;</description>
    </item>
    
    <item>
      <title>trpc-group/trpc-agent-go</title>
      <link>https://github.com/trpc-group/trpc-agent-go</link>
      <description>&lt;p&gt;trpc-agent-go is a powerful Go framework for building intelligent agent systems using large language models (LLMs) and tools.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/README.zh_CN.md"&gt;中文&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;tRPC-Agent-Go&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/trpc.group/trpc-go/trpc-agent-go"&gt;&lt;img src="https://pkg.go.dev/badge/trpc.group/trpc-go/trpc-agent-go.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/trpc-group/trpc-agent-go"&gt;&lt;img src="https://goreportcard.com/badge/github.com/trpc-group/trpc-agent-go" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/trpc-group/trpc-agent-go/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-Apache--2.0-green.svg?sanitize=true" alt="LICENSE" /&gt;&lt;/a&gt; &lt;a href="https://github.com/trpc-group/trpc-agent-go/releases"&gt;&lt;img src="https://img.shields.io/github/release/trpc-group/trpc-agent-go.svg?style=flat-square" alt="Releases" /&gt;&lt;/a&gt; &lt;a href="https://github.com/trpc-group/trpc-agent-go/actions/workflows/prc.yml"&gt;&lt;img src="https://github.com/trpc-group/trpc-agent-go/actions/workflows/prc.yml/badge.svg?sanitize=true" alt="Tests" /&gt;&lt;/a&gt; &lt;a href="https://app.codecov.io/gh/trpc-group/trpc-agent-go/tree/main"&gt;&lt;img src="https://codecov.io/gh/trpc-group/trpc-agent-go/branch/main/graph/badge.svg?sanitize=true" alt="Coverage" /&gt;&lt;/a&gt; &lt;a href="https://trpc-group.github.io/trpc-agent-go/"&gt;&lt;img src="https://img.shields.io/badge/Docs-Website-blue.svg?sanitize=true" alt="Documentation" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;🚀 &lt;strong&gt;A powerful Go framework for building intelligent agent systems&lt;/strong&gt; that transforms how you create AI applications. Build autonomous agents that think, remember, collaborate, and act with unprecedented ease.&lt;/p&gt; 
&lt;p&gt;✨ &lt;strong&gt;Why tRPC-Agent-Go?&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🧠 &lt;strong&gt;Intelligent Reasoning&lt;/strong&gt;: Advanced hierarchical planners and multi-agent orchestration&lt;/li&gt; 
 &lt;li&gt;🧰 &lt;strong&gt;Rich Tool Ecosystem&lt;/strong&gt;: Seamless integration with external APIs, databases, and services&lt;/li&gt; 
 &lt;li&gt;💾 &lt;strong&gt;Persistent Memory&lt;/strong&gt;: Long-term state management and contextual awareness&lt;/li&gt; 
 &lt;li&gt;🔗 &lt;strong&gt;Multi-Agent Collaboration&lt;/strong&gt;: Chain, parallel, and graph-based agent workflows&lt;/li&gt; 
 &lt;li&gt;📊 &lt;strong&gt;Production Ready&lt;/strong&gt;: Built-in telemetry, tracing, and enterprise-grade reliability&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;High Performance&lt;/strong&gt;: Optimized for scalability and low latency&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎯 Use Cases&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Perfect for building:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🤖 &lt;strong&gt;Customer Support Bots&lt;/strong&gt; - Intelligent agents that understand context and solve complex queries&lt;/li&gt; 
 &lt;li&gt;📊 &lt;strong&gt;Data Analysis Assistants&lt;/strong&gt; - Agents that query databases, generate reports, and provide insights&lt;/li&gt; 
 &lt;li&gt;🔧 &lt;strong&gt;DevOps Automation&lt;/strong&gt; - Smart deployment, monitoring, and incident response systems&lt;/li&gt; 
 &lt;li&gt;💼 &lt;strong&gt;Business Process Automation&lt;/strong&gt; - Multi-step workflows with human-in-the-loop capabilities&lt;/li&gt; 
 &lt;li&gt;🧠 &lt;strong&gt;Research &amp;amp; Knowledge Management&lt;/strong&gt; - RAG-powered agents for document analysis and Q&amp;amp;A&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Key Features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="50%"&gt; &lt;h3&gt;🎪 &lt;strong&gt;Multi-Agent Orchestration&lt;/strong&gt;&lt;/h3&gt; &lt;pre&gt;&lt;code class="language-go"&gt;// Chain agents for complex workflows
pipeline := chainagent.New("pipeline",
    chainagent.WithSubAgents([]agent.Agent{
        analyzer, processor, reporter,
    }))

// Or run them in parallel
parallel := parallelagent.New("concurrent",
    parallelagent.WithSubAgents(tasks))
&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; 
   &lt;td width="50%"&gt; &lt;h3&gt;🧠 &lt;strong&gt;Advanced Memory System&lt;/strong&gt;&lt;/h3&gt; &lt;pre&gt;&lt;code class="language-go"&gt;// Persistent memory with search
memory := memorysvc.NewInMemoryService()
agent := llmagent.New("assistant",
    llmagent.WithTools(memory.Tools()),
    llmagent.WithModel(model))

// Memory service managed at runner level
runner := runner.NewRunner("app", agent,
    runner.WithMemoryService(memory))

// Agents remember context across sessions
&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;h3&gt;🛠️ &lt;strong&gt;Rich Tool Integration&lt;/strong&gt;&lt;/h3&gt; &lt;pre&gt;&lt;code class="language-go"&gt;// Any function becomes a tool
calculator := function.NewFunctionTool(
    calculate,
    function.WithName("calculator"),
    function.WithDescription("Math operations"))

// MCP protocol support
mcpTool := mcptool.New(serverConn)
&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;h3&gt;📈 &lt;strong&gt;Production Monitoring&lt;/strong&gt;&lt;/h3&gt; &lt;pre&gt;&lt;code class="language-go"&gt;// OpenTelemetry integration
runner := runner.NewRunner("app", agent,
    runner.WithTelemetry(telemetry.Config{
        TracingEnabled: true,
        MetricsEnabled: true,
    }))
&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#-use-cases"&gt;Use Cases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#-key-features"&gt;Key Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#examples"&gt;Examples&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#1-tool-usage-examples"&gt;Tool Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#2-llm-only-agent"&gt;LLM-only Agent&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#3-multi-agent-runners"&gt;Multi-Agent Runners&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#4-graph-agent"&gt;Graph Agent&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#5-memory"&gt;Memory&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#6-knowledge"&gt;Knowledge&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#7-telemetry--tracing"&gt;Telemetry &amp;amp; Tracing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#8-mcp-integration"&gt;MCP Integration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#9-debug-web-demo"&gt;Debug Web Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#architecture-overview"&gt;Architecture Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#using-built-in-agents"&gt;Using Built-in Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#future-enhancements"&gt;Future Enhancements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/#acknowledgements"&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Ready to dive into tRPC-Agent-Go? Our &lt;a href="https://trpc-group.github.io/trpc-agent-go/"&gt;documentation&lt;/a&gt; covers everything from basic concepts to advanced techniques, helping you build powerful AI applications with confidence. Whether you're new to AI agents or an experienced developer, you'll find detailed guides, practical examples, and best practices to accelerate your development journey.&lt;/p&gt; 
&lt;h2&gt;⚡ Quick Start&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🎬 &lt;strong&gt;See it in Action&lt;/strong&gt;: &lt;em&gt;[Demo GIF placeholder - showing agent reasoning and tool usage]&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;📋 Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ Go 1.21 or later&lt;/li&gt; 
 &lt;li&gt;🔑 LLM provider API key (OpenAI, DeepSeek, etc.)&lt;/li&gt; 
 &lt;li&gt;💡 5 minutes to build your first intelligent agent&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🚀 Run the Example&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Get started in 3 simple steps:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1️⃣ Clone and setup
git clone https://github.com/trpc-group/trpc-agent-go.git
cd trpc-agent-go

# 2️⃣ Configure your LLM
export OPENAI_API_KEY="your-api-key-here"
export OPENAI_BASE_URL="your-base-url-here"  # Optional

# 3️⃣ Run your first agent! 🎉
cd examples/runner
go run . -model="gpt-4o-mini" -streaming=true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;What you'll see:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;💬 &lt;strong&gt;Interactive chat&lt;/strong&gt; with your AI agent&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Real-time streaming&lt;/strong&gt; responses&lt;/li&gt; 
 &lt;li&gt;🧮 &lt;strong&gt;Tool usage&lt;/strong&gt; (calculator + time tools)&lt;/li&gt; 
 &lt;li&gt;🔄 &lt;strong&gt;Multi-turn conversations&lt;/strong&gt; with memory&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Try asking: "What's the current time? Then calculate 15 * 23 + 100"&lt;/p&gt; 
&lt;h3&gt;Basic Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "context"
    "fmt"
    "log"

    "trpc.group/trpc-go/trpc-agent-go/agent/llmagent"
    "trpc.group/trpc-go/trpc-agent-go/model"
    "trpc.group/trpc-go/trpc-agent-go/model/openai"
    "trpc.group/trpc-go/trpc-agent-go/runner"
    "trpc.group/trpc-go/trpc-agent-go/tool"
    "trpc.group/trpc-go/trpc-agent-go/tool/function"
)

func main() {
    // Create model.
    modelInstance := openai.New("deepseek-chat")

    // Create tool.
    calculatorTool := function.NewFunctionTool(
        calculator,
        function.WithName("calculator"),
        function.WithDescription("Execute addition, subtraction, multiplication, and division. "+
            "Parameters: a, b are numeric values, op takes values add/sub/mul/div; "+
            "returns result as the calculation result."),
    )

    // Enable streaming output.
    genConfig := model.GenerationConfig{
        Stream: true,
    }

    // Create Agent.
    agent := llmagent.New("assistant",
        llmagent.WithModel(modelInstance),
        llmagent.WithTools([]tool.Tool{calculatorTool}),
        llmagent.WithGenerationConfig(genConfig),
    )

    // Create Runner.
    runner := runner.NewRunner("calculator-app", agent)

    // Execute conversation.
    ctx := context.Background()
    events, err := runner.Run(ctx,
        "user-001",
        "session-001",
        model.NewUserMessage("Calculate what 2+3 equals"),
    )
    if err != nil {
        log.Fatal(err)
    }

    // Process event stream.
    for event := range events {
        if event.Object == "chat.completion.chunk" {
            fmt.Print(event.Response.Choices[0].Delta.Content)
        }
    }
    fmt.Println()
}

func calculator(ctx context.Context, req calculatorReq) (calculatorRsp, error) {
    var result float64
    switch req.Op {
    case "add", "+":
        result = req.A + req.B
    case "sub", "-":
        result = req.A - req.B
    case "mul", "*":
        result = req.A * req.B
    case "div", "/":
        result = req.A / req.B
    }
    return calculatorRsp{Result: result}, nil
}

type calculatorReq struct {
    A  float64 `json:"A"  jsonschema:"description=First integer operand,required"`
    B  float64 `json:"B"  jsonschema:"description=Second integer operand,required"`
    Op string  `json:"Op" jsonschema:"description=Operation type,enum=add,enum=sub,enum=mul,enum=div,required"`
}

type calculatorRsp struct {
    Result float64 `json:"result"`
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;examples&lt;/code&gt; directory contains runnable demos covering every major feature.&lt;/p&gt; 
&lt;h3&gt;1. Tool Usage&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/examples/agenttool"&gt;examples/agenttool&lt;/a&gt; – Wrap agents as callable tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/examples/multitools"&gt;examples/multitools&lt;/a&gt; – Multiple tools orchestration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/examples/duckduckgo"&gt;examples/duckduckgo&lt;/a&gt; – Web search tool integration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/examples/filetoolset"&gt;examples/filetoolset&lt;/a&gt; – File operations as tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/examples/fileinput"&gt;examples/fileinput&lt;/a&gt; – Provide files as inputs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/examples/agenttool"&gt;examples/agenttool&lt;/a&gt; shows streaming and non-streaming patterns.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2. LLM-Only Agent (&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/examples/llmagent"&gt;examples/llmagent&lt;/a&gt;)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Wrap any chat-completion model as an &lt;code&gt;LLMAgent&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Configure system instructions, temperature, max tokens, etc.&lt;/li&gt; 
 &lt;li&gt;Receive incremental &lt;code&gt;event.Event&lt;/code&gt; updates while the model streams.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3. Multi-Agent Runners (&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/examples/multiagent"&gt;examples/multiagent&lt;/a&gt;)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ChainAgent&lt;/strong&gt; – linear pipeline of sub-agents.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ParallelAgent&lt;/strong&gt; – run sub-agents concurrently and merge results.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CycleAgent&lt;/strong&gt; – iterate until a termination condition is met.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;4. Graph Agent (&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/examples/graph"&gt;examples/graph&lt;/a&gt;)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;GraphAgent&lt;/strong&gt; – demonstrates building and executing complex, conditional workflows using the &lt;code&gt;graph&lt;/code&gt; and &lt;code&gt;agent/graph&lt;/code&gt; packages. It shows how to construct a graph-based agent, manage state safely, implement conditional routing, and orchestrate execution with the Runner.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;5. Memory (&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/examples/memory"&gt;examples/memory&lt;/a&gt;)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;In‑memory and Redis memory services with CRUD, search and tool integration.&lt;/li&gt; 
 &lt;li&gt;How to configure, call tools and customize prompts.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;6. Knowledge (&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/examples/knowledge"&gt;examples/knowledge&lt;/a&gt;)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Basic RAG example: load sources, embed to a vector store, and search.&lt;/li&gt; 
 &lt;li&gt;How to use conversation context and tune loading/concurrency options.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;7. Telemetry &amp;amp; Tracing (&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/examples/telemetry"&gt;examples/telemetry&lt;/a&gt;)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenTelemetry hooks across model, tool and runner layers.&lt;/li&gt; 
 &lt;li&gt;Export traces to OTLP endpoint for real-time analysis.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;8. MCP Integration (&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/examples/mcptool"&gt;examples/mcptool&lt;/a&gt;)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Wrapper utilities around &lt;strong&gt;trpc-mcp-go&lt;/strong&gt;, an implementation of the &lt;strong&gt;Model Context Protocol (MCP)&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Provides structured prompts, tool calls, resource and session messages that follow the MCP specification.&lt;/li&gt; 
 &lt;li&gt;Enables dynamic tool execution and context-rich interactions between agents and LLMs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;9. Debug Web Demo (&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/examples/debugserver"&gt;examples/debugserver&lt;/a&gt;)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Launches a &lt;strong&gt;debug Server&lt;/strong&gt; that speaks ADK-compatible HTTP endpoints.&lt;/li&gt; 
 &lt;li&gt;Front-end: &lt;a href="https://github.com/google/adk-web"&gt;google/adk-web&lt;/a&gt; connects via &lt;code&gt;/run_sse&lt;/code&gt;, streams agent responses in real-time.&lt;/li&gt; 
 &lt;li&gt;Great starting point for building your own chat UI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Other notable examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/examples/humaninloop"&gt;examples/humaninloop&lt;/a&gt; – Human in the loop.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/examples/codeexecution"&gt;examples/codeexecution&lt;/a&gt; – Secure code execution.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See individual &lt;code&gt;README.md&lt;/code&gt; files in each example folder for usage details.&lt;/p&gt; 
&lt;h2&gt;🏗️ Architecture Overview&lt;/h2&gt; 
&lt;p&gt;Architecture&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/docs/mkdocs/assets/img/component_architecture.png" alt="architecture" /&gt;&lt;/p&gt; 
&lt;h3&gt;🔄 &lt;strong&gt;Execution Flow&lt;/strong&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;🚀 Runner&lt;/strong&gt; orchestrates the entire execution pipeline with session management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🤖 Agent&lt;/strong&gt; processes requests using multiple specialized components&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🧠 Planner&lt;/strong&gt; determines the optimal strategy and tool selection&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🛠️ Tools&lt;/strong&gt; execute specific tasks (API calls, calculations, web searches)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💾 Memory&lt;/strong&gt; maintains context and learns from interactions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📚 Knowledge&lt;/strong&gt; provides RAG capabilities for document understanding&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Key packages:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package&lt;/th&gt; 
   &lt;th&gt;Responsibility&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;agent&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Core execution unit, responsible for processing user input and generating responses.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;runner&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Agent executor, responsible for managing execution flow and connecting Session/Memory Service capabilities.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;model&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Supports multiple LLM models (OpenAI, DeepSeek, etc.).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;tool&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Provides various tool capabilities (Function, MCP, DuckDuckGo, etc.).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;session&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Manages user session state and events.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;memory&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Records user long-term memory and personalized information.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;knowledge&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Implements RAG knowledge retrieval capabilities.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;planner&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Provides Agent planning and reasoning capabilities.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Execution flow &lt;img src="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/docs/mkdocs/assets/img/timing_diagram.png" alt="execution" /&gt;&lt;/p&gt; 
&lt;h2&gt;Using Built-in Agents&lt;/h2&gt; 
&lt;p&gt;For most applications you &lt;strong&gt;do not&lt;/strong&gt; need to implement the &lt;code&gt;agent.Agent&lt;/code&gt; interface yourself. The framework already ships with several ready-to-use agents that you can compose like Lego bricks:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Agent&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;LLMAgent&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Wraps an LLM chat-completion model as an agent.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ChainAgent&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Executes sub-agents sequentially.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ParallelAgent&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Executes sub-agents concurrently and merges output.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CycleAgent&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Loops over a planner + executor until stop signal.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Multi-Agent Collaboration Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;// 1. Create a base LLM agent.
base := llmagent.New(
    "assistant",
    llmagent.WithModel(openai.New("gpt-4o-mini")),
)

// 2. Create a second LLM agent with a different instruction.
translator := llmagent.New(
    "translator",
    llmagent.WithInstruction("Translate everything to French"),
    llmagent.WithModel(openai.New("gpt-3.5-turbo")),
)

// 3. Combine them in a chain.
pipeline := chainagent.New(
    "pipeline",
    chainagent.WithSubAgents([]agent.Agent{base, translator}),
)

// 4. Run through the runner for sessions &amp;amp; telemetry.
run := runner.NewRunner("demo-app", pipeline)
events, _ := run.Run(ctx, "user-1", "sess-1",
    model.NewUserMessage("Hello!"))
for ev := range events { /* ... */ }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The composition API lets you nest chains, cycles, or parallels to build complex workflows without low-level plumbing.&lt;/p&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We ❤️ contributions! Join our growing community of developers building the future of AI agents.&lt;/p&gt; 
&lt;h3&gt;🌟 &lt;strong&gt;Ways to Contribute&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 &lt;strong&gt;Report bugs&lt;/strong&gt; or suggest features via &lt;a href="https://github.com/trpc-group/trpc-agent-go/issues"&gt;Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📖 &lt;strong&gt;Improve documentation&lt;/strong&gt; - help others learn faster&lt;/li&gt; 
 &lt;li&gt;🔧 &lt;strong&gt;Submit PRs&lt;/strong&gt; - bug fixes, new features, or examples&lt;/li&gt; 
 &lt;li&gt;💡 &lt;strong&gt;Share your use cases&lt;/strong&gt; - inspire others with your agent applications&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🚀 &lt;strong&gt;Quick Contribution Setup&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Fork &amp;amp; clone the repo
git clone https://github.com/YOUR_USERNAME/trpc-agent-go.git
cd trpc-agent-go

# Run tests to ensure everything works
go test ./...
go vet ./...

# Make your changes and submit a PR! 🎉
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;📋 &lt;strong&gt;Please read&lt;/strong&gt; &lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for detailed guidelines and coding standards.&lt;/p&gt; 
&lt;h2&gt;🏆 Acknowledgements&lt;/h2&gt; 
&lt;h3&gt;🏢 &lt;strong&gt;Enterprise Validation&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Special thanks to Tencent's business units including &lt;strong&gt;Tencent Yuanbao&lt;/strong&gt;, &lt;strong&gt;Tencent Video&lt;/strong&gt;, &lt;strong&gt;Tencent News&lt;/strong&gt;, &lt;strong&gt;IMA&lt;/strong&gt;, and &lt;strong&gt;QQ Music&lt;/strong&gt; for their invaluable support and real-world validation. Production usage drives framework excellence! 🚀&lt;/p&gt; 
&lt;h3&gt;🌟 &lt;strong&gt;Open Source Inspiration&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Inspired by amazing frameworks like &lt;strong&gt;ADK&lt;/strong&gt;, &lt;strong&gt;Agno&lt;/strong&gt;, &lt;strong&gt;CrewAI&lt;/strong&gt;, &lt;strong&gt;AutoGen&lt;/strong&gt;, and many others. Standing on the shoulders of giants! 🙏&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📜 License&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;strong&gt;Apache 2.0 License&lt;/strong&gt; - see &lt;a href="https://raw.githubusercontent.com/trpc-group/trpc-agent-go/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;🌟 &lt;strong&gt;Star us on GitHub&lt;/strong&gt; • 🐛 &lt;strong&gt;Report Issues&lt;/strong&gt; • 💬 &lt;strong&gt;Join Discussions&lt;/strong&gt;&lt;/h3&gt; 
 &lt;p&gt;&lt;strong&gt;Built with ❤️ by the tRPC-Agent-Go team&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;Empowering developers to build the next generation of intelligent applications&lt;/em&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Tencent/WeKnora</title>
      <link>https://github.com/Tencent/WeKnora</link>
      <description>&lt;p&gt;LLM-powered framework for deep document understanding, semantic retrieval, and context-aware answers using RAG paradigm.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;img src="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/images/logo.png" alt="WeKnora Logo" height="120" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://weknora.weixin.qq.com" target="_blank"&gt; &lt;img alt="官方网站" src="https://img.shields.io/badge/官方网站-WeKnora-4e6b99" /&gt; &lt;/a&gt; &lt;a href="https://chatbot.weixin.qq.com" target="_blank"&gt; &lt;img alt="微信对话开放平台" src="https://img.shields.io/badge/微信对话开放平台-5ac725" /&gt; &lt;/a&gt; &lt;a href="https://github.com/Tencent/WeKnora/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/License-MIT-ffffff?labelColor=d4eaf7&amp;amp;color=2e6cc4" alt="License" /&gt; &lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/CHANGELOG.md"&gt; &lt;img alt="Version" src="https://img.shields.io/badge/version-0.1.3-2e6cc4?labelColor=d4eaf7" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; | &lt;b&gt;English&lt;/b&gt; | &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/README_CN.md"&gt;&lt;b&gt;简体中文&lt;/b&gt;&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/README_JA.md"&gt;&lt;b&gt;日本語&lt;/b&gt;&lt;/a&gt; | &lt;/p&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h4 align="center"&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/#-overview"&gt;Overview&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/#-architecture"&gt;Architecture&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/#-key-features"&gt;Key Features&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/#-getting-started"&gt;Getting Started&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/#-api-reference"&gt;API Reference&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/#-developer-guide"&gt;Developer Guide&lt;/a&gt;&lt;/p&gt; &lt;/h4&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h1&gt;💡 WeKnora - LLM-Powered Document Understanding &amp;amp; Retrieval Framework&lt;/h1&gt; 
&lt;h2&gt;📌 Overview&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://weknora.weixin.qq.com"&gt;&lt;strong&gt;WeKnora&lt;/strong&gt;&lt;/a&gt; is an LLM-powered framework designed for deep document understanding and semantic retrieval, especially for handling complex, heterogeneous documents.&lt;/p&gt; 
&lt;p&gt;It adopts a modular architecture that combines multimodal preprocessing, semantic vector indexing, intelligent retrieval, and large language model inference. At its core, WeKnora follows the &lt;strong&gt;RAG (Retrieval-Augmented Generation)&lt;/strong&gt; paradigm, enabling high-quality, context-aware answers by combining relevant document chunks with model reasoning.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Website:&lt;/strong&gt; &lt;a href="https://weknora.weixin.qq.com"&gt;https://weknora.weixin.qq.com&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🔒 Security Notice&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Starting from v0.1.3, WeKnora includes login authentication functionality to enhance system security. For production deployments, we strongly recommend:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Deploy WeKnora services in internal/private network environments rather than public internet&lt;/li&gt; 
 &lt;li&gt;Avoid exposing the service directly to public networks to prevent potential information leakage&lt;/li&gt; 
 &lt;li&gt;Configure proper firewall rules and access controls for your deployment environment&lt;/li&gt; 
 &lt;li&gt;Regularly update to the latest version for security patches and improvements&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🏗️ Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/images/pipeline.jpg" alt="weknora-pipeline.png" /&gt;&lt;/p&gt; 
&lt;p&gt;WeKnora employs a modern modular design to build a complete document understanding and retrieval pipeline. The system primarily includes document parsing, vector processing, retrieval engine, and large model inference as core modules, with each component being flexibly configurable and extendable.&lt;/p&gt; 
&lt;h2&gt;🎯 Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🔍 Precise Understanding&lt;/strong&gt;: Structured content extraction from PDFs, Word documents, images and more into unified semantic views&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🧠 Intelligent Reasoning&lt;/strong&gt;: Leverages LLMs to understand document context and user intent for accurate Q&amp;amp;A and multi-turn conversations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔧 Flexible Extension&lt;/strong&gt;: All components from parsing and embedding to retrieval and generation are decoupled for easy customization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ Efficient Retrieval&lt;/strong&gt;: Hybrid retrieval strategies combining keywords, vectors, and knowledge graphs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎯 User-Friendly&lt;/strong&gt;: Intuitive web interface and standardized APIs for zero technical barriers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔒 Secure &amp;amp; Controlled&lt;/strong&gt;: Support for local deployment and private cloud, ensuring complete data sovereignty&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📊 Application Scenarios&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Scenario&lt;/th&gt; 
   &lt;th&gt;Applications&lt;/th&gt; 
   &lt;th&gt;Core Value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Enterprise Knowledge Management&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Internal document retrieval, policy Q&amp;amp;A, operation manual search&lt;/td&gt; 
   &lt;td&gt;Improve knowledge discovery efficiency, reduce training costs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Academic Research Analysis&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Paper retrieval, research report analysis, scholarly material organization&lt;/td&gt; 
   &lt;td&gt;Accelerate literature review, assist research decisions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Product Technical Support&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Product manual Q&amp;amp;A, technical documentation search, troubleshooting&lt;/td&gt; 
   &lt;td&gt;Enhance customer service quality, reduce support burden&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Legal &amp;amp; Compliance Review&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Contract clause retrieval, regulatory policy search, case analysis&lt;/td&gt; 
   &lt;td&gt;Improve compliance efficiency, reduce legal risks&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Medical Knowledge Assistance&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Medical literature retrieval, treatment guideline search, case analysis&lt;/td&gt; 
   &lt;td&gt;Support clinical decisions, improve diagnosis quality&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🧩 Feature Matrix&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Module&lt;/th&gt; 
   &lt;th&gt;Support&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Document Formats&lt;/td&gt; 
   &lt;td&gt;✅ PDF / Word / Txt / Markdown / Images (with OCR / Caption)&lt;/td&gt; 
   &lt;td&gt;Support for structured and unstructured documents with text extraction from images&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Embedding Models&lt;/td&gt; 
   &lt;td&gt;✅ Local models, BGE / GTE APIs, etc.&lt;/td&gt; 
   &lt;td&gt;Customizable embedding models, compatible with local deployment and cloud vector generation APIs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Vector DB Integration&lt;/td&gt; 
   &lt;td&gt;✅ PostgreSQL (pgvector), Elasticsearch&lt;/td&gt; 
   &lt;td&gt;Support for mainstream vector index backends, flexible switching for different retrieval scenarios&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Retrieval Strategies&lt;/td&gt; 
   &lt;td&gt;✅ BM25 / Dense Retrieval / GraphRAG&lt;/td&gt; 
   &lt;td&gt;Support for sparse/dense recall and knowledge graph-enhanced retrieval with customizable retrieve-rerank-generate pipelines&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LLM Integration&lt;/td&gt; 
   &lt;td&gt;✅ Support for Qwen, DeepSeek, etc., with thinking/non-thinking mode switching&lt;/td&gt; 
   &lt;td&gt;Compatible with local models (e.g., via Ollama) or external API services with flexible inference configuration&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;QA Capabilities&lt;/td&gt; 
   &lt;td&gt;✅ Context-aware, multi-turn dialogue, prompt templates&lt;/td&gt; 
   &lt;td&gt;Support for complex semantic modeling, instruction control and chain-of-thought Q&amp;amp;A with configurable prompts and context windows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;E2E Testing&lt;/td&gt; 
   &lt;td&gt;✅ Retrieval+generation process visualization and metric evaluation&lt;/td&gt; 
   &lt;td&gt;End-to-end testing tools for evaluating recall hit rates, answer coverage, BLEU/ROUGE and other metrics&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Deployment Modes&lt;/td&gt; 
   &lt;td&gt;✅ Support for local deployment / Docker images&lt;/td&gt; 
   &lt;td&gt;Meets private, offline deployment and flexible operation requirements&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;User Interfaces&lt;/td&gt; 
   &lt;td&gt;✅ Web UI + RESTful API&lt;/td&gt; 
   &lt;td&gt;Interactive interface and standard API endpoints, suitable for both developers and business users&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;h3&gt;🛠 Prerequisites&lt;/h3&gt; 
&lt;p&gt;Make sure the following tools are installed on your system:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.docker.com/compose/"&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📦 Installation&lt;/h3&gt; 
&lt;h4&gt;① Clone the repository&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone the main repository
git clone https://github.com/Tencent/WeKnora.git
cd WeKnora
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;② Configure environment variables&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Copy example env file
cp .env.example .env

# Edit .env and set required values
# All variables are documented in the .env.example comments
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;③ Start the services&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start all services (Ollama + backend containers)
./scripts/start_all.sh
# Or
make start-all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;③ Start the services (backup)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start ollama services (Optional)
ollama serve &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;

# Start the service
docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;④ Stop the services&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./scripts/start_all.sh --stop
# Or
make stop-all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🌐 Access Services&lt;/h3&gt; 
&lt;p&gt;Once started, services will be available at:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Web UI: &lt;code&gt;http://localhost&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Backend API: &lt;code&gt;http://localhost:8080&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Jaeger Tracing: &lt;code&gt;http://localhost:16686&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔌 Using WeChat Dialog Open Platform&lt;/h3&gt; 
&lt;p&gt;WeKnora serves as the core technology framework for the &lt;a href="https://chatbot.weixin.qq.com"&gt;WeChat Dialog Open Platform&lt;/a&gt;, providing a more convenient usage approach:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Zero-code Deployment&lt;/strong&gt;: Simply upload knowledge to quickly deploy intelligent Q&amp;amp;A services within the WeChat ecosystem, achieving an "ask and answer" experience&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Efficient Question Management&lt;/strong&gt;: Support for categorized management of high-frequency questions, with rich data tools to ensure accurate, reliable, and easily maintainable answers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WeChat Ecosystem Integration&lt;/strong&gt;: Through the WeChat Dialog Open Platform, WeKnora's intelligent Q&amp;amp;A capabilities can be seamlessly integrated into WeChat Official Accounts, Mini Programs, and other WeChat scenarios, enhancing user interaction experiences&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔗 Access WeKnora via MCP Server&lt;/h3&gt; 
&lt;h4&gt;1️⃣ Clone the repository&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/Tencent/WeKnora
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;2️⃣ Configure MCP Server&lt;/h4&gt; 
&lt;p&gt;Configure the MCP client to connect to the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "weknora": {
      "args": [
        "path/to/WeKnora/mcp-server/run_server.py"
      ],
      "command": "python",
      "env":{
        "WEKNORA_API_KEY":"Enter your WeKnora instance, open developer tools, check the request header x-api-key starting with sk",
        "WEKNORA_BASE_URL":"http(s)://your-weknora-address/api/v1"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run directly using stdio command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;pip install weknora-mcp-server
python -m weknora-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🔧 Initialization Configuration Guide&lt;/h2&gt; 
&lt;p&gt;To help users quickly configure various models and reduce trial-and-error costs, we've improved the original configuration file initialization method by adding a Web UI interface for model configuration. Before using, please ensure the code is updated to the latest version. The specific steps are as follows: If this is your first time using this project, you can skip steps ①② and go directly to steps ③④.&lt;/p&gt; 
&lt;h3&gt;① Stop the services&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./scripts/start_all.sh --stop
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;② Clear existing data tables (recommended when no important data exists)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make clean-db
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;③ Compile and start services&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./scripts/start_all.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;④ Access Web UI&lt;/h3&gt; 
&lt;p&gt;&lt;a href="http://localhost"&gt;http://localhost&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;On first access, it will automatically redirect to the initialization configuration page. After configuration is complete, it will automatically redirect to the knowledge base page. Please follow the page instructions to complete model configuration.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/images/config.png" alt="Configuration Page" /&gt;&lt;/p&gt; 
&lt;h2&gt;📱 Interface Showcase&lt;/h2&gt; 
&lt;h3&gt;Web UI Interface&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Knowledge Upload&lt;/b&gt;&lt;br /&gt;&lt;img src="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/images/knowledges.png" alt="Knowledge Upload Interface" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;b&gt;Q&amp;amp;A Entry&lt;/b&gt;&lt;br /&gt;&lt;img src="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/images/qa.png" alt="Q&amp;amp;A Entry Interface" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="2"&gt;&lt;b&gt;Rich Text &amp;amp; Image Responses&lt;/b&gt;&lt;br /&gt;&lt;img src="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/images/answer.png" alt="Rich Answer Interface" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Knowledge Base Management:&lt;/strong&gt; Support for dragging and dropping various documents, automatically identifying document structures and extracting core knowledge to establish indexes. The system clearly displays processing progress and document status, achieving efficient knowledge base management.&lt;/p&gt; 
&lt;h3&gt;Document Knowledge Graph&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/images/graph2.png" alt="Knowledge Graph View 1" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/images/graph1.png" alt="Knowledge Graph View 2" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;WeKnora supports transforming documents into knowledge graphs, displaying the relationships between different sections of the documents. Once the knowledge graph feature is enabled, the system analyzes and constructs an internal semantic association network that not only helps users understand document content but also provides structured support for indexing and retrieval, enhancing the relevance and breadth of search results.&lt;/p&gt; 
&lt;h3&gt;MCP Server Integration Effects&lt;/h3&gt; 
&lt;img width="950" height="2063" alt="MCP Server Integration Demo" src="https://github.com/user-attachments/assets/09111ec8-0489-415c-969d-aa3835778e14" /&gt; 
&lt;h2&gt;📘 API Reference&lt;/h2&gt; 
&lt;p&gt;Troubleshooting FAQ: &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/QA.md"&gt;Troubleshooting FAQ&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Detailed API documentation is available at: &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/API.md"&gt;API Docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🧭 Developer Guide&lt;/h2&gt; 
&lt;h3&gt;📁 Directory Structure&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;WeKnora/
├── cmd/         # Main entry point
├── internal/    # Core business logic
├── config/      # Configuration files
├── migrations/  # DB migration scripts
├── scripts/     # Shell scripts
├── services/    # Microservice logic
├── frontend/    # Frontend app
└── docs/        # Project documentation
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🔧 Common Commands&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Wipe all data from DB (use with caution)
make clean-db
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome community contributions! For suggestions, bugs, or feature requests, please submit an &lt;a href="https://github.com/Tencent/WeKnora/issues"&gt;Issue&lt;/a&gt; or directly create a Pull Request.&lt;/p&gt; 
&lt;h3&gt;🎯 How to Contribute&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 &lt;strong&gt;Bug Fixes&lt;/strong&gt;: Discover and fix system defects&lt;/li&gt; 
 &lt;li&gt;✨ &lt;strong&gt;New Features&lt;/strong&gt;: Propose and implement new capabilities&lt;/li&gt; 
 &lt;li&gt;📚 &lt;strong&gt;Documentation&lt;/strong&gt;: Improve project documentation&lt;/li&gt; 
 &lt;li&gt;🧪 &lt;strong&gt;Test Cases&lt;/strong&gt;: Write unit and integration tests&lt;/li&gt; 
 &lt;li&gt;🎨 &lt;strong&gt;UI/UX Enhancements&lt;/strong&gt;: Improve user interface and experience&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📋 Contribution Process&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork the project&lt;/strong&gt; to your GitHub account&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create a feature branch&lt;/strong&gt; &lt;code&gt;git checkout -b feature/amazing-feature&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Commit changes&lt;/strong&gt; &lt;code&gt;git commit -m 'Add amazing feature'&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Push branch&lt;/strong&gt; &lt;code&gt;git push origin feature/amazing-feature&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create a Pull Request&lt;/strong&gt; with detailed description of changes&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;🎨 Code Standards&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow &lt;a href="https://github.com/golang/go/wiki/CodeReviewComments"&gt;Go Code Review Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Format code using &lt;code&gt;gofmt&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Add necessary unit tests&lt;/li&gt; 
 &lt;li&gt;Update relevant documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📝 Commit Guidelines&lt;/h3&gt; 
&lt;p&gt;Use &lt;a href="https://www.conventionalcommits.org/"&gt;Conventional Commits&lt;/a&gt; standard:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;feat: Add document batch upload functionality
fix: Resolve vector retrieval precision issue
docs: Update API documentation
test: Add retrieval engine test cases
refactor: Restructure document parsing module
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/LICENSE"&gt;MIT License&lt;/a&gt;. You are free to use, modify, and distribute the code with proper attribution.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fatedier/frp</title>
      <link>https://github.com/fatedier/frp</link>
      <description>&lt;p&gt;A fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;frp&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://circleci.com/gh/fatedier/frp"&gt;&lt;img src="https://circleci.com/gh/fatedier/frp.svg?style=shield" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/fatedier/frp/releases"&gt;&lt;img src="https://img.shields.io/github/tag/fatedier/frp.svg?label=release" alt="GitHub release" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/fatedier/frp"&gt;&lt;img src="https://goreportcard.com/badge/github.com/fatedier/frp" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://somsubhra.github.io/github-release-stats/?username=fatedier&amp;amp;repository=frp"&gt;&lt;img src="https://img.shields.io/github/downloads/fatedier/frp/total.svg?logo=github" alt="GitHub Releases Stats" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/README.md"&gt;README&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/README_zh.md"&gt;中文文档&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;frp is an open source project with its ongoing development made possible entirely by the support of our awesome sponsors. If you'd like to join them, please consider &lt;a href="https://github.com/sponsors/fatedier"&gt;sponsoring frp's development&lt;/a&gt;.&lt;/p&gt; 
&lt;h3 align="center"&gt;Gold Sponsors&lt;/h3&gt; 
&lt;!--gold sponsors start--&gt; 
&lt;div align="center"&gt; 
 &lt;h2&gt;Recall.ai - API for meeting recordings&lt;/h2&gt; 
 &lt;p&gt;If you're looking for a meeting recording API, consider checking out &lt;a href="https://www.recall.ai/?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=fatedier-frp"&gt;Recall.ai&lt;/a&gt;,&lt;/p&gt; 
 &lt;p&gt;an API that records Zoom, Google Meet, Microsoft Teams, in-person meetings, and more.&lt;/p&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;a href="https://requestly.com/?utm_source=github&amp;amp;utm_medium=partnered&amp;amp;utm_campaign=frp" target="_blank"&gt; &lt;img width="480px" src="https://github.com/user-attachments/assets/24670320-997d-4d62-9bca-955c59fe883d" /&gt; &lt;br /&gt; &lt;b&gt;Requestly - Free &amp;amp; Open-Source alternative to Postman&lt;/b&gt; &lt;br /&gt; &lt;sub&gt;All-in-one platform to Test, Mock and Intercept APIs.&lt;/sub&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://go.warp.dev/frp" target="_blank"&gt; &lt;img width="360px" src="https://raw.githubusercontent.com/warpdotdev/brand-assets/refs/heads/main/Github/Sponsor/Warp-Github-LG-01.png" /&gt; &lt;br /&gt; &lt;b&gt;Warp, built for collaborating with AI Agents&lt;/b&gt; &lt;br /&gt; &lt;sub&gt;Available for macOS, Linux and Windows&lt;/sub&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://jb.gg/frp" target="_blank"&gt; &lt;img width="420px" src="https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/sponsor_jetbrains.jpg" /&gt; &lt;br /&gt; &lt;b&gt;The complete IDE crafted for professional Go developers&lt;/b&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/daytonaio/daytona" target="_blank"&gt; &lt;img width="420px" src="https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/sponsor_daytona.png" /&gt; &lt;br /&gt; &lt;b&gt;Secure and Elastic Infrastructure for Running Your AI-Generated Code&lt;/b&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/beclab/Olares" target="_blank"&gt; &lt;img width="420px" src="https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/sponsor_olares.jpeg" /&gt; &lt;br /&gt; &lt;b&gt;The sovereign cloud that puts you in control&lt;/b&gt; &lt;br /&gt; &lt;sub&gt;An open source, self-hosted alternative to public clouds, built for data ownership and privacy&lt;/sub&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;!--gold sponsors end--&gt; 
&lt;h2&gt;What is frp?&lt;/h2&gt; 
&lt;p&gt;frp is a fast reverse proxy that allows you to expose a local server located behind a NAT or firewall to the Internet. It currently supports &lt;strong&gt;TCP&lt;/strong&gt; and &lt;strong&gt;UDP&lt;/strong&gt;, as well as &lt;strong&gt;HTTP&lt;/strong&gt; and &lt;strong&gt;HTTPS&lt;/strong&gt; protocols, enabling requests to be forwarded to internal services via domain name.&lt;/p&gt; 
&lt;p&gt;frp also offers a P2P connect mode.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- vim-markdown-toc GFM --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#development-status"&gt;Development Status&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#about-v2"&gt;About V2&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#architecture"&gt;Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#example-usage"&gt;Example Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#access-your-computer-in-a-lan-network-via-ssh"&gt;Access your computer in a LAN network via SSH&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#multiple-ssh-services-sharing-the-same-port"&gt;Multiple SSH services sharing the same port&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#accessing-internal-web-services-with-custom-domains-in-lan"&gt;Accessing Internal Web Services with Custom Domains in LAN&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#forward-dns-query-requests"&gt;Forward DNS query requests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#forward-unix-domain-socket"&gt;Forward Unix Domain Socket&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#expose-a-simple-http-file-server"&gt;Expose a simple HTTP file server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#enable-https-for-a-local-https-service"&gt;Enable HTTPS for a local HTTP(S) service&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#expose-your-service-privately"&gt;Expose your service privately&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#p2p-mode"&gt;P2P Mode&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#features"&gt;Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#configuration-files"&gt;Configuration Files&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#using-environment-variables"&gt;Using Environment Variables&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#split-configures-into-different-files"&gt;Split Configures Into Different Files&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#server-dashboard"&gt;Server Dashboard&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#client-admin-ui"&gt;Client Admin UI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#monitor"&gt;Monitor&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#prometheus"&gt;Prometheus&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#authenticating-the-client"&gt;Authenticating the Client&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#token-authentication"&gt;Token Authentication&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#oidc-authentication"&gt;OIDC Authentication&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#encryption-and-compression"&gt;Encryption and Compression&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#tls"&gt;TLS&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#hot-reloading-frpc-configuration"&gt;Hot-Reloading frpc configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#get-proxy-status-from-client"&gt;Get proxy status from client&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#only-allowing-certain-ports-on-the-server"&gt;Only allowing certain ports on the server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#port-reuse"&gt;Port Reuse&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#bandwidth-limit"&gt;Bandwidth Limit&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#for-each-proxy"&gt;For Each Proxy&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#tcp-stream-multiplexing"&gt;TCP Stream Multiplexing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#support-kcp-protocol"&gt;Support KCP Protocol&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#support-quic-protocol"&gt;Support QUIC Protocol&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#connection-pooling"&gt;Connection Pooling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#load-balancing"&gt;Load balancing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#service-health-check"&gt;Service Health Check&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#rewriting-the-http-host-header"&gt;Rewriting the HTTP Host Header&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#setting-other-http-headers"&gt;Setting other HTTP Headers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#get-real-ip"&gt;Get Real IP&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#http-x-forwarded-for"&gt;HTTP X-Forwarded-For&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#proxy-protocol"&gt;Proxy Protocol&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#require-http-basic-auth-password-for-web-services"&gt;Require HTTP Basic Auth (Password) for Web Services&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#custom-subdomain-names"&gt;Custom Subdomain Names&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#url-routing"&gt;URL Routing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#tcp-port-multiplexing"&gt;TCP Port Multiplexing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#connecting-to-frps-via-proxy"&gt;Connecting to frps via PROXY&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#port-range-mapping"&gt;Port range mapping&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#client-plugins"&gt;Client Plugins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#server-manage-plugins"&gt;Server Manage Plugins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#ssh-tunnel-gateway"&gt;SSH Tunnel Gateway&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#virtual-network-virtualnet"&gt;Virtual Network (VirtualNet)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#feature-gates"&gt;Feature Gates&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#available-feature-gates"&gt;Available Feature Gates&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#enabling-feature-gates"&gt;Enabling Feature Gates&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#feature-lifecycle"&gt;Feature Lifecycle&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#related-projects"&gt;Related Projects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#donation"&gt;Donation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#github-sponsors"&gt;GitHub Sponsors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#paypal"&gt;PayPal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- vim-markdown-toc --&gt; 
&lt;h2&gt;Development Status&lt;/h2&gt; 
&lt;p&gt;frp is currently under development. You can try the latest release version in the &lt;code&gt;master&lt;/code&gt; branch, or use the &lt;code&gt;dev&lt;/code&gt; branch to access the version currently in development.&lt;/p&gt; 
&lt;p&gt;We are currently working on version 2 and attempting to perform some code refactoring and improvements. However, please note that it will not be compatible with version 1.&lt;/p&gt; 
&lt;p&gt;We will transition from version 0 to version 1 at the appropriate time and will only accept bug fixes and improvements, rather than big feature requests.&lt;/p&gt; 
&lt;h3&gt;About V2&lt;/h3&gt; 
&lt;p&gt;The complexity and difficulty of the v2 version are much higher than anticipated. I can only work on its development during fragmented time periods, and the constant interruptions disrupt productivity significantly. Given this situation, we will continue to optimize and iterate on the current version until we have more free time to proceed with the major version overhaul.&lt;/p&gt; 
&lt;p&gt;The concept behind v2 is based on my years of experience and reflection in the cloud-native domain, particularly in K8s and ServiceMesh. Its core is a modernized four-layer and seven-layer proxy, similar to envoy. This proxy itself is highly scalable, not only capable of implementing the functionality of intranet penetration but also applicable to various other domains. Building upon this highly scalable core, we aim to implement all the capabilities of frp v1 while also addressing the functionalities that were previously unachievable or difficult to implement in an elegant manner. Furthermore, we will maintain efficient development and iteration capabilities.&lt;/p&gt; 
&lt;p&gt;In addition, I envision frp itself becoming a highly extensible system and platform, similar to how we can provide a range of extension capabilities based on K8s. In K8s, we can customize development according to enterprise needs, utilizing features such as CRD, controller mode, webhook, CSI, and CNI. In frp v1, we introduced the concept of server plugins, which implemented some basic extensibility. However, it relies on a simple HTTP protocol and requires users to start independent processes and manage them on their own. This approach is far from flexible and convenient, and real-world demands vary greatly. It is unrealistic to expect a non-profit open-source project maintained by a few individuals to meet everyone's needs.&lt;/p&gt; 
&lt;p&gt;Finally, we acknowledge that the current design of modules such as configuration management, permission verification, certificate management, and API management is not modern enough. While we may carry out some optimizations in the v1 version, ensuring compatibility remains a challenging issue that requires a considerable amount of effort to address.&lt;/p&gt; 
&lt;p&gt;We sincerely appreciate your support for frp.&lt;/p&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/architecture.png" alt="architecture" /&gt;&lt;/p&gt; 
&lt;h2&gt;Example Usage&lt;/h2&gt; 
&lt;p&gt;To begin, download the latest program for your operating system and architecture from the &lt;a href="https://github.com/fatedier/frp/releases"&gt;Release&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;Next, place the &lt;code&gt;frps&lt;/code&gt; binary and server configuration file on Server A, which has a public IP address.&lt;/p&gt; 
&lt;p&gt;Finally, place the &lt;code&gt;frpc&lt;/code&gt; binary and client configuration file on Server B, which is located on a LAN that cannot be directly accessed from the public internet.&lt;/p&gt; 
&lt;p&gt;Some antiviruses improperly mark frpc as malware and delete it. This is due to frp being a networking tool capable of creating reverse proxies. Antiviruses sometimes flag reverse proxies due to their ability to bypass firewall port restrictions. If you are using antivirus, then you may need to whitelist/exclude frpc in your antivirus settings to avoid accidental quarantine/deletion. See &lt;a href="https://github.com/fatedier/frp/issues/3637"&gt;issue 3637&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Access your computer in a LAN network via SSH&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Modify &lt;code&gt;frps.toml&lt;/code&gt; on server A by setting the &lt;code&gt;bindPort&lt;/code&gt; for frp clients to connect to:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
bindPort = 7000
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Start &lt;code&gt;frps&lt;/code&gt; on server A:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frps -c ./frps.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Modify &lt;code&gt;frpc.toml&lt;/code&gt; on server B and set the &lt;code&gt;serverAddr&lt;/code&gt; field to the public IP address of your frps server:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "ssh"
type = "tcp"
localIP = "127.0.0.1"
localPort = 22
remotePort = 6000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the &lt;code&gt;localPort&lt;/code&gt; (listened on the client) and &lt;code&gt;remotePort&lt;/code&gt; (exposed on the server) are used for traffic going in and out of the frp system, while the &lt;code&gt;serverPort&lt;/code&gt; is used for communication between frps and frpc.&lt;/p&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; on server B:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frpc -c ./frpc.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;To access server B from another machine through server A via SSH (assuming the username is &lt;code&gt;test&lt;/code&gt;), use the following command:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;ssh -oPort=6000 test@x.x.x.x&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Multiple SSH services sharing the same port&lt;/h3&gt; 
&lt;p&gt;This example implements multiple SSH services exposed through the same port using a proxy of type tcpmux. Similarly, as long as the client supports the HTTP Connect proxy connection method, port reuse can be achieved in this way.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Deploy frps on a machine with a public IP and modify the frps.toml file. Here is a simplified configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;bindPort = 7000
tcpmuxHTTPConnectPort = 5002
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Deploy frpc on the internal machine A with the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "ssh1"
type = "tcpmux"
multiplexer = "httpconnect"
customDomains = ["machine-a.example.com"]
localIP = "127.0.0.1"
localPort = 22
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Deploy another frpc on the internal machine B with the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "ssh2"
type = "tcpmux"
multiplexer = "httpconnect"
customDomains = ["machine-b.example.com"]
localIP = "127.0.0.1"
localPort = 22
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;To access internal machine A using SSH ProxyCommand, assuming the username is "test":&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;ssh -o 'proxycommand socat - PROXY:x.x.x.x:%h:%p,proxyport=5002' test@machine-a.example.com&lt;/code&gt;&lt;/p&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;To access internal machine B, the only difference is the domain name, assuming the username is "test":&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;ssh -o 'proxycommand socat - PROXY:x.x.x.x:%h:%p,proxyport=5002' test@machine-b.example.com&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Accessing Internal Web Services with Custom Domains in LAN&lt;/h3&gt; 
&lt;p&gt;Sometimes we need to expose a local web service behind a NAT network to others for testing purposes with our own domain name.&lt;/p&gt; 
&lt;p&gt;Unfortunately, we cannot resolve a domain name to a local IP. However, we can use frp to expose an HTTP(S) service.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Modify &lt;code&gt;frps.toml&lt;/code&gt; and set the HTTP port for vhost to 8080:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
bindPort = 7000
vhostHTTPPort = 8080
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to configure an https proxy, you need to set up the &lt;code&gt;vhostHTTPSPort&lt;/code&gt;.&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Start &lt;code&gt;frps&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frps -c ./frps.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Modify &lt;code&gt;frpc.toml&lt;/code&gt; and set &lt;code&gt;serverAddr&lt;/code&gt; to the IP address of the remote frps server. Specify the &lt;code&gt;localPort&lt;/code&gt; of your web service:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "web"
type = "http"
localPort = 80
customDomains = ["www.example.com"]
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frpc -c ./frpc.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt; &lt;p&gt;Map the A record of &lt;code&gt;www.example.com&lt;/code&gt; to either the public IP of the remote frps server or a CNAME record pointing to your original domain.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Visit your local web service using url &lt;code&gt;http://www.example.com:8080&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Forward DNS query requests&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Modify &lt;code&gt;frps.toml&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
bindPort = 7000
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Start &lt;code&gt;frps&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frps -c ./frps.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Modify &lt;code&gt;frpc.toml&lt;/code&gt; and set &lt;code&gt;serverAddr&lt;/code&gt; to the IP address of the remote frps server. Forward DNS query requests to the Google Public DNS server &lt;code&gt;8.8.8.8:53&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "dns"
type = "udp"
localIP = "8.8.8.8"
localPort = 53
remotePort = 6000
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Start frpc:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frpc -c ./frpc.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Test DNS resolution using the &lt;code&gt;dig&lt;/code&gt; command:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;dig @x.x.x.x -p 6000 www.google.com&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Forward Unix Domain Socket&lt;/h3&gt; 
&lt;p&gt;Expose a Unix domain socket (e.g. the Docker daemon socket) as TCP.&lt;/p&gt; 
&lt;p&gt;Configure &lt;code&gt;frps&lt;/code&gt; as above.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; with the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "unix_domain_socket"
type = "tcp"
remotePort = 6000
[proxies.plugin]
type = "unix_domain_socket"
unixPath = "/var/run/docker.sock"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Test the configuration by getting the docker version using &lt;code&gt;curl&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;curl http://x.x.x.x:6000/version&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Expose a simple HTTP file server&lt;/h3&gt; 
&lt;p&gt;Expose a simple HTTP file server to access files stored in the LAN from the public Internet.&lt;/p&gt; 
&lt;p&gt;Configure &lt;code&gt;frps&lt;/code&gt; as described above, then:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; with the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "test_static_file"
type = "tcp"
remotePort = 6000
[proxies.plugin]
type = "static_file"
localPath = "/tmp/files"
stripPrefix = "static"
httpUser = "abc"
httpPassword = "abc"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Visit &lt;code&gt;http://x.x.x.x:6000/static/&lt;/code&gt; from your browser and specify correct username and password to view files in &lt;code&gt;/tmp/files&lt;/code&gt; on the &lt;code&gt;frpc&lt;/code&gt; machine.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Enable HTTPS for a local HTTP(S) service&lt;/h3&gt; 
&lt;p&gt;You may substitute &lt;code&gt;https2https&lt;/code&gt; for the plugin, and point the &lt;code&gt;localAddr&lt;/code&gt; to a HTTPS endpoint.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; with the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "test_https2http"
type = "https"
customDomains = ["test.example.com"]

[proxies.plugin]
type = "https2http"
localAddr = "127.0.0.1:80"
crtPath = "./server.crt"
keyPath = "./server.key"
hostHeaderRewrite = "127.0.0.1"
requestHeaders.set.x-from-where = "frp"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Visit &lt;code&gt;https://test.example.com&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Expose your service privately&lt;/h3&gt; 
&lt;p&gt;To mitigate risks associated with exposing certain services directly to the public network, STCP (Secret TCP) mode requires a preshared key to be used for access to the service from other clients.&lt;/p&gt; 
&lt;p&gt;Configure &lt;code&gt;frps&lt;/code&gt; same as above.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; on machine B with the following config. This example is for exposing the SSH service (port 22), and note the &lt;code&gt;secretKey&lt;/code&gt; field for the preshared key, and that the &lt;code&gt;remotePort&lt;/code&gt; field is removed here:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "secret_ssh"
type = "stcp"
secretKey = "abcdefg"
localIP = "127.0.0.1"
localPort = 22
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Start another &lt;code&gt;frpc&lt;/code&gt; (typically on another machine C) with the following config to access the SSH service with a security key (&lt;code&gt;secretKey&lt;/code&gt; field):&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[visitors]]
name = "secret_ssh_visitor"
type = "stcp"
serverName = "secret_ssh"
secretKey = "abcdefg"
bindAddr = "127.0.0.1"
bindPort = 6000
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;On machine C, connect to SSH on machine B, using this command:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;ssh -oPort=6000 127.0.0.1&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;P2P Mode&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;xtcp&lt;/strong&gt; is designed to transmit large amounts of data directly between clients. A frps server is still needed, as P2P here only refers to the actual data transmission.&lt;/p&gt; 
&lt;p&gt;Note that it may not work with all types of NAT devices. You might want to fallback to stcp if xtcp doesn't work.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; on machine B, and expose the SSH port. Note that the &lt;code&gt;remotePort&lt;/code&gt; field is removed:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000
# set up a new stun server if the default one is not available.
# natHoleStunServer = "xxx"

[[proxies]]
name = "p2p_ssh"
type = "xtcp"
secretKey = "abcdefg"
localIP = "127.0.0.1"
localPort = 22
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Start another &lt;code&gt;frpc&lt;/code&gt; (typically on another machine C) with the configuration to connect to SSH using P2P mode:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000
# set up a new stun server if the default one is not available.
# natHoleStunServer = "xxx"

[[visitors]]
name = "p2p_ssh_visitor"
type = "xtcp"
serverName = "p2p_ssh"
secretKey = "abcdefg"
bindAddr = "127.0.0.1"
bindPort = 6000
# when automatic tunnel persistence is required, set it to true
keepTunnelOpen = false
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;On machine C, connect to SSH on machine B, using this command:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;ssh -oPort=6000 127.0.0.1&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Configuration Files&lt;/h3&gt; 
&lt;p&gt;Since v0.52.0, we support TOML, YAML, and JSON for configuration. Please note that INI is deprecated and will be removed in future releases. New features will only be available in TOML, YAML, or JSON. Users wanting these new features should switch their configuration format accordingly.&lt;/p&gt; 
&lt;p&gt;Read the full example configuration files to find out even more features not described here.&lt;/p&gt; 
&lt;p&gt;Examples use TOML format, but you can still use YAML or JSON.&lt;/p&gt; 
&lt;p&gt;These configuration files is for reference only. Please do not use this configuration directly to run the program as it may have various issues.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/conf/frps_full_example.toml"&gt;Full configuration file for frps (Server)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/conf/frpc_full_example.toml"&gt;Full configuration file for frpc (Client)&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Using Environment Variables&lt;/h3&gt; 
&lt;p&gt;Environment variables can be referenced in the configuration file, using Go's standard format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "{{ .Envs.FRP_SERVER_ADDR }}"
serverPort = 7000

[[proxies]]
name = "ssh"
type = "tcp"
localIP = "127.0.0.1"
localPort = 22
remotePort = {{ .Envs.FRP_SSH_REMOTE_PORT }}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the config above, variables can be passed into &lt;code&gt;frpc&lt;/code&gt; program like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;export FRP_SERVER_ADDR=x.x.x.x
export FRP_SSH_REMOTE_PORT=6000
./frpc -c ./frpc.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;frpc&lt;/code&gt; will render configuration file template using OS environment variables. Remember to prefix your reference with &lt;code&gt;.Envs&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Split Configures Into Different Files&lt;/h3&gt; 
&lt;p&gt;You can split multiple proxy configs into different files and include them in the main file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000
includes = ["./confd/*.toml"]
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# ./confd/test.toml

[[proxies]]
name = "ssh"
type = "tcp"
localIP = "127.0.0.1"
localPort = 22
remotePort = 6000
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Server Dashboard&lt;/h3&gt; 
&lt;p&gt;Check frp's status and proxies' statistics information by Dashboard.&lt;/p&gt; 
&lt;p&gt;Configure a port for dashboard to enable this feature:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# The default value is 127.0.0.1. Change it to 0.0.0.0 when you want to access it from a public network.
webServer.addr = "0.0.0.0"
webServer.port = 7500
# dashboard's username and password are both optional
webServer.user = "admin"
webServer.password = "admin"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;code&gt;http://[serverAddr]:7500&lt;/code&gt; to see the dashboard, with username and password both being &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally, you can use HTTPS port by using your domains wildcard or normal SSL certificate:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;webServer.port = 7500
# dashboard's username and password are both optional
webServer.user = "admin"
webServer.password = "admin"
webServer.tls.certFile = "server.crt"
webServer.tls.keyFile = "server.key"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;code&gt;https://[serverAddr]:7500&lt;/code&gt; to see the dashboard in secure HTTPS connection, with username and password both being &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/dashboard.png" alt="dashboard" /&gt;&lt;/p&gt; 
&lt;h3&gt;Client Admin UI&lt;/h3&gt; 
&lt;p&gt;The Client Admin UI helps you check and manage frpc's configuration.&lt;/p&gt; 
&lt;p&gt;Configure an address for admin UI to enable this feature:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;webServer.addr = "127.0.0.1"
webServer.port = 7400
webServer.user = "admin"
webServer.password = "admin"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;code&gt;http://127.0.0.1:7400&lt;/code&gt; to see admin UI, with username and password both being &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Monitor&lt;/h3&gt; 
&lt;p&gt;When web server is enabled, frps will save monitor data in cache for 7 days. It will be cleared after process restart.&lt;/p&gt; 
&lt;p&gt;Prometheus is also supported.&lt;/p&gt; 
&lt;h4&gt;Prometheus&lt;/h4&gt; 
&lt;p&gt;Enable dashboard first, then configure &lt;code&gt;enablePrometheus = true&lt;/code&gt; in &lt;code&gt;frps.toml&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;http://{dashboard_addr}/metrics&lt;/code&gt; will provide prometheus monitor data.&lt;/p&gt; 
&lt;h3&gt;Authenticating the Client&lt;/h3&gt; 
&lt;p&gt;There are 2 authentication methods to authenticate frpc with frps.&lt;/p&gt; 
&lt;p&gt;You can decide which one to use by configuring &lt;code&gt;auth.method&lt;/code&gt; in &lt;code&gt;frpc.toml&lt;/code&gt; and &lt;code&gt;frps.toml&lt;/code&gt;, the default one is token.&lt;/p&gt; 
&lt;p&gt;Configuring &lt;code&gt;auth.additionalScopes = ["HeartBeats"]&lt;/code&gt; will use the configured authentication method to add and validate authentication on every heartbeat between frpc and frps.&lt;/p&gt; 
&lt;p&gt;Configuring &lt;code&gt;auth.additionalScopes = ["NewWorkConns"]&lt;/code&gt; will do the same for every new work connection between frpc and frps.&lt;/p&gt; 
&lt;h4&gt;Token Authentication&lt;/h4&gt; 
&lt;p&gt;When specifying &lt;code&gt;auth.method = "token"&lt;/code&gt; in &lt;code&gt;frpc.toml&lt;/code&gt; and &lt;code&gt;frps.toml&lt;/code&gt; - token based authentication will be used.&lt;/p&gt; 
&lt;p&gt;Make sure to specify the same &lt;code&gt;auth.token&lt;/code&gt; in &lt;code&gt;frps.toml&lt;/code&gt; and &lt;code&gt;frpc.toml&lt;/code&gt; for frpc to pass frps validation&lt;/p&gt; 
&lt;h5&gt;Token Source&lt;/h5&gt; 
&lt;p&gt;frp supports reading authentication tokens from external sources using the &lt;code&gt;tokenSource&lt;/code&gt; configuration. Currently, file-based token source is supported.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;File-based token source:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
auth.method = "token"
auth.tokenSource.type = "file"
auth.tokenSource.file.path = "/path/to/token/file"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The token will be read from the specified file at startup. This is useful for scenarios where tokens are managed by external systems or need to be kept separate from configuration files for security reasons.&lt;/p&gt; 
&lt;h4&gt;OIDC Authentication&lt;/h4&gt; 
&lt;p&gt;When specifying &lt;code&gt;auth.method = "oidc"&lt;/code&gt; in &lt;code&gt;frpc.toml&lt;/code&gt; and &lt;code&gt;frps.toml&lt;/code&gt; - OIDC based authentication will be used.&lt;/p&gt; 
&lt;p&gt;OIDC stands for OpenID Connect, and the flow used is called &lt;a href="https://tools.ietf.org/html/rfc6749#section-4.4"&gt;Client Credentials Grant&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To use this authentication type - configure &lt;code&gt;frpc.toml&lt;/code&gt; and &lt;code&gt;frps.toml&lt;/code&gt; as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
auth.method = "oidc"
auth.oidc.issuer = "https://example-oidc-issuer.com/"
auth.oidc.audience = "https://oidc-audience.com/.default"
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
auth.method = "oidc"
auth.oidc.clientID = "98692467-37de-409a-9fac-bb2585826f18" # Replace with OIDC client ID
auth.oidc.clientSecret = "oidc_secret"
auth.oidc.audience = "https://oidc-audience.com/.default"
auth.oidc.tokenEndpointURL = "https://example-oidc-endpoint.com/oauth2/v2.0/token"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Encryption and Compression&lt;/h3&gt; 
&lt;p&gt;The features are off by default. You can turn on encryption and/or compression:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "ssh"
type = "tcp"
localPort = 22
remotePort = 6000
transport.useEncryption = true
transport.useCompression = true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;TLS&lt;/h4&gt; 
&lt;p&gt;Since v0.50.0, the default value of &lt;code&gt;transport.tls.enable&lt;/code&gt; and &lt;code&gt;transport.tls.disableCustomTLSFirstByte&lt;/code&gt; has been changed to true, and tls is enabled by default.&lt;/p&gt; 
&lt;p&gt;For port multiplexing, frp sends a first byte &lt;code&gt;0x17&lt;/code&gt; to dial a TLS connection. This only takes effect when you set &lt;code&gt;transport.tls.disableCustomTLSFirstByte&lt;/code&gt; to false.&lt;/p&gt; 
&lt;p&gt;To &lt;strong&gt;enforce&lt;/strong&gt; &lt;code&gt;frps&lt;/code&gt; to only accept TLS connections - configure &lt;code&gt;transport.tls.force = true&lt;/code&gt; in &lt;code&gt;frps.toml&lt;/code&gt;. &lt;strong&gt;This is optional.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;frpc&lt;/code&gt; TLS settings:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;transport.tls.enable = true
transport.tls.certFile = "certificate.crt"
transport.tls.keyFile = "certificate.key"
transport.tls.trustedCaFile = "ca.crt"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;frps&lt;/code&gt; TLS settings:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;transport.tls.force = true
transport.tls.certFile = "certificate.crt"
transport.tls.keyFile = "certificate.key"
transport.tls.trustedCaFile = "ca.crt"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You will need &lt;strong&gt;a root CA cert&lt;/strong&gt; and &lt;strong&gt;at least one SSL/TLS certificate&lt;/strong&gt;. It &lt;strong&gt;can&lt;/strong&gt; be self-signed or regular (such as Let's Encrypt or another SSL/TLS certificate provider).&lt;/p&gt; 
&lt;p&gt;If you using &lt;code&gt;frp&lt;/code&gt; via IP address and not hostname, make sure to set the appropriate IP address in the Subject Alternative Name (SAN) area when generating SSL/TLS Certificates.&lt;/p&gt; 
&lt;p&gt;Given an example:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prepare openssl config file. It exists at &lt;code&gt;/etc/pki/tls/openssl.cnf&lt;/code&gt; in Linux System and &lt;code&gt;/System/Library/OpenSSL/openssl.cnf&lt;/code&gt; in MacOS, and you can copy it to current path, like &lt;code&gt;cp /etc/pki/tls/openssl.cnf ./my-openssl.cnf&lt;/code&gt;. If not, you can build it by yourself, like:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;cat &amp;gt; my-openssl.cnf &amp;lt;&amp;lt; EOF
[ ca ]
default_ca = CA_default
[ CA_default ]
x509_extensions = usr_cert
[ req ]
default_bits        = 2048
default_md          = sha256
default_keyfile     = privkey.pem
distinguished_name  = req_distinguished_name
attributes          = req_attributes
x509_extensions     = v3_ca
string_mask         = utf8only
[ req_distinguished_name ]
[ req_attributes ]
[ usr_cert ]
basicConstraints       = CA:FALSE
nsComment              = "OpenSSL Generated Certificate"
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer
[ v3_ca ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints       = CA:true
EOF
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;build ca certificates:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;openssl genrsa -out ca.key 2048
openssl req -x509 -new -nodes -key ca.key -subj "/CN=example.ca.com" -days 5000 -out ca.crt
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;build frps certificates:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;openssl genrsa -out server.key 2048

openssl req -new -sha256 -key server.key \
    -subj "/C=XX/ST=DEFAULT/L=DEFAULT/O=DEFAULT/CN=server.com" \
    -reqexts SAN \
    -config &amp;lt;(cat my-openssl.cnf &amp;lt;(printf "\n[SAN]\nsubjectAltName=DNS:localhost,IP:127.0.0.1,DNS:example.server.com")) \
    -out server.csr

openssl x509 -req -days 365 -sha256 \
	-in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial \
	-extfile &amp;lt;(printf "subjectAltName=DNS:localhost,IP:127.0.0.1,DNS:example.server.com") \
	-out server.crt
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;build frpc certificates：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;openssl genrsa -out client.key 2048
openssl req -new -sha256 -key client.key \
    -subj "/C=XX/ST=DEFAULT/L=DEFAULT/O=DEFAULT/CN=client.com" \
    -reqexts SAN \
    -config &amp;lt;(cat my-openssl.cnf &amp;lt;(printf "\n[SAN]\nsubjectAltName=DNS:client.com,DNS:example.client.com")) \
    -out client.csr

openssl x509 -req -days 365 -sha256 \
    -in client.csr -CA ca.crt -CAkey ca.key -CAcreateserial \
	-extfile &amp;lt;(printf "subjectAltName=DNS:client.com,DNS:example.client.com") \
	-out client.crt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hot-Reloading frpc configuration&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;webServer&lt;/code&gt; fields are required for enabling HTTP API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
webServer.addr = "127.0.0.1"
webServer.port = 7400
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then run command &lt;code&gt;frpc reload -c ./frpc.toml&lt;/code&gt; and wait for about 10 seconds to let &lt;code&gt;frpc&lt;/code&gt; create or update or remove proxies.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note that global client parameters won't be modified except 'start'.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can run command &lt;code&gt;frpc verify -c ./frpc.toml&lt;/code&gt; before reloading to check if there are config errors.&lt;/p&gt; 
&lt;h3&gt;Get proxy status from client&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;frpc status -c ./frpc.toml&lt;/code&gt; to get status of all proxies. The &lt;code&gt;webServer&lt;/code&gt; fields are required for enabling HTTP API.&lt;/p&gt; 
&lt;h3&gt;Only allowing certain ports on the server&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;allowPorts&lt;/code&gt; in &lt;code&gt;frps.toml&lt;/code&gt; is used to avoid abuse of ports:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
allowPorts = [
  { start = 2000, end = 3000 },
  { single = 3001 },
  { single = 3003 },
  { start = 4000, end = 50000 }
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Port Reuse&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;vhostHTTPPort&lt;/code&gt; and &lt;code&gt;vhostHTTPSPort&lt;/code&gt; in frps can use same port with &lt;code&gt;bindPort&lt;/code&gt;. frps will detect the connection's protocol and handle it correspondingly.&lt;/p&gt; 
&lt;p&gt;What you need to pay attention to is that if you want to configure &lt;code&gt;vhostHTTPSPort&lt;/code&gt; and &lt;code&gt;bindPort&lt;/code&gt; to the same port, you need to first set &lt;code&gt;transport.tls.disableCustomTLSFirstByte&lt;/code&gt; to false.&lt;/p&gt; 
&lt;p&gt;We would like to try to allow multiple proxies bind a same remote port with different protocols in the future.&lt;/p&gt; 
&lt;h3&gt;Bandwidth Limit&lt;/h3&gt; 
&lt;h4&gt;For Each Proxy&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "ssh"
type = "tcp"
localPort = 22
remotePort = 6000
transport.bandwidthLimit = "1MB"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Set &lt;code&gt;transport.bandwidthLimit&lt;/code&gt; in each proxy's configure to enable this feature. Supported units are &lt;code&gt;MB&lt;/code&gt; and &lt;code&gt;KB&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Set &lt;code&gt;transport.bandwidthLimitMode&lt;/code&gt; to &lt;code&gt;client&lt;/code&gt; or &lt;code&gt;server&lt;/code&gt; to limit bandwidth on the client or server side. Default is &lt;code&gt;client&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;TCP Stream Multiplexing&lt;/h3&gt; 
&lt;p&gt;frp supports tcp stream multiplexing since v0.10.0 like HTTP2 Multiplexing, in which case all logic connections to the same frpc are multiplexed into the same TCP connection.&lt;/p&gt; 
&lt;p&gt;You can disable this feature by modify &lt;code&gt;frps.toml&lt;/code&gt; and &lt;code&gt;frpc.toml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml and frpc.toml, must be same
transport.tcpMux = false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Support KCP Protocol&lt;/h3&gt; 
&lt;p&gt;KCP is a fast and reliable protocol that can achieve the transmission effect of a reduction of the average latency by 30% to 40% and reduction of the maximum delay by a factor of three, at the cost of 10% to 20% more bandwidth wasted than TCP.&lt;/p&gt; 
&lt;p&gt;KCP mode uses UDP as the underlying transport. Using KCP in frp:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Enable KCP in frps:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
bindPort = 7000
# Specify a UDP port for KCP.
kcpBindPort = 7000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;kcpBindPort&lt;/code&gt; number can be the same number as &lt;code&gt;bindPort&lt;/code&gt;, since &lt;code&gt;bindPort&lt;/code&gt; field specifies a TCP port.&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Configure &lt;code&gt;frpc.toml&lt;/code&gt; to use KCP to connect to frps:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
# Same as the 'kcpBindPort' in frps.toml
serverPort = 7000
transport.protocol = "kcp"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Support QUIC Protocol&lt;/h3&gt; 
&lt;p&gt;QUIC is a new multiplexed transport built on top of UDP.&lt;/p&gt; 
&lt;p&gt;Using QUIC in frp:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Enable QUIC in frps:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
bindPort = 7000
# Specify a UDP port for QUIC.
quicBindPort = 7000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;quicBindPort&lt;/code&gt; number can be the same number as &lt;code&gt;bindPort&lt;/code&gt;, since &lt;code&gt;bindPort&lt;/code&gt; field specifies a TCP port.&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Configure &lt;code&gt;frpc.toml&lt;/code&gt; to use QUIC to connect to frps:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
# Same as the 'quicBindPort' in frps.toml
serverPort = 7000
transport.protocol = "quic"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Connection Pooling&lt;/h3&gt; 
&lt;p&gt;By default, frps creates a new frpc connection to the backend service upon a user request. With connection pooling, frps keeps a certain number of pre-established connections, reducing the time needed to establish a connection.&lt;/p&gt; 
&lt;p&gt;This feature is suitable for a large number of short connections.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Configure the limit of pool count each proxy can use in &lt;code&gt;frps.toml&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
transport.maxPoolCount = 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Enable and specify the number of connection pool:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
transport.poolCount = 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Load balancing&lt;/h3&gt; 
&lt;p&gt;Load balancing is supported by &lt;code&gt;group&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;This feature is only available for types &lt;code&gt;tcp&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;tcpmux&lt;/code&gt; now.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "test1"
type = "tcp"
localPort = 8080
remotePort = 80
loadBalancer.group = "web"
loadBalancer.groupKey = "123"

[[proxies]]
name = "test2"
type = "tcp"
localPort = 8081
remotePort = 80
loadBalancer.group = "web"
loadBalancer.groupKey = "123"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;loadBalancer.groupKey&lt;/code&gt; is used for authentication.&lt;/p&gt; 
&lt;p&gt;Connections to port 80 will be dispatched to proxies in the same group randomly.&lt;/p&gt; 
&lt;p&gt;For type &lt;code&gt;tcp&lt;/code&gt;, &lt;code&gt;remotePort&lt;/code&gt; in the same group should be the same.&lt;/p&gt; 
&lt;p&gt;For type &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;customDomains&lt;/code&gt;, &lt;code&gt;subdomain&lt;/code&gt;, &lt;code&gt;locations&lt;/code&gt; should be the same.&lt;/p&gt; 
&lt;h3&gt;Service Health Check&lt;/h3&gt; 
&lt;p&gt;Health check feature can help you achieve high availability with load balancing.&lt;/p&gt; 
&lt;p&gt;Add &lt;code&gt;healthCheck.type = "tcp"&lt;/code&gt; or &lt;code&gt;healthCheck.type = "http"&lt;/code&gt; to enable health check.&lt;/p&gt; 
&lt;p&gt;With health check type &lt;strong&gt;tcp&lt;/strong&gt;, the service port will be pinged (TCPing):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "test1"
type = "tcp"
localPort = 22
remotePort = 6000
# Enable TCP health check
healthCheck.type = "tcp"
# TCPing timeout seconds
healthCheck.timeoutSeconds = 3
# If health check failed 3 times in a row, the proxy will be removed from frps
healthCheck.maxFailed = 3
# A health check every 10 seconds
healthCheck.intervalSeconds = 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With health check type &lt;strong&gt;http&lt;/strong&gt;, an HTTP request will be sent to the service and an HTTP 2xx OK response is expected:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "web"
type = "http"
localIP = "127.0.0.1"
localPort = 80
customDomains = ["test.example.com"]
# Enable HTTP health check
healthCheck.type = "http"
# frpc will send a GET request to '/status'
# and expect an HTTP 2xx OK response
healthCheck.path = "/status"
healthCheck.timeoutSeconds = 3
healthCheck.maxFailed = 3
healthCheck.intervalSeconds = 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Rewriting the HTTP Host Header&lt;/h3&gt; 
&lt;p&gt;By default frp does not modify the tunneled HTTP requests at all as it's a byte-for-byte copy.&lt;/p&gt; 
&lt;p&gt;However, speaking of web servers and HTTP requests, your web server might rely on the &lt;code&gt;Host&lt;/code&gt; HTTP header to determine the website to be accessed. frp can rewrite the &lt;code&gt;Host&lt;/code&gt; header when forwarding the HTTP requests, with the &lt;code&gt;hostHeaderRewrite&lt;/code&gt; field:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "web"
type = "http"
localPort = 80
customDomains = ["test.example.com"]
hostHeaderRewrite = "dev.example.com"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The HTTP request will have the &lt;code&gt;Host&lt;/code&gt; header rewritten to &lt;code&gt;Host: dev.example.com&lt;/code&gt; when it reaches the actual web server, although the request from the browser probably has &lt;code&gt;Host: test.example.com&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Setting other HTTP Headers&lt;/h3&gt; 
&lt;p&gt;Similar to &lt;code&gt;Host&lt;/code&gt;, You can override other HTTP request and response headers with proxy type &lt;code&gt;http&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "web"
type = "http"
localPort = 80
customDomains = ["test.example.com"]
hostHeaderRewrite = "dev.example.com"
requestHeaders.set.x-from-where = "frp"
responseHeaders.set.foo = "bar"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In this example, it will set header &lt;code&gt;x-from-where: frp&lt;/code&gt; in the HTTP request and &lt;code&gt;foo: bar&lt;/code&gt; in the HTTP response.&lt;/p&gt; 
&lt;h3&gt;Get Real IP&lt;/h3&gt; 
&lt;h4&gt;HTTP X-Forwarded-For&lt;/h4&gt; 
&lt;p&gt;This feature is for &lt;code&gt;http&lt;/code&gt; proxies or proxies with the &lt;code&gt;https2http&lt;/code&gt; and &lt;code&gt;https2https&lt;/code&gt; plugins enabled.&lt;/p&gt; 
&lt;p&gt;You can get user's real IP from HTTP request headers &lt;code&gt;X-Forwarded-For&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Proxy Protocol&lt;/h4&gt; 
&lt;p&gt;frp supports Proxy Protocol to send user's real IP to local services.&lt;/p&gt; 
&lt;p&gt;Here is an example for https service:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "web"
type = "https"
localPort = 443
customDomains = ["test.example.com"]

# now v1 and v2 are supported
transport.proxyProtocolVersion = "v2"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can enable Proxy Protocol support in nginx to expose user's real IP in HTTP header &lt;code&gt;X-Real-IP&lt;/code&gt;, and then read &lt;code&gt;X-Real-IP&lt;/code&gt; header in your web service for the real IP.&lt;/p&gt; 
&lt;h3&gt;Require HTTP Basic Auth (Password) for Web Services&lt;/h3&gt; 
&lt;p&gt;Anyone who can guess your tunnel URL can access your local web server unless you protect it with a password.&lt;/p&gt; 
&lt;p&gt;This enforces HTTP Basic Auth on all requests with the username and password specified in frpc's configure file.&lt;/p&gt; 
&lt;p&gt;It can only be enabled when proxy type is http.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "web"
type = "http"
localPort = 80
customDomains = ["test.example.com"]
httpUser = "abc"
httpPassword = "abc"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Visit &lt;code&gt;http://test.example.com&lt;/code&gt; in the browser and now you are prompted to enter the username and password.&lt;/p&gt; 
&lt;h3&gt;Custom Subdomain Names&lt;/h3&gt; 
&lt;p&gt;It is convenient to use &lt;code&gt;subdomain&lt;/code&gt; configure for http and https types when many people share one frps server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
subDomainHost = "frps.com"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Resolve &lt;code&gt;*.frps.com&lt;/code&gt; to the frps server's IP. This is usually called a Wildcard DNS record.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "web"
type = "http"
localPort = 80
subdomain = "test"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you can visit your web service on &lt;code&gt;test.frps.com&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Note that if &lt;code&gt;subdomainHost&lt;/code&gt; is not empty, &lt;code&gt;customDomains&lt;/code&gt; should not be the subdomain of &lt;code&gt;subdomainHost&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;URL Routing&lt;/h3&gt; 
&lt;p&gt;frp supports forwarding HTTP requests to different backend web services by url routing.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;locations&lt;/code&gt; specifies the prefix of URL used for routing. frps first searches for the most specific prefix location given by literal strings regardless of the listed order.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "web01"
type = "http"
localPort = 80
customDomains = ["web.example.com"]
locations = ["/"]

[[proxies]]
name = "web02"
type = "http"
localPort = 81
customDomains = ["web.example.com"]
locations = ["/news", "/about"]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;HTTP requests with URL prefix &lt;code&gt;/news&lt;/code&gt; or &lt;code&gt;/about&lt;/code&gt; will be forwarded to &lt;strong&gt;web02&lt;/strong&gt; and other requests to &lt;strong&gt;web01&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;TCP Port Multiplexing&lt;/h3&gt; 
&lt;p&gt;frp supports receiving TCP sockets directed to different proxies on a single port on frps, similar to &lt;code&gt;vhostHTTPPort&lt;/code&gt; and &lt;code&gt;vhostHTTPSPort&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The only supported TCP port multiplexing method available at the moment is &lt;code&gt;httpconnect&lt;/code&gt; - HTTP CONNECT tunnel.&lt;/p&gt; 
&lt;p&gt;When setting &lt;code&gt;tcpmuxHTTPConnectPort&lt;/code&gt; to anything other than 0 in frps, frps will listen on this port for HTTP CONNECT requests.&lt;/p&gt; 
&lt;p&gt;The host of the HTTP CONNECT request will be used to match the proxy in frps. Proxy hosts can be configured in frpc by configuring &lt;code&gt;customDomains&lt;/code&gt; and / or &lt;code&gt;subdomain&lt;/code&gt; under &lt;code&gt;tcpmux&lt;/code&gt; proxies, when &lt;code&gt;multiplexer = "httpconnect"&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
bindPort = 7000
tcpmuxHTTPConnectPort = 1337
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "proxy1"
type = "tcpmux"
multiplexer = "httpconnect"
customDomains = ["test1"]
localPort = 80

[[proxies]]
name = "proxy2"
type = "tcpmux"
multiplexer = "httpconnect"
customDomains = ["test2"]
localPort = 8080
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the above configuration - frps can be contacted on port 1337 with a HTTP CONNECT header such as:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;CONNECT test1 HTTP/1.1\r\n\r\n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and the connection will be routed to &lt;code&gt;proxy1&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Connecting to frps via PROXY&lt;/h3&gt; 
&lt;p&gt;frpc can connect to frps through proxy if you set OS environment variable &lt;code&gt;HTTP_PROXY&lt;/code&gt;, or if &lt;code&gt;transport.proxyURL&lt;/code&gt; is set in frpc.toml file.&lt;/p&gt; 
&lt;p&gt;It only works when protocol is tcp.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000
transport.proxyURL = "http://user:pwd@192.168.1.128:8080"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Port range mapping&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Added in v0.56.0&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;We can use the range syntax of Go template combined with the built-in &lt;code&gt;parseNumberRangePair&lt;/code&gt; function to achieve port range mapping.&lt;/p&gt; 
&lt;p&gt;The following example, when run, will create 8 proxies named &lt;code&gt;test-6000, test-6001 ... test-6007&lt;/code&gt;, each mapping the remote port to the local port.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{{- range $_, $v := parseNumberRangePair "6000-6006,6007" "6000-6006,6007" }}
[[proxies]]
name = "tcp-{{ $v.First }}"
type = "tcp"
localPort = {{ $v.First }}
remotePort = {{ $v.Second }}
{{- end }}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Client Plugins&lt;/h3&gt; 
&lt;p&gt;frpc only forwards requests to local TCP or UDP ports by default.&lt;/p&gt; 
&lt;p&gt;Plugins are used for providing rich features. There are built-in plugins such as &lt;code&gt;unix_domain_socket&lt;/code&gt;, &lt;code&gt;http_proxy&lt;/code&gt;, &lt;code&gt;socks5&lt;/code&gt;, &lt;code&gt;static_file&lt;/code&gt;, &lt;code&gt;http2https&lt;/code&gt;, &lt;code&gt;https2http&lt;/code&gt;, &lt;code&gt;https2https&lt;/code&gt; and you can see &lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#example-usage"&gt;example usage&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Using plugin &lt;strong&gt;http_proxy&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "http_proxy"
type = "tcp"
remotePort = 6000
[proxies.plugin]
type = "http_proxy"
httpUser = "abc"
httpPassword = "abc"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;httpUser&lt;/code&gt; and &lt;code&gt;httpPassword&lt;/code&gt; are configuration parameters used in &lt;code&gt;http_proxy&lt;/code&gt; plugin.&lt;/p&gt; 
&lt;h3&gt;Server Manage Plugins&lt;/h3&gt; 
&lt;p&gt;Read the &lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/doc/server_plugin.md"&gt;document&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Find more plugins in &lt;a href="https://github.com/gofrp/plugin"&gt;gofrp/plugin&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;SSH Tunnel Gateway&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;added in v0.53.0&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;frp supports listening to an SSH port on the frps side and achieves TCP protocol proxying through the SSH -R protocol, without relying on frpc.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
sshTunnelGateway.bindPort = 2200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When running &lt;code&gt;./frps -c frps.toml&lt;/code&gt;, a private key file named &lt;code&gt;.autogen_ssh_key&lt;/code&gt; will be automatically created in the current working directory. This generated private key file will be used by the SSH server in frps.&lt;/p&gt; 
&lt;p&gt;Executing the command&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ssh -R :80:127.0.0.1:8080 v0@{frp address} -p 2200 tcp --proxy_name "test-tcp" --remote_port 9090
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;sets up a proxy on frps that forwards the local 8080 service to the port 9090.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;frp (via SSH) (Ctrl+C to quit)

User:
ProxyName: test-tcp
Type: tcp
RemoteAddress: :9090
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is equivalent to:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;frpc tcp --proxy_name "test-tcp" --local_ip 127.0.0.1 --local_port 8080 --remote_port 9090
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please refer to this &lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/doc/ssh_tunnel_gateway.md"&gt;document&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Virtual Network (VirtualNet)&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Alpha feature added in v0.62.0&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;The VirtualNet feature enables frp to create and manage virtual network connections between clients and visitors through a TUN interface. This allows for IP-level routing between machines, extending frp beyond simple port forwarding to support full network connectivity.&lt;/p&gt; 
&lt;p&gt;For detailed information about configuration and usage, please refer to the &lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/doc/virtual_net.md"&gt;VirtualNet documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Feature Gates&lt;/h2&gt; 
&lt;p&gt;frp supports feature gates to enable or disable experimental features. This allows users to try out new features before they're considered stable.&lt;/p&gt; 
&lt;h3&gt;Available Feature Gates&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Stage&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;VirtualNet&lt;/td&gt; 
   &lt;td&gt;ALPHA&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;Virtual network capabilities for frp&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Enabling Feature Gates&lt;/h3&gt; 
&lt;p&gt;To enable an experimental feature, add the feature gate to your configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;featureGates = { VirtualNet = true }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Feature Lifecycle&lt;/h3&gt; 
&lt;p&gt;Features typically go through three stages:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;ALPHA&lt;/strong&gt;: Disabled by default, may be unstable&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;BETA&lt;/strong&gt;: May be enabled by default, more stable but still evolving&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GA (Generally Available)&lt;/strong&gt;: Enabled by default, ready for production use&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofrp/plugin"&gt;gofrp/plugin&lt;/a&gt; - A repository for frp plugins that contains a variety of plugins implemented based on the frp extension mechanism, meeting the customization needs of different scenarios.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofrp/tiny-frpc"&gt;gofrp/tiny-frpc&lt;/a&gt; - A lightweight version of the frp client (around 3.5MB at minimum) implemented using the ssh protocol, supporting some of the most commonly used features, suitable for devices with limited resources.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Interested in getting involved? We would like to help you!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Take a look at our &lt;a href="https://github.com/fatedier/frp/issues"&gt;issues list&lt;/a&gt; and consider sending a Pull Request to &lt;strong&gt;dev branch&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;If you want to add a new feature, please create an issue first to describe the new feature, as well as the implementation approach. Once a proposal is accepted, create an implementation of the new features and submit it as a pull request.&lt;/li&gt; 
 &lt;li&gt;Sorry for my poor English. Improvements for this document are welcome, even some typo fixes.&lt;/li&gt; 
 &lt;li&gt;If you have great ideas, send an email to &lt;a href="mailto:fatedier@gmail.com"&gt;fatedier@gmail.com&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note: We prefer you to give your advise in &lt;a href="https://github.com/fatedier/frp/issues"&gt;issues&lt;/a&gt;, so others with a same question can search it quickly and we don't need to answer them repeatedly.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Donation&lt;/h2&gt; 
&lt;p&gt;If frp helps you a lot, you can support us by:&lt;/p&gt; 
&lt;h3&gt;GitHub Sponsors&lt;/h3&gt; 
&lt;p&gt;Support us by &lt;a href="https://github.com/sponsors/fatedier"&gt;Github Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can have your company's logo placed on README file of this project.&lt;/p&gt; 
&lt;h3&gt;PayPal&lt;/h3&gt; 
&lt;p&gt;Donate money by &lt;a href="https://www.paypal.me/fatedier"&gt;PayPal&lt;/a&gt; to my account &lt;strong&gt;&lt;a href="mailto:fatedier@gmail.com"&gt;fatedier@gmail.com&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mudler/LocalAI</title>
      <link>https://github.com/mudler/LocalAI</link>
      <description>&lt;p&gt;🤖 The free, Open Source alternative to OpenAI, Claude and others. Self-hosted and local-first. Drop-in replacement for OpenAI, running on consumer-grade hardware. No GPU required. Runs gguf, transformers, diffusers and many more. Features: Generate Text, Audio, Video, Images, Voice Cloning, Distributed, P2P and decentralized inference&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;br /&gt; &lt;img width="300" src="https://raw.githubusercontent.com/mudler/LocalAI/master/core/http/static/logo.png" /&gt; &lt;br /&gt; &lt;br /&gt; &lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/go-skynet/LocalAI/fork" target="blank"&gt; &lt;img src="https://img.shields.io/github/forks/go-skynet/LocalAI?style=for-the-badge" alt="LocalAI forks" /&gt; &lt;/a&gt; &lt;a href="https://github.com/go-skynet/LocalAI/stargazers" target="blank"&gt; &lt;img src="https://img.shields.io/github/stars/go-skynet/LocalAI?style=for-the-badge" alt="LocalAI stars" /&gt; &lt;/a&gt; &lt;a href="https://github.com/go-skynet/LocalAI/pulls" target="blank"&gt; &lt;img src="https://img.shields.io/github/issues-pr/go-skynet/LocalAI?style=for-the-badge" alt="LocalAI pull-requests" /&gt; &lt;/a&gt; &lt;a href="https://github.com/go-skynet/LocalAI/releases"&gt; &lt;img src="https://img.shields.io/github/release/go-skynet/LocalAI?&amp;amp;label=Latest&amp;amp;style=for-the-badge" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://hub.docker.com/r/localai/localai" target="blank"&gt; &lt;img src="https://img.shields.io/badge/dockerhub-images-important.svg?logo=Docker" alt="LocalAI Docker hub" /&gt; &lt;/a&gt; &lt;a href="https://quay.io/repository/go-skynet/local-ai?tab=tags&amp;amp;tag=latest" target="blank"&gt; &lt;img src="https://img.shields.io/badge/quay.io-images-important.svg?" alt="LocalAI Quay.io" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://twitter.com/LocalAI_API" target="blank"&gt; &lt;img src="https://img.shields.io/badge/X-%23000000.svg?style=for-the-badge&amp;amp;logo=X&amp;amp;logoColor=white&amp;amp;label=LocalAI_API" alt="Follow LocalAI_API" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/uJAeKSAGDy" target="blank"&gt; &lt;img src="https://dcbadge.vercel.app/api/server/uJAeKSAGDy?style=flat-square&amp;amp;theme=default-inverted" alt="Join LocalAI Discord Community" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/5539" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/5539" alt="mudler%2FLocalAI | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;💡&lt;/span&gt; Get help - &lt;a href="https://localai.io/faq/"&gt;❓FAQ&lt;/a&gt; &lt;a href="https://github.com/go-skynet/LocalAI/discussions"&gt;💭Discussions&lt;/a&gt; &lt;a href="https://discord.gg/uJAeKSAGDy"&gt;&lt;span&gt;💬&lt;/span&gt; Discord&lt;/a&gt; &lt;a href="https://localai.io/"&gt;&lt;span&gt;📖&lt;/span&gt; Documentation website&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://localai.io/basics/getting_started/"&gt;💻 Quickstart&lt;/a&gt; &lt;a href="https://models.localai.io/"&gt;🖼️ Models&lt;/a&gt; &lt;a href="https://github.com/mudler/LocalAI/issues?q=is%3Aissue+is%3Aopen+label%3Aroadmap"&gt;🚀 Roadmap&lt;/a&gt; &lt;a href="https://explorer.localai.io"&gt;🌍 Explorer&lt;/a&gt; &lt;a href="https://github.com/mudler/LocalAI-examples"&gt;🛫 Examples&lt;/a&gt; Try on &lt;a href="https://t.me/localaiofficial_bot"&gt;&lt;img src="https://img.shields.io/badge/Telegram-2CA5E0?style=for-the-badge&amp;amp;logo=telegram&amp;amp;logoColor=white" alt="Telegram" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://github.com/go-skynet/LocalAI/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/go-skynet/LocalAI/actions/workflows/test.yml/badge.svg?sanitize=true" alt="tests" /&gt;&lt;/a&gt;&lt;a href="https://github.com/go-skynet/LocalAI/actions/workflows/release.yaml"&gt;&lt;img src="https://github.com/go-skynet/LocalAI/actions/workflows/release.yaml/badge.svg?sanitize=true" alt="Build and Release" /&gt;&lt;/a&gt;&lt;a href="https://github.com/go-skynet/LocalAI/actions/workflows/image.yml"&gt;&lt;img src="https://github.com/go-skynet/LocalAI/actions/workflows/image.yml/badge.svg?sanitize=true" alt="build container images" /&gt;&lt;/a&gt;&lt;a href="https://github.com/go-skynet/LocalAI/actions/workflows/bump_deps.yaml"&gt;&lt;img src="https://github.com/go-skynet/LocalAI/actions/workflows/bump_deps.yaml/badge.svg?sanitize=true" alt="Bump dependencies" /&gt;&lt;/a&gt;&lt;a href="https://artifacthub.io/packages/search?repo=localai"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/localai" alt="Artifact Hub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;LocalAI&lt;/strong&gt; is the free, Open Source OpenAI alternative. LocalAI act as a drop-in replacement REST API that's compatible with OpenAI (Elevenlabs, Anthropic... ) API specifications for local AI inferencing. It allows you to run LLMs, generate images, audio (and not only) locally or on-prem with consumer grade hardware, supporting multiple model families. Does not require GPU. It is created and maintained by &lt;a href="https://github.com/mudler"&gt;Ettore Di Giacinto&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📚🆕 Local Stack Family&lt;/h2&gt; 
&lt;p&gt;🆕 LocalAI is now part of a comprehensive suite of AI tools designed to work together:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="50%" valign="top"&gt; &lt;a href="https://github.com/mudler/LocalAGI"&gt; &lt;img src="https://raw.githubusercontent.com/mudler/LocalAGI/refs/heads/main/webui/react-ui/public/logo_2.png" width="300" alt="LocalAGI Logo" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width="50%" valign="top"&gt; &lt;h3&gt;&lt;a href="https://github.com/mudler/LocalAGI"&gt;LocalAGI&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;A powerful Local AI agent management platform that serves as a drop-in replacement for OpenAI's Responses API, enhanced with advanced agentic capabilities.&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" valign="top"&gt; &lt;a href="https://github.com/mudler/LocalRecall"&gt; &lt;img src="https://raw.githubusercontent.com/mudler/LocalRecall/refs/heads/main/static/localrecall_horizontal.png" width="300" alt="LocalRecall Logo" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width="50%" valign="top"&gt; &lt;h3&gt;&lt;a href="https://github.com/mudler/LocalRecall"&gt;LocalRecall&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;A REST-ful API and knowledge base management system that provides persistent memory and storage capabilities for AI agents.&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Talk Interface&lt;/th&gt; 
   &lt;th&gt;Generate Audio&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/mudler/LocalAI/master/docs/assets/images/screenshots/screenshot_tts.png" alt="Screenshot 2025-03-31 at 12-01-36 LocalAI - Talk" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/mudler/LocalAI/master/docs/assets/images/screenshots/screenshot_tts.png" alt="Screenshot 2025-03-31 at 12-01-29 LocalAI - Generate audio with voice-en-us-ryan-low" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Models Overview&lt;/th&gt; 
   &lt;th&gt;Generate Images&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/mudler/LocalAI/master/docs/assets/images/screenshots/screenshot_gallery.png" alt="Screenshot 2025-03-31 at 12-01-20 LocalAI - Models" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/mudler/LocalAI/master/docs/assets/images/screenshots/screenshot_image.png" alt="Screenshot 2025-03-31 at 12-31-41 LocalAI - Generate images with flux 1-dev" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Chat Interface&lt;/th&gt; 
   &lt;th&gt;Home&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/mudler/LocalAI/master/docs/assets/images/screenshots/screenshot_chat.png" alt="Screenshot 2025-03-31 at 11-57-44 LocalAI - Chat with localai-functioncall-qwen2 5-7b-v0 5" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/mudler/LocalAI/master/docs/assets/images/screenshots/screenshot_home.png" alt="Screenshot 2025-03-31 at 11-57-23 LocalAI API - c2a39e3 (c2a39e3639227cfd94ffffe9f5691239acc275a8)" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Login&lt;/th&gt; 
   &lt;th&gt;Swarm&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/mudler/LocalAI/master/docs/assets/images/screenshots/screenshot_login.png" alt="Screenshot 2025-03-31 at 12-09-59 " /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/mudler/LocalAI/master/docs/assets/images/screenshots/screenshot_p2p.png" alt="Screenshot 2025-03-31 at 12-10-39 LocalAI - P2P dashboard" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;💻 Quickstart&lt;/h2&gt; 
&lt;p&gt;Run the installer script:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Basic installation
curl https://localai.io/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more installation options, see &lt;a href="https://localai.io/docs/advanced/installer/"&gt;Installer Options&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;macOS Download:&lt;/h3&gt; 
&lt;a href="https://github.com/mudler/LocalAI/releases/latest/download/LocalAI.dmg"&gt; &lt;img src="https://img.shields.io/badge/Download-macOS-blue?style=for-the-badge&amp;amp;logo=apple&amp;amp;logoColor=white" alt="Download LocalAI for macOS" /&gt; &lt;/a&gt; 
&lt;p&gt;Or run with docker:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;💡 Docker Run vs Docker Start&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;docker run&lt;/code&gt; creates and starts a new container. If a container with the same name already exists, this command will fail.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;docker start&lt;/code&gt; starts an existing container that was previously created with &lt;code&gt;docker run&lt;/code&gt;.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;If you've already run LocalAI before and want to start it again, use: &lt;code&gt;docker start -i local-ai&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;CPU only image:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -ti --name local-ai -p 8080:8080 localai/localai:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;NVIDIA GPU Images:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# CUDA 12.0
docker run -ti --name local-ai -p 8080:8080 --gpus all localai/localai:latest-gpu-nvidia-cuda-12

# CUDA 11.7
docker run -ti --name local-ai -p 8080:8080 --gpus all localai/localai:latest-gpu-nvidia-cuda-11

# NVIDIA Jetson (L4T) ARM64
docker run -ti --name local-ai -p 8080:8080 --gpus all localai/localai:latest-nvidia-l4t-arm64
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;AMD GPU Images (ROCm):&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -ti --name local-ai -p 8080:8080 --device=/dev/kfd --device=/dev/dri --group-add=video localai/localai:latest-gpu-hipblas
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Intel GPU Images (oneAPI):&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -ti --name local-ai -p 8080:8080 --device=/dev/dri/card1 --device=/dev/dri/renderD128 localai/localai:latest-gpu-intel
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Vulkan GPU Images:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -ti --name local-ai -p 8080:8080 localai/localai:latest-gpu-vulkan
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;AIO Images (pre-downloaded models):&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# CPU version
docker run -ti --name local-ai -p 8080:8080 localai/localai:latest-aio-cpu

# NVIDIA CUDA 12 version
docker run -ti --name local-ai -p 8080:8080 --gpus all localai/localai:latest-aio-gpu-nvidia-cuda-12

# NVIDIA CUDA 11 version
docker run -ti --name local-ai -p 8080:8080 --gpus all localai/localai:latest-aio-gpu-nvidia-cuda-11

# Intel GPU version
docker run -ti --name local-ai -p 8080:8080 localai/localai:latest-aio-gpu-intel

# AMD GPU version
docker run -ti --name local-ai -p 8080:8080 --device=/dev/kfd --device=/dev/dri --group-add=video localai/localai:latest-aio-gpu-hipblas
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information about the AIO images and pre-downloaded models, see &lt;a href="https://localai.io/basics/container/"&gt;Container Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To load models:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# From the model gallery (see available models with `local-ai models list`, in the WebUI from the model tab, or visiting https://models.localai.io)
local-ai run llama-3.2-1b-instruct:q4_k_m
# Start LocalAI with the phi-2 model directly from huggingface
local-ai run huggingface://TheBloke/phi-2-GGUF/phi-2.Q8_0.gguf
# Install and run a model from the Ollama OCI registry
local-ai run ollama://gemma:2b
# Run a model from a configuration file
local-ai run https://gist.githubusercontent.com/.../phi-2.yaml
# Install and run a model from a standard OCI registry (e.g., Docker Hub)
local-ai run oci://localai/phi-2:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚡ &lt;strong&gt;Automatic Backend Detection&lt;/strong&gt;: When you install models from the gallery or YAML files, LocalAI automatically detects your system's GPU capabilities (NVIDIA, AMD, Intel) and downloads the appropriate backend. For advanced configuration options, see &lt;a href="https://localai.io/features/gpu-acceleration/#automatic-backend-detection"&gt;GPU Acceleration&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For more information, see &lt;a href="https://localai.io/basics/getting_started/index.html"&gt;💻 Getting started&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📰 Latest project news&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;October 2025: 🔌 &lt;a href="https://localai.io/docs/features/mcp/"&gt;Model Context Protocol (MCP)&lt;/a&gt; support added for agentic capabilities with external tools&lt;/li&gt; 
 &lt;li&gt;September 2025: New Launcher application for MacOS and Linux, extended support to many backends for Mac and Nvidia L4T devices. Models: Added MLX-Audio, WAN 2.2. WebUI improvements and Python-based backends now ships portable python environments.&lt;/li&gt; 
 &lt;li&gt;August 2025: MLX, MLX-VLM, Diffusers and llama.cpp are now supported on Mac M1/M2/M3+ chips ( with &lt;code&gt;development&lt;/code&gt; suffix in the gallery ): &lt;a href="https://github.com/mudler/LocalAI/pull/6049"&gt;https://github.com/mudler/LocalAI/pull/6049&lt;/a&gt; &lt;a href="https://github.com/mudler/LocalAI/pull/6119"&gt;https://github.com/mudler/LocalAI/pull/6119&lt;/a&gt; &lt;a href="https://github.com/mudler/LocalAI/pull/6121"&gt;https://github.com/mudler/LocalAI/pull/6121&lt;/a&gt; &lt;a href="https://github.com/mudler/LocalAI/pull/6060"&gt;https://github.com/mudler/LocalAI/pull/6060&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;July/August 2025: 🔍 &lt;a href="https://localai.io/features/object-detection/"&gt;Object Detection&lt;/a&gt; added to the API featuring &lt;a href="https://github.com/roboflow/rf-detr"&gt;rf-detr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;July 2025: All backends migrated outside of the main binary. LocalAI is now more lightweight, small, and automatically downloads the required backend to run the model. &lt;a href="https://github.com/mudler/LocalAI/releases/tag/v3.2.0"&gt;Read the release notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;June 2025: &lt;a href="https://github.com/mudler/LocalAI/pull/5607"&gt;Backend management&lt;/a&gt; has been added. Attention: extras images are going to be deprecated from the next release! Read &lt;a href="https://github.com/mudler/LocalAI/pull/5607"&gt;the backend management PR&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;May 2025: &lt;a href="https://github.com/mudler/LocalAI/pull/5466"&gt;Audio input&lt;/a&gt; and &lt;a href="https://github.com/mudler/LocalAI/pull/5396"&gt;Reranking&lt;/a&gt; in llama.cpp backend, &lt;a href="https://github.com/mudler/LocalAI/pull/5392"&gt;Realtime API&lt;/a&gt;, Support to Gemma, SmollVLM, and more multimodal models (available in the gallery).&lt;/li&gt; 
 &lt;li&gt;May 2025: Important: image name changes &lt;a href="https://github.com/mudler/LocalAI/releases/tag/v2.29.0"&gt;See release&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Apr 2025: Rebrand, WebUI enhancements&lt;/li&gt; 
 &lt;li&gt;Apr 2025: &lt;a href="https://github.com/mudler/LocalAGI"&gt;LocalAGI&lt;/a&gt; and &lt;a href="https://github.com/mudler/LocalRecall"&gt;LocalRecall&lt;/a&gt; join the LocalAI family stack.&lt;/li&gt; 
 &lt;li&gt;Apr 2025: WebUI overhaul, AIO images updates&lt;/li&gt; 
 &lt;li&gt;Feb 2025: Backend cleanup, Breaking changes, new backends (kokoro, OutelTTS, faster-whisper), Nvidia L4T images&lt;/li&gt; 
 &lt;li&gt;Jan 2025: LocalAI model release: &lt;a href="https://huggingface.co/mudler/LocalAI-functioncall-phi-4-v0.3"&gt;https://huggingface.co/mudler/LocalAI-functioncall-phi-4-v0.3&lt;/a&gt;, SANA support in diffusers: &lt;a href="https://github.com/mudler/LocalAI/pull/4603"&gt;https://github.com/mudler/LocalAI/pull/4603&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dec 2024: stablediffusion.cpp backend (ggml) added ( &lt;a href="https://github.com/mudler/LocalAI/pull/4289"&gt;https://github.com/mudler/LocalAI/pull/4289&lt;/a&gt; )&lt;/li&gt; 
 &lt;li&gt;Nov 2024: Bark.cpp backend added ( &lt;a href="https://github.com/mudler/LocalAI/pull/4287"&gt;https://github.com/mudler/LocalAI/pull/4287&lt;/a&gt; )&lt;/li&gt; 
 &lt;li&gt;Nov 2024: Voice activity detection models (&lt;strong&gt;VAD&lt;/strong&gt;) added to the API: &lt;a href="https://github.com/mudler/LocalAI/pull/4204"&gt;https://github.com/mudler/LocalAI/pull/4204&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Oct 2024: examples moved to &lt;a href="https://github.com/mudler/LocalAI-examples"&gt;LocalAI-examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Aug 2024: 🆕 FLUX-1, &lt;a href="https://explorer.localai.io"&gt;P2P Explorer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;July 2024: 🔥🔥 🆕 P2P Dashboard, LocalAI Federated mode and AI Swarms: &lt;a href="https://github.com/mudler/LocalAI/pull/2723"&gt;https://github.com/mudler/LocalAI/pull/2723&lt;/a&gt;. P2P Global community pools: &lt;a href="https://github.com/mudler/LocalAI/issues/3113"&gt;https://github.com/mudler/LocalAI/issues/3113&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;May 2024: 🔥🔥 Decentralized P2P llama.cpp: &lt;a href="https://github.com/mudler/LocalAI/pull/2343"&gt;https://github.com/mudler/LocalAI/pull/2343&lt;/a&gt; (peer2peer llama.cpp!) 👉 Docs &lt;a href="https://localai.io/features/distribute/"&gt;https://localai.io/features/distribute/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;May 2024: 🔥🔥 Distributed inferencing: &lt;a href="https://github.com/mudler/LocalAI/pull/2324"&gt;https://github.com/mudler/LocalAI/pull/2324&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;April 2024: Reranker API: &lt;a href="https://github.com/mudler/LocalAI/pull/2121"&gt;https://github.com/mudler/LocalAI/pull/2121&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Roadmap items: &lt;a href="https://github.com/mudler/LocalAI/issues?q=is%3Aissue+is%3Aopen+label%3Aroadmap"&gt;List of issues&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 &lt;a href="https://localai.io/features/"&gt;Features&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🧩 &lt;a href="https://localai.io/backends/"&gt;Backend Gallery&lt;/a&gt;: Install/remove backends on the fly, powered by OCI images — fully customizable and API-driven.&lt;/li&gt; 
 &lt;li&gt;📖 &lt;a href="https://localai.io/features/text-generation/"&gt;Text generation with GPTs&lt;/a&gt; (&lt;code&gt;llama.cpp&lt;/code&gt;, &lt;code&gt;transformers&lt;/code&gt;, &lt;code&gt;vllm&lt;/code&gt; ... &lt;a href="https://localai.io/model-compatibility/index.html#model-compatibility-table"&gt;&lt;span&gt;📖&lt;/span&gt; and more&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;🗣 &lt;a href="https://localai.io/features/text-to-audio/"&gt;Text to Audio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔈 &lt;a href="https://localai.io/features/audio-to-text/"&gt;Audio to Text&lt;/a&gt; (Audio transcription with &lt;code&gt;whisper.cpp&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;🎨 &lt;a href="https://localai.io/features/image-generation"&gt;Image generation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔥 &lt;a href="https://localai.io/features/openai-functions/"&gt;OpenAI-alike tools API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🧠 &lt;a href="https://localai.io/features/embeddings/"&gt;Embeddings generation for vector databases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;✍️ &lt;a href="https://localai.io/features/constrained_grammars/"&gt;Constrained grammars&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🖼️ &lt;a href="https://localai.io/models/"&gt;Download Models directly from Huggingface &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🥽 &lt;a href="https://localai.io/features/gpt-vision/"&gt;Vision API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔍 &lt;a href="https://localai.io/features/object-detection/"&gt;Object Detection&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📈 &lt;a href="https://localai.io/features/reranker/"&gt;Reranker API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🆕🖧 &lt;a href="https://localai.io/features/distribute/"&gt;P2P Inferencing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🆕🔌 &lt;a href="https://localai.io/docs/features/mcp/"&gt;Model Context Protocol (MCP)&lt;/a&gt; - Agentic capabilities with external tools and &lt;a href="https://github.com/mudler/LocalAGI"&gt;LocalAGI's Agentic capabilities&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔊 Voice activity detection (Silero-VAD support)&lt;/li&gt; 
 &lt;li&gt;🌍 Integrated WebUI!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🧩 Supported Backends &amp;amp; Acceleration&lt;/h2&gt; 
&lt;p&gt;LocalAI supports a comprehensive range of AI backends with multiple acceleration options:&lt;/p&gt; 
&lt;h3&gt;Text Generation &amp;amp; Language Models&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Backend&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Acceleration Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;llama.cpp&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;LLM inference in C/C++&lt;/td&gt; 
   &lt;td&gt;CUDA 11/12, ROCm, Intel SYCL, Vulkan, Metal, CPU&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;vLLM&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Fast LLM inference with PagedAttention&lt;/td&gt; 
   &lt;td&gt;CUDA 12, ROCm, Intel&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;transformers&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;HuggingFace transformers framework&lt;/td&gt; 
   &lt;td&gt;CUDA 11/12, ROCm, Intel, CPU&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;exllama2&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;GPTQ inference library&lt;/td&gt; 
   &lt;td&gt;CUDA 12&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MLX&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Apple Silicon LLM inference&lt;/td&gt; 
   &lt;td&gt;Metal (M1/M2/M3+)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MLX-VLM&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Apple Silicon Vision-Language Models&lt;/td&gt; 
   &lt;td&gt;Metal (M1/M2/M3+)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Audio &amp;amp; Speech Processing&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Backend&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Acceleration Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;whisper.cpp&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;OpenAI Whisper in C/C++&lt;/td&gt; 
   &lt;td&gt;CUDA 12, ROCm, Intel SYCL, Vulkan, CPU&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;faster-whisper&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Fast Whisper with CTranslate2&lt;/td&gt; 
   &lt;td&gt;CUDA 12, ROCm, Intel, CPU&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;bark&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Text-to-audio generation&lt;/td&gt; 
   &lt;td&gt;CUDA 12, ROCm, Intel&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;bark-cpp&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;C++ implementation of Bark&lt;/td&gt; 
   &lt;td&gt;CUDA, Metal, CPU&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;coqui&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Advanced TTS with 1100+ languages&lt;/td&gt; 
   &lt;td&gt;CUDA 12, ROCm, Intel, CPU&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;kokoro&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Lightweight TTS model&lt;/td&gt; 
   &lt;td&gt;CUDA 12, ROCm, Intel, CPU&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;chatterbox&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Production-grade TTS&lt;/td&gt; 
   &lt;td&gt;CUDA 11/12, CPU&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;piper&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Fast neural TTS system&lt;/td&gt; 
   &lt;td&gt;CPU&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;kitten-tts&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Kitten TTS models&lt;/td&gt; 
   &lt;td&gt;CPU&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;silero-vad&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Voice Activity Detection&lt;/td&gt; 
   &lt;td&gt;CPU&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;neutts&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Text-to-speech with voice cloning&lt;/td&gt; 
   &lt;td&gt;CUDA 12, ROCm, CPU&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Image &amp;amp; Video Generation&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Backend&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Acceleration Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;stablediffusion.cpp&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Stable Diffusion in C/C++&lt;/td&gt; 
   &lt;td&gt;CUDA 12, Intel SYCL, Vulkan, CPU&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;diffusers&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;HuggingFace diffusion models&lt;/td&gt; 
   &lt;td&gt;CUDA 11/12, ROCm, Intel, Metal, CPU&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Specialized AI Tasks&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Backend&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Acceleration Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;rfdetr&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Real-time object detection&lt;/td&gt; 
   &lt;td&gt;CUDA 12, Intel, CPU&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;rerankers&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Document reranking API&lt;/td&gt; 
   &lt;td&gt;CUDA 11/12, ROCm, Intel, CPU&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;local-store&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Vector database&lt;/td&gt; 
   &lt;td&gt;CPU&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;huggingface&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;HuggingFace API integration&lt;/td&gt; 
   &lt;td&gt;API-based&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Hardware Acceleration Matrix&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Acceleration Type&lt;/th&gt; 
   &lt;th&gt;Supported Backends&lt;/th&gt; 
   &lt;th&gt;Hardware Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;NVIDIA CUDA 11&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;llama.cpp, whisper, stablediffusion, diffusers, rerankers, bark, chatterbox&lt;/td&gt; 
   &lt;td&gt;Nvidia hardware&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;NVIDIA CUDA 12&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;All CUDA-compatible backends&lt;/td&gt; 
   &lt;td&gt;Nvidia hardware&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AMD ROCm&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;llama.cpp, whisper, vllm, transformers, diffusers, rerankers, coqui, kokoro, bark, neutts&lt;/td&gt; 
   &lt;td&gt;AMD Graphics&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Intel oneAPI&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;llama.cpp, whisper, stablediffusion, vllm, transformers, diffusers, rfdetr, rerankers, exllama2, coqui, kokoro, bark&lt;/td&gt; 
   &lt;td&gt;Intel Arc, Intel iGPUs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Apple Metal&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;llama.cpp, whisper, diffusers, MLX, MLX-VLM, bark-cpp&lt;/td&gt; 
   &lt;td&gt;Apple M1/M2/M3+&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Vulkan&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;llama.cpp, whisper, stablediffusion&lt;/td&gt; 
   &lt;td&gt;Cross-platform GPUs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;NVIDIA Jetson&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;llama.cpp, whisper, stablediffusion, diffusers, rfdetr&lt;/td&gt; 
   &lt;td&gt;ARM64 embedded AI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CPU Optimized&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;All backends&lt;/td&gt; 
   &lt;td&gt;AVX/AVX2/AVX512, quantization support&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;🔗 Community and integrations&lt;/h3&gt; 
&lt;p&gt;Build and deploy custom containers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sozercan/aikit"&gt;https://github.com/sozercan/aikit&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;WebUIs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jirubizu/localai-admin"&gt;https://github.com/Jirubizu/localai-admin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-skynet/LocalAI-frontend"&gt;https://github.com/go-skynet/LocalAI-frontend&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;QA-Pilot(An interactive chat project that leverages LocalAI LLMs for rapid understanding and navigation of GitHub code repository) &lt;a href="https://github.com/reid41/QA-Pilot"&gt;https://github.com/reid41/QA-Pilot&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Agentic Libraries:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mudler/cogito"&gt;https://github.com/mudler/cogito&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;MCPs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mudler/MCPs"&gt;https://github.com/mudler/MCPs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Model galleries&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-skynet/model-gallery"&gt;https://github.com/go-skynet/model-gallery&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Voice:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/richiejp/VoxInput"&gt;https://github.com/richiejp/VoxInput&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Other:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Helm chart &lt;a href="https://github.com/go-skynet/helm-charts"&gt;https://github.com/go-skynet/helm-charts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;VSCode extension &lt;a href="https://github.com/badgooooor/localai-vscode-plugin"&gt;https://github.com/badgooooor/localai-vscode-plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Langchain: &lt;a href="https://python.langchain.com/docs/integrations/providers/localai/"&gt;https://python.langchain.com/docs/integrations/providers/localai/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Terminal utility &lt;a href="https://github.com/djcopley/ShellOracle"&gt;https://github.com/djcopley/ShellOracle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Local Smart assistant &lt;a href="https://github.com/mudler/LocalAGI"&gt;https://github.com/mudler/LocalAGI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Home Assistant &lt;a href="https://github.com/sammcj/homeassistant-localai"&gt;https://github.com/sammcj/homeassistant-localai&lt;/a&gt; / &lt;a href="https://github.com/drndos/hass-openai-custom-conversation"&gt;https://github.com/drndos/hass-openai-custom-conversation&lt;/a&gt; / &lt;a href="https://github.com/valentinfrlch/ha-gpt4vision"&gt;https://github.com/valentinfrlch/ha-gpt4vision&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Discord bot &lt;a href="https://github.com/mudler/LocalAGI/tree/main/examples/discord"&gt;https://github.com/mudler/LocalAGI/tree/main/examples/discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Slack bot &lt;a href="https://github.com/mudler/LocalAGI/tree/main/examples/slack"&gt;https://github.com/mudler/LocalAGI/tree/main/examples/slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Shell-Pilot(Interact with LLM using LocalAI models via pure shell scripts on your Linux or MacOS system) &lt;a href="https://github.com/reid41/shell-pilot"&gt;https://github.com/reid41/shell-pilot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Telegram bot &lt;a href="https://github.com/mudler/LocalAI/tree/master/examples/telegram-bot"&gt;https://github.com/mudler/LocalAI/tree/master/examples/telegram-bot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Another Telegram Bot &lt;a href="https://github.com/JackBekket/Hellper"&gt;https://github.com/JackBekket/Hellper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Auto-documentation &lt;a href="https://github.com/JackBekket/Reflexia"&gt;https://github.com/JackBekket/Reflexia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Github bot which answer on issues, with code and documentation as context &lt;a href="https://github.com/JackBekket/GitHelper"&gt;https://github.com/JackBekket/GitHelper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Github Actions: &lt;a href="https://github.com/marketplace/actions/start-localai"&gt;https://github.com/marketplace/actions/start-localai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Examples: &lt;a href="https://github.com/mudler/LocalAI/tree/master/examples/"&gt;https://github.com/mudler/LocalAI/tree/master/examples/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔗 Resources&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://localai.io/docs/advanced/fine-tuning/"&gt;LLM finetuning guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://localai.io/basics/build/index.html"&gt;How to build locally&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://localai.io/basics/getting_started/index.html#run-localai-in-kubernetes"&gt;How to install in Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://localai.io/docs/integrations/"&gt;Projects integrating LocalAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://io.midori-ai.xyz/howtos/"&gt;How tos section&lt;/a&gt; (curated by our community)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;📖&lt;/span&gt; 🎥 &lt;a href="https://localai.io/basics/news/#media-blogs-social"&gt;Media, Blogs, Social&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.suse.com/c/running-ai-locally/"&gt;Run Visual studio code with LocalAI (SUSE)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🆕 &lt;a href="https://mudler.pm/posts/local-ai-jetson-nano-devkit/"&gt;Run LocalAI on Jetson Nano Devkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.pulumi.com/blog/low-code-llm-apps-with-local-ai-flowise-and-pulumi/"&gt;Run LocalAI on AWS EKS with Pulumi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://staleks.hashnode.dev/installing-localai-on-aws-ec2-instance"&gt;Run LocalAI on AWS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mudler.pm/posts/smart-slackbot-for-teams/"&gt;Create a slackbot for teams and OSS projects that answer to documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=PKrDNuJ_dfE"&gt;LocalAI meets k8sgpt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mudler.pm/posts/localai-question-answering/"&gt;Question Answering on Documents locally with LangChain, LocalAI, Chroma, and GPT4All&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@tyler_97636/k8sgpt-localai-unlock-kubernetes-superpowers-for-free-584790de9b65"&gt;Tutorial to use k8sgpt with LocalAI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;If you utilize this repository, data in a downstream project, please consider citing it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@misc{localai,
  author = {Ettore Di Giacinto},
  title = {LocalAI: The free, Open source OpenAI alternative},
  year = {2023},
  publisher = {GitHub},
  journal = {GitHub repository},
  howpublished = {\url{https://github.com/go-skynet/LocalAI}},
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;❤️ Sponsors&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Do you find LocalAI useful?&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Support the project by becoming &lt;a href="https://github.com/sponsors/mudler"&gt;a backer or sponsor&lt;/a&gt;. Your logo will show up here with a link to your website.&lt;/p&gt; 
&lt;p&gt;A huge thank you to our generous sponsors who support this project covering CI expenses, and our &lt;a href="https://github.com/sponsors/mudler"&gt;Sponsor list&lt;/a&gt;:&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.spectrocloud.com/" target="blank"&gt; &lt;img height="200" src="https://github.com/user-attachments/assets/72eab1dd-8b93-4fc0-9ade-84db49f24962" /&gt; &lt;/a&gt; &lt;a href="https://www.premai.io/" target="blank"&gt; &lt;img height="200" src="https://github.com/mudler/LocalAI/assets/2420543/42e4ca83-661e-4f79-8e46-ae43689683d6" /&gt; &lt;br /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;🌟 Star history&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#go-skynet/LocalAI&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=go-skynet/LocalAI&amp;amp;type=Date" alt="LocalAI Star history Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📖 License&lt;/h2&gt; 
&lt;p&gt;LocalAI is a community-driven project created by &lt;a href="https://github.com/mudler/"&gt;Ettore Di Giacinto&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;MIT - Author Ettore Di Giacinto &lt;a href="mailto:mudler@localai.io"&gt;mudler@localai.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🙇 Acknowledgements&lt;/h2&gt; 
&lt;p&gt;LocalAI couldn't have been built without the help of great software already available from the community. Thank you!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggerganov/llama.cpp"&gt;llama.cpp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tatsu-lab/stanford_alpaca"&gt;https://github.com/tatsu-lab/stanford_alpaca&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cornelk/llama-go"&gt;https://github.com/cornelk/llama-go&lt;/a&gt; for the initial ideas&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antimatter15/alpaca.cpp"&gt;https://github.com/antimatter15/alpaca.cpp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/EdVince/Stable-Diffusion-NCNN"&gt;https://github.com/EdVince/Stable-Diffusion-NCNN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggerganov/whisper.cpp"&gt;https://github.com/ggerganov/whisper.cpp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rhasspy/piper"&gt;https://github.com/rhasspy/piper&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🤗 Contributors&lt;/h2&gt; 
&lt;p&gt;This is a community project, a special thanks to our contributors! 🤗 &lt;a href="https://github.com/go-skynet/LocalAI/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=go-skynet/LocalAI" /&gt; &lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chaitin/SafeLine</title>
      <link>https://github.com/chaitin/SafeLine</link>
      <description>&lt;p&gt;SafeLine is a self-hosted WAF(Web Application Firewall) / reverse proxy to protect your web apps from attacks and exploits.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/banner.png" width="400" /&gt; &lt;/p&gt; 
&lt;h4 align="center"&gt; SafeLine - Make your web apps secure &lt;/h4&gt; 
&lt;p align="center"&gt; &lt;a target="_blank" href="https://ly.safepoint.cloud/laA8asp"&gt;🏠 Website&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target="_blank" href="https://ly.safepoint.cloud/w2AeHhb"&gt;📖 Docs&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target="_blank" href="https://ly.safepoint.cloud/hSMd4SH"&gt;🔍 Live Demo&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target="_blank" href="https://discord.gg/SVnZGzHFvn"&gt;🙋‍♂️ Discord&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target="_blank" href="https://raw.githubusercontent.com/chaitin/SafeLine/main/README_CN.md"&gt;中文版&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;👋 INTRODUCTION&lt;/h2&gt; 
&lt;p&gt;SafeLine is a self-hosted &lt;strong&gt;&lt;code&gt;WAF(Web Application Firewall)&lt;/code&gt;&lt;/strong&gt; to protect your web apps from attacks and exploits.&lt;/p&gt; 
&lt;p&gt;A web application firewall helps protect web apps by filtering and monitoring HTTP traffic between a web application and the Internet. It typically protects web apps from attacks such as &lt;code&gt;SQL injection&lt;/code&gt;, &lt;code&gt;XSS&lt;/code&gt;, &lt;code&gt;code injection&lt;/code&gt;, &lt;code&gt;os command injection&lt;/code&gt;, &lt;code&gt;CRLF injection&lt;/code&gt;, &lt;code&gt;ldap injection&lt;/code&gt;, &lt;code&gt;xpath injection&lt;/code&gt;, &lt;code&gt;RCE&lt;/code&gt;, &lt;code&gt;XXE&lt;/code&gt;, &lt;code&gt;SSRF&lt;/code&gt;, &lt;code&gt;path traversal&lt;/code&gt;, &lt;code&gt;backdoor&lt;/code&gt;, &lt;code&gt;bruteforce&lt;/code&gt;, &lt;code&gt;http-flood&lt;/code&gt;, &lt;code&gt;bot abused&lt;/code&gt;, among others.&lt;/p&gt; 
&lt;h4&gt;💡 How It Works&lt;/h4&gt; 
&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/how-it-works.png" width="800" /&gt; 
&lt;p&gt;By deploying a WAF in front of a web application, a shield is placed between the web application and the Internet. While a proxy server protects a client machine’s identity by using an intermediary, a WAF is a type of reverse-proxy, protecting the server from exposure by having clients pass through the WAF before reaching the server.&lt;/p&gt; 
&lt;p&gt;A WAF protects your web apps by filtering, monitoring, and blocking any malicious HTTP/S traffic traveling to the web application, and prevents any unauthorized data from leaving the app. It does this by adhering to a set of policies that help determine what traffic is malicious and what traffic is safe. Just as a proxy server acts as an intermediary to protect the identity of a client, a WAF operates in similar fashion but acting as a reverse proxy intermediary that protects the web app server from a potentially malicious client.&lt;/p&gt; 
&lt;p&gt;its core capabilities include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Defenses for web attacks&lt;/li&gt; 
 &lt;li&gt;Proactive bot abused defense&lt;/li&gt; 
 &lt;li&gt;HTML &amp;amp; JS code encryption&lt;/li&gt; 
 &lt;li&gt;IP-based rate limiting&lt;/li&gt; 
 &lt;li&gt;Web Access Control List&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;⚡️ Screenshots&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/screenshot-1.png" width="370" /&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/screenshot-2.png" width="370" /&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/screenshot-3.png" width="370" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/screenshot-4.png" width="370" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Get &lt;a href="https://demo.waf.chaitin.com:9443/"&gt;Live Demo&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🔥 FEATURES&lt;/h2&gt; 
&lt;p&gt;List of the main features as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;Block Web Attacks&lt;/code&gt;&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;It defenses for all of web attacks, such as &lt;code&gt;SQL injection&lt;/code&gt;, &lt;code&gt;XSS&lt;/code&gt;, &lt;code&gt;code injection&lt;/code&gt;, &lt;code&gt;os command injection&lt;/code&gt;, &lt;code&gt;CRLF injection&lt;/code&gt;, &lt;code&gt;XXE&lt;/code&gt;, &lt;code&gt;SSRF&lt;/code&gt;, &lt;code&gt;path traversal&lt;/code&gt; and so on.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;Rate Limiting&lt;/code&gt;&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Defend your web apps against &lt;code&gt;DoS attacks&lt;/code&gt;, &lt;code&gt;bruteforce attempts&lt;/code&gt;, &lt;code&gt;traffic surges&lt;/code&gt;, and other types of abuse by throttling traffic that exceeds defined limits.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;Anti-Bot Challenge&lt;/code&gt;&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Anti-Bot challenges to protect your website from &lt;code&gt;bot attacks&lt;/code&gt;, humen users will be allowed, crawlers and bots will be blocked.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;Authentication Challenge&lt;/code&gt;&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When authentication challenge turned on, visitors need to enter the password, otherwise they will be blocked.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;Dynamic Protection&lt;/code&gt;&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When dynamic protection turned on, html and js codes in your web server will be dynamically encrypted by each time you visit.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🧩 Showcases&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Legitimate User&lt;/th&gt; 
   &lt;th&gt;Malicious User&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;Block Web Attacks&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/skeleton.png" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/blocked-for-attack-detected.png" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;Rate Limiting&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/skeleton.png" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/blocked-for-access-too-fast.png" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;Anti-Bot Challenge&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/captcha-1.gif" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/captcha-2.gif" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;Auth Challenge&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/auth-1.gif" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/auth-2.gif" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;HTML Dynamic Protection&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/dynamic-html-1.png" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/dynamic-html-2.png" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;JS Dynamic Protection&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/dynamic-js-1.png" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/dynamic-js-2.png" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🚀 Quickstart&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] 中国大陆用户安装国际版可能会导致无法连接云服务，请查看 &lt;a href="https://docs.waf-ce.chaitin.cn/zh/%E4%B8%8A%E6%89%8B%E6%8C%87%E5%8D%97/%E5%AE%89%E8%A3%85%E9%9B%B7%E6%B1%A0"&gt;中文版安装文档&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;📦 Installing&lt;/h4&gt; 
&lt;p&gt;Information on how to install SafeLine can be found in the &lt;a href="https://docs.waf.chaitin.com/en/GetStarted/Deploy"&gt;Install Guide&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;⚙️ Protecting Web Apps&lt;/h4&gt; 
&lt;p&gt;to see &lt;a href="https://docs.waf.chaitin.com/en/GetStarted/AddApplication"&gt;Configuration&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📋 More Informations&lt;/h2&gt; 
&lt;h4&gt;Effect Evaluation&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Metric&lt;/th&gt; 
   &lt;th&gt;ModSecurity, Level 1&lt;/th&gt; 
   &lt;th&gt;CloudFlare, Free&lt;/th&gt; 
   &lt;th&gt;SafeLine, Balance&lt;/th&gt; 
   &lt;th&gt;SafeLine, Strict&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Total Samples&lt;/td&gt; 
   &lt;td&gt;33669&lt;/td&gt; 
   &lt;td&gt;33669&lt;/td&gt; 
   &lt;td&gt;33669&lt;/td&gt; 
   &lt;td&gt;33669&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Detection&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;69.74%&lt;/td&gt; 
   &lt;td&gt;10.70%&lt;/td&gt; 
   &lt;td&gt;71.65%&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;76.17%&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;False Positive&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;17.58%&lt;/td&gt; 
   &lt;td&gt;0.07%&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;0.07%&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.22%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Accuracy&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;82.20%&lt;/td&gt; 
   &lt;td&gt;98.40%&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;99.45%&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;99.38%&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Is SafeLine Production-Ready?&lt;/h4&gt; 
&lt;p&gt;Yes, SafeLine is production-ready.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Over 180,000 installations worldwide&lt;/li&gt; 
 &lt;li&gt;Protecting over 1,000,000 Websites&lt;/li&gt; 
 &lt;li&gt;Handling over 30,000,000,000 HTTP Requests Daily&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🙋‍♂️ Community&lt;/h4&gt; 
&lt;p&gt;Join our &lt;a href="https://discord.gg/SVnZGzHFvn"&gt;Discord&lt;/a&gt; to get community support, the core team members are identified by the STAFF role in Discord.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;channel &lt;a href="https://discord.com/channels/1243085666485534830/1243120292822253598"&gt;#feedback&lt;/a&gt;: for new features discussion.&lt;/li&gt; 
 &lt;li&gt;channel &lt;a href="https://discord.com/channels/1243085666485534830/1263761679619981413"&gt;#FAQ&lt;/a&gt;: for FAQ.&lt;/li&gt; 
 &lt;li&gt;channel &lt;a href="https://discord.com/channels/1243085666485534830/1243115843919806486"&gt;#general&lt;/a&gt;: for any other questions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Several contact options exist for our community, the primary one being Discord. These are in addition to GitHub issues for creating a new issue.&lt;/p&gt; 
&lt;p align="left"&gt; &lt;a target="_blank" href="https://discord.gg/SVnZGzHFvn"&gt;&lt;img src="https://img.shields.io/badge/Discord-5865F2?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a target="_blank" href="https://x.com/safeline_waf"&gt;&lt;img src="https://img.shields.io/badge/X.com-000000?style=flat&amp;amp;logo=x&amp;amp;logoColor=white" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a target="_blank" href="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/wechat.png"&gt;&lt;img src="https://img.shields.io/badge/WeChat-07C160?style=flat&amp;amp;logo=wechat&amp;amp;logoColor=white" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h4&gt;💪 PRO Edition&lt;/h4&gt; 
&lt;p&gt;Coming soon!&lt;/p&gt; 
&lt;h4&gt;📝 License&lt;/h4&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/chaitin/SafeLine/main/LICENSE.md"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>shadow1ng/fscan</title>
      <link>https://github.com/shadow1ng/fscan</link>
      <description>&lt;p&gt;一款内网综合扫描工具，方便一键自动化、全方位漏扫扫描。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fscan&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/shadow1ng/fscan/main/README_EN.md"&gt;English&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;0x01 简介&lt;/h1&gt; 
&lt;p&gt;一款内网综合扫描工具，方便一键自动化、全方位漏扫扫描。&lt;/p&gt; 
&lt;h1&gt;0x02 主要功能&lt;/h1&gt; 
&lt;h2&gt;1. 信息搜集&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;基于ICMP的主机存活探测：快速识别网络中的活跃主机设备&lt;/li&gt; 
 &lt;li&gt;全面的端口扫描：系统地检测目标主机的开放端口情况&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;2. 爆破功能&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;常用服务密码爆破：支持SSH、SMB、RDP等多种协议的身份认证测试&lt;/li&gt; 
 &lt;li&gt;数据库密码爆破：覆盖MySQL、MSSQL、Redis、PostgreSQL、Oracle等主流数据库系统&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;3. 系统信息与漏洞扫描&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;网络信息收集：包括NetBIOS探测和域控制器识别&lt;/li&gt; 
 &lt;li&gt;系统信息获取：能够读取目标系统网卡配置信息&lt;/li&gt; 
 &lt;li&gt;安全漏洞检测：支持MS17-010等高危漏洞的识别与检测&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;4. Web应用探测&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;网站信息收集：自动获取网站标题信息&lt;/li&gt; 
 &lt;li&gt;Web指纹识别：可识别常见CMS系统与OA框架&lt;/li&gt; 
 &lt;li&gt;漏洞扫描能力：集成WebLogic、Struts2等漏洞检测，兼容XRay POC&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;5. 漏洞利用模块&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Redis利用：支持写入公钥或植入计划任务&lt;/li&gt; 
 &lt;li&gt;SSH远程执行：提供SSH命令执行功能&lt;/li&gt; 
 &lt;li&gt;MS17-010利用：支持ShellCode注入，可实现添加用户等操作&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;6. 辅助功能&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;扫描结果存储：将所有检测结果保存至文件，便于后续分析&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;0x03 使用说明&lt;/h1&gt; 
&lt;p&gt;完整功能介绍、使用说明及最新更新请访问我们的官方网站。&lt;/p&gt; 
&lt;h2&gt;官方网站&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://fscan.club/"&gt;https://fscan.club/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;访问官网获取:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;详细功能文档&lt;/li&gt; 
 &lt;li&gt;使用教程&lt;/li&gt; 
 &lt;li&gt;最新版本下载&lt;/li&gt; 
 &lt;li&gt;常见问题解答&lt;/li&gt; 
 &lt;li&gt;技术支持&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;编译说明&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 基础编译
go build -ldflags="-s -w" -trimpath main.go

# UPX压缩（可选）
upx -9 fscan
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;系统安装&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Arch Linux
yay -S fscan-git
# 或
paru -S fscan-git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;0x04 运行截图&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;fscan.exe -h 192.168.x.x (全功能、ms17010、读取网卡信息)&lt;/code&gt; &lt;img src="https://raw.githubusercontent.com/shadow1ng/fscan/main/image/1.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/shadow1ng/fscan/main/image/4.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;fscan.exe -h 192.168.x.x -rf id_rsa.pub (redis 写公钥)&lt;/code&gt; &lt;img src="https://raw.githubusercontent.com/shadow1ng/fscan/main/image/2.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;fscan.exe -h 192.168.x.x -c "whoami;id" (ssh 命令)&lt;/code&gt; &lt;img src="https://raw.githubusercontent.com/shadow1ng/fscan/main/image/3.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;fscan.exe -h 192.168.x.x -p80 -proxy http://127.0.0.1:8080 一键支持xray的poc&lt;/code&gt; &lt;img src="https://raw.githubusercontent.com/shadow1ng/fscan/main/image/2020-12-12-13-34-44.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;fscan.exe -h 192.168.x.x -p 139 (netbios探测、域控识别,下图的[+]DC代表域控)&lt;/code&gt; &lt;img src="https://raw.githubusercontent.com/shadow1ng/fscan/main/image/netbios.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;go run .\main.go -h 192.168.x.x/24 -m netbios(-m netbios时,才会显示完整的netbios信息)&lt;/code&gt; &lt;img src="https://raw.githubusercontent.com/shadow1ng/fscan/main/image/netbios1.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;go run .\main.go -h 192.0.0.0/8 -m icmp(探测每个C段的网关和数个随机IP,并统计top 10 B、C段存活数量)&lt;/code&gt; &lt;img src="https://raw.githubusercontent.com/shadow1ng/fscan/main/image/live.png" alt="img.png" /&gt;&lt;/p&gt; 
&lt;p&gt;新的展示&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/shadow1ng/fscan/main/image/2.0-1.png" alt="2.0-1" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/shadow1ng/fscan/main/image/2.0-2.png" alt="2.0-2" /&gt;&lt;/p&gt; 
&lt;h1&gt;0x05 免责声明&lt;/h1&gt; 
&lt;p&gt;本工具仅面向&lt;strong&gt;合法授权&lt;/strong&gt;的企业安全建设行为，如您需要测试本工具的可用性，请自行搭建靶机环境。&lt;/p&gt; 
&lt;p&gt;为避免被恶意使用，本项目所有收录的poc均为漏洞的理论判断，不存在漏洞利用过程，不会对目标发起真实攻击和漏洞利用。&lt;/p&gt; 
&lt;p&gt;在使用本工具进行检测时，您应确保该行为符合当地的法律法规，并且已经取得了足够的授权。&lt;strong&gt;请勿对非授权目标进行扫描。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;如您在使用本工具的过程中存在任何非法行为，您需自行承担相应后果，我们将不承担任何法律及连带责任。&lt;/p&gt; 
&lt;p&gt;在安装并使用本工具前，请您&lt;strong&gt;务必审慎阅读、充分理解各条款内容&lt;/strong&gt;，限制、免责条款或者其他涉及您重大权益的条款可能会以加粗、加下划线等形式提示您重点注意。&lt;/p&gt; 
&lt;p&gt;除非您已充分阅读、完全理解并接受本协议所有条款，否则，请您不要安装并使用本工具。您的使用行为或者您以其他任何明示或者默示方式表示接受本协议的，即视为您已阅读并同意本协议的约束。&lt;/p&gt; 
&lt;h1&gt;0x06 404StarLink 2.0 - Galaxy&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://github.com/knownsec/404StarLink-Project/raw/master/logo.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;fscan 是 404Team &lt;a href="https://github.com/knownsec/404StarLink2.0-Galaxy"&gt;星链计划2.0&lt;/a&gt; 中的一环，如果对fscan 有任何疑问又或是想要找小伙伴交流，可以参考星链计划的加群方式。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/knownsec/404StarLink2.0-Galaxy#community"&gt;https://github.com/knownsec/404StarLink2.0-Galaxy#community&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;演示视频&lt;a href="https://www.bilibili.com/video/BV1Cv4y1R72M"&gt;【安全工具】5大功能，一键化内网扫描神器——404星链计划fscan&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;0x07 Star Chart&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/shadow1ng/fscan"&gt;&lt;img src="https://starchart.cc/shadow1ng/fscan.svg?sanitize=true" alt="Stargazers over time" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;0x08 捐赠&lt;/h1&gt; 
&lt;p&gt;如果你觉得这个项目对你有帮助，你可以请作者喝饮料🍹 &lt;a href="https://raw.githubusercontent.com/shadow1ng/fscan/main/image/sponsor.png"&gt;点我&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;0x09 安全培训&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/shadow1ng/fscan/main/image/5.png" alt="img.png" /&gt; 学网络安全，就选玲珑安全！专业漏洞挖掘，精准定位风险；助力技能提升，塑造安全精英;玲珑安全，为您的数字世界保驾护航！&lt;br /&gt; 在线免费学习网络安全，涵盖src漏洞挖掘，0基础安全入门。适用于小白，进阶，高手: &lt;a href="https://space.bilibili.com/602205041"&gt;https://space.bilibili.com/602205041&lt;/a&gt;&lt;br /&gt; 玲珑安全往期学员报喜🎉: &lt;a href="https://www.ifhsec.com/list.html"&gt;https://www.ifhsec.com/list.html&lt;/a&gt;&lt;br /&gt; 玲珑安全漏洞挖掘培训学习联系微信: linglongsec&lt;/p&gt; 
&lt;h1&gt;0x10 参考链接&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/Adminisme/ServerScan"&gt;https://github.com/Adminisme/ServerScan&lt;/a&gt;&lt;br /&gt; &lt;a href="https://github.com/netxfly/x-crack"&gt;https://github.com/netxfly/x-crack&lt;/a&gt;&lt;br /&gt; &lt;a href="https://github.com/hack2fun/Gscan"&gt;https://github.com/hack2fun/Gscan&lt;/a&gt;&lt;br /&gt; &lt;a href="https://github.com/k8gege/LadonGo"&gt;https://github.com/k8gege/LadonGo&lt;/a&gt;&lt;br /&gt; &lt;a href="https://github.com/jjf012/gopoc"&gt;https://github.com/jjf012/gopoc&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>milvus-io/milvus</title>
      <link>https://github.com/milvus-io/milvus</link>
      <description>&lt;p&gt;Milvus is a high-performance, cloud-native vector database built for scalable vector ANN search&lt;/p&gt;&lt;hr&gt;&lt;img src="https://github.com/user-attachments/assets/51e33300-7f85-43ff-a05a-3a0317a961f3" alt="milvus banner" /&gt; 
&lt;div class="column" align="middle"&gt; 
 &lt;a href="https://github.com/milvus-io/milvus/raw/master/LICENSE"&gt;&lt;img height="20" src="https://img.shields.io/github/license/milvus-io/milvus" alt="license" /&gt;&lt;/a&gt; 
 &lt;a href="https://milvus.io/docs/install_standalone-docker.md"&gt;&lt;img src="https://img.shields.io/docker/pulls/milvusdb/milvus" alt="docker-pull-count" /&gt;&lt;/a&gt; 
 &lt;a href="https://milvus.io/docs/roadmap.md"&gt;&lt;img src="https://img.shields.io/badge/2025-roadmap-orange" alt="fully-managed-milvus" /&gt;&lt;/a&gt; 
 &lt;a href="https://cloud.zilliz.com/signup?utm_source=partner&amp;amp;utm_medium=referral&amp;amp;utm_campaign=2024-11-04_web_github-readme_global"&gt;&lt;img src="https://img.shields.io/badge/fully_managed-milvus-blue" alt="fully-managed-milvus" /&gt;&lt;/a&gt; 
 &lt;a href="https://milvus.io/docs/tutorials-overview.md"&gt;&lt;img src="https://img.shields.io/badge/tutorials-green" alt="tutorials" /&gt;&lt;/a&gt; 
 &lt;a href="https://discord.gg/mKc3R95yE5"&gt;&lt;img height="20" src="https://img.shields.io/badge/Discord-%235865F2.svg?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white" alt="discord" /&gt;&lt;/a&gt; 
 &lt;a href="https://x.com/milvusio"&gt;&lt;img src="https://img.shields.io/twitter/follow/milvusio" alt="twitter" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;What is Milvus?&lt;/h2&gt; 
&lt;p&gt;🐦 &lt;a href="https://milvus.io/"&gt;Milvus&lt;/a&gt; is a high-performance vector database built for scale. It powers AI applications by efficiently organizing and searching vast amounts of unstructured data, such as text, images, and multi-modal information.&lt;/p&gt; 
&lt;p&gt;🧑‍💻 Written in Go and C++, Milvus implements hardware acceleration for CPU/GPU to achieve best-in-class vector search performance. Thanks to its &lt;a href="https://milvus.io/docs/overview.md#What-Makes-Milvus-so-Scalable"&gt;fully-distributed and K8s-native architecture&lt;/a&gt;, Milvus can scale horizontally, handle tens of thousands of search queries on billions of vectors, and keep data fresh with real-time streaming updates. Milvus also supports &lt;a href="https://milvus.io/docs/install_standalone-docker.md"&gt;Standalone mode&lt;/a&gt; for single machine deployment. &lt;a href="https://milvus.io/docs/milvus_lite.md"&gt;Milvus Lite&lt;/a&gt; is a lightweight version good for quickstart in python with &lt;code&gt;pip install&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Want to use Milvus with zero setup? Try out &lt;a href="https://cloud.zilliz.com/signup?utm_source=partner&amp;amp;utm_medium=referral&amp;amp;utm_campaign=2024-11-04_web_github-readme_global"&gt;Zilliz Cloud ☁️&lt;/a&gt; for free. Milvus is available as a fully managed service on Zilliz Cloud, with &lt;a href="https://zilliz.com/serverless?utm_source=partner&amp;amp;utm_medium=referral&amp;amp;utm_campaign=2024-11-04_web_github-readme_global"&gt;Serverless&lt;/a&gt;, &lt;a href="https://zilliz.com/cloud?utm_source=partner&amp;amp;utm_medium=referral&amp;amp;utm_campaign=2024-11-04_web_github-readme_global"&gt;Dedicated&lt;/a&gt; and &lt;a href="https://zilliz.com/bring-your-own-cloud?utm_source=partner&amp;amp;utm_medium=referral&amp;amp;utm_campaign=2024-11-04_web_github-readme_global"&gt;BYOC&lt;/a&gt; options available.&lt;/p&gt; 
&lt;p&gt;For questions about how to use Milvus, join the community on &lt;a href="https://discord.gg/33mfvwep3J"&gt;Discord&lt;/a&gt; to get help. For reporting problems, file bugs and feature requests in GitHub &lt;a href="https://github.com/milvus-io/milvus/issues"&gt;Issues&lt;/a&gt; or ask in &lt;a href="https://github.com/milvus-io/milvus/discussions"&gt;Discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Milvus open-source project is under &lt;a href="https://lfaidata.foundation/projects/milvus/"&gt;LF AI &amp;amp; Data Foundation&lt;/a&gt;, distributed with &lt;a href="https://github.com/milvus-io/milvus/raw/master/LICENSE"&gt;Apache 2.0&lt;/a&gt; License, with Zilliz as its major contributor.&lt;/p&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;$ pip install -U pymilvus
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This installs &lt;code&gt;pymilvus&lt;/code&gt;, the Python SDK for Milvus. Use &lt;code&gt;MilvusClient&lt;/code&gt; to create a client:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from pymilvus import MilvusClient
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;pymilvus&lt;/code&gt; also includes Milvus Lite for quickstart. To create a local vector database, simply instantiate a client with a local file name for persisting data:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;client = MilvusClient("milvus_demo.db")
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can also specify the credentials to connect to your deployed &lt;a href="https://milvus.io/docs/authenticate.md?tab=docker"&gt;Milvus server&lt;/a&gt; or &lt;a href="https://docs.zilliz.com/docs/quick-start"&gt;Zilliz Cloud&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;client = MilvusClient(
  uri="&amp;lt;endpoint_of_self_hosted_milvus_or_zilliz_cloud&amp;gt;",
  token="&amp;lt;username_and_password_or_zilliz_cloud_api_key&amp;gt;")
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;With the client, you can create collection:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;client.create_collection(
    collection_name="demo_collection",
    dimension=768,  # The vectors we will use in this demo have 768 dimensions
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ingest data:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;res = client.insert(collection_name="demo_collection", data=data)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Perform vector search:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;query_vectors = embedding_fn.encode_queries(["Who is Alan Turing?", "What is AI?"])
res = client.search(
    collection_name="demo_collection",  # target collection
    data=query_vectors,  # a list of one or more query vectors, supports batch
    limit=2,  # how many results to return (topK)
    output_fields=["vector", "text", "subject"],  # what fields to return
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Why Milvus&lt;/h2&gt; 
&lt;p&gt;Milvus is designed to handle vector search at scale. It stores vectors, which are learned representations of unstructured data, together with other scalar data types such as integers, strings, and JSON objects. Users can conduct efficient vector search with metadata filtering or hybrid search. Here are why developers choose Milvus as the vector database for AI applications:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;High Performance at Scale and High Availability&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Milvus features a &lt;a href="https://milvus.io/docs/architecture_overview.md"&gt;distributed architecture&lt;/a&gt; that separates &lt;a href="https://milvus.io/docs/data_processing.md#Data-query"&gt;compute&lt;/a&gt; and &lt;a href="https://milvus.io/docs/data_processing.md#Data-insertion"&gt;storage&lt;/a&gt;. Milvus can horizontally scale and adapt to diverse traffic patterns, achieving optimal performance by independently increasing query nodes for read-heavy workload and data node for write-heavy workload. The stateless microservices on K8s allow &lt;a href="https://milvus.io/docs/coordinator_ha.md#Coordinator-HA"&gt;quick recovery&lt;/a&gt; from failure, ensuring high availability. The support for &lt;a href="https://milvus.io/docs/replica.md"&gt;replicas&lt;/a&gt; further enhances fault tolerance and throughput by loading data segments on multiple query nodes. See &lt;a href="https://zilliz.com/vector-database-benchmark-tool"&gt;benchmark&lt;/a&gt; for performance comparison.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Support for Various Vector Index Types and Hardware Acceleration&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Milvus separates the system and core vector search engine, allowing it to support all major vector index types that are optimized for different scenarios, including HNSW, IVF, FLAT (brute-force), SCANN, and DiskANN, with &lt;a href="https://milvus.io/docs/index.md?tab=floating#IVFPQ"&gt;quantization-based&lt;/a&gt; variations and &lt;a href="https://milvus.io/docs/mmap.md"&gt;mmap&lt;/a&gt;. Milvus optimizes vector search for advanced features such as &lt;a href="https://milvus.io/docs/scalar_index.md#Scalar-Index"&gt;metadata filtering&lt;/a&gt; and &lt;a href="https://milvus.io/docs/single-vector-search.md#Range-search"&gt;range search&lt;/a&gt;. Additionally, Milvus implements hardware acceleration to enhance vector search performance and supports GPU indexing, such as NVIDIA's &lt;a href="https://github.com/rapidsai/cuvs"&gt;CAGRA&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Flexible Multi-tenancy and Hot/Cold Storage&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Milvus supports &lt;a href="https://milvus.io/docs/multi_tenancy.md#Multi-tenancy-strategies"&gt;multi-tenancy&lt;/a&gt; through isolation at database, collection, partition, or partition key level. The flexible strategies allow a single cluster to handle hundreds to millions of tenants, also ensures optimized search performance and flexible access control. Milvus enhances cost-effectiveness with hot/cold storage. Frequently accessed hot data can be stored in memory or on SSDs for better performance, while less-accessed cold data is kept on slower, cost-effective storage. This mechanism can significantly reduce costs while maintaining high performance for critical tasks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Sparse Vector for Full Text Search and Hybrid Search&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In addition to semantic search through dense vector, Milvus also natively supports &lt;a href="https://milvus.io/docs/full-text-search.md"&gt;full text search&lt;/a&gt; with BM25 as well as learned sparse embeddings such as SPLADE and BGE-M3. Users can store sparse vectors and dense vectors in the same collection, and define functions to rerank results from multiple search requests. See examples of &lt;a href="https://milvus.io/docs/full_text_search_with_milvus.md"&gt;Hybrid Search with semantic search + full text search&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Data Security and Fine-grain Access Control&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Milvus ensures data security by implementing mandatory user authentication, TLS encryption, and Role-Based Access Control (RBAC). User authentication ensures that only authorized users with valid credentials can access the database, while TLS encryption secures all communications within the network. Additionally, RBAC allows for fine-grained access control by assigning specific permissions to users based on their roles. These features make Milvus a robust and secure choice for enterprise applications, protecting sensitive data from unauthorized access and potential breaches.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Milvus is trusted by AI developers to build applications such as text and image search, Retrieval-Augmented Generation (RAG), and recommendation systems. Milvus powers &lt;a href="https://milvus.io/use-cases"&gt;many mission-critical businesses&lt;/a&gt; for startups and enterprises.&lt;/p&gt; 
&lt;h2&gt;Demos and Tutorials&lt;/h2&gt; 
&lt;p&gt;Here is a selection of demos and tutorials to show how to build various types of AI applications made with Milvus:&lt;/p&gt; 
&lt;p&gt;You can explore a comprehensive &lt;a href="https://milvus.io/docs/tutorials-overview.md"&gt;Tutorials Overview&lt;/a&gt; covering topics such as Retrieval-Augmented Generation (RAG), Semantic Search, Hybrid Search, Question Answering, Recommendation Systems, and various quick-start guides. These resources are designed to help you get started quickly and efficiently.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tutorial&lt;/th&gt; 
   &lt;th&gt;Use Case&lt;/th&gt; 
   &lt;th&gt;Related Milvus Features&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/build-rag-with-milvus.md"&gt;Build RAG with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;RAG&lt;/td&gt; 
   &lt;td&gt;vector search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/how_to_enhance_your_rag.md"&gt;Advanced RAG Optimizations&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;RAG&lt;/td&gt; 
   &lt;td&gt;vector search, full text search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/full_text_search_with_milvus.md"&gt;Full Text Search with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Text Search&lt;/td&gt; 
   &lt;td&gt;full text search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/hybrid_search_with_milvus.md"&gt;Hybrid Search with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Hybrid Search&lt;/td&gt; 
   &lt;td&gt;hybrid search, multi vector, dense embedding, sparse embedding&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/image_similarity_search.md"&gt;Image Search with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Semantic Search&lt;/td&gt; 
   &lt;td&gt;vector search, dynamic field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/multimodal_rag_with_milvus.md"&gt;Multimodal Search using Multi Vectors&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Semantic Search&lt;/td&gt; 
   &lt;td&gt;multi vector, hybrid search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/movie_recommendation_with_milvus.md"&gt;Movie Recommendation with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Recommendation System&lt;/td&gt; 
   &lt;td&gt;vector search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/graph_rag_with_milvus.md"&gt;Graph RAG with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;RAG&lt;/td&gt; 
   &lt;td&gt;graph search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/contextual_retrieval_with_milvus.md"&gt;Contextual Retrieval with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Quickstart&lt;/td&gt; 
   &lt;td&gt;vector search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/vector_visualization.md"&gt;Vector Visualization&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Quickstart&lt;/td&gt; 
   &lt;td&gt;vector search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/hdbscan_clustering_with_milvus.md"&gt;HDBSCAN Clustering with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Quickstart&lt;/td&gt; 
   &lt;td&gt;vector search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/use_ColPali_with_milvus.md"&gt;Use ColPali for Multi-Modal Retrieval with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Quickstart&lt;/td&gt; 
   &lt;td&gt;vector search&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="30%"&gt; &lt;a href="https://milvus.io/milvus-demos"&gt; &lt;img src="https://assets.zilliz.com/image_search_59a64e4f22.gif" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width="30%"&gt; &lt;a href="https://milvus.io/milvus-demos"&gt; &lt;img src="https://assets.zilliz.com/qa_df5ee7bd83.gif" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width="30%"&gt; &lt;a href="https://milvus.io/milvus-demos"&gt; &lt;img src="https://assets.zilliz.com/mole_search_76f8340572.gif" /&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th&gt; &lt;a href="https://milvus.io/milvus-demos"&gt;Image Search&lt;/a&gt; &lt;/th&gt; 
   &lt;th&gt; &lt;a href="https://milvus.io/milvus-demos"&gt;RAG&lt;/a&gt; &lt;/th&gt; 
   &lt;th&gt; &lt;a href="https://milvus.io/milvus-demos"&gt;Drug Discovery&lt;/a&gt; &lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Ecosystem and Integration&lt;/h2&gt; 
&lt;p&gt;Milvus integrates with a comprehensive suite of &lt;a href="https://milvus.io/docs/integrations_overview.md"&gt;AI development tools&lt;/a&gt;, such as LangChain, LlamaIndex, OpenAI and HuggingFace, making it an ideal vector store for GenAI applications such as Retrieval-Augmented Generation (RAG). Milvus works with both open-source embedding models and embedding services, in text, image and video modalities. Milvus also provides a convenient utility &lt;a href="https://milvus.io/docs/embeddings.md"&gt;&lt;code&gt;pymilvus[model]&lt;/code&gt;&lt;/a&gt;, users can use the simple wrapper code to transform unstructured data into vector embeddings and leverage reranking models for optimized search results. The Milvus ecosystem also includes &lt;a href="https://github.com/zilliztech/attu?tab=readme-ov-file#attu"&gt;Attu&lt;/a&gt; for GUI-based administration, &lt;a href="https://milvus.io/docs/birdwatcher_overview.md"&gt;Birdwatcher&lt;/a&gt; for system debugging, &lt;a href="https://milvus.io/docs/monitor_overview.md"&gt;Prometheus/Grafana&lt;/a&gt; for monitoring, &lt;a href="https://milvus.io/docs/milvus-cdc-overview.md"&gt;Milvus CDC&lt;/a&gt; for data synchronization, &lt;a href="https://github.com/zilliztech/vts?tab=readme-ov-file#vts"&gt;VTS&lt;/a&gt; for data migration and data connectors for &lt;a href="https://milvus.io/docs/integrate_with_spark.md#Spark-Milvus-Connector-User-Guide"&gt;Spark&lt;/a&gt;, &lt;a href="https://github.com/zilliztech/kafka-connect-milvus?tab=readme-ov-file#kafka-connect-milvus-connector"&gt;Kafka&lt;/a&gt;, &lt;a href="https://fivetran.com/docs/destinations/milvus"&gt;Fivetran&lt;/a&gt;, and &lt;a href="https://milvus.io/docs/integrate_with_airbyte.md"&gt;Airbyte&lt;/a&gt; to build search pipelines.&lt;/p&gt; 
&lt;p&gt;Check out &lt;a href="https://milvus.io/docs/integrations_overview.md"&gt;https://milvus.io/docs/integrations_overview.md&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For guidance on installation, usage, deployment, and administration, check out &lt;a href="https://milvus.io/docs"&gt;Milvus Docs&lt;/a&gt;. For technical milestones and enhancement proposals, check out &lt;a href="https://github.com/milvus-io/milvus/issues"&gt;issues on GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The Milvus open-source project accepts contributions from everyone. See &lt;a href="https://github.com/milvus-io/milvus/raw/master/CONTRIBUTING.md"&gt;Guidelines for Contributing&lt;/a&gt; for details on submitting patches and the development workflow. See our &lt;a href="https://github.com/milvus-io/community"&gt;community repository&lt;/a&gt; to learn about project governance and access more community resources.&lt;/p&gt; 
&lt;h3&gt;Build Milvus from Source Code&lt;/h3&gt; 
&lt;p&gt;Requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Linux systems (Ubuntu 20.04 or later recommended):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;Go: &amp;gt;= 1.21
CMake: &amp;gt;= 3.26.4 &amp;amp;&amp;amp; CMake &amp;lt; 4
GCC: 9.5
Python: &amp;gt; 3.8 and  &amp;lt;= 3.11
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;MacOS systems with x86_64 (Big Sur 11.5 or later recommended):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;Go: &amp;gt;= 1.21
CMake: &amp;gt;= 3.26.4 &amp;amp;&amp;amp; CMake &amp;lt; 4
llvm: &amp;gt;= 15
Python: &amp;gt; 3.8 and  &amp;lt;= 3.11
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;MacOS systems with Apple Silicon (Monterey 12.0.1 or later recommended):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;Go: &amp;gt;= 1.21 (Arch=ARM64)
CMake: &amp;gt;= 3.26.4 &amp;amp;&amp;amp; CMake &amp;lt; 4
llvm: &amp;gt;= 15
Python: &amp;gt; 3.8 and  &amp;lt;= 3.11
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Clone Milvus repo and build.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone github repository.
$ git clone https://github.com/milvus-io/milvus.git

# Install third-party dependencies.
$ cd milvus/
$ ./scripts/install_deps.sh

# Compile Milvus.
$ make
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For full instructions, see &lt;a href="https://github.com/milvus-io/milvus/raw/master/DEVELOPMENT.md"&gt;developer's documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join the Milvus community on &lt;a href="https://discord.gg/8uyFbECzPX"&gt;Discord&lt;/a&gt; to share your suggestions, advice, and questions with our engineering team.&lt;/p&gt; 
&lt;p&gt;To learn the latest news about Milvus, follow us on social media:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/milvusio"&gt;X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.linkedin.com/company/the-milvus-project"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCMCo_F7pKjMHBlfyxwOPw-g"&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@milvusio"&gt;Medium&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also check out our &lt;a href="https://milvus.io/docs/performance_faq.md"&gt;FAQ page&lt;/a&gt; to discover solutions or answers to your issues or questions, and subscribe to Milvus mailing lists:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://lists.lfai.foundation/g/milvus-tsc"&gt;Technical Steering Committee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lists.lfai.foundation/g/milvus-technical-discuss"&gt;Technical Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lists.lfai.foundation/g/milvus-announce"&gt;Announcement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reference&lt;/h2&gt; 
&lt;p&gt;Reference to cite when you use Milvus in a research paper:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@inproceedings{2021milvus,
  title={Milvus: A Purpose-Built Vector Data Management System},
  author={Wang, Jianguo and Yi, Xiaomeng and Guo, Rentong and Jin, Hai and Xu, Peng and Li, Shengjun and Wang, Xiangyu and Guo, Xiangzhou and Li, Chengming and Xu, Xiaohai and others},
  booktitle={Proceedings of the 2021 International Conference on Management of Data},
  pages={2614--2627},
  year={2021}
}

@article{2022manu,
  title={Manu: a cloud native vector database management system},
  author={Guo, Rentong and Luan, Xiaofan and Xiang, Long and Yan, Xiao and Yi, Xiaomeng and Luo, Jigao and Cheng, Qianya and Xu, Weizhi and Luo, Jiarui and Liu, Frank and others},
  journal={Proceedings of the VLDB Endowment},
  volume={15},
  number={12},
  pages={3548--3561},
  year={2022},
  publisher={VLDB Endowment}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- Do not remove start of hero-bot --&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/all--contributors-432-orange" /&gt;&lt;br /&gt; &lt;a href="https://github.com/0xflotus"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26602940?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/404-P4rziv4L"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57059194?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/9Eurydice9"&gt;&lt;img src="https://avatars.githubusercontent.com/u/220225099?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ABNER-1"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24547351?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Accagain2014"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9635216?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/AgNess-G"&gt;&lt;img src="https://avatars.githubusercontent.com/u/79598409?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Ahmetyasin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34247619?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Ald392"&gt;&lt;img src="https://avatars.githubusercontent.com/u/166891594?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/AliDotS"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33119433?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/AlintaLu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18751867?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/AllenYu1987"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12489985?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Anosh21"&gt;&lt;img src="https://avatars.githubusercontent.com/u/90505226?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/AnthonyTsu1984"&gt;&lt;img src="https://avatars.githubusercontent.com/u/115786031?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Aredcap"&gt;&lt;img src="https://avatars.githubusercontent.com/u/40494761?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ArenaSu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/21214629?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Armaggheddon"&gt;&lt;img src="https://avatars.githubusercontent.com/u/47779194?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/BUPTAnderson"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13449703?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Ben-Aaron-Bio-Rad"&gt;&lt;img src="https://avatars.githubusercontent.com/u/54123439?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Bennu-Li"&gt;&lt;img src="https://avatars.githubusercontent.com/u/53458891?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Biki-das"&gt;&lt;img src="https://avatars.githubusercontent.com/u/72331432?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/BossZou"&gt;&lt;img src="https://avatars.githubusercontent.com/u/40255591?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/CNLHC"&gt;&lt;img src="https://avatars.githubusercontent.com/u/21005146?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/CaoHaiNam"&gt;&lt;img src="https://avatars.githubusercontent.com/u/47685795?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ChelseyZ"&gt;&lt;img src="https://avatars.githubusercontent.com/u/237714727?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Chisdo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/36720318?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ChunelFeng"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37905059?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/CocytusElias"&gt;&lt;img src="https://avatars.githubusercontent.com/u/79587688?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/CodeInDreams"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17664279?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Cplus-plus"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57971497?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/CsterKuroi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12230174?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Cupchen"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34762375?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/DLT1412"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8294986?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/DanielHuang1983"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4417873?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Deep1Shikha"&gt;&lt;img src="https://avatars.githubusercontent.com/u/47516502?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/DingQK"&gt;&lt;img src="https://avatars.githubusercontent.com/u/58072531?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/DiptoChakrabarty"&gt;&lt;img src="https://avatars.githubusercontent.com/u/45638240?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/EricStarer"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34002927?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Erzangel"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57399897?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/FeilongHou"&gt;&lt;img src="https://avatars.githubusercontent.com/u/77430856?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Fierralin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8857059?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/FluorineDog"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15663612?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Gofastasf"&gt;&lt;img src="https://avatars.githubusercontent.com/u/159963288?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Goodnight77"&gt;&lt;img src="https://avatars.githubusercontent.com/u/117648012?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Gracieeea"&gt;&lt;img src="https://avatars.githubusercontent.com/u/50101579?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/GuanyunFeng"&gt;&lt;img src="https://avatars.githubusercontent.com/u/40229765?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/GuoRentong"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57477222?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/GuyKh"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3136012?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Hard-Coder05"&gt;&lt;img src="https://avatars.githubusercontent.com/u/54059881?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Heisenberg-Y"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35055583?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/HesterG"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17645053?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Hoyaspark"&gt;&lt;img src="https://avatars.githubusercontent.com/u/88016041?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/HuaSheng2000"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34791273?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/HuangHua"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2274405?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/HurSungYun"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8033896?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Ice-YcY"&gt;&lt;img src="https://avatars.githubusercontent.com/u/85332705?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/JackLCL"&gt;&lt;img src="https://avatars.githubusercontent.com/u/53512883?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/JadeFlute0127"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35321989?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Janglearnstocode"&gt;&lt;img src="https://avatars.githubusercontent.com/u/204587742?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Javajava1"&gt;&lt;img src="https://avatars.githubusercontent.com/u/29594737?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Jeri-jose"&gt;&lt;img src="https://avatars.githubusercontent.com/u/72429659?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/JianPeng20"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14035577?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/JinHai-CN"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33142505?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/JsDove"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35839735?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Juneezee"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20135478?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/KubrickLiu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24795136?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/KumaJie"&gt;&lt;img src="https://avatars.githubusercontent.com/u/61139665?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/LeoReeYang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/58654486?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Leslie-Wong-H"&gt;&lt;img src="https://avatars.githubusercontent.com/u/27696701?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Light-City"&gt;&lt;img src="https://avatars.githubusercontent.com/u/25699850?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Lin-gh-Saint"&gt;&lt;img src="https://avatars.githubusercontent.com/u/64019322?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Linkwei"&gt;&lt;img src="https://avatars.githubusercontent.com/u/30227152?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/LionelDong"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7533395?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/LocoRichard"&gt;&lt;img src="https://avatars.githubusercontent.com/u/81553353?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/LoveEachDay"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1573213?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/MrPresent-Han"&gt;&lt;img src="https://avatars.githubusercontent.com/u/116052805?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/NavanshGoel"&gt;&lt;img src="https://avatars.githubusercontent.com/u/74401713?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/NicoYuan1986"&gt;&lt;img src="https://avatars.githubusercontent.com/u/109071306?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/NotRyan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5742796?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/OxalisCu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/64067746?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/PahudPlus"&gt;&lt;img src="https://avatars.githubusercontent.com/u/64403786?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/PiercarloSlavazza"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3389306?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/PowderLi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/135960789?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/QipengZhou"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5410298?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/RangerCD"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6872198?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Raysilience"&gt;&lt;img src="https://avatars.githubusercontent.com/u/45241093?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Reidddddd"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5352837?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ReigenAraka"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57280231?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Rijin-N"&gt;&lt;img src="https://avatars.githubusercontent.com/u/181319057?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/RosieZhang12"&gt;&lt;img src="https://avatars.githubusercontent.com/u/106942883?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/RyanWei"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9876551?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SCKCZJ2018"&gt;&lt;img src="https://avatars.githubusercontent.com/u/29282370?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SarthakJain26"&gt;&lt;img src="https://avatars.githubusercontent.com/u/45846277?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Shawnzheng011019"&gt;&lt;img src="https://avatars.githubusercontent.com/u/88486803?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SimFG"&gt;&lt;img src="https://avatars.githubusercontent.com/u/21985684?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SkyYang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4702509?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SnowyOwl-KHY"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10348819?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SpadeA-Tang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/71589810?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Sunt-ing"&gt;&lt;img src="https://avatars.githubusercontent.com/u/43040147?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SwaggySong"&gt;&lt;img src="https://avatars.githubusercontent.com/u/36157116?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TheShubhendra"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37535104?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Thor-ChenBiao"&gt;&lt;img src="https://avatars.githubusercontent.com/u/104345188?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ThreadDao"&gt;&lt;img src="https://avatars.githubusercontent.com/u/27288593?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ThyeeZz"&gt;&lt;img src="https://avatars.githubusercontent.com/u/41352919?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Tlincy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11934432?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Tumao727"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20420181?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/UnyieldingOrca"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11794047?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Writer-X"&gt;&lt;img src="https://avatars.githubusercontent.com/u/80471801?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Writtic"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11371498?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Wuzhengda55"&gt;&lt;img src="https://avatars.githubusercontent.com/u/47274057?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/XTxxxx"&gt;&lt;img src="https://avatars.githubusercontent.com/u/113696527?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Xieql"&gt;&lt;img src="https://avatars.githubusercontent.com/u/45359033?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/XuPeng-SH"&gt;&lt;img src="https://avatars.githubusercontent.com/u/39627130?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/XuanYang-cn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51370125?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/YannFollet"&gt;&lt;img src="https://avatars.githubusercontent.com/u/131855179?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/YidaHu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13404367?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Yinwei-Yu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/150327960?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/YiyunNi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/74396087?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Yougigun"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9638997?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Yukikaze-CZR"&gt;&lt;img src="https://avatars.githubusercontent.com/u/48198922?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Zach41"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3941604?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ZhaoBQ"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35092554?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aaronjin2010"&gt;&lt;img src="https://avatars.githubusercontent.com/u/48044391?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/abd-770"&gt;&lt;img src="https://avatars.githubusercontent.com/u/92085834?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/akihoni"&gt;&lt;img src="https://avatars.githubusercontent.com/u/36330442?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/alexanderguzhva"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10901481?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/alwayslove2013"&gt;&lt;img src="https://avatars.githubusercontent.com/u/22510720?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/anchun"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2356895?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/andrii-shchur"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33606307?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/any35"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2082210?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aoiasd"&gt;&lt;img src="https://avatars.githubusercontent.com/u/45024769?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/arijit-chowdhury-genea"&gt;&lt;img src="https://avatars.githubusercontent.com/u/104769013?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ashkrisk"&gt;&lt;img src="https://avatars.githubusercontent.com/u/137368647?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ashyshyshyman"&gt;&lt;img src="https://avatars.githubusercontent.com/u/50362613?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/avats-dev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35889327?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/avsolatorio"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3009596?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/balloon1995"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10573916?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/become-nice"&gt;&lt;img src="https://avatars.githubusercontent.com/u/56624819?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bigsheeper"&gt;&lt;img src="https://avatars.githubusercontent.com/u/42060877?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/binbin12580"&gt;&lt;img src="https://avatars.githubusercontent.com/u/30914966?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/binbinlv"&gt;&lt;img src="https://avatars.githubusercontent.com/u/83755740?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bjzhjing"&gt;&lt;img src="https://avatars.githubusercontent.com/u/46661806?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bo-huang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24309515?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/brandonbiggs"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34954680?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/brcarry"&gt;&lt;img src="https://avatars.githubusercontent.com/u/58139344?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/brunocfnba"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7377163?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bryanwux"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17968665?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/caesarjuly"&gt;&lt;img src="https://avatars.githubusercontent.com/u/927521?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/caosiyang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2155120?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/carawaylj"&gt;&lt;img src="https://avatars.githubusercontent.com/u/69145751?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/charleskakumanu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/62761315?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/charlspjohn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14850736?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/chasingegg"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18375889?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/chengpu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2233492?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/chenxingqiang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12387235?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/chinamcafee"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3439961?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/chuangfengwang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24692397?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/chyezh"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20332315?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cjrh"&gt;&lt;img src="https://avatars.githubusercontent.com/u/480395?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/claireyuw"&gt;&lt;img src="https://avatars.githubusercontent.com/u/83751381?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/codacy-badger"&gt;&lt;img src="https://avatars.githubusercontent.com/u/23704769?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/codenoid"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14269809?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/codingjaguar"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7064054?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/congqixia"&gt;&lt;img src="https://avatars.githubusercontent.com/u/84113973?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/corest"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1071648?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/counter2015"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13608862?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cqy123456"&gt;&lt;img src="https://avatars.githubusercontent.com/u/39671710?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cuishuang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15921519?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cxie"&gt;&lt;img src="https://avatars.githubusercontent.com/u/653101?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cxytz01"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18002438?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cydrain"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3992404?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/czpmango"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26356194?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/czs007"&gt;&lt;img src="https://avatars.githubusercontent.com/u/59249785?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dandv"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33569?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dariocurr"&gt;&lt;img src="https://avatars.githubusercontent.com/u/48800335?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/datenhahn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13999666?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dd-He"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24242249?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dddddai"&gt;&lt;img src="https://avatars.githubusercontent.com/u/41563853?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/del-zhenwu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/56623710?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dengxiaohai"&gt;&lt;img src="https://avatars.githubusercontent.com/u/137682492?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/disflyer"&gt;&lt;img src="https://avatars.githubusercontent.com/u/22723892?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/divyaruhil"&gt;&lt;img src="https://avatars.githubusercontent.com/u/117009486?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/donno2048"&gt;&lt;img src="https://avatars.githubusercontent.com/u/61805754?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/drow931"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11514434?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dvzubarev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14878830?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dyhyfu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/64584368?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eddumelendez"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1810547?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ehooi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1306183?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/elfisworking"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37609214?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eli-b"&gt;&lt;img src="https://avatars.githubusercontent.com/u/834999?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/elstic"&gt;&lt;img src="https://avatars.githubusercontent.com/u/48523564?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eltociear"&gt;&lt;img src="https://avatars.githubusercontent.com/u/22633385?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/emmanuel-ferdman"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35470921?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eolivelli"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9469110?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/erdustiggen"&gt;&lt;img src="https://avatars.githubusercontent.com/u/25433850?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/feisiyicl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/64510805?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/fengjun2016"&gt;&lt;img src="https://avatars.githubusercontent.com/u/23044049?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/filip-halt"&gt;&lt;img src="https://avatars.githubusercontent.com/u/81822489?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/filipecaixeta"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1094052?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/fishpenguin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/49153041?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/forsaken628"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18322364?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/foxspy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11503321?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/franciscojavierarceo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4163062?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/freestsoul"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3909908?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gcmutator"&gt;&lt;img src="https://avatars.githubusercontent.com/u/134900551?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ggaaooppeenngg"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4769989?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gifi-siby"&gt;&lt;img src="https://avatars.githubusercontent.com/u/176461003?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/git-hulk"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4987594?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/godchen0212"&gt;&lt;img src="https://avatars.githubusercontent.com/u/67679556?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gracezzzzz"&gt;&lt;img src="https://avatars.githubusercontent.com/u/56617657?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/grtoverflow"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8500564?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gruebel"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33207684?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/guimou"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3944034?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gujun720"&gt;&lt;img src="https://avatars.githubusercontent.com/u/53246671?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/guoxiangzhou"&gt;&lt;img src="https://avatars.githubusercontent.com/u/52496626?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/hadim"&gt;&lt;img src="https://avatars.githubusercontent.com/u/528003?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/haorenfsa"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15938850?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/hedane"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12457872?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/henryoswald"&gt;&lt;img src="https://avatars.githubusercontent.com/u/343366?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/hishope"&gt;&lt;img src="https://avatars.githubusercontent.com/u/153272819?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/huanghaoyuanhhy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/103482615?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/huangjincheng2022"&gt;&lt;img src="https://avatars.githubusercontent.com/u/98305308?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ibrahimhaddad"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1656002?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/im-ajaymeena"&gt;&lt;img src="https://avatars.githubusercontent.com/u/19550841?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ireneontheway5"&gt;&lt;img src="https://avatars.githubusercontent.com/u/75291211?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/iynewz"&gt;&lt;img src="https://avatars.githubusercontent.com/u/81401074?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/izapolsk"&gt;&lt;img src="https://avatars.githubusercontent.com/u/21039333?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jackyu2020"&gt;&lt;img src="https://avatars.githubusercontent.com/u/64533877?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jaelgu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/86251631?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jaime0815"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4024711?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jeffoverflow"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24581746?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jenkoon"&gt;&lt;img src="https://avatars.githubusercontent.com/u/27683687?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jennyli-z"&gt;&lt;img src="https://avatars.githubusercontent.com/u/93511422?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jfwm2"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16882135?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jhonroxton"&gt;&lt;img src="https://avatars.githubusercontent.com/u/105436184?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jiangke-sr"&gt;&lt;img src="https://avatars.githubusercontent.com/u/68629395?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jiangyinzuo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/40995042?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jiaoew1991"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2297455?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jiaqizho"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8388185?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jielinxu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/52057195?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jingkl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34296482?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jjaikumar-xyla"&gt;&lt;img src="https://avatars.githubusercontent.com/u/144144634?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jjyaoao"&gt;&lt;img src="https://avatars.githubusercontent.com/u/88936287?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jkx8fc"&gt;&lt;img src="https://avatars.githubusercontent.com/u/31717785?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/joeyjooste"&gt;&lt;img src="https://avatars.githubusercontent.com/u/72280325?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/john-h-luo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/67673717?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jperez999"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37191411?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/juliens"&gt;&lt;img src="https://avatars.githubusercontent.com/u/195661?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/junjiejiangjjj"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14136703?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jvirgovic"&gt;&lt;img src="https://avatars.githubusercontent.com/u/138708600?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jyc4617"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3044583?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/kartikcho"&gt;&lt;img src="https://avatars.githubusercontent.com/u/48270786?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/kateshaowanjou"&gt;&lt;img src="https://avatars.githubusercontent.com/u/58837504?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/klboke"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18591662?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/laipz8200"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16485841?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/laurazhao0611"&gt;&lt;img src="https://avatars.githubusercontent.com/u/192320184?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lee-eve"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9720105?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lee-taejun"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33862757?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lentitude2tk"&gt;&lt;img src="https://avatars.githubusercontent.com/u/108672767?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/leonardokidd"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14940941?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/letian-jiang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16740944?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/letme5"&gt;&lt;img src="https://avatars.githubusercontent.com/u/76860836?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/leykun10"&gt;&lt;img src="https://avatars.githubusercontent.com/u/45382760?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lhotari"&gt;&lt;img src="https://avatars.githubusercontent.com/u/66864?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/liliu-z"&gt;&lt;img src="https://avatars.githubusercontent.com/u/105927039?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/linhgao"&gt;&lt;img src="https://avatars.githubusercontent.com/u/102851605?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/liyun95"&gt;&lt;img src="https://avatars.githubusercontent.com/u/105278390?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lmzzzzz1"&gt;&lt;img src="https://avatars.githubusercontent.com/u/43360234?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/locustbaby"&gt;&lt;img src="https://avatars.githubusercontent.com/u/21237232?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/loguo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15364733?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/longjiquan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/31589260?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lowener"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9810050?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lsgrep"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3893940?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lwglgy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26682620?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/madogar"&gt;&lt;img src="https://avatars.githubusercontent.com/u/36537062?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/maksspace"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9841409?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/marcelo-cjl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/222351274?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/matchyc"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57976772?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/matrixji"&gt;&lt;img src="https://avatars.githubusercontent.com/u/183388?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mausch"&gt;&lt;img src="https://avatars.githubusercontent.com/u/95194?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mcamou"&gt;&lt;img src="https://avatars.githubusercontent.com/u/87200?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/michaelkl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1443825?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mihailyanchev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34907806?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mileyzjq"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37039827?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/milvus-ci-robot"&gt;&lt;img src="https://avatars.githubusercontent.com/u/87847967?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mimoning"&gt;&lt;img src="https://avatars.githubusercontent.com/u/19261942?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/moe-of-faith"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5696721?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mohitreddy1996"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11742913?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nameczz"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20559208?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/natoka"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1751024?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ncover21"&gt;&lt;img src="https://avatars.githubusercontent.com/u/30241297?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nexttonever"&gt;&lt;img src="https://avatars.githubusercontent.com/u/31059690?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/neza2017"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34152706?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nianliuu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/136299351?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nish112022"&gt;&lt;img src="https://avatars.githubusercontent.com/u/148342058?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nustiueudinastea"&gt;&lt;img src="https://avatars.githubusercontent.com/u/588327?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/op-hunter"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5617677?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ownbylichaobao"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37684963?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/panjf2000"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7496278?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/phantom8548"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11576622?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/pingliu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6415493?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/pj1987111"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6268414?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ponponon"&gt;&lt;img src="https://avatars.githubusercontent.com/u/38725104?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/preetham"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9149028?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/proost"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34047134?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/psc0606"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7888889?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/punkerpunker"&gt;&lt;img src="https://avatars.githubusercontent.com/u/54440025?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qbzenker"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51972064?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qixuan0212"&gt;&lt;img src="https://avatars.githubusercontent.com/u/135136620?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/rahulmistri1997"&gt;&lt;img src="https://avatars.githubusercontent.com/u/58909377?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/rashgaroth"&gt;&lt;img src="https://avatars.githubusercontent.com/u/50513263?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/richzw"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1590890?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ronnie-llamado"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35092029?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sachitolani"&gt;&lt;img src="https://avatars.githubusercontent.com/u/146494073?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sageanya"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37909674?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/saisona"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10884762?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/saivarunk"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2976867?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sangheee"&gt;&lt;img src="https://avatars.githubusercontent.com/u/29528531?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sarah-inkeep"&gt;&lt;img src="https://avatars.githubusercontent.com/u/129242944?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/scipe"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3996622?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/scsven"&gt;&lt;img src="https://avatars.githubusercontent.com/u/100122127?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/seo-jinBro"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17746814?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/septemberfd"&gt;&lt;img src="https://avatars.githubusercontent.com/u/40378371?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/shana0325"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33335490?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/shanghaikid"&gt;&lt;img src="https://avatars.githubusercontent.com/u/185051?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/shaoting-huang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/167743503?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/shengjh"&gt;&lt;img src="https://avatars.githubusercontent.com/u/46514371?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/shengjun1985"&gt;&lt;img src="https://avatars.githubusercontent.com/u/49774184?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/shiyu09"&gt;&lt;img src="https://avatars.githubusercontent.com/u/39143280?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/shiyu22"&gt;&lt;img src="https://avatars.githubusercontent.com/u/53459423?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/shunjiezhao"&gt;&lt;img src="https://avatars.githubusercontent.com/u/90906581?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/siddarth99"&gt;&lt;img src="https://avatars.githubusercontent.com/u/38921750?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sileht"&gt;&lt;img src="https://avatars.githubusercontent.com/u/200878?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/simonwei97"&gt;&lt;img src="https://avatars.githubusercontent.com/u/119845914?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/siriusctrl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26541600?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/slobentanzer"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13223629?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smackfu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1723952?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smdsbz"&gt;&lt;img src="https://avatars.githubusercontent.com/u/19503270?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smellthemoon"&gt;&lt;img src="https://avatars.githubusercontent.com/u/64083300?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/snyk-bot"&gt;&lt;img src="https://avatars.githubusercontent.com/u/19733683?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/songxianj"&gt;&lt;img src="https://avatars.githubusercontent.com/u/107831450?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/soothing-rain"&gt;&lt;img src="https://avatars.githubusercontent.com/u/69466447?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/soulteary"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1500781?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sparknack"&gt;&lt;img src="https://avatars.githubusercontent.com/u/22293270?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sre-ci-robot"&gt;&lt;img src="https://avatars.githubusercontent.com/u/56469371?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sre-ro"&gt;&lt;img src="https://avatars.githubusercontent.com/u/93502486?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sreyan-ghosh"&gt;&lt;img src="https://avatars.githubusercontent.com/u/60854658?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ss892714028"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34635663?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/stacyli-0601"&gt;&lt;img src="https://avatars.githubusercontent.com/u/218570478?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/stephen37"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6506810?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/stevetracvc"&gt;&lt;img src="https://avatars.githubusercontent.com/u/70416691?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/stuartjing"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3454260?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sunby"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9817127?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sutcalag"&gt;&lt;img src="https://avatars.githubusercontent.com/u/83750738?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sworddish"&gt;&lt;img src="https://avatars.githubusercontent.com/u/219938?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/talentAN"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17634030?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tasty-gumi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/95212988?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/taydy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24822588?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tbickford"&gt;&lt;img src="https://avatars.githubusercontent.com/u/814232?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tedxu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/152654?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tedyu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/235188?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/testwill"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8717479?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/thywdy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/56624359?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/timothycarambat"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16845892?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tinkerlin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13817362?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tinswzy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/30112657?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/topikachu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1520380?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/trovwu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/89676996?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tsonglew"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14333766?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tuwchia"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13282807?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ulovecode"&gt;&lt;img src="https://avatars.githubusercontent.com/u/30142181?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/uncle-cyh"&gt;&lt;img src="https://avatars.githubusercontent.com/u/42989534?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/unfode"&gt;&lt;img src="https://avatars.githubusercontent.com/u/95689995?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vladwa"&gt;&lt;img src="https://avatars.githubusercontent.com/u/22994848?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vsanna"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7834445?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vtereshyn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/32247411?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/wangting0128"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26307815?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/water32"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13234561?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/wayblink"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18096561?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/weiliu1031"&gt;&lt;img src="https://avatars.githubusercontent.com/u/108661493?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/weishuo2"&gt;&lt;img src="https://avatars.githubusercontent.com/u/27938020?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/wg1026688210"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14267759?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/wh201906"&gt;&lt;img src="https://avatars.githubusercontent.com/u/62299611?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/wscxyey"&gt;&lt;img src="https://avatars.githubusercontent.com/u/48882296?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/wwx441476"&gt;&lt;img src="https://avatars.githubusercontent.com/u/28601121?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/wxyucs"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12595343?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/wxywb"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5432721?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/wzymumon"&gt;&lt;img src="https://avatars.githubusercontent.com/u/46886508?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/xaxys"&gt;&lt;img src="https://avatars.githubusercontent.com/u/28949072?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/xiangzhouguo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/93316470?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/xiaocai2333"&gt;&lt;img src="https://avatars.githubusercontent.com/u/46207236?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/xiaofan-luan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/83447078?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/xiaohu4313888"&gt;&lt;img src="https://avatars.githubusercontent.com/u/39088547?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/xiaowshi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/45102896?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/xiedeyantu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/49781471?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/xige-16"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20124155?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/xiyichan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34647972?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/xlyslr"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14070517?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/xudalin0609"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35444753?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/xuqiwe"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57252655?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/xzshinan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7299894?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yah01"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12216890?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yahorbarkouski"&gt;&lt;img src="https://avatars.githubusercontent.com/u/94449298?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yamasite"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10089260?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yanbinyang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2880762?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yanliang567"&gt;&lt;img src="https://avatars.githubusercontent.com/u/82361606?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yellow-shine"&gt;&lt;img src="https://avatars.githubusercontent.com/u/149367927?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yelusion2"&gt;&lt;img src="https://avatars.githubusercontent.com/u/97278661?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yhmo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2282099?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yiuluchen"&gt;&lt;img src="https://avatars.githubusercontent.com/u/23047684?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yiwangdr"&gt;&lt;img src="https://avatars.githubusercontent.com/u/80064917?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yiwen92"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34636520?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yongpengli-z"&gt;&lt;img src="https://avatars.githubusercontent.com/u/103410837?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/youny626"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9016120?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yuyicai"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13033733?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yxm1536"&gt;&lt;img src="https://avatars.githubusercontent.com/u/62009483?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zander-bobronnikov"&gt;&lt;img src="https://avatars.githubusercontent.com/u/183726703?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zc2638"&gt;&lt;img src="https://avatars.githubusercontent.com/u/28284116?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zc277584121"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17022025?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zengxy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11961641?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zerowe-seven"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57790060?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zhagnlu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11935707?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zhang787jun"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51014996?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zhanshuyou"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7420640?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zhanxu33"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16716445?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zhengbuqian"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12147173?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zhenwu-cn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2993941?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zhikunyao"&gt;&lt;img src="https://avatars.githubusercontent.com/u/129478994?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zhoubo0317"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51948620?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zhuwenxing"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12268675?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zhuyaguang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8857976?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zjjzyl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6939141?v=4" width="30px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zxf2017"&gt;&lt;img src="https://avatars.githubusercontent.com/u/29620478?v=4" width="30px" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- Do not remove end of hero-bot --&gt;</description>
    </item>
    
    <item>
      <title>NVIDIA/k8s-device-plugin</title>
      <link>https://github.com/NVIDIA/k8s-device-plugin</link>
      <description>&lt;p&gt;NVIDIA device plugin for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NVIDIA device plugin for Kubernetes&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/NVIDIA/k8s-device-plugin/actions/workflows/e2e.yaml"&gt;&lt;img src="https://github.com/NVIDIA/k8s-device-plugin/actions/workflows/e2e.yaml/badge.svg?sanitize=true" alt="End-to-end Tests" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/NVIDIA/k8s-device-plugin"&gt;&lt;img src="https://goreportcard.com/badge/github.com/NVIDIA/k8s-device-plugin" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/NVIDIA/k8s-device-plugin/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/NVIDIA/k8s-device-plugin" alt="Latest Release" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#about"&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#quick-start"&gt;Quick Start&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#preparing-your-gpu-nodes"&gt;Preparing your GPU Nodes&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#example-for-debian-based-systems-with-docker-and-containerd"&gt;Example for debian-based systems with &lt;code&gt;docker&lt;/code&gt; and &lt;code&gt;containerd&lt;/code&gt;&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#install-the-nvidia-container-toolkit"&gt;Install the NVIDIA Container Toolkit&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#notes-on-cri-o-configuration"&gt;Notes on &lt;code&gt;CRI-O&lt;/code&gt; configuration&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#enabling-gpu-support-in-kubernetes"&gt;Enabling GPU Support in Kubernetes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#running-gpu-jobs"&gt;Running GPU Jobs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#configuring-the-nvidia-device-plugin-binary"&gt;Configuring the NVIDIA device plugin binary&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#as-command-line-flags-or-envvars"&gt;As command line flags or envvars&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#as-a-configuration-file"&gt;As a configuration file&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#configuration-option-details"&gt;Configuration Option Details&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#shared-access-to-gpus"&gt;Shared Access to GPUs&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#with-cuda-time-slicing"&gt;With CUDA Time-Slicing&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#with-cuda-mps"&gt;With CUDA MPS&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#imex-support"&gt;IMEX Support&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#catalog-of-labels"&gt;Catalog of Labels&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#deployment-via-helm"&gt;Deployment via &lt;code&gt;helm&lt;/code&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#configuring-the-device-plugins-helm-chart"&gt;Configuring the device plugin's &lt;code&gt;helm&lt;/code&gt; chart&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#passing-configuration-to-the-plugin-via-a-configmap"&gt;Passing configuration to the plugin via a &lt;code&gt;ConfigMap&lt;/code&gt;&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#single-config-file-example"&gt;Single Config File Example&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#multiple-config-file-example"&gt;Multiple Config File Example&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#updating-per-node-configuration-with-a-node-label"&gt;Updating Per-Node Configuration With a Node Label&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#setting-other-helm-chart-values"&gt;Setting other helm chart values&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#deploying-with-gpu-feature-discovery-for-automatic-node-labels"&gt;Deploying with gpu-feature-discovery for automatic node labels&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#deploying-gpu-feature-discovery-in-standalone-mode"&gt;Deploying gpu-feature-discovery in standalone mode&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#deploying-via-helm-install-with-a-direct-url-to-the-helm-package"&gt;Deploying via &lt;code&gt;helm install&lt;/code&gt; with a direct URL to the &lt;code&gt;helm&lt;/code&gt; package&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#building-and-running-locally"&gt;Building and Running Locally&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#with-docker"&gt;With Docker&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#build"&gt;Build&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#run"&gt;Run&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#without-docker"&gt;Without Docker&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#build-1"&gt;Build&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#run-1"&gt;Run&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#changelog"&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#issues-and-contributing"&gt;Issues and Contributing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#versioning"&gt;Versioning&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#upgrading-kubernetes-with-the-device-plugin"&gt;Upgrading Kubernetes with the Device Plugin&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;The NVIDIA device plugin for Kubernetes is a Daemonset that allows you to automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Expose the number of GPUs on each nodes of your cluster&lt;/li&gt; 
 &lt;li&gt;Keep track of the health of your GPUs&lt;/li&gt; 
 &lt;li&gt;Run GPU enabled containers in your Kubernetes cluster.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This repository contains NVIDIA's official implementation of the &lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/"&gt;Kubernetes device plugin&lt;/a&gt;. As of v0.15.0 this repository also holds the implementation for GPU Feature Discovery labels, for further information on GPU Feature Discovery see &lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/docs/gpu-feature-discovery/README.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please note that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The NVIDIA device plugin API is beta as of Kubernetes v1.10.&lt;/li&gt; 
 &lt;li&gt;The NVIDIA device plugin is currently lacking 
  &lt;ul&gt; 
   &lt;li&gt;Comprehensive GPU health checking features&lt;/li&gt; 
   &lt;li&gt;GPU cleanup features&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Support will only be provided for the official NVIDIA device plugin (and not for forks or other variants of this plugin).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;The list of prerequisites for running the NVIDIA device plugin is described below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;NVIDIA drivers ~= 384.81&lt;/li&gt; 
 &lt;li&gt;nvidia-docker &amp;gt;= 2.0 || nvidia-container-toolkit &amp;gt;= 1.7.0 (&amp;gt;= 1.11.0 to use integrated GPUs on Tegra-based systems)&lt;/li&gt; 
 &lt;li&gt;nvidia-container-runtime configured as the default low-level runtime&lt;/li&gt; 
 &lt;li&gt;Kubernetes version &amp;gt;= 1.10&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Preparing your GPU Nodes&lt;/h3&gt; 
&lt;p&gt;The following steps need to be executed on all your GPU nodes. This README assumes that the NVIDIA drivers and the &lt;code&gt;nvidia-container-toolkit&lt;/code&gt; have been pre-installed. It also assumes that you have configured the &lt;code&gt;nvidia-container-runtime&lt;/code&gt; as the default low-level runtime to use.&lt;/p&gt; 
&lt;p&gt;Please see: &lt;a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html"&gt;https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Example for debian-based systems with &lt;code&gt;docker&lt;/code&gt; and &lt;code&gt;containerd&lt;/code&gt;&lt;/h4&gt; 
&lt;h5&gt;Install the NVIDIA Container Toolkit&lt;/h5&gt; 
&lt;p&gt;For instructions on installing and getting started with the NVIDIA Container Toolkit, refer to the &lt;a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#installation-guide"&gt;installation guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also note the configuration instructions for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html#configuring-containerd-for-kubernetes"&gt;&lt;code&gt;containerd&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html#configuring-cri-o"&gt;&lt;code&gt;CRI-O&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html#configuring-docker"&gt;&lt;code&gt;docker&lt;/code&gt; (Deprecated)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Remembering to restart each runtime after applying the configuration changes.&lt;/p&gt; 
&lt;p&gt;If the &lt;code&gt;nvidia&lt;/code&gt; runtime should be set as the default runtime (with non-cri docker versions, for example), the &lt;code&gt;--set-as-default&lt;/code&gt; argument must also be included in the commands above. If this is not done, a RuntimeClass needs to be defined:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;apiVersion: node.k8s.io/v1
kind: RuntimeClass
metadata:
  name: nvidia
handler: nvidia
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Notes on &lt;code&gt;CRI-O&lt;/code&gt; configuration&lt;/h5&gt; 
&lt;p&gt;When running &lt;code&gt;kubernetes&lt;/code&gt; with &lt;code&gt;CRI-O&lt;/code&gt;, add the config file to set the &lt;code&gt;nvidia-container-runtime&lt;/code&gt; as the default low-level OCI runtime under &lt;code&gt;/etc/crio/crio.conf.d/99-nvidia.conf&lt;/code&gt;. This will take priority over the default &lt;code&gt;crun&lt;/code&gt; config file at &lt;code&gt;/etc/crio/crio.conf.d/10-crun.conf&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[crio]

  [crio.runtime]
    default_runtime = "nvidia"

    [crio.runtime.runtimes]

      [crio.runtime.runtimes.nvidia]
        runtime_path = "/usr/bin/nvidia-container-runtime"
        runtime_type = "oci"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As stated in the linked documentation, this file can automatically be generated with the nvidia-ctk command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;sudo nvidia-ctk runtime configure --runtime=crio --set-as-default --config=/etc/crio/crio.conf.d/99-nvidia.conf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;CRI-O&lt;/code&gt; uses &lt;code&gt;crun&lt;/code&gt; as default low-level OCI runtime so &lt;code&gt;crun&lt;/code&gt; needs to be added to the runtimes of the &lt;code&gt;nvidia-container-runtime&lt;/code&gt; in the config file at &lt;code&gt;/etc/nvidia-container-runtime/config.toml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[nvidia-container-runtime]
runtimes = ["crun", "docker-runc", "runc"]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then restart &lt;code&gt;CRI-O&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;sudo systemctl restart crio
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Enabling GPU Support in Kubernetes&lt;/h3&gt; 
&lt;p&gt;Once you have configured the options above on all the GPU nodes in your cluster, you can enable GPU support by deploying the following Daemonset:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl create -f https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/v0.17.1/deployments/static/nvidia-device-plugin.yml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This is a simple static daemonset meant to demonstrate the basic features of the &lt;code&gt;nvidia-device-plugin&lt;/code&gt;. Please see the instructions below for &lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#deployment-via-helm"&gt;Deployment via &lt;code&gt;helm&lt;/code&gt;&lt;/a&gt; when deploying the plugin in a production setting.&lt;/p&gt; 
&lt;h3&gt;Running GPU Jobs&lt;/h3&gt; 
&lt;p&gt;With the daemonset deployed, NVIDIA GPUs can now be requested by a container using the &lt;code&gt;nvidia.com/gpu&lt;/code&gt; resource type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cat &amp;lt;&amp;lt;EOF | kubectl apply -f -
apiVersion: v1
kind: Pod
metadata:
  name: gpu-pod
spec:
  restartPolicy: Never
  containers:
    - name: cuda-container
      image: nvcr.io/nvidia/k8s/cuda-sample:vectoradd-cuda12.5.0
      resources:
        limits:
          nvidia.com/gpu: 1 # requesting 1 GPU
  tolerations:
  - key: nvidia.com/gpu
    operator: Exists
    effect: NoSchedule
EOF
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ kubectl logs gpu-pod
[Vector addition of 50000 elements]
Copy input data from the host memory to the CUDA device
CUDA kernel launch with 196 blocks of 256 threads
Copy output data from the CUDA device to the host memory
Test PASSED
Done
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] If you do not request GPUs when you use the device plugin, the plugin exposes all the GPUs on the machine inside your container.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Configuring the NVIDIA device plugin binary&lt;/h2&gt; 
&lt;p&gt;The NVIDIA device plugin has a number of options that can be configured for it. These options can be configured as command line flags, environment variables, or via a config file when launching the device plugin. Here we explain what each of these options are and how to configure them directly against the plugin binary. The following section explains how to set these configurations when deploying the plugin via &lt;code&gt;helm&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;As command line flags or envvars&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Flag&lt;/th&gt; 
   &lt;th&gt;Environment Variable&lt;/th&gt; 
   &lt;th&gt;Default Value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--mig-strategy&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;$MIG_STRATEGY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;"none"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--fail-on-init-error&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;$FAIL_ON_INIT_ERROR&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--nvidia-driver-root&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;$NVIDIA_DRIVER_ROOT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;"/"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--pass-device-specs&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;$PASS_DEVICE_SPECS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--device-list-strategy&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;$DEVICE_LIST_STRATEGY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;"envvar"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--device-id-strategy&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;$DEVICE_ID_STRATEGY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;"uuid"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--config-file&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;$CONFIG_FILE&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;As a configuration file&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;version: v1
flags:
  migStrategy: "none"
  failOnInitError: true
  nvidiaDriverRoot: "/"
  plugin:
    passDeviceSpecs: false
    deviceListStrategy: "envvar"
    deviceIDStrategy: "uuid"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The configuration file has an explicit &lt;code&gt;plugin&lt;/code&gt; section because it is a shared configuration between the plugin and &lt;a href="https://github.com/NVIDIA/gpu-feature-discovery"&gt;&lt;code&gt;gpu-feature-discovery&lt;/code&gt;&lt;/a&gt;. All options inside the &lt;code&gt;plugin&lt;/code&gt; section are specific to the plugin. All options outside of this section are shared.&lt;/p&gt; 
&lt;h3&gt;Configuration Option Details&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;MIG_STRATEGY&lt;/code&gt;&lt;/strong&gt;: the desired strategy for exposing MIG devices on GPUs that support it&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;[none | single | mixed] (default 'none')&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;MIG_STRATEGY&lt;/code&gt; option configures the daemonset to be able to expose Multi-Instance GPUs (MIG) on GPUs that support them. More information on what these strategies are and how they should be used can be found in &lt;a href="https://docs.google.com/document/d/1mdgMQ8g7WmaI_XVVRrCvHPFPOMCm5LQD5JefgAh6N8g"&gt;Supporting Multi-Instance GPUs (MIG) in Kubernetes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; With a &lt;code&gt;MIG_STRATEGY&lt;/code&gt; of mixed, you will have additional resources available to you of the form &lt;code&gt;nvidia.com/mig-&amp;lt;slice_count&amp;gt;g.&amp;lt;memory_size&amp;gt;gb&lt;/code&gt; that you can set in your pod spec to get access to a specific MIG device.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;FAIL_ON_INIT_ERROR&lt;/code&gt;&lt;/strong&gt;: fail the plugin if an error is encountered during initialization, otherwise block indefinitely&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;(default 'true')&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;When set to true, the &lt;code&gt;FAIL_ON_INIT_ERROR&lt;/code&gt; option fails the plugin if an error is encountered during initialization. When set to false, it prints an error message and blocks the plugin indefinitely instead of failing. Blocking indefinitely follows legacy semantics that allow the plugin to deploy successfully on nodes that don't have GPUs on them (and aren't supposed to have GPUs on them) without throwing an error. In this way, you can blindly deploy a daemonset with the plugin on all nodes in your cluster, whether they have GPUs on them or not, without encountering an error. However, doing so means that there is no way to detect an actual error on nodes that are supposed to have GPUs on them. Failing if an initialization error is encountered is now the default and should be adopted by all new deployments.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;NVIDIA_DRIVER_ROOT&lt;/code&gt;&lt;/strong&gt;: the root path for the NVIDIA driver installation&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;(default '/')&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;When the NVIDIA drivers are installed directly on the host, this should be set to &lt;code&gt;'/'&lt;/code&gt;. When installed elsewhere (e.g. via a driver container), this should be set to the root filesystem where the drivers are installed (e.g. &lt;code&gt;'/run/nvidia/driver'&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This option is only necessary when used in conjunction with the &lt;code&gt;$PASS_DEVICE_SPECS&lt;/code&gt; option described below. It tells the plugin what prefix to add to any device file paths passed back as part of the device specs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;PASS_DEVICE_SPECS&lt;/code&gt;&lt;/strong&gt;: pass the paths and desired device node permissions for any NVIDIA devices being allocated to the container&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;(default 'false')&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This option exists for the sole purpose of allowing the device plugin to interoperate with the &lt;code&gt;CPUManager&lt;/code&gt; in Kubernetes. Setting this flag also requires one to deploy the daemonset with elevated privileges, so only do so if you know you need to interoperate with the &lt;code&gt;CPUManager&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;DEVICE_LIST_STRATEGY&lt;/code&gt;&lt;/strong&gt;: the desired strategy for passing the device list to the underlying runtime&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;[envvar | volume-mounts | cdi-annotations | cdi-cri ] (default 'envvar')&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Multiple device list strategies can be specified (as a comma-separated list).&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;DEVICE_LIST_STRATEGY&lt;/code&gt; flag allows one to choose which strategy the plugin will use to advertise the list of GPUs allocated to a container. Possible values are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;envvar&lt;/code&gt; (default): the &lt;code&gt;NVIDIA_VISIBLE_DEVICES&lt;/code&gt; environment variable as described &lt;a href="https://github.com/NVIDIA/nvidia-container-runtime#nvidia_visible_devices"&gt;here&lt;/a&gt; is used to select the devices that are to be injected by the NVIDIA Container Runtime.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;volume-mounts&lt;/code&gt;: the list of devices is passed as a set of volume mounts instead of as an environment variable to instruct the NVIDIA Container Runtime to inject the devices. Details for the rationale behind this strategy can be found &lt;a href="https://docs.google.com/document/d/1uXVF-NWZQXgP1MLb87_kMkQvidpnkNWicdpO2l9g-fw/edit#heading=h.b3ti65rojfy5"&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cdi-annotations&lt;/code&gt;: CDI annotations are used to select the devices that are to be injected. Note that this does not require the NVIDIA Container Runtime, but does required a CDI-enabled container engine.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cdi-cri&lt;/code&gt;: the &lt;code&gt;CDIDevices&lt;/code&gt; CRI field is used to select the CDI devices that are to be injected. This requires support in Kubernetes to forward these requests in the CRI to a CDI-enabled container engine.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;DEVICE_ID_STRATEGY&lt;/code&gt;&lt;/strong&gt;: the desired strategy for passing device IDs to the underlying runtime&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;[uuid | index] (default 'uuid')&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;DEVICE_ID_STRATEGY&lt;/code&gt; flag allows one to choose which strategy the plugin will use to pass the device ID of the GPUs allocated to a container. The device ID has traditionally been passed as the UUID of the GPU. This flag lets a user decide if they would like to use the UUID or the index of the GPU (as seen in the output of &lt;code&gt;nvidia-smi&lt;/code&gt;) as the identifier passed to the underlying runtime. Passing the index may be desirable in situations where pods that have been allocated GPUs by the plugin get restarted with different physical GPUs attached to them.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;CONFIG_FILE&lt;/code&gt;&lt;/strong&gt;: point the plugin at a configuration file instead of relying on command line flags or environment variables&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;(default '')&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The order of precedence for setting each option is (1) command line flag, (2) environment variable, (3) configuration file. In this way, one could use a pre-defined configuration file, but then override the values set in it at launch time. As described below, a &lt;code&gt;ConfigMap&lt;/code&gt; can be used to point the plugin at a desired configuration file when deploying via &lt;code&gt;helm&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Shared Access to GPUs&lt;/h3&gt; 
&lt;p&gt;The NVIDIA device plugin allows oversubscription of GPUs through a set of extended options in its configuration file. There are two flavors of sharing available: Time-Slicing and MPS.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Time-slicing and MPS are mutually exclusive.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;In the case of time-slicing, CUDA time-slicing is used to allow workloads sharing a GPU to interleave with each other. However, nothing special is done to isolate workloads that are granted replicas from the same underlying GPU, and each workload has access to the GPU memory and runs in the same fault-domain as of all the others (meaning if one workload crashes, they all do).&lt;/p&gt; 
&lt;p&gt;In the case of MPS, a control daemon is used to manage access to the shared GPU. In contrast to time-slicing, MPS does space partitioning and allows memory and compute resources to be explicitly partitioned and enforces these limits per workload.&lt;/p&gt; 
&lt;p&gt;With both time-slicing and MPS, the same sharing method is applied to all GPUs on a node. You cannot configure sharing on a per-GPU basis.&lt;/p&gt; 
&lt;h4&gt;With CUDA Time-Slicing&lt;/h4&gt; 
&lt;p&gt;The extended options for sharing using time-slicing can be seen below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;version: v1
sharing:
  timeSlicing:
    renameByDefault: &amp;lt;bool&amp;gt;
    failRequestsGreaterThanOne: &amp;lt;bool&amp;gt;
    resources:
    - name: &amp;lt;resource-name&amp;gt;
      replicas: &amp;lt;num-replicas&amp;gt;
    ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That is, for each named resource under &lt;code&gt;sharing.timeSlicing.resources&lt;/code&gt;, a number of replicas can now be specified for that resource type. These replicas represent the number of shared accesses that will be granted for a GPU represented by that resource type.&lt;/p&gt; 
&lt;p&gt;If &lt;code&gt;renameByDefault=true&lt;/code&gt;, then each resource will be advertised under the name &lt;code&gt;&amp;lt;resource-name&amp;gt;.shared&lt;/code&gt; instead of simply &lt;code&gt;&amp;lt;resource-name&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If &lt;code&gt;failRequestsGreaterThanOne=true&lt;/code&gt;, then the plugin will fail to allocate any shared resources to a container if they request more than one. The container’s pod will fail with an &lt;code&gt;UnexpectedAdmissionError&lt;/code&gt; and need to be manually deleted, updated, and redeployed.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;version: v1
sharing:
  timeSlicing:
    resources:
    - name: nvidia.com/gpu
      replicas: 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If this configuration were applied to a node with 8 GPUs on it, the plugin would now advertise 80 &lt;code&gt;nvidia.com/gpu&lt;/code&gt; resources to Kubernetes instead of 8.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ kubectl describe node
...
Capacity:
  nvidia.com/gpu: 80
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Likewise, if the following configuration were applied to a node, then 80 &lt;code&gt;nvidia.com/gpu.shared&lt;/code&gt; resources would be advertised to Kubernetes instead of 8 &lt;code&gt;nvidia.com/gpu&lt;/code&gt; resources.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;version: v1
sharing:
  timeSlicing:
    renameByDefault: true
    resources:
    - name: nvidia.com/gpu
      replicas: 10
    ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ kubectl describe node
...
Capacity:
  nvidia.com/gpu.shared: 80
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In both cases, the plugin simply creates 10 references to each GPU and indiscriminately hands them out to anyone that asks for them.&lt;/p&gt; 
&lt;p&gt;If &lt;code&gt;failRequestsGreaterThanOne=true&lt;/code&gt; were set in either of these configurations and a user requested more than one &lt;code&gt;nvidia.com/gpu&lt;/code&gt; or &lt;code&gt;nvidia.com/gpu.shared&lt;/code&gt; resource in their pod spec, then the container would fail with the resulting error:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ kubectl describe pod gpu-pod
...
Events:
  Type     Reason                    Age   From               Message
  ----     ------                    ----  ----               -------
  Warning  UnexpectedAdmissionError  13s   kubelet            Allocate failed due to rpc error: code = Unknown desc = request for 'nvidia.com/gpu: 2' too large: maximum request size for shared resources is 1, which is unexpected
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Unlike with "normal" GPU requests, requesting more than one shared GPU does not imply that you will get guaranteed access to a proportional amount of compute power. It only implies that you will get access to a GPU that is shared by other clients (each of which has the freedom to run as many processes on the underlying GPU as they want). Under the hood CUDA will simply give an equal share of time to all of the GPU processes across all of the clients. The &lt;code&gt;failRequestsGreaterThanOne&lt;/code&gt; flag is meant to help users understand this subtlety, by treating a request of &lt;code&gt;1&lt;/code&gt; as an access request rather than an exclusive resource request. Setting &lt;code&gt;failRequestsGreaterThanOne=true&lt;/code&gt; is recommended, but it is set to &lt;code&gt;false&lt;/code&gt; by default to retain backwards compatibility.&lt;/p&gt; 
&lt;p&gt;As of now, the only supported resource available for time-slicing are &lt;code&gt;nvidia.com/gpu&lt;/code&gt; as well as any of the resource types that emerge from configuring a node with the mixed MIG strategy.&lt;/p&gt; 
&lt;p&gt;For example, the full set of time-sliceable resources on a T4 card would be:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;nvidia.com/gpu
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And the full set of time-sliceable resources on an A100 40GB card would be:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;nvidia.com/gpu
nvidia.com/mig-1g.5gb
nvidia.com/mig-2g.10gb
nvidia.com/mig-3g.20gb
nvidia.com/mig-7g.40gb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Likewise, on an A100 80GB card, they would be:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;nvidia.com/gpu
nvidia.com/mig-1g.10gb
nvidia.com/mig-2g.20gb
nvidia.com/mig-3g.40gb
nvidia.com/mig-7g.80gb
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;With CUDA MPS&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] As of v0.15.0 of the device plugin, MPS support is considered experimental. Please see the &lt;a href="https://github.com/NVIDIA/k8s-device-plugin/releases/tag/v0.15.0"&gt;release notes&lt;/a&gt; for further details.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Sharing with MPS is currently not supported on devices with MIG enabled.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The extended options for sharing using MPS can be seen below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;version: v1
sharing:
  mps:
    renameByDefault: &amp;lt;bool&amp;gt;
    resources:
    - name: &amp;lt;resource-name&amp;gt;
      replicas: &amp;lt;num-replicas&amp;gt;
    ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That is, for each named resource under &lt;code&gt;sharing.mps.resources&lt;/code&gt;, a number of replicas can be specified for that resource type. As is the case with time-slicing, these replicas represent the number of shared accesses that will be granted for a GPU associated with that resource type. In contrast with time-slicing, the amount of memory allowed per client (i.e. per partition) is managed by the MPS control daemon and limited to an equal fraction of the total device memory. In addition to controlling the amount of memory that each client can consume, the MPS control daemon also limits the amount of compute capacity that can be consumed by a client.&lt;/p&gt; 
&lt;p&gt;If &lt;code&gt;renameByDefault=true&lt;/code&gt;, then each resource will be advertised under the name &lt;code&gt;&amp;lt;resource-name&amp;gt;.shared&lt;/code&gt; instead of simply &lt;code&gt;&amp;lt;resource-name&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;version: v1
sharing:
  mps:
    resources:
    - name: nvidia.com/gpu
      replicas: 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If this configuration were applied to a node with 8 GPUs on it, the plugin would now advertise 80 &lt;code&gt;nvidia.com/gpu&lt;/code&gt; resources to Kubernetes instead of 8.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ kubectl describe node
...
Capacity:
  nvidia.com/gpu: 80
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Likewise, if the following configuration were applied to a node, then 80 &lt;code&gt;nvidia.com/gpu.shared&lt;/code&gt; resources would be advertised to Kubernetes instead of 8 &lt;code&gt;nvidia.com/gpu&lt;/code&gt; resources.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;version: v1
sharing:
  mps:
    renameByDefault: true
    resources:
    - name: nvidia.com/gpu
      replicas: 10
    ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ kubectl describe node
...
Capacity:
  nvidia.com/gpu.shared: 80
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Furthermore, each of these resources -- either &lt;code&gt;nvidia.com/gpu&lt;/code&gt; or &lt;code&gt;nvidia.com/gpu.shared&lt;/code&gt; -- would have access to the same fraction (1/10) of the total memory and compute resources of the GPU.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: As of now, the only supported resource available for MPS are &lt;code&gt;nvidia.com/gpu&lt;/code&gt; resources and only with full GPUs.&lt;/p&gt; 
&lt;h3&gt;IMEX Support&lt;/h3&gt; 
&lt;p&gt;The NVIDIA GPU Device Plugin can be configured to inject IMEX channels into workloads.&lt;/p&gt; 
&lt;p&gt;This opt-in behavior is global and affects all workloads and is controlled by the &lt;code&gt;imex.channelIDs&lt;/code&gt; and &lt;code&gt;imex.required&lt;/code&gt; configuration options.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;code&gt;imex.channelIDs&lt;/code&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;imex.required&lt;/code&gt;&lt;/th&gt; 
   &lt;th&gt;Effect&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;*&lt;/td&gt; 
   &lt;td&gt;(default) No IMEX channels are added to workload requests. Note that the &lt;code&gt;imex.required&lt;/code&gt; field has no effect in this case&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;[0]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;If the requested IMEX channel (&lt;code&gt;0&lt;/code&gt;) is discoverable by the NVIDIA GPU Device Plugin, the channel will be added to each workload request. If the channel cannot be discovered no channels are added to workload requests.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;[0]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;If the requested IMEX channel (&lt;code&gt;0&lt;/code&gt;) is discoverable by the NVIDIA GPU Device Plugin, the channel will be added to each workload request. If the channel cannot be discovered an error will be raised since the channel was marked as &lt;code&gt;required&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: At present the only valid &lt;code&gt;imex.channelIDs&lt;/code&gt; configurations are &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;[0]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For the containerized NVIDIA GPU Device Plugin running to be able to successfully discover available IMEX channels, the corresponding device nodes must be available to the container.&lt;/p&gt; 
&lt;h2&gt;Catalog of Labels&lt;/h2&gt; 
&lt;p&gt;The NVIDIA device plugin reads and writes a number of different labels that it uses as either configuration elements or informational elements. The following table documents and describes each label along with their use. See the related table &lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/docs/gpu-feature-discovery/README.md#generated-labels"&gt;here&lt;/a&gt; for the labels GFD adds.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Label Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nvidia.com/device-plugin.config&lt;/td&gt; 
   &lt;td&gt;Specifies the configuration to apply to the node. You apply this this label to perform per-node configuration. Refer to &lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#updating-per-node-configuration-with-a-node-label"&gt;Updating Per-Node Configuration With a Node Label&lt;/a&gt; for details.&lt;/td&gt; 
   &lt;td&gt;my-mps-config&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nvidia.com/gpu.sharing-strategy&lt;/td&gt; 
   &lt;td&gt;Specifies the sharing strategy. The default value, &lt;code&gt;none&lt;/code&gt;, indicates no sharing. Other values are &lt;code&gt;mps&lt;/code&gt; and &lt;code&gt;time-slicing&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;time-slicing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nvidia.com/mig.capable&lt;/td&gt; 
   &lt;td&gt;Specifies if any device on the node supports MIG.&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nvidia.com/mps.capable&lt;/td&gt; 
   &lt;td&gt;Specifies if devices on the node are configured for MPS.&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nvidia.com/vgpu.present&lt;/td&gt; 
   &lt;td&gt;Specifies if devices on the node use vGPU.&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nvidia.com/vgpu.host-driver-branch&lt;/td&gt; 
   &lt;td&gt;Specifies the vGPU host driver branch on the underlying hypervisor.&lt;/td&gt; 
   &lt;td&gt;r550_40&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nvidia.com/vgpu.host-driver-version&lt;/td&gt; 
   &lt;td&gt;Specifies the vGPU host driver version on the underlying hypervisor.&lt;/td&gt; 
   &lt;td&gt;550.54.16&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Deployment via &lt;code&gt;helm&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;The preferred method to deploy the device plugin is as a daemonset using &lt;code&gt;helm&lt;/code&gt;. Instructions for installing &lt;code&gt;helm&lt;/code&gt; can be found &lt;a href="https://helm.sh/docs/intro/install/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Begin by setting up the plugin's &lt;code&gt;helm&lt;/code&gt; repository and updating it at follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;helm repo add nvdp https://nvidia.github.io/k8s-device-plugin
helm repo update
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then verify that the latest release (&lt;code&gt;v0.17.1&lt;/code&gt;) of the plugin is available:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ helm search repo nvdp --devel
NAME                     	  CHART VERSION  APP VERSION	DESCRIPTION
nvdp/nvidia-device-plugin	  0.17.1	 0.17.1		A Helm chart for ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once this repo is updated, you can begin installing packages from it to deploy the &lt;code&gt;nvidia-device-plugin&lt;/code&gt; helm chart.&lt;/p&gt; 
&lt;p&gt;The most basic installation command without any options is then:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;helm upgrade -i nvdp nvdp/nvidia-device-plugin \
  --namespace nvidia-device-plugin \
  --create-namespace \
  --version 0.17.1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You only need the to pass the &lt;code&gt;--devel&lt;/code&gt; flag to &lt;code&gt;helm search repo&lt;/code&gt; and the &lt;code&gt;--version&lt;/code&gt; flag to &lt;code&gt;helm upgrade -i&lt;/code&gt; if this is a pre-release version (e.g. &lt;code&gt;&amp;lt;version&amp;gt;-rc.1&lt;/code&gt;). Full releases will be listed without this.&lt;/p&gt; 
&lt;h3&gt;Configuring the device plugin's &lt;code&gt;helm&lt;/code&gt; chart&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;helm&lt;/code&gt; chart for the latest release of the plugin (&lt;code&gt;v0.17.1&lt;/code&gt;) includes a number of customizable values.&lt;/p&gt; 
&lt;p&gt;Prior to &lt;code&gt;v0.12.0&lt;/code&gt; the most commonly used values were those that had direct mappings to the command line options of the plugin binary. As of &lt;code&gt;v0.12.0&lt;/code&gt;, the preferred method to set these options is via a &lt;code&gt;ConfigMap&lt;/code&gt;. The primary use case of the original values is then to override an option from the &lt;code&gt;ConfigMap&lt;/code&gt; if desired. Both methods are discussed in more detail below.&lt;/p&gt; 
&lt;p&gt;The full set of values that can be set are found here: &lt;a href="https://github.com/NVIDIA/k8s-device-plugin/raw/v0.17.1/deployments/helm/nvidia-device-plugin/values.yaml"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Passing configuration to the plugin via a &lt;code&gt;ConfigMap&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;In general, we provide a mechanism to pass &lt;em&gt;multiple&lt;/em&gt; configuration files to to the plugin's &lt;code&gt;helm&lt;/code&gt; chart, with the ability to choose which configuration file should be applied to a node via a node label.&lt;/p&gt; 
&lt;p&gt;In this way, a single chart can be used to deploy each component, but custom configurations can be applied to different nodes throughout the cluster.&lt;/p&gt; 
&lt;p&gt;There are two ways to provide a &lt;code&gt;ConfigMap&lt;/code&gt; for use by the plugin:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Via an external reference to a pre-defined &lt;code&gt;ConfigMap&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;As a set of named config files to build an integrated &lt;code&gt;ConfigMap&lt;/code&gt; associated with the chart&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;These can be set via the chart values &lt;code&gt;config.name&lt;/code&gt; and &lt;code&gt;config.map&lt;/code&gt; respectively. In both cases, the value &lt;code&gt;config.default&lt;/code&gt; can be set to point to one of the named configs in the &lt;code&gt;ConfigMap&lt;/code&gt; and provide a default configuration for nodes that have not been customized via a node label (more on this later).&lt;/p&gt; 
&lt;h5&gt;Single Config File Example&lt;/h5&gt; 
&lt;p&gt;As an example, create a valid config file on your local filesystem, such as the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; /tmp/dp-example-config0.yaml
version: v1
flags:
  migStrategy: "none"
  failOnInitError: true
  nvidiaDriverRoot: "/"
  plugin:
    passDeviceSpecs: false
    deviceListStrategy: envvar
    deviceIDStrategy: uuid
EOF
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And deploy the device plugin via helm (pointing it at this config file and giving it a name):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;helm upgrade -i nvdp nvdp/nvidia-device-plugin \
  --version=0.17.1 \
  --namespace nvidia-device-plugin \
  --create-namespace \
  --set-file config.map.config=/tmp/dp-example-config0.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Under the hood this will deploy a &lt;code&gt;ConfigMap&lt;/code&gt; associated with the plugin and put the contents of the &lt;code&gt;dp-example-config0.yaml&lt;/code&gt; file into it, using the name &lt;code&gt;config&lt;/code&gt; as its key. It will then start the plugin such that this config gets applied when the plugin comes online.&lt;/p&gt; 
&lt;p&gt;If you don’t want the plugin’s helm chart to create the &lt;code&gt;ConfigMap&lt;/code&gt; for you, you can also point it at a pre-created &lt;code&gt;ConfigMap&lt;/code&gt; as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl create ns nvidia-device-plugin
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl create cm -n nvidia-device-plugin nvidia-plugin-configs \
  --from-file=config=/tmp/dp-example-config0.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;helm upgrade -i nvdp nvdp/nvidia-device-plugin \
  --version=0.17.1 \
  --namespace nvidia-device-plugin \
  --create-namespace \
  --set config.name=nvidia-plugin-configs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Multiple Config File Example&lt;/h5&gt; 
&lt;p&gt;For multiple config files, the procedure is similar.&lt;/p&gt; 
&lt;p&gt;Create a second &lt;code&gt;config&lt;/code&gt; file with the following contents:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; /tmp/dp-example-config1.yaml
version: v1
flags:
  migStrategy: "mixed" # Only change from config0.yaml
  failOnInitError: true
  nvidiaDriverRoot: "/"
  plugin:
    passDeviceSpecs: false
    deviceListStrategy: envvar
    deviceIDStrategy: uuid
EOF
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And redeploy the device plugin via helm (pointing it at both configs with a specified default).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;helm upgrade -i nvdp nvdp/nvidia-device-plugin \
  --version=0.17.1 \
  --namespace nvidia-device-plugin \
  --create-namespace \
  --set config.default=config0 \
  --set-file config.map.config0=/tmp/dp-example-config0.yaml \
  --set-file config.map.config1=/tmp/dp-example-config1.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As before, this can also be done with a pre-created &lt;code&gt;ConfigMap&lt;/code&gt; if desired:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl create ns nvidia-device-plugin
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl create cm -n nvidia-device-plugin nvidia-plugin-configs \
  --from-file=config0=/tmp/dp-example-config0.yaml \
  --from-file=config1=/tmp/dp-example-config1.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;helm upgrade -i nvdp nvdp/nvidia-device-plugin \
  --version=0.17.1 \
  --namespace nvidia-device-plugin \
  --create-namespace \
  --set config.default=config0 \
  --set config.name=nvidia-plugin-configs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If the &lt;code&gt;config.default&lt;/code&gt; flag is not explicitly set, then a default value will be inferred from the config if one of the config names is set to '&lt;code&gt;default&lt;/code&gt;'. If neither of these are set, then the deployment will fail unless there is only &lt;strong&gt;&lt;em&gt;one&lt;/em&gt;&lt;/strong&gt; config provided. In the case of just a single config being provided, it will be chosen as the default because there is no other option.&lt;/p&gt; 
&lt;h5&gt;Updating Per-Node Configuration With a Node Label&lt;/h5&gt; 
&lt;p&gt;With this setup, plugins on all nodes will have &lt;code&gt;config0&lt;/code&gt; configured for them by default. However, the following label can be set to change which configuration is applied:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl label nodes &amp;lt;node-name&amp;gt; –-overwrite \
  nvidia.com/device-plugin.config=&amp;lt;config-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, applying a custom config for all nodes that have T4 GPUs installed on them might be:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl label node \
  --overwrite \
  --selector=nvidia.com/gpu.product=TESLA-T4 \
  nvidia.com/device-plugin.config=t4-config
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This label can be applied either &lt;em&gt;before&lt;/em&gt; or &lt;em&gt;after&lt;/em&gt; the plugin is started to get the desired configuration applied on the node. Anytime it changes value, the plugin will immediately be updated to start serving the desired configuration. If it is set to an unknown value, it will skip reconfiguration. If it is ever unset, it will fallback to the default.&lt;/p&gt; 
&lt;h4&gt;Setting other helm chart values&lt;/h4&gt; 
&lt;p&gt;As mentioned previously, the device plugin's helm chart continues to provide direct values to set the configuration options of the plugin without using a &lt;code&gt;ConfigMap&lt;/code&gt;. These should only be used to set globally applicable options (which should then never be embedded in the set of config files provided by the &lt;code&gt;ConfigMap&lt;/code&gt;), or used to override these options as desired.&lt;/p&gt; 
&lt;p&gt;These values are as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;  migStrategy:
      the desired strategy for exposing MIG devices on GPUs that support it
      [none | single | mixed] (default "none")
  failOnInitError:
      fail the plugin if an error is encountered during initialization, otherwise block indefinitely
      (default 'true')
  compatWithCPUManager:
      run with escalated privileges to be compatible with the static CPUManager policy
      (default 'false')
  deviceListStrategy:
      the desired strategy for passing the device list to the underlying runtime
      [envvar | volume-mounts | cdi-annotations | cdi-cri] (default "envvar")
  deviceIDStrategy:
      the desired strategy for passing device IDs to the underlying runtime
      [uuid | index] (default "uuid")
  nvidiaDriverRoot:
      the root path for the NVIDIA driver installation (typical values are '/' or '/run/nvidia/driver')
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; There is no value that directly maps to the &lt;code&gt;PASS_DEVICE_SPECS&lt;/code&gt; configuration option of the plugin. Instead a value called &lt;code&gt;compatWithCPUManager&lt;/code&gt; is provided which acts as a proxy for this option. It both sets the &lt;code&gt;PASS_DEVICE_SPECS&lt;/code&gt; option of the plugin to true &lt;strong&gt;AND&lt;/strong&gt; makes sure that the plugin is started with elevated privileges to ensure proper compatibility with the &lt;code&gt;CPUManager&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Besides these custom configuration options for the plugin, other standard helm chart values that are commonly overridden are:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;runtimeClassName:
  the runtimeClassName to use, for use with clusters that have multiple runtimes. (typical value is 'nvidia')
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please take a look in the &lt;a href="https://github.com/NVIDIA/k8s-device-plugin/raw/v0.17.1/deployments/helm/nvidia-device-plugin/values.yaml"&gt;&lt;code&gt;values.yaml&lt;/code&gt;&lt;/a&gt; file to see the full set of overridable parameters for the device plugin.&lt;/p&gt; 
&lt;p&gt;Examples of setting these options include:&lt;/p&gt; 
&lt;p&gt;Enabling compatibility with the &lt;code&gt;CPUManager&lt;/code&gt; and running with a request for 100ms of CPU time and a limit of 512MB of memory.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;helm upgrade -i nvdp nvdp/nvidia-device-plugin \
  --version=0.17.1 \
  --namespace nvidia-device-plugin \
  --create-namespace \
  --set compatWithCPUManager=true \
  --set resources.requests.cpu=100m \
  --set resources.limits.memory=512Mi
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Enabling compatibility with the &lt;code&gt;CPUManager&lt;/code&gt; and the &lt;code&gt;mixed&lt;/code&gt; &lt;code&gt;migStrategy&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;helm upgrade -i nvdp nvdp/nvidia-device-plugin \
  --version=0.17.1 \
  --namespace nvidia-device-plugin \
  --create-namespace \
  --set compatWithCPUManager=true \
  --set migStrategy=mixed
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Deploying with gpu-feature-discovery for automatic node labels&lt;/h4&gt; 
&lt;p&gt;As of &lt;code&gt;v0.12.0&lt;/code&gt;, the device plugin's helm chart has integrated support to deploy &lt;a href="https://github.com/NVIDIA/gpu-feature-discovery"&gt;&lt;code&gt;gpu-feature-discovery&lt;/code&gt;&lt;/a&gt; (GFD). You can use GFD to automatically generate labels for the set of GPUs available on a node. Under the hood, it leverages &lt;a href="https://kubernetes-sigs.github.io/node-feature-discovery/stable/get-started/index.html"&gt;Node Feature Discovery&lt;/a&gt; to perform this labeling.&lt;/p&gt; 
&lt;p&gt;To enable it, simply set &lt;code&gt;gfd.enabled=true&lt;/code&gt; during helm install.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;helm upgrade -i nvdp nvdp/nvidia-device-plugin \
  --version=0.17.1 \
  --namespace nvidia-device-plugin \
  --create-namespace \
  --set gfd.enabled=true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Under the hood this will also deploy &lt;a href="https://github.com/kubernetes-sigs/node-feature-discovery"&gt;&lt;code&gt;node-feature-discovery&lt;/code&gt;&lt;/a&gt; (NFD) since it is a prerequisite of GFD. If you already have NFD deployed on your cluster and do not wish for it to be pulled in by this installation, you can disable it with &lt;code&gt;nfd.enabled=false&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In addition to the standard node labels applied by GFD, the following label will also be included when deploying the plugin with the time-slicing or MPS extensions described &lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/#shared-access-to-gpus"&gt;above&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;nvidia.com/&amp;lt;resource-name&amp;gt;.replicas = &amp;lt;num-replicas&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Additionally, the &lt;code&gt;nvidia.com/&amp;lt;resource-name&amp;gt;.product&lt;/code&gt; will be modified as follows if &lt;code&gt;renameByDefault=false&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;nvidia.com/&amp;lt;resource-name&amp;gt;.product = &amp;lt;product name&amp;gt;-SHARED
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using these labels, users have a way of selecting a shared vs. non-shared GPU in the same way they would traditionally select one GPU model over another. That is, the &lt;code&gt;SHARED&lt;/code&gt; annotation ensures that a &lt;code&gt;nodeSelector&lt;/code&gt; can be used to attract pods to nodes that have shared GPUs on them.&lt;/p&gt; 
&lt;p&gt;Since having &lt;code&gt;renameByDefault=true&lt;/code&gt; already encodes the fact that the resource is shared on the resource name, there is no need to annotate the product name with &lt;code&gt;SHARED&lt;/code&gt;. Users can already find the shared resources they need by simply requesting it in their pod spec.&lt;/p&gt; 
&lt;p&gt;Note: When running with &lt;code&gt;renameByDefault=false&lt;/code&gt; and &lt;code&gt;migStrategy=single&lt;/code&gt; both the MIG profile name and the new &lt;code&gt;SHARED&lt;/code&gt; annotation will be appended to the product name, e.g.:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;nvidia.com/gpu.product = A100-SXM4-40GB-MIG-1g.5gb-SHARED
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Deploying gpu-feature-discovery in standalone mode&lt;/h4&gt; 
&lt;p&gt;As of v0.15.0, the device plugin's helm chart has integrated support to deploy &lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/docs/gpu-feature-discovery/README.md#overview"&gt;&lt;code&gt;gpu-feature-discovery&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;When gpu-feature-discovery in deploying standalone, begin by setting up the plugin's &lt;code&gt;helm&lt;/code&gt; repository and updating it at follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;helm repo add nvdp https://nvidia.github.io/k8s-device-plugin
helm repo update
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then verify that the latest release (&lt;code&gt;v0.17.1&lt;/code&gt;) of the plugin is available (Note that this includes the GFD chart):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;helm search repo nvdp --devel
NAME                     	  CHART VERSION  APP VERSION	DESCRIPTION
nvdp/nvidia-device-plugin	  0.17.1	 0.17.1		A Helm chart for ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once this repo is updated, you can begin installing packages from it to deploy the &lt;code&gt;gpu-feature-discovery&lt;/code&gt; component in standalone mode.&lt;/p&gt; 
&lt;p&gt;The most basic installation command without any options is then:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;helm upgrade -i nvdp nvdp/nvidia-device-plugin \
  --version 0.17.1 \
  --namespace gpu-feature-discovery \
  --create-namespace \
  --set devicePlugin.enabled=false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Disabling auto-deployment of NFD and running with a MIG strategy of 'mixed' in the default namespace.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;helm upgrade -i nvdp nvdp/nvidia-device-plugin \
    --version=0.17.1 \
    --set allowDefaultNamespace=true \
    --set nfd.enabled=false \
    --set migStrategy=mixed \
    --set devicePlugin.enabled=false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You only need the to pass the &lt;code&gt;--devel&lt;/code&gt; flag to &lt;code&gt;helm search repo&lt;/code&gt; and the &lt;code&gt;--version&lt;/code&gt; flag to &lt;code&gt;helm upgrade -i&lt;/code&gt; if this is a pre-release version (e.g. &lt;code&gt;&amp;lt;version&amp;gt;-rc.1&lt;/code&gt;). Full releases will be listed without this.&lt;/p&gt; 
&lt;h3&gt;Deploying via &lt;code&gt;helm install&lt;/code&gt; with a direct URL to the &lt;code&gt;helm&lt;/code&gt; package&lt;/h3&gt; 
&lt;p&gt;If you prefer not to install from the &lt;code&gt;nvidia-device-plugin&lt;/code&gt; &lt;code&gt;helm&lt;/code&gt; repo, you can run &lt;code&gt;helm install&lt;/code&gt; directly against the tarball of the plugin's &lt;code&gt;helm&lt;/code&gt; package. The example below installs the same chart as the method above, except that it uses a direct URL to the &lt;code&gt;helm&lt;/code&gt; chart instead of via the &lt;code&gt;helm&lt;/code&gt; repo.&lt;/p&gt; 
&lt;p&gt;Using the default values for the flags:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;helm upgrade -i nvdp \
  --namespace nvidia-device-plugin \
  --create-namespace \
  https://nvidia.github.io/k8s-device-plugin/stable/nvidia-device-plugin-0.17.1.tgz
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Building and Running Locally&lt;/h2&gt; 
&lt;p&gt;The next sections are focused on building the device plugin locally and running it. It is intended purely for development and testing, and not required by most users. It assumes you are pinning to the latest release tag (i.e. &lt;code&gt;v0.17.1&lt;/code&gt;), but can easily be modified to work with any available tag or branch.&lt;/p&gt; 
&lt;h3&gt;With Docker&lt;/h3&gt; 
&lt;h4&gt;Build&lt;/h4&gt; 
&lt;p&gt;Option 1, pull the prebuilt image from &lt;a href="https://hub.docker.com/r/nvidia/k8s-device-plugin"&gt;Docker Hub&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker pull nvcr.io/nvidia/k8s-device-plugin:v0.17.1
docker tag nvcr.io/nvidia/k8s-device-plugin:v0.17.1 nvcr.io/nvidia/k8s-device-plugin:devel
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Option 2, build without cloning the repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker build \
  -t nvcr.io/nvidia/k8s-device-plugin:devel \
  -f deployments/container/Dockerfile.ubuntu \
  https://github.com/NVIDIA/k8s-device-plugin.git#v0.17.1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Option 3, if you want to modify the code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/NVIDIA/k8s-device-plugin.git &amp;amp;&amp;amp; cd k8s-device-plugin
docker build \
  -t nvcr.io/nvidia/k8s-device-plugin:devel \
  -f deployments/container/Dockerfile.ubuntu \
  .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Run&lt;/h4&gt; 
&lt;p&gt;Without compatibility for the &lt;code&gt;CPUManager&lt;/code&gt; static policy:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker run \
  -it \
  --security-opt=no-new-privileges \
  --cap-drop=ALL \
  --network=none \
  -v /var/lib/kubelet/device-plugins:/var/lib/kubelet/device-plugins \
  nvcr.io/nvidia/k8s-device-plugin:devel
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With compatibility for the &lt;code&gt;CPUManager&lt;/code&gt; static policy:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker run \
  -it \
  --privileged \
  --network=none \
  -v /var/lib/kubelet/device-plugins:/var/lib/kubelet/device-plugins \
  nvcr.io/nvidia/k8s-device-plugin:devel --pass-device-specs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Without Docker&lt;/h3&gt; 
&lt;h4&gt;Build&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;C_INCLUDE_PATH=/usr/local/cuda/include LIBRARY_PATH=/usr/local/cuda/lib64 go build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Run&lt;/h4&gt; 
&lt;p&gt;Without compatibility for the &lt;code&gt;CPUManager&lt;/code&gt; static policy:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;./k8s-device-plugin
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With compatibility for the &lt;code&gt;CPUManager&lt;/code&gt; static policy:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;./k8s-device-plugin --pass-device-specs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/CHANGELOG.md"&gt;changelog&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Issues and Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/main/CONTRIBUTING.md"&gt;Checkout the Contributing document!&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can report a bug by &lt;a href="https://github.com/NVIDIA/k8s-device-plugin/issues/new"&gt;filing a new issue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;You can contribute by opening a &lt;a href="https://help.github.com/articles/using-pull-requests/"&gt;pull request&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Versioning&lt;/h3&gt; 
&lt;p&gt;Before v1.10 the versioning scheme of the device plugin had to match exactly the version of Kubernetes. After the promotion of device plugins to beta this condition was was no longer required. We quickly noticed that this versioning scheme was very confusing for users as they still expected to see a version of the device plugin for each version of Kubernetes.&lt;/p&gt; 
&lt;p&gt;This versioning scheme applies to the tags &lt;code&gt;v1.8&lt;/code&gt;, &lt;code&gt;v1.9&lt;/code&gt;, &lt;code&gt;v1.10&lt;/code&gt;, &lt;code&gt;v1.11&lt;/code&gt;, &lt;code&gt;v1.12&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;We have now changed the versioning to follow &lt;a href="https://semver.org/"&gt;SEMVER&lt;/a&gt;. The first version following this scheme has been tagged &lt;code&gt;v0.0.0&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Going forward, the major version of the device plugin will only change following a change in the device plugin API itself. For example, version &lt;code&gt;v1beta1&lt;/code&gt; of the device plugin API corresponds to version &lt;code&gt;v0.x.x&lt;/code&gt; of the device plugin. If a new &lt;code&gt;v2beta2&lt;/code&gt; version of the device plugin API comes out, then the device plugin will increase its major version to &lt;code&gt;1.x.x&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;As of now, the device plugin API for Kubernetes &amp;gt;= v1.10 is &lt;code&gt;v1beta1&lt;/code&gt;. If you have a version of Kubernetes &amp;gt;= 1.10 you can deploy any device plugin version &amp;gt; &lt;code&gt;v0.0.0&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Upgrading Kubernetes with the Device Plugin&lt;/h3&gt; 
&lt;p&gt;Upgrading Kubernetes when you have a device plugin deployed doesn't require you to do any, particular changes to your workflow. The API is versioned and is pretty stable (though it is not guaranteed to be non breaking). Starting with Kubernetes version 1.10, you can use &lt;code&gt;v0.3.0&lt;/code&gt; of the device plugin to perform upgrades, and Kubernetes won't require you to deploy a different version of the device plugin. Once a node comes back online after the upgrade, you will see GPUs re-registering themselves automatically.&lt;/p&gt; 
&lt;p&gt;Upgrading the device plugin itself is a more complex task. It is recommended to drain GPU tasks as we cannot guarantee that GPU tasks will survive a rolling upgrade. However we make best efforts to preserve GPU tasks during an upgrade.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>googleapis/google-cloud-go</title>
      <link>https://github.com/googleapis/google-cloud-go</link>
      <description>&lt;p&gt;Google Cloud Client Libraries for Go.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google Cloud Client Libraries for Go&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/cloud.google.com/go"&gt;&lt;img src="https://pkg.go.dev/badge/cloud.google.com/go.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Go packages for &lt;a href="https://cloud.google.com"&gt;Google Cloud Platform&lt;/a&gt; services.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go get cloud.google.com/go/firestore@latest # Replace firestore with the package you want to use.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Some of these packages are under development, and may occasionally make backwards-incompatible changes.&lt;/p&gt; 
&lt;h2&gt;Supported APIs&lt;/h2&gt; 
&lt;p&gt;For an updated list of all of our released APIs please see our &lt;a href="https://cloud.google.com/go/docs/reference"&gt;reference docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/google-cloud-go/main/#supported-versions"&gt;Go Versions Supported&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Our libraries are compatible with the two most recent major Go releases, the same &lt;a href="https://go.dev/doc/devel/release#policy"&gt;policy&lt;/a&gt; the Go programming language follows. This means the currently supported versions are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go 1.24&lt;/li&gt; 
 &lt;li&gt;Go 1.25&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Authentication&lt;/h2&gt; 
&lt;p&gt;By default, each client library will use &lt;a href="https://developers.google.com/identity/protocols/application-default-credentials"&gt;Application Default Credentials&lt;/a&gt; (ADC) to automatically configure the credentials used in calling the API endpoint. When using the libraries in a Google Cloud Platform environment such as Compute Engine, Kubernetes Engine, or App Engine, no additional authentication steps are necessary. See &lt;a href="https://cloud.google.com/docs/authentication"&gt;Authentication methods at Google&lt;/a&gt; and &lt;a href="https://cloud.google.com/docs/authentication/client-libraries"&gt;Authenticate for using client libraries&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;client, err := storage.NewClient(ctx)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For applications running elsewhere, such as your local development environment, you can use the &lt;code&gt;gcloud auth application-default login&lt;/code&gt; command from the &lt;a href="https://cloud.google.com/cli"&gt;Google Cloud CLI&lt;/a&gt; to set user credentials in your local filesystem. Application Default Credentials will automatically detect these credentials. See &lt;a href="https://cloud.google.com/docs/authentication/set-up-adc-local-dev-environment"&gt;Set up ADC for a local development environment&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;Alternately, you may need to provide an explicit path to your credentials. To authenticate using a &lt;a href="https://cloud.google.com/docs/authentication#service-accounts"&gt;service account&lt;/a&gt; key file, either set the &lt;code&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/code&gt; environment variable to the path to your key file, or programmatically pass &lt;a href="https://pkg.go.dev/google.golang.org/api/option#WithCredentialsFile"&gt;&lt;code&gt;option.WithCredentialsFile&lt;/code&gt;&lt;/a&gt; to the &lt;code&gt;NewClient&lt;/code&gt; function of the desired package. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;client, err := storage.NewClient(ctx, option.WithCredentialsFile("path/to/keyfile.json"))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can exert even more control over authentication by using the &lt;a href="https://pkg.go.dev/cloud.google.com/go/auth/credentials"&gt;credentials&lt;/a&gt; package to create an &lt;a href="https://pkg.go.dev/cloud.google.com/go/auth#Credentials"&gt;auth.Credentials&lt;/a&gt;. Then pass &lt;a href="https://pkg.go.dev/google.golang.org/api/option#WithAuthCredentials"&gt;&lt;code&gt;option.WithAuthCredentials&lt;/code&gt;&lt;/a&gt; to the &lt;code&gt;NewClient&lt;/code&gt; function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;creds, err := credentials.DetectDefault(&amp;amp;credentials.DetectOptions{...})
...
client, err := storage.NewClient(ctx, option.WithAuthCredentials(creds))
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome. Please, see the &lt;a href="https://github.com/GoogleCloudPlatform/google-cloud-go/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; document for details.&lt;/p&gt; 
&lt;p&gt;Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms. See &lt;a href="https://github.com/GoogleCloudPlatform/google-cloud-go/raw/main/CONTRIBUTING.md#contributor-code-of-conduct"&gt;Contributor Code of Conduct&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/go/home"&gt;Go on Google Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/go/getting-started"&gt;Getting started with Go on Google Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/appengine/docs/standard/go/quickstart"&gt;App Engine Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/functions/docs/quickstart-go"&gt;Cloud Functions Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/run/docs/quickstarts/build-and-deploy#go"&gt;Cloud Run Quickstart&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>helm/helm</title>
      <link>https://github.com/helm/helm</link>
      <description>&lt;p&gt;The Kubernetes Package Manager&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Helm&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/helm/helm/actions?workflow=release"&gt;&lt;img src="https://github.com/helm/helm/workflows/release/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/helm.sh/helm/v4"&gt;&lt;img src="https://goreportcard.com/badge/helm.sh/helm/v4" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/helm.sh/helm/v4"&gt;&lt;img src="https://img.shields.io/static/v1?label=godoc&amp;amp;message=reference&amp;amp;color=blue" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/3131"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/3131/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/helm/helm"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/helm/helm/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://insights.linuxfoundation.org/project/helm"&gt;&lt;img src="https://insights.production.lfx.dev/api/badge/health-score?project=helm" alt="LFX Health Score" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Helm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources.&lt;/p&gt; 
&lt;p&gt;Use Helm to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find and use &lt;a href="https://artifacthub.io/packages/search?kind=0"&gt;popular software packaged as Helm Charts&lt;/a&gt; to run in Kubernetes&lt;/li&gt; 
 &lt;li&gt;Share your own applications as Helm Charts&lt;/li&gt; 
 &lt;li&gt;Create reproducible builds of your Kubernetes applications&lt;/li&gt; 
 &lt;li&gt;Intelligently manage your Kubernetes manifest files&lt;/li&gt; 
 &lt;li&gt;Manage releases of Helm packages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Helm in a Handbasket&lt;/h2&gt; 
&lt;p&gt;Helm is a tool that streamlines installing and managing Kubernetes applications. Think of it like apt/yum/homebrew for Kubernetes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Helm renders your templates and communicates with the Kubernetes API&lt;/li&gt; 
 &lt;li&gt;Helm runs on your laptop, CI/CD, or wherever you want it to run.&lt;/li&gt; 
 &lt;li&gt;Charts are Helm packages that contain at least two things: 
  &lt;ul&gt; 
   &lt;li&gt;A description of the package (&lt;code&gt;Chart.yaml&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;One or more templates, which contain Kubernetes manifest files&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Charts can be stored on disk, or fetched from remote chart repositories (like Debian or RedHat packages)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Helm Development and Stable Versions&lt;/h2&gt; 
&lt;p&gt;Helm v4 is currently under development on the &lt;code&gt;main&lt;/code&gt; branch. This is unstable and the APIs within the Go SDK and at the command line are changing. Helm v3 (current stable) is maintained on the &lt;code&gt;dev-v3&lt;/code&gt; branch. APIs there follow semantic versioning.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;Binary downloads of the Helm client can be found on &lt;a href="https://github.com/helm/helm/releases/latest"&gt;the Releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Unpack the &lt;code&gt;helm&lt;/code&gt; binary and add it to your PATH and you are good to go!&lt;/p&gt; 
&lt;p&gt;If you want to use a package manager:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt; users can use &lt;code&gt;brew install helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chocolatey.org/"&gt;Chocolatey&lt;/a&gt; users can use &lt;code&gt;choco install kubernetes-helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/package-manager/"&gt;Winget&lt;/a&gt; users can use &lt;code&gt;winget install Helm.Helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scoop.sh/"&gt;Scoop&lt;/a&gt; users can use &lt;code&gt;scoop install helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://snapcraft.io/"&gt;Snapcraft&lt;/a&gt; users can use &lt;code&gt;snap install helm --classic&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flox.dev"&gt;Flox&lt;/a&gt; users can use &lt;code&gt;flox install kubernetes-helm&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To rapidly get Helm up and running, start with the &lt;a href="https://helm.sh/docs/intro/quickstart/"&gt;Quick Start Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://helm.sh/docs/intro/install/"&gt;installation guide&lt;/a&gt; for more options, including installing pre-releases.&lt;/p&gt; 
&lt;h2&gt;Docs&lt;/h2&gt; 
&lt;p&gt;Get started with the &lt;a href="https://helm.sh/docs/intro/quickstart/"&gt;Quick Start guide&lt;/a&gt; or plunge into the &lt;a href="https://helm.sh/docs"&gt;complete documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://github.com/helm/helm/milestones"&gt;Helm roadmap uses GitHub milestones&lt;/a&gt; to track the progress of the project.&lt;/p&gt; 
&lt;p&gt;The development of Helm v4 is currently happening on the &lt;code&gt;main&lt;/code&gt; branch while the development of Helm v3, the stable branch, is happening on the &lt;code&gt;dev-v3&lt;/code&gt; branch. Changes should be made to the &lt;code&gt;main&lt;/code&gt; branch prior to being added to the &lt;code&gt;dev-v3&lt;/code&gt; branch so that all changes are carried along to Helm v4.&lt;/p&gt; 
&lt;h2&gt;Community, discussion, contribution, and support&lt;/h2&gt; 
&lt;p&gt;You can reach the Helm community and developers via the following channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://kubernetes.slack.com"&gt;Kubernetes Slack&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://kubernetes.slack.com/messages/helm-users"&gt;#helm-users&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://kubernetes.slack.com/messages/helm-dev"&gt;#helm-dev&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://kubernetes.slack.com/messages/charts"&gt;#charts&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Mailing List: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://lists.cncf.io/g/cncf-helm"&gt;Helm Mailing List&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Developer Call: Thursdays at 9:30-10:00 Pacific (&lt;a href="https://github.com/helm/community/raw/master/communication.md#meetings"&gt;meeting details&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contribution&lt;/h3&gt; 
&lt;p&gt;If you're interested in contributing, please refer to the &lt;a href="https://raw.githubusercontent.com/helm/helm/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; &lt;strong&gt;before submitting a pull request&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;Code of conduct&lt;/h3&gt; 
&lt;p&gt;Participation in the Helm community is governed by the &lt;a href="https://raw.githubusercontent.com/helm/helm/main/code-of-conduct.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>smartcontractkit/chainlink</title>
      <link>https://github.com/smartcontractkit/chainlink</link>
      <description>&lt;p&gt;node of the decentralized oracle network, bridging on and off-chain computation&lt;/p&gt;&lt;hr&gt;&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://chain.link" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/logo-chainlink-blue.svg?sanitize=true" width="225" alt="Chainlink logo" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/smartcontract/chainlink/tags"&gt;&lt;img src="https://img.shields.io/github/v/tag/smartcontractkit/chainlink?style=flat-square" alt="GitHub tag (latest SemVer)" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smartcontractkit/chainlink/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/smartcontractkit/chainlink?style=flat-square" alt="GitHub license" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smartcontractkit/chainlink/actions/workflows/changeset.yml?query=workflow%3AChangeset"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/smartcontractkit/chainlink/changeset.yml" alt="GitHub workflow changeset" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smartcontractkit/chainlink/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors-anon/smartcontractkit/chainlink?style=flat-square" alt="GitHub contributors" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smartcontractkit/chainlink/commits/master"&gt;&lt;img src="https://img.shields.io/github/commit-activity/y/smartcontractkit/chainlink?style=flat-square" alt="GitHub commit activity" /&gt;&lt;/a&gt; &lt;a href="https://docs.chain.link/"&gt;&lt;img src="https://img.shields.io/static/v1?label=docs&amp;amp;message=latest&amp;amp;color=blue" alt="Official documentation" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://chain.link/"&gt;Chainlink&lt;/a&gt; expands the capabilities of smart contracts by enabling access to real-world data and off-chain computation while maintaining the security and reliability guarantees inherent to blockchain technology.&lt;/p&gt; 
&lt;p&gt;This repo contains the Chainlink core node and contracts. The core node is the bundled binary available to be run by node operators participating in a &lt;a href="https://link.smartcontract.com/whitepaper"&gt;decentralized oracle network&lt;/a&gt;. All major release versions have pre-built docker images available for download from the &lt;a href="https://hub.docker.com/r/smartcontract/chainlink/tags"&gt;Chainlink dockerhub&lt;/a&gt;. If you are interested in contributing please see our &lt;a href="https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;. If you are here to report a bug or request a feature, please &lt;a href="https://github.com/smartcontractkit/chainlink/issues"&gt;check currently open Issues&lt;/a&gt;. For more information about how to get started with Chainlink, check our &lt;a href="https://docs.chain.link/"&gt;official documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Chainlink has an active and ever growing community. &lt;a href="https://discordapp.com/invite/aSK4zew"&gt;Discord&lt;/a&gt; is the primary communication channel used for day to day communication, answering development questions, and aggregating Chainlink related content. Take a look at the &lt;a href="https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/COMMUNITY.md"&gt;community docs&lt;/a&gt; for more information regarding Chainlink social accounts, news, and networking.&lt;/p&gt; 
&lt;h2&gt;Build Chainlink&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/doc/install"&gt;Install Go 1.23&lt;/a&gt;, and add your GOPATH's &lt;a href="https://golang.org/doc/code.html#GOPATH"&gt;bin directory to your PATH&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Example Path for macOS &lt;code&gt;export PATH=$GOPATH/bin:$PATH&lt;/code&gt; &amp;amp; &lt;code&gt;export GOPATH=/Users/$USER/go&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Install &lt;a href="https://nodejs.org/en/download/package-manager/"&gt;NodeJS v20&lt;/a&gt; &amp;amp; &lt;a href="https://pnpm.io/installation#using-npm"&gt;pnpm v10 via npm&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;It might be easier long term to use &lt;a href="https://nodejs.org/en/download/package-manager/#nvm"&gt;nvm&lt;/a&gt; to switch between node versions for different projects. For example, assuming $NODE_VERSION was set to a valid version of NodeJS, you could run: &lt;code&gt;nvm install $NODE_VERSION &amp;amp;&amp;amp; nvm use $NODE_VERSION&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Install &lt;a href="https://wiki.postgresql.org/wiki/Detailed_installation_guides"&gt;Postgres (&amp;gt;= 12.x)&lt;/a&gt;. It is recommended to run the latest major version of postgres. 
  &lt;ul&gt; 
   &lt;li&gt;Note if you are running the official Chainlink docker image, the highest supported Postgres version is 16.x due to the bundled client.&lt;/li&gt; 
   &lt;li&gt;You should &lt;a href="https://www.postgresql.org/docs/current/ssl-tcp.html"&gt;configure Postgres&lt;/a&gt; to use SSL connection (or for testing you can set &lt;code&gt;?sslmode=disable&lt;/code&gt; in your Postgres query string).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Download Chainlink: &lt;code&gt;git clone https://github.com/smartcontractkit/chainlink &amp;amp;&amp;amp; cd chainlink&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Build and install Chainlink: &lt;code&gt;make install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run the node: &lt;code&gt;chainlink help&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For the latest information on setting up a development environment, see the &lt;a href="https://github.com/smartcontractkit/chainlink/wiki/Development-Setup-Guide"&gt;Development Setup Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Build from PR&lt;/h3&gt; 
&lt;p&gt;To build an unofficial testing-only image from a feature branch or PR. You can do one of the following:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Send a workflow dispatch event from our &lt;a href="https://github.com/smartcontractkit/chainlink/actions/workflows/docker-build.yml"&gt;&lt;code&gt;docker-build&lt;/code&gt; workflow&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Add the &lt;code&gt;build-publish&lt;/code&gt; label to your PR and then either retry the &lt;code&gt;docker-build&lt;/code&gt; workflow, or push a new commit.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Build Plugins&lt;/h3&gt; 
&lt;p&gt;Plugins are defined in yaml files within the &lt;code&gt;plugins/&lt;/code&gt; directory. Each plugin file is a yaml file and has a &lt;code&gt;plugins.&lt;/code&gt; prefix name. Plugins are installed with &lt;a href="https://github.com/smartcontractkit/chainlink-common/tree/main/pkg/loop/cmd/loopinstall"&gt;loopinstall&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To install the plugins, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make install-plugins
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Some plugins (such as those in &lt;code&gt;plugins/plugins.private.yaml&lt;/code&gt;) reference private GitHub repositories. To build these plugins, you must have a GITHUB_TOKEN environment variable set, or preferably use the &lt;a href="https://cli.github.com/manual/gh"&gt;gh&lt;/a&gt; GitHub CLI tool to use the &lt;a href="https://cli.github.com/manual/gh_auth_setup-git"&gt;GitHub CLI credential helper&lt;/a&gt; like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# Sets up a credential helper.
gh auth setup-git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then you can build the plugins with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make install-plugins-private
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker Builds&lt;/h3&gt; 
&lt;p&gt;To build the experimental "plugins" Chainlink docker image, you can run this from the root of the repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# The GITHUB_TOKEN is required to access private repos which are used by some plugins.
export GITHUB_TOKEN=$(gh auth token) # requires the `gh` cli tool.
make docker-plugins
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Ethereum Execution Client Requirements&lt;/h3&gt; 
&lt;p&gt;In order to run the Chainlink node you must have access to a running Ethereum node with an open websocket connection. Any Ethereum based network will work once you've &lt;a href="https://github.com/smartcontractkit/chainlink#configure"&gt;configured&lt;/a&gt; the chain ID. Ethereum node versions currently tested and supported:&lt;/p&gt; 
&lt;p&gt;[Officially supported]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openethereum/openethereum"&gt;Parity/Openethereum&lt;/a&gt; (NOTE: Parity is deprecated and support for this client may be removed in future)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ethereum/go-ethereum/releases"&gt;Geth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hyperledger/besu"&gt;Besu&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;[Supported but broken] These clients are supported by Chainlink, but have bugs that prevent Chainlink from working reliably on these execution clients.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NethermindEth/nethermind"&gt;Nethermind&lt;/a&gt; Blocking issues: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;del&gt;&lt;a href="https://github.com/NethermindEth/nethermind/issues/4384"&gt;https://github.com/NethermindEth/nethermind/issues/4384&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ledgerwatch/erigon"&gt;Erigon&lt;/a&gt; Blocking issues: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ledgerwatch/erigon/discussions/4946"&gt;https://github.com/ledgerwatch/erigon/discussions/4946&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ledgerwatch/erigon/issues/4030#issuecomment-1113964017"&gt;https://github.com/ledgerwatch/erigon/issues/4030#issuecomment-1113964017&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We cannot recommend specific version numbers for ethereum nodes since the software is being continually updated, but you should usually try to run the latest version available.&lt;/p&gt; 
&lt;h2&gt;Running a local Chainlink node&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: By default, chainlink will run in TLS mode. For local development you can disable this by using a &lt;code&gt;dev build&lt;/code&gt; using &lt;code&gt;make chainlink-dev&lt;/code&gt; and setting the TOML fields:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[WebServer]
SecureCookies = false
TLS.HTTPSPort = 0

[Insecure]
DevWebServer = true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can generate self signed certificates using &lt;code&gt;tools/bin/self-signed-certs&lt;/code&gt; or &lt;a href="https://github.com/smartcontractkit/chainlink/wiki/Creating-Self-Signed-Certificates"&gt;manually&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To start your Chainlink node, simply run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;chainlink node start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default this will start on port 6688. You should be able to access the UI at &lt;a href="http://localhost:6688/"&gt;http://localhost:6688/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Chainlink provides a remote CLI client as well as a UI. Once your node has started, you can open a new terminal window to use the CLI. You will need to log in to authorize the client first:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;chainlink admin login
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(You can also set &lt;code&gt;ADMIN_CREDENTIALS_FILE=/path/to/credentials/file&lt;/code&gt; in future if you like, to avoid having to login again).&lt;/p&gt; 
&lt;p&gt;Now you can view your current jobs with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;chainlink jobs list
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To find out more about the Chainlink CLI, you can always run &lt;code&gt;chainlink help&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href="https://docs.chain.link/"&gt;doc&lt;/a&gt; pages on &lt;a href="https://docs.chain.link/docs/jobs/"&gt;Jobs&lt;/a&gt; to learn more about how to create Jobs.&lt;/p&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;Node configuration is managed by a combination of environment variables and direct setting via API/UI/CLI.&lt;/p&gt; 
&lt;p&gt;Check the &lt;a href="https://docs.chain.link/docs/configuration-variables"&gt;official documentation&lt;/a&gt; for more information on how to configure your node.&lt;/p&gt; 
&lt;h3&gt;External Adapters&lt;/h3&gt; 
&lt;p&gt;External adapters are what make Chainlink easily extensible, providing simple integration of custom computations and specialized APIs. A Chainlink node communicates with external adapters via a simple REST API.&lt;/p&gt; 
&lt;p&gt;For more information on creating and using external adapters, please see our &lt;a href="https://docs.chain.link/docs/external-adapters"&gt;external adapters page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Verify Official Chainlink Releases&lt;/h2&gt; 
&lt;p&gt;We use &lt;code&gt;cosign&lt;/code&gt; with OIDC keyless signing during the &lt;a href="https://github.com/smartcontractkit/chainlink/actions/workflows/build-publish.yml"&gt;Build, Sign and Publish Chainlink&lt;/a&gt; workflow.&lt;/p&gt; 
&lt;p&gt;It is encourage for any node operator building from the official Chainlink docker image to verify the tagged release version was did indeed built from this workflow.&lt;/p&gt; 
&lt;p&gt;You will need &lt;code&gt;cosign&lt;/code&gt; in order to do this verification. &lt;a href="https://docs.sigstore.dev/system_config/installation/"&gt;Follow the instruction here to install cosign&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# tag is the tagged release version - ie. 2.16.0
cosign verify index.docker.io/smartcontract/chainlink:${tag} \
      --certificate-oidc-issuer https://token.actions.githubusercontent.com \
      --certificate-identity "https://github.com/smartcontractkit/chainlink/.github/workflows/build-publish.yml@refs/tags/v${tag}"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;Running tests&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://pnpm.io/installation#using-npm"&gt;Install pnpm 10 via npm&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;a href="https://github.com/fjl/gencodec"&gt;gencodec&lt;/a&gt; and &lt;a href="https://stedolan.github.io/jq/download/"&gt;jq&lt;/a&gt; to be able to run &lt;code&gt;go generate ./...&lt;/code&gt; and &lt;code&gt;make abigen&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install mockery&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;make mockery&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Using the &lt;code&gt;make&lt;/code&gt; command will install the correct version.&lt;/p&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Generate and compile static assets:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make generate
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Prepare your development environment:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The tests require a postgres database. In turn, the environment variable &lt;code&gt;CL_DATABASE_URL&lt;/code&gt; must be set to value that can connect to &lt;code&gt;_test&lt;/code&gt; database, and the user must be able to create and drop the given &lt;code&gt;_test&lt;/code&gt; database.&lt;/p&gt; 
&lt;p&gt;Note: Other environment variables should not be set for all tests to pass&lt;/p&gt; 
&lt;p&gt;There helper script for initial setup to create an appropriate test user. It requires postgres to be running on localhost at port 5432. You will be prompted for the &lt;code&gt;postgres&lt;/code&gt; user password&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make setup-testdb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This script will save the &lt;code&gt;CL_DATABASE_URL&lt;/code&gt; in &lt;code&gt;.dbenv&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Changes to database require migrations to be run. Similarly, &lt;code&gt;pull&lt;/code&gt;'ing the repo may require migrations to run. After the one-time setup above:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;source .dbenv
make testdb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you encounter the error &lt;code&gt;database accessed by other users (SQLSTATE 55006) exit status 1&lt;/code&gt; and you want force the database creation then use&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;source .dbenv
make testdb-force
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="7"&gt; 
 &lt;li&gt;Run tests:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go test ./...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Notes&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;parallel&lt;/code&gt; flag can be used to limit CPU usage, for running tests in the background (&lt;code&gt;-parallel=4&lt;/code&gt;) - the default is &lt;code&gt;GOMAXPROCS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;p&lt;/code&gt; flag can be used to limit the number of &lt;em&gt;packages&lt;/em&gt; tested concurrently, if they are interferring with one another (&lt;code&gt;-p=1&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;-short&lt;/code&gt; flag skips tests which depend on the database, for quickly spot checking simpler tests in around one minute&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Race Detector&lt;/h4&gt; 
&lt;p&gt;As of Go 1.1, the runtime includes a data race detector, enabled with the &lt;code&gt;-race&lt;/code&gt; flag. This is used in CI via the &lt;code&gt;tools/bin/go_core_race_tests&lt;/code&gt; script. If the action detects a race, the artifact on the summary page will include &lt;code&gt;race.*&lt;/code&gt; files with detailed stack traces.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;&lt;strong&gt;It will not issue false positives, so take its warnings seriously.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For local, targeted race detection, you can run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;GORACE="log_path=$PWD/race" go test -race ./core/path/to/pkg -count 10
GORACE="log_path=$PWD/race" go test -race ./core/path/to/pkg -count 100 -run TestFooBar/sub_test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://go.dev/doc/articles/race_detector"&gt;https://go.dev/doc/articles/race_detector&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Fuzz tests&lt;/h4&gt; 
&lt;p&gt;As of Go 1.18, fuzz tests &lt;code&gt;func FuzzXXX(*testing.F)&lt;/code&gt; are included as part of the normal test suite, so existing cases are executed with &lt;code&gt;go test&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally, you can run active fuzzing to search for new cases:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go test ./pkg/path -run=XXX -fuzz=FuzzTestName
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://go.dev/doc/fuzz/"&gt;https://go.dev/doc/fuzz/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Go Modules&lt;/h3&gt; 
&lt;p&gt;This repository contains three Go modules:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-mermaid"&gt;flowchart RL
    github.com/smartcontractkit/chainlink/v2
    github.com/smartcontractkit/chainlink/integration-tests --&amp;gt; github.com/smartcontractkit/chainlink/v2
    github.com/smartcontractkit/chainlink/core/scripts --&amp;gt; github.com/smartcontractkit/chainlink/v2

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;integration-tests&lt;/code&gt; and &lt;code&gt;core/scripts&lt;/code&gt; modules import the root module using a relative replace in their &lt;code&gt;go.mod&lt;/code&gt; files, so dependency changes in the root &lt;code&gt;go.mod&lt;/code&gt; often require changes in those modules as well. After making a change, &lt;code&gt;go mod tidy&lt;/code&gt; can be run on all three modules using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make gomodtidy
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Generation&lt;/h3&gt; 
&lt;p&gt;Go generate is used to generate mocks in this project. Mocks are generated with &lt;a href="https://github.com/vektra/mockery"&gt;mockery&lt;/a&gt; and live in core/internal/mocks.&lt;/p&gt; 
&lt;h3&gt;Nix&lt;/h3&gt; 
&lt;p&gt;A &lt;a href="https://nixos.wiki/wiki/Development_environment_with_nix-shell"&gt;shell.nix&lt;/a&gt; is provided for use with the &lt;a href="https://nixos.org/"&gt;Nix package manager&lt;/a&gt;. By default,we utilize the shell through &lt;a href="https://nixos.wiki/wiki/Flakes"&gt;Nix Flakes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Nix defines a declarative, reproducible development environment. Flakes version use deterministic, frozen (&lt;code&gt;flake.lock&lt;/code&gt;) dependencies to gain more consistency/reproducibility on the built artifacts.&lt;/p&gt; 
&lt;p&gt;To use it:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install &lt;a href="https://nixos.org/download.html"&gt;nix package manager&lt;/a&gt; in your system.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enable &lt;a href="https://nixos.wiki/wiki/Flakes#Enable_flakes"&gt;flakes support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Run &lt;code&gt;nix develop&lt;/code&gt;. You will be put in shell containing all the dependencies.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Optionally, &lt;code&gt;nix develop --command $SHELL&lt;/code&gt; will make use of your current shell instead of the default (bash).&lt;/li&gt; 
 &lt;li&gt;You can use &lt;code&gt;direnv&lt;/code&gt; to enable it automatically when &lt;code&gt;cd&lt;/code&gt;-ing into the folder; for that, enable &lt;a href="https://github.com/nix-community/nix-direnv"&gt;nix-direnv&lt;/a&gt; and &lt;code&gt;use flake&lt;/code&gt; on it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Create a local postgres database:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;mkdir -p $PGDATA &amp;amp;&amp;amp; cd $PGDATA/
initdb
pg_ctl -l postgres.log -o "--unix_socket_directories='$PWD'" start
createdb chainlink_test -h localhost
createuser --superuser --password chainlink -h localhost
# then type a test password, e.g.: chainlink, and set it in shell.nix CL_DATABASE_URL
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;When re-entering project, you can restart postgres: &lt;code&gt;cd $PGDATA; pg_ctl -l postgres.log -o "--unix_socket_directories='$PWD'" start&lt;/code&gt; Now you can run tests or compile code as usual.&lt;/li&gt; 
 &lt;li&gt;When you're done, stop it: &lt;code&gt;cd $PGDATA; pg_ctl -o "--unix_socket_directories='$PWD'" stop&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Changesets&lt;/h3&gt; 
&lt;p&gt;We use &lt;a href="https://github.com/changesets/changesets"&gt;changesets&lt;/a&gt; to manage versioning for libs and the services.&lt;/p&gt; 
&lt;p&gt;Every PR that modifies any configuration or code, should most likely accompanied by a changeset file.&lt;/p&gt; 
&lt;p&gt;To install &lt;code&gt;changesets&lt;/code&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install &lt;code&gt;pnpm&lt;/code&gt; if it is not already installed - &lt;a href="https://pnpm.io/installation"&gt;docs&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;pnpm install&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Either after or before you create a commit, run the &lt;code&gt;pnpm changeset&lt;/code&gt; command to create an accompanying changeset entry which will reflect on the CHANGELOG for the next release.&lt;/p&gt; 
&lt;p&gt;The format is based on &lt;a href="https://keepachangelog.com/en/1.0.0/"&gt;Keep a Changelog&lt;/a&gt;,&lt;/p&gt; 
&lt;p&gt;and this project adheres to &lt;a href="https://semver.org/spec/v2.0.0.html"&gt;Semantic Versioning&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Tips&lt;/h3&gt; 
&lt;p&gt;For more tips on how to build and test Chainlink, see our &lt;a href="https://github.com/smartcontractkit/chainlink/wiki/Development-Tips"&gt;development tips page&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Contributions are welcome to Chainlink's source code.&lt;/p&gt; 
&lt;p&gt;Please check out our &lt;a href="https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;Thank you!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VictoriaMetrics/VictoriaMetrics</title>
      <link>https://github.com/VictoriaMetrics/VictoriaMetrics</link>
      <description>&lt;p&gt;VictoriaMetrics: fast, cost-effective monitoring solution and time series database&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VictoriaMetrics&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/VictoriaMetrics/VictoriaMetrics?sort=semver&amp;amp;label=&amp;amp;filter=!*-victorialogs&amp;amp;logo=github&amp;amp;labelColor=gray&amp;amp;color=gray&amp;amp;link=https%3A%2F%2Fgithub.com%2FVictoriaMetrics%2FVictoriaMetrics%2Freleases%2Flatest" alt="Latest Release" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/docker/pulls/victoriametrics/victoria-metrics?label=&amp;amp;logo=docker&amp;amp;logoColor=white&amp;amp;labelColor=2496ED&amp;amp;color=2496ED&amp;amp;link=https%3A%2F%2Fhub.docker.com%2Fr%2Fvictoriametrics%2Fvictoria-metrics" alt="Docker Pulls" /&gt; &lt;a href="https://goreportcard.com/report/github.com/VictoriaMetrics/VictoriaMetrics"&gt;&lt;img src="https://goreportcard.com/badge/github.com/VictoriaMetrics/VictoriaMetrics?link=https%3A%2F%2Fgoreportcard.com%2Freport%2Fgithub.com%2FVictoriaMetrics%2FVictoriaMetrics" alt="Go Report" /&gt;&lt;/a&gt; &lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/VictoriaMetrics/VictoriaMetrics/actions/workflows/build.yml/badge.svg?branch=master&amp;amp;link=https%3A%2F%2Fgithub.com%2FVictoriaMetrics%2FVictoriaMetrics%2Factions" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://app.codecov.io/gh/VictoriaMetrics/VictoriaMetrics"&gt;&lt;img src="https://codecov.io/gh/VictoriaMetrics/VictoriaMetrics/branch/master/graph/badge.svg?link=https%3A%2F%2Fcodecov.io%2Fgh%2FVictoriaMetrics%2FVictoriaMetrics" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/VictoriaMetrics/VictoriaMetrics?labelColor=green&amp;amp;label=&amp;amp;link=https%3A%2F%2Fgithub.com%2FVictoriaMetrics%2FVictoriaMetrics%2Fblob%2Fmaster%2FLICENSE" alt="License" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/Join-4A154B?logo=slack&amp;amp;link=https%3A%2F%2Fslack.victoriametrics.com" alt="Slack" /&gt; &lt;a href="https://x.com/VictoriaMetrics/"&gt;&lt;img src="https://img.shields.io/twitter/follow/VictoriaMetrics?style=flat&amp;amp;label=Follow&amp;amp;color=black&amp;amp;logo=x&amp;amp;labelColor=black&amp;amp;link=https%3A%2F%2Fx.com%2FVictoriaMetrics" alt="X" /&gt;&lt;/a&gt; &lt;a href="https://www.reddit.com/r/VictoriaMetrics/"&gt;&lt;img src="https://img.shields.io/reddit/subreddit-subscribers/VictoriaMetrics?style=flat&amp;amp;label=Join&amp;amp;labelColor=red&amp;amp;logoColor=white&amp;amp;logo=reddit&amp;amp;link=https%3A%2F%2Fwww.reddit.com%2Fr%2FVictoriaMetrics" alt="Reddit" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;picture&gt; 
 &lt;source srcset="docs/victoriametrics/logo_white.webp" media="(prefers-color-scheme: dark)" /&gt; 
 &lt;source srcset="docs/victoriametrics/logo.webp" media="(prefers-color-scheme: light)" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/docs/victoriametrics/logo.webp" width="300" alt="VictoriaMetrics logo" /&gt; 
&lt;/picture&gt; 
&lt;p&gt;VictoriaMetrics is a fast, cost-saving, and scalable solution for monitoring and managing time series data. It delivers high performance and reliability, making it an ideal choice for businesses of all sizes.&lt;/p&gt; 
&lt;p&gt;Here are some resources and information about VictoriaMetrics:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://docs.victoriametrics.com"&gt;docs.victoriametrics.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Case studies: &lt;a href="https://docs.victoriametrics.com/victoriametrics/casestudies/"&gt;Grammarly, Roblox, Wix,...&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Available: &lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics/releases/latest"&gt;Binary releases&lt;/a&gt;, docker images &lt;a href="https://hub.docker.com/r/victoriametrics/victoria-metrics/"&gt;Docker Hub&lt;/a&gt; and &lt;a href="https://quay.io/repository/victoriametrics/victoria-metrics"&gt;Quay&lt;/a&gt;, &lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics"&gt;Source code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Deployment types: &lt;a href="https://docs.victoriametrics.com/"&gt;Single-node version&lt;/a&gt;, &lt;a href="https://docs.victoriametrics.com/victoriametrics/cluster-victoriametrics/"&gt;Cluster version&lt;/a&gt;, and &lt;a href="https://docs.victoriametrics.com/victoriametrics/enterprise/"&gt;Enterprise version&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Changelog: &lt;a href="https://docs.victoriametrics.com/victoriametrics/changelog/"&gt;CHANGELOG&lt;/a&gt;, and &lt;a href="https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-upgrade-victoriametrics"&gt;How to upgrade&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Community: &lt;a href="https://slack.victoriametrics.com/"&gt;Slack&lt;/a&gt;, &lt;a href="https://x.com/VictoriaMetrics"&gt;X (Twitter)&lt;/a&gt;, &lt;a href="https://www.linkedin.com/company/victoriametrics/"&gt;LinkedIn&lt;/a&gt;, &lt;a href="https://www.youtube.com/@VictoriaMetrics"&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Yes, we open-source both the single-node VictoriaMetrics and the cluster version.&lt;/p&gt; 
&lt;h2&gt;Prominent features&lt;/h2&gt; 
&lt;p&gt;VictoriaMetrics is optimized for timeseries data, even when old time series are constantly replaced by new ones at a high rate, it offers a lot of features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Long-term storage for Prometheus&lt;/strong&gt; or as a drop-in replacement for Prometheus and Graphite in Grafana.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Powerful stream aggregation&lt;/strong&gt;: Can be used as a StatsD alternative.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ideal for big data&lt;/strong&gt;: Works well with large amounts of time series data from APM, Kubernetes, IoT sensors, connected cars, industrial telemetry, financial data and various &lt;a href="https://docs.victoriametrics.com/victoriametrics/enterprise/"&gt;Enterprise workloads&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Query language&lt;/strong&gt;: Supports both PromQL and the more performant MetricsQL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy to setup&lt;/strong&gt;: No dependencies, single &lt;a href="https://medium.com/@valyala/stripping-dependency-bloat-in-victoriametrics-docker-image-983fb5912b0d"&gt;small binary&lt;/a&gt;, configuration through command-line flags, but the default is also fine-tuned; backup and restore with &lt;a href="https://medium.com/@valyala/how-victoriametrics-makes-instant-snapshots-for-multi-terabyte-time-series-data-e1f3fb0e0282"&gt;instant snapshots&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Global query view&lt;/strong&gt;: Multiple Prometheus instances or any other data sources may ingest data into VictoriaMetrics and queried via a single query.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Various Protocols&lt;/strong&gt;: Support metric scraping, ingestion and backfilling in various protocol. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-scrape-prometheus-exporters-such-as-node-exporter"&gt;Prometheus exporters&lt;/a&gt;, &lt;a href="https://docs.victoriametrics.com/victoriametrics/integrations/prometheus/"&gt;Prometheus remote write API&lt;/a&gt;, &lt;a href="https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-import-data-in-prometheus-exposition-format"&gt;Prometheus exposition format&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/integrations/influxdb/"&gt;InfluxDB line protocol&lt;/a&gt; over HTTP, TCP and UDP.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/integrations/graphite/#ingesting"&gt;Graphite plaintext protocol&lt;/a&gt; with &lt;a href="https://graphite.readthedocs.io/en/latest/tags.html#carbon"&gt;tags&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/integrations/opentsdb/#sending-data-via-telnet"&gt;OpenTSDB put message&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/integrations/opentsdb/#sending-data-via-http"&gt;HTTP OpenTSDB /api/put requests&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-import-data-in-json-line-format"&gt;JSON line format&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-import-csv-data"&gt;Arbitrary CSV data&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-import-data-in-native-format"&gt;Native binary format&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/integrations/datadog/"&gt;DataDog agent or DogStatsD&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/integrations/newrelic/#sending-data-from-agent"&gt;NewRelic infrastructure agent&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#sending-data-via-opentelemetry"&gt;OpenTelemetry metrics format&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;NFS-based storages&lt;/strong&gt;: Supports storing data on NFS-based storages such as Amazon EFS, Google Filestore.&lt;/li&gt; 
 &lt;li&gt;And many other features such as metrics relabeling, cardinality limiter, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Enterprise version&lt;/h2&gt; 
&lt;p&gt;In addition, the Enterprise version includes extra features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Anomaly detection&lt;/strong&gt;: Automation and simplification of your alerting rules, covering complex anomalies found in metrics data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backup automation&lt;/strong&gt;: Automates regular backup procedures.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple retentions&lt;/strong&gt;: Reducing storage costs by specifying different retentions for different datasets.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Downsampling&lt;/strong&gt;: Reducing storage costs and increasing performance for queries over historical data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Stable releases&lt;/strong&gt; with long-term support lines (&lt;a href="https://docs.victoriametrics.com/victoriametrics/lts-releases/"&gt;LTS&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comprehensive support&lt;/strong&gt;: First-class consulting, feature requests and technical support provided by the core VictoriaMetrics dev team.&lt;/li&gt; 
 &lt;li&gt;Many other features, which you can read about on &lt;a href="https://docs.victoriametrics.com/victoriametrics/enterprise/"&gt;the Enterprise page&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="mailto:info@victoriametrics.com"&gt;Contact us&lt;/a&gt; if you need enterprise support for VictoriaMetrics. Or you can request a free trial license &lt;a href="https://victoriametrics.com/products/enterprise/trial/"&gt;here&lt;/a&gt;, downloaded Enterprise binaries are available at &lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics/releases/latest"&gt;Github Releases&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We strictly apply security measures in everything we do. VictoriaMetrics has achieved security certifications for Database Software Development and Software-Based Monitoring Services. See &lt;a href="https://victoriametrics.com/security/"&gt;Security page&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Benchmarks&lt;/h2&gt; 
&lt;p&gt;Some good benchmarks VictoriaMetrics achieved:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Minimal memory footprint&lt;/strong&gt;: handling millions of unique timeseries with &lt;a href="https://medium.com/@valyala/insert-benchmarks-with-inch-influxdb-vs-victoriametrics-e31a41ae2893"&gt;10x less RAM&lt;/a&gt; than InfluxDB, up to &lt;a href="https://valyala.medium.com/prometheus-vs-victoriametrics-benchmark-on-node-exporter-metrics-4ca29c75590f"&gt;7x less RAM&lt;/a&gt; than Prometheus, Thanos or Cortex.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Highly scalable and performance&lt;/strong&gt; for &lt;a href="https://medium.com/@valyala/high-cardinality-tsdb-benchmarks-victoriametrics-vs-timescaledb-vs-influxdb-13e6ee64dd6b"&gt;data ingestion&lt;/a&gt; and &lt;a href="https://medium.com/@valyala/when-size-matters-benchmarking-victoriametrics-vs-timescale-and-influxdb-6035811952d4"&gt;querying&lt;/a&gt;, &lt;a href="https://medium.com/@valyala/insert-benchmarks-with-inch-influxdb-vs-victoriametrics-e31a41ae2893"&gt;20x outperforms&lt;/a&gt; InfluxDB and TimescaleDB.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;High data compression&lt;/strong&gt;: &lt;a href="https://medium.com/@valyala/when-size-matters-benchmarking-victoriametrics-vs-timescale-and-influxdb-6035811952d4"&gt;70x more data points&lt;/a&gt; may be stored into limited storage than TimescaleDB, &lt;a href="https://valyala.medium.com/prometheus-vs-victoriametrics-benchmark-on-node-exporter-metrics-4ca29c75590f"&gt;7x less storage&lt;/a&gt; space is required than Prometheus, Thanos or Cortex.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reducing storage costs&lt;/strong&gt;: &lt;a href="https://docs.victoriametrics.com/victoriametrics/casestudies/#grammarly"&gt;10x more effective&lt;/a&gt; than Graphite according to the Grammarly case study.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;A single-node VictoriaMetrics&lt;/strong&gt; can replace medium-sized clusters built with competing solutions such as Thanos, M3DB, Cortex, InfluxDB or TimescaleDB. See &lt;a href="https://medium.com/@valyala/comparing-thanos-to-victoriametrics-cluster-b193bea1683"&gt;VictoriaMetrics vs Thanos&lt;/a&gt;, &lt;a href="https://medium.com/@valyala/measuring-vertical-scalability-for-time-series-databases-in-google-cloud-92550d78d8ae"&gt;Measuring vertical scalability&lt;/a&gt;, &lt;a href="https://promcon.io/2019-munich/talks/remote-write-storage-wars/"&gt;Remote write storage wars - PromCon 2019&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Optimized for storage&lt;/strong&gt;: &lt;a href="https://medium.com/@valyala/high-cardinality-tsdb-benchmarks-victoriametrics-vs-timescaledb-vs-influxdb-13e6ee64dd6b"&gt;Works well with high-latency IO&lt;/a&gt; and low IOPS (HDD and network storage in AWS, Google Cloud, Microsoft Azure, etc.).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community and contributions&lt;/h2&gt; 
&lt;p&gt;Feel free asking any questions regarding VictoriaMetrics:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://slack.victoriametrics.com/"&gt;Slack Inviter&lt;/a&gt; and &lt;a href="https://victoriametrics.slack.com/"&gt;Slack channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/VictoriaMetrics/"&gt;X (Twitter)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.linkedin.com/company/victoriametrics/"&gt;Linkedin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.reddit.com/r/VictoriaMetrics/"&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://t.me/VictoriaMetrics_en"&gt;Telegram-en&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://t.me/VictoriaMetrics_ru1"&gt;Telegram-ru&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mastodon.social/@victoriametrics/"&gt;Mastodon&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you like VictoriaMetrics and want to contribute, then please &lt;a href="https://docs.victoriametrics.com/victoriametrics/contributing/"&gt;read these docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;VictoriaMetrics Logo&lt;/h2&gt; 
&lt;p&gt;The provided &lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics/raw/master/VM_logo.zip"&gt;ZIP file&lt;/a&gt; contains three folders with different logo orientations. Each folder includes the following file types:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;JPEG: Preview files&lt;/li&gt; 
 &lt;li&gt;PNG: Preview files with transparent background&lt;/li&gt; 
 &lt;li&gt;AI: Adobe Illustrator files&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;VictoriaMetrics Logo Usage Guidelines&lt;/h3&gt; 
&lt;h4&gt;Font&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Font Used: Lato Black&lt;/li&gt; 
 &lt;li&gt;Download here: &lt;a href="https://fonts.google.com/specimen/Lato"&gt;Lato Font&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Color Palette&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Black &lt;a href="https://www.color-hex.com/color/000000"&gt;#000000&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Purple &lt;a href="https://www.color-hex.com/color/4d0e82"&gt;#4d0e82&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Orange &lt;a href="https://www.color-hex.com/color/ff2e00"&gt;#ff2e00&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;White &lt;a href="https://www.color-hex.com/color/ffffff"&gt;#ffffff&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Logo Usage Rules&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Only use the Lato Black font as specified.&lt;/li&gt; 
 &lt;li&gt;Maintain sufficient clear space around the logo for visibility.&lt;/li&gt; 
 &lt;li&gt;Do not modify the spacing, alignment, or positioning of design elements.&lt;/li&gt; 
 &lt;li&gt;You may resize the logo as needed, but ensure all proportions remain intact.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thank you for your cooperation!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>aquasecurity/trivy</title>
      <link>https://github.com/aquasecurity/trivy</link>
      <description>&lt;p&gt;Find vulnerabilities, misconfigurations, secrets, SBOM in containers, Kubernetes, code repositories, clouds and more&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/aquasecurity/trivy/main/docs/imgs/logo.png" width="200" /&gt; 
 &lt;p&gt;&lt;a href="https://github.com/aquasecurity/trivy/releases"&gt;&lt;img src="https://img.shields.io/github/release/aquasecurity/trivy.svg?logo=github" alt="GitHub Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/actions/workflows/test.yaml"&gt;&lt;img src="https://github.com/aquasecurity/trivy/actions/workflows/test.yaml/badge.svg?sanitize=true" alt="Test" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/aquasecurity/trivy"&gt;&lt;img src="https://goreportcard.com/badge/github.com/aquasecurity/trivy" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License: Apache-2.0" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/aquasecurity/trivy/total?logo=github" alt="GitHub Downloads" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/docker/pulls/aquasec/trivy?logo=docker&amp;amp;label=docker%20pulls%20%2F%20trivy" alt="Docker Pulls" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://trivy.dev/latest/docs/"&gt;📖 Documentation&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Trivy (&lt;a href="https://raw.githubusercontent.com/aquasecurity/trivy/main/#how-to-pronounce-the-name-trivy"&gt;pronunciation&lt;/a&gt;) is a comprehensive and versatile security scanner. Trivy has &lt;em&gt;scanners&lt;/em&gt; that look for security issues, and &lt;em&gt;targets&lt;/em&gt; where it can find those issues.&lt;/p&gt; 
&lt;p&gt;Targets (what Trivy can scan):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Container Image&lt;/li&gt; 
 &lt;li&gt;Filesystem&lt;/li&gt; 
 &lt;li&gt;Git Repository (remote)&lt;/li&gt; 
 &lt;li&gt;Virtual Machine Image&lt;/li&gt; 
 &lt;li&gt;Kubernetes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Scanners (what Trivy can find there):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OS packages and software dependencies in use (SBOM)&lt;/li&gt; 
 &lt;li&gt;Known vulnerabilities (CVEs)&lt;/li&gt; 
 &lt;li&gt;IaC issues and misconfigurations&lt;/li&gt; 
 &lt;li&gt;Sensitive information and secrets&lt;/li&gt; 
 &lt;li&gt;Software licenses&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Trivy supports most popular programming languages, operating systems, and platforms. For a complete list, see the &lt;a href="https://trivy.dev/latest/docs/coverage/"&gt;Scanning Coverage&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;To learn more, go to the &lt;a href="https://trivy.dev"&gt;Trivy homepage&lt;/a&gt; for feature highlights, or to the &lt;a href="https://trivy.dev/latest/docs/"&gt;Documentation site&lt;/a&gt; for detailed information.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Get Trivy&lt;/h3&gt; 
&lt;p&gt;Trivy is available in most common distribution channels. The full list of installation options is available in the &lt;a href="https://trivy.dev/latest/getting-started/installation/"&gt;Installation&lt;/a&gt; page. Here are a few popular examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;brew install trivy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;docker run aquasec/trivy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Download binary from &lt;a href="https://github.com/aquasecurity/trivy/releases/latest/"&gt;https://github.com/aquasecurity/trivy/releases/latest/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://trivy.dev/latest/getting-started/installation/"&gt;Installation&lt;/a&gt; for more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Trivy is integrated with many popular platforms and applications. The complete list of integrations is available in the &lt;a href="https://trivy.dev/latest/ecosystem/"&gt;Ecosystem&lt;/a&gt; page. Here are a few popular examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-action"&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-operator"&gt;Kubernetes operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-vscode-extension"&gt;VS Code plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://trivy.dev/latest/ecosystem/"&gt;Ecosystem&lt;/a&gt; for more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Canary builds&lt;/h3&gt; 
&lt;p&gt;There are canary builds (&lt;a href="https://hub.docker.com/r/aquasec/trivy/tags?page=1&amp;amp;name=canary"&gt;Docker Hub&lt;/a&gt;, &lt;a href="https://github.com/aquasecurity/trivy/pkgs/container/trivy/75776514?tag=canary"&gt;GitHub&lt;/a&gt;, &lt;a href="https://gallery.ecr.aws/aquasecurity/trivy#canary"&gt;ECR&lt;/a&gt; images and &lt;a href="https://github.com/aquasecurity/trivy/actions/workflows/canary.yaml"&gt;binaries&lt;/a&gt;) as generated every push to main branch.&lt;/p&gt; 
&lt;p&gt;Please be aware: canary builds might have critical bugs, it's not recommended for use in production.&lt;/p&gt; 
&lt;h3&gt;General usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy &amp;lt;target&amp;gt; [--scanners &amp;lt;scanner1,scanner2&amp;gt;] &amp;lt;subject&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy image python:3.4-alpine
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/1161307/171013513-95f18734-233d-45d3-aaf5-d6aec687db0e.mov"&gt;https://user-images.githubusercontent.com/1161307/171013513-95f18734-233d-45d3-aaf5-d6aec687db0e.mov&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy fs --scanners vuln,secret,misconfig myproject/
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/1161307/171013917-b1f37810-f434-465c-b01a-22de036bd9b3.mov"&gt;https://user-images.githubusercontent.com/1161307/171013917-b1f37810-f434-465c-b01a-22de036bd9b3.mov&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy k8s --report summary cluster
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/aquasecurity/trivy/main/docs/imgs/trivy-k8s.png" alt="k8s summary" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;How to pronounce the name "Trivy"?&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;tri&lt;/code&gt; is pronounced like &lt;strong&gt;tri&lt;/strong&gt;gger, &lt;code&gt;vy&lt;/code&gt; is pronounced like en&lt;strong&gt;vy&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Want more? Check out Aqua&lt;/h2&gt; 
&lt;p&gt;If you liked Trivy, you will love Aqua which builds on top of Trivy to provide even more enhanced capabilities for a complete security management offering.&lt;br /&gt; You can find a high level comparison table specific to Trivy users &lt;a href="https://trivy.dev/latest/commercial/compare/"&gt;here&lt;/a&gt;. In addition check out the &lt;a href="https://aquasec.com"&gt;https://aquasec.com&lt;/a&gt; website for more information about our products and services. If you'd like to contact Aqua or request a demo, please use this form: &lt;a href="https://www.aquasec.com/demo"&gt;https://www.aquasec.com/demo&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Trivy is an &lt;a href="https://aquasec.com"&gt;Aqua Security&lt;/a&gt; open source project.&lt;br /&gt; Learn about our open source work and portfolio &lt;a href="https://www.aquasec.com/products/open-source-projects/"&gt;here&lt;/a&gt;.&lt;br /&gt; Contact us about any matter by opening a GitHub Discussion &lt;a href="https://github.com/aquasecurity/trivy/discussions"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please ensure to abide by our &lt;a href="https://github.com/aquasecurity/community/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; during all interactions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>runatlantis/atlantis</title>
      <link>https://github.com/runatlantis/atlantis</link>
      <description>&lt;p&gt;Terraform Pull Request Automation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Atlantis 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/runatlantis/atlantis/releases/latest"&gt;&lt;img src="https://img.shields.io/github/release/runatlantis/atlantis.svg?sanitize=true" alt="Latest Release" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/kelseyhightower/status/893260922222813184"&gt;&lt;img src="https://raw.githubusercontent.com/runatlantis/atlantis/main/runatlantis.io/public/hightower-super-dope.svg?sanitize=true" alt="SuperDopeBadge" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/runatlantis/atlantis"&gt;&lt;img src="https://goreportcard.com/badge/github.com/runatlantis/atlantis" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/runatlantis/atlantis"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/runatlantis/atlantis.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://slack.cncf.io/"&gt;&lt;img src="https://img.shields.io/badge/Join-Atlantis%20Community%20Slack-red" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/runatlantis/atlantis"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/runatlantis/atlantis/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://www.bestpractices.dev/projects/9428"&gt;&lt;img src="https://www.bestpractices.dev/projects/9428/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/runatlantis/atlantis/main/runatlantis.io/public/hero.png" alt="Atlantis Logo" /&gt;&lt;br /&gt;&lt;br /&gt; &lt;b&gt;Terraform Pull Request Automation&lt;/b&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/runatlantis/atlantis/main/#resources"&gt;Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/runatlantis/atlantis/main/#what-is-atlantis"&gt;What is Atlantis?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/runatlantis/atlantis/main/#what-does-it-do"&gt;What does it do?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/runatlantis/atlantis/main/#why-should-you-use-it"&gt;Why should you use it?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/runatlantis/atlantis/main/#stargazers-over-time"&gt;Stargazers over time&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;How to get started: &lt;a href="https://www.runatlantis.io/guide"&gt;www.runatlantis.io/guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Full documentation: &lt;a href="https://www.runatlantis.io/docs"&gt;www.runatlantis.io/docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Download the latest release: &lt;a href="https://github.com/runatlantis/atlantis/releases/latest"&gt;github.com/runatlantis/atlantis/releases/latest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Get help in our &lt;a href="https://slack.cncf.io/"&gt;Slack channel&lt;/a&gt; in channel #atlantis and development in #atlantis-contributors&lt;/li&gt; 
 &lt;li&gt;Start Contributing: &lt;a href="https://raw.githubusercontent.com/runatlantis/atlantis/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What is Atlantis?&lt;/h2&gt; 
&lt;p&gt;A self-hosted golang application that listens for Terraform pull request events via webhooks.&lt;/p&gt; 
&lt;h2&gt;What does it do?&lt;/h2&gt; 
&lt;p&gt;Runs &lt;code&gt;terraform plan&lt;/code&gt;, &lt;code&gt;import&lt;/code&gt;, &lt;code&gt;apply&lt;/code&gt; remotely and comments back on the pull request with the output.&lt;/p&gt; 
&lt;h2&gt;Why should you use it?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make Terraform changes visible to your whole team.&lt;/li&gt; 
 &lt;li&gt;Enable non-operations engineers to collaborate on Terraform.&lt;/li&gt; 
 &lt;li&gt;Standardize your Terraform workflows.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/runatlantis/atlantis"&gt;&lt;img src="https://starchart.cc/runatlantis/atlantis.svg?sanitize=true" alt="Stargazers over time" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>netbirdio/netbird</title>
      <link>https://github.com/netbirdio/netbird</link>
      <description>&lt;p&gt;Connect your devices into a secure WireGuard®-based overlay network with SSO, MFA and granular access controls.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;p align="center"&gt; &lt;img width="234" src="https://raw.githubusercontent.com/netbirdio/netbird/main/docs/media/logo-full.png" /&gt; &lt;/p&gt; 
 &lt;p&gt; &lt;a href="https://img.shields.io/badge/license-BSD--3-blue)"&gt; &lt;img src="https://sonarcloud.io/api/project_badges/measure?project=netbirdio_netbird&amp;amp;metric=alert_status" /&gt; &lt;/a&gt; &lt;a href="https://github.com/netbirdio/netbird/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/license-BSD--3-blue" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://docs.netbird.io/slack-url"&gt; &lt;img src="https://img.shields.io/badge/slack-@netbird-red.svg?logo=slack" /&gt; &lt;/a&gt; &lt;a href="https://forum.netbird.io"&gt; &lt;img src="https://img.shields.io/badge/community forum-@netbird-red.svg?logo=discourse" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://gurubase.io/g/netbird"&gt; &lt;img src="https://img.shields.io/badge/Gurubase-Ask%20NetBird%20Guru-006BFF" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;strong&gt; Start using NetBird at &lt;a href="https://netbird.io/pricing"&gt;netbird.io&lt;/a&gt; &lt;br /&gt; See &lt;a href="https://netbird.io/docs/"&gt;Documentation&lt;/a&gt; &lt;br /&gt; Join our &lt;a href="https://docs.netbird.io/slack-url"&gt;Slack channel&lt;/a&gt; or our &lt;a href="https://forum.netbird.io"&gt;Community forum&lt;/a&gt; &lt;br /&gt; &lt;/strong&gt; &lt;br /&gt; &lt;a href="https://registry.terraform.io/providers/netbirdio/netbird/latest"&gt; New: NetBird terraform provider &lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;strong&gt;NetBird combines a configuration-free peer-to-peer private network and a centralized access control system in a single platform, making it easy to create secure private networks for your organization or home.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Connect.&lt;/strong&gt; NetBird creates a WireGuard-based overlay network that automatically connects your machines over an encrypted tunnel, leaving behind the hassle of opening ports, complex firewall rules, VPN gateways, and so forth.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Secure.&lt;/strong&gt; NetBird enables secure remote access by applying granular access policies while allowing you to manage them intuitively from a single place. Works universally on any infrastructure.&lt;/p&gt; 
&lt;h3&gt;Open Source Network Security in a Single Platform&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/10cec749-bb56-4ab3-97af-4e38850108d2"&gt;https://github.com/user-attachments/assets/10cec749-bb56-4ab3-97af-4e38850108d2&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;NetBird on Lawrence Systems (Video)&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Kwrff6h0rEw"&gt;&lt;img src="https://img.youtube.com/vi/Kwrff6h0rEw/0.jpg" alt="Watch the video" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Key features&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Connectivity&lt;/th&gt; 
   &lt;th&gt;Management&lt;/th&gt; 
   &lt;th&gt;Security&lt;/th&gt; 
   &lt;th&gt;Automation&lt;/th&gt; 
   &lt;th&gt;Platforms&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Kernel WireGuard&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://github.com/netbirdio/dashboard"&gt;Admin Web UI&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/installation#running-net-bird-with-sso-login"&gt;SSO &amp;amp; MFA support&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/api"&gt;Public API&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Linux&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Peer-to-peer connections&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Auto peer discovery and configuration&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-network-access"&gt;Access control - groups &amp;amp; rules&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/register-machines-using-setup-keys"&gt;Setup keys for bulk network provisioning&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Mac&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Connection relay fallback&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/selfhosted/identity-providers"&gt;IdP integrations&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/audit-events-logging"&gt;Activity logging&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/selfhosted/selfhosted-quickstart"&gt;Self-hosting quickstart script&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Windows&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/routing-traffic-to-private-networks"&gt;Routes to external networks&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-dns-in-your-network"&gt;Private DNS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-posture-checks"&gt;Device posture checks&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] IdP groups sync with JWT&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Android&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] NAT traversal with BPF&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/add-users-to-your-network"&gt;Multiuser support&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Peer-to-peer encryption&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] iOS&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://netbird.io/knowledge-hub/the-first-quantum-resistant-mesh-vpn"&gt;Quantum-resistance with Rosenpass&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] OpenWRT&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/enforce-periodic-user-authentication"&gt;Periodic re-authentication&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/netbird-on-faas"&gt;Serverless&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Docker&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Quickstart with NetBird Cloud&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and install NetBird at &lt;a href="https://app.netbird.io/install"&gt;https://app.netbird.io/install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow the steps to sign-up with Google, Microsoft, GitHub or your email address.&lt;/li&gt; 
 &lt;li&gt;Check NetBird &lt;a href="https://app.netbird.io/"&gt;admin UI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Add more machines.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quickstart with self-hosted NetBird&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This is the quickest way to try self-hosted NetBird. It should take around 5 minutes to get started if you already have a public domain and a VM. Follow the &lt;a href="https://docs.netbird.io/selfhosted/selfhosted-guide#advanced-guide-with-a-custom-identity-provider"&gt;Advanced guide with a custom identity provider&lt;/a&gt; for installations with different IDPs.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Infrastructure requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A Linux VM with at least &lt;strong&gt;1CPU&lt;/strong&gt; and &lt;strong&gt;2GB&lt;/strong&gt; of memory.&lt;/li&gt; 
 &lt;li&gt;The VM should be publicly accessible on TCP ports &lt;strong&gt;80&lt;/strong&gt; and &lt;strong&gt;443&lt;/strong&gt; and UDP ports: &lt;strong&gt;3478&lt;/strong&gt;, &lt;strong&gt;49152-65535&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Public domain&lt;/strong&gt; name pointing to the VM.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Software requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker installed on the VM with the docker-compose plugin (&lt;a href="https://docs.docker.com/engine/install/"&gt;Docker installation guide&lt;/a&gt;) or docker with docker-compose in version 2 or higher.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jqlang.github.io/jq/"&gt;jq&lt;/a&gt; installed. In most distributions Usually available in the official repositories and can be installed with &lt;code&gt;sudo apt install jq&lt;/code&gt; or &lt;code&gt;sudo yum install jq&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://curl.se/"&gt;curl&lt;/a&gt; installed. Usually available in the official repositories and can be installed with &lt;code&gt;sudo apt install curl&lt;/code&gt; or &lt;code&gt;sudo yum install curl&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and run the installation script:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export NETBIRD_DOMAIN=netbird.example.com; curl -fsSL https://github.com/netbirdio/netbird/releases/latest/download/getting-started-with-zitadel.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Once finished, you can manage the resources via &lt;code&gt;docker-compose&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;A bit on NetBird internals&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Every machine in the network runs &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/client/"&gt;NetBird Agent (or Client)&lt;/a&gt; that manages WireGuard.&lt;/li&gt; 
 &lt;li&gt;Every agent connects to &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/management/"&gt;Management Service&lt;/a&gt; that holds network state, manages peer IPs, and distributes network updates to agents (peers).&lt;/li&gt; 
 &lt;li&gt;NetBird agent uses WebRTC ICE implemented in &lt;a href="https://github.com/pion/ice"&gt;pion/ice library&lt;/a&gt; to discover connection candidates when establishing a peer-to-peer connection between machines.&lt;/li&gt; 
 &lt;li&gt;Connection candidates are discovered with the help of &lt;a href="https://en.wikipedia.org/wiki/STUN"&gt;STUN&lt;/a&gt; servers.&lt;/li&gt; 
 &lt;li&gt;Agents negotiate a connection through &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/signal/"&gt;Signal Service&lt;/a&gt; passing p2p encrypted messages with candidates.&lt;/li&gt; 
 &lt;li&gt;Sometimes the NAT traversal is unsuccessful due to strict NATs (e.g. mobile carrier-grade NAT) and a p2p connection isn't possible. When this occurs the system falls back to a relay server called &lt;a href="https://en.wikipedia.org/wiki/Traversal_Using_Relays_around_NAT"&gt;TURN&lt;/a&gt;, and a secure WireGuard tunnel is established via the TURN server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/coturn/coturn"&gt;Coturn&lt;/a&gt; is the one that has been successfully used for STUN and TURN in NetBird setups.&lt;/p&gt; 
&lt;p float="left" align="middle"&gt; &lt;img src="https://docs.netbird.io/docs-static/img/architecture/high-level-dia.png" width="700" /&gt; &lt;/p&gt; 
&lt;p&gt;See a complete &lt;a href="https://docs.netbird.io/about-netbird/how-netbird-works#architecture"&gt;architecture overview&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;Community projects&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/physk/netbird-installer"&gt;NetBird installer script&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://galaxy.ansible.com/ui/repo/published/dominion_solutions/netbird/"&gt;NetBird ansible collection by Dominion Solutions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;main&lt;/code&gt; branch may be in an &lt;em&gt;unstable or even broken state&lt;/em&gt; during development. For stable versions, see &lt;a href="https://github.com/netbirdio/netbird/releases"&gt;releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Support acknowledgement&lt;/h3&gt; 
&lt;p&gt;In November 2022, NetBird joined the &lt;a href="https://www.forschung-it-sicherheit-kommunikationssysteme.de/foerderung/bekanntmachungen/startup-secure"&gt;StartUpSecure program&lt;/a&gt; sponsored by The Federal Ministry of Education and Research of The Federal Republic of Germany. Together with &lt;a href="https://cispa.de/en"&gt;CISPA Helmholtz Center for Information Security&lt;/a&gt; NetBird brings the security best practices and simplicity to private networking.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/700848/203091324-c6d311a0-22b5-4b05-a288-91cbc6cdcc46.png" alt="CISPA_Logo_BLACK_EN_RZ_RGB (1)" /&gt;&lt;/p&gt; 
&lt;h3&gt;Testimonials&lt;/h3&gt; 
&lt;p&gt;We use open-source technologies like &lt;a href="https://www.wireguard.com/"&gt;WireGuard®&lt;/a&gt;, &lt;a href="https://github.com/pion/ice"&gt;Pion ICE (WebRTC)&lt;/a&gt;, &lt;a href="https://github.com/coturn/coturn"&gt;Coturn&lt;/a&gt;, and &lt;a href="https://rosenpass.eu"&gt;Rosenpass&lt;/a&gt;. We very much appreciate the work these guys are doing and we'd greatly appreciate if you could support them in any way (e.g., by giving a star or a contribution).&lt;/p&gt; 
&lt;h3&gt;Legal&lt;/h3&gt; 
&lt;p&gt;This repository is licensed under BSD-3-Clause license that applies to all parts of the repository except for the directories management/, signal/ and relay/. Those directories are licensed under the GNU Affero General Public License version 3.0 (AGPLv3). See the respective LICENSE files inside each directory.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;WireGuard&lt;/em&gt; and the &lt;em&gt;WireGuard&lt;/em&gt; logo are &lt;a href="https://www.wireguard.com/trademark-policy/"&gt;registered trademarks&lt;/a&gt; of Jason A. Donenfeld.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Project-HAMi/HAMi</title>
      <link>https://github.com/Project-HAMi/HAMi</link>
      <description>&lt;p&gt;Heterogeneous AI Computing Virtualization Middleware(Project under CNCF)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;English version | &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/README_cn.md"&gt;中文版&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/README_ja.md"&gt;日本語版&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/imgs/hami-horizontal-colordark.png" width="600px" /&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/Project-HAMi/HAMi.svg?sanitize=true" alt="LICENSE" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Project-HAMi/HAMi/actions/workflows/ci.yaml"&gt;&lt;img src="https://github.com/Project-HAMi/HAMi/actions/workflows/ci.yaml/badge.svg?sanitize=true" alt="build status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Project-HAMi/HAMi/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/Project-HAMi/HAMi" alt="Releases" /&gt;&lt;/a&gt; &lt;a href="https://www.bestpractices.dev/en/projects/9416"&gt;&lt;img src="https://www.bestpractices.dev/projects/9416/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/Project-HAMi/HAMi"&gt;&lt;img src="https://goreportcard.com/badge/github.com/Project-HAMi/HAMi" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/Project-HAMi/HAMi"&gt;&lt;img src="https://codecov.io/gh/Project-HAMi/HAMi/branch/master/graph/badge.svg?token=ROM8CMPXZ6" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2FProject-HAMi%2FHAMi?ref=badge_shield"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2FProject-HAMi%2FHAMi.svg?type=shield" alt="FOSSA Status" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/projecthami/hami"&gt;&lt;img src="https://img.shields.io/docker/pulls/projecthami/hami.svg?sanitize=true" alt="docker pulls" /&gt;&lt;/a&gt; &lt;a href="https://cloud-native.slack.com/archives/C07T10BU4R2"&gt;&lt;img src="https://img.shields.io/badge/Slack-Join%20Slack-blue" alt="slack" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Project-HAMi/HAMi/discussions"&gt;&lt;img src="https://img.shields.io/badge/Discuss-Ask%20Questions-blue" alt="discuss" /&gt;&lt;/a&gt; &lt;a href="http://project-hami.io"&gt;&lt;img src="https://img.shields.io/badge/website-blue" alt="website" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Project-HAMi/HAMi#contact"&gt;&lt;img src="https://img.shields.io/badge/Contact%20Me-blue" alt="Contact Me" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Project-HAMi: Heterogeneous AI Computing Virtualization Middleware&lt;/h2&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;HAMi, formerly known as 'k8s-vGPU-scheduler', is a Heterogeneous device management middleware for Kubernetes. It can manage different types of heterogeneous devices (like GPU, NPU, etc.), share heterogeneous devices among pods, make better scheduling decisions based on topology of devices and scheduling policies.&lt;/p&gt; 
&lt;p&gt;It aims to remove the gap between different Heterogeneous devices, and provide a unified interface for users to manage with no changes to their applications. As of December 2024, HAMi has been widely used not only in Internet, public cloud and private cloud, but also broadly adopted in various vertical industries including finance, securities, energy, telecommunications, education, and manufacturing. More than 50 companies or institutions are not only end users but also active contributors.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/imgs/cncf-logo.png" alt="cncf_logo" /&gt;&lt;/p&gt; 
&lt;p&gt;HAMi is a sandbox and &lt;a href="https://landscape.cncf.io/?item=orchestration-management--scheduling-orchestration--hami"&gt;landscape&lt;/a&gt; project of&lt;br /&gt; &lt;a href="https://cncf.io/"&gt;Cloud Native Computing Foundation&lt;/a&gt;(CNCF), &lt;a href="https://landscape.cncf.io/?group=cnai&amp;amp;item=cnai--general-orchestration--hami"&gt;CNAI Landscape project&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Device virtualization&lt;/h2&gt; 
&lt;p&gt;HAMi provides device virtualization for several heterogeneous devices including GPU, by supporting device sharing and device resource isolation. For the list of devices supporting device virtualization, see &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/#supported-devices"&gt;supported devices&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Device sharing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Allows partial device allocation by specifying device core usage.&lt;/li&gt; 
 &lt;li&gt;Allows partial device allocation by specifying device memory.&lt;/li&gt; 
 &lt;li&gt;Imposes a hard limit on streaming multiprocessors.&lt;/li&gt; 
 &lt;li&gt;Requires zero changes to existing programs.&lt;/li&gt; 
 &lt;li&gt;Support &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/docs/dynamic-mig-support.md"&gt;dynamic-mig&lt;/a&gt; feature, &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/examples/nvidia/dynamic_mig_example.yaml"&gt;example&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/imgs/example.png" width="500" /&gt; 
&lt;h3&gt;Device Resources Isolation&lt;/h3&gt; 
&lt;p&gt;A simple demonstration of device isolation: A task with the following resources will see 3000M device memory inside container:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;      resources:
        limits:
          nvidia.com/gpu: 1 # declare how many physical GPUs the pod needs
          nvidia.com/gpumem: 3000 # identifies 3G GPU memory each physical GPU allocates to the pod
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/imgs/hard_limit.jpg" alt="img" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;After installing HAMi, the value of &lt;code&gt;nvidia.com/gpu&lt;/code&gt; registered on the node defaults to the number of vGPUs.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;When requesting resources in a pod, &lt;code&gt;nvidia.com/gpu&lt;/code&gt; refers to the number of physical GPUs required by the current pod.&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Supported devices&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/Project-HAMi/HAMi#preparing-your-gpu-nodes"&gt;NVIDIA GPU&lt;/a&gt;&lt;br /&gt; &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/docs/cambricon-mlu-support.md"&gt;Cambricon MLU&lt;/a&gt;&lt;br /&gt; &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/docs/hygon-dcu-support.md"&gt;HYGON DCU&lt;/a&gt;&lt;br /&gt; &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/docs/iluvatar-gpu-support.md"&gt;Iluvatar CoreX GPU&lt;/a&gt;&lt;br /&gt; &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/docs/mthreads-support.md"&gt;Moore Threads GPU&lt;/a&gt;&lt;br /&gt; &lt;a href="https://github.com/Project-HAMi/ascend-device-plugin/raw/main/README.md"&gt;HUAWEI Ascend NPU&lt;/a&gt;&lt;br /&gt; &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/docs/metax-support.md"&gt;MetaX GPU&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Architect&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/imgs/hami-arch.png" width="600" /&gt; 
&lt;p&gt;HAMi consists of several components, including a unified mutatingwebhook, a unified scheduler extender, different device-plugins and different in-container virtualization technics for each heterogeneous AI devices.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Choose your orchestrator&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/#prerequisites"&gt;&lt;img src="https://img.shields.io/badge/kube-scheduler-blue" alt="kube-scheduler" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/docs/how-to-use-volcano-vgpu.md"&gt;&lt;img src="https://img.shields.io/badge/volcano-scheduler-orange" alt="volcano-scheduler" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;The list of prerequisites for running the NVIDIA device plugin is described below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;NVIDIA drivers &amp;gt;= 440&lt;/li&gt; 
 &lt;li&gt;nvidia-docker version &amp;gt; 2.0&lt;/li&gt; 
 &lt;li&gt;default runtime configured as nvidia for containerd/docker/cri-o container runtime&lt;/li&gt; 
 &lt;li&gt;Kubernetes version &amp;gt;= 1.18&lt;/li&gt; 
 &lt;li&gt;glibc &amp;gt;= 2.17 &amp;amp; glibc &amp;lt; 2.30&lt;/li&gt; 
 &lt;li&gt;kernel version &amp;gt;= 3.10&lt;/li&gt; 
 &lt;li&gt;helm &amp;gt; 3.0&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Install&lt;/h3&gt; 
&lt;p&gt;First, Label your GPU nodes for scheduling with HAMi by adding the label "gpu=on". Without this label, the nodes cannot be managed by our scheduler.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;kubectl label nodes {nodeid} gpu=on
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add our repo in helm&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;helm repo add hami-charts https://project-hami.github.io/HAMi/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use the following command for deployment:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;helm install hami hami-charts/hami -n kube-system
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Customize your installation by adjusting the &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/docs/config.md"&gt;configs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Verify your installation using the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;kubectl get pods -n kube-system
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If both &lt;code&gt;hami-device-plugin&lt;/code&gt; (formerly known as &lt;code&gt;vgpu-device-plugin&lt;/code&gt;) and &lt;code&gt;hami-scheduler&lt;/code&gt; (formerly known as &lt;code&gt;vgpu-scheduler&lt;/code&gt;) pods are in the &lt;em&gt;Running&lt;/em&gt; state, your installation is successful. You can try examples &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/examples/nvidia/default_use.yaml"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;WebUI&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/Project-HAMi/HAMi-WebUI"&gt;HAMi-WebUI&lt;/a&gt; is available after HAMi v2.4&lt;/p&gt; 
&lt;p&gt;For installation guide, click &lt;a href="https://github.com/Project-HAMi/HAMi-WebUI/raw/main/docs/installation/helm/index.md"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Monitor&lt;/h3&gt; 
&lt;p&gt;Monitoring is automatically enabled after installation. Obtain an overview of cluster information by visiting the following URL:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;http://{scheduler ip}:{monitorPort}/metrics
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The default monitorPort is 31993; other values can be set using &lt;code&gt;--set devicePlugin.service.httpPort&lt;/code&gt; during installation.&lt;/p&gt; 
&lt;p&gt;Grafana dashboard &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/docs/dashboard.md"&gt;example&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; The status of a node won't be collected before you submit a task&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Notes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you don't request vGPUs when using the device plugin with NVIDIA images all the GPUs on the machine may be exposed inside your container&lt;/li&gt; 
 &lt;li&gt;Currently, A100 MIG can be supported in only "none" and "mixed" modes.&lt;/li&gt; 
 &lt;li&gt;Tasks with the "nodeName" field cannot be scheduled at the moment; please use "nodeSelector" instead.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;RoadMap, Governance &amp;amp; Contributing&lt;/h2&gt; 
&lt;p&gt;The project is governed by a group of &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/MAINTAINERS.md"&gt;Maintainers&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/AUTHORS.md"&gt;Contributors&lt;/a&gt;. How they are selected and govern is outlined in our &lt;a href="https://github.com/Project-HAMi/community/raw/main/governance.md"&gt;Governance Document&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you're interested in being a contributor and want to get involved in developing the HAMi code, please see &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; for details on submitting patches and the contribution workflow.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/docs/develop/roadmap.md"&gt;RoadMap&lt;/a&gt; to see anything you interested.&lt;/p&gt; 
&lt;h2&gt;Meeting &amp;amp; Contact&lt;/h2&gt; 
&lt;p&gt;The HAMi community is committed to fostering an open and welcoming environment, with several ways to engage with other users and developers.&lt;/p&gt; 
&lt;p&gt;If you have any questions, please feel free to reach out to us through the following channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Regular Community Meeting: Friday at 16:00 UTC+8 (Chinese)(weekly). &lt;a href="https://www.thetimezoneconverter.com/?t=14%3A30&amp;amp;tz=GMT%2B8&amp;amp;"&gt;Convert to your timezone&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.google.com/document/d/1YC6hco03_oXbF9IOUPJ29VWEddmITIKIfSmBX8JtGBw/edit#heading=h.g61sgp7w0d0c"&gt;Meeting Notes and Agenda&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://meeting.tencent.com/dm/Ntiwq1BICD1P"&gt;Meeting Link&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Email: refer to the &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/MAINTAINERS.md"&gt;MAINTAINERS.md&lt;/a&gt; to find the email addresses of all maintainers. Feel free to contact them via email to report any issues or ask questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/hami-project"&gt;mailing list&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloud-native.slack.com/archives/C07T10BU4R2"&gt;slack&lt;/a&gt; | &lt;a href="https://slack.cncf.io/"&gt;Join&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Talks and References&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Link&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CHINA CLOUD COMPUTING INFRASTRUCTURE DEVELOPER CONFERENCE (Beijing 2024)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://live.csdn.net/room/csdnnews/3zwDP09S"&gt;Unlocking heterogeneous AI infrastructure on k8s clusters&lt;/a&gt; Starting from 03:06:15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;KubeDay(Japan 2024)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=owoaSb4nZwg"&gt;Unlocking Heterogeneous AI Infrastructure K8s Cluster:Leveraging the Power of HAMi&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;KubeCon &amp;amp; AI_dev Open Source GenAI &amp;amp; ML Summit(China 2024)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=ApkyK3zLF5Q"&gt;Is Your GPU Really Working Efficiently in the Data Center?N Ways to Improve GPU Usage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;KubeCon &amp;amp; AI_dev Open Source GenAI &amp;amp; ML Summit(China 2024)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=kcGXnp_QShs"&gt;Unlocking Heterogeneous AI Infrastructure K8s Cluster&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;KubeCon(EU 2024)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://youtu.be/fVYKk6xSOsw"&gt;Cloud Native Batch Computing with Volcano: Updates and Future&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;HAMi is under the Apache 2.0 license. See the &lt;a href="https://raw.githubusercontent.com/Project-HAMi/HAMi/master/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#Project-HAMi/HAMi&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=Project-HAMi/HAMi&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>traefik/traefik</title>
      <link>https://github.com/traefik/traefik</link>
      <description>&lt;p&gt;The Cloud Native Application Proxy&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="docs/content/assets/img/traefik.logo-dark.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="docs/content/assets/img/traefik.logo.png" /&gt; 
  &lt;img alt="Traefik" title="Traefik" src="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/assets/img/traefik.logo.png" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://doc.traefik.io/traefik"&gt;&lt;img src="https://img.shields.io/badge/docs-current-brightgreen.svg?sanitize=true" alt="Docs" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/traefik/traefik"&gt;&lt;img src="https://goreportcard.com/badge/traefik/traefik" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/traefik/traefik/raw/master/LICENSE.md"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://community.traefik.io/"&gt;&lt;img src="https://img.shields.io/badge/style-register-green.svg?style=social&amp;amp;label=Discourse" alt="Join the community support forum at https://community.traefik.io/" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=traefik"&gt;&lt;img src="https://img.shields.io/twitter/follow/traefik.svg?style=social" alt="Twitter" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Traefik (pronounced &lt;em&gt;traffic&lt;/em&gt;) is a modern HTTP reverse proxy and load balancer that makes deploying microservices easy. Traefik integrates with your existing infrastructure components (&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;, &lt;a href="https://docs.docker.com/engine/swarm/"&gt;Swarm mode&lt;/a&gt;, &lt;a href="https://kubernetes.io"&gt;Kubernetes&lt;/a&gt;, &lt;a href="https://www.consul.io/"&gt;Consul&lt;/a&gt;, &lt;a href="https://coreos.com/etcd/"&gt;Etcd&lt;/a&gt;, &lt;a href="https://rancher.com"&gt;Rancher v2&lt;/a&gt;, &lt;a href="https://aws.amazon.com/ecs"&gt;Amazon ECS&lt;/a&gt;, ...) and configures itself automatically and dynamically. Pointing Traefik at your orchestrator should be the &lt;em&gt;only&lt;/em&gt; configuration step you need.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;. &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#overview"&gt;Overview&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#features"&gt;Features&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#supported-backends"&gt;Supported backends&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#quickstart"&gt;Quickstart&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#web-ui"&gt;Web UI&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#documentation"&gt;Documentation&lt;/a&gt;&lt;/strong&gt; .&lt;/p&gt; 
&lt;p&gt;. &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#support"&gt;Support&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#release-cycle"&gt;Release cycle&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#maintainers"&gt;Maintainers&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#credits"&gt;Credits&lt;/a&gt;&lt;/strong&gt; .&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; When migrating to a new major version of Traefik, please refer to the &lt;a href="https://doc.traefik.io/traefik/migrate/v2-to-v3/"&gt;migration guide&lt;/a&gt; to ensure a smooth transition and to be aware of any breaking changes.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Imagine that you have deployed a bunch of microservices with the help of an orchestrator (like Swarm or Kubernetes) or a service registry (like etcd or consul). Now you want users to access these microservices, and you need a reverse proxy.&lt;/p&gt; 
&lt;p&gt;Traditional reverse-proxies require that you configure &lt;em&gt;each&lt;/em&gt; route that will connect paths and subdomains to &lt;em&gt;each&lt;/em&gt; microservice. In an environment where you add, remove, kill, upgrade, or scale your services &lt;em&gt;many&lt;/em&gt; times a day, the task of keeping the routes up to date becomes tedious.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This is when Traefik can help you!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Traefik listens to your service registry/orchestrator API and instantly generates the routes so your microservices are connected to the outside world -- without further intervention from your part.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Run Traefik and let it do the work for you!&lt;/strong&gt; &lt;em&gt;(But if you'd rather configure some of your routes manually, Traefik supports that too!)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/assets/img/traefik-architecture.png" alt="Architecture" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Continuously updates its configuration (No restarts!)&lt;/li&gt; 
 &lt;li&gt;Supports multiple load balancing algorithms&lt;/li&gt; 
 &lt;li&gt;Provides HTTPS to your microservices by leveraging &lt;a href="https://letsencrypt.org"&gt;Let's Encrypt&lt;/a&gt; (wildcard certificates support)&lt;/li&gt; 
 &lt;li&gt;Circuit breakers, retry&lt;/li&gt; 
 &lt;li&gt;See the magic through its clean web UI&lt;/li&gt; 
 &lt;li&gt;WebSocket, HTTP/2, gRPC ready&lt;/li&gt; 
 &lt;li&gt;Provides metrics (Rest, Prometheus, Datadog, Statsd, InfluxDB 2.X)&lt;/li&gt; 
 &lt;li&gt;Keeps access logs (JSON, CLF)&lt;/li&gt; 
 &lt;li&gt;Fast&lt;/li&gt; 
 &lt;li&gt;Exposes a Rest API&lt;/li&gt; 
 &lt;li&gt;Packaged as a single binary file (made with &lt;span&gt;❤️&lt;/span&gt; with go) and available as an &lt;a href="https://hub.docker.com/r/_/traefik/"&gt;official&lt;/a&gt; docker image&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Backends&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/docker/"&gt;Docker&lt;/a&gt; / &lt;a href="https://doc.traefik.io/traefik/providers/docker/"&gt;Swarm mode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/kubernetes-crd/"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/ecs/"&gt;ECS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/file/"&gt;File&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;To get your hands on Traefik, you can use the &lt;a href="https://doc.traefik.io/traefik/getting-started/quick-start/"&gt;5-Minute Quickstart&lt;/a&gt; in our documentation (you will need Docker).&lt;/p&gt; 
&lt;h2&gt;Web UI&lt;/h2&gt; 
&lt;p&gt;You can access the simple HTML frontend of Traefik.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/assets/img/webui-dashboard.png" alt="Web UI Providers" /&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find the complete documentation of Traefik v3 at &lt;a href="https://doc.traefik.io/traefik/"&gt;https://doc.traefik.io/traefik/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;To get community support, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;join the Traefik community forum: &lt;a href="https://community.traefik.io/"&gt;&lt;img src="https://img.shields.io/badge/style-register-green.svg?style=social&amp;amp;label=Discourse" alt="Join the chat at https://community.traefik.io/" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you need commercial support, please contact &lt;a href="https://traefik.io"&gt;Traefik.io&lt;/a&gt; by mail: &lt;a href="mailto:support@traefik.io"&gt;mailto:support@traefik.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grab the latest binary from the &lt;a href="https://github.com/traefik/traefik/releases"&gt;releases&lt;/a&gt; page and run it with the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/traefik.sample.toml"&gt;sample configuration file&lt;/a&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;./traefik --configFile=traefik.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or use the official tiny Docker image and run it with the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/traefik.sample.toml"&gt;sample configuration file&lt;/a&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker run -d -p 8080:8080 -p 80:80 -v $PWD/traefik.toml:/etc/traefik/traefik.toml traefik
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or get the sources:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/traefik/traefik
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Introductory Videos&lt;/h2&gt; 
&lt;p&gt;You can find high level and deep dive videos on &lt;a href="https://videos.traefik.io"&gt;videos.traefik.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;p&gt;We are strongly promoting a philosophy of openness and sharing, and firmly standing against the elitist closed approach. Being part of the core team should be accessible to anyone who is motivated and want to be part of that journey! This &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/contributing/maintainers-guidelines.md"&gt;document&lt;/a&gt; describes how to be part of the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/contributing/maintainers.md"&gt;maintainers' team&lt;/a&gt; as well as various responsibilities and guidelines for Traefik maintainers. You can also find more information on our process to review pull requests and manage issues &lt;a href="https://github.com/traefik/contributors-guide/raw/master/issue_triage.md"&gt;in this document&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you'd like to contribute to the project, refer to the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/CONTRIBUTING.md"&gt;contributing documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please note that this project is released with a &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/CODE_OF_CONDUCT.md"&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project, you agree to abide by its terms.&lt;/p&gt; 
&lt;h2&gt;Release Cycle&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;We usually release 3/4 new versions (e.g. 1.1.0, 1.2.0, 1.3.0) per year.&lt;/li&gt; 
 &lt;li&gt;Release Candidates are available before the release (e.g. 1.1.0-rc1, 1.1.0-rc2, 1.1.0-rc3, 1.1.0-rc4, before 1.1.0).&lt;/li&gt; 
 &lt;li&gt;Bug-fixes (e.g. 1.1.1, 1.1.2, 1.2.1, 1.2.3) are released as needed (no additional features are delivered in those versions, bug-fixes only).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each version is supported until the next one is released (e.g. 1.1.x will be supported until 1.2.0 is out).&lt;/p&gt; 
&lt;p&gt;We use &lt;a href="https://semver.org/"&gt;Semantic Versioning&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Mailing Lists&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;General announcements, new releases: mail at &lt;a href="mailto:news+subscribe@traefik.io"&gt;news+subscribe@traefik.io&lt;/a&gt; or on &lt;a href="https://groups.google.com/a/traefik.io/forum/#!forum/news"&gt;the online viewer&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Security announcements: mail at &lt;a href="mailto:security+subscribe@traefik.io"&gt;security+subscribe@traefik.io&lt;/a&gt; or on &lt;a href="https://groups.google.com/a/traefik.io/forum/#!forum/security"&gt;the online viewer&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Kudos to &lt;a href="https://www.instagram.com/pierroks/"&gt;Peka&lt;/a&gt; for his awesome work on the gopher's logo!.&lt;/p&gt; 
&lt;p&gt;The gopher's logo of Traefik is licensed under the Creative Commons 3.0 Attributions license.&lt;/p&gt; 
&lt;p&gt;The gopher's logo of Traefik was inspired by the gopher stickers made by &lt;a href="https://twitter.com/tenntenn"&gt;Takuya Ueda&lt;/a&gt;. The original Go gopher was designed by &lt;a href="https://reneefrench.blogspot.com/"&gt;Renee French&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cert-manager/cert-manager</title>
      <link>https://github.com/cert-manager/cert-manager</link>
      <description>&lt;p&gt;Automatically provision and manage TLS certificates in Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/cert-manager/cert-manager/master/logo/logo-small.png" height="256" width="256" alt="cert-manager project logo" /&gt; &lt;/p&gt; 
&lt;!-- note that the cert-manager logo in this repo is referred to in other README files in the cert-manager org
     as well as in Helm charts, etc.
     if you change its location or name, you'll need to update several other repos too! --&gt; 
&lt;p align="center"&gt;&lt;a href="https://prow.infra.cert-manager.io/?job=ci-cert-manager-master-make-test"&gt; 
  &lt;!-- prow build badge, godoc, and go report card--&gt; &lt;img alt="Build Status" src="https://prow.infra.cert-manager.io/badge.svg?jobs=ci-cert-manager-master-make-test" /&gt; &lt;/a&gt; &lt;a href="https://godoc.org/github.com/cert-manager/cert-manager"&gt;&lt;img src="https://godoc.org/github.com/cert-manager/cert-manager?status.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/cert-manager/cert-manager"&gt;&lt;img alt="Go Report Card" src="https://goreportcard.com/badge/github.com/cert-manager/cert-manager" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://artifacthub.io/packages/search?repo=cert-manager"&gt;&lt;img alt="Artifact Hub" src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/cert-manager" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/cert-manager/cert-manager"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/cert-manager/cert-manager/badge" alt="Scorecard score" /&gt;&lt;/a&gt; &lt;a href="https://clomonitor.io/projects/cncf/cert-manager"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://clomonitor.io/api/projects/cncf/cert-manager/badge" alt="CLOMonitor" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://www.bestpractices.dev/projects/8079"&gt;&lt;img src="https://www.bestpractices.dev/projects/8079/badge" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;cert-manager&lt;/h1&gt; 
&lt;p&gt;cert-manager adds certificates and certificate issuers as resource types in Kubernetes clusters, and simplifies the process of obtaining, renewing and using those certificates.&lt;/p&gt; 
&lt;p&gt;It supports issuing certificates from a variety of sources, including Let's Encrypt (ACME), HashiCorp Vault, and Venafi TPP / TLS Protect Cloud, as well as local in-cluster issuance.&lt;/p&gt; 
&lt;p&gt;cert-manager also ensures certificates remain valid and up to date, attempting to renew certificates at an appropriate time before expiry to reduce the risk of outages and remove toil.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://cert-manager.io/images/high-level-overview.svg?sanitize=true" alt="cert-manager high level overview diagram" /&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation for cert-manager can be found at &lt;a href="https://cert-manager.io/docs/"&gt;cert-manager.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For the common use-case of automatically issuing TLS certificates for Ingress resources, see the &lt;a href="https://cert-manager.io/docs/tutorials/acme/nginx-ingress/"&gt;cert-manager nginx-ingress quick start guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For a more comprehensive guide to issuing your first certificate, see our &lt;a href="https://cert-manager.io/docs/getting-started/"&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://cert-manager.io/docs/installation/"&gt;Installation&lt;/a&gt; is documented on the website, with a variety of supported methods.&lt;/p&gt; 
&lt;h2&gt;Developing cert-manager&lt;/h2&gt; 
&lt;p&gt;We actively welcome contributions and we support both Linux and macOS environments for development.&lt;/p&gt; 
&lt;p&gt;Different platforms have different requirements; we document everything on our &lt;a href="https://cert-manager.io/docs/contributing/building/"&gt;Building cert-manager&lt;/a&gt; website page.&lt;/p&gt; 
&lt;p&gt;Note in particular that macOS has several extra requirements, to ensure that modern tools are installed and available. Read the page before getting started!&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you encounter any issues whilst using cert-manager, we have a number of ways to get help:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A &lt;a href="https://cert-manager.io/docs/faq/troubleshooting/"&gt;troubleshooting guide&lt;/a&gt; on our website.&lt;/li&gt; 
 &lt;li&gt;Our official &lt;a href="https://cert-manager.io/docs/contributing/#slack"&gt;Kubernetes Slack channel&lt;/a&gt; - the quickest way to ask! (&lt;a href="https://kubernetes.slack.com/messages/cert-manager"&gt;#cert-manager&lt;/a&gt; and &lt;a href="https://kubernetes.slack.com/messages/cert-manager-dev"&gt;#cert-manager-dev&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cert-manager/cert-manager/issues"&gt;Searching for an existing issue&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you believe you've found a bug and cannot find an existing issue, feel free to &lt;a href="https://github.com/cert-manager/cert-manager/issues"&gt;open a new issue&lt;/a&gt;! Be sure to include as much information as you can about your environment.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://groups.google.com/forum/#!forum/cert-manager-dev"&gt;&lt;code&gt;cert-manager-dev&lt;/code&gt; Google Group&lt;/a&gt; is used for project wide announcements and development coordination. Anybody with a Google account can join the group by visiting the group and clicking "Join Group".&lt;/p&gt; 
&lt;h3&gt;Meetings&lt;/h3&gt; 
&lt;p&gt;We have several public meetings which any member of our Google Group is more than welcome to join!&lt;/p&gt; 
&lt;p&gt;Check out the details on &lt;a href="https://cert-manager.io/docs/contributing/#meetings"&gt;our website&lt;/a&gt;. Feel free to drop in and ask questions, chat with us or just to say hi!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome pull requests with open arms! There's a lot of work to do here, and we're especially concerned with ensuring the longevity and reliability of the project. The &lt;a href="https://cert-manager.io/docs/contributing/"&gt;contributing guide&lt;/a&gt; will help you get started.&lt;/p&gt; 
&lt;h2&gt;Coding Conventions&lt;/h2&gt; 
&lt;p&gt;Code style guidelines are documented on the &lt;a href="https://cert-manager.io/docs/contributing/coding-conventions/"&gt;coding conventions&lt;/a&gt; page of the cert-manager website. Please try to follow those guidelines if you're submitting a pull request for cert-manager.&lt;/p&gt; 
&lt;h2&gt;Importing cert-manager as a Module&lt;/h2&gt; 
&lt;p&gt;⚠️ Please note that cert-manager &lt;strong&gt;does not&lt;/strong&gt; currently provide a Go module compatibility guarantee. That means that &lt;strong&gt;most code under &lt;code&gt;pkg/&lt;/code&gt; is subject to change in a breaking way&lt;/strong&gt;, even between minor or patch releases and even if the code is currently publicly exported.&lt;/p&gt; 
&lt;p&gt;The lack of a Go module compatibility guarantee does not affect API version guarantees under the &lt;a href="https://kubernetes.io/docs/reference/using-api/deprecation-policy/"&gt;Kubernetes Deprecation Policy&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For more details see &lt;a href="https://cert-manager.io/docs/contributing/importing/"&gt;Importing cert-manager in Go&lt;/a&gt; on the cert-manager website.&lt;/p&gt; 
&lt;p&gt;The import path for cert-manager versions 1.8 and later is &lt;code&gt;github.com/cert-manager/cert-manager&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For all versions of cert-manager before 1.8, including minor and patch releases, the import path is &lt;code&gt;github.com/jetstack/cert-manager&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Security Reporting&lt;/h2&gt; 
&lt;p&gt;Security is the number one priority for cert-manager. If you think you've found a security vulnerability, we'd love to hear from you.&lt;/p&gt; 
&lt;p&gt;Follow the instructions in &lt;a href="https://raw.githubusercontent.com/cert-manager/cert-manager/master/SECURITY.md"&gt;SECURITY.md&lt;/a&gt; to make a report.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/cert-manager/cert-manager/releases"&gt;Every release&lt;/a&gt; on GitHub has a changelog, and we also publish release notes on &lt;a href="https://cert-manager.io/docs/release-notes/"&gt;the website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;History&lt;/h2&gt; 
&lt;p&gt;cert-manager is loosely based upon the work of &lt;a href="https://github.com/jetstack/kube-lego"&gt;kube-lego&lt;/a&gt; and has borrowed some wisdom from other similar projects such as &lt;a href="https://github.com/PalmStoneGames/kube-cert-manager"&gt;kube-cert-manager&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;sub&gt;&lt;sup&gt;Logo design by &lt;a href="https://zoepatersonmedia.com"&gt;Zoe Paterson&lt;/a&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>open-telemetry/opentelemetry-collector</title>
      <link>https://github.com/open-telemetry/opentelemetry-collector</link>
      <description>&lt;p&gt;OpenTelemetry Collector&lt;/p&gt;&lt;hr&gt;&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;strong&gt; &lt;a href="https://opentelemetry.io/docs/collector/getting-started/"&gt;Getting Started&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/CONTRIBUTING.md"&gt;Getting Involved&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://cloud-native.slack.com/archives/C01N6P7KR6W"&gt;Getting In Touch&lt;/a&gt; &lt;/strong&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/open-telemetry/opentelemetry-collector/actions/workflows/build-and-test.yml?query=branch%3Amain"&gt; &lt;img alt="Build Status" src="https://img.shields.io/github/actions/workflow/status/open-telemetry/opentelemetry-collector/build-and-test.yml?branch=main&amp;amp;style=for-the-badge" /&gt; &lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/open-telemetry/opentelemetry-collector"&gt; &lt;img alt="Go Report Card" src="https://goreportcard.com/badge/github.com/open-telemetry/opentelemetry-collector?style=for-the-badge" /&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/open-telemetry/opentelemetry-collector/branch/main/"&gt; &lt;img alt="Codecov Status" src="https://img.shields.io/codecov/c/github/open-telemetry/opentelemetry-collector?style=for-the-badge" /&gt; &lt;/a&gt; &lt;a href="https://github.com/open-telemetry/opentelemetry-collector/releases"&gt; &lt;img alt="GitHub release (latest by date including pre-releases)" src="https://img.shields.io/github/v/release/open-telemetry/opentelemetry-collector?include_prereleases&amp;amp;style=for-the-badge" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://www.bestpractices.dev/projects/8404"&gt;&lt;img src="https://www.bestpractices.dev/projects/8404/badge" /&gt; &lt;/a&gt; &lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:opentelemetry"&gt; &lt;img alt="Fuzzing Status" src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/opentelemetry.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;strong&gt; &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/docs/vision.md"&gt;Vision&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://opentelemetry.io/docs/collector/configuration/"&gt;Configuration&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://opentelemetry.io/docs/collector/internal-telemetry/#use-internal-telemetry-to-monitor-the-collector"&gt;Monitoring&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/docs/security-best-practices.md"&gt;Security&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://pkg.go.dev/go.opentelemetry.io/collector"&gt;Package&lt;/a&gt; &lt;/strong&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;&lt;img src="https://opentelemetry.io/img/logos/opentelemetry-logo-nav.png" alt="OpenTelemetry Icon" width="45" height="" /&gt; OpenTelemetry Collector&lt;/h1&gt; 
&lt;p&gt;The OpenTelemetry Collector offers a vendor-agnostic implementation on how to receive, process and export telemetry data. In addition, it removes the need to run, operate and maintain multiple agents/collectors in order to support open-source telemetry data formats (e.g. Jaeger, Prometheus, etc.) to multiple open-source or commercial back-ends.&lt;/p&gt; 
&lt;p&gt;Objectives:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Usable: Reasonable default configuration, supports popular protocols, runs and collects out of the box.&lt;/li&gt; 
 &lt;li&gt;Performant: Highly stable and performant under varying loads and configurations.&lt;/li&gt; 
 &lt;li&gt;Observable: An exemplar of an observable service.&lt;/li&gt; 
 &lt;li&gt;Extensible: Customizable without touching the core code.&lt;/li&gt; 
 &lt;li&gt;Unified: Single codebase, deployable as an agent or collector with support for traces, metrics and logs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The OpenTelemetry Collector SIG is present at the &lt;a href="https://cloud-native.slack.com/archives/C01N6P7KR6W"&gt;#otel-collector&lt;/a&gt; channel on the CNCF Slack and &lt;a href="https://github.com/open-telemetry/community#implementation-sigs"&gt;meets once a week&lt;/a&gt; via video calls. Everyone is invited to join those calls, which typically serves the following purposes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;meet the humans behind the project&lt;/li&gt; 
 &lt;li&gt;get an opinion about specific proposals&lt;/li&gt; 
 &lt;li&gt;look for a sponsor for a proposed component after trying already via GitHub and Slack&lt;/li&gt; 
 &lt;li&gt;get attention to a specific pull-request that got stuck and is difficult to discuss asynchronously&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We rotate our video calls between three time slots, in order to allow everyone to join at least once every three meetings. The rotation order is as follows:&lt;/p&gt; 
&lt;p&gt;Tuesday:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dateful.com/convert/pst-pdt-pacific-time?t=1700"&gt;17:00 PT&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Wednesday:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dateful.com/convert/pst-pdt-pacific-time?t=0900"&gt;09:00 PT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dateful.com/convert/pst-pdt-pacific-time?t=0500"&gt;05:00 PT&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Contributors to the project are also welcome to have ad-hoc meetings for synchronous discussions about specific points. Post a note in #otel-collector-dev on Slack inviting others, specifying the topic to be discussed. Unless there are strong reasons to keep the meeting private, please make it an open invitation for other contributors to join. Try also to identify who would be the other contributors interested on that topic and in which timezones they are.&lt;/p&gt; 
&lt;p&gt;Remember that our source of truth is GitHub: every decision made via Slack or video calls has to be recorded in the relevant GitHub issue. Ideally, the agenda items from the meeting notes would include a link to the issue or pull request where a discussion is happening already. We acknowledge that not everyone can join Slack or the synchronous calls and don't want them to feel excluded.&lt;/p&gt; 
&lt;h2&gt;Supported OTLP version&lt;/h2&gt; 
&lt;p&gt;This code base is currently built against using OTLP protocol v1.5.0, considered Stable. &lt;a href="https://github.com/open-telemetry/opentelemetry-proto?tab=readme-ov-file#stability-definition"&gt;See the OpenTelemetry Protocol Stability definition here.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Stability levels&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/docs/component-stability.md"&gt;Stability Levels and versioning&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;p&gt;When used as a library, the OpenTelemetry Collector attempts to track the currently supported versions of Go, as &lt;a href="https://go.dev/doc/devel/release#policy"&gt;defined by the Go team&lt;/a&gt;. Removing support for an unsupported Go version is not considered a breaking change.&lt;/p&gt; 
&lt;p&gt;Support for Go versions on the OpenTelemetry Collector is updated as follows:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The first release after the release of a new Go minor version &lt;code&gt;N&lt;/code&gt; will add build and tests steps for the new Go minor version.&lt;/li&gt; 
 &lt;li&gt;The first release after the release of a new Go minor version &lt;code&gt;N&lt;/code&gt; will remove support for Go version &lt;code&gt;N-2&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Official OpenTelemetry Collector distro binaries will be built with a release in the latest Go minor version series.&lt;/p&gt; 
&lt;h2&gt;Verifying the images signatures&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] To verify a signed artifact or blob, first &lt;a href="https://docs.sigstore.dev/cosign/system_config/installation/"&gt;install Cosign&lt;/a&gt;, then follow the instructions below.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;We are signing the images &lt;code&gt;otel/opentelemetry-collector&lt;/code&gt; and &lt;code&gt;otel/opentelemetry-collector-contrib&lt;/code&gt; using &lt;a href="https://github.com/sigstore/cosign"&gt;sigstore cosign&lt;/a&gt; tool and to verify the signatures you can run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ cosign verify \
  --certificate-identity=https://github.com/open-telemetry/opentelemetry-collector-releases/.github/workflows/base-release.yaml@refs/tags/&amp;lt;RELEASE_TAG&amp;gt; \
  --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
  &amp;lt;OTEL_COLLECTOR_IMAGE&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;RELEASE_TAG&amp;gt;&lt;/code&gt;: is the release that you want to validate&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;OTEL_COLLECTOR_IMAGE&amp;gt;&lt;/code&gt;: is the image that you want to check&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ cosign verify --certificate-identity=https://github.com/open-telemetry/opentelemetry-collector-releases/.github/workflows/base-release.yaml@refs/tags/v0.98.0 --certificate-oidc-issuer=https://token.actions.githubusercontent.com ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.98.0

Verification for ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.98.0 --
The following checks were performed on each of these signatures:
  - The cosign claims were validated
  - Existence of the claims in the transparency log was verified offline
  - The code-signing certificate was verified using trusted certificate authority certificates

[{"critical":{"identity":{"docker-reference":"ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib"},"image":{"docker-manifest-digest":"sha256:5cea85bcbc734a3c0a641368e5a4ea9d31b472997e9f2feca57eeb4a147fcf1a"},"type":"cosign container image signature"},"optional":{"1.3.6.1.4.1.57264.1.1":"https://token.actions.githubusercontent.com","1.3.6.1.4.1.57264.1.2":"push","1.3.6.1.4.1.57264.1.3":"9e20bf5c142e53070ccb8320a20315fffb41469e","1.3.6.1.4.1.57264.1.4":"Release Contrib","1.3.6.1.4.1.57264.1.5":"open-telemetry/opentelemetry-collector-releases","1.3.6.1.4.1.57264.1.6":"refs/tags/v0.98.0","Bundle":{"SignedEntryTimestamp":"MEUCIQDdlmNeKXQrHnonwWiHLhLLwFDVDNoOBCn2sv85J9P8mgIgDQFssWJImo1hn38VlojvSCL7Qq5FMmtnGu0oLsNdOm8=","Payload":{"body":"eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiaGFzaGVkcmVrb3JkIiwic3BlYyI6eyJkYXRhIjp7Imhhc2giOnsiYWxnb3JpdGhtIjoic2hhMjU2IiwidmFsdWUiOiIxMzVjY2RlN2YzZTNhYjU2NmFmYzJhYWU3MDljYmJlNmFhMDZlZWMzNDA2MWNkZjMyNmRhYzM2MmY0NWM4Yjg4In19LCJzaWduYXR1cmUiOnsiY29udGVudCI6Ik1FVUNJUURFbDV6N0diMWRVYkM5KzR4c1VvbDhMcWZNV2hiTzhkdEpwdExyMXhUNWZnSWdTdEwwN1I0ZDA5R2x0ZkV0azJVbmlJSlJhQVdrVDJNWDVtRXJNSlplc2pRPSIsInB1YmxpY0tleSI6eyJjb250ZW50IjoiTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVaG9ha05EUW5jeVowRjNTVUpCWjBsVlNETkNjRFZTYlVSU1VpOXphMWg0YVdWUFlrcFhSbmRrUjNNNGQwTm5XVWxMYjFwSmVtb3dSVUYzVFhjS1RucEZWazFDVFVkQk1WVkZRMmhOVFdNeWJHNWpNMUoyWTIxVmRWcEhWakpOVWpSM1NFRlpSRlpSVVVSRmVGWjZZVmRrZW1SSE9YbGFVekZ3WW01U2JBcGpiVEZzV2tkc2FHUkhWWGRJYUdOT1RXcFJkMDVFUlhoTlJGRjRUMFJOTlZkb1kwNU5hbEYzVGtSRmVFMUVVWGxQUkUwMVYycEJRVTFHYTNkRmQxbElDa3R2V2tsNmFqQkRRVkZaU1V0dldrbDZhakJFUVZGalJGRm5RVVZyWlRsSE1ubHNjMjkzYVZZMmRFOVZSazlRVVhNd2NXY3hTSEV5WmpsVUx6UTJZbEFLU1ZSNE0ybFRkVXBhV0hGc1dEUldWV2Q1VlZndmNVazJhblZ2WlZSVEswaG5XVUoyYjBseVNERTFUeTltZEd0VmVtRlBRMEpwZDNkbloxbHZUVUUwUndwQk1WVmtSSGRGUWk5M1VVVkJkMGxJWjBSQlZFSm5UbFpJVTFWRlJFUkJTMEpuWjNKQ1owVkdRbEZqUkVGNlFXUkNaMDVXU0ZFMFJVWm5VVlZHTkRrMUNrdDFNRWhqTm5rek1rNUNTVTFFU21ReVpuWkxNMHBCZDBoM1dVUldVakJxUWtKbmQwWnZRVlV6T1ZCd2VqRlphMFZhWWpWeFRtcHdTMFpYYVhocE5Ga0tXa1E0ZDJkWldVZEJNVlZrUlZGRlFpOTNVamhOU0hGSFpVZG9NR1JJUW5wUGFUaDJXakpzTUdGSVZtbE1iVTUyWWxNNWRtTkhWblZNV0ZKc1lrZFdkQXBhV0ZKNVpWTTVkbU5IVm5Wa1IxWnpXbGN4YkdSSVNqVk1WMDUyWWtkNGJGa3pVblpqYVRGNVdsZDRiRmxZVG14amVUaDFXakpzTUdGSVZtbE1NMlIyQ21OdGRHMWlSemt6WTNrNWFWbFlUbXhNV0Vwc1lrZFdhR015VlhWbFYwWjBZa1ZDZVZwWFducE1NMUpvV2pOTmRtUnFRWFZQVkdkMVRVUkJOVUpuYjNJS1FtZEZSVUZaVHk5TlFVVkNRa04wYjJSSVVuZGplbTkyVEROU2RtRXlWblZNYlVacVpFZHNkbUp1VFhWYU1td3dZVWhXYVdSWVRteGpiVTUyWW01U2JBcGlibEYxV1RJNWRFMUNTVWREYVhOSFFWRlJRbWMzT0hkQlVVbEZRa2hDTVdNeVozZE9aMWxMUzNkWlFrSkJSMFIyZWtGQ1FYZFJiMDlYVlhsTlIwcHRDazVYVFhoT1JFcHNUbFJOZDA1NlFtcFpNa2swVFhwSmQxbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCWkVKbmIzSkNaMFZGUVZsUEwwMUJSVVVLUWtFNVUxcFhlR3haV0U1c1NVVk9kbUp1VW5saFYwbDNVRkZaUzB0M1dVSkNRVWRFZG5wQlFrSlJVWFppTTBKc1lta3hNRnBYZUd4aVYxWXdZMjVyZGdwaU0wSnNZbTVTYkdKSFZuUmFXRko1WlZNeGFtSXllSE5hVjA0d1lqTkpkR050Vm5OYVYwWjZXbGhOZDBoM1dVdExkMWxDUWtGSFJIWjZRVUpDWjFGU0NtTnRWbTFqZVRrd1dWZGtla3d6V1hkTWFtczBUR3BCZDA5M1dVdExkMWxDUWtGSFJIWjZRVUpEUVZGMFJFTjBiMlJJVW5kamVtOTJURE5TZG1FeVZuVUtURzFHYW1SSGJIWmliazExV2pKc01HRklWbWxrV0U1c1kyMU9kbUp1VW14aWJsRjFXVEk1ZEUxSlIwbENaMjl5UW1kRlJVRlpUeTlOUVVWS1FraHZUUXBsUjJnd1pFaENlazlwT0haYU1td3dZVWhXYVV4dFRuWmlVemwyWTBkV2RVeFlVbXhpUjFaMFdsaFNlV1ZUT1haalIxWjFaRWRXYzFwWE1XeGtTRW8xQ2t4WFRuWmlSM2hzV1ROU2RtTnBNWGxhVjNoc1dWaE9iR041T0hWYU1td3dZVWhXYVV3elpIWmpiWFJ0WWtjNU0yTjVPV2xaV0U1c1RGaEtiR0pIVm1nS1l6SlZkV1ZYUm5SaVJVSjVXbGRhZWt3elVtaGFNMDEyWkdwQmRVOVVaM1ZOUkVFMFFtZHZja0puUlVWQldVOHZUVUZGUzBKRGIwMUxSR3hzVFdwQ2FRcGFhbFpxVFZSUmVWcFVWWHBOUkdOM1dUSk9hVTlFVFhsTlIwVjVUVVJOZUU1WFdtMWFiVWt3VFZSUk1rOVhWWGRJVVZsTFMzZFpRa0pCUjBSMmVrRkNDa04zVVZCRVFURnVZVmhTYjJSWFNYUmhSemw2WkVkV2EwMUdTVWREYVhOSFFWRlJRbWMzT0hkQlVYZEZVa0Y0UTJGSVVqQmpTRTAyVEhrNWJtRllVbThLWkZkSmRWa3lPWFJNTWpsM1dsYzBkR1JIVm5OYVZ6RnNaRWhLTlV3eU9YZGFWelV3V2xkNGJHSlhWakJqYm10MFdUSTVjMkpIVm1wa1J6bDVURmhLYkFwaVIxWm9ZekpXZWsxRVowZERhWE5IUVZGUlFtYzNPSGRCVVRCRlMyZDNiMDlYVlhsTlIwcHRUbGROZUU1RVNteE9WRTEzVG5wQ2Fsa3lTVFJOZWtsM0NsbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCYUVKbmIzSkNaMFZGUVZsUEwwMUJSVTlDUWsxTlJWaEtiRnB1VFhaa1IwWnVZM2s1TWsxRE5EVUtUME0wZDAxQ2EwZERhWE5IUVZGUlFtYzNPSGRCVVRoRlEzZDNTazVFUVhkTmFsVjZUbXBqTWsxRVJVZERhWE5IUVZGUlFtYzNPSGRCVWtGRlNYZDNhQXBoU0ZJd1kwaE5Oa3g1T1c1aFdGSnZaRmRKZFZreU9YUk1NamwzV2xjMGRHUkhWbk5hVnpGc1pFaEtOVTFDWjBkRGFYTkhRVkZSUW1jM09IZEJVa1ZGQ2tObmQwbE9SR3MxVDFSbmQwMUVTWGRuV1hOSFEybHpSMEZSVVVKbk56aDNRVkpKUldaUmVEZGhTRkl3WTBoTk5reDVPVzVoV0ZKdlpGZEpkVmt5T1hRS1RESTVkMXBYTkhSa1IxWnpXbGN4YkdSSVNqVk1NamwzV2xjMU1GcFhlR3hpVjFZd1kyNXJkRmt5T1hOaVIxWnFaRWM1ZVV4WVNteGlSMVpvWXpKV2VncE1lVFZ1WVZoU2IyUlhTWFprTWpsNVlUSmFjMkl6WkhwTU0wcHNZa2RXYUdNeVZYUlpNamwxWkVoS2NGbHBOVFZaVnpGelVVaEtiRnB1VFhaa1IwWnVDbU41T1RKTlF6UTFUME0wZDAxRVowZERhWE5IUVZGUlFtYzNPSGRCVWsxRlMyZDNiMDlYVlhsTlIwcHRUbGROZUU1RVNteE9WRTEzVG5wQ2Fsa3lTVFFLVFhwSmQxbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCVlVKbmIzSkNaMFZGUVZsUEwwMUJSVlZDUVZsTlFraENNV015WjNka1VWbExTM2RaUWdwQ1FVZEVkbnBCUWtaUlVtNUVSMVp2WkVoU2QyTjZiM1pNTW1Sd1pFZG9NVmxwTldwaU1qQjJZak5DYkdKcE1UQmFWM2hzWWxkV01HTnVhM1ppTTBKc0NtSnVVbXhpUjFaMFdsaFNlV1ZUTVdwaU1uaHpXbGRPTUdJelNYUmpiVlp6V2xkR2VscFlUWFpaVjA0d1lWYzVkV041T1hsa1Z6VjZUSHBuTWs1RVJYZ0tUbnBGTVU1cVkzWlpXRkl3V2xjeGQyUklUWFpOYWtGWFFtZHZja0puUlVWQldVOHZUVUZGVjBKQlowMUNia0l4V1cxNGNGbDZRMEpwWjFsTFMzZFpRZ3BDUVVoWFpWRkpSVUZuVWpoQ1NHOUJaVUZDTWtGT01EbE5SM0pIZUhoRmVWbDRhMlZJU214dVRuZExhVk5zTmpRemFubDBMelJsUzJOdlFYWkxaVFpQQ2tGQlFVSnFjM1JvUlVOUlFVRkJVVVJCUldOM1VsRkpaMWg2Y2xaME0xQjRkU3ROWVZKRkswUkdORzlGUldNMGVucHphSGR1VDJ4bGMwZGlla2xwYnpNS0wxWmpRMGxSUkZNelJ6QmlNemRhYUhRNGFITjJUSEozYkc1UFFXYzJWRXh1U1ZSS09HTjNkMVEzTW5sMVRVdFlUbFJCUzBKblozRm9hMnBQVUZGUlJBcEJkMDV1UVVSQ2EwRnFRWGxFUkZSYVFqQlRPVXBGYkZsSGJuTnZWVmhLYm04MU5Fc3ZUVUZUTlN0RFFVMU9lbWRqUWpWQ2JrRk5OMWhNUjBoV01HRnhDbVpaY21weFkyOXFia3RaUTAxSFRWRnFjalpUVGt0Q2NVaEtZVGwxTDBSTlQySlpNa0pKTVV0ME4yTnhOemhFT0VOcVMzQmFVblJoYnpadFVVMUVZMk1LUms5M2VYWnhWalJPVld0dlpsRTlQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09In19fX0=","integratedTime":1712809120,"logIndex":84797936,"logID":"c0d23d6ad406973f9559f3ba2d1ca01f84147d8ffc5b8445c224f98b9591801d"}},"Issuer":"https://token.actions.githubusercontent.com","Subject":"https://github.com/open-telemetry/opentelemetry-collector-releases/.github/workflows/base-release.yaml@refs/tags/v0.98.0","githubWorkflowName":"Release Contrib","githubWorkflowRef":"refs/tags/v0.98.0","githubWorkflowRepository":"open-telemetry/opentelemetry-collector-releases","githubWorkflowSha":"9e20bf5c142e53070ccb8320a20315fffb41469e","githubWorkflowTrigger":"push"}},{"critical":{"identity":{"docker-reference":"ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib"},"image":{"docker-manifest-digest":"sha256:5cea85bcbc734a3c0a641368e5a4ea9d31b472997e9f2feca57eeb4a147fcf1a"},"type":"cosign container image signature"},"optional":{"1.3.6.1.4.1.57264.1.1":"https://token.actions.githubusercontent.com","1.3.6.1.4.1.57264.1.2":"push","1.3.6.1.4.1.57264.1.3":"9e20bf5c142e53070ccb8320a20315fffb41469e","1.3.6.1.4.1.57264.1.4":"Release Contrib","1.3.6.1.4.1.57264.1.5":"open-telemetry/opentelemetry-collector-releases","1.3.6.1.4.1.57264.1.6":"refs/tags/v0.98.0","Bundle":{"SignedEntryTimestamp":"MEUCIQD1ehDnPO6fzoPIpeQ3KFuYHHBiX7RcEbpo9B2r7JAlzwIgZ1bsuQz7gAXbNU1IEdsTQgfAnRk3xVXO16GnKXM2sAQ=","Payload":{"body":"eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiaGFzaGVkcmVrb3JkIiwic3BlYyI6eyJkYXRhIjp7Imhhc2giOnsiYWxnb3JpdGhtIjoic2hhMjU2IiwidmFsdWUiOiIxMzVjY2RlN2YzZTNhYjU2NmFmYzJhYWU3MDljYmJlNmFhMDZlZWMzNDA2MWNkZjMyNmRhYzM2MmY0NWM4Yjg4In19LCJzaWduYXR1cmUiOnsiY29udGVudCI6Ik1FUUNJRU92QXl0aE5RVGNvNHFMdG9GZUVOV0toNCtEK2I5SUxyYWhoa09WMmVBM0FpQjNEL2FpUGd1T05zUlB5alhaWk1hdnlCam0vMkVxNFNUMkZJWHozTnpyYWc9PSIsInB1YmxpY0tleSI6eyJjb250ZW50IjoiTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVaHBSRU5EUW5jMlowRjNTVUpCWjBsVlZuRlRLMnd4WXpoMWVFUktOWEppZDAxMlVuaDBSR3hXVW1nMGQwTm5XVWxMYjFwSmVtb3dSVUYzVFhjS1RucEZWazFDVFVkQk1WVkZRMmhOVFdNeWJHNWpNMUoyWTIxVmRWcEhWakpOVWpSM1NFRlpSRlpSVVVSRmVGWjZZVmRrZW1SSE9YbGFVekZ3WW01U2JBcGpiVEZzV2tkc2FHUkhWWGRJYUdOT1RXcFJkMDVFUlhoTlJGRjRUMFJSZVZkb1kwNU5hbEYzVGtSRmVFMUVVWGxQUkZGNVYycEJRVTFHYTNkRmQxbElDa3R2V2tsNmFqQkRRVkZaU1V0dldrbDZhakJFUVZGalJGRm5RVVYyWlRCdGJrRkdRVzl1TVZoUGRIVlRMMXBNT0djeE5YUlJkVmxPTmtRemVUUlBWM0FLT1ZSTFMwUlVkRkJHU2xST1ZrWlJkVTlKUWs1bVJqWk1ORTlGYkd4dlZuUndaSE5uYjB0NVZGTnlPR3hTV1c1S1JIRlBRMEpwTUhkbloxbHdUVUUwUndwQk1WVmtSSGRGUWk5M1VVVkJkMGxJWjBSQlZFSm5UbFpJVTFWRlJFUkJTMEpuWjNKQ1owVkdRbEZqUkVGNlFXUkNaMDVXU0ZFMFJVWm5VVlZDSzFkSENuVmtlRE5IZUcxS1RWUkpUVVJyYW13clJtdzFXRzkzZDBoM1dVUldVakJxUWtKbmQwWnZRVlV6T1ZCd2VqRlphMFZhWWpWeFRtcHdTMFpYYVhocE5Ga0tXa1E0ZDJkWldVZEJNVlZrUlZGRlFpOTNVamhOU0hGSFpVZG9NR1JJUW5wUGFUaDJXakpzTUdGSVZtbE1iVTUyWWxNNWRtTkhWblZNV0ZKc1lrZFdkQXBhV0ZKNVpWTTVkbU5IVm5Wa1IxWnpXbGN4YkdSSVNqVk1WMDUyWWtkNGJGa3pVblpqYVRGNVdsZDRiRmxZVG14amVUaDFXakpzTUdGSVZtbE1NMlIyQ21OdGRHMWlSemt6WTNrNWFWbFlUbXhNV0Vwc1lrZFdhR015VlhWbFYwWjBZa1ZDZVZwWFducE1NMUpvV2pOTmRtUnFRWFZQVkdkMVRVUkJOVUpuYjNJS1FtZEZSVUZaVHk5TlFVVkNRa04wYjJSSVVuZGplbTkyVEROU2RtRXlWblZNYlVacVpFZHNkbUp1VFhWYU1td3dZVWhXYVdSWVRteGpiVTUyWW01U2JBcGlibEYxV1RJNWRFMUNTVWREYVhOSFFWRlJRbWMzT0hkQlVVbEZRa2hDTVdNeVozZE9aMWxMUzNkWlFrSkJSMFIyZWtGQ1FYZFJiMDlYVlhsTlIwcHRDazVYVFhoT1JFcHNUbFJOZDA1NlFtcFpNa2swVFhwSmQxbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCWkVKbmIzSkNaMFZGUVZsUEwwMUJSVVVLUWtFNVUxcFhlR3haV0U1c1NVVk9kbUp1VW5saFYwbDNVRkZaUzB0M1dVSkNRVWRFZG5wQlFrSlJVWFppTTBKc1lta3hNRnBYZUd4aVYxWXdZMjVyZGdwaU0wSnNZbTVTYkdKSFZuUmFXRko1WlZNeGFtSXllSE5hVjA0d1lqTkpkR050Vm5OYVYwWjZXbGhOZDBoM1dVdExkMWxDUWtGSFJIWjZRVUpDWjFGU0NtTnRWbTFqZVRrd1dWZGtla3d6V1hkTWFtczBUR3BCZDA5M1dVdExkMWxDUWtGSFJIWjZRVUpEUVZGMFJFTjBiMlJJVW5kamVtOTJURE5TZG1FeVZuVUtURzFHYW1SSGJIWmliazExV2pKc01HRklWbWxrV0U1c1kyMU9kbUp1VW14aWJsRjFXVEk1ZEUxSlIwbENaMjl5UW1kRlJVRlpUeTlOUVVWS1FraHZUUXBsUjJnd1pFaENlazlwT0haYU1td3dZVWhXYVV4dFRuWmlVemwyWTBkV2RVeFlVbXhpUjFaMFdsaFNlV1ZUT1haalIxWjFaRWRXYzFwWE1XeGtTRW8xQ2t4WFRuWmlSM2hzV1ROU2RtTnBNWGxhVjNoc1dWaE9iR041T0hWYU1td3dZVWhXYVV3elpIWmpiWFJ0WWtjNU0yTjVPV2xaV0U1c1RGaEtiR0pIVm1nS1l6SlZkV1ZYUm5SaVJVSjVXbGRhZWt3elVtaGFNMDEyWkdwQmRVOVVaM1ZOUkVFMFFtZHZja0puUlVWQldVOHZUVUZGUzBKRGIwMUxSR3hzVFdwQ2FRcGFhbFpxVFZSUmVWcFVWWHBOUkdOM1dUSk9hVTlFVFhsTlIwVjVUVVJOZUU1WFdtMWFiVWt3VFZSUk1rOVhWWGRJVVZsTFMzZFpRa0pCUjBSMmVrRkNDa04zVVZCRVFURnVZVmhTYjJSWFNYUmhSemw2WkVkV2EwMUdTVWREYVhOSFFWRlJRbWMzT0hkQlVYZEZVa0Y0UTJGSVVqQmpTRTAyVEhrNWJtRllVbThLWkZkSmRWa3lPWFJNTWpsM1dsYzBkR1JIVm5OYVZ6RnNaRWhLTlV3eU9YZGFWelV3V2xkNGJHSlhWakJqYm10MFdUSTVjMkpIVm1wa1J6bDVURmhLYkFwaVIxWm9ZekpXZWsxRVowZERhWE5IUVZGUlFtYzNPSGRCVVRCRlMyZDNiMDlYVlhsTlIwcHRUbGROZUU1RVNteE9WRTEzVG5wQ2Fsa3lTVFJOZWtsM0NsbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCYUVKbmIzSkNaMFZGUVZsUEwwMUJSVTlDUWsxTlJWaEtiRnB1VFhaa1IwWnVZM2s1TWsxRE5EVUtUME0wZDAxQ2EwZERhWE5IUVZGUlFtYzNPSGRCVVRoRlEzZDNTazVFUVhkTmFsVjZUbXBqTWsxRVJVZERhWE5IUVZGUlFtYzNPSGRCVWtGRlNYZDNhQXBoU0ZJd1kwaE5Oa3g1T1c1aFdGSnZaRmRKZFZreU9YUk1NamwzV2xjMGRHUkhWbk5hVnpGc1pFaEtOVTFDWjBkRGFYTkhRVkZSUW1jM09IZEJVa1ZGQ2tObmQwbE9SR3MxVDFSbmQwMUVTWGRuV1hOSFEybHpSMEZSVVVKbk56aDNRVkpKUldaUmVEZGhTRkl3WTBoTk5reDVPVzVoV0ZKdlpGZEpkVmt5T1hRS1RESTVkMXBYTkhSa1IxWnpXbGN4YkdSSVNqVk1NamwzV2xjMU1GcFhlR3hpVjFZd1kyNXJkRmt5T1hOaVIxWnFaRWM1ZVV4WVNteGlSMVpvWXpKV2VncE1lVFZ1WVZoU2IyUlhTWFprTWpsNVlUSmFjMkl6WkhwTU0wcHNZa2RXYUdNeVZYUlpNamwxWkVoS2NGbHBOVFZaVnpGelVVaEtiRnB1VFhaa1IwWnVDbU41T1RKTlF6UTFUME0wZDAxRVowZERhWE5IUVZGUlFtYzNPSGRCVWsxRlMyZDNiMDlYVlhsTlIwcHRUbGROZUU1RVNteE9WRTEzVG5wQ2Fsa3lTVFFLVFhwSmQxbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCVlVKbmIzSkNaMFZGUVZsUEwwMUJSVlZDUVZsTlFraENNV015WjNka1VWbExTM2RaUWdwQ1FVZEVkbnBCUWtaUlVtNUVSMVp2WkVoU2QyTjZiM1pNTW1Sd1pFZG9NVmxwTldwaU1qQjJZak5DYkdKcE1UQmFWM2hzWWxkV01HTnVhM1ppTTBKc0NtSnVVbXhpUjFaMFdsaFNlV1ZUTVdwaU1uaHpXbGRPTUdJelNYUmpiVlp6V2xkR2VscFlUWFpaVjA0d1lWYzVkV041T1hsa1Z6VjZUSHBuTWs1RVJYZ0tUbnBGTVU1cVkzWlpXRkl3V2xjeGQyUklUWFpOYWtGWFFtZHZja0puUlVWQldVOHZUVUZGVjBKQlowMUNia0l4V1cxNGNGbDZRMEpwZDFsTFMzZFpRZ3BDUVVoWFpWRkpSVUZuVWpsQ1NITkJaVkZDTTBGT01EbE5SM0pIZUhoRmVWbDRhMlZJU214dVRuZExhVk5zTmpRemFubDBMelJsUzJOdlFYWkxaVFpQQ2tGQlFVSnFjM1JvUjJKSlFVRkJVVVJCUldkM1VtZEphRUZQZUZNM2RteDRjVzVGYTBKVVRtSlZVRUpsUkZSbk0waGtlRlkyY0cxWk9FdGliREV6TjNBS1lWUnViMEZwUlVFelMyMUxVbU5uYWxBeVQzSmxORVpyVm5vNU4xaENNWGRsUzBOeWFXazFTMWx2UTB0bVkxRktSREJSZDBObldVbExiMXBKZW1vd1JRcEJkMDFFWVVGQmQxcFJTWGhCUzNwcVpHMUZTV2gzV21Kb1lVSlNlalk1Y1N0MWVrNVZSMmxhYlRWVk4xcE5aWFJMUTFSM1VFTkljRkZQVldvdlVERkJDa2R0YWt3elJucFFObTVpYkRGblNYZFNUbXN6UkhkNWMwOUJUMHhoUVVoR09IaHhZV0ZzT0U5WGNGRmFhRGh4TTJVMVNVSmFXR0ZWVkhocFlWbGFTM29LUXpWS1RGVlNWbnBMTURsd04wVjBUd290TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09In19fX0=","integratedTime":1712809122,"logIndex":84797940,"logID":"c0d23d6ad406973f9559f3ba2d1ca01f84147d8ffc5b8445c224f98b9591801d"}},"Issuer":"https://token.actions.githubusercontent.com","Subject":"https://github.com/open-telemetry/opentelemetry-collector-releases/.github/workflows/base-release.yaml@refs/tags/v0.98.0","githubWorkflowName":"Release Contrib","githubWorkflowRef":"refs/tags/v0.98.0","githubWorkflowRepository":"open-telemetry/opentelemetry-collector-releases","githubWorkflowSha":"9e20bf5c142e53070ccb8320a20315fffb41469e","githubWorkflowTrigger":"push"}}]
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] We started signing the images with release &lt;code&gt;v0.95.0&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;Here is a list of community roles with current and previous members:&lt;/p&gt; 
&lt;h3&gt;Maintainers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codeboten"&gt;Alex Boten&lt;/a&gt;, Honeycomb&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bogdandrutu"&gt;Bogdan Drutu&lt;/a&gt;, Snowflake&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dmitryax"&gt;Dmitrii Anoshin&lt;/a&gt;, Splunk&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mx-psi"&gt;Pablo Baeyens&lt;/a&gt;, DataDog&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the maintainer role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#maintainer"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Approvers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atoulme"&gt;Antoine Toulme&lt;/a&gt;, Splunk&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dmathieu"&gt;Damien Mathieu&lt;/a&gt;, Elastic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/evan-bradley"&gt;Evan Bradley&lt;/a&gt;, Dynatrace&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jade-guiton-dd"&gt;Jade Guiton&lt;/a&gt;, Datadog&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmacd"&gt;Joshua MacDonald&lt;/a&gt;, Microsoft&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TylerHelmuth"&gt;Tyler Helmuth&lt;/a&gt;, Honeycomb&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/songy23"&gt;Yang Song&lt;/a&gt;, Datadog&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the approver role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#approver"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In addition to what is described at the organization-level, the SIG Collector requires all core approvers to take part in rotating the role of the &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/docs/release.md#release-manager"&gt;release manager&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/axw"&gt;Andrew Wilkins&lt;/a&gt;, Elastic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andrzej-stencel"&gt;Andrzej Stencel&lt;/a&gt;, Elastic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sincejune"&gt;Chao Weng&lt;/a&gt;, AppDynamics&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VihasMakwana"&gt;Vihas Makwana&lt;/a&gt;, Elastic&lt;/li&gt; 
 &lt;li&gt;Actively seeking contributors to triage issues&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the triager role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#triager"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Emeritus Maintainers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pjanotti"&gt;Paulo Janotti&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tigrannajaryan"&gt;Tigran Najaryan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the emeritus role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#emeritus-maintainerapprovertriager"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Emeritus Approvers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aneurysm9"&gt;Anthony Mirabella&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/djaglowski"&gt;Daniel Jaglowski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/james-bebbington"&gt;James Bebbington&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jrcamp"&gt;Jay Camp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jpkrohling"&gt;Juraci Paixão Kröhling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nilebox"&gt;Nail Islamov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/owais"&gt;Owais Lone&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rghetia"&gt;Rahul Patel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sjkaris"&gt;Steven Karis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the emeritus role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#emeritus-maintainerapprovertriager"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Emeritus Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alolita"&gt;Alolita Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andrewhsu"&gt;Andrew Hsu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/punya"&gt;Punya Biswal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/flands"&gt;Steve Flanders&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the emeritus role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#emeritus-maintainerapprovertriager"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Thanks to all of our contributors!&lt;/h3&gt; 
&lt;a href="https://github.com/open-telemetry/opentelemetry-collector/graphs/contributors"&gt; &lt;img alt="Repo contributors" src="https://contrib.rocks/image?repo=open-telemetry/opentelemetry-collector" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>docker/cli</title>
      <link>https://github.com/docker/cli</link>
      <description>&lt;p&gt;The Docker CLI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker CLI&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/docker/cli"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/docker/cli" alt="PkgGoDev" /&gt;&lt;/a&gt; &lt;a href="https://github.com/docker/cli/actions?query=workflow%3Abuild"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/docker/cli/build.yml?branch=master&amp;amp;label=build&amp;amp;logo=github" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/docker/cli/actions?query=workflow%3Atest"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/docker/cli/test.yml?branch=master&amp;amp;label=test&amp;amp;logo=github" alt="Test Status" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/docker/cli"&gt;&lt;img src="https://goreportcard.com/badge/github.com/docker/cli" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/docker/cli"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/docker/cli/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/docker/cli"&gt;&lt;img src="https://img.shields.io/codecov/c/github/docker/cli?logo=codecov" alt="Codecov" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;This repository is the home of the Docker CLI.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;docker/cli&lt;/code&gt; is developed using Docker.&lt;/p&gt; 
&lt;p&gt;Build CLI from source:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker buildx bake
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build binaries for all supported platforms:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker buildx bake cross
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build for a specific platform:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker buildx bake --set binary.platform=linux/arm64 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build dynamic binary for glibc or musl:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;USE_GLIBC=1 docker buildx bake dynbinary 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run all linting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker buildx bake lint shellcheck
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run test:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker buildx bake test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;List all the available targets:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make help
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;In-container development environment&lt;/h3&gt; 
&lt;p&gt;Start an interactive development environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make -f docker.Makefile shell
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Legal&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Brought to you courtesy of our legal counsel. For more context, see the &lt;a href="https://github.com/docker/cli/raw/master/NOTICE"&gt;NOTICE&lt;/a&gt; document in this repo.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Use and transfer of Docker may be subject to certain restrictions by the United States and other governments.&lt;/p&gt; 
&lt;p&gt;It is your responsibility to ensure that your use and/or transfer does not violate applicable laws.&lt;/p&gt; 
&lt;p&gt;For more information, see &lt;a href="https://www.bis.doc.gov"&gt;https://www.bis.doc.gov&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;docker/cli is licensed under the Apache License, Version 2.0. See &lt;a href="https://github.com/docker/docker/raw/master/LICENSE"&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sigstore/cosign</title>
      <link>https://github.com/sigstore/cosign</link>
      <description>&lt;p&gt;Code signing and transparency for containers and binaries&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img style="max-width: 100%;width: 300px;" src="https://raw.githubusercontent.com/sigstore/community/main/artwork/cosign/horizontal/color/sigstore_cosign-horizontal-color.svg?sanitize=true" alt="Cosign logo" /&gt; &lt;/p&gt; 
&lt;h1&gt;cosign&lt;/h1&gt; 
&lt;p&gt;Signing OCI containers (and other artifacts) using &lt;a href="https://sigstore.dev/"&gt;Sigstore&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/sigstore/cosign"&gt;&lt;img src="https://goreportcard.com/badge/github.com/sigstore/cosign" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sigstore/cosign/actions/workflows/e2e-tests.yml"&gt;&lt;img src="https://github.com/sigstore/cosign/actions/workflows/e2e-tests.yml/badge.svg?sanitize=true" alt="e2e-tests" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/5715"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/5715/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://securityscorecards.dev/viewer/?uri=github.com/sigstore/cosign"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/sigstore/cosign/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Cosign aims to make signatures &lt;strong&gt;invisible infrastructure&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Cosign supports:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;"Keyless signing" with the Sigstore public good Fulcio certificate authority and Rekor transparency log (default)&lt;/li&gt; 
 &lt;li&gt;Hardware and KMS signing&lt;/li&gt; 
 &lt;li&gt;Signing with a cosign generated encrypted private/public keypair&lt;/li&gt; 
 &lt;li&gt;Container Signing, Verification and Storage in an OCI registry.&lt;/li&gt; 
 &lt;li&gt;Bring-your-own PKI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Info&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Cosign&lt;/code&gt; is developed as part of the &lt;a href="https://sigstore.dev"&gt;&lt;code&gt;sigstore&lt;/code&gt;&lt;/a&gt; project. We also use a &lt;a href="https://sigstore.slack.com"&gt;slack channel&lt;/a&gt;! Click &lt;a href="https://join.slack.com/t/sigstore/shared_invite/zt-mhs55zh0-XmY3bcfWn4XEyMqUUutbUQ"&gt;here&lt;/a&gt; for the invite link.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;For Homebrew, Arch, Nix, GitHub Action, and Kubernetes installs see the &lt;a href="https://docs.sigstore.dev/cosign/system_config/installation/"&gt;installation docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For Linux and macOS binaries see the &lt;a href="https://github.com/sigstore/cosign/releases/latest"&gt;GitHub release assets&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;🚨&lt;/span&gt; If you are downloading releases of cosign from our GCS bucket - please see more information on the July 31, 2023 &lt;a href="https://blog.sigstore.dev/cosign-releases-bucket-deprecation/"&gt;deprecation notice&lt;/a&gt; &lt;span&gt;🚨&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;Developer Installation&lt;/h2&gt; 
&lt;p&gt;If you have Go 1.22+, you can setup a development environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ git clone https://github.com/sigstore/cosign
$ cd cosign
$ go install ./cmd/cosign
$ $(go env GOPATH)/bin/cosign
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you are interested in contributing to &lt;code&gt;cosign&lt;/code&gt;, please read the &lt;a href="https://raw.githubusercontent.com/sigstore/cosign/main/CONTRIBUTING.md"&gt;contributing documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Future Cosign development will be focused the next major release which will be based on &lt;a href="https://github.com/sigstore/sigstore-go"&gt;sigstore-go&lt;/a&gt;. Maintainers will be focused on feature development within sigstore-go. Contributions to sigstore-go, particularly around bring-your-own keys and signing, are appreciated. Please see the &lt;a href="https://github.com/sigstore/sigstore-go/issues"&gt;issue tracker&lt;/a&gt; for good first issues.&lt;/p&gt; 
&lt;p&gt;Cosign 2.x is a stable release and will continue to receive periodic feature updates and bug fixes. PRs that are small in scope and size are most likely to be quickly reviewed.&lt;/p&gt; 
&lt;p&gt;PRs which significantly modify or break the API will not be accepted. PRs which are significant in size but do not introduce breaking changes may be accepted, but will be considered lower priority than PRs in sigstore-go.&lt;/p&gt; 
&lt;h2&gt;Dockerfile&lt;/h2&gt; 
&lt;p&gt;Here is how to install and use cosign inside a Dockerfile through the ghcr.io/sigstore/cosign/cosign image:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;FROM ghcr.io/sigstore/cosign/cosign:v2.4.1 as cosign-bin

# Source: https://github.com/chainguard-images/static
FROM cgr.dev/chainguard/static:latest
COPY --from=cosign-bin /ko-app/cosign /usr/local/bin/cosign
ENTRYPOINT [ "cosign" ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;This shows how to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;sign a container image with the default identity-based "keyless signing" method (see &lt;a href="https://docs.sigstore.dev/cosign/signing/overview/"&gt;the documentation for more information&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;verify the container image&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Sign a container and store the signature in the registry&lt;/h3&gt; 
&lt;p&gt;Note that you should always sign images based on their digest (&lt;code&gt;@sha256:...&lt;/code&gt;) rather than a tag (&lt;code&gt;:latest&lt;/code&gt;) because otherwise you might sign something you didn't intend to!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt; cosign sign $IMAGE

Generating ephemeral keys...
Retrieving signed certificate...

	Note that there may be personally identifiable information associated with this signed artifact.
	This may include the email address associated with the account with which you authenticate.
	This information will be used for signing this artifact and will be stored in public transparency logs and cannot be removed later.

By typing 'y', you attest that you grant (or have permission to grant) and agree to have this information stored permanently in transparency logs.
Are you sure you would like to continue? [y/N] y
Your browser will now be opened to:
https://oauth2.sigstore.dev/auth/auth?access_type=online&amp;amp;client_id=sigstore&amp;amp;code_challenge=OrXitVKUZm2lEWHVt1oQWR4HZvn0rSlKhLcltglYxCY&amp;amp;code_challenge_method=S256&amp;amp;nonce=2KvOWeTFxYfxyzHtssvlIXmY6Jk&amp;amp;redirect_uri=http%3A%2F%2Flocalhost%3A57102%2Fauth%2Fcallback&amp;amp;response_type=code&amp;amp;scope=openid+email&amp;amp;state=2KvOWfbQJ1caqScgjwibzK2qJmb
Successfully verified SCT...
tlog entry created with index: 12086900
Pushing signature to: $IMAGE
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Cosign will prompt you to authenticate via OIDC, where you'll sign in with your email address. Under the hood, cosign will request a code signing certificate from the Fulcio certificate authority. The subject of the certificate will match the email address you logged in with. Cosign will then store the signature and certificate in the Rekor transparency log, and upload the signature to the OCI registry alongside the image you're signing.&lt;/p&gt; 
&lt;h3&gt;Verify a container&lt;/h3&gt; 
&lt;p&gt;To verify the image, you'll need to pass in the expected certificate subject and certificate issuer via the &lt;code&gt;--certificate-identity&lt;/code&gt; and &lt;code&gt;--certificate-oidc-issuer&lt;/code&gt; flags:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cosign verify $IMAGE --certificate-identity=$IDENTITY --certificate-oidc-issuer=$OIDC_ISSUER
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also pass in a regex for the certificate identity and issuer flags, &lt;code&gt;--certificate-identity-regexp&lt;/code&gt; and &lt;code&gt;--certificate-oidc-issuer-regexp&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Verify a container against a public key&lt;/h3&gt; 
&lt;p&gt;This command returns &lt;code&gt;0&lt;/code&gt; if &lt;em&gt;at least one&lt;/em&gt; &lt;code&gt;cosign&lt;/code&gt; formatted signature for the image is found matching the public key. See the detailed usage below for information and caveats on other signature formats.&lt;/p&gt; 
&lt;p&gt;Any valid payloads are printed to stdout, in json format. Note that these signed payloads include the digest of the container image, which is how we can be sure these "detached" signatures cover the correct image.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ cosign verify --key cosign.pub $IMAGE_URI:1h
The following checks were performed on these signatures:
  - The cosign claims were validated
  - The signatures were verified against the specified public key
{"Critical":{"Identity":{"docker-reference":""},"Image":{"Docker-manifest-digest":"sha256:87ef60f558bad79beea6425a3b28989f01dd417164150ab3baab98dcbf04def8"},"Type":"cosign container image signature"},"Optional":null}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Verify a container in an air-gapped environment&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This section is out of date.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Most verification workflows require periodically requesting service keys from a TUF repository. For airgapped verification of signatures using the public-good instance, you will need to retrieve the &lt;a href="https://github.com/sigstore/root-signing/raw/main/targets/trusted_root.json"&gt;trusted root&lt;/a&gt; file from the production TUF repository. The contents of this file will change without notification. By not using TUF, you will need to build your own mechanism to keep your airgapped copy of this file up-to-date.&lt;/p&gt; 
&lt;p&gt;Cosign can do completely offline verification by verifying a &lt;a href="https://raw.githubusercontent.com/sigstore/cosign/main/specs/SIGNATURE_SPEC.md#properties"&gt;bundle&lt;/a&gt; which is typically distributed as an annotation on the image manifest. As long as this annotation is present, then offline verification can be done. This bundle annotation is always included by default for keyless signing, so the default &lt;code&gt;cosign sign&lt;/code&gt; functionality will include all materials needed for offline verification.&lt;/p&gt; 
&lt;p&gt;To verify an image in an air-gapped environment, the image and signatures must be available locally on the filesystem.&lt;/p&gt; 
&lt;p&gt;An image can be saved locally using &lt;code&gt;cosign save&lt;/code&gt; (note, this step must be done with a network connection):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cosign initialize # This will pull in the latest TUF root
cosign save $IMAGE_NAME --dir ./path/to/dir
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, in an air-gapped environment, this local image can be verified:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cosign verify --certificate-identity $CERT_IDENTITY --certificate-oidc-issuer $CERT_OIDC_ISSUER --offline --local-image ./path/to/dir
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You'll need to pass in expected values for &lt;code&gt;$CERT_IDENTITY&lt;/code&gt; and &lt;code&gt;$CERT_OIDC_ISSUER&lt;/code&gt; to correctly verify this image. If you signed with a keypair, the same command will work, assuming the public key material is present locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cosign verify --key cosign.pub --offline --local-image ./path/to/dir
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;What ** is not ** production ready?&lt;/h3&gt; 
&lt;p&gt;While parts of &lt;code&gt;cosign&lt;/code&gt; are stable, we are continuing to experiment and add new features. The following feature set is not considered stable yet, but we are committed to stabilizing it over time!&lt;/p&gt; 
&lt;h4&gt;Formats/Specifications&lt;/h4&gt; 
&lt;p&gt;While the &lt;code&gt;cosign&lt;/code&gt; code for uploading, signing, retrieving, and verifying several artifact types is stable, the format specifications for some of those types may not be considered stable yet. Some of these are developed outside of the &lt;code&gt;cosign&lt;/code&gt; project, so we are waiting for them to stabilize first.&lt;/p&gt; 
&lt;p&gt;These include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The SBOM specification for storing SBOMs in a container registry&lt;/li&gt; 
 &lt;li&gt;The In-Toto attestation format&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Working with Other Artifacts&lt;/h2&gt; 
&lt;p&gt;OCI registries are useful for storing more than just container images! &lt;code&gt;Cosign&lt;/code&gt; also includes some utilities for publishing generic artifacts, including binaries, scripts, and configuration files using the OCI protocol.&lt;/p&gt; 
&lt;p&gt;This section shows how to leverage these for an easy-to-use, backwards-compatible artifact distribution system that integrates well with the rest of Sigstore.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://docs.sigstore.dev/cosign/signing/other_types/"&gt;the documentation&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Blobs&lt;/h3&gt; 
&lt;p&gt;You can publish an artifact with &lt;code&gt;cosign upload blob&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ echo "my first artifact" &amp;gt; artifact
$ BLOB_SUM=$(shasum -a 256 artifact | cut -d' ' -f 1) &amp;amp;&amp;amp; echo "$BLOB_SUM"
c69d72c98b55258f9026f984e4656f0e9fd3ef024ea3fac1d7e5c7e6249f1626
$ BLOB_NAME=my-artifact-$(uuidgen | head -c 8 | tr 'A-Z' 'a-z')
$ BLOB_URI=ttl.sh/$BLOB_NAME:1h

$ BLOB_URI_DIGEST=$(cosign upload blob -f artifact $BLOB_URI) &amp;amp;&amp;amp; echo "$BLOB_URI_DIGEST"
Uploading file from [artifact] to [ttl.sh/my-artifact-f42c22e0:5m] with media type [text/plain]
File [artifact] is available directly at [ttl.sh/v2/my-artifact-f42c22e0/blobs/sha256:c69d72c98b55258f9026f984e4656f0e9fd3ef024ea3fac1d7e5c7e6249f1626]
Uploaded image to:
ttl.sh/my-artifact-f42c22e0@sha256:790d47850411e902aabebc3a684eeb78fcae853d4dd6e1cc554d70db7f05f99f
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Your users can download it from the "direct" url with standard tools like curl or wget:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ curl -L ttl.sh/v2/$BLOB_NAME/blobs/sha256:$BLOB_SUM &amp;gt; artifact-fetched
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The digest is baked right into the URL, so they can check that as well:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ cat artifact-fetched | shasum -a 256
c69d72c98b55258f9026f984e4656f0e9fd3ef024ea3fac1d7e5c7e6249f1626  -
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can sign it with the normal &lt;code&gt;cosign sign&lt;/code&gt; command and flags:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ cosign sign --key cosign.key $BLOB_URI_DIGEST
Enter password for private key:
Pushing signature to: ttl.sh/my-artifact-f42c22e0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As usual, make sure to reference any images you sign by their digest to make sure you don't sign the wrong thing!&lt;/p&gt; 
&lt;h4&gt;Tekton Bundles&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://tekton.dev"&gt;Tekton&lt;/a&gt; bundles can be uploaded and managed within an OCI registry. The specification is &lt;a href="https://tekton.dev/docs/pipelines/tekton-bundle-contracts/"&gt;here&lt;/a&gt;. This means they can also be signed and verified with &lt;code&gt;cosign&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Tekton Bundles can currently be uploaded with the &lt;a href="https://github.com/tektoncd/cli"&gt;tkn cli&lt;/a&gt;, but we may add this support to &lt;code&gt;cosign&lt;/code&gt; in the future.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ tkn bundle push us.gcr.io/dlorenc-vmtest2/pipeline:latest -f task-output-image.yaml
Creating Tekton Bundle:
        - Added TaskRun:  to image

Pushed Tekton Bundle to us.gcr.io/dlorenc-vmtest2/pipeline@sha256:124e1fdee94fe5c5f902bc94da2d6e2fea243934c74e76c2368acdc8d3ac7155
$ cosign sign --key cosign.key us.gcr.io/dlorenc-vmtest2/pipeline@sha256:124e1fdee94fe5c5f902bc94da2d6e2fea243934c74e76c2368acdc8d3ac7155
Enter password for private key:
tlog entry created with index: 5086
Pushing signature to: us.gcr.io/dlorenc-vmtest2/demo:sha256-124e1fdee94fe5c5f902bc94da2d6e2fea243934c74e76c2368acdc8d3ac7155.sig
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;WASM&lt;/h4&gt; 
&lt;p&gt;Web Assembly Modules can also be stored in an OCI registry, using this &lt;a href="https://github.com/solo-io/wasm/tree/master/spec"&gt;specification&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Cosign can upload these using the &lt;code&gt;cosign wasm upload&lt;/code&gt; command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ cosign upload wasm -f hello.wasm us.gcr.io/dlorenc-vmtest2/wasm
$ cosign sign --key cosign.key us.gcr.io/dlorenc-vmtest2/wasm@sha256:9e7a511fb3130ee4641baf1adc0400bed674d4afc3f1b81bb581c3c8f613f812
Enter password for private key:
tlog entry created with index: 5198
Pushing signature to: us.gcr.io/dlorenc-vmtest2/wasm:sha256-9e7a511fb3130ee4641baf1adc0400bed674d4afc3f1b81bb581c3c8f613f812.sig
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;eBPF&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://ebpf.io"&gt;eBPF&lt;/a&gt; modules can also be stored in an OCI registry, using this &lt;a href="https://github.com/solo-io/bumblebee/tree/main/spec"&gt;specification&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The image below was built using the &lt;code&gt;bee&lt;/code&gt; tool. More information can be found &lt;a href="https://github.com/solo-io/bumblebee/"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Cosign can then sign these images as they can any other OCI image.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ bee build ./examples/tcpconnect/tcpconnect.c localhost:5000/tcpconnect:test
$ bee push localhost:5000/tcpconnect:test
$ cosign sign  --key cosign.key localhost:5000/tcpconnect@sha256:7a91c50d922925f152fec96ed1d84b7bc6b2079c169d68826f6cf307f22d40e6
Enter password for private key:
Pushing signature to: localhost:5000/tcpconnect
$ cosign verify --key cosign.pub localhost:5000/tcpconnect:test

Verification for localhost:5000/tcpconnect:test --
The following checks were performed on each of these signatures:
  - The cosign claims were validated
  - The signatures were verified against the specified public key

[{"critical":{"identity":{"docker-reference":"localhost:5000/tcpconnect"},"image":{"docker-manifest-digest":"sha256:7a91c50d922925f152fec96ed1d84b7bc6b2079c169d68826f6cf307f22d40e6"},"type":"cosign container image signature"},"optional":null}]

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;In-Toto Attestations&lt;/h4&gt; 
&lt;p&gt;Cosign also has built-in support for &lt;a href="https://in-toto.io"&gt;in-toto&lt;/a&gt; attestations. The specification for these is defined &lt;a href="https://github.com/in-toto/attestation"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can create and sign one from a local predicate file using the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ cosign attest --predicate &amp;lt;file&amp;gt; --key cosign.key $IMAGE_URI_DIGEST
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All of the standard key management systems are supported. Payloads are signed using the DSSE signing spec, defined &lt;a href="https://github.com/secure-systems-lab/dsse"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To verify:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ cosign verify-attestation --key cosign.pub $IMAGE_URI
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Detailed Usage&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://docs.sigstore.dev/cosign/signing/overview/"&gt;Usage documentation&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Hardware-based Tokens&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://docs.sigstore.dev/cosign/key_management/hardware-based-tokens/"&gt;Hardware Tokens documentation&lt;/a&gt; for information on how to use &lt;code&gt;cosign&lt;/code&gt; with hardware.&lt;/p&gt; 
&lt;h2&gt;Registry Support&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;cosign&lt;/code&gt; uses &lt;a href="https://github.com/google/go-containerregistry"&gt;go-containerregistry&lt;/a&gt; for registry interactions, which has generally excellent compatibility, but some registries may have quirks.&lt;/p&gt; 
&lt;p&gt;Today, &lt;code&gt;cosign&lt;/code&gt; has been tested and works against the following registries:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;AWS Elastic Container Registry&lt;/li&gt; 
 &lt;li&gt;GCP's Artifact Registry and Container Registry&lt;/li&gt; 
 &lt;li&gt;Docker Hub&lt;/li&gt; 
 &lt;li&gt;Azure Container Registry&lt;/li&gt; 
 &lt;li&gt;JFrog Artifactory Container Registry&lt;/li&gt; 
 &lt;li&gt;The CNCF distribution/distribution Registry&lt;/li&gt; 
 &lt;li&gt;GitLab Container Registry&lt;/li&gt; 
 &lt;li&gt;GitHub Container Registry&lt;/li&gt; 
 &lt;li&gt;The CNCF Harbor Registry&lt;/li&gt; 
 &lt;li&gt;Digital Ocean Container Registry&lt;/li&gt; 
 &lt;li&gt;Sonatype Nexus Container Registry&lt;/li&gt; 
 &lt;li&gt;Alibaba Cloud Container Registry&lt;/li&gt; 
 &lt;li&gt;Red Hat Quay Container Registry 3.6+ / Red Hat quay.io&lt;/li&gt; 
 &lt;li&gt;Elastic Container Registry&lt;/li&gt; 
 &lt;li&gt;IBM Cloud Container Registry&lt;/li&gt; 
 &lt;li&gt;Cloudsmith Container Registry&lt;/li&gt; 
 &lt;li&gt;The CNCF zot Registry&lt;/li&gt; 
 &lt;li&gt;OVHcloud Managed Private Registry&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We aim for wide registry support. To &lt;code&gt;sign&lt;/code&gt; images in registries which do not yet fully support &lt;a href="https://github.com/sigstore/cosign/raw/main/specs/SIGNATURE_SPEC.md"&gt;OCI media types&lt;/a&gt;, one may need to use &lt;code&gt;COSIGN_DOCKER_MEDIA_TYPES&lt;/code&gt; to fall back to legacy equivalents. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;COSIGN_DOCKER_MEDIA_TYPES=1 cosign sign --key cosign.key legacy-registry.example.com/my/image@$DIGEST
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please help test and file bugs if you see issues! Instructions can be found in the &lt;a href="https://github.com/sigstore/cosign/issues/40"&gt;tracking issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Caveats&lt;/h2&gt; 
&lt;h3&gt;Intentionally Missing Features&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;cosign&lt;/code&gt; only generates ECDSA-P256 keys and uses SHA256 hashes, for both ephemeral keyless signing and managed key signing. Keys are stored in PEM-encoded PKCS8 format. However, you can use &lt;code&gt;cosign&lt;/code&gt; to store and retrieve signatures in any format, from any algorithm.&lt;/p&gt; 
&lt;h3&gt;Things That Should Probably Change&lt;/h3&gt; 
&lt;h4&gt;Payload Formats&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;cosign&lt;/code&gt; only supports Red Hat's &lt;a href="https://www.redhat.com/en/blog/container-image-signing"&gt;simple signing&lt;/a&gt; format for payloads. That looks like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
    "critical": {
           "identity": {
               "docker-reference": "testing/manifest"
           },
           "image": {
               "Docker-manifest-digest": "sha256:20be...fe55"
           },
           "type": "cosign container image signature"
    },
    "optional": {
           "creator": "Bob the Builder",
           "timestamp": 1458239713
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This can be generated for an image reference using &lt;code&gt;cosign generate $IMAGE_URI_DIGEST&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;I'm happy to switch this format to something else if it makes sense. See &lt;a href="https://github.com/notaryproject/nv2/issues/40"&gt;https://github.com/notaryproject/nv2/issues/40&lt;/a&gt; for one option.&lt;/p&gt; 
&lt;h4&gt;Registry Details&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;cosign&lt;/code&gt; signatures are stored as separate objects in the OCI registry, with only a weak reference back to the object they "sign". This means this relationship is opaque to the registry, and signatures &lt;em&gt;will not&lt;/em&gt; be deleted or garbage-collected when the image is deleted. Similarly, they &lt;strong&gt;can&lt;/strong&gt; easily be copied from one environment to another, but this is not automatic.&lt;/p&gt; 
&lt;p&gt;Multiple signatures are stored in a list which is unfortunately a race condition today. To add a signature, clients orchestrate a "read-append-write" operation, so the last write will win in the case of contention.&lt;/p&gt; 
&lt;h5&gt;Specifying Registry&lt;/h5&gt; 
&lt;p&gt;&lt;code&gt;cosign&lt;/code&gt; will default to storing signatures in the same repo as the image it is signing. To specify a different repo for signatures, you can set the &lt;code&gt;COSIGN_REPOSITORY&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;p&gt;This will replace the repo in the provided image like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ export COSIGN_REPOSITORY=gcr.io/my-new-repo
$ cosign sign --key cosign.key $IMAGE_URI_DIGEST
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So the signature for &lt;code&gt;gcr.io/dlorenc-vmtest2/demo&lt;/code&gt; will be stored in &lt;code&gt;gcr.io/my-new-repo/demo:sha256-DIGEST.sig&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Note: different registries might expect different formats for the "repository."&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;To use &lt;a href="https://cloud.google.com/container-registry"&gt;GCR&lt;/a&gt;, a registry name like &lt;code&gt;gcr.io/$REPO&lt;/code&gt; is sufficient, as in the example above.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To use &lt;a href="https://cloud.google.com/artifact-registry"&gt;Artifact Registry&lt;/a&gt;, specify a full image name like &lt;code&gt;$LOCATION-docker.pkg.dev/$PROJECT/$REPO/$STORAGE_IMAGE&lt;/code&gt;, not just a repository. For example,&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;$ export COSIGN_REPOSITORY=us-docker.pkg.dev/my-new-repo/demo
$ cosign sign --key cosign.key $IMAGE_URI_DIGEST
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;where the &lt;code&gt;sha256-DIGEST&lt;/code&gt; will match the digest for &lt;code&gt;gcr.io/dlorenc-vmtest2/demo&lt;/code&gt;. Specifying just a repo like &lt;code&gt;$LOCATION-docker.pkg.dev/$PROJECT/$REPO&lt;/code&gt; will not work in Artifact Registry.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Signature Specification&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;cosign&lt;/code&gt; is inspired by tools like &lt;a href="https://jedisct1.github.io/minisign/"&gt;minisign&lt;/a&gt; and &lt;a href="https://www.openbsd.org/papers/bsdcan-signify.html"&gt;signify&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Generated private keys are stored in PEM format. The keys encrypted under a password using scrypt as a KDF and nacl/secretbox for encryption.&lt;/p&gt; 
&lt;p&gt;They have a PEM header of &lt;code&gt;ENCRYPTED SIGSTORE PRIVATE KEY&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;-----BEGIN ENCRYPTED SIGSTORE PRIVATE KEY-----
...
-----END ENCRYPTED SIGSTORE PRIVATE KEY-----
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Public keys are stored on disk in PEM-encoded standard PKIX format with a header of &lt;code&gt;PUBLIC KEY&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;-----BEGIN PUBLIC KEY-----
MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAELigCnlLNKgOglRTx1D7JhI7eRw99
QolE9Jo4QUxnbMy5nUuBL+UZF9qqfm/Dg1BNeHRThHzWh2ki9vAEgWEDOw==
-----END PUBLIC KEY-----
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Storage Specification&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;cosign&lt;/code&gt; stores signatures in an OCI registry, and uses a naming convention (tag based on the sha256 of what we're signing) for locating the signature index.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/sigstore/cosign/main/images/signatures.dot.svg?sanitize=true" /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;code&gt;reg.example.com/ubuntu@sha256:703218c0465075f4425e58fac086e09e1de5c340b12976ab9eb8ad26615c3715&lt;/code&gt; has signatures located at &lt;code&gt;reg.example.com/ubuntu:sha256-703218c0465075f4425e58fac086e09e1de5c340b12976ab9eb8ad26615c3715.sig&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Roughly (ignoring ports in the hostname): &lt;code&gt;s/:/-/g&lt;/code&gt; and &lt;code&gt;s/@/:/g&lt;/code&gt; to find the signature index.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/sigstore/cosign/main/#registry-details"&gt;Race conditions&lt;/a&gt; for some caveats around this strategy.&lt;/p&gt; 
&lt;p&gt;Alternative implementations could use transparency logs, local filesystem, a separate repository registry, an explicit reference to a signature index, a new registry API, grafeas, etc.&lt;/p&gt; 
&lt;h3&gt;Signing subjects&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;cosign&lt;/code&gt; only works for artifacts stored as "manifests" in the registry today. The proposed mechanism is flexible enough to support signing arbitrary things.&lt;/p&gt; 
&lt;h3&gt;KMS Support&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;cosign&lt;/code&gt; supports using a KMS provider to generate and sign keys. Right now cosign supports Hashicorp Vault, AWS KMS, GCP KMS, Azure Key Vault and we are hoping to support more in the future!&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://docs.sigstore.dev/cosign/key_management/overview/"&gt;KMS docs&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;OCI Artifacts&lt;/h3&gt; 
&lt;p&gt;Push an artifact to a registry using &lt;a href="https://github.com/deislabs/oras"&gt;oras&lt;/a&gt; (in this case, &lt;code&gt;cosign&lt;/code&gt; itself!):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ oras push us-central1-docker.pkg.dev/dlorenc-vmtest2/test/artifact ./cosign
Uploading f53604826795 cosign
Pushed us-central1-docker.pkg.dev/dlorenc-vmtest2/test/artifact
Digest: sha256:551e6cce7ed2e5c914998f931b277bc879e675b74843e6f29bc17f3b5f692bef
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now sign it! Using &lt;code&gt;cosign&lt;/code&gt; of course:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ cosign sign --key cosign.key us-central1-docker.pkg.dev/dlorenc-vmtest2/test/artifact@sha256:551e6cce7ed2e5c914998f931b277bc879e675b74843e6f29bc17f3b5f692bef
Enter password for private key:
Pushing signature to: us-central1-docker.pkg.dev/dlorenc-vmtest2/test/artifact:sha256-551e6cce7ed2e5c914998f931b277bc879e675b74843e6f29bc17f3b5f692bef.sig
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, verify &lt;code&gt;cosign&lt;/code&gt; with &lt;code&gt;cosign&lt;/code&gt; again:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ cosign verify --key cosign.pub  us-central1-docker.pkg.dev/dlorenc-vmtest2/test/artifact@sha256:551e6cce7ed2e5c914998f931b277bc879e675b74843e6f29bc17f3b5f692bef
The following checks were performed on each of these signatures:
  - The cosign claims were validated
  - The claims were present in the transparency log
  - The signatures were integrated into the transparency log when the certificate was valid
  - The signatures were verified against the specified public key
  - The code-signing certificate was verified using trusted certificate authority certificates

{"Critical":{"Identity":{"docker-reference":""},"Image":{"Docker-manifest-digest":"sha256:551e6cce7ed2e5c914998f931b277bc879e675b74843e6f29bc17f3b5f692bef"},"Type":"cosign container image signature"},"Optional":null}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;Why not use Notary v2&lt;/h3&gt; 
&lt;p&gt;It's hard to answer this briefly. This post contains some comparisons:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://medium.com/@dlorenc/notary-v2-and-cosign-b816658f044d"&gt;Notary V2 and Cosign&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you find other comparison posts, please send a PR here and we'll link them all.&lt;/p&gt; 
&lt;h3&gt;Why not use containers/image signing&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;containers/image&lt;/code&gt; signing is close to &lt;code&gt;cosign&lt;/code&gt;, and we reuse payload formats. &lt;code&gt;cosign&lt;/code&gt; differs in that it signs with ECDSA-P256 keys instead of PGP, and stores signatures in the registry.&lt;/p&gt; 
&lt;h3&gt;Why not use TUF?&lt;/h3&gt; 
&lt;p&gt;I believe this tool is complementary to TUF, and they can be used together. I haven't tried yet, but think we can also reuse a registry for TUF storage.&lt;/p&gt; 
&lt;h2&gt;Design Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;No external services for signature storage, querying, or retrieval&lt;/li&gt; 
 &lt;li&gt;We aim for as much registry support as possible&lt;/li&gt; 
 &lt;li&gt;Everything should work over the registry API&lt;/li&gt; 
 &lt;li&gt;PGP should not be required at all.&lt;/li&gt; 
 &lt;li&gt;Users must be able to find all signatures for an image&lt;/li&gt; 
 &lt;li&gt;Signers can sign an image after push&lt;/li&gt; 
 &lt;li&gt;Multiple entities can sign an image&lt;/li&gt; 
 &lt;li&gt;Signing an image does not mutate the image&lt;/li&gt; 
 &lt;li&gt;Pure-go implementation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Future Ideas&lt;/h2&gt; 
&lt;h3&gt;Registry API Changes&lt;/h3&gt; 
&lt;p&gt;The naming convention and read-modify-write update patterns we use to store things in a registry are a bit, well, "hacky". I think they're the best (only) real option available today, but if the registry API changes we can improve these.&lt;/p&gt; 
&lt;h3&gt;Other Types&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;cosign&lt;/code&gt; can sign anything in a registry. These examples show signing a single image, but you could also sign a multi-platform &lt;code&gt;Index&lt;/code&gt;, or any other type of artifact. This includes Helm Charts, Tekton Pipelines, and anything else currently using OCI registries for distribution.&lt;/p&gt; 
&lt;p&gt;This also means new artifact types can be uploaded to a registry and signed. One interesting type to store and sign would be TUF repositories. I haven't tried yet, but I'm fairly certain TUF could be implemented on top of this.&lt;/p&gt; 
&lt;h3&gt;Tag Signing&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;cosign&lt;/code&gt; signatures protect the digests of objects stored in a registry. The optional &lt;code&gt;annotations&lt;/code&gt; support (via the &lt;code&gt;-a&lt;/code&gt; flag to &lt;code&gt;cosign sign&lt;/code&gt;) can be used to add extra data to the payload that is signed and protected by the signature. One use-case for this might be to sign a tag-&amp;gt;digest mapping.&lt;/p&gt; 
&lt;p&gt;If you would like to attest that a specific tag (or set of tags) should point at a digest, you can run something like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ docker push $IMAGE_URI
The push refers to repository [dlorenc/demo]
994393dc58e7: Pushed
5m: digest: sha256:1304f174557314a7ed9eddb4eab12fed12cb0cd9809e4c28f29af86979a3c870 size: 528
$ TAG=sign-me
$ cosign sign --key cosign.key -a tag=$TAG $IMAGE_URI_DIGEST
Enter password for private key:
Pushing signature to: dlorenc/demo:1304f174557314a7ed9eddb4eab12fed12cb0cd9809e4c28f29af86979a3c870.sig
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then you can verify that the tag-&amp;gt;digest mapping is also covered in the signature, using the &lt;code&gt;-a&lt;/code&gt; flag to &lt;code&gt;cosign verify&lt;/code&gt;. This example verifies that the digest &lt;code&gt;$TAG&lt;/code&gt; which points to (&lt;code&gt;sha256:1304f174557314a7ed9eddb4eab12fed12cb0cd9809e4c28f29af86979a3c870&lt;/code&gt;) has been signed, &lt;strong&gt;and also&lt;/strong&gt; that the &lt;code&gt;tag&lt;/code&gt; annotation has the value &lt;code&gt;sign-me&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ cosign verify --key cosign.pub -a tag=$TAG $IMAGE_URI | jq .
{
  "Critical": {
    "Identity": {
      "docker-reference": ""
    },
    "Image": {
      "Docker-manifest-digest": "97fc222cee7991b5b061d4d4afdb5f3428fcb0c9054e1690313786befa1e4e36"
    },
    "Type": "cosign container image signature"
  },
  "Optional": {
    "tag": "sign-me"
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Timestamps could also be added here, to implement TUF-style freeze-attack prevention.&lt;/p&gt; 
&lt;h3&gt;Base Image/Layer Signing&lt;/h3&gt; 
&lt;p&gt;Again, &lt;code&gt;cosign&lt;/code&gt; can sign anything in a registry. You could use &lt;code&gt;cosign&lt;/code&gt; to sign an image that is intended to be used as a base image, and include that provenance metadata in resulting derived images. This could be used to enforce that an image was built from an authorized base image.&lt;/p&gt; 
&lt;p&gt;Rough Idea:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OCI manifests have an ordered list of &lt;code&gt;layer&lt;/code&gt; &lt;code&gt;Descriptors&lt;/code&gt;, which can contain annotations. See &lt;a href="https://github.com/opencontainers/image-spec/raw/master/manifest.md"&gt;here&lt;/a&gt; for the specification.&lt;/li&gt; 
 &lt;li&gt;A base image is an ordered list of layers to which other layers are appended, as well as an initial configuration object that is mutated. 
  &lt;ul&gt; 
   &lt;li&gt;A derived image is free to completely delete/destroy/recreate the config from its base image, so signing the config would provided limited value.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;We can sign the full set of ordered base layers, and attach that signature as an annotation to the &lt;strong&gt;last&lt;/strong&gt; layer in the resulting child image.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This example manifest manifest represents an image that has been built from a base image with two layers. One additional layer is added, forming the final image.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "schemaVersion": 2,
  "config": {
    "mediaType": "application/vnd.oci.image.config.v1+json",
    "size": 7023,
    "digest": "sha256:b5b2b2c507a0944348e0303114d8d93aaaa081732b86451d9bce1f432a537bc7"
  },
  "layers": [
    {
      "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
      "size": 32654,
      "digest": "sha256:9834876dcfb05cb167a5c24953eba58c4ac89b1adf57f28f2f9d09af107ee8f0"
    },
    {
      "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
      "size": 16724,
      "digest": "sha256:3c3a4604a545cdc127456d94e421cd355bca5b528f4a9c1905b15da2eb4a4c6b",
      "annotations": {
        "dev.cosign.signature.baseimage": "Ejy6ipGJjUzMDoQFePWixqPBYF0iSnIvpMWps3mlcYNSEcRRZelL7GzimKXaMjxfhy5bshNGvDT5QoUJ0tqUAg=="
      }
    },
    {
      "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
      "size": 73109,
      "digest": "sha256:ec4b8955958665577945c89419d1af06b5f7636b4ac3da7f12184802ad867736"
    }
  ],
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that this could be applied recursively, for multiple intermediate base images.&lt;/p&gt; 
&lt;h3&gt;Counter-Signing&lt;/h3&gt; 
&lt;p&gt;Cosign signatures (and their protected payloads) are stored as artifacts in a registry. These signature objects can also be signed, resulting in a new, "counter-signature" artifact. This "counter-signature" protects the signature (or set of signatures) &lt;strong&gt;and&lt;/strong&gt; the referenced artifact, which allows it to act as an attestation to the &lt;strong&gt;signature(s) themselves&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Before we sign the signature artifact, we first give it a memorable name so we can find it later.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ cosign sign --key cosign.key -a sig=original $IMAGE_URI_DIGEST
Enter password for private key:
Pushing signature to: dlorenc/demo:sha256-97fc222cee7991b5b061d4d4afdb5f3428fcb0c9054e1690313786befa1e4e36.sig
$ cosign verify --key cosign.pub dlorenc/demo | jq .
{
  "Critical": {
    "Identity": {
      "docker-reference": ""
    },
    "Image": {
      "Docker-manifest-digest": "97fc222cee7991b5b061d4d4afdb5f3428fcb0c9054e1690313786befa1e4e36"
    },
    "Type": "cosign container image signature"
  },
  "Optional": {
    "sig": "original"
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- TODO: https://github.com/sigstore/cosign/issues/2333 --&gt; 
&lt;p&gt;Now give that signature a memorable name, then sign that:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ crane tag $(cosign triangulate $IMAGE_URI) mysignature
2021/02/15 20:22:55 dlorenc/demo:mysignature: digest: sha256:71f70e5d29bde87f988740665257c35b1c6f52dafa20fab4ba16b3b1f4c6ba0e size: 556
$ cosign sign --key cosign.key -a sig=counter dlorenc/demo:mysignature
Enter password for private key:
Pushing signature to: dlorenc/demo:sha256-71f70e5d29bde87f988740665257c35b1c6f52dafa20fab4ba16b3b1f4c6ba0e.sig
$ cosign verify --key cosign.pub dlorenc/demo:mysignature
{"Critical":{"Identity":{"docker-reference":""},"Image":{"Docker-manifest-digest":"71f70e5d29bde87f988740665257c35b1c6f52dafa20fab4ba16b3b1f4c6ba0e"},"Type":"cosign container image signature"},"Optional":{"sig":"counter"}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, check the original signature:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ crane manifest dlorenc/demo@sha256:71f70e5d29bde87f988740665257c35b1c6f52dafa20fab4ba16b3b1f4c6ba0e
{
  "schemaVersion": 2,
  "config": {
    "mediaType": "application/vnd.oci.image.config.v1+json",
    "size": 233,
    "digest": "sha256:3b25a088710d03f39be26629d22eb68cd277a01673b9cb461c4c24fbf8c81c89"
  },
  "layers": [
    {
      "mediaType": "application/vnd.oci.descriptor.v1+json",
      "size": 217,
      "digest": "sha256:0e79a356609f038089088ec46fd95f4649d04de989487220b1a0adbcc63fadae",
      "annotations": {
        "dev.sigstore.cosign/signature": "5uNZKEP9rm8zxAL0VVX7McMmyArzLqtxMTNPjPO2ns+5GJpBeXg+i9ILU+WjmGAKBCqiexTxzLC1/nkOzD4cDA=="
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Release Cadence&lt;/h2&gt; 
&lt;p&gt;We cut releases as needed. Patch releases are cut to fix small bugs. Minor releases are cut periodically when there are multiple bugs fixed or features added. Major releases will be released when there are breaking features.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;Should you discover any security issues, please refer to sigstore's &lt;a href="https://github.com/sigstore/.github/raw/main/SECURITY.md"&gt;security process&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Bundle files in GitHub Release Assets&lt;/h2&gt; 
&lt;p&gt;The GitHub release assets for &lt;code&gt;cosign&lt;/code&gt; contain Sigstore bundle files produced by &lt;a href="https://github.com/sigstore/cosign/raw/ac999344eb381ae91455b0a9c5c267e747608d76/.goreleaser.yml#L166"&gt;GoReleaser&lt;/a&gt; while signing the cosign blob that is used to verify the integrity of the release binaries. This file is not used by cosign itself, but is provided for users who wish to &lt;a href="https://docs.sigstore.dev/cosign/system_config/installation/#verifying-cosign-with-artifact-key"&gt;verify the integrity of the release binaries&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>