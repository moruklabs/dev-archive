<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Daily Trending</title>
    <description>Daily Trending of TypeScript in GitHub</description>
    <pubDate>Thu, 30 Oct 2025 01:42:19 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>cjpais/Handy</title>
      <link>https://github.com/cjpais/Handy</link>
      <description>&lt;p&gt;A free, open source, and extensible speech-to-text application that works completely offline.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Handy&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://discord.com/invite/WVBeWsNXK4"&gt;&lt;img src="https://img.shields.io/badge/Discord-%235865F2.svg?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A free, open source, and extensible speech-to-text application that works completely offline.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Handy is a cross-platform desktop application built with Tauri (Rust + React/TypeScript) that provides simple, privacy-focused speech transcription. Press a shortcut, speak, and have your words appear in any text field—all without sending your voice to the cloud.&lt;/p&gt; 
&lt;h2&gt;Why Handy?&lt;/h2&gt; 
&lt;p&gt;Handy was created to fill the gap for a truly open source, extensible speech-to-text tool. As stated on &lt;a href="https://handy.computer"&gt;handy.computer&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Free&lt;/strong&gt;: Accessibility tooling belongs in everyone's hands, not behind a paywall&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Open Source&lt;/strong&gt;: Together we can build further. Extend Handy for yourself and contribute to something bigger&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Private&lt;/strong&gt;: Your voice stays on your computer. Get transcriptions without sending audio to the cloud&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt;: One tool, one job. Transcribe what you say and put it into a text box&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Handy isn't trying to be the best speech-to-text app—it's trying to be the most forkable one.&lt;/p&gt; 
&lt;h2&gt;How It Works&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Press&lt;/strong&gt; a configurable keyboard shortcut to start/stop recording (or use push-to-talk mode)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Speak&lt;/strong&gt; your words while the shortcut is active&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Release&lt;/strong&gt; and Handy processes your speech using Whisper&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Get&lt;/strong&gt; your transcribed text pasted directly into whatever app you're using&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The process is entirely local:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Silence is filtered using VAD (Voice Activity Detection) with Silero&lt;/li&gt; 
 &lt;li&gt;Transcription uses your choice of models: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Whisper models&lt;/strong&gt; (Small/Medium/Turbo/Large) with GPU acceleration when available&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Parakeet V3&lt;/strong&gt; - CPU-optimized model with excellent performance and automatic language detection&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Works on Windows, macOS, and Linux&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the latest release from the &lt;a href="https://github.com/cjpais/Handy/releases"&gt;releases page&lt;/a&gt; or the &lt;a href="https://handy.computer"&gt;website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install the application following platform-specific instructions&lt;/li&gt; 
 &lt;li&gt;Launch Handy and grant necessary system permissions (microphone, accessibility)&lt;/li&gt; 
 &lt;li&gt;Configure your preferred keyboard shortcuts in Settings&lt;/li&gt; 
 &lt;li&gt;Start transcribing!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Development Setup&lt;/h3&gt; 
&lt;p&gt;For detailed build instructions including platform-specific requirements, see &lt;a href="https://raw.githubusercontent.com/cjpais/Handy/main/BUILD.md"&gt;BUILD.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;Handy is built as a Tauri application combining:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Frontend&lt;/strong&gt;: React + TypeScript with Tailwind CSS for the settings UI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backend&lt;/strong&gt;: Rust for system integration, audio processing, and ML inference&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Core Libraries&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;whisper-rs&lt;/code&gt;: Local speech recognition with Whisper models&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;transcription-rs&lt;/code&gt;: CPU-optimized speech recognition with Parakeet models&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;cpal&lt;/code&gt;: Cross-platform audio I/O&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;vad-rs&lt;/code&gt;: Voice Activity Detection&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;rdev&lt;/code&gt;: Global keyboard shortcuts and system events&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;rubato&lt;/code&gt;: Audio resampling&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Debug Mode&lt;/h3&gt; 
&lt;p&gt;Handy includes an advanced debug mode for development and troubleshooting. Access it by pressing:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;Cmd+Shift+D&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows/Linux&lt;/strong&gt;: &lt;code&gt;Ctrl+Shift+D&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Known Issues &amp;amp; Current Limitations&lt;/h2&gt; 
&lt;p&gt;This project is actively being developed and has some &lt;a href="https://github.com/cjpais/Handy/issues"&gt;known issues&lt;/a&gt;. We believe in transparency about the current state:&lt;/p&gt; 
&lt;h3&gt;Platform Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS (both Intel and Apple Silicon)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;x64 Windows&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;x64 Linux&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;System Requirements/Recommendations&lt;/h3&gt; 
&lt;p&gt;The following are recommendations for running Handy on your own machine. If you don't meet the system requirements, the performance of the application may be degraded. We are working on improving the performance across all kinds of computers and hardware.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;For Whisper Models:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: M series Mac, Intel Mac&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Intel, AMD, or NVIDIA GPU&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: Intel, AMD, or NVIDIA GPU 
  &lt;ul&gt; 
   &lt;li&gt;Ubuntu 22.04, 24.04&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;For Parakeet V3 Model:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;CPU-only operation&lt;/strong&gt; - runs on a wide variety of hardware&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Minimum&lt;/strong&gt;: Intel Skylake (6th gen) or equivalent AMD processors&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: ~5x real-time speed on mid-range hardware (tested on i5)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic language detection&lt;/strong&gt; - no manual language selection required&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;How to Contribute&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Check existing issues&lt;/strong&gt; at &lt;a href="https://github.com/cjpais/Handy/issues"&gt;github.com/cjpais/Handy/issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fork the repository&lt;/strong&gt; and create a feature branch&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Test thoroughly&lt;/strong&gt; on your target platform&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Submit a pull request&lt;/strong&gt; with clear description of changes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Join the discussion&lt;/strong&gt; - reach out at &lt;a href="mailto:contact@handy.computer"&gt;contact@handy.computer&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The goal is to create both a useful tool and a foundation for others to build upon—a well-patterned, simple codebase that serves the community.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;div align="center"&gt;
  We're grateful for the support of our sponsors who help make Handy possible: 
 &lt;br /&gt;
 &lt;br /&gt; 
 &lt;a href="https://wordcab.com"&gt; &lt;img src="https://raw.githubusercontent.com/cjpais/Handy/main/sponsor-images/wordcab.png" alt="Wordcab" width="120" height="120" /&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
 &lt;a href="https://github.com/epicenter-so/epicenter"&gt; &lt;img src="https://raw.githubusercontent.com/cjpais/Handy/main/sponsor-images/epicenter.png" alt="Epicenter" width="120" height="120" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/cjpais/handy-cli"&gt;Handy CLI&lt;/a&gt;&lt;/strong&gt; - The original Python command-line version&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://handy.computer"&gt;handy.computer&lt;/a&gt;&lt;/strong&gt; - Project website with demos and documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT License - see &lt;a href="https://raw.githubusercontent.com/cjpais/Handy/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Whisper&lt;/strong&gt; by OpenAI for the speech recognition model&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;whisper.cpp and ggml&lt;/strong&gt; for amazing cross-platform whisper inference/acceleration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Silero&lt;/strong&gt; for great lightweight VAD&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tauri&lt;/strong&gt; team for the excellent Rust-based app framework&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Community contributors&lt;/strong&gt; helping make Handy better&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;em&gt;"Your search for the right speech-to-text tool can end here—not because Handy is perfect, but because you can make it perfect for you."&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>n8n-io/n8n</title>
      <link>https://github.com/n8n-io/n8n</link>
      <description>&lt;p&gt;Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/10284570/173569848-c624317f-42b1-45a6-ab09-f0ea3c247648.png" alt="Banner image" /&gt;&lt;/p&gt; 
&lt;h1&gt;n8n - Secure Workflow Automation for Technical Teams&lt;/h1&gt; 
&lt;p&gt;n8n is a workflow automation platform that gives technical teams the flexibility of code with the speed of no-code. With 400+ integrations, native AI capabilities, and a fair-code license, n8n lets you build powerful automations while maintaining full control over your data and deployments.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/n8n-io/n8n/master/assets/n8n-screenshot-readme.png" alt="n8n.io - Screenshot" /&gt;&lt;/p&gt; 
&lt;h2&gt;Key Capabilities&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Code When You Need It&lt;/strong&gt;: Write JavaScript/Python, add npm packages, or use the visual interface&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI-Native Platform&lt;/strong&gt;: Build AI agent workflows based on LangChain with your own data and models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Full Control&lt;/strong&gt;: Self-host with our fair-code license or use our &lt;a href="https://app.n8n.cloud/login"&gt;cloud offering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise-Ready&lt;/strong&gt;: Advanced permissions, SSO, and air-gapped deployments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Active Community&lt;/strong&gt;: 400+ integrations and 900+ ready-to-use &lt;a href="https://n8n.io/workflows"&gt;templates&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Try n8n instantly with &lt;a href="https://docs.n8n.io/hosting/installation/npm/"&gt;npx&lt;/a&gt; (requires &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx n8n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or deploy with &lt;a href="https://docs.n8n.io/hosting/installation/docker/"&gt;Docker&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker volume create n8n_data
docker run -it --rm --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Access the editor at &lt;a href="http://localhost:5678"&gt;http://localhost:5678&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;📚 &lt;a href="https://docs.n8n.io"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔧 &lt;a href="https://n8n.io/integrations"&gt;400+ Integrations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💡 &lt;a href="https://n8n.io/workflows"&gt;Example Workflows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;a href="https://docs.n8n.io/advanced-ai/"&gt;AI &amp;amp; LangChain Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;👥 &lt;a href="https://community.n8n.io"&gt;Community Forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📖 &lt;a href="https://community.n8n.io/c/tutorials/28"&gt;Community Tutorials&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Need help? Our community forum is the place to get support and connect with other users: &lt;a href="https://community.n8n.io"&gt;community.n8n.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;n8n is &lt;a href="https://faircode.io"&gt;fair-code&lt;/a&gt; distributed under the &lt;a href="https://github.com/n8n-io/n8n/raw/master/LICENSE.md"&gt;Sustainable Use License&lt;/a&gt; and &lt;a href="https://github.com/n8n-io/n8n/raw/master/LICENSE_EE.md"&gt;n8n Enterprise License&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Source Available&lt;/strong&gt;: Always visible source code&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Self-Hostable&lt;/strong&gt;: Deploy anywhere&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt;: Add your own nodes and functionality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="mailto:license@n8n.io"&gt;Enterprise licenses&lt;/a&gt; available for additional features and support.&lt;/p&gt; 
&lt;p&gt;Additional information about the license model can be found in the &lt;a href="https://docs.n8n.io/sustainable-use-license/"&gt;docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Found a bug 🐛 or have a feature idea ✨? Check our &lt;a href="https://github.com/n8n-io/n8n/raw/master/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Join the Team&lt;/h2&gt; 
&lt;p&gt;Want to shape the future of automation? Check out our &lt;a href="https://n8n.io/careers"&gt;job posts&lt;/a&gt; and join our team!&lt;/p&gt; 
&lt;h2&gt;What does n8n mean?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Short answer:&lt;/strong&gt; It means "nodemation" and is pronounced as n-eight-n.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Long answer:&lt;/strong&gt; "I get that question quite often (more often than I expected) so I decided it is probably best to answer it here. While looking for a good name for the project with a free domain I realized very quickly that all the good ones I could think of were already taken. So, in the end, I chose nodemation. 'node-' in the sense that it uses a Node-View and that it uses Node.js and '-mation' for 'automation' which is what the project is supposed to help with. However, I did not like how long the name was and I could not imagine writing something that long every time in the CLI. That is when I then ended up on 'n8n'." - &lt;strong&gt;Jan Oberhauser, Founder and CEO, n8n.io&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>coinbase/x402</title>
      <link>https://github.com/coinbase/x402</link>
      <description>&lt;p&gt;A payments protocol for the internet. Built on HTTP.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;x402 payments protocol&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"1 line of code to accept digital dollars. No fee, 2 second settlement, $0.001 minimum payment."&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;app.use(
  // How much you want to charge, and where you want the funds to land
  paymentMiddleware("0xYourAddress", { "/your-endpoint": "$0.01" })
);
// That's it! See examples/typescript/servers/express.ts for a complete example. Instruction below for running on base-sepolia.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;Payments on the internet are fundamentally flawed. Credit Cards are high friction, hard to accept, have minimum payments that are far too high, and don't fit into the programmatic nature of the internet. It's time for an open, internet-native form of payments. A payment rail that doesn't have high minimums + % based fee. Payments that are amazing for humans and AI agents.&lt;/p&gt; 
&lt;h2&gt;Principles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Open standard:&lt;/strong&gt; the x402 protocol will never force reliance on a single party&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP Native:&lt;/strong&gt; x402 is meant to seamlessly complement the existing HTTP request made by traditional web services, it should not mandate additional requests outside the scope of a typical client / server flow.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chain and token agnostic:&lt;/strong&gt; we welcome contributions that add support for new chains, signing standards, or schemes, so long as they meet our acceptance criteria laid out in &lt;a href="https://github.com/coinbase/x402/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trust minimizing:&lt;/strong&gt; all payment schemes must not allow for the facilitator or resource server to move funds, other than in accordance with client intentions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy to use:&lt;/strong&gt; x402 needs to be 10x better than existing ways to pay on the internet. This means abstracting as many details of crypto as possible away from the client and resource server, and into the facilitator. This means the client/server should not need to think about gas, rpc, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;p&gt;The x402 ecosystem is growing! Check out our &lt;a href="https://x402.org/ecosystem"&gt;ecosystem page&lt;/a&gt; to see projects building with x402, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Client-side integrations&lt;/li&gt; 
 &lt;li&gt;Services and endpoints&lt;/li&gt; 
 &lt;li&gt;Ecosystem infrastructure and tooling&lt;/li&gt; 
 &lt;li&gt;Learning and community resources&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Want to add your project to the ecosystem? See our &lt;a href="https://github.com/coinbase/x402/tree/main/typescript/site#adding-your-project-to-the-ecosystem"&gt;demo site README&lt;/a&gt; for detailed instructions on how to submit your project.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Roadmap:&lt;/strong&gt; see &lt;a href="https://github.com/coinbase/x402/raw/main/ROADMAP.md"&gt;ROADMAP.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Terms:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;resource&lt;/code&gt;: Something on the internet. This could be a webpage, file server, RPC service, API, any resource on the internet that accepts HTTP / HTTPS requests.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;client&lt;/code&gt;: An entity wanting to pay for a resource.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;facilitator server&lt;/code&gt;: A server that facilitates verification and execution of on-chain payments.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resource server&lt;/code&gt;: An HTTP server that provides an API or other resource for a client.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Technical Goals:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Permissionless and secure for clients and servers&lt;/li&gt; 
 &lt;li&gt;Gasless for client and resource servers&lt;/li&gt; 
 &lt;li&gt;Minimal integration for the resource server and client (1 line for the server, 1 function for the client)&lt;/li&gt; 
 &lt;li&gt;Ability to trade off speed of response for guarantee of payment&lt;/li&gt; 
 &lt;li&gt;Extensible to different payment flows and chains&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;V1 Protocol&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;x402&lt;/code&gt; protocol is a chain agnostic standard for payments on top of HTTP, leverage the existing &lt;code&gt;402 Payment Required&lt;/code&gt; HTTP status code to indicate that a payment is required for access to the resource.&lt;/p&gt; 
&lt;p&gt;It specifies:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;A schema for how servers can respond to clients to facilitate payment for a resource (&lt;code&gt;PaymentRequirements&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;A standard header &lt;code&gt;X-PAYMENT&lt;/code&gt; that is set by clients paying for resources&lt;/li&gt; 
 &lt;li&gt;A standard schema and encoding method for data in the &lt;code&gt;X-PAYMENT&lt;/code&gt; header&lt;/li&gt; 
 &lt;li&gt;A recommended flow for how payments should be verified and settled by a resource server&lt;/li&gt; 
 &lt;li&gt;A REST specification for how a resource server can perform verification and settlement against a remote 3rd party server (&lt;code&gt;facilitator&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;A specification for a &lt;code&gt;X-PAYMENT-RESPONSE&lt;/code&gt; header that can be used by resource servers to communicate blockchain transactions details to the client in their HTTP response&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;V1 Protocol Sequencing&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/coinbase/x402/main/static/x402-protocol-flow.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;The following outlines the flow of a payment using the &lt;code&gt;x402&lt;/code&gt; protocol. Note that steps (1) and (2) are optional if the client already knows the payment details accepted for a resource.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Client&lt;/code&gt; makes an HTTP request to a &lt;code&gt;resource server&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; responds with a &lt;code&gt;402 Payment Required&lt;/code&gt; status and a &lt;code&gt;Payment Required Response&lt;/code&gt; JSON object in the response body.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Client&lt;/code&gt; selects one of the &lt;code&gt;paymentRequirements&lt;/code&gt; returned by the server response and creates a &lt;code&gt;Payment Payload&lt;/code&gt; based on the &lt;code&gt;scheme&lt;/code&gt; of the &lt;code&gt;paymentRequirements&lt;/code&gt; they have selected.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Client&lt;/code&gt; sends the HTTP request with the &lt;code&gt;X-PAYMENT&lt;/code&gt; header containing the &lt;code&gt;Payment Payload&lt;/code&gt; to the resource server.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; verifies the &lt;code&gt;Payment Payload&lt;/code&gt; is valid either via local verification or by POSTing the &lt;code&gt;Payment Payload&lt;/code&gt; and &lt;code&gt;Payment Requirements&lt;/code&gt; to the &lt;code&gt;/verify&lt;/code&gt; endpoint of a &lt;code&gt;facilitator server&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; performs verification of the object based on the &lt;code&gt;scheme&lt;/code&gt; and &lt;code&gt;network&lt;/code&gt; of the &lt;code&gt;Payment Payload&lt;/code&gt; and returns a &lt;code&gt;Verification Response&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If the &lt;code&gt;Verification Response&lt;/code&gt; is valid, the resource server performs the work to fulfill the request. If the &lt;code&gt;Verification Response&lt;/code&gt; is invalid, the resource server returns a &lt;code&gt;402 Payment Required&lt;/code&gt; status and a &lt;code&gt;Payment Required Response&lt;/code&gt; JSON object in the response body.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; either settles the payment by interacting with a blockchain directly, or by POSTing the &lt;code&gt;Payment Payload&lt;/code&gt; and &lt;code&gt;Payment PaymentRequirements&lt;/code&gt; to the &lt;code&gt;/settle&lt;/code&gt; endpoint of a &lt;code&gt;facilitator server&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; submits the payment to the blockchain based on the &lt;code&gt;scheme&lt;/code&gt; and &lt;code&gt;network&lt;/code&gt; of the &lt;code&gt;Payment Payload&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; waits for the payment to be confirmed on the blockchain.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; returns a &lt;code&gt;Payment Execution Response&lt;/code&gt; to the resource server.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; returns a &lt;code&gt;200 OK&lt;/code&gt; response to the &lt;code&gt;Client&lt;/code&gt; with the resource they requested as the body of the HTTP response, and a &lt;code&gt;X-PAYMENT-RESPONSE&lt;/code&gt; header containing the &lt;code&gt;Settlement Response&lt;/code&gt; as Base64 encoded JSON if the payment was executed successfully.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Type Specifications&lt;/h3&gt; 
&lt;h4&gt;Data types&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Payment Required Response&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Version of the x402 payment protocol
  x402Version: int,

  // List of payment requirements that the resource server accepts. A resource server may accept on multiple chains, or in multiple currencies.
  accepts: [paymentRequirements]

  // Message from the resource server to the client to communicate errors in processing payment
  error: string
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;paymentRequirements&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Scheme of the payment protocol to use
  scheme: string;

  // Network of the blockchain to send payment on
  network: string;

  // Maximum amount required to pay for the resource in atomic units of the asset
  maxAmountRequired: uint256 as string;

  // URL of resource to pay for
  resource: string;

  // Description of the resource
  description: string;

  // MIME type of the resource response
  mimeType: string;

  // Output schema of the resource response
  outputSchema?: object | null;

  // Address to pay value to
  payTo: string;

  // Maximum time in seconds for the resource server to respond
  maxTimeoutSeconds: number;

  // Address of the EIP-3009 compliant ERC20 contract
  asset: string;

  // Extra information about the payment details specific to the scheme
  // For `exact` scheme on a EVM network, expects extra to contain the records `name` and `version` pertaining to asset
  extra: object | null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Payment Payload&lt;/code&gt;&lt;/strong&gt; (included as the &lt;code&gt;X-PAYMENT&lt;/code&gt; header in base64 encoded json)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Version of the x402 payment protocol
  x402Version: number;

  // scheme is the scheme value of the accepted `paymentRequirements` the client is using to pay
  scheme: string;

  // network is the network id of the accepted `paymentRequirements` the client is using to pay
  network: string;

  // payload is scheme dependent
  payload: &amp;lt;scheme dependent&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Facilitator Types &amp;amp; Interface&lt;/h4&gt; 
&lt;p&gt;A &lt;code&gt;facilitator server&lt;/code&gt; is a 3rd party service that can be used by a &lt;code&gt;resource server&lt;/code&gt; to verify and settle payments, without the &lt;code&gt;resource server&lt;/code&gt; needing to have access to a blockchain node or wallet.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;POST /verify&lt;/strong&gt;. Verify a payment with a supported scheme and network:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Request body JSON: &lt;pre&gt;&lt;code class="language-json5"&gt;{
  x402Version: number;
  paymentHeader: string;
  paymentRequirements: paymentRequirements;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Response: &lt;pre&gt;&lt;code class="language-json5"&gt;{
  isValid: boolean;
  invalidReason: string | null;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;POST /settle&lt;/strong&gt;. Settle a payment with a supported scheme and network:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Request body JSON:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json5"&gt;{
  x402Version: number;
  paymentHeader: string;
  paymentRequirements: paymentRequirements;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Response:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Whether the payment was successful
  success: boolean;

  // Error message from the facilitator server
  error: string | null;

  // Transaction hash of the settled payment
  txHash: string | null;

  // Network id of the blockchain the payment was settled on
  networkId: string | null;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;GET /supported&lt;/strong&gt;. Get supported payment schemes and networks:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Response: &lt;pre&gt;&lt;code class="language-json5"&gt;{
  kinds: [
    {
      "scheme": string,
      "network": string,
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Schemes&lt;/h3&gt; 
&lt;p&gt;A scheme is a logical way of moving money.&lt;/p&gt; 
&lt;p&gt;Blockchains allow for a large number of flexible ways to move money. To help facilitate an expanding number of payment use cases, the &lt;code&gt;x402&lt;/code&gt; protocol is extensible to different ways of settling payments via its &lt;code&gt;scheme&lt;/code&gt; field.&lt;/p&gt; 
&lt;p&gt;Each payment scheme may have different operational functionality depending on what actions are necessary to fulfill the payment. For example &lt;code&gt;exact&lt;/code&gt;, the first scheme shipping as part of the protocol, would have different behavior than &lt;code&gt;upto&lt;/code&gt;. &lt;code&gt;exact&lt;/code&gt; transfers a specific amount (ex: pay $1 to read an article), while a theoretical &lt;code&gt;upto&lt;/code&gt; would transfer up to an amount, based on the resources consumed during a request (ex: generating tokens from an LLM).&lt;/p&gt; 
&lt;p&gt;See &lt;code&gt;specs/schemes&lt;/code&gt; for more details on schemes, and see &lt;code&gt;specs/schemes/exact/scheme_exact_evm.md&lt;/code&gt; to see the first proposed scheme for exact payment on EVM chains.&lt;/p&gt; 
&lt;h3&gt;Schemes vs Networks&lt;/h3&gt; 
&lt;p&gt;Because a scheme is a logical way of moving money, the way a scheme is implemented can be different for different blockchains. (ex: the way you need to implement &lt;code&gt;exact&lt;/code&gt; on Ethereum is very different from the way you need to implement &lt;code&gt;exact&lt;/code&gt; on Solana).&lt;/p&gt; 
&lt;p&gt;Clients and facilitators must explicitly support different &lt;code&gt;(scheme, network)&lt;/code&gt; pairs in order to be able to create proper payloads and verify / settle payments.&lt;/p&gt; 
&lt;h2&gt;Running example&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Requirements:&lt;/strong&gt; Node.js v24 or higher&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;From &lt;code&gt;examples/typescript&lt;/code&gt; run &lt;code&gt;pnpm install&lt;/code&gt; and &lt;code&gt;pnpm build&lt;/code&gt; to ensure all dependent packages and examples are setup.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select a server, i.e. express, and &lt;code&gt;cd&lt;/code&gt; into that example. Add your server's ethereum address to get paid to into the &lt;code&gt;.env&lt;/code&gt; file, and then run &lt;code&gt;pnpm dev&lt;/code&gt; in that directory.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select a client, i.e. axios, and &lt;code&gt;cd&lt;/code&gt; into that example. Add your private key for the account making payments into the &lt;code&gt;.env&lt;/code&gt; file, and then run &lt;code&gt;pnpm dev&lt;/code&gt; in that directory.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You should see activities in the client terminal, which will display a weather report.&lt;/p&gt; 
&lt;h2&gt;Running tests&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Navigate to the typescript directory: &lt;code&gt;cd typescript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install dependencies: &lt;code&gt;pnpm install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run the unit tests: &lt;code&gt;pnpm test&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This will run the unit tests for the x402 packages.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>google-gemini/gemini-cli</title>
      <link>https://github.com/google-gemini/gemini-cli</link>
      <description>&lt;p&gt;An open-source AI agent that brings the power of Gemini directly into your terminal.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gemini CLI&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Gemini CLI CI" /&gt;&lt;/a&gt; &lt;a href="https://github.com/google-gemini/gemini-cli/actions/workflows/e2e.yml"&gt;&lt;img src="https://github.com/google-gemini/gemini-cli/actions/workflows/e2e.yml/badge.svg?sanitize=true" alt="Gemini CLI E2E" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@google/gemini-cli"&gt;&lt;img src="https://img.shields.io/npm/v/@google/gemini-cli" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/google-gemini/gemini-cli/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/google-gemini/gemini-cli" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/assets/gemini-screenshot.png" alt="Gemini CLI Screenshot" /&gt;&lt;/p&gt; 
&lt;p&gt;Gemini CLI is an open-source AI agent that brings the power of Gemini directly into your terminal. It provides lightweight access to Gemini, giving you the most direct path from your prompt to our model.&lt;/p&gt; 
&lt;p&gt;Learn all about Gemini CLI in our &lt;a href="https://geminicli.com/docs/"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🚀 Why Gemini CLI?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🎯 Free tier&lt;/strong&gt;: 60 requests/min and 1,000 requests/day with personal Google account.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🧠 Powerful Gemini 2.5 Pro&lt;/strong&gt;: Access to 1M token context window.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔧 Built-in tools&lt;/strong&gt;: Google Search grounding, file operations, shell commands, web fetching.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔌 Extensible&lt;/strong&gt;: MCP (Model Context Protocol) support for custom integrations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💻 Terminal-first&lt;/strong&gt;: Designed for developers who live in the command line.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🛡️ Open source&lt;/strong&gt;: Apache 2.0 licensed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📦 Installation&lt;/h2&gt; 
&lt;h3&gt;Pre-requisites before installation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js version 20 or higher&lt;/li&gt; 
 &lt;li&gt;macOS, Linux, or Windows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Install&lt;/h3&gt; 
&lt;h4&gt;Run instantly with npx&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Using npx (no installation required)
npx https://github.com/google-gemini/gemini-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Install globally with npm&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Install globally with Homebrew (macOS/Linux)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install gemini-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Release Cadence and Tags&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/releases.md"&gt;Releases&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Preview&lt;/h3&gt; 
&lt;p&gt;New preview releases will be published each week at UTC 2359 on Tuesdays. These releases will not have been fully vetted and may contain regressions or other outstanding issues. Please help us test and install with &lt;code&gt;preview&lt;/code&gt; tag.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli@preview
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Stable&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;New stable releases will be published each week at UTC 2000 on Tuesdays, this will be the full promotion of last week's &lt;code&gt;preview&lt;/code&gt; release + any bug fixes and validations. Use &lt;code&gt;latest&lt;/code&gt; tag.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Nightly&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;New releases will be published each week at UTC 0000 each day, This will be all changes from the main branch as represented at time of release. It should be assumed there are pending validations and issues. Use &lt;code&gt;nightly&lt;/code&gt; tag.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli@nightly
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;📋 Key Features&lt;/h2&gt; 
&lt;h3&gt;Code Understanding &amp;amp; Generation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Query and edit large codebases&lt;/li&gt; 
 &lt;li&gt;Generate new apps from PDFs, images, or sketches using multimodal capabilities&lt;/li&gt; 
 &lt;li&gt;Debug issues and troubleshoot with natural language&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Automation &amp;amp; Integration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Automate operational tasks like querying pull requests or handling complex rebases&lt;/li&gt; 
 &lt;li&gt;Use MCP servers to connect new capabilities, including &lt;a href="https://github.com/GoogleCloudPlatform/vertex-ai-creative-studio/tree/main/experiments/mcp-genmedia"&gt;media generation with Imagen, Veo or Lyria&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Run non-interactively in scripts for workflow automation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Capabilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ground your queries with built-in &lt;a href="https://ai.google.dev/gemini-api/docs/grounding"&gt;Google Search&lt;/a&gt; for real-time information&lt;/li&gt; 
 &lt;li&gt;Conversation checkpointing to save and resume complex sessions&lt;/li&gt; 
 &lt;li&gt;Custom context files (GEMINI.md) to tailor behavior for your projects&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;GitHub Integration&lt;/h3&gt; 
&lt;p&gt;Integrate Gemini CLI directly into your GitHub workflows with &lt;a href="https://github.com/google-github-actions/run-gemini-cli"&gt;&lt;strong&gt;Gemini CLI GitHub Action&lt;/strong&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Pull Request Reviews&lt;/strong&gt;: Automated code review with contextual feedback and suggestions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Issue Triage&lt;/strong&gt;: Automated labeling and prioritization of GitHub issues based on content analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;On-demand Assistance&lt;/strong&gt;: Mention &lt;code&gt;@gemini-cli&lt;/code&gt; in issues and pull requests for help with debugging, explanations, or task delegation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Workflows&lt;/strong&gt;: Build automated, scheduled and on-demand workflows tailored to your team's needs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔐 Authentication Options&lt;/h2&gt; 
&lt;p&gt;Choose the authentication method that best fits your needs:&lt;/p&gt; 
&lt;h3&gt;Option 1: Login with Google (OAuth login using your Google Account)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;✨ Best for:&lt;/strong&gt; Individual developers as well as anyone who has a Gemini Code Assist License. (see &lt;a href="https://cloud.google.com/gemini/docs/quotas"&gt;quota limits and terms of service&lt;/a&gt; for details)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Free tier&lt;/strong&gt;: 60 requests/min and 1,000 requests/day&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gemini 2.5 Pro&lt;/strong&gt; with 1M token context window&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No API key management&lt;/strong&gt; - just sign in with your Google account&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic updates&lt;/strong&gt; to latest models&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Start Gemini CLI, then choose &lt;em&gt;Login with Google&lt;/em&gt; and follow the browser authentication flow when prompted&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;If you are using a paid Code Assist License from your organization, remember to set the Google Cloud Project&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Set your Google Cloud Project
export GOOGLE_CLOUD_PROJECT="YOUR_PROJECT_ID"
gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Option 2: Gemini API Key&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;✨ Best for:&lt;/strong&gt; Developers who need specific model control or paid tier access&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Free tier&lt;/strong&gt;: 100 requests/day with Gemini 2.5 Pro&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model selection&lt;/strong&gt;: Choose specific Gemini models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Usage-based billing&lt;/strong&gt;: Upgrade for higher limits when needed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Get your key from https://aistudio.google.com/apikey
export GEMINI_API_KEY="YOUR_API_KEY"
gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Option 3: Vertex AI&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;✨ Best for:&lt;/strong&gt; Enterprise teams and production workloads&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise features&lt;/strong&gt;: Advanced security and compliance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: Higher rate limits with billing account&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Integration&lt;/strong&gt;: Works with existing Google Cloud infrastructure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Get your key from Google Cloud Console
export GOOGLE_API_KEY="YOUR_API_KEY"
export GOOGLE_GENAI_USE_VERTEXAI=true
gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Google Workspace accounts and other authentication methods, see the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/get-started/authentication.md"&gt;authentication guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;h3&gt;Basic Usage&lt;/h3&gt; 
&lt;h4&gt;Start in current directory&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Include multiple directories&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini --include-directories ../lib,../docs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Use specific model&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini -m gemini-2.5-flash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Non-interactive mode for scripts&lt;/h4&gt; 
&lt;p&gt;Get a simple text response:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini -p "Explain the architecture of this codebase"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more advanced scripting, including how to parse JSON and handle errors, use the &lt;code&gt;--output-format json&lt;/code&gt; flag to get structured output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini -p "Explain the architecture of this codebase" --output-format json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For real-time event streaming (useful for monitoring long-running operations), use &lt;code&gt;--output-format stream-json&lt;/code&gt; to get newline-delimited JSON events:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini -p "Run tests and deploy" --output-format stream-json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Quick Examples&lt;/h3&gt; 
&lt;h4&gt;Start a new project&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd new-project/
gemini
&amp;gt; Write me a Discord bot that answers questions using a FAQ.md file I will provide
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Analyze existing code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/google-gemini/gemini-cli
cd gemini-cli
gemini
&amp;gt; Give me a summary of all of the changes that went in yesterday
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;h3&gt;Getting Started&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/get-started/index.md"&gt;&lt;strong&gt;Quickstart Guide&lt;/strong&gt;&lt;/a&gt; - Get up and running quickly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/get-started/authentication.md"&gt;&lt;strong&gt;Authentication Setup&lt;/strong&gt;&lt;/a&gt; - Detailed auth configuration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/get-started/configuration.md"&gt;&lt;strong&gt;Configuration Guide&lt;/strong&gt;&lt;/a&gt; - Settings and customization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/keyboard-shortcuts.md"&gt;&lt;strong&gt;Keyboard Shortcuts&lt;/strong&gt;&lt;/a&gt; - Productivity tips.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Core Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/commands.md"&gt;&lt;strong&gt;Commands Reference&lt;/strong&gt;&lt;/a&gt; - All slash commands (&lt;code&gt;/help&lt;/code&gt;, &lt;code&gt;/chat&lt;/code&gt;, etc).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/custom-commands.md"&gt;&lt;strong&gt;Custom Commands&lt;/strong&gt;&lt;/a&gt; - Create your own reusable commands.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/gemini-md.md"&gt;&lt;strong&gt;Context Files (GEMINI.md)&lt;/strong&gt;&lt;/a&gt; - Provide persistent context to Gemini CLI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/checkpointing.md"&gt;&lt;strong&gt;Checkpointing&lt;/strong&gt;&lt;/a&gt; - Save and resume conversations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/token-caching.md"&gt;&lt;strong&gt;Token Caching&lt;/strong&gt;&lt;/a&gt; - Optimize token usage.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Tools &amp;amp; Extensions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/index.md"&gt;&lt;strong&gt;Built-in Tools Overview&lt;/strong&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/file-system.md"&gt;File System Operations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/shell.md"&gt;Shell Commands&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/web-fetch.md"&gt;Web Fetch &amp;amp; Search&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/mcp-server.md"&gt;&lt;strong&gt;MCP Server Integration&lt;/strong&gt;&lt;/a&gt; - Extend with custom tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/extensions/index.md"&gt;&lt;strong&gt;Custom Extensions&lt;/strong&gt;&lt;/a&gt; - Build and share your own commands.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Topics&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/headless.md"&gt;&lt;strong&gt;Headless Mode (Scripting)&lt;/strong&gt;&lt;/a&gt; - Use Gemini CLI in automated workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/architecture.md"&gt;&lt;strong&gt;Architecture Overview&lt;/strong&gt;&lt;/a&gt; - How Gemini CLI works.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/ide-integration/index.md"&gt;&lt;strong&gt;IDE Integration&lt;/strong&gt;&lt;/a&gt; - VS Code companion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/sandbox.md"&gt;&lt;strong&gt;Sandboxing &amp;amp; Security&lt;/strong&gt;&lt;/a&gt; - Safe execution environments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/trusted-folders.md"&gt;&lt;strong&gt;Trusted Folders&lt;/strong&gt;&lt;/a&gt; - Control execution policies by folder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/enterprise.md"&gt;&lt;strong&gt;Enterprise Guide&lt;/strong&gt;&lt;/a&gt; - Deploy and manage in a corporate environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/telemetry.md"&gt;&lt;strong&gt;Telemetry &amp;amp; Monitoring&lt;/strong&gt;&lt;/a&gt; - Usage tracking.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/core/tools-api.md"&gt;&lt;strong&gt;Tools API Development&lt;/strong&gt;&lt;/a&gt; - Create custom tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/local-development.md"&gt;&lt;strong&gt;Local development&lt;/strong&gt;&lt;/a&gt; - Local development tooling.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Troubleshooting &amp;amp; Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/troubleshooting.md"&gt;&lt;strong&gt;Troubleshooting Guide&lt;/strong&gt;&lt;/a&gt; - Common issues and solutions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/faq.md"&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt; - Frequently asked questions.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;/bug&lt;/code&gt; command to report issues directly from the CLI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Using MCP Servers&lt;/h3&gt; 
&lt;p&gt;Configure MCP servers in &lt;code&gt;~/.gemini/settings.json&lt;/code&gt; to extend Gemini CLI with custom tools:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; @github List my open pull requests
&amp;gt; @slack Send a summary of today's commits to #dev channel
&amp;gt; @database Run a query to find inactive users
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/mcp-server.md"&gt;MCP Server Integration guide&lt;/a&gt; for setup instructions.&lt;/p&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Gemini CLI is fully open source (Apache 2.0), and we encourage the community to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Report bugs and suggest features.&lt;/li&gt; 
 &lt;li&gt;Improve documentation.&lt;/li&gt; 
 &lt;li&gt;Submit code improvements.&lt;/li&gt; 
 &lt;li&gt;Share your MCP servers and extensions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See our &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for development setup, coding standards, and how to submit pull requests.&lt;/p&gt; 
&lt;p&gt;Check our &lt;a href="https://github.com/orgs/google-gemini/projects/11"&gt;Official Roadmap&lt;/a&gt; for planned features and priorities.&lt;/p&gt; 
&lt;h2&gt;📖 Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/ROADMAP.md"&gt;Official Roadmap&lt;/a&gt;&lt;/strong&gt; - See what's coming next.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/changelogs/index.md"&gt;Changelog&lt;/a&gt;&lt;/strong&gt; - See recent notable updates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.npmjs.com/package/@google/gemini-cli"&gt;NPM Package&lt;/a&gt;&lt;/strong&gt; - Package registry.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/google-gemini/gemini-cli/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/strong&gt; - Report bugs or request features.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/google-gemini/gemini-cli/security/advisories"&gt;Security Advisories&lt;/a&gt;&lt;/strong&gt; - Security updates.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Uninstall&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/uninstall.md"&gt;Uninstall Guide&lt;/a&gt; for removal instructions.&lt;/p&gt; 
&lt;h2&gt;📄 Legal&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;License&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/LICENSE"&gt;Apache License 2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terms of Service&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tos-privacy.md"&gt;Terms &amp;amp; Privacy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/SECURITY.md"&gt;Security Policy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; Built with ❤️ by Google and the open source community &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sequelize/sequelize</title>
      <link>https://github.com/sequelize/sequelize</link>
      <description>&lt;p&gt;Feature-rich ORM for modern Node.js and TypeScript, it supports PostgreSQL (with JSON and JSONB support), MySQL, MariaDB, SQLite, MS SQL Server, Snowflake, Oracle DB (v6), DB2 and DB2 for IBM i.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt;&lt;img src="https://raw.githubusercontent.com/sequelize/sequelize/main/logo.svg?sanitize=true" width="100" alt="Sequelize logo" /&gt;&lt;/p&gt; 
&lt;h1 align="center" style="margin-top: 0;"&gt;&lt;a href="https://sequelize.org"&gt;Sequelize&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/@sequelize/core"&gt;&lt;img src="https://badgen.net/npm/v/@sequelize/core" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@sequelize/core"&gt;&lt;img src="https://badgen.net/npm/dm/@sequelize/core" alt="npm downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sequelize/sequelize/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/sequelize/sequelize" alt="contributors" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/sequelize#section-contributors"&gt;&lt;img src="https://img.shields.io/opencollective/backers/sequelize" alt="Open Collective" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/sequelize"&gt;&lt;img src="https://img.shields.io/opencollective/all/sequelize?label=sponsors" alt="sponsor" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sequelize/sequelize"&gt;&lt;img src="https://badgen.net/github/merged-prs/sequelize/sequelize" alt="Merged PRs" /&gt;&lt;/a&gt; &lt;a href="https://github.com/semantic-release/semantic-release"&gt;&lt;img src="https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true" alt="semantic-release" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Sequelize is an easy-to-use and promise-based &lt;a href="https://nodejs.org/en/about/"&gt;Node.js&lt;/a&gt; &lt;a href="https://en.wikipedia.org/wiki/Object-relational_mapping"&gt;ORM tool&lt;/a&gt; for &lt;a href="https://en.wikipedia.org/wiki/PostgreSQL"&gt;Postgres&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/MySQL"&gt;MySQL&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/MariaDB"&gt;MariaDB&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/SQLite"&gt;SQLite&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/IBM_Db2_Family"&gt;DB2&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/Microsoft_SQL_Server"&gt;Microsoft SQL Server&lt;/a&gt;, &lt;a href="https://www.snowflake.com/"&gt;Snowflake&lt;/a&gt;, &lt;a href="https://www.oracle.com/database/"&gt;Oracle DB&lt;/a&gt; and &lt;a href="https://www.ibm.com/support/pages/db2-ibm-i"&gt;Db2 for IBM i&lt;/a&gt;. It features solid transaction support, relations, eager and lazy loading, read replication and more.&lt;/p&gt; 
&lt;p&gt;Would you like to contribute? Read &lt;a href="https://raw.githubusercontent.com/sequelize/sequelize/main/CONTRIBUTING.md"&gt;our contribution guidelines&lt;/a&gt; to know more. There are many ways to help! 😃&lt;/p&gt; 
&lt;h2&gt;🚀 Seeking New Maintainers for Sequelize! 🚀&lt;/h2&gt; 
&lt;p&gt;We're looking for new maintainers to help finalize and release the next major version of Sequelize! If you're passionate about open-source and database ORMs, we'd love to have you onboard.&lt;/p&gt; 
&lt;h3&gt;💰 Funding Available&lt;/h3&gt; 
&lt;p&gt;We distribute &lt;strong&gt;$2,500 per quarter&lt;/strong&gt; among maintainers and have additional funds for full-time contributions.&lt;/p&gt; 
&lt;h3&gt;🛠️ What You’ll Work On&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Finalizing and releasing Sequelize’s next major version&lt;/li&gt; 
 &lt;li&gt;Improving TypeScript support and database integrations&lt;/li&gt; 
 &lt;li&gt;Fixing critical issues and shaping the ORM’s future&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🤝 How to Get Involved&lt;/h3&gt; 
&lt;p&gt;Interested? Join our Slack and reach out to &lt;strong&gt;@WikiRik&lt;/strong&gt; or &lt;strong&gt;@sdepold&lt;/strong&gt;:&lt;br /&gt; ➡️ &lt;strong&gt;&lt;a href="https://sequelize.org/slack"&gt;sequelize.org/slack&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;We’d love to have you on board! 🚀&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;💻&lt;/span&gt; Getting Started&lt;/h2&gt; 
&lt;p&gt;Ready to start using Sequelize? Head to &lt;a href="https://sequelize.org"&gt;sequelize.org&lt;/a&gt; to begin!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://sequelize.org/docs/v6/getting-started"&gt;Our Getting Started guide for Sequelize 6 (stable)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sequelize.org/docs/v7/getting-started"&gt;Our Getting Started guide for Sequelize 7 (alpha)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;💸&lt;/span&gt; Supporting the project&lt;/h2&gt; 
&lt;p&gt;Do you like Sequelize and would like to give back to the engineering team behind it?&lt;/p&gt; 
&lt;p&gt;We have recently created an &lt;a href="https://opencollective.com/sequelize"&gt;OpenCollective based money pool&lt;/a&gt; which is shared amongst all core maintainers based on their contributions. Every support is wholeheartedly welcome. ❤️&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;📝&lt;/span&gt; Major version changelog&lt;/h2&gt; 
&lt;p&gt;Please find upgrade information to major versions here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://sequelize.org/docs/v6/other-topics/upgrade-to-v6"&gt;Upgrade from v5 to v6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sequelize.org/docs/v7/other-topics/upgrade-to-v7"&gt;Upgrade from v6 to v7&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;📖&lt;/span&gt; Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://sequelize.org"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sequelize.org/releases/"&gt;Databases Compatibility Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sequelize/sequelize/releases"&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sequelize/sequelize/discussions"&gt;Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sequelize.org/slack"&gt;Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/sequelize.js"&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;🔧&lt;/span&gt; Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sequelize/cli"&gt;CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mickhansen/graphql-sequelize"&gt;For GraphQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cockroachdb/sequelize-cockroachdb"&gt;For CockroachDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sequelize.org/docs/v7/other-topics/resources/"&gt;Awesome Sequelize&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yugabyte/sequelize-yugabytedb"&gt;For YugabyteDB&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;💬&lt;/span&gt; Translations&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://sequelize.org"&gt;English&lt;/a&gt; (Official)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/demopark/sequelize-docs-Zh-CN"&gt;中文文档&lt;/a&gt; (Unofficial)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;⚠&lt;/span&gt; Responsible disclosure&lt;/h2&gt; 
&lt;p&gt;If you have security issues to report, please refer to our &lt;a href="https://raw.githubusercontent.com/sequelize/sequelize/main/SECURITY.md"&gt;Responsible Disclosure Policy&lt;/a&gt; for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>toeverything/AFFiNE</title>
      <link>https://github.com/toeverything/AFFiNE</link>
      <description>&lt;p&gt;There can be more than Notion and Miro. AFFiNE(pronounced [ə‘fain]) is a next-gen knowledge base that brings planning, sorting and creating all together. Privacy first, open-source, customizable and ready to use.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1 style="border-bottom: none"&gt; &lt;b&gt;&lt;a href="https://affine.pro"&gt;AFFiNE.Pro&lt;/a&gt;&lt;/b&gt;&lt;br /&gt; Write, Draw and Plan All at Once &lt;br /&gt; &lt;/h1&gt; 
 &lt;a href="https://affine.pro/download"&gt; &lt;img alt="affine logo" src="https://cdn.affine.pro/Github_hero_image2.png" style="width: 100%" /&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;p align="center"&gt; A privacy-focused, local-first, open-source, and ready-to-use alternative for Notion &amp;amp; Miro. &lt;br /&gt; One hyper-fused platform for wildly creative minds. &lt;/p&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.producthunt.com/posts/affine-3?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-affine-3" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=440671&amp;amp;theme=light" alt="AFFiNE - One app for all - Where Notion meets Miro | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;div align="left" valign="middle"&gt; 
  &lt;a href="https://runblaze.dev"&gt; 
   &lt;picture&gt; 
    &lt;source media="(prefers-color-scheme: dark)" srcset="https://www.runblaze.dev/logo_dark.png" /&gt; 
    &lt;img align="right" src="https://www.runblaze.dev/logo_light.png" height="102px" /&gt; 
   &lt;/picture&gt; &lt;/a&gt; 
  &lt;br style="display: none;" /&gt; 
  &lt;p&gt;&lt;em&gt;Special thanks to &lt;a href="https://runblaze.dev"&gt;Blaze&lt;/a&gt; for their support of this project. They provide high-performance Apple Silicon macOS and Linux (AMD64 &amp;amp; ARM64) runners for GitHub Actions, greatly reducing our automated build times.&lt;/em&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;div align="center"&gt; 
  &lt;a href="https://affine.pro"&gt;Home Page&lt;/a&gt; | 
  &lt;a href="https://affine.pro/redirect/discord"&gt;Discord&lt;/a&gt; | 
  &lt;a href="https://app.affine.pro"&gt;Live Demo&lt;/a&gt; | 
  &lt;a href="https://affine.pro/blog/"&gt;Blog&lt;/a&gt; | 
  &lt;a href="https://docs.affine.pro/"&gt;Documentation&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;br /&gt; 
 &lt;p&gt;&lt;a href="https://github.com/toeverything/AFFiNE/releases/latest"&gt;&lt;img src="https://img.shields.io/github/downloads/toeverything/AFFiNE/total" alt="Releases" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/#contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/toeverything/AFFiNE" alt="All Contributors" /&gt;&lt;/a&gt; &lt;a href="https://www.typescriptlang.org/"&gt;&lt;img src="https://img.shields.io/github/package-json/dependency-version/toeverything/affine/dev/typescript" alt="TypeScript-version-icon" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt; 
 &lt;em&gt;Docs, canvas and tables are hyper-merged with AFFiNE - just like the word affine (əˈfʌɪn | a-fine).&lt;/em&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://github.com/toeverything/AFFiNE/assets/79301703/49a426bb-8d2b-4216-891a-fa5993642253" style="width: 100%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Getting started &amp;amp; staying tuned with us.&lt;/h2&gt; 
&lt;p&gt;Star us, and you will receive all release notifications from GitHub without any delay!&lt;/p&gt; 
&lt;img src="https://user-images.githubusercontent.com/79301703/230891830-0110681e-8c7e-483b-b6d9-9e42b291b9ef.gif" style="width: 100%" /&gt; 
&lt;h2&gt;What is AFFiNE&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://affine.pro"&gt;AFFiNE&lt;/a&gt; is an open-source, all-in-one workspace and an operating system for all the building blocks that assemble your knowledge base and much more -- wiki, knowledge management, presentation and digital assets. It's a better alternative to Notion and Miro.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;A true canvas for blocks in any form. Docs and whiteboard are now fully merged.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Many editor apps claim to be a canvas for productivity, but AFFiNE is one of the very few which allows you to put any building block on an edgeless canvas -- rich text, sticky notes, any embedded web pages, multi-view databases, linked pages, shapes and even slides. We have it all.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Multimodal AI partner ready to kick in any work&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Write up professional work report? Turn an outline into expressive and presentable slides? Summary an article into a well-structured mindmap? Sorting your job plan and backlog for tasks? Or... draw and code prototype apps and web pages directly all with one prompt? With you, &lt;a href="https://affine.pro/ai"&gt;AFFiNE AI&lt;/a&gt; pushes your creativity to the edge of your imagination, just like &lt;a href="https://affine.pro/blog/best-canvas-ai"&gt;Canvas AI&lt;/a&gt; to generate mind map for brainstorming.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Local-first &amp;amp; Real-time collaborative&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;We love the idea of local-first that you always own your data on your disk, in spite of the cloud. Furthermore, AFFiNE supports real-time sync and collaborations on web and cross-platform clients.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Self-host &amp;amp; Shape your own AFFiNE&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You have the freedom to manage, self-host, fork and build your own AFFiNE. Plugin community and third-party blocks are coming soon. More tractions on &lt;a href="https://blocksuite.io"&gt;Blocksuite&lt;/a&gt;. Check there to learn how to &lt;a href="https://docs.affine.pro/self-host-affine"&gt;self-host AFFiNE&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Acknowledgement&lt;/h2&gt; 
&lt;p&gt;“We shape our tools and thereafter our tools shape us”. A lot of pioneers have inspired us along the way, e.g.:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Quip &amp;amp; Notion with their great concept of “everything is a block”&lt;/li&gt; 
 &lt;li&gt;Trello with their Kanban&lt;/li&gt; 
 &lt;li&gt;Airtable &amp;amp; Miro with their no-code programmable datasheets&lt;/li&gt; 
 &lt;li&gt;Miro &amp;amp; Whimiscal with their edgeless visual whiteboard&lt;/li&gt; 
 &lt;li&gt;Remote &amp;amp; Capacities with their object-based tag system&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There is a large overlap of their atomic “building blocks” between these apps. They are not open source, nor do they have a plugin system like Vscode for contributors to customize. We want to have something that contains all the features we love and also goes one step even further.&lt;/p&gt; 
&lt;p&gt;Thanks for checking us out, we appreciate your interest and sincerely hope that AFFiNE resonates with you! 🎵 Checking &lt;a href="https://affine.pro/"&gt;https://affine.pro/&lt;/a&gt; for more details ions.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Bug Reports&lt;/th&gt; 
   &lt;th&gt;Feature Requests&lt;/th&gt; 
   &lt;th&gt;Questions/Discussions&lt;/th&gt; 
   &lt;th&gt;AFFiNE Community&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;amp;labels=bug%2Cproduct-review&amp;amp;template=BUG-REPORT.yml&amp;amp;title=TITLE"&gt;Create a bug report&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;amp;labels=feat%2Cproduct-review&amp;amp;template=FEATURE-REQUEST.yml&amp;amp;title=TITLE"&gt;Submit a feature request&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/toeverything/AFFiNE/discussions"&gt;Check GitHub Discussion&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://community.affine.pro"&gt;Vist the AFFiNE Community&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Something isn't working as expected&lt;/td&gt; 
   &lt;td&gt;An idea for a new feature, or improvements&lt;/td&gt; 
   &lt;td&gt;Discuss and ask questions&lt;/td&gt; 
   &lt;td&gt;A place to ask, learn and engage with others&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Calling all developers, testers, tech writers and more! Contributions of all types are more than welcome, you can read more in &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/docs/types-of-contributions.md"&gt;docs/types-of-contributions.md&lt;/a&gt;. If you are interested in contributing code, read our &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/docs/CONTRIBUTING.md"&gt;docs/CONTRIBUTING.md&lt;/a&gt; and feel free to check out our GitHub issues to get stuck in to show us what you’re made of.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Before you start contributing, please make sure you have read and accepted our &lt;a href="https://github.com/toeverything/affine/edit/canary/.github/CLA.md"&gt;Contributor License Agreement&lt;/a&gt;. To indicate your agreement, simply edit this file and submit a pull request.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;For &lt;strong&gt;bug reports&lt;/strong&gt;, &lt;strong&gt;feature requests&lt;/strong&gt; and other &lt;strong&gt;suggestions&lt;/strong&gt; you can also &lt;a href="https://github.com/toeverything/AFFiNE/issues/new/choose"&gt;create a new issue&lt;/a&gt; and choose the most appropriate template for your feedback.&lt;/p&gt; 
&lt;p&gt;For &lt;strong&gt;translation&lt;/strong&gt; and &lt;strong&gt;language support&lt;/strong&gt; you can visit our &lt;a href="https://community.affine.pro/c/i18n-general"&gt;i18n General Space&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Looking for &lt;strong&gt;other ways to contribute&lt;/strong&gt; and wondering where to start? Check out the &lt;a href="https://community.affine.pro/c/start-here/affine-ambassador"&gt;AFFiNE Ambassador program&lt;/a&gt;, we work closely with passionate community members and provide them with a wide range of support and resources.&lt;/p&gt; 
&lt;p&gt;If you have questions, you are welcome to contact us. One of the best places to get more info and learn more is in the &lt;a href="https://community.affine.pro"&gt;AFFiNE Community&lt;/a&gt; where you can engage with other like-minded individuals.&lt;/p&gt; 
&lt;h2&gt;Templates&lt;/h2&gt; 
&lt;p&gt;AFFiNE now provides pre-built &lt;a href="https://affine.pro/templates"&gt;templates&lt;/a&gt; from our team. Following are the Top 10 most popular templates among AFFiNE users,if you want to contribute, you can contribute your own template so other people can use it too.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/category-vision-board-template"&gt;vision board template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/category-one-pager-template-free"&gt;one pager template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/sample-lesson-plan-math-template"&gt;sample lesson plan math template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/grr-lesson-plan-template-free"&gt;grr lesson plan template free&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/free-editable-lesson-plan-template-for-pre-k"&gt;free editable lesson plan template for pre k&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/high-note-collection-planners"&gt;high note collection planners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/category-digital-planner"&gt;digital planner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/adhd-planner"&gt;ADHD Planner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/reading-log"&gt;Reading Log&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/category-cornell-notes-template"&gt;Cornell Notes Template&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Blog&lt;/h2&gt; 
&lt;p&gt;Welcome to the AFFiNE blog section! Here, you’ll find the latest insights, tips, and guides on how to maximize your experience with AFFiNE and AFFiNE AI, the leading Canvas AI tool for flexible note-taking and creative organization.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/8-free-printable-vision-board-templates-examples-2023"&gt;vision board template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/ai-homework-helper"&gt;ai homework helper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/vision-board-maker"&gt;vision board maker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/free-customized-travel-itinerary-planner-templates"&gt;itinerary template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own"&gt;one pager template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/the-cornell-notes-template-and-system-learning-tips"&gt;cornell notes template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/top-10-free-editable-swot-analysis-template-examples"&gt;swot chart template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/apps-like-luna-task"&gt;apps like luna task&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/dynamic-AI-notes"&gt;note taking ai from rough notes to mind map&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/best-canvas-ai"&gt;canvas ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own"&gt;one pager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/how-to-write-sop-step-by-step-guide-5-best-free-tools-templates"&gt;SOP Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/10-best-free-chore-chart-templates-kids-adults"&gt;Chore Chart&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/packages/frontend/component"&gt;@affine/component&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;AFFiNE Component Resources&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/codecov/c/github/toeverything/affine?style=flat-square" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/packages/common/theme"&gt;@toeverything/theme&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;AFFiNE theme&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@toeverything/theme"&gt;&lt;img src="https://img.shields.io/npm/dm/@toeverything/theme?style=flat-square&amp;amp;color=eee" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Upstreams&lt;/h2&gt; 
&lt;p&gt;We would also like to give thanks to open-source projects that make AFFiNE possible:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/toeverything/BlockSuite"&gt;Blocksuite&lt;/a&gt; - 💠 BlockSuite is the open-source collaborative editor project behind AFFiNE.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/toeverything/OctoBase"&gt;OctoBase&lt;/a&gt; - 🐙 OctoBase is the open-source database behind AFFiNE, local-first, yet collaborative. A light-weight, scalable, data engine written in Rust.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yjs/yjs"&gt;yjs&lt;/a&gt; - Fundamental support of CRDTs for our implementation on state management and data sync.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/electron/electron"&gt;electron&lt;/a&gt; - Build cross-platform desktop apps with JavaScript, HTML, and CSS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/facebook/react"&gt;React&lt;/a&gt; - The library for web and native user interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/napi-rs/napi-rs"&gt;napi-rs&lt;/a&gt; - A framework for building compiled Node.js add-ons in Rust via Node-API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pmndrs/jotai"&gt;Jotai&lt;/a&gt; - Primitive and flexible state management for React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jack-Works/async-call-rpc"&gt;async-call-rpc&lt;/a&gt; - A lightweight JSON RPC client &amp;amp; server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vitejs/vite"&gt;Vite&lt;/a&gt; - Next generation frontend tooling.&lt;/li&gt; 
 &lt;li&gt;Other upstream &lt;a href="https://github.com/toeverything/AFFiNE/network/dependencies"&gt;dependencies&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thanks a lot to the community for providing such powerful and simple libraries, so that we can focus more on the implementation of the product logic, and we hope that in the future our projects will also provide a more easy-to-use knowledge base for everyone.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;We would like to express our gratitude to all the individuals who have already contributed to AFFiNE! If you have any AFFiNE-related project, documentation, tool or template, please feel free to contribute it by submitting a pull request to our curated list on GitHub: &lt;a href="https://github.com/toeverything/awesome-affine"&gt;awesome-affine&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://github.com/toeverything/affine/graphs/contributors"&gt; &lt;img alt="contributors" src="https://opencollective.com/affine/contributors.svg?width=890&amp;amp;button=false" /&gt; &lt;/a&gt; 
&lt;h2&gt;Self-Host&lt;/h2&gt; 
&lt;p&gt;Begin with Docker to deploy your own feature-rich, unrestricted version of AFFiNE. Our team is diligently updating to the latest version. For more information on how to self-host AFFiNE, please refer to our &lt;a href="https://docs.affine.pro/self-host-affine"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://template.run.claw.cloud/?openapp=system-fastdeploy%3FtemplateName%3Daffine"&gt;&lt;img src="https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/Run-on-ClawCloud.svg?sanitize=true" alt="Run on ClawCloud" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Hiring&lt;/h2&gt; 
&lt;p&gt;Some amazing companies, including AFFiNE, are looking for developers! Are you interested in joining AFFiNE or its partners? Check out our &lt;a href="https://affine.pro/redirect/discord"&gt;Discord channel&lt;/a&gt; for some of the latest jobs available.&lt;/p&gt; 
&lt;h2&gt;Feature Request&lt;/h2&gt; 
&lt;p&gt;For feature requests, please see &lt;a href="https://community.affine.pro/c/feature-requests/"&gt;community.affine.pro&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;h3&gt;Codespaces&lt;/h3&gt; 
&lt;p&gt;From the GitHub repo main page, click the green "Code" button and select "Create codespace on master". This will open a new Codespace with the (supposedly auto-forked AFFiNE repo cloned, built, and ready to go.&lt;/p&gt; 
&lt;h3&gt;Local&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/docs/BUILDING.md"&gt;BUILDING.md&lt;/a&gt; for instructions on how to build AFFiNE from source code.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from everyone. See &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/docs/contributing/tutorial.md"&gt;docs/contributing/tutorial.md&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.chromatic.com/"&gt;&lt;img src="https://user-images.githubusercontent.com/321738/84662277-e3db4f80-af1b-11ea-88f5-91d67a5e59f6.png" width="153" height="30" alt="Chromatic" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Thanks to &lt;a href="https://www.chromatic.com/"&gt;Chromatic&lt;/a&gt; for providing the visual testing platform that helps us review UI changes and catch visual regressions.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;h3&gt;Editions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;AFFiNE Community Edition (CE) is the current available version, it's free for self-host under the MIT license.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;AFFiNE Enterprise Edition (EE) is yet to be published, it will have more advanced features and enterprise-oriented offerings, including but not exclusive to rebranding and SSO, advanced admin and audit, etc., you may refer to &lt;a href="https://affine.pro/pricing"&gt;https://affine.pro/pricing&lt;/a&gt; for more information&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/LICENSE"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>stan-smith/FossFLOW</title>
      <link>https://github.com/stan-smith/FossFLOW</link>
      <description>&lt;p&gt;Make beautiful isometric infrastructure diagrams&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FossFLOW - Isometric Diagramming Tool &lt;img width="30" height="30" alt="fossflow" src="https://github.com/user-attachments/assets/56d78887-601c-4336-ab87-76f8ee4cde96" /&gt;&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/stan-smith/FossFLOW/master/README.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/stan-smith/FossFLOW/master/docs/README.cn.md"&gt;简体中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/stan-smith/FossFLOW/master/docs/README.es.md"&gt;Español&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/stan-smith/FossFLOW/master/docs/README.pt.md"&gt;Português&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/stan-smith/FossFLOW/master/docs/README.fr.md"&gt;Français&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/stan-smith/FossFLOW/master/docs/README.hi.md"&gt;हिन्दी&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/stan-smith/FossFLOW/master/docs/README.bn.md"&gt;বাংলা&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/stan-smith/FossFLOW/master/docs/README.ru.md"&gt;Русский&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;b&gt;Hey!&lt;/b&gt; Stan here, if you've used FossFLOW and it's helped you, &lt;b&gt;I'd really appreciate if you could donate something small :)&lt;/b&gt; I work full time, and finding the time to work on this project is challenging enough. If you've had a feature that I've implemented for you, or fixed a bug it'd be great if you could :) if not, that's not a problem, this software will always remain free!&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;Also!&lt;/b&gt; If you haven't yet, please check out the underlying library this is built on by &lt;a href="https://github.com/markmanx/isoflow"&gt;@markmanx&lt;/a&gt; I truly stand on the shoulders of a giant here 🫡&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://ko-fi.com/P5P61KBXA3"&gt;&lt;img src="https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true" alt="ko-fi" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img width="30" height="30" alt="image" src="https://github.com/user-attachments/assets/dc6ec9ca-48d7-4047-94cf-5c4f7ed63b84" /&gt; &lt;b&gt; &lt;a href="https://buymeacoffee.com/stan.smith"&gt;https://buymeacoffee.com/stan.smith&lt;/a&gt; &lt;/b&gt;&lt;/p&gt; 
&lt;p&gt;Thanks,&lt;/p&gt; 
&lt;p&gt;-Stan&lt;/p&gt; 
&lt;h2&gt;Try it online&lt;/h2&gt; 
&lt;p&gt;Go to &lt;b&gt; --&amp;gt; &lt;a href="https://stan-smith.github.io/FossFLOW/"&gt;https://stan-smith.github.io/FossFLOW/&lt;/a&gt; &amp;lt;-- &lt;/b&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;FossFLOW is a powerful, open-source Progressive Web App (PWA) for creating beautiful isometric diagrams. Built with React and the &lt;a href="https://github.com/markmanx/isoflow"&gt;Isoflow&lt;/a&gt; (Now forked and published to NPM as fossflow) library, it runs entirely in your browser with offline support.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/e7f254ad-625f-4b8a-8efc-5293b5be9d55" alt="Screenshot_20250630_160954" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;📝 &lt;a href="https://github.com/stan-smith/FossFLOW/raw/master/FOSSFLOW_TODO.md"&gt;FOSSFLOW_TODO.md&lt;/a&gt;&lt;/strong&gt; - Current issues and roadmap with codebase mappings, most gripes are with the isoflow library itself.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🤝 &lt;a href="https://github.com/stan-smith/FossFLOW/raw/master/CONTRIBUTORS.md"&gt;CONTRIBUTORS.md&lt;/a&gt;&lt;/strong&gt; - How to contribute to the project.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Recent Updates (October 2025)&lt;/h2&gt; 
&lt;h3&gt;Multilingual Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;8 Languages Supported&lt;/strong&gt; - Full interface translation in English, Chinese (Simplified), Spanish, Portuguese (Brazilian), French, Hindi, Bengali, and Russian&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Language Selector&lt;/strong&gt; - Easy-to-use language switcher in the app header&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Complete Translation&lt;/strong&gt; - All menus, dialogs, settings, tooltips, and help content translated&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Locale-Aware&lt;/strong&gt; - Automatically detects and remembers your language preference&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Improved Connector Tool&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Click-based Creation&lt;/strong&gt; - New default mode: click first node, then second node to connect&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Drag Mode Option&lt;/strong&gt; - Original drag-and-drop still available via settings&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mode Selection&lt;/strong&gt; - Switch between click and drag modes in Settings → Connectors tab&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Better Reliability&lt;/strong&gt; - Click mode provides more predictable connection creation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Custom Icon Import&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Import Your Own Icons&lt;/strong&gt; - Upload custom icons (PNG, JPG, SVG) to use in your diagrams&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic Scaling&lt;/strong&gt; - Icons are automatically scaled to consistent sizes for professional appearance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Isometric/Flat Toggle&lt;/strong&gt; - Choose whether imported icons appear as 3D isometric or flat 2D&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Smart Persistence&lt;/strong&gt; - Custom icons are saved with diagrams and work across all storage methods&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Icon Resources&lt;/strong&gt; - Find free icons at: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://icon-sets.iconify.design/"&gt;Iconify Icon Sets&lt;/a&gt; - Thousands of free SVG icons&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.flaticon.com/free-icons/isometric"&gt;Flaticon Isometric Icons&lt;/a&gt; - High-quality isometric icon packs&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Server Storage Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Persistent Storage&lt;/strong&gt; - Diagrams saved to server filesystem, persist across browser sessions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-device Access&lt;/strong&gt; - Access your diagrams from any device when using Docker deployment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic Detection&lt;/strong&gt; - UI automatically shows server storage when available&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Overwrite Protection&lt;/strong&gt; - Confirmation dialog when saving with duplicate names&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker Integration&lt;/strong&gt; - Server storage enabled by default in Docker deployments&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Enhanced Interaction Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Configurable Hotkeys&lt;/strong&gt; - Three profiles (QWERTY, SMNRCT, None) for tool selection with visual indicators&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced Pan Controls&lt;/strong&gt; - Multiple pan methods including empty area drag, middle/right click, modifier keys (Ctrl/Alt), and keyboard navigation (Arrow/WASD/IJKL)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Toggle Connector Arrows&lt;/strong&gt; - Option to show/hide arrows on individual connectors&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Persistent Tool Selection&lt;/strong&gt; - Connector tool remains active after creating connections&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Settings Dialog&lt;/strong&gt; - Centralized configuration for hotkeys and pan controls&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Docker &amp;amp; CI/CD Improvements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Automated Docker Builds&lt;/strong&gt; - GitHub Actions workflow for automatic Docker Hub deployment on commits&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-architecture Support&lt;/strong&gt; - Docker images for both &lt;code&gt;linux/amd64&lt;/code&gt; and &lt;code&gt;linux/arm64&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pre-built Images&lt;/strong&gt; - Available at &lt;code&gt;stnsmith/fossflow:latest&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Monorepo Architecture&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Single repository&lt;/strong&gt; for both library and application&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;NPM Workspaces&lt;/strong&gt; for streamlined dependency management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Unified build process&lt;/strong&gt; with &lt;code&gt;npm run build&lt;/code&gt; at the root&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;UI Fixes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed Quill editor toolbar icons display issue&lt;/li&gt; 
 &lt;li&gt;Resolved React key warnings in context menus&lt;/li&gt; 
 &lt;li&gt;Improved markdown editor styling&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎨 &lt;strong&gt;Isometric Diagramming&lt;/strong&gt; - Create stunning 3D-style technical diagrams&lt;/li&gt; 
 &lt;li&gt;💾 &lt;strong&gt;Auto-Save&lt;/strong&gt; - Your work is automatically saved every 5 seconds&lt;/li&gt; 
 &lt;li&gt;📱 &lt;strong&gt;PWA Support&lt;/strong&gt; - Install as a native app on Mac and Linux&lt;/li&gt; 
 &lt;li&gt;🔒 &lt;strong&gt;Privacy-First&lt;/strong&gt; - All data stored locally in your browser&lt;/li&gt; 
 &lt;li&gt;📤 &lt;strong&gt;Import/Export&lt;/strong&gt; - Share diagrams as JSON files&lt;/li&gt; 
 &lt;li&gt;🎯 &lt;strong&gt;Session Storage&lt;/strong&gt; - Quick save without dialogs&lt;/li&gt; 
 &lt;li&gt;🌐 &lt;strong&gt;Offline Support&lt;/strong&gt; - Work without internet connection&lt;/li&gt; 
 &lt;li&gt;🗄️ &lt;strong&gt;Server Storage&lt;/strong&gt; - Optional persistent storage when using Docker (enabled by default)&lt;/li&gt; 
 &lt;li&gt;🌍 &lt;strong&gt;Multilingual&lt;/strong&gt; - Full support for 8 languages: English, 简体中文, Español, Português, Français, हिन्दी, বাংলা, Русский&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🐳 Quick Deploy with Docker&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Using Docker Compose (recommended - includes persistent storage)
docker compose up

# Or run directly from Docker Hub with persistent storage
docker run -p 80:80 -v $(pwd)/diagrams:/data/diagrams stnsmith/fossflow:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Server storage is enabled by default in Docker. Your diagrams will be saved to &lt;code&gt;./diagrams&lt;/code&gt; on the host.&lt;/p&gt; 
&lt;p&gt;To disable server storage, set &lt;code&gt;ENABLE_SERVER_STORAGE=false&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -p 80:80 -e ENABLE_SERVER_STORAGE=false stnsmith/fossflow:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Quick Start (Local Development)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone the repository
git clone https://github.com/stan-smith/FossFLOW
cd FossFLOW

# Install dependencies
npm install

# Build the library (required first time)
npm run build:lib

# Start development server
npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; in your browser.&lt;/p&gt; 
&lt;h2&gt;Monorepo Structure&lt;/h2&gt; 
&lt;p&gt;This is a monorepo containing two packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;packages/fossflow-lib&lt;/code&gt; - React component library for drawing network diagrams (built with Webpack)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;packages/fossflow-app&lt;/code&gt; - Progressive Web App for creating isometric diagrams (built with RSBuild)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development Commands&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Development
npm run dev          # Start app development server
npm run dev:lib      # Watch mode for library development

# Building
npm run build        # Build both library and app
npm run build:lib    # Build library only
npm run build:app    # Build app only

# Testing &amp;amp; Linting
npm test             # Run unit tests
npm run lint         # Check for linting errors

# E2E Tests (Selenium)
cd e2e-tests
./run-tests.sh       # Run end-to-end tests (requires Docker &amp;amp; Python)

# Publishing
npm run publish:lib  # Publish library to npm
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to Use&lt;/h2&gt; 
&lt;h3&gt;Creating Diagrams&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Add Items&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Press the "+" button on the top right menu, the library of components will appear on the left&lt;/li&gt; 
   &lt;li&gt;Drag and drop components from the library onto the canvas&lt;/li&gt; 
   &lt;li&gt;Or right-click on the grid and select "Add node"&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Connect Items&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Select the Connector tool (press 'C' or click connector icon)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Click mode&lt;/strong&gt; (default): Click first node, then click second node&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Drag mode&lt;/strong&gt; (optional): Click and drag from first to second node&lt;/li&gt; 
   &lt;li&gt;Switch modes in Settings → Connectors tab&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Save Your Work&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Quick Save&lt;/strong&gt; - Saves to browser session&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Export&lt;/strong&gt; - Download as JSON file&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Import&lt;/strong&gt; - Load from JSON file&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Storage Options&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Session Storage&lt;/strong&gt;: Temporary saves cleared when browser closes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Export/Import&lt;/strong&gt;: Permanent storage as JSON files&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Auto-Save&lt;/strong&gt;: Automatically saves changes every 5 seconds to session&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Please see &lt;a href="https://raw.githubusercontent.com/stan-smith/FossFLOW/master/CONTRIBUTORS.md"&gt;CONTRIBUTORS.md&lt;/a&gt; for guidelines.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/stan-smith/FossFLOW/master/FOSSFLOW_ENCYCLOPEDIA.md"&gt;FOSSFLOW_ENCYCLOPEDIA.md&lt;/a&gt; - Comprehensive guide to the codebase&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/stan-smith/FossFLOW/master/FOSSFLOW_TODO.md"&gt;FOSSFLOW_TODO.md&lt;/a&gt; - Current issues and roadmap&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/stan-smith/FossFLOW/master/CONTRIBUTORS.md"&gt;CONTRIBUTORS.md&lt;/a&gt; - Contributing guidelines&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>QwenLM/qwen-code</title>
      <link>https://github.com/QwenLM/qwen-code</link>
      <description>&lt;p&gt;Qwen Code is a coding agent that lives in the digital world.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Qwen Code&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/QwenLM/qwen-code/main/docs/assets/qwen-screenshot.png" alt="Qwen Code Screenshot" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://www.npmjs.com/package/@qwen-code/qwen-code"&gt;&lt;img src="https://img.shields.io/npm/v/@qwen-code/qwen-code.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/QwenLM/qwen-code/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/QwenLM/qwen-code.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://nodejs.org/"&gt;&lt;img src="https://img.shields.io/badge/node-%3E%3D20.0.0-brightgreen.svg?sanitize=true" alt="Node.js Version" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@qwen-code/qwen-code"&gt;&lt;img src="https://img.shields.io/npm/dm/@qwen-code/qwen-code.svg?sanitize=true" alt="Downloads" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;AI-powered command-line workflow tool for developers&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/QwenLM/qwen-code/main/#installation"&gt;Installation&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/QwenLM/qwen-code/main/#quick-start"&gt;Quick Start&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/QwenLM/qwen-code/main/#key-features"&gt;Features&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/QwenLM/qwen-code/main/docs/"&gt;Documentation&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/QwenLM/qwen-code/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://qwenlm.github.io/qwen-code-docs/de/"&gt;Deutsch&lt;/a&gt; | &lt;a href="https://qwenlm.github.io/qwen-code-docs/fr"&gt;français&lt;/a&gt; | &lt;a href="https://qwenlm.github.io/qwen-code-docs/ja/"&gt;日本語&lt;/a&gt; | &lt;a href="https://qwenlm.github.io/qwen-code-docs/ru"&gt;Русский&lt;/a&gt; | &lt;a href="https://qwenlm.github.io/qwen-code-docs/zh/"&gt;中文&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Qwen Code is a powerful command-line AI workflow tool adapted from &lt;a href="https://github.com/google-gemini/gemini-cli"&gt;&lt;strong&gt;Gemini CLI&lt;/strong&gt;&lt;/a&gt; (&lt;a href="https://raw.githubusercontent.com/QwenLM/qwen-code/main/README.gemini.md"&gt;details&lt;/a&gt;), specifically optimized for &lt;a href="https://github.com/QwenLM/Qwen3-Coder"&gt;Qwen3-Coder&lt;/a&gt; models. It enhances your development workflow with advanced code understanding, automated tasks, and intelligent assistance.&lt;/p&gt; 
&lt;h2&gt;💡 Free Options Available&lt;/h2&gt; 
&lt;p&gt;Get started with Qwen Code at no cost using any of these free options:&lt;/p&gt; 
&lt;h3&gt;🔥 Qwen OAuth (Recommended)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;2,000 requests per day&lt;/strong&gt; with no token limits&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;60 requests per minute&lt;/strong&gt; rate limit&lt;/li&gt; 
 &lt;li&gt;Simply run &lt;code&gt;qwen&lt;/code&gt; and authenticate with your qwen.ai account&lt;/li&gt; 
 &lt;li&gt;Automatic credential management and refresh&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;/auth&lt;/code&gt; command to switch to Qwen OAuth if you have initialized with OpenAI compatible mode&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🌏 Regional Free Tiers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Mainland China&lt;/strong&gt;: ModelScope offers &lt;strong&gt;2,000 free API calls per day&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;International&lt;/strong&gt;: OpenRouter provides &lt;strong&gt;up to 1,000 free API calls per day&lt;/strong&gt; worldwide&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For detailed setup instructions, see &lt;a href="https://raw.githubusercontent.com/QwenLM/qwen-code/main/#authorization"&gt;Authorization&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] &lt;strong&gt;Token Usage Notice&lt;/strong&gt;: Qwen Code may issue multiple API calls per cycle, resulting in higher token usage (similar to Claude Code). We're actively optimizing API efficiency.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Code Understanding &amp;amp; Editing&lt;/strong&gt; - Query and edit large codebases beyond traditional context window limits&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workflow Automation&lt;/strong&gt; - Automate operational tasks like handling pull requests and complex rebases&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced Parser&lt;/strong&gt; - Adapted parser specifically optimized for Qwen-Coder models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vision Model Support&lt;/strong&gt; - Automatically detect images in your input and seamlessly switch to vision-capable models for multimodal analysis&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;Ensure you have &lt;a href="https://nodejs.org/en/download"&gt;Node.js version 20&lt;/a&gt; or higher installed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -qL https://www.npmjs.com/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install from npm&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @qwen-code/qwen-code@latest
qwen --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install from source&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/QwenLM/qwen-code.git
cd qwen-code
npm install
npm install -g .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install globally with Homebrew (macOS/Linux)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install qwen-code
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start Qwen Code
qwen

# Example commands
&amp;gt; Explain this codebase structure
&amp;gt; Help me refactor this function
&amp;gt; Generate unit tests for this module
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Session Management&lt;/h3&gt; 
&lt;p&gt;Control your token usage with configurable session limits to optimize costs and performance.&lt;/p&gt; 
&lt;h4&gt;Configure Session Token Limit&lt;/h4&gt; 
&lt;p&gt;Create or edit &lt;code&gt;.qwen/settings.json&lt;/code&gt; in your home directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "sessionTokenLimit": 32000
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Session Commands&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;/compress&lt;/code&gt;&lt;/strong&gt; - Compress conversation history to continue within token limits&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;/clear&lt;/code&gt;&lt;/strong&gt; - Clear all conversation history and start fresh&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;/stats&lt;/code&gt;&lt;/strong&gt; - Check current token usage and limits&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📝 &lt;strong&gt;Note&lt;/strong&gt;: Session token limit applies to a single conversation, not cumulative API calls.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Vision Model Configuration&lt;/h3&gt; 
&lt;p&gt;Qwen Code includes intelligent vision model auto-switching that detects images in your input and can automatically switch to vision-capable models for multimodal analysis. &lt;strong&gt;This feature is enabled by default&lt;/strong&gt; - when you include images in your queries, you'll see a dialog asking how you'd like to handle the vision model switch.&lt;/p&gt; 
&lt;h4&gt;Skip the Switch Dialog (Optional)&lt;/h4&gt; 
&lt;p&gt;If you don't want to see the interactive dialog each time, configure the default behavior in your &lt;code&gt;.qwen/settings.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "experimental": {
    "vlmSwitchMode": "once"
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Available modes:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;"once"&lt;/code&gt;&lt;/strong&gt; - Switch to vision model for this query only, then revert&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;"session"&lt;/code&gt;&lt;/strong&gt; - Switch to vision model for the entire session&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;"persist"&lt;/code&gt;&lt;/strong&gt; - Continue with current model (no switching)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Not set&lt;/strong&gt; - Show interactive dialog each time (default)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Command Line Override&lt;/h4&gt; 
&lt;p&gt;You can also set the behavior via command line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Switch once per query
qwen --vlm-switch-mode once

# Switch for entire session
qwen --vlm-switch-mode session

# Never switch automatically
qwen --vlm-switch-mode persist
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Disable Vision Models (Optional)&lt;/h4&gt; 
&lt;p&gt;To completely disable vision model support, add to your &lt;code&gt;.qwen/settings.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "experimental": {
    "visionModelPreview": false
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 &lt;strong&gt;Tip&lt;/strong&gt;: In YOLO mode (&lt;code&gt;--yolo&lt;/code&gt;), vision switching happens automatically without prompts when images are detected.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Authorization&lt;/h3&gt; 
&lt;p&gt;Choose your preferred authentication method based on your needs:&lt;/p&gt; 
&lt;h4&gt;1. Qwen OAuth (🚀 Recommended - Start in 30 seconds)&lt;/h4&gt; 
&lt;p&gt;The easiest way to get started - completely free with generous quotas:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Just run this command and follow the browser authentication
qwen
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;What happens:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Instant Setup&lt;/strong&gt;: CLI opens your browser automatically&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;One-Click Login&lt;/strong&gt;: Authenticate with your qwen.ai account&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic Management&lt;/strong&gt;: Credentials cached locally for future use&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No Configuration&lt;/strong&gt;: Zero setup required - just start coding!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Free Tier Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ &lt;strong&gt;2,000 requests/day&lt;/strong&gt; (no token counting needed)&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;60 requests/minute&lt;/strong&gt; rate limit&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Automatic credential refresh&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Zero cost&lt;/strong&gt; for individual users&lt;/li&gt; 
 &lt;li&gt;ℹ️ &lt;strong&gt;Note&lt;/strong&gt;: Model fallback may occur to maintain service quality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2. OpenAI-Compatible API&lt;/h4&gt; 
&lt;p&gt;Use API keys for OpenAI or other compatible providers:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Configuration Methods:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Environment Variables&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;export OPENAI_API_KEY="your_api_key_here"
export OPENAI_BASE_URL="your_api_endpoint"
export OPENAI_MODEL="your_model_choice"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Project &lt;code&gt;.env&lt;/code&gt; File&lt;/strong&gt; Create a &lt;code&gt;.env&lt;/code&gt; file in your project root:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-env"&gt;OPENAI_API_KEY=your_api_key_here
OPENAI_BASE_URL=your_api_endpoint
OPENAI_MODEL=your_model_choice
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;API Provider Options&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;Regional Notice:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Mainland China&lt;/strong&gt;: Use Alibaba Cloud Bailian or ModelScope&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;International&lt;/strong&gt;: Use Alibaba Cloud ModelStudio or OpenRouter&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;🇨🇳 For Users in Mainland China&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Option 1: Alibaba Cloud Bailian&lt;/strong&gt; (&lt;a href="https://bailian.console.aliyun.com/"&gt;Apply for API Key&lt;/a&gt;)&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;export OPENAI_API_KEY="your_api_key_here"
export OPENAI_BASE_URL="https://dashscope.aliyuncs.com/compatible-mode/v1"
export OPENAI_MODEL="qwen3-coder-plus"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Option 2: ModelScope (Free Tier)&lt;/strong&gt; (&lt;a href="https://modelscope.cn/docs/model-service/API-Inference/intro"&gt;Apply for API Key&lt;/a&gt;)&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;✅ &lt;strong&gt;2,000 free API calls per day&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;⚠️ Connect your Aliyun account to avoid authentication errors&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;export OPENAI_API_KEY="your_api_key_here"
export OPENAI_BASE_URL="https://api-inference.modelscope.cn/v1"
export OPENAI_MODEL="Qwen/Qwen3-Coder-480B-A35B-Instruct"
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;🌍 For International Users&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Option 1: Alibaba Cloud ModelStudio&lt;/strong&gt; (&lt;a href="https://modelstudio.console.alibabacloud.com/"&gt;Apply for API Key&lt;/a&gt;)&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;export OPENAI_API_KEY="your_api_key_here"
export OPENAI_BASE_URL="https://dashscope-intl.aliyuncs.com/compatible-mode/v1"
export OPENAI_MODEL="qwen3-coder-plus"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Option 2: OpenRouter (Free Tier Available)&lt;/strong&gt; (&lt;a href="https://openrouter.ai/"&gt;Apply for API Key&lt;/a&gt;)&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;export OPENAI_API_KEY="your_api_key_here"
export OPENAI_BASE_URL="https://openrouter.ai/api/v1"
export OPENAI_MODEL="qwen/qwen3-coder:free"
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Usage Examples&lt;/h2&gt; 
&lt;h3&gt;🔍 Explore Codebases&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd your-project/
qwen

# Architecture analysis
&amp;gt; Describe the main pieces of this system's architecture
&amp;gt; What are the key dependencies and how do they interact?
&amp;gt; Find all API endpoints and their authentication methods
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💻 Code Development&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Refactoring
&amp;gt; Refactor this function to improve readability and performance
&amp;gt; Convert this class to use dependency injection
&amp;gt; Split this large module into smaller, focused components

# Code generation
&amp;gt; Create a REST API endpoint for user management
&amp;gt; Generate unit tests for the authentication module
&amp;gt; Add error handling to all database operations
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🔄 Automate Workflows&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Git automation
&amp;gt; Analyze git commits from the last 7 days, grouped by feature
&amp;gt; Create a changelog from recent commits
&amp;gt; Find all TODO comments and create GitHub issues

# File operations
&amp;gt; Convert all images in this directory to PNG format
&amp;gt; Rename all test files to follow the *.test.ts pattern
&amp;gt; Find and remove all console.log statements
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🐛 Debugging &amp;amp; Analysis&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Performance analysis
&amp;gt; Identify performance bottlenecks in this React component
&amp;gt; Find all N+1 query problems in the codebase

# Security audit
&amp;gt; Check for potential SQL injection vulnerabilities
&amp;gt; Find all hardcoded credentials or API keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Popular Tasks&lt;/h2&gt; 
&lt;h3&gt;📚 Understand New Codebases&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; What are the core business logic components?
&amp;gt; What security mechanisms are in place?
&amp;gt; How does the data flow through the system?
&amp;gt; What are the main design patterns used?
&amp;gt; Generate a dependency graph for this module
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🔨 Code Refactoring &amp;amp; Optimization&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; What parts of this module can be optimized?
&amp;gt; Help me refactor this class to follow SOLID principles
&amp;gt; Add proper error handling and logging
&amp;gt; Convert callbacks to async/await pattern
&amp;gt; Implement caching for expensive operations
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;📝 Documentation &amp;amp; Testing&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; Generate comprehensive JSDoc comments for all public APIs
&amp;gt; Write unit tests with edge cases for this component
&amp;gt; Create API documentation in OpenAPI format
&amp;gt; Add inline comments explaining complex algorithms
&amp;gt; Generate a README for this module
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🚀 Development Acceleration&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; Set up a new Express server with authentication
&amp;gt; Create a React component with TypeScript and tests
&amp;gt; Implement a rate limiter middleware
&amp;gt; Add database migrations for new schema
&amp;gt; Configure CI/CD pipeline for this project
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Commands &amp;amp; Shortcuts&lt;/h2&gt; 
&lt;h3&gt;Session Commands&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;/help&lt;/code&gt; - Display available commands&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/clear&lt;/code&gt; - Clear conversation history&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/compress&lt;/code&gt; - Compress history to save tokens&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/stats&lt;/code&gt; - Show current session information&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/exit&lt;/code&gt; or &lt;code&gt;/quit&lt;/code&gt; - Exit Qwen Code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Keyboard Shortcuts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl+C&lt;/code&gt; - Cancel current operation&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl+D&lt;/code&gt; - Exit (on empty line)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Up/Down&lt;/code&gt; - Navigate command history&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Benchmark Results&lt;/h2&gt; 
&lt;h3&gt;Terminal-Bench Performance&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Agent&lt;/th&gt; 
   &lt;th&gt;Model&lt;/th&gt; 
   &lt;th&gt;Accuracy&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Qwen Code&lt;/td&gt; 
   &lt;td&gt;Qwen3-Coder-480A35&lt;/td&gt; 
   &lt;td&gt;37.5%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Qwen Code&lt;/td&gt; 
   &lt;td&gt;Qwen3-Coder-30BA3B&lt;/td&gt; 
   &lt;td&gt;31.3%&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Development &amp;amp; Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/QwenLM/qwen-code/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; to learn how to contribute to the project.&lt;/p&gt; 
&lt;p&gt;For detailed authentication setup, see the &lt;a href="https://raw.githubusercontent.com/QwenLM/qwen-code/main/docs/cli/authentication.md"&gt;authentication guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you encounter issues, check the &lt;a href="https://raw.githubusercontent.com/QwenLM/qwen-code/main/docs/troubleshooting.md"&gt;troubleshooting guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;This project is based on &lt;a href="https://github.com/google-gemini/gemini-cli"&gt;Google Gemini CLI&lt;/a&gt;. We acknowledge and appreciate the excellent work of the Gemini CLI team. Our main contribution focuses on parser-level adaptations to better support Qwen-Coder models.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/QwenLM/qwen-code/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#QwenLM/qwen-code&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=QwenLM/qwen-code&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>outerbase/studio</title>
      <link>https://github.com/outerbase/studio</link>
      <description>&lt;p&gt;A lightweight Database GUI in your browser. It supports connecting to Postgres, MySQL, and SQLite.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Outerbase Studio&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://deploy.workers.cloudflare.com/?url=https://github.com/outerbase/studio"&gt;&lt;img src="https://deploy.workers.cloudflare.com/button" alt="Deploy to Cloudflare" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Outerbase Studio&lt;/strong&gt; is a lightweight, browser-based GUI for managing SQL databases, designed for simplicity and versatility. Initially built for LibSQL and SQLite, it now supports a broad range of databases, including:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Supported Databases:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;SQLite-based Database&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Turso/LibSQL&lt;/li&gt; 
   &lt;li&gt;SQLite (local files)&lt;/li&gt; 
   &lt;li&gt;Cloudflare D1&lt;/li&gt; 
   &lt;li&gt;rqlite&lt;/li&gt; 
   &lt;li&gt;StarbaseDB&lt;/li&gt; 
   &lt;li&gt;Val.town&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;MySQL (beta, limited features)&lt;/li&gt; 
 &lt;li&gt;PostgreSQL (beta, limited features)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;Give it a try directly from your browser&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://libsqlstudio.com"&gt;&lt;img src="https://github.com/user-attachments/assets/5d92ce58-9ce6-4cd7-9c65-4763d2d3b231" alt="LibSQL Studio, sqlite online editor" /&gt;&lt;/a&gt; &lt;a href="https://libsqlstudio.com/playground/client?template=chinook"&gt;&lt;img src="https://github.com/user-attachments/assets/dcf7e246-fe72-4351-ab10-ae2d1658087d" alt="Libsql studio playground" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Desktop App&lt;/h2&gt; 
&lt;p&gt;You can download &lt;a href="https://github.com/outerbase/studio-desktop/releases/"&gt;Windows and Mac desktop app here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Outerbase Studio Desktop is a lightweight Electron wrapper for the Outerbase Studio web version. It enables support for drivers that aren't feasible in a browser environment, such as MySQL and PostgreSQL.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/1d7a3d90-61e3-4a77-83a5-4bb096bbfb4b" alt="libsqlstudio-git-preview (7)" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Query Editor&lt;/strong&gt;: It features a user-friendly query editor equipped with auto-completion and function hint tooltips. It allows you to execute multiple queries simultaneously and view their results efficiently.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data Editor&lt;/strong&gt;: It comes with a powerful data editor, allowing you to stage all your changes and preview them before committing. The data table is highly optimized and lightweight, capable of rendering thousands of rows and columns efficiently.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Schema Editor&lt;/strong&gt;: It allows you to quickly create, modify, and remove table columns with just a few clicks without writing any SQL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Connection Manager&lt;/strong&gt;: It includes a flexible connection manager, allowing you to store your connections locally in your browser. You can also store them on a server and share your connections across multiple devices.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The features mentioned above are just a few of the many we offer. Give it a try to explore everything we have in store&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>makenotion/notion-mcp-server</title>
      <link>https://github.com/makenotion/notion-mcp-server</link>
      <description>&lt;p&gt;Official Notion MCP Server&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Notion MCP Server&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;We’ve introduced &lt;strong&gt;Notion MCP&lt;/strong&gt;, a remote MCP server with the following improvements:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Easy installation via standard OAuth. No need to fiddle with JSON or API token anymore.&lt;/li&gt; 
  &lt;li&gt;Powerful tools tailored to AI agents. These tools are designed with optimized token consumption in mind.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Learn more and try it out &lt;a href="https://developers.notion.com/docs/mcp"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/6c07003c-8455-4636-b298-d60ffdf46cd8" alt="notion-mcp-sm" /&gt;&lt;/p&gt; 
&lt;p&gt;This project implements an &lt;a href="https://spec.modelcontextprotocol.io/"&gt;MCP server&lt;/a&gt; for the &lt;a href="https://developers.notion.com/reference/intro"&gt;Notion API&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/e3ff90a7-7801-48a9-b807-f7dd47f0d3d6" alt="mcp-demo" /&gt;&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;h4&gt;1. Setting up Integration in Notion:&lt;/h4&gt; 
&lt;p&gt;Go to &lt;a href="https://www.notion.so/profile/integrations"&gt;https://www.notion.so/profile/integrations&lt;/a&gt; and create a new &lt;strong&gt;internal&lt;/strong&gt; integration or select an existing one.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/makenotion/notion-mcp-server/main/docs/images/integrations-creation.png" alt="Creating a Notion Integration token" /&gt;&lt;/p&gt; 
&lt;p&gt;While we limit the scope of Notion API's exposed (for example, you will not be able to delete databases via MCP), there is a non-zero risk to workspace data by exposing it to LLMs. Security-conscious users may want to further configure the Integration's &lt;em&gt;Capabilities&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;For example, you can create a read-only integration token by giving only "Read content" access from the "Configuration" tab:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/makenotion/notion-mcp-server/main/docs/images/integrations-capabilities.png" alt="Notion Integration Token Capabilities showing Read content checked" /&gt;&lt;/p&gt; 
&lt;h4&gt;2. Connecting content to integration:&lt;/h4&gt; 
&lt;p&gt;Ensure relevant pages and databases are connected to your integration.&lt;/p&gt; 
&lt;p&gt;To do this, visit the &lt;strong&gt;Access&lt;/strong&gt; tab in your internal integration settings. Edit access and select the pages you'd like to use. &lt;img src="https://raw.githubusercontent.com/makenotion/notion-mcp-server/main/docs/images/integration-access.png" alt="Integration Access tab" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/makenotion/notion-mcp-server/main/docs/images/page-access-edit.png" alt="Edit integration access" /&gt;&lt;/p&gt; 
&lt;p&gt;Alternatively, you can grant page access individually. You'll need to visit the target page, and click on the 3 dots, and select "Connect to integration".&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/makenotion/notion-mcp-server/main/docs/images/connections.png" alt="Adding Integration Token to Notion Connections" /&gt;&lt;/p&gt; 
&lt;h4&gt;3. Adding MCP config to your client:&lt;/h4&gt; 
&lt;h5&gt;Using npm:&lt;/h5&gt; 
&lt;p&gt;&lt;strong&gt;Cursor &amp;amp; Claude:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Add the following to your &lt;code&gt;.cursor/mcp.json&lt;/code&gt; or &lt;code&gt;claude_desktop_config.json&lt;/code&gt; (MacOS: &lt;code&gt;~/Library/Application\ Support/Claude/claude_desktop_config.json&lt;/code&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Option 1: Using NOTION_TOKEN (recommended)&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;{
  "mcpServers": {
    "notionApi": {
      "command": "npx",
      "args": ["-y", "@notionhq/notion-mcp-server"],
      "env": {
        "NOTION_TOKEN": "ntn_****"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Option 2: Using OPENAPI_MCP_HEADERS (for advanced use cases)&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;{
  "mcpServers": {
    "notionApi": {
      "command": "npx",
      "args": ["-y", "@notionhq/notion-mcp-server"],
      "env": {
        "OPENAPI_MCP_HEADERS": "{\"Authorization\": \"Bearer ntn_****\", \"Notion-Version\": \"2022-06-28\" }"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Zed&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Add the following to your &lt;code&gt;settings.json&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "context_servers": {
    "some-context-server": {
      "command": {
        "path": "npx",
        "args": ["-y", "@notionhq/notion-mcp-server"],
        "env": {
          "OPENAPI_MCP_HEADERS": "{\"Authorization\": \"Bearer ntn_****\", \"Notion-Version\": \"2022-06-28\" }"
        }
      },
      "settings": {}
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Using Docker:&lt;/h5&gt; 
&lt;p&gt;There are two options for running the MCP server with Docker:&lt;/p&gt; 
&lt;h6&gt;Option 1: Using the official Docker Hub image:&lt;/h6&gt; 
&lt;p&gt;Add the following to your &lt;code&gt;.cursor/mcp.json&lt;/code&gt; or &lt;code&gt;claude_desktop_config.json&lt;/code&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Using NOTION_TOKEN (recommended):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;{
  "mcpServers": {
    "notionApi": {
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e", "NOTION_TOKEN",
        "mcp/notion"
      ],
      "env": {
        "NOTION_TOKEN": "ntn_****"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Using OPENAPI_MCP_HEADERS (for advanced use cases):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;{
  "mcpServers": {
    "notionApi": {
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e", "OPENAPI_MCP_HEADERS",
        "mcp/notion"
      ],
      "env": {
        "OPENAPI_MCP_HEADERS": "{\"Authorization\":\"Bearer ntn_****\",\"Notion-Version\":\"2022-06-28\"}"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This approach:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Uses the official Docker Hub image&lt;/li&gt; 
 &lt;li&gt;Properly handles JSON escaping via environment variables&lt;/li&gt; 
 &lt;li&gt;Provides a more reliable configuration method&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h6&gt;Option 2: Building the Docker image locally:&lt;/h6&gt; 
&lt;p&gt;You can also build and run the Docker image locally. First, build the Docker image:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, add the following to your &lt;code&gt;.cursor/mcp.json&lt;/code&gt; or &lt;code&gt;claude_desktop_config.json&lt;/code&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Using NOTION_TOKEN (recommended):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;{
  "mcpServers": {
    "notionApi": {
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e",
        "NOTION_TOKEN=ntn_****",
        "notion-mcp-server"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Using OPENAPI_MCP_HEADERS (for advanced use cases):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;{
  "mcpServers": {
    "notionApi": {
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "-e",
        "OPENAPI_MCP_HEADERS={\"Authorization\": \"Bearer ntn_****\", \"Notion-Version\": \"2022-06-28\"}",
        "notion-mcp-server"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Don't forget to replace &lt;code&gt;ntn_****&lt;/code&gt; with your integration secret. Find it from your integration configuration tab:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/67b44536-5333-49fa-809c-59581bf5370a" alt="Copying your Integration token from the Configuration tab in the developer portal" /&gt;&lt;/p&gt; 
&lt;h4&gt;Installing via Smithery&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://smithery.ai/server/@makenotion/notion-mcp-server"&gt;&lt;img src="https://smithery.ai/badge/@makenotion/notion-mcp-server" alt="smithery badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To install Notion API Server for Claude Desktop automatically via &lt;a href="https://smithery.ai/server/@makenotion/notion-mcp-server"&gt;Smithery&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx -y @smithery/cli install @makenotion/notion-mcp-server --client claude
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Transport Options&lt;/h3&gt; 
&lt;p&gt;The Notion MCP Server supports two transport modes:&lt;/p&gt; 
&lt;h4&gt;STDIO Transport (Default)&lt;/h4&gt; 
&lt;p&gt;The default transport mode uses standard input/output for communication. This is the standard MCP transport used by most clients like Claude Desktop.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run with default stdio transport
npx @notionhq/notion-mcp-server

# Or explicitly specify stdio
npx @notionhq/notion-mcp-server --transport stdio
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Streamable HTTP Transport&lt;/h4&gt; 
&lt;p&gt;For web-based applications or clients that prefer HTTP communication, you can use the Streamable HTTP transport:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run with Streamable HTTP transport on port 3000 (default)
npx @notionhq/notion-mcp-server --transport http

# Run on a custom port
npx @notionhq/notion-mcp-server --transport http --port 8080

# Run with a custom authentication token
npx @notionhq/notion-mcp-server --transport http --auth-token "your-secret-token"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When using Streamable HTTP transport, the server will be available at &lt;code&gt;http://0.0.0.0:&amp;lt;port&amp;gt;/mcp&lt;/code&gt;.&lt;/p&gt; 
&lt;h5&gt;Authentication&lt;/h5&gt; 
&lt;p&gt;The Streamable HTTP transport requires bearer token authentication for security. You have three options:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Option 1: Auto-generated token (recommended for development)&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx @notionhq/notion-mcp-server --transport http
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The server will generate a secure random token and display it in the console:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Generated auth token: a1b2c3d4e5f6789abcdef0123456789abcdef0123456789abcdef0123456789ab
Use this token in the Authorization header: Bearer a1b2c3d4e5f6789abcdef0123456789abcdef0123456789abcdef0123456789ab
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Option 2: Custom token via command line (recommended for production)&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx @notionhq/notion-mcp-server --transport http --auth-token "your-secret-token"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Option 3: Custom token via environment variable (recommended for production)&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;AUTH_TOKEN="your-secret-token" npx @notionhq/notion-mcp-server --transport http
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The command line argument &lt;code&gt;--auth-token&lt;/code&gt; takes precedence over the &lt;code&gt;AUTH_TOKEN&lt;/code&gt; environment variable if both are provided.&lt;/p&gt; 
&lt;h5&gt;Making HTTP Requests&lt;/h5&gt; 
&lt;p&gt;All requests to the Streamable HTTP transport must include the bearer token in the Authorization header:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Example request
curl -H "Authorization: Bearer your-token-here" \
     -H "Content-Type: application/json" \
     -H "mcp-session-id: your-session-id" \
     -d '{"jsonrpc": "2.0", "method": "initialize", "params": {}, "id": 1}' \
     http://localhost:3000/mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Make sure to set either the &lt;code&gt;NOTION_TOKEN&lt;/code&gt; environment variable (recommended) or the &lt;code&gt;OPENAPI_MCP_HEADERS&lt;/code&gt; environment variable with your Notion integration token when using either transport mode.&lt;/p&gt; 
&lt;h3&gt;Examples&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Using the following instruction&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;Comment "Hello MCP" on page "Getting started"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;AI will correctly plan two API calls, &lt;code&gt;v1/search&lt;/code&gt; and &lt;code&gt;v1/comments&lt;/code&gt;, to achieve the task&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Similarly, the following instruction will result in a new page named "Notion MCP" added to parent page "Development"&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;Add a page titled "Notion MCP" to page "Development"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;You may also reference content ID directly&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;Get the content of page 1a6b35e6e67f802fa7e1d27686f017f2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Development&lt;/h3&gt; 
&lt;p&gt;Build&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Execute&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx -y --prefix /path/to/local/notion-mcp-server @notionhq/notion-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Publish&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm publish --access public
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>infiniflow/ragflow</title>
      <link>https://github.com/infiniflow/ragflow</link>
      <description>&lt;p&gt;RAGFlow is a leading open-source Retrieval-Augmented Generation (RAG) engine that fuses cutting-edge RAG with Agent capabilities to create a superior context layer for LLMs&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://demo.ragflow.io/"&gt; &lt;img src="https://raw.githubusercontent.com/infiniflow/ragflow/main/web/src/assets/logo-with-text.svg?sanitize=true" width="520" alt="ragflow logo" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README.md"&gt;&lt;img alt="README in English" src="https://img.shields.io/badge/English-DBEDFA" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_zh.md"&gt;&lt;img alt="简体中文版自述文件" src="https://img.shields.io/badge/简体中文-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_tzh.md"&gt;&lt;img alt="繁體版中文自述文件" src="https://img.shields.io/badge/繁體中文-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_ja.md"&gt;&lt;img alt="日本語のREADME" src="https://img.shields.io/badge/日本語-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_ko.md"&gt;&lt;img alt="한국어" src="https://img.shields.io/badge/한국어-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_id.md"&gt;&lt;img alt="Bahasa Indonesia" src="https://img.shields.io/badge/Bahasa Indonesia-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_pt_br.md"&gt;&lt;img alt="Português(Brasil)" src="https://img.shields.io/badge/Português(Brasil)-DFE0E5" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://x.com/intent/follow?screen_name=infiniflowai" target="_blank"&gt; &lt;img src="https://img.shields.io/twitter/follow/infiniflow?logo=X&amp;amp;color=%20%23f5f5f5" alt="follow on X(Twitter)" /&gt; &lt;/a&gt; &lt;a href="https://demo.ragflow.io" target="_blank"&gt; &lt;img alt="Static Badge" src="https://img.shields.io/badge/Online-Demo-4e6b99" /&gt; &lt;/a&gt; &lt;a href="https://hub.docker.com/r/infiniflow/ragflow" target="_blank"&gt; &lt;img src="https://img.shields.io/docker/pulls/infiniflow/ragflow?label=Docker%20Pulls&amp;amp;color=0db7ed&amp;amp;logo=docker&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="docker pull infiniflow/ragflow:v0.21.1" /&gt; &lt;/a&gt; &lt;a href="https://github.com/infiniflow/ragflow/releases/latest"&gt; &lt;img src="https://img.shields.io/github/v/release/infiniflow/ragflow?color=blue&amp;amp;label=Latest%20Release" alt="Latest Release" /&gt; &lt;/a&gt; &lt;a href="https://github.com/infiniflow/ragflow/raw/main/LICENSE"&gt; &lt;img height="21" src="https://img.shields.io/badge/License-Apache--2.0-ffffff?labelColor=d4eaf7&amp;amp;color=2e6cc4" alt="license" /&gt; &lt;/a&gt; &lt;a href="https://deepwiki.com/infiniflow/ragflow"&gt; &lt;img alt="Ask DeepWiki" src="https://deepwiki.com/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://ragflow.io/docs/dev/"&gt;Document&lt;/a&gt; | &lt;a href="https://github.com/infiniflow/ragflow/issues/4214"&gt;Roadmap&lt;/a&gt; | &lt;a href="https://twitter.com/infiniflowai"&gt;Twitter&lt;/a&gt; | &lt;a href="https://discord.gg/NjYzJD3GM3"&gt;Discord&lt;/a&gt; | &lt;a href="https://demo.ragflow.io"&gt;Demo&lt;/a&gt; &lt;/h4&gt; 
&lt;div align="center" style="margin-top:20px;margin-bottom:20px;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/infiniflow/ragflow-docs/refs/heads/image/image/ragflow-octoverse.png" width="1200" /&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://trendshift.io/repositories/9064" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/9064" alt="infiniflow%2Fragflow | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;📕 Table of Contents&lt;/b&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;💡 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-what-is-ragflow"&gt;What is RAGFlow?&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🎮 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-demo"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;📌 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-latest-updates"&gt;Latest Updates&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🌟 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-key-features"&gt;Key Features&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🔎 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-system-architecture"&gt;System Architecture&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🎬 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-get-started"&gt;Get Started&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🔧 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-configurations"&gt;Configurations&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🔧 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-build-a-docker-image-without-embedding-models"&gt;Build a docker image without embedding models&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🔧 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-build-a-docker-image-including-embedding-models"&gt;Build a docker image including embedding models&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🔨 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-launch-service-from-source-for-development"&gt;Launch service from source for development&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;📚 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;📜 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🏄 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-community"&gt;Community&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🙌 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;💡 What is RAGFlow?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://ragflow.io/"&gt;RAGFlow&lt;/a&gt; is a leading open-source Retrieval-Augmented Generation (RAG) engine that fuses cutting-edge RAG with Agent capabilities to create a superior context layer for LLMs. It offers a streamlined RAG workflow adaptable to enterprises of any scale. Powered by a converged context engine and pre-built agent templates, RAGFlow enables developers to transform complex data into high-fidelity, production-ready AI systems with exceptional efficiency and precision.&lt;/p&gt; 
&lt;h2&gt;🎮 Demo&lt;/h2&gt; 
&lt;p&gt;Try our demo at &lt;a href="https://demo.ragflow.io"&gt;https://demo.ragflow.io&lt;/a&gt;.&lt;/p&gt; 
&lt;div align="center" style="margin-top:20px;margin-bottom:20px;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/infiniflow/ragflow-docs/refs/heads/image/image/chunking.gif" width="1200" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/infiniflow/ragflow-docs/refs/heads/image/image/agentic-dark.gif" width="1200" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;🔥 Latest Updates&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;2025-10-23 Supports MinerU &amp;amp; Docling as document parsing methods.&lt;/li&gt; 
 &lt;li&gt;2025-10-15 Supports orchestrable ingestion pipeline.&lt;/li&gt; 
 &lt;li&gt;2025-08-08 Supports OpenAI's latest GPT-5 series models.&lt;/li&gt; 
 &lt;li&gt;2025-08-01 Supports agentic workflow and MCP.&lt;/li&gt; 
 &lt;li&gt;2025-05-23 Adds a Python/JavaScript code executor component to Agent.&lt;/li&gt; 
 &lt;li&gt;2025-05-05 Supports cross-language query.&lt;/li&gt; 
 &lt;li&gt;2025-03-19 Supports using a multi-modal model to make sense of images within PDF or DOCX files.&lt;/li&gt; 
 &lt;li&gt;2025-02-28 Combined with Internet search (Tavily), supports reasoning like Deep Research for any LLMs.&lt;/li&gt; 
 &lt;li&gt;2024-12-18 Upgrades Document Layout Analysis model in DeepDoc.&lt;/li&gt; 
 &lt;li&gt;2024-08-22 Support text to SQL statements through RAG.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎉 Stay Tuned&lt;/h2&gt; 
&lt;p&gt;⭐️ Star our repository to stay up-to-date with exciting new features and improvements! Get instant notifications for new releases! 🌟&lt;/p&gt; 
&lt;div align="center" style="margin-top:20px;margin-bottom:20px;"&gt; 
 &lt;img src="https://github.com/user-attachments/assets/18c9707e-b8aa-4caf-a154-037089c105ba" width="1200" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;🌟 Key Features&lt;/h2&gt; 
&lt;h3&gt;🍭 &lt;strong&gt;"Quality in, quality out"&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/deepdoc/README.md"&gt;Deep document understanding&lt;/a&gt;-based knowledge extraction from unstructured data with complicated formats.&lt;/li&gt; 
 &lt;li&gt;Finds "needle in a data haystack" of literally unlimited tokens.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🍱 &lt;strong&gt;Template-based chunking&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Intelligent and explainable.&lt;/li&gt; 
 &lt;li&gt;Plenty of template options to choose from.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🌱 &lt;strong&gt;Grounded citations with reduced hallucinations&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visualization of text chunking to allow human intervention.&lt;/li&gt; 
 &lt;li&gt;Quick view of the key references and traceable citations to support grounded answers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🍔 &lt;strong&gt;Compatibility with heterogeneous data sources&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports Word, slides, excel, txt, images, scanned copies, structured data, web pages, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🛀 &lt;strong&gt;Automated and effortless RAG workflow&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Streamlined RAG orchestration catered to both personal and large businesses.&lt;/li&gt; 
 &lt;li&gt;Configurable LLMs as well as embedding models.&lt;/li&gt; 
 &lt;li&gt;Multiple recall paired with fused re-ranking.&lt;/li&gt; 
 &lt;li&gt;Intuitive APIs for seamless integration with business.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔎 System Architecture&lt;/h2&gt; 
&lt;div align="center" style="margin-top:20px;margin-bottom:20px;"&gt; 
 &lt;img src="https://github.com/user-attachments/assets/31b0dd6f-ca4f-445a-9457-70cb44a381b2" width="1000" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;🎬 Get Started&lt;/h2&gt; 
&lt;h3&gt;📝 Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;CPU &amp;gt;= 4 cores&lt;/li&gt; 
 &lt;li&gt;RAM &amp;gt;= 16 GB&lt;/li&gt; 
 &lt;li&gt;Disk &amp;gt;= 50 GB&lt;/li&gt; 
 &lt;li&gt;Docker &amp;gt;= 24.0.0 &amp;amp; Docker Compose &amp;gt;= v2.26.1&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gvisor.dev/docs/user_guide/install/"&gt;gVisor&lt;/a&gt;: Required only if you intend to use the code executor (sandbox) feature of RAGFlow.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] If you have not installed Docker on your local machine (Windows, Mac, or Linux), see &lt;a href="https://docs.docker.com/engine/install/"&gt;Install Docker Engine&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;🚀 Start up the server&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Ensure &lt;code&gt;vm.max_map_count&lt;/code&gt; &amp;gt;= 262144:&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;To check the value of &lt;code&gt;vm.max_map_count&lt;/code&gt;:&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;$ sysctl vm.max_map_count
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;Reset &lt;code&gt;vm.max_map_count&lt;/code&gt; to a value at least 262144 if it is not.&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;# In this case, we set it to 262144:
$ sudo sysctl -w vm.max_map_count=262144
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;This change will be reset after a system reboot. To ensure your change remains permanent, add or update the &lt;code&gt;vm.max_map_count&lt;/code&gt; value in &lt;strong&gt;/etc/sysctl.conf&lt;/strong&gt; accordingly:&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;vm.max_map_count=262144
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the repo:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ git clone https://github.com/infiniflow/ragflow.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start up the server using the pre-built Docker images:&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] All Docker images are built for x86 platforms. We don't currently offer Docker images for ARM64. If you are on an ARM64 platform, follow &lt;a href="https://ragflow.io/docs/dev/build_docker_image"&gt;this guide&lt;/a&gt; to build a Docker image compatible with your system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The command below downloads the &lt;code&gt;v0.21.1-slim&lt;/code&gt; edition of the RAGFlow Docker image. See the following table for descriptions of different RAGFlow editions. To download a RAGFlow edition different from &lt;code&gt;v0.21.1-slim&lt;/code&gt;, update the &lt;code&gt;RAGFLOW_IMAGE&lt;/code&gt; variable accordingly in &lt;strong&gt;docker/.env&lt;/strong&gt; before using &lt;code&gt;docker compose&lt;/code&gt; to start the server.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;   $ cd ragflow/docker
   # Use CPU for embedding and DeepDoc tasks:
   $ docker compose -f docker-compose.yml up -d

   # To use GPU to accelerate embedding and DeepDoc tasks:
   # sed -i '1i DEVICE=gpu' .env
   # docker compose -f docker-compose.yml up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;RAGFlow image tag&lt;/th&gt; 
   &lt;th&gt;Image size (GB)&lt;/th&gt; 
   &lt;th&gt;Has embedding models?&lt;/th&gt; 
   &lt;th&gt;Stable?&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;v0.21.1&lt;/td&gt; 
   &lt;td&gt;≈9&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;Stable release&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;v0.21.1-slim&lt;/td&gt; 
   &lt;td&gt;≈2&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;Stable release&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nightly&lt;/td&gt; 
   &lt;td&gt;≈2&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;Unstable&lt;/em&gt; nightly build&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: Starting with &lt;code&gt;v0.22.0&lt;/code&gt;, we ship only the slim edition and no longer append the &lt;strong&gt;-slim&lt;/strong&gt; suffix to the image tag.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt; &lt;p&gt;Check the server status after having the server up and running:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ docker logs -f docker-ragflow-cpu-1
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;The following output confirms a successful launch of the system:&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;
      ____   ___    ______ ______ __
     / __ \ /   |  / ____// ____// /____  _      __
    / /_/ // /| | / / __ / /_   / // __ \| | /| / /
   / _, _// ___ |/ /_/ // __/  / // /_/ /| |/ |/ /
  /_/ |_|/_/  |_|\____//_/    /_/ \____/ |__/|__/

 * Running on all addresses (0.0.0.0)
&lt;/code&gt;&lt;/pre&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;If you skip this confirmation step and directly log in to RAGFlow, your browser may prompt a &lt;code&gt;network anormal&lt;/code&gt; error because, at that moment, your RAGFlow may not be fully initialized.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In your web browser, enter the IP address of your server and log in to RAGFlow.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;With the default settings, you only need to enter &lt;code&gt;http://IP_OF_YOUR_MACHINE&lt;/code&gt; (&lt;strong&gt;sans&lt;/strong&gt; port number) as the default HTTP serving port &lt;code&gt;80&lt;/code&gt; can be omitted when using the default configurations.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template"&gt;service_conf.yaml.template&lt;/a&gt;, select the desired LLM factory in &lt;code&gt;user_default_llm&lt;/code&gt; and update the &lt;code&gt;API_KEY&lt;/code&gt; field with the corresponding API key.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;See &lt;a href="https://ragflow.io/docs/dev/llm_api_key_setup"&gt;llm_api_key_setup&lt;/a&gt; for more information.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;p&gt;&lt;em&gt;The show is on!&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;🔧 Configurations&lt;/h2&gt; 
&lt;p&gt;When it comes to system configurations, you will need to manage the following files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/.env"&gt;.env&lt;/a&gt;: Keeps the fundamental setups for the system, such as &lt;code&gt;SVR_HTTP_PORT&lt;/code&gt;, &lt;code&gt;MYSQL_PASSWORD&lt;/code&gt;, and &lt;code&gt;MINIO_PASSWORD&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template"&gt;service_conf.yaml.template&lt;/a&gt;: Configures the back-end services. The environment variables in this file will be automatically populated when the Docker container starts. Any environment variables set within the Docker container will be available for use, allowing you to customize service behavior based on the deployment environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;: The system relies on &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt; to start up.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/README.md"&gt;./docker/README&lt;/a&gt; file provides a detailed description of the environment settings and service configurations which can be used as &lt;code&gt;${ENV_VARS}&lt;/code&gt; in the &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template"&gt;service_conf.yaml.template&lt;/a&gt; file.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To update the default HTTP serving port (80), go to &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt; and change &lt;code&gt;80:80&lt;/code&gt; to &lt;code&gt;&amp;lt;YOUR_SERVING_PORT&amp;gt;:80&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Updates to the above configurations require a reboot of all containers to take effect:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;$ docker compose -f docker-compose.yml up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Switch doc engine from Elasticsearch to Infinity&lt;/h3&gt; 
&lt;p&gt;RAGFlow uses Elasticsearch by default for storing full text and vectors. To switch to &lt;a href="https://github.com/infiniflow/infinity/"&gt;Infinity&lt;/a&gt;, follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Stop all running containers:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ docker compose -f docker/docker-compose.yml down -v
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] &lt;code&gt;-v&lt;/code&gt; will delete the docker container volumes, and the existing data will be cleared.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt; &lt;p&gt;Set &lt;code&gt;DOC_ENGINE&lt;/code&gt; in &lt;strong&gt;docker/.env&lt;/strong&gt; to &lt;code&gt;infinity&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start the containers:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ docker compose -f docker-compose.yml up -d
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Switching to Infinity on a Linux/arm64 machine is not yet officially supported.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🔧 Build a Docker image without embedding models&lt;/h2&gt; 
&lt;p&gt;This image is approximately 2 GB in size and relies on external LLM and embedding services.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/infiniflow/ragflow.git
cd ragflow/
docker build --platform linux/amd64 -f Dockerfile -t infiniflow/ragflow:nightly .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🔨 Launch service from source for development&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;code&gt;uv&lt;/code&gt; and &lt;code&gt;pre-commit&lt;/code&gt;, or skip this step if they are already installed:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pipx install uv pre-commit
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the source code and install Python dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/infiniflow/ragflow.git
cd ragflow/
uv sync --python 3.10 # install RAGFlow dependent python modules
uv run download_deps.py
pre-commit install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch the dependent services (MinIO, Elasticsearch, Redis, and MySQL) using Docker Compose:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose -f docker/docker-compose-base.yml up -d
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Add the following line to &lt;code&gt;/etc/hosts&lt;/code&gt; to resolve all hosts specified in &lt;strong&gt;docker/.env&lt;/strong&gt; to &lt;code&gt;127.0.0.1&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;127.0.0.1       es01 infinity mysql minio redis sandbox-executor-manager
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you cannot access HuggingFace, set the &lt;code&gt;HF_ENDPOINT&lt;/code&gt; environment variable to use a mirror site:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;export HF_ENDPOINT=https://hf-mirror.com
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If your operating system does not have jemalloc, please install it as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# Ubuntu
sudo apt-get install libjemalloc-dev
# CentOS
sudo yum install jemalloc
# OpenSUSE
sudo zypper install jemalloc
# macOS
sudo brew install jemalloc
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch backend service:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;source .venv/bin/activate
export PYTHONPATH=$(pwd)
bash docker/launch_backend_service.sh
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install frontend dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;cd web
npm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch frontend service:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;The following output confirms a successful launch of the system:&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/0daf462c-a24d-4496-a66f-92533534e187" alt="" /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Stop RAGFlow front-end and back-end service after development is complete:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pkill -f "ragflow_server.py|task_executor.py"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/"&gt;Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/configurations"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/release_notes"&gt;Release notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/category/guides"&gt;User guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/category/developers"&gt;Developer guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/category/references"&gt;References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/faq"&gt;FAQs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📜 Roadmap&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/infiniflow/ragflow/issues/4214"&gt;RAGFlow Roadmap 2025&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🏄 Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/NjYzJD3GM3"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/infiniflowai"&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orgs/infiniflow/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🙌 Contributing&lt;/h2&gt; 
&lt;p&gt;RAGFlow flourishes via open-source collaboration. In this spirit, we embrace diverse contributions from the community. If you would like to be a part, review our &lt;a href="https://ragflow.io/docs/dev/contributing"&gt;Contribution Guidelines&lt;/a&gt; first.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mattermost/mattermost</title>
      <link>https://github.com/mattermost/mattermost</link>
      <description>&lt;p&gt;Mattermost is an open source platform for secure collaboration across the entire software development lifecycle..&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href="https://mattermost.com"&gt;&lt;img src="https://user-images.githubusercontent.com/7205829/137170381-fe86eef0-bccc-4fdd-8e92-b258884ebdd7.png" alt="Mattermost logo" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://mattermost.com"&gt;Mattermost&lt;/a&gt; is an open core, self-hosted collaboration platform that offers chat, workflow automation, voice calling, screen sharing, and AI integration. This repo is the primary source for core development on the Mattermost platform; it's written in Go and React, runs as a single Linux binary, and relies on PostgreSQL. A new compiled version is released under an MIT license every month on the 16th.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://mattermost.com/deploy/?utm_source=github-mattermost-server-readme"&gt;Deploy Mattermost on-premises&lt;/a&gt;, or &lt;a href="https://mattermost.com/sign-up/?utm_source=github-mattermost-server-readme"&gt;try it for free in the cloud&lt;/a&gt;.&lt;/p&gt; 
&lt;img width="1006" alt="mattermost user interface" src="https://user-images.githubusercontent.com/7205829/136107976-7a894c9e-290a-490d-8501-e5fdbfc3785a.png" /&gt; 
&lt;p&gt;Learn more about the following use cases with Mattermost:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://mattermost.com/solutions/use-cases/devops/?utm_source=github-mattermost-server-readme"&gt;DevSecOps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mattermost.com/solutions/use-cases/incident-resolution/?utm_source=github-mattermost-server-readme"&gt;Incident Resolution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mattermost.com/solutions/use-cases/it-service-desk/?utm_source=github-mattermost-server-readme"&gt;IT Service Desk&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Other useful resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/guides/deployment.html"&gt;Download and Install Mattermost&lt;/a&gt; - Install, setup, and configure your own Mattermost instance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/"&gt;Product documentation&lt;/a&gt; - Learn how to run a Mattermost instance and take advantage of all the features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.mattermost.com/"&gt;Developer documentation&lt;/a&gt; - Contribute code to Mattermost or build an integration via APIs, Webhooks, slash commands, Apps, and plugins.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Table of contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/#install-mattermost"&gt;Install Mattermost&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/#native-mobile-and-desktop-apps"&gt;Native mobile and desktop apps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/#get-security-bulletins"&gt;Get security bulletins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/#get-involved"&gt;Get involved&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/#learn-more"&gt;Learn more&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/#get-the-latest-news"&gt;Get the latest news&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install Mattermost&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/guides/deployment.html"&gt;Download and Install Mattermost Self-Hosted&lt;/a&gt; - Deploy a Mattermost Self-hosted instance in minutes via Docker, Ubuntu, or tar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mattermost.com/sign-up/?utm_source=github-mattermost-server-readme"&gt;Get started in the cloud&lt;/a&gt; to try Mattermost today.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.mattermost.com/contribute/server/developer-setup"&gt;Developer machine setup&lt;/a&gt; - Follow this guide if you want to write code for Mattermost.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Other install guides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/install/install-docker.html"&gt;Deploy Mattermost on Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/install/installing-mattermost-omnibus.html"&gt;Mattermost Omnibus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/install/install-tar.html"&gt;Install Mattermost from Tar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/install/installing-ubuntu-2004-LTS.html"&gt;Ubuntu 20.04 LTS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/install/install-kubernetes.html"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/install/install-kubernetes.html#installing-the-operators-via-helm"&gt;Helm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/install/install-debian.html"&gt;Debian Buster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/install/install-rhel-8.html"&gt;RHEL 8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/guides/deployment.html"&gt;More server install guides&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Native mobile and desktop apps&lt;/h2&gt; 
&lt;p&gt;In addition to the web interface, you can also download Mattermost clients for &lt;a href="https://mattermost.com/pl/android-app/"&gt;Android&lt;/a&gt;, &lt;a href="https://mattermost.com/pl/ios-app/"&gt;iOS&lt;/a&gt;, &lt;a href="https://docs.mattermost.com/install/desktop-app-install.html#windows-10-windows-8-1"&gt;Windows PC&lt;/a&gt;, &lt;a href="https://docs.mattermost.com/install/desktop-app-install.html#macos-10-9"&gt;macOS&lt;/a&gt;, and &lt;a href="https://docs.mattermost.com/install/desktop-app-install.html#linux"&gt;Linux&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://mattermost.com/pl/android-app/"&gt;&lt;img src="https://user-images.githubusercontent.com/30978331/272826427-6200c98f-7319-42c3-86d4-0b33ae99e01a.png" alt="Get Mattermost on Google Play" height="50px" /&gt;&lt;/a&gt; &lt;a href="https://itunes.apple.com/us/app/mattermost/id1257222717?mt=8"&gt;&lt;img src="https://developer.apple.com/assets/elements/badges/download-on-the-app-store.svg?sanitize=true" alt="Get Mattermost on the App Store" height="50px" /&gt;&lt;/a&gt; &lt;a href="https://docs.mattermost.com/install/desktop.html#windows-10-windows-8-1-windows-7"&gt;&lt;img src="https://user-images.githubusercontent.com/33878967/33095357-39cab8d2-ceb8-11e7-89a6-67dccc571ca3.png" alt="Get Mattermost on Windows PC" /&gt;&lt;/a&gt; &lt;a href="https://docs.mattermost.com/install/desktop.html#macos-10-9"&gt;&lt;img src="https://user-images.githubusercontent.com/33878967/33095355-39a36f2a-ceb8-11e7-9b33-73d4f6d5d6c1.png" alt="Get Mattermost on Mac OSX" /&gt;&lt;/a&gt; &lt;a href="https://docs.mattermost.com/install/desktop.html#linux"&gt;&lt;img src="https://user-images.githubusercontent.com/33878967/33095354-3990e256-ceb8-11e7-965d-b00a16e578de.png" alt="Get Mattermost on Linux" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Get security bulletins&lt;/h2&gt; 
&lt;p&gt;Receive notifications of critical security updates. The sophistication of online attackers is perpetually increasing. If you're deploying Mattermost it's highly recommended you subscribe to the Mattermost Security Bulletin mailing list for updates on critical security releases.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://mattermost.com/security-updates/#sign-up"&gt;Subscribe here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Get involved&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://handbook.mattermost.com/contributors/contributors/ways-to-contribute"&gt;Contribute to Mattermost&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattermost/mattermost-server/issues?page=1&amp;amp;q=is%3Aissue+is%3Aopen+%22Help+Wanted%22&amp;amp;utf8=%E2%9C%93"&gt;Find "Help Wanted" projects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://community.mattermost.com/signup_user_complete/?id=f1924a8db44ff3bb41c96424cdc20676"&gt;Join Developer Discussion on a Mattermost server for contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/guides/get-help.html"&gt;Get Help With Mattermost&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Learn more&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://api.mattermost.com/"&gt;API options - webhooks, slash commands, drivers, and web service&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mattermost.com/customers/"&gt;See who's using Mattermost&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mattermost.com/marketplace/"&gt;Browse over 700 Mattermost integrations&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/LICENSE.txt"&gt;LICENSE file&lt;/a&gt; for license rights and limitations.&lt;/p&gt; 
&lt;h2&gt;Get the latest news&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;X&lt;/strong&gt; - Follow &lt;a href="https://twitter.com/mattermost"&gt;Mattermost on X, formerly Twitter&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Blog&lt;/strong&gt; - Get the latest updates from the &lt;a href="https://mattermost.com/blog/"&gt;Mattermost blog&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Facebook&lt;/strong&gt; - Follow &lt;a href="https://www.facebook.com/MattermostHQ"&gt;Mattermost on Facebook&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LinkedIn&lt;/strong&gt; - Follow &lt;a href="https://www.linkedin.com/company/mattermost/"&gt;Mattermost on LinkedIn&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Email&lt;/strong&gt; - Subscribe to our &lt;a href="https://mattermost.us11.list-manage.com/subscribe?u=6cdba22349ae374e188e7ab8e&amp;amp;id=2add1c8034"&gt;newsletter&lt;/a&gt; (1 or 2 per month).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mattermost&lt;/strong&gt; - Join the ~contributors channel on &lt;a href="https://community.mattermost.com"&gt;the Mattermost Community Server&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;IRC&lt;/strong&gt; - Join the #matterbridge channel on &lt;a href="https://freenode.net/"&gt;Freenode&lt;/a&gt; (thanks to &lt;a href="https://github.com/42wim/matterircd"&gt;matterircd&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;YouTube&lt;/strong&gt; - Subscribe to &lt;a href="https://www.youtube.com/@MattermostHQ"&gt;Mattermost&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/mattermost/mattermost"&gt;&lt;img src="https://img.shields.io/badge/Contribute%20with-Gitpod-908a85?logo=gitpod" alt="Small Image" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please see &lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;. &lt;a href="https://community.mattermost.com/signup_user_complete/?id=codoy5s743rq5mk18i7u5ksz7e"&gt;Join the Mattermost Contributors server&lt;/a&gt; to join community discussions about contributions, development, and more.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nashaofu/shell360</title>
      <link>https://github.com/nashaofu/shell360</link>
      <description>&lt;p&gt;Shell360 is a cross-platform SSH and SFTP client.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Shell360&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/nashaofu/shell360/master/resources/screenshots/gallary.jpg" alt="gallary" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;span&gt;English&lt;/span&gt; | &lt;a href="https://raw.githubusercontent.com/nashaofu/shell360/master/README-zh_cn.md"&gt;简体中文&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; Shell360 is a cross-platform SSH &amp;amp; SFTP client supporting Windows, macOS, Linux, Android, and iOS. Whether it's remote development, server management, or secure file transfer, Shell360 provides you with a consistent, smooth, and secure user experience. &lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p&gt;Download the latest version of Shell360 for your platform:&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://apps.apple.com/app/shell360/id6502880351"&gt; &lt;img src="https://raw.githubusercontent.com/nashaofu/shell360/master/resources/app-store.svg?sanitize=true" width="123" alt="Download on the App Store" /&gt; &lt;/a&gt; &lt;a href="https://play.google.com/store/apps/details?id=com.nashaofu.shell360"&gt; &lt;img src="https://raw.githubusercontent.com/nashaofu/shell360/master/resources/GooglePlay.png" width="140" alt="Download on Google Play" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/nashaofu/shell360/releases"&gt; &lt;img src="https://img.shields.io/badge/Download%20for%20Windows-blue?style=for-the-badge" alt="Download for Windows" /&gt; &lt;/a&gt; &lt;a href="https://github.com/nashaofu/shell360/releases"&gt; &lt;img src="https://img.shields.io/badge/Download%20for%20macOS-blue?style=for-the-badge" alt="Download for macOS" /&gt; &lt;/a&gt; &lt;a href="https://github.com/nashaofu/shell360/releases"&gt; &lt;img src="https://img.shields.io/badge/Download%20for%20Linux-blue?style=for-the-badge" alt="Download for Linux" /&gt; &lt;/a&gt; &lt;a href="https://github.com/nashaofu/shell360/releases"&gt; &lt;img src="https://img.shields.io/badge/Download%20for%20Android-blue?style=for-the-badge" alt="Download for Android" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Join our &lt;a href="https://testflight.apple.com/join/teqJZCRm"&gt;TestFlight&lt;/a&gt; Or &lt;a href="https://play.google.com/apps/testing/com.nashaofu.shell360"&gt;Google Play&lt;/a&gt; testing program for early access to new features.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;🔐 Secure Connection&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Advanced SSH client with support for password, public key, and certificate authentication methods&lt;/li&gt; 
 &lt;li&gt;Support for ED25519, RSA, and ECDSA SSH keys&lt;/li&gt; 
 &lt;li&gt;Application data encryption for enhanced security&lt;/li&gt; 
 &lt;li&gt;Support for jump host connection, convenient cross-server management&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📁 File Management&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Powerful SFTP client for file transfer&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔄 Port Forwarding&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Local port forwarding&lt;/li&gt; 
 &lt;li&gt;Remote port forwarding&lt;/li&gt; 
 &lt;li&gt;Dynamic port forwarding (SOCKS proxy)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎨 Customizable Themes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Light and dark theme support&lt;/li&gt; 
 &lt;li&gt;6 built-in terminal themes&lt;/li&gt; 
 &lt;li&gt;Support for custom terminal fonts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💻 Cross-Platform Compatibility&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Consistent experience across Windows, macOS, Linux, Android, and iOS&lt;/li&gt; 
 &lt;li&gt;Support for importing/exporting app configurations for easy synchronization between devices&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Technology Stack&lt;/h2&gt; 
&lt;p&gt;Shell360 is built with modern technologies:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Frontend&lt;/strong&gt;: TypeScript, React&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backend&lt;/strong&gt;: Rust&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Framework&lt;/strong&gt;: Tauri (for cross-platform support)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SSH Implementation&lt;/strong&gt;: Custom Rust SSH plugin&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data Storage&lt;/strong&gt;: Encrypted local storage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/nashaofu/shell360/master/resources/screenshots/mobile-gallary.jpg" alt="Mobile Gallery" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/nashaofu/shell360/master/resources/screenshots/pad-gallary.jpg" alt="Pad Gallery" /&gt;&lt;/p&gt; 
&lt;h3&gt;Terminal Themes&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/nashaofu/shell360/master/resources/screenshots/terminal-themes.jpg" alt="Terminal Themes" /&gt;&lt;/p&gt; 
&lt;h2&gt;Privacy Policy&lt;/h2&gt; 
&lt;p&gt;Your privacy is important to us. Please review our &lt;a href="https://raw.githubusercontent.com/nashaofu/shell360/master/docs/Privacy-Policy.md"&gt;Privacy Policy&lt;/a&gt; to understand how we handle your data.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from the community! Please read our &lt;a href="https://raw.githubusercontent.com/nashaofu/shell360/master/docs/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the terms of the GNU General Public License v3.0 (GPLv3). See the &lt;a href="https://raw.githubusercontent.com/nashaofu/shell360/master/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;p&gt;SPDX-License-Identifier: GPL-3.0-or-later&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>react-native-maps/react-native-maps</title>
      <link>https://github.com/react-native-maps/react-native-maps</link>
      <description>&lt;p&gt;React Native Mapview component for iOS + Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;react-native-maps &lt;a href="https://www.npmjs.com/package/react-native-maps"&gt;&lt;img src="https://img.shields.io/npm/v/react-native-maps.svg?style=flat" alt="npm version" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;React Native Map components for iOS + Android&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project is being maintained by a small group of people, and any help with issues and pull requests are always appreciated. If you are able and willing to contribute, please read the &lt;a href="https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/CONTRIBUTING.md"&gt;guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/installation.md"&gt;Installation Instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/examples-setup.md"&gt;Setup Instructions for the Included Example Project&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;h2&gt;React Native Compatibility&lt;/h2&gt; 
&lt;h3&gt;Version Requirements:&lt;/h3&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;h3&gt;Fabric (New Architecture)&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
   &lt;th&gt;React Native Requirement&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1.26.1+&lt;/td&gt; 
   &lt;td&gt;&amp;gt;= 0.81.1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1.26.0 and below&lt;/td&gt; 
   &lt;td&gt;&amp;gt;= 0.76&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Old Architecture&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
   &lt;th&gt;React Native Requirement&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1.14.0 - 1.20.1&lt;/td&gt; 
   &lt;td&gt;&amp;gt;= 0.74&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;lt; 1.14.0&lt;/td&gt; 
   &lt;td&gt;&amp;gt;= 0.64.3&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Component API&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/mapview.md"&gt;&lt;code&gt;&amp;lt;MapView /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/marker.md"&gt;&lt;code&gt;&amp;lt;Marker /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/callout.md"&gt;&lt;code&gt;&amp;lt;Callout /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/polygon.md"&gt;&lt;code&gt;&amp;lt;Polygon /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/polyline.md"&gt;&lt;code&gt;&amp;lt;Polyline /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/circle.md"&gt;&lt;code&gt;&amp;lt;Circle /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/overlay.md"&gt;&lt;code&gt;&amp;lt;Overlay /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/heatmap.md"&gt;&lt;code&gt;&amp;lt;Heatmap /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/geojson.md"&gt;&lt;code&gt;&amp;lt;Geojson /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;General Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import MapView from 'react-native-maps';
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;var MapView = require('react-native-maps');
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This MapView component is built so that features on the map (such as Markers, Polygons, etc.) are specified as children of the MapView itself. This provides an intuitive and react-like API for declaratively controlling features on the map.&lt;/p&gt; 
&lt;h3&gt;Rendering a Map with an initial region&lt;/h3&gt; 
&lt;h2&gt;MapView&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;&amp;lt;MapView
  initialRegion={{
    latitude: 37.78825,
    longitude: -122.4324,
    latitudeDelta: 0.0922,
    longitudeDelta: 0.0421,
  }}
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using a MapView while controlling the region as state&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;getInitialState() {
  return {
    region: {
      latitude: 37.78825,
      longitude: -122.4324,
      latitudeDelta: 0.0922,
      longitudeDelta: 0.0421,
    },
  };
}

onRegionChange(region) {
  this.setState({ region });
}

render() {
  return (
    &amp;lt;MapView
      region={this.state.region}
      onRegionChange={this.onRegionChange}
    /&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Rendering a list of markers on a map&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import {Marker} from 'react-native-maps';

&amp;lt;MapView region={this.state.region} onRegionChange={this.onRegionChange}&amp;gt;
  {this.state.markers.map((marker, index) =&amp;gt; (
    &amp;lt;Marker
      key={index}
      coordinate={marker.latlng}
      title={marker.title}
      description={marker.description}
    /&amp;gt;
  ))}
&amp;lt;/MapView&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Rendering a Marker with a custom image&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;You need to generate an &lt;code&gt;png&lt;/code&gt; image with various resolution (lets call them &lt;code&gt;custom_pin&lt;/code&gt;) - for more information go to &lt;a href="https://developer.android.com/studio/write/resource-manager#import"&gt;Android&lt;/a&gt;, &lt;a href="https://developer.apple.com/documentation/xcode/adding-images-to-your-xcode-project"&gt;iOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;put all images in Android drawables and iOS assets dir&lt;/li&gt; 
 &lt;li&gt;Now you can use the following code:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;&amp;lt;Marker
  coordinate={{latitude: latitude, longitude: longitude}}
  image={{uri: 'custom_pin'}}
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: You can also pass the image binary data like &lt;code&gt;image={require('custom_pin.png')}&lt;/code&gt;, but this will not scale good with the different screen sizes.&lt;/p&gt; 
&lt;h3&gt;Rendering a Marker with a custom view&lt;/h3&gt; 
&lt;p&gt;Note: This has performance implications, if you wish for a simpler solution go with a custom image (save your self the headache)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;&amp;lt;Marker coordinate={{latitude: latitude, longitude: longitude}}&amp;gt;
  &amp;lt;MyCustomMarkerView {...marker} /&amp;gt;
&amp;lt;/Marker&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Rendering a custom Marker with a custom Callout&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import {Callout} from 'react-native-maps';

&amp;lt;Marker coordinate={marker.latlng}&amp;gt;
  &amp;lt;MyCustomMarkerView {...marker} /&amp;gt;
  &amp;lt;Callout&amp;gt;
    &amp;lt;MyCustomCalloutView {...marker} /&amp;gt;
  &amp;lt;/Callout&amp;gt;
&amp;lt;/Marker&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Draggable Markers&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;&amp;lt;MapView initialRegion={...}&amp;gt;
  &amp;lt;Marker draggable
    coordinate={this.state.x}
    onDragEnd={(e) =&amp;gt; this.setState({ x: e.nativeEvent.coordinate })}
  /&amp;gt;
&amp;lt;/MapView&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using a custom Tile Overlay&lt;/h3&gt; 
&lt;h4&gt;Tile Overlay using tile server&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import {UrlTile} from 'react-native-maps';

&amp;lt;MapView region={this.state.region} onRegionChange={this.onRegionChange}&amp;gt;
  &amp;lt;UrlTile
    /**
     * The url template of the tile server. The patterns {x} {y} {z} will be replaced at runtime
     * For example, http://c.tile.openstreetmap.org/{z}/{x}/{y}.png
     */
    urlTemplate={this.state.urlTemplate}
    /**
     * The maximum zoom level for this tile overlay. Corresponds to the maximumZ setting in
     * MKTileOverlay. iOS only.
     */
    maximumZ={19}
    /**
     * flipY allows tiles with inverted y coordinates (origin at bottom left of map)
     * to be used. Its default value is false.
     */
    flipY={false}
  /&amp;gt;
&amp;lt;/MapView&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Android: add the following line in your AndroidManifest.xml&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;uses-permission android:name="android.permission.INTERNET" /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For IOS: configure &lt;a href="https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW33"&gt;App Transport Security&lt;/a&gt; in your app&lt;/p&gt; 
&lt;h4&gt;Tile Overlay using local tiles&lt;/h4&gt; 
&lt;p&gt;Tiles can be stored locally within device using xyz tiling scheme and displayed as tile overlay as well. This is usefull especially for offline map usage when tiles are available for selected map region within device storage.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import {LocalTile} from 'react-native-maps';

&amp;lt;MapView region={this.state.region} onRegionChange={this.onRegionChange}&amp;gt;
  &amp;lt;LocalTile
    /**
     * The path template of the locally stored tiles. The patterns {x} {y} {z} will be replaced at runtime
     * For example, /storage/emulated/0/mytiles/{z}/{x}/{y}.png
     */
    pathTemplate={this.state.pathTemplate}
    /**
     * The size of provided local tiles (usually 256 or 512).
     */
    tileSize={256}
  /&amp;gt;
&amp;lt;/MapView&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Android: LocalTile is still just overlay over original map tiles. It means that if device is online, underlying tiles will be still downloaded. If original tiles download/display is not desirable set mapType to 'none'. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;MapView
  mapType={Platform.OS == "android" ? "none" : "standard"}
&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://wiki.openstreetmap.org/wiki/Category:Tile_downloading"&gt;OSM Wiki&lt;/a&gt; for how to download tiles for offline usage.&lt;/p&gt; 
&lt;h3&gt;Overlaying other components on the map&lt;/h3&gt; 
&lt;p&gt;Place components that you wish to overlay &lt;code&gt;MapView&lt;/code&gt; underneath the &lt;code&gt;MapView&lt;/code&gt; closing tag. Absolutely position these elements.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;render() {
  return (
    &amp;lt;MapView
      region={this.state.region}
    /&amp;gt;
    &amp;lt;OverlayComponent
      style={{position: "absolute", bottom: 50}}
    /&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Customizing the map style (Google Maps Only)&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;&amp;lt;MapView provider="google" googleMapId="yourStyledMapId" /&amp;gt;&lt;/code&gt; Google Maps on iOS and Android supports styling via google cloud platform, the styled maps are published under a googleMapId, by simply setting the property googleMapId to the MapView you can use that styled map more info here: &lt;a href="https://developers.google.com/maps/documentation/get-map-id"&gt;google map id&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;MapView Events&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;&amp;lt;MapView /&amp;gt;&lt;/code&gt; component and its child components have several events that you can subscribe to. This example displays some of them in a log as a demonstration.&lt;/p&gt; 
&lt;p&gt;&lt;img src="http://i.giphy.com/3o6UBpncYQASu2WTW8.gif" alt="" /&gt; &lt;img src="http://i.giphy.com/xT77YdviLqtjaecRYA.gif" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Tracking Region / Location&lt;/h3&gt; 
&lt;p&gt;&lt;img src="http://i.giphy.com/3o6UBoPSLlIKQ2dv7q.gif" alt="" /&gt; &lt;img src="http://i.giphy.com/xT77XWjqECvdgjx9oA.gif" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Programmatically Changing Region&lt;/h3&gt; 
&lt;p&gt;One can change the mapview's position using refs and component methods, or by passing in an updated &lt;code&gt;region&lt;/code&gt; prop. The component methods will allow one to animate to a given position like the native API could.&lt;/p&gt; 
&lt;p&gt;&lt;img src="http://i.giphy.com/3o6UB7poyB6YJ0KPWU.gif" alt="" /&gt; &lt;img src="http://i.giphy.com/xT77Yc4wK3pzZusEbm.gif" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Changing the style of the map&lt;/h3&gt; 
&lt;p&gt;&lt;img src="http://i.imgur.com/a9WqCL6.png" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Arbitrary React Views as Markers&lt;/h3&gt; 
&lt;p&gt;&lt;img src="http://i.giphy.com/3o6UBcsCLoLQtksJxe.gif" alt="" /&gt; &lt;img src="http://i.giphy.com/3o6UB1qGEM9jYni3KM.gif" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Using the MapView with the Animated API&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;&amp;lt;MapView /&amp;gt;&lt;/code&gt; component can be made to work with the Animated API, having the entire &lt;code&gt;region&lt;/code&gt; prop be declared as an animated value. This allows one to animate the zoom and position of the MapView along with other gestures, giving a nice feel.&lt;/p&gt; 
&lt;p&gt;Further, Marker views can use the animated API to enhance the effect.&lt;/p&gt; 
&lt;p&gt;&lt;img src="http://i.giphy.com/xT77XMw9IwS6QAv0nC.gif" alt="" /&gt; &lt;img src="http://i.giphy.com/3o6UBdGQdM1GmVoIdq.gif" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Issue: Since android needs to render its marker views as a bitmap, the animations APIs may not be compatible with the Marker views. Not sure if this can be worked around yet or not.&lt;/p&gt; 
&lt;p&gt;Markers' coordinates can also be animated, as shown in this example:&lt;/p&gt; 
&lt;p&gt;&lt;img src="http://i.giphy.com/xTcnTelp1OwGPu1Wh2.gif" alt="" /&gt; &lt;img src="http://i.giphy.com/xTcnT6WVpwlCiQnFW8.gif" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Polygon Creator&lt;/h3&gt; 
&lt;p&gt;&lt;img src="http://i.giphy.com/3o6UAZWqQBkOzs8HE4.gif" alt="" /&gt; &lt;img src="http://i.giphy.com/xT77XVBRErNZl3zyWQ.gif" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Other Overlays&lt;/h3&gt; 
&lt;p&gt;So far, &lt;code&gt;&amp;lt;Circle /&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Polygon /&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;Polyline /&amp;gt;&lt;/code&gt; are available to pass in as children to the &lt;code&gt;&amp;lt;MapView /&amp;gt;&lt;/code&gt; component.&lt;/p&gt; 
&lt;p&gt;&lt;img src="http://i.giphy.com/xT77XZCH8JpEhzVcNG.gif" alt="" /&gt; &lt;img src="http://i.giphy.com/xT77XZyA0aYeOX5jsA.gif" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Gradient Polylines (iOS MapKit only)&lt;/h3&gt; 
&lt;p&gt;Gradient polylines can be created using the &lt;code&gt;strokeColors&lt;/code&gt; prop of the &lt;code&gt;&amp;lt;Polyline&amp;gt;&lt;/code&gt; component.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/P7UeqAm.png?1" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Default Markers&lt;/h3&gt; 
&lt;p&gt;Default markers will be rendered unless a custom marker is specified. One can optionally adjust the color of the default marker by using the &lt;code&gt;pinColor&lt;/code&gt; prop.&lt;/p&gt; 
&lt;p&gt;&lt;img src="http://i.giphy.com/xT77Y0pWKmUUnguHK0.gif" alt="" /&gt; &lt;img src="http://i.giphy.com/3o6UBfk3I58VIwZjVe.gif" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Custom Callouts&lt;/h3&gt; 
&lt;p&gt;Callouts to markers can be completely arbitrary react views, similar to markers. As a result, they can be interacted with like any other view.&lt;/p&gt; 
&lt;p&gt;Additionally, you can fall back to the standard behavior of just having a title/description through the &lt;code&gt;&amp;lt;Marker /&amp;gt;&lt;/code&gt;'s &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; props.&lt;/p&gt; 
&lt;p&gt;Custom callout views can be the entire tooltip bubble, or just the content inside of the system default bubble.&lt;/p&gt; 
&lt;p&gt;To handle press on specific subview of callout use &lt;code&gt;&amp;lt;CalloutSubview /&amp;gt;&lt;/code&gt; with &lt;code&gt;onPress&lt;/code&gt;. See &lt;code&gt;Callouts.js&lt;/code&gt; example.&lt;/p&gt; 
&lt;p&gt;&lt;img src="http://i.giphy.com/xT77XNePGnMIIDpbnq.gif" alt="" /&gt; &lt;img src="http://i.giphy.com/xT77YdU0HXryvoRqaQ.gif" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Image-based Markers&lt;/h3&gt; 
&lt;p&gt;Markers can be customized by just using images, and specified using the &lt;code&gt;image&lt;/code&gt; prop.&lt;/p&gt; 
&lt;p&gt;&lt;img src="http://i.imgur.com/mzrOjTR.png" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Draggable Markers&lt;/h3&gt; 
&lt;p&gt;Markers are draggable, and emit continuous drag events to update other UI during drags.&lt;/p&gt; 
&lt;p&gt;&lt;img src="http://i.giphy.com/l2JImnZxdv1WbpQfC.gif" alt="" /&gt; &lt;img src="http://i.giphy.com/l2JIhv4Jx6Ugx1EGI.gif" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Lite Mode ( Android )&lt;/h3&gt; 
&lt;p&gt;Enable lite mode on Android with &lt;code&gt;liteMode&lt;/code&gt; prop. Ideal when having multiple maps in a View or ScrollView.&lt;/p&gt; 
&lt;p&gt;&lt;img src="http://i.giphy.com/qZ2lAf18s89na.gif" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;On Poi Click (Google Maps Only)&lt;/h3&gt; 
&lt;p&gt;Poi are clickable, you can catch the event to get its information (usually to get the full detail from Google Place using the placeId).&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://media.giphy.com/media/3480VsCKnHr31uCLU3/giphy.gif" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Animated Region&lt;/h3&gt; 
&lt;p&gt;The MapView can accept an &lt;code&gt;AnimatedRegion&lt;/code&gt; value as its &lt;code&gt;region&lt;/code&gt; prop. This allows you to utilize the Animated API to control the map's center and zoom.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import MapView, { AnimatedRegion, Animated } from 'react-native-maps';

getInitialState() {
  return {
    region: new AnimatedRegion({
      latitude: LATITUDE,
      longitude: LONGITUDE,
      latitudeDelta: LATITUDE_DELTA,
      longitudeDelta: LONGITUDE_DELTA,
    }),
  };
}

onRegionChange(region) {
  this.state.region.setValue(region);
}

render() {
  return (
    &amp;lt;Animated
      region={this.state.region}
      onRegionChange={this.onRegionChange}
    /&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Animated Marker Position&lt;/h3&gt; 
&lt;p&gt;Markers can also accept an &lt;code&gt;AnimatedRegion&lt;/code&gt; value as a coordinate.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import MapView, { AnimatedRegion, MarkerAnimated } from 'react-native-maps';

getInitialState() {
  return {
    coordinate: new AnimatedRegion({
      latitude: LATITUDE,
      longitude: LONGITUDE,
    }),
  };
}

componentWillReceiveProps(nextProps) {
  const duration = 500

  if (this.props.coordinate !== nextProps.coordinate) {
    if (Platform.OS === 'android') {
      if (this.marker) {
        this.marker.animateMarkerToCoordinate(
          nextProps.coordinate,
          duration
        );
      }
    } else {
      this.state.coordinate.timing({
        ...nextProps.coordinate,
        useNativeDriver: true, // defaults to false if not passed explicitly
        duration
      }).start();
    }
  }
}

render() {
  return (
    &amp;lt;MapView initialRegion={...}&amp;gt;
      &amp;lt;MarkerAnimated
        ref={marker =&amp;gt; { this.marker = marker }}
        coordinate={this.state.coordinate}
      /&amp;gt;
    &amp;lt;/MapView&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Take Snapshot of map&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import MapView, { Marker } from 'react-native-maps';

getInitialState() {
  return {
    coordinate: {
      latitude: LATITUDE,
      longitude: LONGITUDE,
    },
  };
}

takeSnapshot () {
  // 'takeSnapshot' takes a config object with the
  // following options
  const snapshot = this.map.takeSnapshot({
    width: 300,      // optional, when omitted the view-width is used
    height: 300,     // optional, when omitted the view-height is used
    region: {..},    // iOS only, optional region to render
    format: 'png',   // image formats: 'png', 'jpg' (default: 'png')
    quality: 0.8,    // image quality: 0..1 (only relevant for jpg, default: 1)
    result: 'file'   // result types: 'file', 'base64' (default: 'file')
  });
  snapshot.then((uri) =&amp;gt; {
    this.setState({ mapSnapshot: uri });
  });
}

render() {
  return (
    &amp;lt;View&amp;gt;
      &amp;lt;MapView initialRegion={...} ref={map =&amp;gt; { this.map = map }}&amp;gt;
        &amp;lt;Marker coordinate={this.state.coordinate} /&amp;gt;
      &amp;lt;/MapView&amp;gt;
      &amp;lt;Image source={{ uri: this.state.mapSnapshot.uri }} /&amp;gt;
      &amp;lt;TouchableOpacity onPress={this.takeSnapshot}&amp;gt;
        Take Snapshot
      &amp;lt;/TouchableOpacity&amp;gt;
    &amp;lt;/View&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Zoom to Specified Markers&lt;/h3&gt; 
&lt;p&gt;Pass an array of marker identifiers to have the map re-focus.&lt;/p&gt; 
&lt;p&gt;&lt;img src="http://i.giphy.com/3o7qEbOQnO0yoXqKJ2.gif" alt="" /&gt; &lt;img src="http://i.giphy.com/l41YdrQZ7m6Dz4h0c.gif" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Zoom to Specified Coordinates&lt;/h3&gt; 
&lt;p&gt;Pass an array of coordinates to focus a map region on said coordinates.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://cloud.githubusercontent.com/assets/1627824/18609960/da5d9e06-7cdc-11e6-811e-34e255093df9.gif" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;h4&gt;My map is blank&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure that you have &lt;a href="https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/installation.md"&gt;properly installed&lt;/a&gt; react-native-maps.&lt;/li&gt; 
 &lt;li&gt;Check in the logs if there is more informations about the issue.&lt;/li&gt; 
 &lt;li&gt;Try setting the style of the MapView to an absolute position with top, left, right and bottom values set.&lt;/li&gt; 
 &lt;li&gt;Make sure you have enabled Google Maps API in &lt;a href="https://console.developers.google.com/apis/library"&gt;Google developer console&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const styles = StyleSheet.create({
  map: {
    ...StyleSheet.absoluteFillObject,
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;&amp;lt;MapView
  style={styles.map}
  // other props
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Inputs don't focus&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;When inputs don't focus or elements don't respond to tap, look at the order of the view hierarchy, sometimes the issue could be due to ordering of rendered components, prefer putting MapView as the first component.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Bad:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;&amp;lt;View&amp;gt;
  &amp;lt;TextInput /&amp;gt;
  &amp;lt;MapView /&amp;gt;
&amp;lt;/View&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Good:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;&amp;lt;View&amp;gt;
  &amp;lt;MapView /&amp;gt;
  &amp;lt;TextInput /&amp;gt;
&amp;lt;/View&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Children Components Not Re-Rendering&lt;/h4&gt; 
&lt;p&gt;Components that aren't declared by this library (Ex: Markers, Polyline) must not be children of the MapView component due to MapView's unique rendering methodology. Have your custom components / views outside the MapView component and position absolute to ensure they only re-render as needed. Example: Bad:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;&amp;lt;View style={StyleSheet.absoluteFillObject}&amp;gt;
  &amp;lt;MapView style={StyleSheet.absoluteFillObject}&amp;gt;
    &amp;lt;View style={{position: 'absolute', top: 100, left: 50}} /&amp;gt;
  &amp;lt;/MapView&amp;gt;
&amp;lt;/View&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Good:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;&amp;lt;View style={StyleSheet.absoluteFillObject}&amp;gt;
  &amp;lt;MapView style={StyleSheet.absoluteFillObject} /&amp;gt;
  &amp;lt;View style={{position: 'absolute', top: 100, left: 50}} /&amp;gt;
&amp;lt;/View&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Source: &lt;a href="https://github.com/react-native-maps/react-native-maps/issues/1901"&gt;https://github.com/react-native-maps/react-native-maps/issues/1901&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Crashing with EXC_BAD_ACCESS on iOS when switching apps&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;&amp;lt;MapView&amp;gt;&lt;/code&gt; using Apple Maps in &lt;code&gt;mapType: "standard"&lt;/code&gt; will sometimes crash when you background the app or switch into another app. This is only an issue in XCode using Metal API Validation, and won't happen in production. To eliminate this problem even while debugging in XCode, go to &lt;code&gt;Edit Scheme... -&amp;gt; Run (Debug) -&amp;gt; Diagnostics&lt;/code&gt; and uncheck &lt;code&gt;Metal -&amp;gt; API Validation&lt;/code&gt;. (h/t &lt;a href="https://github.com/Simon-TechForm"&gt;@Simon-TechForm&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;Source: &lt;a href="https://github.com/react-native-maps/react-native-maps/issues/3957#issuecomment-924161121"&gt;https://github.com/react-native-maps/react-native-maps/issues/3957#issuecomment-924161121&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;onRegionChangeComplete() callback is called infinitely&lt;/h4&gt; 
&lt;p&gt;If changing the state in &lt;code&gt;onRegionChangeComplete&lt;/code&gt; is called infinitely, add a condition to limit these calls to occur only when the region change was done as a result of a user's action.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;onRegionChangeComplete={ (region, gesture) =&amp;gt; {
	// This fix only works on Google Maps because isGesture is NOT available on Apple Maps
	if (!gesture.isGesture) {
    return;
  }

  // You can use
  dispatch({ type: "map_region", payload: { mapRegion: region }}); // if using useReducer
	// setMapRegionState(region); // if using useState
}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Source: &lt;a href="https://github.com/react-native-maps/react-native-maps/issues/846#issuecomment-1210079461"&gt;https://github.com/react-native-maps/react-native-maps/issues/846#issuecomment-1210079461&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt; Copyright (c) 2017 Airbnb

 Licensed under the The MIT License (MIT) (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

    https://raw.githubusercontent.com/airbnb/react-native-maps/master/LICENSE

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>