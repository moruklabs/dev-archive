<rss version="2.0">
  <channel>
    <title>GitHub Go Weekly Trending</title>
    <description>Weekly Trending of Go in GitHub</description>
    <pubDate>Fri, 05 Sep 2025 01:43:53 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>vllm-project/aibrix</title>
      <link>https://github.com/vllm-project/aibrix</link>
      <description>&lt;p&gt;Cost-efficient and pluggable Infrastructure components for GenAI inference&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AIBrix&lt;/h1&gt; 
&lt;p&gt;Welcome to AIBrix, an open-source initiative designed to provide essential building blocks to construct scalable GenAI inference infrastructure. AIBrix delivers a cloud-native solution optimized for deploying, managing, and scaling large language model (LLM) inference, tailored specifically to enterprise needs.&lt;/p&gt; 
&lt;p align="center"&gt; | &lt;a href="https://aibrix.readthedocs.io/latest/"&gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/a&gt; | &lt;a href="https://aibrix.github.io/"&gt;&lt;b&gt;Blog&lt;/b&gt;&lt;/a&gt; | &lt;a href="https://arxiv.org/abs/2504.03648"&gt;&lt;b&gt;White Paper&lt;/b&gt;&lt;/a&gt; | &lt;a href="https://x.com/vllm_project"&gt;&lt;b&gt;Twitter/X&lt;/b&gt;&lt;/a&gt; | &lt;a href="https://vllm-dev.slack.com/archives/C08EQ883CSV"&gt;&lt;b&gt;Developer Slack&lt;/b&gt;&lt;/a&gt; | &lt;/p&gt; 
&lt;h2&gt;Latest News&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-08-05]&lt;/strong&gt; AIBrix v0.4.0 is released. Check out the &lt;a href="https://github.com/vllm-project/aibrix/releases/tag/v0.4.0"&gt;release notes&lt;/a&gt; and &lt;a href="https://aibrix.github.io/posts/2025-08-04-v0.4.0-release/"&gt;Blog Post&lt;/a&gt; for more details&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-06-10]&lt;/strong&gt; The AIBrix team delivered a talk at KubeCon China 2025 titled &lt;a href="https://kccncchn2025.sched.com/event/1x5im/introducing-aibrix-cost-effective-and-scalable-kubernetes-control-plane-for-vllm-jiaxin-shan-liguang-xie-bytedance"&gt;AIBrix: Cost-Effective and Scalable Kubernetes Control Plane for vLLM&lt;/a&gt;, discussing how the framework optimizes vLLM deployment via Kubernetes for cost efficiency and scalability.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-05-21]&lt;/strong&gt; AIBrix v0.3.0 is released. Check out the &lt;a href="https://github.com/vllm-project/aibrix/releases/tag/v0.3.0"&gt;release notes&lt;/a&gt; and &lt;a href="https://aibrix.github.io/posts/2025-05-21-v0.3.0-release/"&gt;Blog Post&lt;/a&gt; for more details&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-04-04]&lt;/strong&gt; AIBrix co-delivered a KubeCon EU 2025 keynote with Google on &lt;a href="https://kccnceu2025.sched.com/event/1txC7/keynote-llm-aware-load-balancing-in-kubernetes-a-new-era-of-efficiency-clayton-coleman-distinguished-engineer-google-jiaxin-shan-software-engineer-bytedance"&gt;LLM-Aware Load Balancing in Kubernetes: A New Era of Efficiency&lt;/a&gt;, focusing on LLM specific routing solutions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-03-30]&lt;/strong&gt; AIBrix was featured at the &lt;a href="http://asplos-conference.org/asplos2025/"&gt;ASPLOS'25&lt;/a&gt; workshop with the presentation &lt;a href="https://docs.google.com/presentation/d/1YDVsPFTIgGXnROGaJ1VKuDDAB4T5fzpE/edit"&gt;AIBrix: An Open-Source, Large-Scale LLM Inference Infrastructure for System Research&lt;/a&gt;, showcasing its architecture for efficient LLM inference in system research scenarios.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-03-09]&lt;/strong&gt; AIBrix v0.2.1 is released. DeepSeek-R1 full weights deployment is supported and gateway stability has been improved! Check &lt;a href="https://aibrix.github.io/posts/2025-03-10-deepseek-r1/"&gt;Blog Post&lt;/a&gt; for more details.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-02-19]&lt;/strong&gt; AIBrix v0.2.0 is released. Check out the &lt;a href="https://github.com/vllm-project/aibrix/releases/tag/v0.2.0"&gt;release notes&lt;/a&gt; and &lt;a href="https://aibrix.github.io/posts/2025-02-05-v0.2.0-release/"&gt;Blog Post&lt;/a&gt; for more details.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2024-11-13]&lt;/strong&gt; AIBrix v0.1.0 is released. Check out the &lt;a href="https://github.com/vllm-project/aibrix/releases/tag/v0.1.0"&gt;release notes&lt;/a&gt; and &lt;a href="https://aibrix.github.io/posts/2024-11-12-v0.1.0-release/"&gt;Blog Post&lt;/a&gt; for more details.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;p&gt;The initial release includes the following key features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;High-Density LoRA Management&lt;/strong&gt;: Streamlined support for lightweight, low-rank adaptations of models.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LLM Gateway and Routing&lt;/strong&gt;: Efficiently manage and direct traffic across multiple models and replicas.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LLM App-Tailored Autoscaler&lt;/strong&gt;: Dynamically scale inference resources based on real-time demand.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Unified AI Runtime&lt;/strong&gt;: A versatile sidecar enabling metric standardization, model downloading, and management.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Distributed Inference&lt;/strong&gt;: Scalable architecture to handle large workloads across multiple nodes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Distributed KV Cache&lt;/strong&gt;: Enables high-capacity, cross-engine KV reuse.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cost-efficient Heterogeneous Serving&lt;/strong&gt;: Enables mixed GPU inference to reduce costs with SLO guarantees.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GPU Hardware Failure Detection&lt;/strong&gt;: Proactive detection of GPU hardware issues.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/vllm-project/aibrix/main/docs/source/assets/images/aibrix-architecture-v1.jpeg" alt="aibrix-architecture-v1" /&gt;&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;To get started with AIBrix, clone this repository and follow the setup instructions in the documentation. Our comprehensive guide will help you configure and deploy your first LLM infrastructure seamlessly.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# Local Testing
git clone https://github.com/vllm-project/aibrix.git
cd aibrix

# Install nightly aibrix dependencies
kubectl apply -k config/dependency --server-side

# Install nightly aibrix components
kubectl apply -k config/default
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install stable distribution&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# Install component dependencies
kubectl apply -f "https://github.com/vllm-project/aibrix/releases/download/v0.4.0/aibrix-dependency-v0.4.0.yaml" --server-side

# Install aibrix components
kubectl apply -f "https://github.com/vllm-project/aibrix/releases/download/v0.4.0/aibrix-core-v0.4.0.yaml"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For detailed documentation on installation, configuration, and usage, please visit our &lt;a href="https://aibrix.readthedocs.io/latest/"&gt;documentation page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from the community! Check out our &lt;a href="https://raw.githubusercontent.com/vllm-project/aibrix/main/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; to see how you can make a difference.&lt;/p&gt; 
&lt;p&gt;Slack Channel: &lt;a href="https://vllm-dev.slack.com/archives/C08EQ883CSV"&gt;#aibrix&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;AIBrix is licensed under the &lt;a href="https://raw.githubusercontent.com/vllm-project/aibrix/main/LICENSE"&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you have any questions or encounter any issues, please submit an issue on our &lt;a href="https://github.com/vllm-project/aibrix/issues"&gt;GitHub issues page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Thank you for choosing AIBrix for your GenAI infrastructure needs!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kgretzky/evilginx2</title>
      <link>https://github.com/kgretzky/evilginx2</link>
      <description>&lt;p&gt;Standalone man-in-the-middle attack framework used for phishing login credentials along with session cookies, allowing for the bypass of 2-factor authentication&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img alt="Evilginx2 Logo" src="https://raw.githubusercontent.com/kgretzky/evilginx2/master/media/img/evilginx2-logo-512.png" height="160" /&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;img alt="Evilginx2 Title" src="https://raw.githubusercontent.com/kgretzky/evilginx2/master/media/img/evilginx2-title-black-512.png" height="60" /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h1&gt;Evilginx 3.0&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Evilginx&lt;/strong&gt; is a man-in-the-middle attack framework used for phishing login credentials along with session cookies, which in turn allows to bypass 2-factor authentication protection.&lt;/p&gt; 
&lt;p&gt;This tool is a successor to &lt;a href="https://github.com/kgretzky/evilginx"&gt;Evilginx&lt;/a&gt;, released in 2017, which used a custom version of nginx HTTP server to provide man-in-the-middle functionality to act as a proxy between a browser and phished website. Present version is fully written in GO as a standalone application, which implements its own HTTP and DNS server, making it extremely easy to set up and use.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img alt="Screenshot" src="https://raw.githubusercontent.com/kgretzky/evilginx2/master/media/img/screen.png" height="320" /&gt; &lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;I am very much aware that Evilginx can be used for nefarious purposes. This work is merely a demonstration of what adept attackers can do. It is the defender's responsibility to take such attacks into consideration and find ways to protect their users against this type of phishing attacks. Evilginx should be used only in legitimate penetration testing assignments with written permission from to-be-phished parties.&lt;/p&gt; 
&lt;h2&gt;Evilginx Mastery Training Course&lt;/h2&gt; 
&lt;p&gt;If you want everything about reverse proxy phishing with &lt;strong&gt;Evilginx&lt;/strong&gt; - check out my &lt;a href="https://academy.breakdev.org/evilginx-mastery"&gt;Evilginx Mastery&lt;/a&gt; course!&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://academy.breakdev.org/evilginx-mastery"&gt;&lt;img alt="Evilginx Mastery" src="https://raw.githubusercontent.com/kgretzky/evilginx2/master/media/img/evilginx_mastery.jpg" height="320" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Learn everything about the latest methods of phishing, using reverse proxying to bypass Multi-Factor Authentication. Learn to think like an attacker, during your red team engagements, and become the master of phishing with Evilginx.&lt;/p&gt; 
&lt;p&gt;Grab it here: &lt;a href="https://academy.breakdev.org/evilginx-mastery"&gt;https://academy.breakdev.org/evilginx-mastery&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Official Gophish integration&lt;/h2&gt; 
&lt;p&gt;If you'd like to use Gophish to send out phishing links compatible with Evilginx, please use the official Gophish integration with Evilginx 3.3. You can find the custom version here in the forked repository: &lt;a href="https://github.com/kgretzky/gophish/"&gt;Gophish with Evilginx integration&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you want to learn more about how to set it up, please follow the instructions in &lt;a href="https://breakdev.org/evilginx-3-3-go-phish/"&gt;this blog post&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Write-ups&lt;/h2&gt; 
&lt;p&gt;If you want to learn more about reverse proxy phishing, I've published extensive blog posts about &lt;strong&gt;Evilginx&lt;/strong&gt; here:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://breakdev.org/evilginx-2-next-generation-of-phishing-2fa-tokens"&gt;Evilginx 2.0 - Release&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://breakdev.org/evilginx-2-1-the-first-post-release-update/"&gt;Evilginx 2.1 - First Update&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://breakdev.org/evilginx-2-2-jolly-winter-update/"&gt;Evilginx 2.2 - Jolly Winter Update&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://breakdev.org/evilginx-2-3-phishermans-dream/"&gt;Evilginx 2.3 - Phisherman's Dream&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://breakdev.org/evilginx-2-4-gone-phishing/"&gt;Evilginx 2.4 - Gone Phishing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://breakdev.org/evilginx-3-0-evilginx-mastery/"&gt;Evilginx 3.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://breakdev.org/evilginx-3-2/"&gt;Evilginx 3.2&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://breakdev.org/evilginx-3-3-go-phish/"&gt;Evilginx 3.3&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Help&lt;/h2&gt; 
&lt;p&gt;In case you want to learn how to install and use &lt;strong&gt;Evilginx&lt;/strong&gt;, please refer to online documentation available at:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://help.evilginx.com"&gt;https://help.evilginx.com&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;I DO NOT offer support for providing or creating phishlets. I will also NOT help you with creation of your own phishlets. Please look for ready-to-use phishlets, provided by other people.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;evilginx2&lt;/strong&gt; is made by Kuba Gretzky (&lt;a href="https://twitter.com/mrgretzky"&gt;@mrgretzky&lt;/a&gt;) and it's released under BSD-3 license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>goharbor/harbor</title>
      <link>https://github.com/goharbor/harbor</link>
      <description>&lt;p&gt;An open source trusted cloud native registry project that stores, signs, and scans content.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Harbor&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/goharbor/harbor/actions?query=event%3Apush+branch%3Amain+workflow%3ACI+"&gt;&lt;img src="https://github.com/goharbor/harbor/workflows/CI/badge.svg?branch=main&amp;amp;event=push" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/goharbor/harbor"&gt;&lt;img src="https://codecov.io/gh/goharbor/harbor/branch/main/graph/badge.svg?sanitize=true" alt="Coverage Status" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/goharbor/harbor"&gt;&lt;img src="https://goreportcard.com/badge/github.com/goharbor/harbor" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/2095"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/2095/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://www.codacy.com/gh/goharbor/harbor/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=goharbor/harbor&amp;amp;utm_campaign=Badge_Grade"&gt;&lt;img src="https://app.codacy.com/project/badge/Grade/792fe1755edc4d6e91f4c3469f553389" alt="Codacy Badge" /&gt;&lt;/a&gt; &lt;img src="https://github.com/goharbor/harbor/workflows/Code%20scanning%20-%20action/badge.svg?sanitize=true" alt="Code scanning - action" /&gt; &lt;a href="https://www.googleapis.com/storage/v1/b/harbor-nightly/o"&gt;&lt;img src="https://us-central1-eminent-nation-87317.cloudfunctions.net/harbor-nightly-result" alt="Nightly Status" /&gt;&lt;/a&gt; &lt;img src="https://github.com/goharbor/harbor/workflows/CONFORMANCE_TEST/badge.svg?sanitize=true" alt="CONFORMANCE_TEST" /&gt; &lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fgoharbor%2Fharbor?ref=badge_shield"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fgoharbor%2Fharbor.svg?type=shield" alt="FOSSA Status" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/harbor/harbor"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/harbor" alt="Artifact HUB" /&gt;&lt;/a&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;img src="https://raw.githubusercontent.com/goharbor/website/master/docs/img/readme/bell-outline-badged.svg?sanitize=true" alt="notification" /&gt;Community Meeting&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;The Harbor Project holds bi-weekly community calls in two different timezones. To join the community calls or to watch previous meeting notes and recordings, please visit the &lt;a href="https://github.com/goharbor/community/raw/master/MEETING_SCHEDULE.md"&gt;meeting schedule&lt;/a&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;br /&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;main&lt;/code&gt; branch may be in an &lt;em&gt;unstable or even broken state&lt;/em&gt; during development. Please use &lt;a href="https://github.com/goharbor/harbor/releases"&gt;releases&lt;/a&gt; instead of the &lt;code&gt;main&lt;/code&gt; branch in order to get a stable set of binaries.&lt;/p&gt; 
&lt;img alt="Harbor" src="https://raw.githubusercontent.com/goharbor/website/master/docs/img/readme/harbor_logo.png" /&gt; 
&lt;p&gt;Harbor is an open source trusted cloud native registry project that stores, signs, and scans content. Harbor extends the open source Docker Distribution by adding the functionalities usually required by users such as security, identity and management. Having a registry closer to the build and run environment can improve the image transfer efficiency. Harbor supports replication of images between registries, and also offers advanced security features such as user management, access control and activity auditing.&lt;/p&gt; 
&lt;p&gt;Harbor is hosted by the &lt;a href="https://cncf.io"&gt;Cloud Native Computing Foundation&lt;/a&gt; (CNCF). If you are an organization that wants to help shape the evolution of cloud native technologies, consider joining the CNCF. For details about whose involved and how Harbor plays a role, read the CNCF &lt;a href="https://www.cncf.io/blog/2018/07/31/cncf-to-host-harbor-in-the-sandbox/"&gt;announcement&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Cloud native registry&lt;/strong&gt;: With support for both container images and &lt;a href="https://helm.sh"&gt;Helm&lt;/a&gt; charts, Harbor serves as registry for cloud native environments like container runtimes and orchestration platforms.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Role based access control&lt;/strong&gt;: Users access different repositories through 'projects' and a user can have different permission for images or Helm charts under a project.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Policy based replication&lt;/strong&gt;: Images and charts can be replicated (synchronized) between multiple registry instances based on policies with using filters (repository, tag and label). Harbor automatically retries a replication if it encounters any errors. This can be used to assist loadbalancing, achieve high availability, and facilitate multi-datacenter deployments in hybrid and multi-cloud scenarios.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vulnerability Scanning&lt;/strong&gt;: Harbor scans images regularly for vulnerabilities and has policy checks to prevent vulnerable images from being deployed.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LDAP/AD support&lt;/strong&gt;: Harbor integrates with existing enterprise LDAP/AD for user authentication and management, and supports importing LDAP groups into Harbor that can then be given permissions to specific projects.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OIDC support&lt;/strong&gt;: Harbor leverages OpenID Connect (OIDC) to verify the identity of users authenticated by an external authorization server or identity provider. Single sign-on can be enabled to log into the Harbor portal.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Image deletion &amp;amp; garbage collection&lt;/strong&gt;: System admin can run garbage collection jobs so that images(dangling manifests and unreferenced blobs) can be deleted and their space can be freed up periodically.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Notary&lt;/strong&gt;: Support signing container images using Docker Content Trust (leveraging Notary) for guaranteeing authenticity and provenance. In addition, policies that prevent unsigned images from being deployed can also be activated.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Graphical user portal&lt;/strong&gt;: User can easily browse, search repositories and manage projects.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Auditing&lt;/strong&gt;: All the operations to the repositories are tracked through logs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RESTful API&lt;/strong&gt;: RESTful APIs are provided to facilitate administrative operations, and are easy to use for integration with external systems. An embedded Swagger UI is available for exploring and testing the API.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy deployment&lt;/strong&gt;: Harbor can be deployed via Docker compose as well Helm Chart, and a Harbor Operator was added recently as well.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;For learning the architecture design of Harbor, check the document &lt;a href="https://github.com/goharbor/harbor/wiki/Architecture-Overview-of-Harbor"&gt;Architecture Overview of Harbor&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Harbor RESTful API: The APIs for most administrative operations of Harbor and can be used to perform integrations with Harbor programmatically. 
  &lt;ul&gt; 
   &lt;li&gt;Part 1: &lt;a href="https://editor.swagger.io/?url=https://raw.githubusercontent.com/goharbor/harbor/main/api/v2.0/swagger.yaml"&gt;New or changed APIs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install &amp;amp; Run&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;System requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;On a Linux host:&lt;/strong&gt; docker 20.10.10-ce+ and docker-compose 1.18.0+ .&lt;/p&gt; 
&lt;p&gt;Download binaries of &lt;strong&gt;&lt;a href="https://github.com/goharbor/harbor/releases"&gt;Harbor release &lt;/a&gt;&lt;/strong&gt; and follow &lt;strong&gt;&lt;a href="https://goharbor.io/docs/latest/install-config/"&gt;Installation &amp;amp; Configuration Guide&lt;/a&gt;&lt;/strong&gt; to install Harbor.&lt;/p&gt; 
&lt;p&gt;If you want to deploy Harbor on Kubernetes, please use the &lt;strong&gt;&lt;a href="https://github.com/goharbor/harbor-helm"&gt;Harbor chart&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Refer to the &lt;strong&gt;&lt;a href="https://goharbor.io/docs/"&gt;documentation&lt;/a&gt;&lt;/strong&gt; for more details on how to use Harbor.&lt;/p&gt; 
&lt;h2&gt;OCI Distribution Conformance Tests&lt;/h2&gt; 
&lt;p&gt;Check the OCI distribution conformance tests &lt;a href="https://storage.googleapis.com/harbor-conformance-test/report.html"&gt;report&lt;/a&gt; of Harbor.&lt;/p&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://goharbor.io/docs/edge/install-config/harbor-compatibility-list/"&gt;compatibility list&lt;/a&gt; document provides compatibility information for the Harbor components.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://goharbor.io/docs/edge/install-config/harbor-compatibility-list/#replication-adapters"&gt;Replication adapters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goharbor.io/docs/edge/install-config/harbor-compatibility-list/#oidc-adapters"&gt;OIDC adapters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goharbor.io/docs/edge/install-config/harbor-compatibility-list/#scanner-adapters"&gt;Scanner adapters&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Twitter:&lt;/strong&gt; &lt;a href="https://twitter.com/project_harbor"&gt;@project_harbor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User Group:&lt;/strong&gt; Join Harbor user email group: &lt;a href="https://lists.cncf.io/g/harbor-users"&gt;harbor-users@lists.cncf.io&lt;/a&gt; to get update of Harbor's news, features, releases, or to provide suggestion and feedback.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Developer Group:&lt;/strong&gt; Join Harbor developer group: &lt;a href="https://lists.cncf.io/g/harbor-dev"&gt;harbor-dev@lists.cncf.io&lt;/a&gt; for discussion on Harbor development and contribution.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Slack:&lt;/strong&gt; Join Harbor's community for discussion and ask questions: &lt;a href="https://slack.cncf.io/"&gt;Cloud Native Computing Foundation&lt;/a&gt;, channel: &lt;a href="https://cloud-native.slack.com/messages/harbor/"&gt;#harbor&lt;/a&gt; and &lt;a href="https://cloud-native.slack.com/messages/harbor-dev/"&gt;#harbor-dev&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demos&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://demo.goharbor.io"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; - A demo environment with the latest Harbor stable build installed. For additional information please refer to &lt;a href="https://goharbor.io/docs/latest/install-config/demo-server/"&gt;this page&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/goharbor/harbor/wiki/Video-demos-for-Harbor"&gt;Video Demos&lt;/a&gt;&lt;/strong&gt; - Demos for Harbor features and continuously updated.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Partners and Users&lt;/h2&gt; 
&lt;p&gt;For a list of users, please refer to &lt;a href="https://raw.githubusercontent.com/goharbor/harbor/main/ADOPTERS.md"&gt;ADOPTERS.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;h3&gt;Security Audit&lt;/h3&gt; 
&lt;p&gt;A third party security audit was performed by Cure53 in October 2019. You can see the full report &lt;a href="https://goharbor.io/docs/2.0.0/security/Harbor_Security_Audit_Oct2019.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Reporting security vulnerabilities&lt;/h3&gt; 
&lt;p&gt;If you've found a security related issue, a vulnerability, or a potential vulnerability in Harbor please let the &lt;a href="mailto:cncf-harbor-security@lists.cncf.io"&gt;Harbor Security Team&lt;/a&gt; know with the details of the vulnerability. We'll send a confirmation email to acknowledge your report, and we'll send an additional email when we've identified the issue positively or negatively.&lt;/p&gt; 
&lt;p&gt;For further details please see our complete &lt;a href="https://raw.githubusercontent.com/goharbor/harbor/main/SECURITY.md"&gt;security release process&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Harbor is available under the &lt;a href="https://raw.githubusercontent.com/goharbor/harbor/main/LICENSE"&gt;Apache 2 license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project uses open source components which have additional licensing terms. The official docker images and licensing terms for these open source components can be found at the following locations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Photon OS 1.0: &lt;a href="https://hub.docker.com/_/photon/"&gt;docker image&lt;/a&gt;, &lt;a href="https://github.com/vmware/photon/raw/master/COPYING"&gt;license&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Fossa Status&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fgoharbor%2Fharbor?ref=badge_large"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fgoharbor%2Fharbor.svg?type=large" alt="FOSSA Status" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rcourtman/Pulse</title>
      <link>https://github.com/rcourtman/Pulse</link>
      <description>&lt;p&gt;A responsive monitoring application for Proxmox VE that displays real-time metrics across multiple nodes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pulse&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/rcourtman/Pulse/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/rcourtman/Pulse" alt="GitHub release" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/rcourtman/pulse"&gt;&lt;img src="https://img.shields.io/docker/pulls/rcourtman/pulse" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/rcourtman/Pulse" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Real-time monitoring for Proxmox VE and PBS with alerts and webhooks.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Monitor your entire Proxmox infrastructure from a single dashboard. Get instant alerts when VMs go down, backups fail, or storage fills up. Supports email, Discord, Slack, Telegram, and more.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/01-dashboard.png" alt="Dashboard" /&gt;&lt;/p&gt; 
&lt;h2&gt;Support Pulse Development&lt;/h2&gt; 
&lt;p&gt;Pulse is built by a solo developer in evenings and weekends. Your support helps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Keep me motivated to add new features&lt;/li&gt; 
 &lt;li&gt;Prioritize bug fixes and user requests&lt;/li&gt; 
 &lt;li&gt;Ensure Pulse stays 100% free and open-source forever&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/rcourtman"&gt;&lt;img src="https://img.shields.io/github/sponsors/rcourtman?style=social&amp;amp;label=Sponsor" alt="GitHub Sponsors" /&gt;&lt;/a&gt; &lt;a href="https://ko-fi.com/rcourtman"&gt;&lt;img src="https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true" alt="ko-fi" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Not ready to sponsor?&lt;/strong&gt; Star the project or share it with your homelab community!&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Auto-Discovery&lt;/strong&gt;: Finds Proxmox nodes on your network, one-liner setup via generated scripts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cluster Support&lt;/strong&gt;: Configure one node, monitor entire cluster&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise Security&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Credentials encrypted at rest, masked in logs, never sent to frontend&lt;/li&gt; 
   &lt;li&gt;CSRF protection for all state-changing operations&lt;/li&gt; 
   &lt;li&gt;Rate limiting (500 req/min general, 10 attempts/min for auth)&lt;/li&gt; 
   &lt;li&gt;Account lockout after failed login attempts&lt;/li&gt; 
   &lt;li&gt;Secure session management with HttpOnly cookies&lt;/li&gt; 
   &lt;li&gt;bcrypt password hashing (cost 12) - passwords NEVER stored in plain text&lt;/li&gt; 
   &lt;li&gt;API tokens stored securely with restricted file permissions&lt;/li&gt; 
   &lt;li&gt;Security headers (CSP, X-Frame-Options, etc.)&lt;/li&gt; 
   &lt;li&gt;Comprehensive audit logging&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Live monitoring of VMs, containers, nodes, storage&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Smart Alerts&lt;/strong&gt;: Email and webhooks (Discord, Slack, Telegram, Teams, ntfy.sh, Gotify) 
  &lt;ul&gt; 
   &lt;li&gt;Example: "VM 'webserver' is down on node 'pve1'"&lt;/li&gt; 
   &lt;li&gt;Example: "Storage 'local-lvm' at 85% capacity"&lt;/li&gt; 
   &lt;li&gt;Example: "VM 'database' is back online"&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Unified view of PBS backups, PVE backups, and snapshots&lt;/li&gt; 
 &lt;li&gt;Config export/import with encryption and authentication&lt;/li&gt; 
 &lt;li&gt;Automatic stable updates with safe rollback (opt-in)&lt;/li&gt; 
 &lt;li&gt;Dark/light themes, responsive design&lt;/li&gt; 
 &lt;li&gt;Built with Go for minimal resource usage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/SCREENSHOTS.md"&gt;Screenshots →&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Pulse respects your privacy:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;No telemetry or analytics collection&lt;/li&gt; 
 &lt;li&gt;No phone-home functionality&lt;/li&gt; 
 &lt;li&gt;No external API calls (except for configured webhooks)&lt;/li&gt; 
 &lt;li&gt;All data stays on your server&lt;/li&gt; 
 &lt;li&gt;Open source - verify it yourself&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Your infrastructure data is yours alone.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Install&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Recommended: Official installer (auto-detects Proxmox and creates container)
curl -fsSL https://raw.githubusercontent.com/rcourtman/Pulse/main/install.sh | bash

# Alternative: Docker
docker run -d -p 7655:7655 -v pulse_data:/data rcourtman/pulse:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Proxmox users&lt;/strong&gt;: The installer detects PVE hosts and automatically creates an optimized LXC container. Choose Quick mode for one-minute setup.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/INSTALL.md"&gt;Advanced installation options →&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Updating&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Automatic Updates (New!):&lt;/strong&gt; Enable during installation or via Settings UI to stay current automatically&lt;br /&gt; &lt;strong&gt;Standard Install:&lt;/strong&gt; Re-run the installer&lt;br /&gt; &lt;strong&gt;Docker:&lt;/strong&gt; &lt;code&gt;docker pull rcourtman/pulse:latest&lt;/code&gt; then recreate container&lt;/p&gt; 
&lt;h3&gt;Initial Setup&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Option A: Interactive Setup (UI)&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open &lt;code&gt;http://&amp;lt;your-server&amp;gt;:7655&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Complete the mandatory security setup&lt;/strong&gt; (first-time only)&lt;/li&gt; 
 &lt;li&gt;Create your admin username and password&lt;/li&gt; 
 &lt;li&gt;Save the generated API token for automation&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Option B: Automated Setup (No UI)&lt;/strong&gt; For automated deployments, configure authentication via environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start Pulse with auth pre-configured - skips setup screen
API_TOKEN=your-api-token ./pulse

# Or use basic auth
PULSE_AUTH_USER=admin PULSE_AUTH_PASS=password ./pulse

# Plain text credentials are automatically hashed for security
# You can also provide pre-hashed values if preferred
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/CONFIGURATION.md#automated-setup-skip-ui"&gt;Configuration Guide&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;Configure Nodes&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Two authentication methods available:&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;Method 1: Manual Setup (Recommended for interactive use)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;After login, go to Settings → Nodes&lt;/li&gt; 
 &lt;li&gt;Discovered nodes appear automatically&lt;/li&gt; 
 &lt;li&gt;Click "Setup Script" next to any node&lt;/li&gt; 
 &lt;li&gt;Click "Generate Setup Code" button (creates a 6-character code valid for 5 minutes)&lt;/li&gt; 
 &lt;li&gt;Copy and run the provided one-liner on your Proxmox/PBS host&lt;/li&gt; 
 &lt;li&gt;Node is configured and monitoring starts automatically&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSL "http://pulse:7655/api/setup-script?type=pve&amp;amp;host=https://pve:8006&amp;amp;auth_token=ABC123" | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Method 2: Automated Setup (For scripts/automation)&lt;/h4&gt; 
&lt;p&gt;Use your permanent API token directly in the URL for automation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# For Proxmox VE
curl -sSL "http://pulse:7655/api/setup-script?type=pve&amp;amp;host=https://pve:8006&amp;amp;auth_token=YOUR_API_TOKEN" | bash

# For Proxmox Backup Server
curl -sSL "http://pulse:7655/api/setup-script?type=pbs&amp;amp;host=https://pbs:8007&amp;amp;auth_token=YOUR_API_TOKEN" | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;type&lt;/code&gt;: &lt;code&gt;pve&lt;/code&gt; for Proxmox VE, &lt;code&gt;pbs&lt;/code&gt; for Proxmox Backup Server&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;host&lt;/code&gt;: Full URL of your Proxmox/PBS server (e.g., &lt;a href="https://192.168.1.100:8006"&gt;https://192.168.1.100:8006&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;auth_token&lt;/code&gt;: Either a 6-character setup code (expires in 5 min) or your permanent API token&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;backup_perms=true&lt;/code&gt; (optional): Add backup management permissions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pulse_url&lt;/code&gt; (optional): Pulse server URL if different from where script is downloaded&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The script handles user creation, permissions, token generation, and registration automatically.&lt;/p&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;h3&gt;Basic&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d \
  --name pulse \
  -p 7655:7655 \
  -v pulse_data:/data \
  --restart unless-stopped \
  rcourtman/pulse:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Network Discovery&lt;/h3&gt; 
&lt;p&gt;Pulse automatically discovers Proxmox nodes on your network! By default, it scans:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;192.168.0.0/16 (home networks)&lt;/li&gt; 
 &lt;li&gt;10.0.0.0/8 (private networks)&lt;/li&gt; 
 &lt;li&gt;172.16.0.0/12 (Docker/internal networks)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To scan a custom subnet instead:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d \
  --name pulse \
  -p 7655:7655 \
  -v pulse_data:/data \
  -e DISCOVERY_SUBNET="192.168.50.0/24" \
  --restart unless-stopped \
  rcourtman/pulse:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Automated Deployment&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Deploy with authentication pre-configured
docker run -d \
  --name pulse \
  -p 7655:7655 \
  -v pulse_data:/data \
  -e API_TOKEN="your-secure-token" \
  -e PULSE_AUTH_USER="admin" \
  -e PULSE_AUTH_PASS="your-password" \
  --restart unless-stopped \
  rcourtman/pulse:latest

# Plain text credentials are automatically hashed for security
# No setup required - API works immediately
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker Compose&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  pulse:
    image: rcourtman/pulse:latest
    container_name: pulse
    ports:
      - "7655:7655"
    volumes:
      - pulse_data:/data
    environment:
      # NOTE: Env vars override UI settings. Remove env var to allow UI configuration.
      
      # Network discovery (usually not needed - auto-scans common networks)
      # - DISCOVERY_SUBNET=192.168.50.0/24  # Only for non-standard networks
      
      # Ports
      # - PORT=7655                         # Backend port (default: 7655)
      # - FRONTEND_PORT=7655                # Frontend port (default: 7655)
      
      # Security (all optional - runs open by default)
      # - PULSE_AUTH_USER=admin             # Username for web UI login
      # - PULSE_AUTH_PASS=your-password     # Plain text or bcrypt hash (auto-hashed if plain)
      # - API_TOKEN=your-token              # Plain text or SHA3-256 hash (auto-hashed if plain)
      # - ALLOW_UNPROTECTED_EXPORT=false    # Allow export without auth (default: false)
      
      # Security: Plain text credentials are automatically hashed
      # You can provide either:
      # 1. Plain text (auto-hashed): PULSE_AUTH_PASS=mypassword
      # 2. Pre-hashed (advanced): PULSE_AUTH_PASS='$$2a$$12$$...'
      #    Note: Escape $ as $$ in docker-compose.yml for pre-hashed values
      
      # Performance
      # - CONNECTION_TIMEOUT=10             # Connection timeout in seconds (default: 10)
      
      # CORS &amp;amp; logging
      # - ALLOWED_ORIGINS=https://app.example.com  # CORS origins (default: none, same-origin only)
      # - LOG_LEVEL=info                    # Log level: debug/info/warn/error (default: info)
    restart: unless-stopped

volumes:
  pulse_data:
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Authentication required&lt;/strong&gt; - Protects your Proxmox infrastructure credentials&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Quick setup wizard&lt;/strong&gt; - Secure your installation in under a minute&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple auth methods&lt;/strong&gt;: Password authentication, API tokens, proxy auth (SSO), or combinations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Proxy/SSO support&lt;/strong&gt; - Integrate with Authentik, Authelia, and other authentication proxies (&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/PROXY_AUTH.md"&gt;docs&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise-grade protection&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Credentials encrypted at rest (AES-256-GCM)&lt;/li&gt; 
   &lt;li&gt;CSRF tokens for state-changing operations&lt;/li&gt; 
   &lt;li&gt;Rate limiting and account lockout protection&lt;/li&gt; 
   &lt;li&gt;Secure session management with HttpOnly cookies&lt;/li&gt; 
   &lt;li&gt;bcrypt password hashing (cost 12) - passwords NEVER stored in plain text&lt;/li&gt; 
   &lt;li&gt;API tokens stored securely with restricted file permissions&lt;/li&gt; 
   &lt;li&gt;Security headers (CSP, X-Frame-Options, etc.)&lt;/li&gt; 
   &lt;li&gt;Comprehensive audit logging&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security by design&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Frontend never receives node credentials&lt;/li&gt; 
   &lt;li&gt;API tokens visible only to authenticated users&lt;/li&gt; 
   &lt;li&gt;Export/import requires authentication when configured&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/SECURITY.md"&gt;Security Documentation&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Updating&lt;/h2&gt; 
&lt;h3&gt;Update Notifications&lt;/h3&gt; 
&lt;p&gt;Pulse checks for updates and displays notifications in the UI when new versions are available. For security reasons, updates must be installed manually using the appropriate method for your deployment.&lt;/p&gt; 
&lt;h3&gt;Manual Installation (systemd)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Update to latest stable
curl -fsSL https://raw.githubusercontent.com/rcourtman/Pulse/main/install.sh | bash

# Update to latest RC/pre-release  
curl -fsSL https://raw.githubusercontent.com/rcourtman/Pulse/main/install.sh | bash -s -- --rc

# Install specific version
curl -fsSL https://raw.githubusercontent.com/rcourtman/Pulse/main/install.sh | bash -s -- --version v4.8.0-rc.1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker Updates&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Latest stable
docker pull rcourtman/pulse:latest

# Latest RC
docker pull rcourtman/pulse:rc

# Specific version
docker pull rcourtman/pulse:v4.8.0-rc.1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Quick start - most settings are in the web UI:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Settings → Nodes&lt;/strong&gt;: Add/remove Proxmox instances&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Settings → System&lt;/strong&gt;: Polling intervals, timeouts, update settings&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Settings → Security&lt;/strong&gt;: Authentication and API tokens&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Alerts&lt;/strong&gt;: Thresholds and notifications&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configuration Files&lt;/h3&gt; 
&lt;p&gt;Pulse uses three separate configuration files with clear separation of concerns:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;.env&lt;/code&gt; - Authentication credentials only&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;system.json&lt;/code&gt; - Application settings&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nodes.enc&lt;/code&gt; - Encrypted node credentials&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/CONFIGURATION.md"&gt;docs/CONFIGURATION.md&lt;/a&gt; for detailed documentation on configuration structure and management.&lt;/p&gt; 
&lt;h3&gt;Email Alerts Configuration&lt;/h3&gt; 
&lt;p&gt;Configure email notifications in &lt;strong&gt;Settings → Alerts → Email Destinations&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;Supported Providers&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Gmail/Google Workspace&lt;/strong&gt;: Requires app-specific password&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Outlook/Office 365&lt;/strong&gt;: Requires app-specific password&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom SMTP&lt;/strong&gt;: Any SMTP server&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Recommended Settings&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Port 587 with STARTTLS&lt;/strong&gt; (recommended for most providers)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Port 465&lt;/strong&gt; for SSL/TLS&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Port 25&lt;/strong&gt; for unencrypted (not recommended)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Gmail Setup&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Enable 2-factor authentication&lt;/li&gt; 
 &lt;li&gt;Generate app-specific password at &lt;a href="https://myaccount.google.com/apppasswords"&gt;https://myaccount.google.com/apppasswords&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Use your email as username and app password as password&lt;/li&gt; 
 &lt;li&gt;Server: smtp.gmail.com, Port: 587, Enable STARTTLS&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Outlook Setup&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Generate app password at &lt;a href="https://account.microsoft.com/security"&gt;https://account.microsoft.com/security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Use your email as username and app password as password&lt;/li&gt; 
 &lt;li&gt;Server: smtp-mail.outlook.com, Port: 587, Enable STARTTLS&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Alert Configuration&lt;/h3&gt; 
&lt;p&gt;Pulse provides two complementary approaches for managing alerts:&lt;/p&gt; 
&lt;h4&gt;Custom Alert Rules (Permanent Policy)&lt;/h4&gt; 
&lt;p&gt;Configure persistent alert policies in &lt;strong&gt;Settings → Alerts → Custom Rules&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Define thresholds for specific VMs/containers based on name patterns&lt;/li&gt; 
 &lt;li&gt;Set different thresholds for production vs development environments&lt;/li&gt; 
 &lt;li&gt;Create complex rules with AND/OR logic&lt;/li&gt; 
 &lt;li&gt;Manage all rules through the UI with priority ordering&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Use for:&lt;/strong&gt; Long-term alert policies like "all database VMs should alert at 90%"&lt;/p&gt; 
&lt;h3&gt;HTTPS/TLS Configuration&lt;/h3&gt; 
&lt;p&gt;Enable HTTPS by setting these environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Systemd: sudo systemctl edit pulse-backend
Environment="HTTPS_ENABLED=true"
Environment="TLS_CERT_FILE=/etc/pulse/cert.pem"
Environment="TLS_KEY_FILE=/etc/pulse/key.pem"

# Docker
docker run -d -p 7655:7655 \
  -e HTTPS_ENABLED=true \
  -e TLS_CERT_FILE=/data/cert.pem \
  -e TLS_KEY_FILE=/data/key.pem \
  -v pulse_data:/data \
  -v /path/to/certs:/data/certs:ro \
  rcourtman/pulse:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For deployment overrides (ports, etc), use environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Systemd: sudo systemctl edit pulse-backend
Environment="FRONTEND_PORT=8080"

# Docker: -e FRONTEND_PORT=8080
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/CONFIGURATION.md"&gt;Full Configuration Guide →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Backup/Restore&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Via UI (recommended):&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Settings → Security → Backup &amp;amp; Restore&lt;/li&gt; 
 &lt;li&gt;Export: Choose login password or custom passphrase for encryption&lt;/li&gt; 
 &lt;li&gt;Import: Upload backup file with passphrase&lt;/li&gt; 
 &lt;li&gt;Includes all settings, nodes, and custom console URLs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Via CLI:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Export (v4.0.3+)
pulse config export -o backup.enc

# Import
pulse config import -i backup.enc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Updates&lt;/h2&gt; 
&lt;p&gt;Pulse shows when updates are available and provides deployment-specific instructions:&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull rcourtman/pulse:latest
docker stop pulse
docker rm pulse
# Run docker run command again with your settings
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual Install&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsSL https://raw.githubusercontent.com/rcourtman/Pulse/main/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The UI will detect your deployment type and show the appropriate update method when a new version is available.&lt;/p&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Status
curl http://localhost:7655/api/health

# Metrics (default time range: 1h)
curl http://localhost:7655/api/charts

# With authentication (if configured)
curl -H "X-API-Token: your-token" http://localhost:7655/api/health
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/API.md"&gt;Full API Documentation →&lt;/a&gt;&lt;/strong&gt; - Complete endpoint reference with examples&lt;/p&gt; 
&lt;h2&gt;Reverse Proxy &amp;amp; SSO&lt;/h2&gt; 
&lt;p&gt;Using Pulse behind a reverse proxy? &lt;strong&gt;WebSocket support is required for real-time updates.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NEW: Proxy Authentication Support&lt;/strong&gt; - Integrate with Authentik, Authelia, and other SSO providers. See &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/PROXY_AUTH.md"&gt;Proxy Authentication Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/REVERSE_PROXY.md"&gt;Reverse Proxy Configuration Guide&lt;/a&gt; for nginx, Caddy, Apache, Traefik, HAProxy, and Cloudflare Tunnel configurations.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;h3&gt;Authentication Issues&lt;/h3&gt; 
&lt;h4&gt;Cannot login after setting up security&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: Ensure bcrypt hash is exactly 60 characters and wrapped in single quotes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker Compose&lt;/strong&gt;: MUST escape $ characters as $$ (e.g., &lt;code&gt;$$2a$$12$$...&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Example (docker run)&lt;/strong&gt;: &lt;code&gt;PULSE_AUTH_PASS='$2a$12$YTZXOCEylj4TaevZ0DCeI.notayQZ..b0OZ97lUZ.Q24fljLiMQHK'&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Example (docker-compose.yml)&lt;/strong&gt;: &lt;code&gt;PULSE_AUTH_PASS='$$2a$$12$$YTZXOCEylj4TaevZ0DCeI.notayQZ..b0OZ97lUZ.Q24fljLiMQHK'&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;If hash is truncated or mangled, authentication will fail&lt;/li&gt; 
 &lt;li&gt;Use Quick Security Setup in the UI to avoid manual configuration errors&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;.env file not created (Docker)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;: When using environment variables, no .env file is created in /data&lt;/li&gt; 
 &lt;li&gt;The .env file is only created when using Quick Security Setup or password changes&lt;/li&gt; 
 &lt;li&gt;If you provide credentials via environment variables, they take precedence&lt;/li&gt; 
 &lt;li&gt;To use Quick Security Setup: Start container WITHOUT auth environment variables&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;VM Disk Stats Show 0% or Dash&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Known Proxmox 9 limitation&lt;/strong&gt;: API tokens cannot access guest agent data&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/VM_DISK_STATS_TROUBLESHOOTING.md"&gt;VM Disk Stats Troubleshooting Guide&lt;/a&gt; for details&lt;/li&gt; 
 &lt;li&gt;Container (LXC) disk stats work normally&lt;/li&gt; 
 &lt;li&gt;This is a Proxmox API limitation, not a Pulse bug&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Connection Issues&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check Proxmox API is accessible (port 8006/8007)&lt;/li&gt; 
 &lt;li&gt;Verify credentials have PVEAuditor role minimum&lt;/li&gt; 
 &lt;li&gt;For PBS: ensure API token has Datastore.Audit permission&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;High CPU/Memory&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Reduce polling interval in Settings&lt;/li&gt; 
 &lt;li&gt;Check number of monitored nodes&lt;/li&gt; 
 &lt;li&gt;Disable unused features (backups, snapshots)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Logs&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Docker
docker logs pulse

# Manual
journalctl -u pulse -f
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/DOCKER.md"&gt;Docker Guide&lt;/a&gt; - Complete Docker deployment guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/CONFIGURATION.md"&gt;Configuration Guide&lt;/a&gt; - Complete setup and configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/VM_DISK_MONITORING.md"&gt;VM Disk Monitoring&lt;/a&gt; - Set up QEMU Guest Agent for accurate VM disk usage&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/PORT_CONFIGURATION.md"&gt;Port Configuration&lt;/a&gt; - How to change the default port&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/TROUBLESHOOTING.md"&gt;Troubleshooting&lt;/a&gt; - Common issues and solutions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/API.md"&gt;API Reference&lt;/a&gt; - REST API endpoints and examples&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/WEBHOOKS.md"&gt;Webhook Guide&lt;/a&gt; - Setting up webhooks and custom payloads&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/PROXY_AUTH.md"&gt;Proxy Authentication&lt;/a&gt; - SSO integration with Authentik, Authelia, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/REVERSE_PROXY.md"&gt;Reverse Proxy Setup&lt;/a&gt; - nginx, Caddy, Apache, Traefik configs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/SECURITY.md"&gt;Security&lt;/a&gt; - Security features and best practices&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/FAQ.md"&gt;FAQ&lt;/a&gt; - Common questions and troubleshooting&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/MIGRATION.md"&gt;Migration Guide&lt;/a&gt; - Backup and migration procedures&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Mandatory authentication&lt;/strong&gt; protects your infrastructure&lt;/li&gt; 
 &lt;li&gt;Credentials stored encrypted (AES-256-GCM)&lt;/li&gt; 
 &lt;li&gt;API token support for automation&lt;/li&gt; 
 &lt;li&gt;Export/import requires authentication&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Setup script authentication&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Setup codes&lt;/strong&gt;: Temporary 6-character codes for manual setup (expire in 5 minutes)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;API tokens&lt;/strong&gt;: Permanent tokens for automation and scripting&lt;/li&gt; 
   &lt;li&gt;Use setup codes when giving access to others without sharing your API token&lt;/li&gt; 
   &lt;li&gt;Use API tokens for your own automation or trusted environments&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/SECURITY.md"&gt;Security Details →&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;Quick Start - Hot Reload (Recommended)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Best development experience with instant frontend updates
./scripts/hot-dev.sh
# Frontend: http://localhost:5173 (hot reload)
# Backend: http://localhost:7655
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Production-like Development&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Watches files and rebuilds/embeds frontend into Go binary
./dev.sh
# Access at: http://localhost:7655
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual Development&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Frontend only
cd frontend-modern
npm install
npm run dev

# Backend only
go build -o pulse ./cmd/pulse
./pulse

# Or use make for full rebuild
make dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Visual Tour&lt;/h2&gt; 
&lt;p&gt;See Pulse in action with our &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/SCREENSHOTS.md"&gt;complete screenshot gallery →&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Core Features&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Dashboard&lt;/th&gt; 
   &lt;th&gt;Storage&lt;/th&gt; 
   &lt;th&gt;Backups&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/01-dashboard.png" alt="Dashboard" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/02-storage.png" alt="Storage" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/03-backups.png" alt="Backups" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Real-time monitoring of nodes, VMs &amp;amp; containers&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;Storage pool usage across all nodes&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;Unified backup management &amp;amp; PBS integration&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Alerts &amp;amp; Configuration&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Alert Configuration&lt;/th&gt; 
   &lt;th&gt;Alert History&lt;/th&gt; 
   &lt;th&gt;Settings&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/04-alerts.png" alt="Alerts" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/05-alert-history.png" alt="Alert History" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/06-settings.png" alt="Settings" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Configure thresholds &amp;amp; notifications&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;Track patterns with visual timeline&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;Manage nodes &amp;amp; authentication&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Mobile Experience&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Mobile Dashboard&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/08-mobile.png" alt="Mobile" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Fully responsive interface for monitoring on the go&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rcourtman/Pulse/releases"&gt;Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/rcourtman/pulse"&gt;Docker Hub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rcourtman/Pulse/issues"&gt;Issues&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT - See &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>google/mangle</title>
      <link>https://github.com/google/mangle</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mangle&lt;/h1&gt; 
&lt;p&gt;Mangle is a programming language for deductive database programming. It is an extension of Datalog, with various extensions like aggregation, function calls and optional type-checking.&lt;/p&gt; 
&lt;p&gt;Deductive database programming is useful for bringing data from multiple data sources together since it enables us to represent and query that data in a uniform way. It can also be used to model domain knowledge, similar to machine-readable ontology but without being restricted to binary predicates.&lt;/p&gt; 
&lt;p&gt;Datalog is an expressive declarative language similar to relational calculus (think SQL and relational views). Unlike relational calculus, it also supports recursive rules and program structuring in a straightforward way.&lt;/p&gt; 
&lt;p&gt;Mangle contains Datalog as a fragment and adds extensions that make its use more practical. Some of the good properties like guaranteed termination are lost when such extensions are used.&lt;/p&gt; 
&lt;p&gt;The goal of Mangle as an open source project is to convey the concepts in a way that is accessible to developers and lends itself to easy experimentation. This repository contains an implementation of Mangle as a go library that can be easily embedded into applications.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href="https://raw.githubusercontent.com/google/mangle/main/docs/README.md"&gt;docs&lt;/a&gt; and the &lt;a href="https://github.com/google/mangle/discussions"&gt;GitHub discussions&lt;/a&gt; for more information. There is also a Q&amp;amp;A section.&lt;/p&gt; 
&lt;p&gt;For an example how to use Mangle library in a database-like grpc service, see the separate &lt;a href="https://github.com/burakemir/mangle-service"&gt;Mangle demo service repo&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This is not an officially supported Google product.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/mangle/main/#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/mangle/main/#building"&gt;Building&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;h3&gt;Simple Queries&lt;/h3&gt; 
&lt;p&gt;Imagine you were asked to spot software affected by the &lt;a href="https://www.cisa.gov/uscert/apache-log4j-vulnerability-guidance"&gt;log4j vulnerability discovered in late 2021&lt;/a&gt;. We want to look for projects that contain a Java archive (jar file) of log4j that is not updated to the patched version.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-prolog"&gt;projects_with_vulnerable_log4j(P) :-
  projects(P),
  contains_jar(P, "log4j", Version),
  Version != "2.17.1",
  Version != "2.12.4",
  Version != "2.3.2".
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is a Mangle &lt;em&gt;rule&lt;/em&gt;: conceptually, the implementation retrieve all possible values for variables &lt;code&gt;P&lt;/code&gt; and &lt;code&gt;Version&lt;/code&gt; that make all the subgoals true.&lt;/p&gt; 
&lt;p&gt;Simple Mangle rules like this correspond to select-project-join relational queries. The same query in SQL would look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;SELECT projects.id as P
FROM projects JOIN contains_jar ON projects.id = contains_jar.project_id
WHERE contains_jar.version NOT IN ("2.17.1", "2.12.4", "2.3.2")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Unlike SQL, our Mangle rule &lt;code&gt;projects_with_vulnerable_log4j&lt;/code&gt; has a name and can be referenced in other queries.&lt;/p&gt; 
&lt;p&gt;(If translating non-recursive Datalog into SQL queries sounds interesting, you should check out the &lt;a href="https://logica.dev/"&gt;Logica&lt;/a&gt; open source project.)&lt;/p&gt; 
&lt;h3&gt;Aggregation&lt;/h3&gt; 
&lt;p&gt;In practice, querying is rarely enough and we also need grouping and aggregation.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;count_projects_with_vulnerable_log4j(Num) :-
  projects_with_vulnerable_log4j(P) |&amp;gt; do fn:group_by(), let Num = fn:Count().
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Recursive Queries&lt;/h3&gt; 
&lt;p&gt;The example does not specify what &lt;code&gt;contains_jar&lt;/code&gt; does. Here is a possible implementation for &lt;code&gt;contains_jar&lt;/code&gt; that walks a dependency graph. This shows that Mangle rules can be recursive.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;contains_jar(P, Name, Version) :-
  contains_jar_directly(P, Name, Version).

contains_jar(P, Name, Version) :-
  project_depends(P, Q),
  contains_jar(Q, Name, Version).
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The two rules correspond to two cases in which a project may "contain" a jar: either directly, or through some dependency.&lt;/p&gt; 
&lt;h3&gt;Knowledge Graphs, Property Graphs&lt;/h3&gt; 
&lt;p&gt;In requirements engineering, one needs to captures real world concepts in a domain model and controlled vocabulary. Description logics use roles to describe how concepts interact, but these relationships are always binary. Mangle can represent binary predicates, but also arbitrary n-ary relations. Moreover it also has support for structured data.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;one_or_two_leg_trip(Codes, Start, Destination, Price) :-
  direct_conn(Code, Start, Destination, Price)
  |&amp;gt; let Codes = [Code].

one_or_two_leg_trip(Codes, Start, Destination, Price) :-
  direct_conn(FirstCode, Start, Connecting, FirstLegPrice).
  direct_conn(SecondCode, Connecting, Destination, SecondLegPrice)
  |&amp;gt; let Code = [FirstCode, SecondCode],
     let Price = fn:plus(FirstLegPrice, SecondLegPrice).

&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-mermaid"&gt;graph LR
    /zurich --&amp;gt;|/code/ZL &amp;lt;br /&amp;gt; 60 CHF| /lausanne
    /zurich --&amp;gt;|/code/ZB &amp;lt;br /&amp;gt; 30 CHF| /bern
    /bern --&amp;gt;|/code/BL &amp;lt;br /&amp;gt; 30 CHF| /lausanne
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Building &amp;amp; Testing&lt;/h2&gt; 
&lt;p&gt;Get the dependencies (see &lt;a href="https://raw.githubusercontent.com/google/mangle/main/go.mod"&gt;go.mod&lt;/a&gt;), build the library, run tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go get -t ./...
go build ./...
go test ./...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Regenerating the parser sources&lt;/h3&gt; 
&lt;p&gt;If you want to regenerate the parser sources, you need to set up ANTLR first. This requires a Java runtime environment.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;wget http://www.antlr.org/download/antlr-4.13.2-complete.jar
alias antlr='java -jar $PWD/antlr-4.13.2-complete.jar'
antlr -Dlanguage=Go -package gen -o ./ parse/gen/Mangle.g4 -visitor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The Mangle maintainers welcome external contributions to spec, documentation and this implementation (see &lt;a href="https://raw.githubusercontent.com/google/mangle/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;) and also other implementations. Pull requests will be handled &lt;a href="https://github.com/tensorflow/tensorflow/raw/master/CONTRIBUTING.md"&gt;like for tensorflow&lt;/a&gt;, to ensure our internal usage and tests will pass.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mayswind/ezbookkeeping</title>
      <link>https://github.com/mayswind/ezbookkeeping</link>
      <description>&lt;p&gt;A lightweight, self-hosted personal finance app with a user-friendly interface and powerful bookkeeping features.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ezBookkeeping&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/mayswind/ezbookkeeping/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-green.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mayswind/ezbookkeeping/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/mayswind/ezbookkeeping/docker-snapshot.yml?branch=main" alt="Latest Build" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/mayswind/ezbookkeeping"&gt;&lt;img src="https://goreportcard.com/badge/github.com/mayswind/ezbookkeeping" alt="Go Report" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/mayswind/ezbookkeeping"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/mayswind/ezbookkeeping"&gt;&lt;img src="https://img.shields.io/docker/image-size/mayswind/ezbookkeeping.svg?style=flat" alt="Latest Docker Image Size" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mayswind/ezbookkeeping/releases"&gt;&lt;img src="https://img.shields.io/github/release/mayswind/ezbookkeeping.svg?style=flat" alt="Latest Release" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hellogithub.com/en/repository/mayswind/ezbookkeeping"&gt;&lt;img src="https://api.hellogithub.com/v1/widgets/recommend.svg?rid=ded5af09da574ec1811ddb154f1b2093&amp;amp;claim_uid=LT7EZxeBukCnh0K" alt="Recommend By HelloGitHub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;ezBookkeeping is a lightweight, self-hosted personal finance app with a user-friendly interface and powerful bookkeeping features. It's easy to deploy, and you can start it with just one single Docker command. Designed to be resource-efficient and highly scalable, it can run smoothly on devices as small as a Raspberry Pi, or scale up to NAS, MicroServers, and even large cluster environments.&lt;/p&gt; 
&lt;p&gt;ezBookkeeping offers tailored interfaces for both mobile and desktop devices. With support for PWA (Progressive Web Apps), you can even &lt;a href="https://raw.githubusercontent.com/wiki/mayswind/ezbookkeeping/img/mobile/add_to_home_screen.gif"&gt;add it to your mobile home screen&lt;/a&gt; and use it like a native app.&lt;/p&gt; 
&lt;p&gt;Live Demo: &lt;a href="https://ezbookkeeping-demo.mayswind.net"&gt;https://ezbookkeeping-demo.mayswind.net&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Open Source &amp;amp; Self-Hosted&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Built for privacy and control&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lightweight &amp;amp; Fast&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Optimized for performance, runs smoothly even on low-resource environments&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy Installation&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Docker-ready&lt;/li&gt; 
   &lt;li&gt;Supports SQLite, MySQL, PostgreSQL&lt;/li&gt; 
   &lt;li&gt;Cross-platform (Windows, macOS, Linux)&lt;/li&gt; 
   &lt;li&gt;Works on x86, amd64, ARM architectures&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User-Friendly Interface&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;UI optimized for both mobile and desktop&lt;/li&gt; 
   &lt;li&gt;PWA support for native-like mobile experience&lt;/li&gt; 
   &lt;li&gt;Dark mode&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI-Powered Features&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Supports MCP (Model Context Protocol) for AI integration&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Powerful Bookkeeping&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Two-level accounts and categories&lt;/li&gt; 
   &lt;li&gt;Attach images to transactions&lt;/li&gt; 
   &lt;li&gt;Location tracking with maps&lt;/li&gt; 
   &lt;li&gt;Recurring transactions&lt;/li&gt; 
   &lt;li&gt;Advanced filtering, search, visualization, and analysis&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Localization &amp;amp; Globalization&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Multi-language and multi-currency support&lt;/li&gt; 
   &lt;li&gt;Automatic exchange rates&lt;/li&gt; 
   &lt;li&gt;Multi-timezone awareness&lt;/li&gt; 
   &lt;li&gt;Custom formats for dates, numbers, and currencies&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Two-factor authentication (2FA)&lt;/li&gt; 
   &lt;li&gt;Login rate limiting&lt;/li&gt; 
   &lt;li&gt;Application lock (PIN code / WebAuthn)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data Import/Export&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Supports CSV, OFX, QFX, QIF, IIF, Camt.053, MT940, GnuCash, Firefly III, Beancount, and more&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;h3&gt;Desktop Version&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/wiki/mayswind/ezbookkeeping/img/desktop/en.png"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/mayswind/ezbookkeeping/img/desktop/en.png" alt="ezBookkeeping" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Mobile Version&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/wiki/mayswind/ezbookkeeping/img/mobile/en.png"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/mayswind/ezbookkeeping/img/mobile/en.png" alt="ezBookkeeping" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Run with Docker&lt;/h3&gt; 
&lt;p&gt;Visit &lt;a href="https://hub.docker.com/r/mayswind/ezbookkeeping"&gt;Docker Hub&lt;/a&gt; to see all images and tags.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Latest Release:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ docker run -p8080:8080 mayswind/ezbookkeeping
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Latest Daily Build:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ docker run -p8080:8080 mayswind/ezbookkeeping:latest-snapshot
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install from Binary&lt;/h3&gt; 
&lt;p&gt;Download the latest release: &lt;a href="https://github.com/mayswind/ezbookkeeping/releases"&gt;https://github.com/mayswind/ezbookkeeping/releases&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Linux / macOS&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ ./ezbookkeeping server run
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt; .\ezbookkeeping.exe server run
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, ezBookkeeping listens on port 8080. You can then visit &lt;code&gt;http://{YOUR_HOST_ADDRESS}:8080/&lt;/code&gt; .&lt;/p&gt; 
&lt;h3&gt;Build from Source&lt;/h3&gt; 
&lt;p&gt;Make sure you have &lt;a href="https://golang.org/"&gt;Golang&lt;/a&gt;, &lt;a href="http://gcc.gnu.org/"&gt;GCC&lt;/a&gt;, &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; and &lt;a href="https://www.npmjs.com/"&gt;NPM&lt;/a&gt; installed. Then download the source code, and follow these steps:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Linux / macOS&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ ./build.sh package -o ezbookkeeping.tar.gz
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All the files will be packaged in &lt;code&gt;ezbookkeeping.tar.gz&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt; .\build.bat package -o ezbookkeeping.zip
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All the files will be packaged in &lt;code&gt;ezbookkeeping.zip&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can also build a Docker image. Make sure you have &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; installed, then follow these steps:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ ./build.sh docker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions of all kinds.&lt;/p&gt; 
&lt;p&gt;Found a bug? &lt;a href="https://github.com/mayswind/ezbookkeeping/issues"&gt;Submit an issue&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Want to contribute code? Feel free to fork and send a pull request.&lt;/p&gt; 
&lt;p&gt;Contributions of all kinds — bug reports, feature suggestions, documentation improvements, or code — are highly appreciated.&lt;/p&gt; 
&lt;p&gt;Check out our &lt;a href="https://github.com/mayswind/ezbookkeeping/graphs/contributors"&gt;Contributor Graph&lt;/a&gt; to see the amazing people who’ve already helped.&lt;/p&gt; 
&lt;h2&gt;Translating&lt;/h2&gt; 
&lt;p&gt;Help make ezBookkeeping accessible to users around the world. If you want to contribute a translation, please refer to our &lt;a href="https://ezbookkeeping.mayswind.net/translating"&gt;translation guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Currently available translations:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tag&lt;/th&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Contributors&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;de&lt;/td&gt; 
   &lt;td&gt;Deutsch&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/chrgm"&gt;@chrgm&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;en&lt;/td&gt; 
   &lt;td&gt;English&lt;/td&gt; 
   &lt;td&gt;/&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;es&lt;/td&gt; 
   &lt;td&gt;Español&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Miguelonlonlon"&gt;@Miguelonlonlon&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;it&lt;/td&gt; 
   &lt;td&gt;Italiano&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/waron97"&gt;@waron97&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ja&lt;/td&gt; 
   &lt;td&gt;日本語&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/tkymmm"&gt;@tkymmm&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nl&lt;/td&gt; 
   &lt;td&gt;Nederlands&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/automagics"&gt;@automagic&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pt-BR&lt;/td&gt; 
   &lt;td&gt;Português (Brasil)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/thecodergus"&gt;@thecodergus&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ru&lt;/td&gt; 
   &lt;td&gt;Русский&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/artegoser"&gt;@artegoser&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uk&lt;/td&gt; 
   &lt;td&gt;Українська&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/nktlitvinenko"&gt;@nktlitvinenko&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;vi&lt;/td&gt; 
   &lt;td&gt;Tiếng Việt&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/f97"&gt;@f97&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;zh-Hans&lt;/td&gt; 
   &lt;td&gt;中文 (简体)&lt;/td&gt; 
   &lt;td&gt;/&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;zh-Hant&lt;/td&gt; 
   &lt;td&gt;中文 (繁體)&lt;/td&gt; 
   &lt;td&gt;/&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Don't see your language? Help us add it.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="http://ezbookkeeping.mayswind.net"&gt;English&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://ezbookkeeping.mayswind.net/zh_Hans"&gt;中文 (简体)&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/mayswind/ezbookkeeping/raw/master/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>spf13/cobra</title>
      <link>https://github.com/spf13/cobra</link>
      <description>&lt;p&gt;A Commander for modern Go CLI interactions&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://cobra.dev"&gt; &lt;img width="512" height="535" alt="cobra-logo" src="https://github.com/user-attachments/assets/c8bf9aad-b5ae-41d3-8899-d83baec10af8" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;Cobra is a library for creating powerful modern CLI applications.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://cobra.dev"&gt;Visit Cobra.dev for extensive documentation&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Cobra is used in many Go projects such as &lt;a href="https://kubernetes.io/"&gt;Kubernetes&lt;/a&gt;, &lt;a href="https://gohugo.io"&gt;Hugo&lt;/a&gt;, and &lt;a href="https://github.com/cli/cli"&gt;GitHub CLI&lt;/a&gt; to name a few. &lt;a href="https://raw.githubusercontent.com/spf13/cobra/main/site/content/projects_using_cobra.md"&gt;This list&lt;/a&gt; contains a more extensive list of projects using Cobra.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/spf13/cobra/actions?query=workflow%3ATest"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/spf13/cobra/test.yml?branch=main&amp;amp;longCache=true&amp;amp;label=Test&amp;amp;logo=github%20actions&amp;amp;logoColor=fff" alt="" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/spf13/cobra"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/spf13/cobra.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/spf13/cobra"&gt;&lt;img src="https://goreportcard.com/badge/github.com/spf13/cobra" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://gophers.slack.com/archives/CD3LP1199"&gt;&lt;img src="https://img.shields.io/badge/Slack-cobra-brightgreen" alt="Slack" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center" markdown="1"&gt; 
 &lt;sup&gt;Supported by:&lt;/sup&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.warp.dev/cobra"&gt; &lt;img alt="Warp sponsorship" width="400" src="https://github.com/user-attachments/assets/ab8dd143-b0fd-4904-bdc5-dd7ecac94eae" /&gt; &lt;/a&gt; 
 &lt;h3&gt;&lt;a href="https://www.warp.dev/cobra"&gt;Warp, the AI terminal for devs&lt;/a&gt;&lt;/h3&gt; 
 &lt;p&gt;&lt;a href="https://www.warp.dev/cobra"&gt;Try Cobra in Warp today&lt;/a&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Overview&lt;/h1&gt; 
&lt;p&gt;Cobra is a library providing a simple interface to create powerful modern CLI interfaces similar to git &amp;amp; go tools.&lt;/p&gt; 
&lt;p&gt;Cobra provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Easy subcommand-based CLIs: &lt;code&gt;app server&lt;/code&gt;, &lt;code&gt;app fetch&lt;/code&gt;, etc.&lt;/li&gt; 
 &lt;li&gt;Fully POSIX-compliant flags (including short &amp;amp; long versions)&lt;/li&gt; 
 &lt;li&gt;Nested subcommands&lt;/li&gt; 
 &lt;li&gt;Global, local and cascading flags&lt;/li&gt; 
 &lt;li&gt;Intelligent suggestions (&lt;code&gt;app srver&lt;/code&gt;... did you mean &lt;code&gt;app server&lt;/code&gt;?)&lt;/li&gt; 
 &lt;li&gt;Automatic help generation for commands and flags&lt;/li&gt; 
 &lt;li&gt;Grouping help for subcommands&lt;/li&gt; 
 &lt;li&gt;Automatic help flag recognition of &lt;code&gt;-h&lt;/code&gt;, &lt;code&gt;--help&lt;/code&gt;, etc.&lt;/li&gt; 
 &lt;li&gt;Automatically generated shell autocomplete for your application (bash, zsh, fish, powershell)&lt;/li&gt; 
 &lt;li&gt;Automatically generated man pages for your application&lt;/li&gt; 
 &lt;li&gt;Command aliases so you can change things without breaking them&lt;/li&gt; 
 &lt;li&gt;The flexibility to define your own help, usage, etc.&lt;/li&gt; 
 &lt;li&gt;Optional seamless integration with &lt;a href="https://github.com/spf13/viper"&gt;viper&lt;/a&gt; for 12-factor apps&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Concepts&lt;/h1&gt; 
&lt;p&gt;Cobra is built on a structure of commands, arguments &amp;amp; flags.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Commands&lt;/strong&gt; represent actions, &lt;strong&gt;Args&lt;/strong&gt; are things and &lt;strong&gt;Flags&lt;/strong&gt; are modifiers for those actions.&lt;/p&gt; 
&lt;p&gt;The best applications read like sentences when used, and as a result, users intuitively know how to interact with them.&lt;/p&gt; 
&lt;p&gt;The pattern to follow is &lt;code&gt;APPNAME VERB NOUN --ADJECTIVE&lt;/code&gt; or &lt;code&gt;APPNAME COMMAND ARG --FLAG&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A few good real world examples may better illustrate this point.&lt;/p&gt; 
&lt;p&gt;In the following example, 'server' is a command, and 'port' is a flag:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;hugo server --port=1313
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In this command we are telling Git to clone the url bare.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone URL --bare
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Commands&lt;/h2&gt; 
&lt;p&gt;Command is the central point of the application. Each interaction that the application supports will be contained in a Command. A command can have children commands and optionally run an action.&lt;/p&gt; 
&lt;p&gt;In the example above, 'server' is the command.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/spf13/cobra#Command"&gt;More about cobra.Command&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Flags&lt;/h2&gt; 
&lt;p&gt;A flag is a way to modify the behavior of a command. Cobra supports fully POSIX-compliant flags as well as the Go &lt;a href="https://golang.org/pkg/flag/"&gt;flag package&lt;/a&gt;. A Cobra command can define flags that persist through to children commands and flags that are only available to that command.&lt;/p&gt; 
&lt;p&gt;In the example above, 'port' is the flag.&lt;/p&gt; 
&lt;p&gt;Flag functionality is provided by the &lt;a href="https://github.com/spf13/pflag"&gt;pflag library&lt;/a&gt;, a fork of the flag standard library which maintains the same interface while adding POSIX compliance.&lt;/p&gt; 
&lt;h1&gt;Installing&lt;/h1&gt; 
&lt;p&gt;Using Cobra is easy. First, use &lt;code&gt;go get&lt;/code&gt; to install the latest version of the library.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go get -u github.com/spf13/cobra@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, include Cobra in your application:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import "github.com/spf13/cobra"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;cobra-cli&lt;/code&gt; is a command line program to generate cobra applications and command files. It will bootstrap your application scaffolding to rapidly develop a Cobra-based application. It is the easiest way to incorporate Cobra into your application.&lt;/p&gt; 
&lt;p&gt;It can be installed by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go install github.com/spf13/cobra-cli@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For complete details on using the Cobra-CLI generator, please read &lt;a href="https://github.com/spf13/cobra-cli/raw/main/README.md"&gt;The Cobra Generator README&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For complete details on using the Cobra library, please read &lt;a href="https://raw.githubusercontent.com/spf13/cobra/main/site/content/user_guide.md"&gt;The Cobra User Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Cobra is released under the Apache 2.0 license. See &lt;a href="https://raw.githubusercontent.com/spf13/cobra/main/LICENSE.txt"&gt;LICENSE.txt&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ipfs/kubo</title>
      <link>https://github.com/ipfs/kubo</link>
      <description>&lt;p&gt;An IPFS implementation in Go&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;br /&gt; &lt;a href="https://docs.ipfs.tech/how-to/command-line-quick-start/"&gt;&lt;img src="https://user-images.githubusercontent.com/157609/250148884-d6d12db8-fdcf-4be3-8546-2550b69845d8.png" alt="Kubo logo" title="Kubo logo" width="200" /&gt;&lt;/a&gt; &lt;br /&gt; Kubo: IPFS Implementation in GO &lt;br /&gt; &lt;/h1&gt; 
&lt;p align="center" style="font-size: 1.2rem;"&gt;The first implementation of IPFS.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://ipfs.tech"&gt;&lt;img src="https://img.shields.io/badge/project-IPFS-blue.svg?style=flat-square" alt="Official Part of IPFS Project" /&gt;&lt;/a&gt; &lt;a href="https://discuss.ipfs.tech"&gt;&lt;img alt="Discourse Forum" src="https://img.shields.io/discourse/posts?server=https%3A%2F%2Fdiscuss.ipfs.tech" /&gt;&lt;/a&gt; &lt;a href="https://matrix.to/#/#ipfs-space:ipfs.io"&gt;&lt;img alt="Matrix" src="https://img.shields.io/matrix/ipfs-space%3Aipfs.io?server_fqdn=matrix.org" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ipfs/kubo/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/ipfs/kubo/gobuild.yml?branch=master" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ipfs/kubo/releases"&gt;&lt;img alt="GitHub release" src="https://img.shields.io/github/v/release/ipfs/kubo?filter=!*rc*" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;What is Kubo?&lt;/h2&gt; 
&lt;p&gt;Kubo was the first IPFS implementation and is the most widely used one today. Implementing the &lt;em&gt;Interplanetary Filesystem&lt;/em&gt; - the standard for content-addressing on the Web, interoperable with HTTP. Thus powered by future-proof data models and the libp2p for network communication. Kubo is written in Go.&lt;/p&gt; 
&lt;p&gt;Featureset&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Runs an IPFS-Node as a network service that is part of LAN and WAN DHT&lt;/li&gt; 
 &lt;li&gt;Native support for UnixFS (most popular way to represent files and directories on IPFS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://specs.ipfs.tech/http-gateways/"&gt;HTTP Gateway&lt;/a&gt; (&lt;code&gt;/ipfs&lt;/code&gt; and &lt;code&gt;/ipns&lt;/code&gt;) functionality for trusted and &lt;a href="https://docs.ipfs.tech/reference/http/gateway/#trustless-verifiable-retrieval"&gt;trustless&lt;/a&gt; content retrieval&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://specs.ipfs.tech/routing/http-routing-v1/"&gt;HTTP Routing V1&lt;/a&gt; (&lt;code&gt;/routing/v1&lt;/code&gt;) client and server implementation for &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/delegated-routing.md"&gt;delegated routing&lt;/a&gt; lookups&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.ipfs.tech/reference/kubo/rpc/"&gt;HTTP Kubo RPC API&lt;/a&gt; (&lt;code&gt;/api/v0&lt;/code&gt;) to access and control the daemon&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.ipfs.tech/reference/kubo/cli/"&gt;Command Line Interface&lt;/a&gt; based on (&lt;code&gt;/api/v0&lt;/code&gt;) RPC API&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ipfs/ipfs-webui/#readme"&gt;WebUI&lt;/a&gt; to manage the Kubo node&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/content-blocking.md"&gt;Content blocking&lt;/a&gt; support for operators of public nodes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Other implementations&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://docs.ipfs.tech/basics/ipfs-implementations/"&gt;List&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is IPFS?&lt;/h2&gt; 
&lt;p&gt;IPFS is a global, versioned, peer-to-peer filesystem. It combines good ideas from previous systems such as Git, BitTorrent, Kademlia, SFS, and the Web. It is like a single BitTorrent swarm, exchanging git objects. IPFS provides an interface as simple as the HTTP web, but with permanence built-in. You can also mount the world at /ipfs.&lt;/p&gt; 
&lt;p&gt;For more info see: &lt;a href="https://docs.ipfs.tech/concepts/what-is-ipfs/"&gt;https://docs.ipfs.tech/concepts/what-is-ipfs/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Before opening an issue, consider using one of the following locations to ensure you are opening your thread in the right place:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;kubo (previously named go-ipfs) &lt;em&gt;implementation&lt;/em&gt; bugs in &lt;a href="https://github.com/ipfs/kubo/issues"&gt;this repo&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Documentation issues in &lt;a href="https://github.com/ipfs/ipfs-docs/issues"&gt;ipfs/docs issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;IPFS &lt;em&gt;design&lt;/em&gt; in &lt;a href="https://github.com/ipfs/specs/issues"&gt;ipfs/specs issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Exploration of new ideas in &lt;a href="https://github.com/ipfs/notes/issues"&gt;ipfs/notes issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Ask questions and meet the rest of the community at the &lt;a href="https://discuss.ipfs.tech"&gt;IPFS Forum&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Or &lt;a href="https://docs.ipfs.tech/community/chat/"&gt;chat with us&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCdjsUXJ3QawK4O5L1kqqsew"&gt;&lt;img src="https://img.shields.io/youtube/channel/subscribers/UCdjsUXJ3QawK4O5L1kqqsew?label=Subscribe%20IPFS&amp;amp;style=social&amp;amp;cacheSeconds=3600" alt="YouTube Channel Subscribers" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/IPFS"&gt;&lt;img src="https://img.shields.io/twitter/follow/IPFS?style=social&amp;amp;cacheSeconds=3600" alt="Follow @IPFS on Twitter" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Next milestones&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/ipfs/kubo/milestones"&gt;Milestones on GitHub&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#what-is-kubo"&gt;What is Kubo?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#what-is-ipfs"&gt;What is IPFS?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#next-milestones"&gt;Next milestones&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#security-issues"&gt;Security Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#install"&gt;Install&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#minimal-system-requirements"&gt;Minimal System Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#docker"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#official-prebuilt-binaries"&gt;Official prebuilt binaries&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#updating"&gt;Updating&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#downloading-builds-using-ipfs"&gt;Downloading builds using IPFS&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#unofficial-linux-packages"&gt;Unofficial Linux packages&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#arch-linux"&gt;ArchLinux&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#gentoo-linux"&gt;Gentoo Linux&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#nix"&gt;Nix&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#solus"&gt;Solus&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#opensuse"&gt;openSUSE&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#guix"&gt;Guix&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#snap"&gt;Snap&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#ubuntu-ppa"&gt;Ubuntu PPA&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#fedora-copr"&gt;Fedora&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#unofficial-windows-packages"&gt;Unofficial Windows packages&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#chocolatey"&gt;Chocolatey&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#scoop"&gt;Scoop&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#unofficial-macos-packages"&gt;Unofficial MacOS packages&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#macports"&gt;MacPorts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#nix-macos"&gt;Nix&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#homebrew"&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#build-from-source"&gt;Build from Source&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#install-go"&gt;Install Go&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#download-and-compile-ipfs"&gt;Download and Compile IPFS&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#cross-compiling"&gt;Cross Compiling&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#getting-started"&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#some-things-to-try"&gt;Some things to try&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#troubleshooting-1"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#packages"&gt;Packages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#development"&gt;Development&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#map-of-implemented-subsystems"&gt;Map of Implemented Subsystems&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#cli-http-api-architecture-diagram"&gt;CLI, HTTP-API, Architecture Diagram&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#testing"&gt;Testing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#development-dependencies"&gt;Development Dependencies&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#developer-notes"&gt;Developer Notes&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#maintainer-info"&gt;Maintainer Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security Issues&lt;/h2&gt; 
&lt;p&gt;Please follow &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/SECURITY.md"&gt;&lt;code&gt;SECURITY.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;The canonical download instructions for IPFS are over at: &lt;a href="https://docs.ipfs.tech/install/"&gt;https://docs.ipfs.tech/install/&lt;/a&gt;. It is &lt;strong&gt;highly recommended&lt;/strong&gt; you follow those instructions if you are not interested in working on IPFS development.&lt;/p&gt; 
&lt;p&gt;For production use, Release Docker images (below) are recommended.&lt;/p&gt; 
&lt;h3&gt;Minimal System Requirements&lt;/h3&gt; 
&lt;p&gt;Kubo runs on most Linux, macOS, and Windows systems. For optimal performance, we recommend at least 6 GB of RAM and 2 CPU cores (more is ideal, as Kubo is highly parallel).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Larger pinsets require additional memory, with an estimated ~1 GiB of RAM per 20 million items for reproviding to the Amino DHT.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] Systems with less than the recommended memory may experience instability, frequent OOM errors or restarts, and missing data announcement (reprovider window), which can make data fully or partially inaccessible to other peers. Running Kubo on underprovisioned hardware is at your own risk.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;Official images are published at &lt;a href="https://hub.docker.com/r/ipfs/kubo/"&gt;https://hub.docker.com/r/ipfs/kubo/&lt;/a&gt;: &lt;a href="https://hub.docker.com/r/ipfs/kubo/"&gt;&lt;img src="https://img.shields.io/docker/v/ipfs/kubo?color=blue&amp;amp;label=kubo%20docker%20image&amp;amp;logo=docker&amp;amp;sort=semver&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="Docker Image Version (latest semver)" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;🟢 Release Images&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;These are production grade images. Use them.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;latest&lt;/code&gt; and &lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=release"&gt;&lt;code&gt;release&lt;/code&gt;&lt;/a&gt; tags always point at &lt;a href="https://github.com/ipfs/kubo/releases/latest"&gt;the latest stable release&lt;/a&gt;. If you use this, remember to &lt;code&gt;docker pull&lt;/code&gt; periodically to update.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=v"&gt;&lt;code&gt;vN.N.N&lt;/code&gt;&lt;/a&gt; points at a specific &lt;a href="https://github.com/ipfs/kubo/releases"&gt;release tag&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🟠 Developer Preview Images&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;These tags are used by developers for internal testing, not intended for end users or production use.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=master-latest"&gt;&lt;code&gt;master-latest&lt;/code&gt;&lt;/a&gt; always points at the &lt;code&gt;HEAD&lt;/code&gt; of the &lt;a href="https://github.com/ipfs/kubo/commits/master/"&gt;&lt;code&gt;master&lt;/code&gt;&lt;/a&gt; branch&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=master-2"&gt;&lt;code&gt;master-YYYY-DD-MM-GITSHA&lt;/code&gt;&lt;/a&gt; points at a specific commit from the &lt;code&gt;master&lt;/code&gt; branch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🔴 Internal Staging Images&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;We use &lt;code&gt;staging&lt;/code&gt; for testing arbitrary commits and experimental patches. 
  &lt;ul&gt; 
   &lt;li&gt;To build image for current HEAD, force push to &lt;code&gt;staging&lt;/code&gt; via &lt;code&gt;git push origin HEAD:staging --force&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=staging-latest"&gt;&lt;code&gt;staging-latest&lt;/code&gt;&lt;/a&gt; always points at the &lt;code&gt;HEAD&lt;/code&gt; of the &lt;a href="https://github.com/ipfs/kubo/commits/staging/"&gt;&lt;code&gt;staging&lt;/code&gt;&lt;/a&gt; branch&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=staging-2"&gt;&lt;code&gt;staging-YYYY-DD-MM-GITSHA&lt;/code&gt;&lt;/a&gt; points at a specific commit from the &lt;code&gt;staging&lt;/code&gt; branch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ docker pull ipfs/kubo:latest
$ docker run --rm -it --net=host ipfs/kubo:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To &lt;a href="https://docs.ipfs.tech/install/run-ipfs-inside-docker/#customizing-your-node"&gt;customize your node&lt;/a&gt;, pass necessary config via &lt;code&gt;-e&lt;/code&gt; or by mounting scripts in the &lt;code&gt;/container-init.d&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Learn more at &lt;a href="https://docs.ipfs.tech/install/run-ipfs-inside-docker/"&gt;https://docs.ipfs.tech/install/run-ipfs-inside-docker/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Official prebuilt binaries&lt;/h3&gt; 
&lt;p&gt;The official binaries are published at &lt;a href="https://dist.ipfs.tech#kubo"&gt;https://dist.ipfs.tech#kubo&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://dist.ipfs.tech#kubo"&gt;&lt;img src="https://img.shields.io/github/v/release/ipfs/kubo?label=dist.ipfs.tech&amp;amp;logo=ipfs&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="dist.ipfs.tech Downloads" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;From there:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Click the blue "Download Kubo" on the right side of the page.&lt;/li&gt; 
 &lt;li&gt;Open/extract the archive.&lt;/li&gt; 
 &lt;li&gt;Move kubo (&lt;code&gt;ipfs&lt;/code&gt;) to your path (&lt;code&gt;install.sh&lt;/code&gt; can do it for you).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are unable to access &lt;a href="https://dist.ipfs.tech#kubo"&gt;dist.ipfs.tech&lt;/a&gt;, you can also download kubo from:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;this project's GitHub &lt;a href="https://github.com/ipfs/kubo/releases/latest"&gt;releases&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/ipns/dist.ipfs.tech&lt;/code&gt; at &lt;a href="https://dweb.link/ipns/dist.ipfs.tech#kubo"&gt;dweb.link&lt;/a&gt; gateway&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Updating&lt;/h4&gt; 
&lt;h5&gt;Downloading builds using IPFS&lt;/h5&gt; 
&lt;p&gt;List the available versions of Kubo implementation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ ipfs cat /ipns/dist.ipfs.tech/kubo/versions
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, to view available builds for a version from the previous command (&lt;code&gt;$VERSION&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ ipfs ls /ipns/dist.ipfs.tech/kubo/$VERSION
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To download a given build of a version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_darwin-386.tar.gz    # darwin 32-bit build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_darwin-amd64.tar.gz  # darwin 64-bit build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_freebsd-amd64.tar.gz # freebsd 64-bit build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_linux-386.tar.gz     # linux 32-bit build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_linux-amd64.tar.gz   # linux 64-bit build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_linux-arm.tar.gz     # linux arm build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_windows-amd64.zip    # windows 64-bit build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Unofficial Linux packages&lt;/h3&gt; 
&lt;a href="https://repology.org/project/kubo/versions"&gt; &lt;img src="https://repology.org/badge/vertical-allrepos/kubo.svg?sanitize=true" alt="Packaging status" align="right" /&gt; &lt;/a&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#arch-linux"&gt;ArchLinux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#gentoo-linux"&gt;Gentoo Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#nix-linux"&gt;Nix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#solus"&gt;Solus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#opensuse"&gt;openSUSE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#guix"&gt;Guix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#snap"&gt;Snap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#ubuntu-ppa"&gt;Ubuntu PPA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#fedora-copr"&gt;Fedora&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Arch Linux&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://wiki.archlinux.org/title/IPFS"&gt;&lt;img src="https://img.shields.io/archlinux/v/community/x86_64/kubo?color=1793d1&amp;amp;label=kubo&amp;amp;logo=arch-linux&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="kubo via Community Repo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# pacman -S kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://archlinux.org/packages/kubo/"&gt;&lt;img src="https://img.shields.io/static/v1?label=kubo-git&amp;amp;message=latest%40master&amp;amp;color=1793d1&amp;amp;logo=arch-linux&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="kubo-git via AUR" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a name="gentoo-linux"&gt;Gentoo Linux&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://wiki.gentoo.org/wiki/Kubo"&gt;https://wiki.gentoo.org/wiki/Kubo&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# emerge -a net-p2p/kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://packages.gentoo.org/packages/net-p2p/kubo"&gt;https://packages.gentoo.org/packages/net-p2p/kubo&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a name="nix-linux"&gt;Nix&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;With the purely functional package manager &lt;a href="https://nixos.org/nix/"&gt;Nix&lt;/a&gt; you can install kubo like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ nix-env -i kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also install the Package by using its attribute name, which is also &lt;code&gt;kubo&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Solus&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://dev.getsol.us/source/kubo/repository/master/"&gt;Package for Solus&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo eopkg install kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also install it through the Solus software center.&lt;/p&gt; 
&lt;h4&gt;openSUSE&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://software.opensuse.org/package/kubo"&gt;Community Package for kubo&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Guix&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://packages.guix.gnu.org/search/?query=kubo"&gt;Community Package for kubo&lt;/a&gt; is available.&lt;/p&gt; 
&lt;h4&gt;Snap&lt;/h4&gt; 
&lt;p&gt;No longer supported, see rationale in &lt;a href="https://github.com/ipfs/kubo/issues/8688"&gt;kubo#8688&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Ubuntu PPA&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://launchpad.net/~twdragon/+archive/ubuntu/ipfs"&gt;PPA homepage&lt;/a&gt; on Launchpad.&lt;/p&gt; 
&lt;h5&gt;Latest Ubuntu (&amp;gt;= 20.04 LTS)&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo add-apt-repository ppa:twdragon/ipfs
sudo apt update
sudo apt install ipfs-kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fedora COPR&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/taw00/ipfs-rpm"&gt;&lt;code&gt;taw00/ipfs-rpm&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;Any Ubuntu version&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo su
echo 'deb https://ppa.launchpadcontent.net/twdragon/ipfs/ubuntu &amp;lt;&amp;lt;DISTRO&amp;gt;&amp;gt; main' &amp;gt;&amp;gt; /etc/apt/sources.list.d/ipfs
echo 'deb-src https://ppa.launchpadcontent.net/twdragon/ipfs/ubuntu &amp;lt;&amp;lt;DISTRO&amp;gt;&amp;gt; main' &amp;gt;&amp;gt; /etc/apt/sources.list.d/ipfs
exit
sudo apt update
sudo apt install ipfs-kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;where &lt;code&gt;&amp;lt;&amp;lt;DISTRO&amp;gt;&amp;gt;&lt;/code&gt; is the codename of your Ubuntu distribution (for example, &lt;code&gt;jammy&lt;/code&gt; for 22.04 LTS). During the first installation the package maintenance script may automatically ask you about which networking profile, CPU accounting model, and/or existing node configuration file you want to use.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this method also may work with any compatible Debian-based distro which has &lt;code&gt;libc6&lt;/code&gt; inside, and APT as a package manager.&lt;/p&gt; 
&lt;h3&gt;Unofficial Windows packages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#chocolatey"&gt;Chocolatey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#scoop"&gt;Scoop&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Chocolatey&lt;/h4&gt; 
&lt;p&gt;No longer supported, see rationale in &lt;a href="https://github.com/ipfs/kubo/issues/9341"&gt;kubo#9341&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Scoop&lt;/h4&gt; 
&lt;p&gt;Scoop provides kubo as &lt;code&gt;kubo&lt;/code&gt; in its 'extras' bucket.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Powershell"&gt;PS&amp;gt; scoop bucket add extras
PS&amp;gt; scoop install kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Unofficial macOS packages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#macports"&gt;MacPorts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#nix-macos"&gt;Nix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#homebrew"&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;MacPorts&lt;/h4&gt; 
&lt;p&gt;The package &lt;a href="https://ports.macports.org/port/ipfs"&gt;ipfs&lt;/a&gt; currently points to kubo and is being maintained.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo port install ipfs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a name="nix-macos"&gt;Nix&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;In macOS you can use the purely functional package manager &lt;a href="https://nixos.org/nix/"&gt;Nix&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ nix-env -i kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also install the Package by using its attribute name, which is also &lt;code&gt;kubo&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Homebrew&lt;/h4&gt; 
&lt;p&gt;A Homebrew formula &lt;a href="https://formulae.brew.sh/formula/ipfs"&gt;ipfs&lt;/a&gt; is maintained too.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ brew install --formula ipfs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build from Source&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/go-mod/go-version/ipfs/kubo?label=Requires%20Go&amp;amp;logo=go&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="GitHub go.mod Go version" /&gt;&lt;/p&gt; 
&lt;p&gt;kubo's build system requires Go and some standard POSIX build tools:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GNU make&lt;/li&gt; 
 &lt;li&gt;Git&lt;/li&gt; 
 &lt;li&gt;GCC (or some other go compatible C Compiler) (optional)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To build without GCC, build with &lt;code&gt;CGO_ENABLED=0&lt;/code&gt; (e.g., &lt;code&gt;make build CGO_ENABLED=0&lt;/code&gt;).&lt;/p&gt; 
&lt;h4&gt;Install Go&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/go-mod/go-version/ipfs/kubo?label=Requires%20Go&amp;amp;logo=go&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="GitHub go.mod Go version" /&gt;&lt;/p&gt; 
&lt;p&gt;If you need to update: &lt;a href="https://golang.org/dl/"&gt;Download latest version of Go&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You'll need to add Go's bin directories to your &lt;code&gt;$PATH&lt;/code&gt; environment variable e.g., by adding these lines to your &lt;code&gt;/etc/profile&lt;/code&gt; (for a system-wide installation) or &lt;code&gt;$HOME/.profile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;export PATH=$PATH:/usr/local/go/bin
export PATH=$PATH:$GOPATH/bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(If you run into trouble, see the &lt;a href="https://golang.org/doc/install"&gt;Go install instructions&lt;/a&gt;).&lt;/p&gt; 
&lt;h4&gt;Download and Compile IPFS&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ipfs/kubo.git

$ cd kubo
$ make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can run &lt;code&gt;make build&lt;/code&gt; to build the kubo binary (storing it in &lt;code&gt;cmd/ipfs/ipfs&lt;/code&gt;) without installing it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you get an error along the lines of "fatal error: stdlib.h: No such file or directory", you're missing a C compiler. Either re-run &lt;code&gt;make&lt;/code&gt; with &lt;code&gt;CGO_ENABLED=0&lt;/code&gt; or install GCC.&lt;/p&gt; 
&lt;h5&gt;Cross Compiling&lt;/h5&gt; 
&lt;p&gt;Compiling for a different platform is as simple as running:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make build GOOS=myTargetOS GOARCH=myTargetArchitecture
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Troubleshooting&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Separate &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/windows.md"&gt;instructions are available for building on Windows&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;git&lt;/code&gt; is required in order for &lt;code&gt;go get&lt;/code&gt; to fetch all dependencies.&lt;/li&gt; 
 &lt;li&gt;Package managers often contain out-of-date &lt;code&gt;golang&lt;/code&gt; packages. Ensure that &lt;code&gt;go version&lt;/code&gt; reports the minimum version required (see go.mod). See above for how to install go.&lt;/li&gt; 
 &lt;li&gt;If you are interested in development, please install the development dependencies as well.&lt;/li&gt; 
 &lt;li&gt;Shell command completions can be generated with one of the &lt;code&gt;ipfs commands completion&lt;/code&gt; subcommands. Read &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/command-completion.md"&gt;docs/command-completion.md&lt;/a&gt; to learn more.&lt;/li&gt; 
 &lt;li&gt;See the &lt;a href="https://github.com/ipfs/kubo/tree/master/misc"&gt;misc folder&lt;/a&gt; for how to connect IPFS to systemd or whatever init system your distro uses.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://docs.ipfs.tech/how-to/command-line-quick-start/"&gt;&lt;img src="https://img.shields.io/static/v1?label=docs&amp;amp;message=Command-line%20quick%20start&amp;amp;color=blue&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="docs: Command-line quick start" /&gt;&lt;/a&gt; &lt;a href="https://docs.ipfs.tech/reference/kubo/cli/"&gt;&lt;img src="https://img.shields.io/static/v1?label=docs&amp;amp;message=Command-line%20reference&amp;amp;color=blue&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="docs: Command-line reference" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To start using IPFS, you must first initialize IPFS's config files on your system, this is done with &lt;code&gt;ipfs init&lt;/code&gt;. See &lt;code&gt;ipfs init --help&lt;/code&gt; for information on the optional arguments it takes. After initialization is complete, you can use &lt;code&gt;ipfs mount&lt;/code&gt;, &lt;code&gt;ipfs add&lt;/code&gt; and any of the other commands to explore!&lt;/p&gt; 
&lt;p&gt;For detailed configuration options, see &lt;a href="https://github.com/ipfs/kubo/raw/master/docs/config.md"&gt;docs/config.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Some things to try&lt;/h3&gt; 
&lt;p&gt;Basic proof of 'ipfs working' locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;echo "hello world" &amp;gt; hello
ipfs add hello
# This should output a hash string that looks something like:
# QmT78zSuBmuS4z925WZfrqQ1qHaJ56DQaTfyMUF7F8ff5o
ipfs cat &amp;lt;that hash&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;HTTP/RPC clients&lt;/h3&gt; 
&lt;p&gt;For programmatic interaction with Kubo, see our &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/http-rpc-clients.md"&gt;list of HTTP/RPC clients&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;If you have previously installed IPFS before and you are running into problems getting a newer version to work, try deleting (or backing up somewhere else) your IPFS config directory (~/.ipfs by default) and rerunning &lt;code&gt;ipfs init&lt;/code&gt;. This will reinitialize the config file to its defaults and clear out the local datastore of any bad entries.&lt;/p&gt; 
&lt;p&gt;For more information about configuration options, see &lt;a href="https://github.com/ipfs/kubo/raw/master/docs/config.md"&gt;docs/config.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please direct general questions and help requests to our &lt;a href="https://discuss.ipfs.tech"&gt;forums&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you believe you've found a bug, check the &lt;a href="https://github.com/ipfs/kubo/issues"&gt;issues list&lt;/a&gt; and, if you don't see your problem there, either come talk to us on &lt;a href="https://docs.ipfs.tech/community/chat/"&gt;Matrix chat&lt;/a&gt;, or file an issue of your own!&lt;/p&gt; 
&lt;h2&gt;Packages&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://docs.ipfs.tech/reference/go/api/"&gt;IPFS in GO&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Some places to get you started on the codebase:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Main file: &lt;a href="https://github.com/ipfs/kubo/raw/master/cmd/ipfs/main.go"&gt;./cmd/ipfs/main.go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;CLI Commands: &lt;a href="https://github.com/ipfs/kubo/tree/master/core/commands"&gt;./core/commands/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Bitswap (the data trading engine): &lt;a href="https://github.com/ipfs/go-bitswap"&gt;go-bitswap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;libp2p 
  &lt;ul&gt; 
   &lt;li&gt;libp2p: &lt;a href="https://github.com/libp2p/go-libp2p"&gt;https://github.com/libp2p/go-libp2p&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;DHT: &lt;a href="https://github.com/libp2p/go-libp2p-kad-dht"&gt;https://github.com/libp2p/go-libp2p-kad-dht&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ipfs/kubo/tree/master/docs/add-code-flow.md"&gt;IPFS : The &lt;code&gt;Add&lt;/code&gt; command demystified&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Map of Implemented Subsystems&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;WIP&lt;/strong&gt;: This is a high-level architecture diagram of the various sub-systems of this specific implementation. To be updated with how they interact. Anyone who has suggestions is welcome to comment &lt;a href="https://docs.google.com/drawings/d/1OVpBT2q-NtSJqlPX3buvjYhOnWfdzb85YEsM_njesME/edit"&gt;here&lt;/a&gt; on how we can improve this! &lt;img src="https://docs.google.com/drawings/d/e/2PACX-1vS_n1FvSu6mdmSirkBrIIEib2gqhgtatD9awaP2_WdrGN4zTNeg620XQd9P95WT-IvognSxIIdCM5uE/pub?w=1446&amp;amp;h=1036" /&gt;&lt;/p&gt; 
&lt;h3&gt;CLI, HTTP-API, Architecture Diagram&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ipfs/kubo/master/docs/cli-http-api-core-diagram.png" alt="" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://github.com/ipfs/pm/pull/678#discussion_r210410924"&gt;Origin&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Description: Dotted means "likely going away". The "Legacy" parts are thin wrappers around some commands to translate between the new system and the old system. The grayed-out parts on the "daemon" diagram are there to show that the code is all the same, it's just that we turn some pieces on and some pieces off depending on whether we're running on the client or the server.&lt;/p&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;make test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Development Dependencies&lt;/h3&gt; 
&lt;p&gt;If you make changes to the protocol buffers, you will need to install the &lt;a href="https://github.com/google/protobuf"&gt;protoc compiler&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Developer Notes&lt;/h3&gt; 
&lt;p&gt;Find more documentation for developers on &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs"&gt;docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Maintainer Info&lt;/h2&gt; 
&lt;p&gt;Kubo is maintained by &lt;a href="https://ipshipyard.com/"&gt;Shipyard&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;This repository is part of &lt;a href="https://ipshipyard.notion.site/IPFS-Go-Triage-Boxo-Kubo-Rainbow-0ddee6b7f28d412da7dabe4f9107c29a"&gt;Shipyard's GO Triage triage&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ipshipyard.notion.site/Kubo-Release-Process-6dba4f5755c9458ab5685eeb28173778"&gt;Release Process&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/ipfs/community/raw/master/CONTRIBUTING.md"&gt;&lt;img src="https://cdn.rawgit.com/jbenet/contribute-ipfs-gif/master/img/contribute.gif" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We ❤️ all &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/AUTHORS"&gt;our contributors&lt;/a&gt;; this project wouldn’t be what it is without you! If you want to help out, please see &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This repository falls under the IPFS &lt;a href="https://github.com/ipfs/community/raw/master/code-of-conduct.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Members of IPFS community provide Kubo support on &lt;a href="https://discuss.ipfs.tech/c/help/help-kubo/23"&gt;discussion forum category here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Need help with IPFS itself? Learn where to get help and support at &lt;a href="https://ipfs.tech/help"&gt;https://ipfs.tech/help&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is dual-licensed under Apache 2.0 and MIT terms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Apache License, Version 2.0, (&lt;a href="https://github.com/ipfs/kubo/raw/master/LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;MIT license (&lt;a href="https://github.com/ipfs/kubo/raw/master/LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href="http://opensource.org/licenses/MIT"&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>traefik/traefik</title>
      <link>https://github.com/traefik/traefik</link>
      <description>&lt;p&gt;The Cloud Native Application Proxy&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="docs/content/assets/img/traefik.logo-dark.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="docs/content/assets/img/traefik.logo.png" /&gt; 
  &lt;img alt="Traefik" title="Traefik" src="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/assets/img/traefik.logo.png" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://traefik-oss.semaphoreci.com/projects/traefik"&gt;&lt;img src="https://traefik-oss.semaphoreci.com/badges/traefik/branches/master.svg?style=shields" alt="Build Status SemaphoreCI" /&gt;&lt;/a&gt; &lt;a href="https://doc.traefik.io/traefik"&gt;&lt;img src="https://img.shields.io/badge/docs-current-brightgreen.svg?sanitize=true" alt="Docs" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/traefik/traefik"&gt;&lt;img src="https://goreportcard.com/badge/traefik/traefik" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/traefik/traefik/raw/master/LICENSE.md"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://community.traefik.io/"&gt;&lt;img src="https://img.shields.io/badge/style-register-green.svg?style=social&amp;amp;label=Discourse" alt="Join the community support forum at https://community.traefik.io/" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=traefik"&gt;&lt;img src="https://img.shields.io/twitter/follow/traefik.svg?style=social" alt="Twitter" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Traefik (pronounced &lt;em&gt;traffic&lt;/em&gt;) is a modern HTTP reverse proxy and load balancer that makes deploying microservices easy. Traefik integrates with your existing infrastructure components (&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;, &lt;a href="https://docs.docker.com/engine/swarm/"&gt;Swarm mode&lt;/a&gt;, &lt;a href="https://kubernetes.io"&gt;Kubernetes&lt;/a&gt;, &lt;a href="https://www.consul.io/"&gt;Consul&lt;/a&gt;, &lt;a href="https://coreos.com/etcd/"&gt;Etcd&lt;/a&gt;, &lt;a href="https://rancher.com"&gt;Rancher v2&lt;/a&gt;, &lt;a href="https://aws.amazon.com/ecs"&gt;Amazon ECS&lt;/a&gt;, ...) and configures itself automatically and dynamically. Pointing Traefik at your orchestrator should be the &lt;em&gt;only&lt;/em&gt; configuration step you need.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;. &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#overview"&gt;Overview&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#features"&gt;Features&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#supported-backends"&gt;Supported backends&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#quickstart"&gt;Quickstart&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#web-ui"&gt;Web UI&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#documentation"&gt;Documentation&lt;/a&gt;&lt;/strong&gt; .&lt;/p&gt; 
&lt;p&gt;. &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#support"&gt;Support&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#release-cycle"&gt;Release cycle&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#maintainers"&gt;Maintainers&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#credits"&gt;Credits&lt;/a&gt;&lt;/strong&gt; .&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; When migrating to a new major version of Traefik, please refer to the &lt;a href="https://doc.traefik.io/traefik/migrate/v2-to-v3/"&gt;migration guide&lt;/a&gt; to ensure a smooth transition and to be aware of any breaking changes.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Imagine that you have deployed a bunch of microservices with the help of an orchestrator (like Swarm or Kubernetes) or a service registry (like etcd or consul). Now you want users to access these microservices, and you need a reverse proxy.&lt;/p&gt; 
&lt;p&gt;Traditional reverse-proxies require that you configure &lt;em&gt;each&lt;/em&gt; route that will connect paths and subdomains to &lt;em&gt;each&lt;/em&gt; microservice. In an environment where you add, remove, kill, upgrade, or scale your services &lt;em&gt;many&lt;/em&gt; times a day, the task of keeping the routes up to date becomes tedious.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This is when Traefik can help you!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Traefik listens to your service registry/orchestrator API and instantly generates the routes so your microservices are connected to the outside world -- without further intervention from your part.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Run Traefik and let it do the work for you!&lt;/strong&gt; &lt;em&gt;(But if you'd rather configure some of your routes manually, Traefik supports that too!)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/assets/img/traefik-architecture.png" alt="Architecture" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Continuously updates its configuration (No restarts!)&lt;/li&gt; 
 &lt;li&gt;Supports multiple load balancing algorithms&lt;/li&gt; 
 &lt;li&gt;Provides HTTPS to your microservices by leveraging &lt;a href="https://letsencrypt.org"&gt;Let's Encrypt&lt;/a&gt; (wildcard certificates support)&lt;/li&gt; 
 &lt;li&gt;Circuit breakers, retry&lt;/li&gt; 
 &lt;li&gt;See the magic through its clean web UI&lt;/li&gt; 
 &lt;li&gt;WebSocket, HTTP/2, gRPC ready&lt;/li&gt; 
 &lt;li&gt;Provides metrics (Rest, Prometheus, Datadog, Statsd, InfluxDB 2.X)&lt;/li&gt; 
 &lt;li&gt;Keeps access logs (JSON, CLF)&lt;/li&gt; 
 &lt;li&gt;Fast&lt;/li&gt; 
 &lt;li&gt;Exposes a Rest API&lt;/li&gt; 
 &lt;li&gt;Packaged as a single binary file (made with &lt;span&gt;❤️&lt;/span&gt; with go) and available as an &lt;a href="https://hub.docker.com/r/_/traefik/"&gt;official&lt;/a&gt; docker image&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Backends&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/docker/"&gt;Docker&lt;/a&gt; / &lt;a href="https://doc.traefik.io/traefik/providers/docker/"&gt;Swarm mode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/kubernetes-crd/"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/ecs/"&gt;ECS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/file/"&gt;File&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;To get your hands on Traefik, you can use the &lt;a href="https://doc.traefik.io/traefik/getting-started/quick-start/"&gt;5-Minute Quickstart&lt;/a&gt; in our documentation (you will need Docker).&lt;/p&gt; 
&lt;h2&gt;Web UI&lt;/h2&gt; 
&lt;p&gt;You can access the simple HTML frontend of Traefik.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/assets/img/webui-dashboard.png" alt="Web UI Providers" /&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find the complete documentation of Traefik v3 at &lt;a href="https://doc.traefik.io/traefik/"&gt;https://doc.traefik.io/traefik/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;To get community support, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;join the Traefik community forum: &lt;a href="https://community.traefik.io/"&gt;&lt;img src="https://img.shields.io/badge/style-register-green.svg?style=social&amp;amp;label=Discourse" alt="Join the chat at https://community.traefik.io/" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you need commercial support, please contact &lt;a href="https://traefik.io"&gt;Traefik.io&lt;/a&gt; by mail: &lt;a href="mailto:support@traefik.io"&gt;mailto:support@traefik.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grab the latest binary from the &lt;a href="https://github.com/traefik/traefik/releases"&gt;releases&lt;/a&gt; page and run it with the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/traefik.sample.toml"&gt;sample configuration file&lt;/a&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;./traefik --configFile=traefik.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or use the official tiny Docker image and run it with the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/traefik.sample.toml"&gt;sample configuration file&lt;/a&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker run -d -p 8080:8080 -p 80:80 -v $PWD/traefik.toml:/etc/traefik/traefik.toml traefik
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or get the sources:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/traefik/traefik
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Introductory Videos&lt;/h2&gt; 
&lt;p&gt;You can find high level and deep dive videos on &lt;a href="https://videos.traefik.io"&gt;videos.traefik.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;p&gt;We are strongly promoting a philosophy of openness and sharing, and firmly standing against the elitist closed approach. Being part of the core team should be accessible to anyone who is motivated and want to be part of that journey! This &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/contributing/maintainers-guidelines.md"&gt;document&lt;/a&gt; describes how to be part of the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/contributing/maintainers.md"&gt;maintainers' team&lt;/a&gt; as well as various responsibilities and guidelines for Traefik maintainers. You can also find more information on our process to review pull requests and manage issues &lt;a href="https://github.com/traefik/contributors-guide/raw/master/issue_triage.md"&gt;in this document&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you'd like to contribute to the project, refer to the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/CONTRIBUTING.md"&gt;contributing documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please note that this project is released with a &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/CODE_OF_CONDUCT.md"&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project, you agree to abide by its terms.&lt;/p&gt; 
&lt;h2&gt;Release Cycle&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;We usually release 3/4 new versions (e.g. 1.1.0, 1.2.0, 1.3.0) per year.&lt;/li&gt; 
 &lt;li&gt;Release Candidates are available before the release (e.g. 1.1.0-rc1, 1.1.0-rc2, 1.1.0-rc3, 1.1.0-rc4, before 1.1.0).&lt;/li&gt; 
 &lt;li&gt;Bug-fixes (e.g. 1.1.1, 1.1.2, 1.2.1, 1.2.3) are released as needed (no additional features are delivered in those versions, bug-fixes only).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each version is supported until the next one is released (e.g. 1.1.x will be supported until 1.2.0 is out).&lt;/p&gt; 
&lt;p&gt;We use &lt;a href="https://semver.org/"&gt;Semantic Versioning&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Mailing Lists&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;General announcements, new releases: mail at &lt;a href="mailto:news+subscribe@traefik.io"&gt;news+subscribe@traefik.io&lt;/a&gt; or on &lt;a href="https://groups.google.com/a/traefik.io/forum/#!forum/news"&gt;the online viewer&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Security announcements: mail at &lt;a href="mailto:security+subscribe@traefik.io"&gt;security+subscribe@traefik.io&lt;/a&gt; or on &lt;a href="https://groups.google.com/a/traefik.io/forum/#!forum/security"&gt;the online viewer&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Kudos to &lt;a href="https://www.instagram.com/pierroks/"&gt;Peka&lt;/a&gt; for his awesome work on the gopher's logo!.&lt;/p&gt; 
&lt;p&gt;The gopher's logo of Traefik is licensed under the Creative Commons 3.0 Attributions license.&lt;/p&gt; 
&lt;p&gt;The gopher's logo of Traefik was inspired by the gopher stickers made by &lt;a href="https://twitter.com/tenntenn"&gt;Takuya Ueda&lt;/a&gt;. The original Go gopher was designed by &lt;a href="https://reneefrench.blogspot.com/"&gt;Renee French&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>donknap/dpanel</title>
      <link>https://github.com/donknap/dpanel</link>
      <description>&lt;p&gt;轻量化 docker 可视化管理面板。lightweight panel for docker&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;img src="https://cdn.w7.cc/dpanel/dpanel-logo.png" alt="DPanel" width="500" /&gt; &lt;/h1&gt; 
&lt;h4 align="center"&gt; Docker 可视化面板系统，提供完善的 docker 管理功能。 &lt;/h4&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/donknap/dpanel"&gt;&lt;img src="https://img.shields.io/github/stars/donknap/dpanel.svg?sanitize=true" alt="GitHub stars" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/donknap/dpanel/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/donknap/dpanel" alt="GitHub latest release" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/donknap/dpanel/commits/master/"&gt;&lt;img src="https://img.shields.io/github/last-commit/donknap/dpanel.svg?sanitize=true" alt="GitHub latest commit" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/donknap/dpanel/actions"&gt;&lt;img src="https://github.com/donknap/dpanel/actions/workflows/release.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://hub.docker.com/r/dpanel/dpanel/tags"&gt;&lt;img src="https://img.shields.io/docker/pulls/dpanel/dpanel" alt="Docker Pulls" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://hellogithub.com/repository/c69089b776704985b989f98626de977a" target="_blank"&gt;&lt;img src="https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=c69089b776704985b989f98626de977a&amp;amp;claim_uid=ekhLfDOxR5U0mVw&amp;amp;theme=small" alt="Featured｜HelloGitHub" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/donknap/dpanel/master/README.md"&gt;&lt;img alt="中文(简体)" src="https://img.shields.io/badge/中文(简体)-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/donknap/dpanel/master/docs/README_EN.md"&gt;&lt;img alt="English" src="https://img.shields.io/badge/English-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/donknap/dpanel/master/docs/README_JA.md"&gt;&lt;img alt="日本語" src="https://img.shields.io/badge/日本語-d9d9d9" /&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;&lt;a href="https://dpanel.cc/"&gt;&lt;strong&gt;官网&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://demo.dpanel.cc"&gt;&lt;strong&gt;演示&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://dpanel.cc/#/zh-cn/install/docker"&gt;&lt;strong&gt;文档&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://dpanel.cc/#/zh-cn/manual/pro"&gt;&lt;strong&gt;Pro版&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://qm.qq.com/q/2v4x9x8q4k"&gt;&lt;strong&gt;交流群&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://afdian.com/a/dpanel"&gt;&lt;strong&gt;赞助&lt;/strong&gt;&lt;/a&gt; &amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;Pro 版&lt;/h3&gt; 
&lt;p&gt;Pro 版仅是社区版的一个增强和补充，对于通用的、广泛的功能需求不会收录到 Pro 版中。 针对社区版中的部分功能进行强化、升级或是一些极其个性化的需求功能。&lt;/p&gt; 
&lt;p&gt;感谢大家的支持与厚爱，希望 DPanel 可以小小的为 Docker 中文圈带来一些惊喜。&lt;/p&gt; 
&lt;p&gt;🚀🚀🚀 &lt;a href="http://dpanel.cc/#/zh-cn/manual/pro?id=%e4%bb%b7%e6%a0%bc%e5%8f%8a%e5%8a%9f%e8%83%bd"&gt;功能介绍及对比&lt;/a&gt; 🚀🚀🚀&lt;/p&gt; 
&lt;h3&gt;开始使用&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; macos 下需要先将 docker.sock 文件 link 到 /var/run/docker.sock 目录中 &lt;br /&gt; sudo ln -s -f /Users/用户/.docker/run/docker.sock /var/run/docker.sock&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;国内镜像 &lt;br /&gt; registry.cn-hangzhou.aliyuncs.com/dpanel/dpanel:latest &lt;br /&gt; registry.cn-hangzhou.aliyuncs.com/dpanel/dpanel:lite&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;标准版&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;docker run -d --name dpanel --restart=always \
 -p 80:80 -p 443:443 -p 8807:8080 -e APP_NAME=dpanel \
 -v /var/run/docker.sock:/var/run/docker.sock -v dpanel:/dpanel \
 dpanel/dpanel:latest 
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;lite 版&lt;/h4&gt; 
&lt;p&gt;lite 版去掉了域名转发相关，需要自行转发域名绑定容器，不需要绑定 80 及 443 端口&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run -d --name dpanel --restart=always \
 -p 8807:8080 -e APP_NAME=dpanel \
 -v /var/run/docker.sock:/var/run/docker.sock -v dpanel:/dpanel \
 dpanel/dpanel:lite
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;集成脚本&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;支持 Debian Ubuntu Alpine，其它发行版未进行测试，请提交 Issue&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;curl -sSL https://dpanel.cc/quick.sh -o quick.sh &amp;amp;&amp;amp; sudo bash quick.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;为爱发电&lt;/h4&gt; 
&lt;p&gt;如果此项目对你所有帮助，并希望我继续下去，请考虑赞助我为爱发电！感谢所有的爱和支持。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://afdian.com/a/dpanel"&gt;https://afdian.com/a/dpanel&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;交流群&lt;/h4&gt; 
&lt;p&gt;QQ: 837583876&lt;/p&gt; 
&lt;img src="https://github.com/donknap/dpanel-docs/raw/master/storage/image/qq.png?raw=true" width="300" /&gt; 
&lt;h4&gt;赞助&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h5&gt;本项目 CDN 加速及安全防护由 Tencent EdgeOne 赞助&lt;/h5&gt; &lt;img width="200" src="https://edgeone.ai/media/34fe3a45-492d-4ea4-ae5d-ea1087ca7b4b.png" /&gt; &lt;p&gt;&lt;a href="https://edgeone.ai/zh?from=github"&gt;亚洲最佳CDN、边缘和安全解决方案 - Tencent EdgeOne&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;感谢贡献人员&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/donknap/dpanel/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=donknap/dpanel" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;界面预览&lt;/h4&gt; 
&lt;h6&gt;pro 自定义皮肤&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://cdn.w7.cc/dpanel/pro-1.png" alt="pro-1" /&gt;&lt;/p&gt; 
&lt;h6&gt;概览&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/donknap/dpanel-docs/master/storage/image/home.png" alt="home.png" /&gt;&lt;/p&gt; 
&lt;h6&gt;容器管理&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/donknap/dpanel-docs/master/storage/image/app-list.png" alt="app-list.png" /&gt;&lt;/p&gt; 
&lt;h6&gt;文件管理&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/donknap/dpanel-docs/master/storage/image/app-file.png" alt="app-file.png" /&gt;&lt;/p&gt; 
&lt;h6&gt;镜像管理&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/donknap/dpanel-docs/master/storage/image/image-list.png" alt="image-list.png" /&gt;&lt;/p&gt; 
&lt;h6&gt;创建镜像&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/donknap/dpanel-docs/master/storage/image/image-create.png" alt="image-create.png" /&gt;&lt;/p&gt; 
&lt;h6&gt;创建Compose&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/donknap/dpanel-docs/master/storage/image/compose-create.png" alt="compose-create.png" /&gt;&lt;/p&gt; 
&lt;h6&gt;部署Compose&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/donknap/dpanel-docs/master/storage/image/compose-deploy.png" alt="compose-deploy.png" /&gt;&lt;/p&gt; 
&lt;h6&gt;系统管理&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/donknap/dpanel-docs/master/storage/image/system-basic.png" alt="system-basic.png" /&gt;&lt;/p&gt; 
&lt;h4&gt;相关仓库&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;镜像构建基础模板 &lt;a href="https://github.com/donknap/dpanel-base-image"&gt;https://github.com/donknap/dpanel-base-image&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;文档 &lt;a href="https://github.com/donknap/dpanel-docs"&gt;https://github.com/donknap/dpanel-docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;相关组件&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Rangine 开发框架 &lt;a href="https://github.com/we7coreteam/w7-rangine-go-skeleton"&gt;https://github.com/we7coreteam/w7-rangine-go-skeleton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Docker Sdk &lt;a href="https://github.com/docker/docker"&gt;https://github.com/docker/docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;React &amp;amp; UmiJs&lt;/li&gt; 
 &lt;li&gt;Ant Design &amp;amp; Ant Design Pro &amp;amp; Ant Design Charts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Star History&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#donknap/dpanel&amp;amp;Timeline"&gt;&lt;img src="https://api.star-history.com/svg?repos=donknap/dpanel&amp;amp;type=Timeline" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sysadminsmedia/homebox</title>
      <link>https://github.com/sysadminsmedia/homebox</link>
      <description>&lt;p&gt;A continuation of HomeBox the inventory and organization system built for the Home User&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/sysadminsmedia/homebox/main/docs/public/lilbox.svg?sanitize=true" height="200" /&gt; 
&lt;/div&gt; 
&lt;h1 align="center" style="margin-top: -10px"&gt; HomeBox &lt;/h1&gt; 
&lt;p align="center" style="width: 100;"&gt; &lt;a href="https://homebox.software/en/"&gt;Docs&lt;/a&gt; | &lt;a href="https://demo.homebox.software"&gt;Demo&lt;/a&gt; | &lt;a href="https://discord.gg/aY4DCkpNA9"&gt;Discord&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;What is HomeBox&lt;/h2&gt; 
&lt;p&gt;HomeBox is the inventory and organization system built for the Home User! With a focus on simplicity and ease of use, Homebox is the perfect solution for your home inventory, organization, and management needs. While developing this project, I've tried to keep the following principles in mind:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Simple&lt;/em&gt; - Homebox is designed to be simple and easy to use. No complicated setup or configuration required. Use either a single docker container, or deploy yourself by compiling the binary for your platform of choice.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Blazingly Fast&lt;/em&gt; - Homebox is written in Go, which makes it extremely fast and requires minimal resources to deploy. In general, idle memory usage is less than 50MB for the whole container.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Portable&lt;/em&gt; - Homebox is designed to be portable and run on anywhere. We use SQLite and an embedded Web UI to make it easy to deploy, use, and backup.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Screenshots&lt;/h1&gt; 
&lt;p&gt;Check out screenshots of the project &lt;a href="https://github.com/sysadminsmedia/homebox/tree/main/screenshots"&gt;here&lt;/a&gt;. You can also try the demo instances of Homebox:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://demo.homebox.software"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nightly.homebox.software"&gt;Nightly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vnext.homebox.software/"&gt;VNext&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://homebox.software/en/quick-start.html"&gt;Configuration &amp;amp; Docker Compose&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# If using the rootless image, ensure data 
# folder has correct permissions
mkdir -p /path/to/data/folder
chown 65532:65532 -R /path/to/data/folder
docker run -d \
  --name homebox \
  --restart unless-stopped \
  --publish 3100:7745 \
  --env TZ=Europe/Bucharest \
  --volume /path/to/data/folder/:/data \
  ghcr.io/sysadminsmedia/homebox:latest
# ghcr.io/sysadminsmedia/homebox:latest-rootless
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- CONTRIBUTING --&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are &lt;strong&gt;greatly appreciated&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;If you are not a coder, you can still contribute financially. Financial contributions help me prioritize working on this project over others and helps me know that there is a real demand for project development.&lt;/p&gt; 
&lt;h2&gt;Help us Translate&lt;/h2&gt; 
&lt;p&gt;We want to make sure that Homebox is available in as many languages as possible. If you are interested in helping us translate Homebox, please help us via our &lt;a href="https://translate.sysadminsmedia.com/projects/homebox/"&gt;Weblate instance&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://translate.sysadminsmedia.com/engage/homebox/"&gt;&lt;img src="http://translate.sysadminsmedia.com/widget/homebox/multi-auto.svg?sanitize=true" alt="Translation status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Original project by &lt;a href="https://github.com/hay-kot"&gt;@hay-kot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Logo by &lt;a href="https://github.com/lakotelman"&gt;@lakotelman&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>stretchr/testify</title>
      <link>https://github.com/stretchr/testify</link>
      <description>&lt;p&gt;A toolkit with common assertions and mocks that plays nicely with the standard library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Testify - Thou Shalt Write Tests&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Testify is being maintained at v1, no breaking changes will be accepted in this repo.&lt;br /&gt; &lt;a href="https://github.com/stretchr/testify/discussions/1560"&gt;See discussion about v2&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://github.com/stretchr/testify/actions/workflows/main.yml"&gt;&lt;img src="https://github.com/stretchr/testify/actions/workflows/main.yml/badge.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/stretchr/testify"&gt;&lt;img src="https://goreportcard.com/badge/github.com/stretchr/testify" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/stretchr/testify"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/stretchr/testify" alt="PkgGoDev" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Go code (golang) set of packages that provide many tools for testifying that your code will behave as you intend.&lt;/p&gt; 
&lt;p&gt;Features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/stretchr/testify/master/#assert-package"&gt;Easy assertions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/stretchr/testify/master/#mock-package"&gt;Mocking&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/stretchr/testify/master/#suite-package"&gt;Testing suite interfaces and functions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install testify with &lt;a href="https://raw.githubusercontent.com/stretchr/testify/master/#installation"&gt;one line of code&lt;/a&gt;, or &lt;a href="https://raw.githubusercontent.com/stretchr/testify/master/#staying-up-to-date"&gt;update it with another&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;For an introduction to writing test code in Go, see &lt;a href="https://go.dev/doc/code#Testing"&gt;https://go.dev/doc/code#Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Check out the API Documentation &lt;a href="https://pkg.go.dev/github.com/stretchr/testify"&gt;https://pkg.go.dev/github.com/stretchr/testify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Use &lt;a href="https://github.com/Antonboom/testifylint"&gt;testifylint&lt;/a&gt; (via &lt;a href="https://golangci-lint.run/"&gt;golangci-lint&lt;/a&gt;) to avoid common mistakes&lt;/li&gt; 
 &lt;li&gt;A little about &lt;a href="https://en.wikipedia.org/wiki/Test-driven_development"&gt;Test-Driven Development (TDD)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href="https://pkg.go.dev/github.com/stretchr/testify/assert" title="API documentation"&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; package&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;assert&lt;/code&gt; package provides some helpful methods that allow you to write better test code in Go.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prints friendly, easy to read failure descriptions&lt;/li&gt; 
 &lt;li&gt;Allows for very readable code&lt;/li&gt; 
 &lt;li&gt;Optionally annotate each assertion with a message&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See it in action:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package yours

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestSomething(t *testing.T) {
	// assert equality
	assert.Equal(t, 123, 123, "they should be equal")

	// assert inequality
	assert.NotEqual(t, 123, 456, "they should not be equal")

	// assert for nil (good for errors)
	assert.Nil(t, object)

	// assert for not nil (good when you expect something)
	if assert.NotNil(t, object) {
		// now we know that object isn't nil, we are safe to make
		// further assertions without causing any errors
		assert.Equal(t, "Something", object.Value)
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Every assert func takes the &lt;code&gt;testing.T&lt;/code&gt; object as the first argument. This is how it writes the errors out through the normal &lt;code&gt;go test&lt;/code&gt; capabilities.&lt;/li&gt; 
 &lt;li&gt;Every assert func returns a bool indicating whether the assertion was successful or not, this is useful for if you want to go on making further assertions under certain conditions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;if you assert many times, use the below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package yours

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestSomething(t *testing.T) {
	assert := assert.New(t)

	// assert equality
	assert.Equal(123, 123, "they should be equal")

	// assert inequality
	assert.NotEqual(123, 456, "they should not be equal")

	// assert for nil (good for errors)
	assert.Nil(object)

	// assert for not nil (good when you expect something)
	if assert.NotNil(object) {
		// now we know that object isn't nil, we are safe to make
		// further assertions without causing any errors
		assert.Equal("Something", object.Value)
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;a href="https://pkg.go.dev/github.com/stretchr/testify/require" title="API documentation"&gt;&lt;code&gt;require&lt;/code&gt;&lt;/a&gt; package&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;require&lt;/code&gt; package provides same global functions as the &lt;code&gt;assert&lt;/code&gt; package, but instead of returning a boolean result they terminate current test. These functions must be called from the goroutine running the test or benchmark function, not from other goroutines created during the test. Otherwise race conditions may occur.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://pkg.go.dev/testing#T.FailNow"&gt;t.FailNow&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://pkg.go.dev/github.com/stretchr/testify/mock" title="API documentation"&gt;&lt;code&gt;mock&lt;/code&gt;&lt;/a&gt; package&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;mock&lt;/code&gt; package provides a mechanism for easily writing mock objects that can be used in place of real objects when writing test code.&lt;/p&gt; 
&lt;p&gt;An example test function that tests a piece of code that relies on an external object &lt;code&gt;testObj&lt;/code&gt;, can set up expectations (testify) and assert that they indeed happened:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package yours

import (
	"testing"

	"github.com/stretchr/testify/mock"
)

/*
  Test objects
*/

// MyMockedObject is a mocked object that implements an interface
// that describes an object that the code I am testing relies on.
type MyMockedObject struct {
	mock.Mock
}

// DoSomething is a method on MyMockedObject that implements some interface
// and just records the activity, and returns what the Mock object tells it to.
//
// In the real object, this method would do something useful, but since this
// is a mocked object - we're just going to stub it out.
//
// NOTE: This method is not being tested here, code that uses this object is.
func (m *MyMockedObject) DoSomething(number int) (bool, error) {
	args := m.Called(number)
	return args.Bool(0), args.Error(1)
}

/*
  Actual test functions
*/

// TestSomething is an example of how to use our test object to
// make assertions about some target code we are testing.
func TestSomething(t *testing.T) {
	// create an instance of our test object
	testObj := new(MyMockedObject)

	// set up expectations
	testObj.On("DoSomething", 123).Return(true, nil)

	// call the code we are testing
	targetFuncThatDoesSomethingWithObj(testObj)

	// assert that the expectations were met
	testObj.AssertExpectations(t)
}

// TestSomethingWithPlaceholder is a second example of how to use our test object to
// make assertions about some target code we are testing.
// This time using a placeholder. Placeholders might be used when the
// data being passed in is normally dynamically generated and cannot be
// predicted beforehand (eg. containing hashes that are time sensitive)
func TestSomethingWithPlaceholder(t *testing.T) {
	// create an instance of our test object
	testObj := new(MyMockedObject)

	// set up expectations with a placeholder in the argument list
	testObj.On("DoSomething", mock.Anything).Return(true, nil)

	// call the code we are testing
	targetFuncThatDoesSomethingWithObj(testObj)

	// assert that the expectations were met
	testObj.AssertExpectations(t)

}

// TestSomethingElse2 is a third example that shows how you can use
// the Unset method to cleanup handlers and then add new ones.
func TestSomethingElse2(t *testing.T) {
	// create an instance of our test object
	testObj := new(MyMockedObject)

	// set up expectations with a placeholder in the argument list
	mockCall := testObj.On("DoSomething", mock.Anything).Return(true, nil)

	// call the code we are testing
	targetFuncThatDoesSomethingWithObj(testObj)

	// assert that the expectations were met
	testObj.AssertExpectations(t)

	// remove the handler now so we can add another one that takes precedence
	mockCall.Unset()

	// return false now instead of true
	testObj.On("DoSomething", mock.Anything).Return(false, nil)

	testObj.AssertExpectations(t)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on how to write mock code, check out the &lt;a href="https://pkg.go.dev/github.com/stretchr/testify/mock"&gt;API documentation for the &lt;code&gt;mock&lt;/code&gt; package&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can use the &lt;a href="https://vektra.github.io/mockery/latest/"&gt;mockery tool&lt;/a&gt; to autogenerate the mock code against an interface as well, making using mocks much quicker.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://pkg.go.dev/github.com/stretchr/testify/suite" title="API documentation"&gt;&lt;code&gt;suite&lt;/code&gt;&lt;/a&gt; package&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] The suite package does not support parallel tests. See &lt;a href="https://github.com/stretchr/testify/issues/934"&gt;#934&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The &lt;code&gt;suite&lt;/code&gt; package provides functionality that you might be used to from more common object-oriented languages. With it, you can build a testing suite as a struct, build setup/teardown methods and testing methods on your struct, and run them with 'go test' as per normal.&lt;/p&gt; 
&lt;p&gt;An example suite is shown below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;// Basic imports
import (
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/suite"
)

// Define the suite, and absorb the built-in basic suite
// functionality from testify - including a T() method which
// returns the current testing context
type ExampleTestSuite struct {
	suite.Suite
	VariableThatShouldStartAtFive int
}

// Make sure that VariableThatShouldStartAtFive is set to five
// before each test
func (suite *ExampleTestSuite) SetupTest() {
	suite.VariableThatShouldStartAtFive = 5
}

// All methods that begin with "Test" are run as tests within a
// suite.
func (suite *ExampleTestSuite) TestExample() {
	assert.Equal(suite.T(), 5, suite.VariableThatShouldStartAtFive)
}

// In order for 'go test' to run this suite, we need to create
// a normal test function and pass our suite to suite.Run
func TestExampleTestSuite(t *testing.T) {
	suite.Run(t, new(ExampleTestSuite))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For a more complete example, using all of the functionality provided by the suite package, look at our &lt;a href="https://github.com/stretchr/testify/raw/master/suite/suite_test.go"&gt;example testing suite&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For more information on writing suites, check out the &lt;a href="https://pkg.go.dev/github.com/stretchr/testify/suite"&gt;API documentation for the &lt;code&gt;suite&lt;/code&gt; package&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Suite&lt;/code&gt; object has assertion methods:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;// Basic imports
import (
	"testing"

	"github.com/stretchr/testify/suite"
)

// Define the suite, and absorb the built-in basic suite
// functionality from testify - including assertion methods.
type ExampleTestSuite struct {
	suite.Suite
	VariableThatShouldStartAtFive int
}

// Make sure that VariableThatShouldStartAtFive is set to five
// before each test
func (suite *ExampleTestSuite) SetupTest() {
	suite.VariableThatShouldStartAtFive = 5
}

// All methods that begin with "Test" are run as tests within a
// suite.
func (suite *ExampleTestSuite) TestExample() {
	suite.Equal(suite.VariableThatShouldStartAtFive, 5)
}

// In order for 'go test' to run this suite, we need to create
// a normal test function and pass our suite to suite.Run
func TestExampleTestSuite(t *testing.T) {
	suite.Run(t, new(ExampleTestSuite))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;To install Testify, use &lt;code&gt;go get&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go get github.com/stretchr/testify
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will then make the following packages available to you:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;github.com/stretchr/testify/assert
github.com/stretchr/testify/require
github.com/stretchr/testify/mock
github.com/stretchr/testify/suite
github.com/stretchr/testify/http (deprecated)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Import the &lt;code&gt;testify/assert&lt;/code&gt; package into your code using this template:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package yours

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestSomething(t *testing.T) {
	assert.True(t, true, "True is true!")
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Staying up to date&lt;/h1&gt; 
&lt;p&gt;To update Testify to the latest version, use &lt;code&gt;go get -u github.com/stretchr/testify&lt;/code&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Supported go versions&lt;/h1&gt; 
&lt;p&gt;We currently support the most recent major Go versions from 1.19 onward.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;Please feel free to submit issues, fork the repository and send pull requests!&lt;/p&gt; 
&lt;p&gt;When submitting an issue, we ask that you please include a complete test function that demonstrates the issue. Extra credit for those using Testify to write the test code that demonstrates it.&lt;/p&gt; 
&lt;p&gt;Code generation is used. &lt;a href="https://github.com/search?q=repo%3Astretchr%2Ftestify%20%22Code%20generated%20with%22&amp;amp;type=code"&gt;Look for &lt;code&gt;Code generated with&lt;/code&gt;&lt;/a&gt; at the top of some files. Run &lt;code&gt;go generate ./...&lt;/code&gt; to update generated files.&lt;/p&gt; 
&lt;p&gt;We also chat on the &lt;a href="https://gophers.slack.com"&gt;Gophers Slack&lt;/a&gt; group in the &lt;code&gt;#testify&lt;/code&gt; and &lt;code&gt;#testify-dev&lt;/code&gt; channels.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;This project is licensed under the terms of the MIT license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>containerd/containerd</title>
      <link>https://github.com/containerd/containerd</link>
      <description>&lt;p&gt;An open and reliable container runtime&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cncf/artwork/master/projects/containerd/horizontal/color/containerd-horizontal-color.png#gh-light-mode-only" alt="containerd banner light mode" /&gt; &lt;img src="https://raw.githubusercontent.com/cncf/artwork/master/projects/containerd/horizontal/white/containerd-horizontal-white.png#gh-dark-mode-only" alt="containerd banner dark mode" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/containerd/containerd/v2"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/containerd/containerd/v2" alt="PkgGoDev" /&gt;&lt;/a&gt; &lt;a href="https://github.com/containerd/containerd/actions?query=workflow%3ACI+event%3Amerge_group"&gt;&lt;img src="https://github.com/containerd/containerd/actions/workflows/ci.yml/badge.svg?event=merge_group" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/containerd/containerd/actions?query=workflow%3ANightly"&gt;&lt;img src="https://github.com/containerd/containerd/workflows/Nightly/badge.svg?sanitize=true" alt="Nightlies" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/containerd/containerd/v2"&gt;&lt;img src="https://goreportcard.com/badge/github.com/containerd/containerd/v2" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/1271"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/1271/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/containerd/containerd"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/containerd/containerd/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://github.com/containerd/containerd/actions/workflows/links.yml"&gt;&lt;img src="https://github.com/containerd/containerd/actions/workflows/links.yml/badge.svg?sanitize=true" alt="Check Links" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;containerd is an industry-standard container runtime with an emphasis on simplicity, robustness, and portability. It is available as a daemon for Linux and Windows, which can manage the complete container lifecycle of its host system: image transfer and storage, container execution and supervision, low-level storage and network attachments, etc.&lt;/p&gt; 
&lt;p&gt;containerd is a member of CNCF with &lt;a href="https://landscape.cncf.io/?selected=containerd"&gt;'graduated'&lt;/a&gt; status.&lt;/p&gt; 
&lt;p&gt;containerd is designed to be embedded into a larger system, rather than being used directly by developers or end-users.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/containerd/containerd/main/docs/historical/design/architecture.png" alt="architecture" /&gt;&lt;/p&gt; 
&lt;h2&gt;Announcements&lt;/h2&gt; 
&lt;h3&gt;containerd v2.0 is now released!&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/containerd-2.0.md"&gt;&lt;code&gt;docs/containerd-2.0.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Now Recruiting&lt;/h3&gt; 
&lt;p&gt;We are a large inclusive OSS project that is welcoming help of any kind shape or form:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation help is needed to make the product easier to consume and extend.&lt;/li&gt; 
 &lt;li&gt;We need OSS community outreach/organizing help to get the word out; manage and create messaging and educational content; and help with social media, community forums/groups, and google groups.&lt;/li&gt; 
 &lt;li&gt;We are actively inviting new &lt;a href="https://github.com/containerd/project/raw/main/GOVERNANCE.md#security-advisors"&gt;security advisors&lt;/a&gt; to join the team.&lt;/li&gt; 
 &lt;li&gt;New subprojects are being created, core and non-core that could use additional development help.&lt;/li&gt; 
 &lt;li&gt;Each of the &lt;a href="https://github.com/containerd"&gt;containerd projects&lt;/a&gt; has a list of issues currently being worked on or that need help resolving. 
  &lt;ul&gt; 
   &lt;li&gt;If the issue has not already been assigned to someone or has not made recent progress, and you are interested, please inquire.&lt;/li&gt; 
   &lt;li&gt;If you are interested in starting with a smaller/beginner-level issue, look for issues with an &lt;code&gt;exp/beginner&lt;/code&gt; tag, for example &lt;a href="https://github.com/containerd/containerd/issues?q=is%3Aissue+is%3Aopen+label%3Aexp%2Fbeginner"&gt;containerd/containerd beginner issues.&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;See our documentation on &lt;a href="https://containerd.io"&gt;containerd.io&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/ops.md"&gt;for ops and admins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/namespaces.md"&gt;namespaces&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/client-opts.md"&gt;client options&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To get started contributing to containerd, see &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you are interested in trying out containerd see our example at &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/getting-started.md"&gt;Getting Started&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Nightly builds&lt;/h2&gt; 
&lt;p&gt;There are nightly builds available for download &lt;a href="https://github.com/containerd/containerd/actions?query=workflow%3ANightly"&gt;here&lt;/a&gt;. Binaries are generated from &lt;code&gt;main&lt;/code&gt; branch every night for &lt;code&gt;Linux&lt;/code&gt; and &lt;code&gt;Windows&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Please be aware: nightly builds might have critical bugs, it's not recommended for use in production and no support provided.&lt;/p&gt; 
&lt;h2&gt;Kubernetes (k8s) CI Dashboard Group&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://testgrid.k8s.io/containerd"&gt;k8s CI dashboard group for containerd&lt;/a&gt; contains test results regarding the health of kubernetes when run against main and a number of containerd release branches.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://testgrid.k8s.io/containerd-periodic"&gt;containerd-periodics&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Runtime Requirements&lt;/h2&gt; 
&lt;p&gt;Runtime requirements for containerd are very minimal. Most interactions with the Linux and Windows container feature sets are handled via &lt;a href="https://github.com/opencontainers/runc"&gt;runc&lt;/a&gt; and/or OS-specific libraries (e.g. &lt;a href="https://github.com/Microsoft/hcsshim"&gt;hcsshim&lt;/a&gt; for Microsoft). The current required version of &lt;code&gt;runc&lt;/code&gt; is described in &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/RUNC.md"&gt;RUNC.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There are specific features used by containerd core code and snapshotters that will require a minimum kernel version on Linux. With the understood caveat of distro kernel versioning, a reasonable starting point for Linux is a minimum 4.x kernel version.&lt;/p&gt; 
&lt;p&gt;The overlay filesystem snapshotter, used by default, uses features that were finalized in the 4.x kernel series. If you choose to use btrfs, there may be more flexibility in kernel version (minimum recommended is 3.18), but will require the btrfs kernel module and btrfs tools to be installed on your Linux distribution.&lt;/p&gt; 
&lt;p&gt;To use Linux checkpoint and restore features, you will need &lt;code&gt;criu&lt;/code&gt; installed on your system. See more details in &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/#checkpoint-and-restore"&gt;Checkpoint and Restore&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Build requirements for developers are listed in &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/BUILDING.md"&gt;BUILDING&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported Registries&lt;/h2&gt; 
&lt;p&gt;Any registry which is compliant with the &lt;a href="https://github.com/opencontainers/distribution-spec"&gt;OCI Distribution Specification&lt;/a&gt; is supported by containerd.&lt;/p&gt; 
&lt;p&gt;For configuring registries, see &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/hosts.md"&gt;registry host configuration documentation&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;For a detailed overview of containerd's core concepts and the features it supports, please refer to the &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/features.md"&gt;FEATURES.MD&lt;/a&gt; document.&lt;/p&gt; 
&lt;h3&gt;Releases and API Stability&lt;/h3&gt; 
&lt;p&gt;Please see &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/RELEASES.md"&gt;RELEASES.md&lt;/a&gt; for details on versioning and stability of containerd components.&lt;/p&gt; 
&lt;p&gt;Downloadable 64-bit Intel/AMD binaries of all official releases are available on our &lt;a href="https://github.com/containerd/containerd/releases"&gt;releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For other architectures and distribution support, you will find that many Linux distributions package their own containerd and provide it across several architectures, such as &lt;a href="https://launchpad.net/ubuntu/bionic/+package/containerd"&gt;Canonical's Ubuntu packaging&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Enabling command auto-completion&lt;/h4&gt; 
&lt;p&gt;Starting with containerd 1.4, the urfave client feature for auto-creation of bash and zsh autocompletion data is enabled. To use the autocomplete feature in a bash shell for example, source the autocomplete/ctr file in your &lt;code&gt;.bashrc&lt;/code&gt;, or manually like:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ source ./contrib/autocomplete/ctr
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Distribution of &lt;code&gt;ctr&lt;/code&gt; autocomplete for bash and zsh&lt;/h4&gt; 
&lt;p&gt;For bash, copy the &lt;code&gt;contrib/autocomplete/ctr&lt;/code&gt; script into &lt;code&gt;/etc/bash_completion.d/&lt;/code&gt; and rename it to &lt;code&gt;ctr&lt;/code&gt;. The &lt;code&gt;zsh_autocomplete&lt;/code&gt; file is also available and can be used similarly for zsh users.&lt;/p&gt; 
&lt;p&gt;Provide documentation to users to &lt;code&gt;source&lt;/code&gt; this file into their shell if you don't place the autocomplete file in a location where it is automatically loaded for the user's shell environment.&lt;/p&gt; 
&lt;h3&gt;CRI&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;cri&lt;/code&gt; is a &lt;a href="https://containerd.io/"&gt;containerd&lt;/a&gt; plugin implementation of the Kubernetes &lt;a href="https://github.com/kubernetes/cri-api/raw/master/pkg/apis/runtime/v1/api.proto"&gt;container runtime interface (CRI)&lt;/a&gt;. With it, you are able to use containerd as the container runtime for a Kubernetes cluster.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/containerd/containerd/main/docs/cri/cri.png" alt="cri" /&gt;&lt;/p&gt; 
&lt;h4&gt;CRI Status&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;cri&lt;/code&gt; is a native plugin of containerd. Since containerd 1.1, the cri plugin is built into the release binaries and enabled by default.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;cri&lt;/code&gt; plugin has reached GA status, representing that it is:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Feature complete&lt;/li&gt; 
 &lt;li&gt;Works with Kubernetes 1.10 and above&lt;/li&gt; 
 &lt;li&gt;Passes all &lt;a href="https://github.com/kubernetes/community/raw/master/contributors/devel/sig-node/cri-validation.md"&gt;CRI validation tests&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Passes all &lt;a href="https://github.com/kubernetes/community/raw/master/contributors/devel/sig-node/e2e-node-tests.md"&gt;node e2e tests&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Passes all &lt;a href="https://github.com/kubernetes/community/raw/master/contributors/devel/sig-testing/e2e-tests.md"&gt;e2e tests&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See results on the containerd k8s &lt;a href="https://testgrid.k8s.io/containerd"&gt;test dashboard&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Validating Your &lt;code&gt;cri&lt;/code&gt; Setup&lt;/h4&gt; 
&lt;p&gt;A Kubernetes incubator project, &lt;a href="https://github.com/kubernetes-sigs/cri-tools"&gt;cri-tools&lt;/a&gt;, includes programs for exercising CRI implementations. More importantly, cri-tools includes the program &lt;code&gt;critest&lt;/code&gt; which is used for running &lt;a href="https://github.com/kubernetes/community/raw/master/contributors/devel/sig-node/cri-validation.md"&gt;CRI Validation Testing&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;CRI Guides&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/contrib/ansible/README.md"&gt;Installing with Ansible and Kubeadm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/getting-started.md"&gt;For Non-Ansible Users, Preforming a Custom Installation Using the Release Tarball and Kubeadm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/cri/testing.md"&gt;CRI Plugin Testing Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/cri/crictl.md"&gt;Debugging Pods, Containers, and Images with &lt;code&gt;crictl&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/cri/config.md"&gt;Configuring &lt;code&gt;cri&lt;/code&gt; Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/containerd/containerd/raw/main/docs/man/containerd-config.8.md"&gt;Configuring containerd&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Communication&lt;/h3&gt; 
&lt;p&gt;For async communication and long-running discussions please use issues and pull requests on the GitHub repo. This will be the best place to discuss design and implementation.&lt;/p&gt; 
&lt;p&gt;For sync communication catch us in the &lt;code&gt;#containerd&lt;/code&gt; and &lt;code&gt;#containerd-dev&lt;/code&gt; Slack channels on Cloud Native Computing Foundation's (CNCF) Slack - &lt;code&gt;cloud-native.slack.com&lt;/code&gt;. Everyone is welcome to join and chat. &lt;a href="https://slack.cncf.io"&gt;Get Invite to CNCF Slack.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Join our next community meeting hosted on Zoom. The schedule is posted on the &lt;a href="https://www.cncf.io/calendar/"&gt;CNCF Calendar&lt;/a&gt; (search 'containerd' to filter).&lt;/p&gt; 
&lt;h3&gt;Security audit&lt;/h3&gt; 
&lt;p&gt;Security audits for the containerd project are hosted on our website. Please see the &lt;a href="https://containerd.io/security/"&gt;security page at containerd.io&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Reporting security issues&lt;/h3&gt; 
&lt;p&gt;Please follow the instructions at &lt;a href="https://github.com/containerd/project/raw/main/SECURITY.md#reporting-a-vulnerability"&gt;containerd/project&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Licenses&lt;/h2&gt; 
&lt;p&gt;The containerd codebase is released under the &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/LICENSE"&gt;Apache 2.0 license&lt;/a&gt;. The README.md file and files in the "docs" folder are licensed under the Creative Commons Attribution 4.0 International License. You may obtain a copy of the license, titled CC-BY-4.0, at &lt;a href="http://creativecommons.org/licenses/by/4.0/"&gt;http://creativecommons.org/licenses/by/4.0/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Project details&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;containerd&lt;/strong&gt; is the primary open source project within the broader containerd GitHub organization. However, all projects within the repo have common maintainership, governance, and contributing guidelines which are stored in a &lt;code&gt;project&lt;/code&gt; repository commonly for all containerd projects.&lt;/p&gt; 
&lt;p&gt;Please find all these core project documents, including the:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/containerd/project/raw/main/GOVERNANCE.md"&gt;Project governance&lt;/a&gt;,&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/containerd/project/raw/main/MAINTAINERS"&gt;Maintainers&lt;/a&gt;,&lt;/li&gt; 
 &lt;li&gt;and &lt;a href="https://github.com/containerd/project/raw/main/CONTRIBUTING.md"&gt;Contributing guidelines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;information in our &lt;a href="https://github.com/containerd/project"&gt;&lt;code&gt;containerd/project&lt;/code&gt;&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;Adoption&lt;/h2&gt; 
&lt;p&gt;Interested to see who is using containerd? Are you using containerd in a project? Please add yourself via pull request to our &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/ADOPTERS.md"&gt;ADOPTERS.md&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ccfos/nightingale</title>
      <link>https://github.com/ccfos/nightingale</link>
      <description>&lt;p&gt;Nightingale for monitoring and alerting, just as Grafana for visualization.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://github.com/ccfos/nightingale"&gt; &lt;img src="https://raw.githubusercontent.com/ccfos/nightingale/main/doc/img/Nightingale_L_V.png" alt="nightingale - cloud native monitoring" width="100" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;b&gt;Open-Source Alerting Expert&lt;/b&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://flashcat.cloud/docs/"&gt; &lt;img alt="Docs" src="https://img.shields.io/badge/docs-get%20started-brightgreen" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/u/flashcatcloud"&gt; &lt;img alt="Docker pulls" src="https://img.shields.io/docker/pulls/flashcatcloud/nightingale" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ccfos/nightingale/graphs/contributors"&gt; &lt;img alt="GitHub contributors" src="https://img.shields.io/github/contributors-anon/ccfos/nightingale" /&gt;&lt;/a&gt; &lt;img alt="GitHub Repo stars" src="https://img.shields.io/github/stars/ccfos/nightingale" /&gt; &lt;img alt="GitHub forks" src="https://img.shields.io/github/forks/ccfos/nightingale" /&gt; &lt;br /&gt;&lt;img alt="GitHub Repo issues" src="https://img.shields.io/github/issues/ccfos/nightingale" /&gt; &lt;img alt="GitHub Repo issues closed" src="https://img.shields.io/github/issues-closed/ccfos/nightingale" /&gt; &lt;img alt="GitHub latest release" src="https://img.shields.io/github/v/release/ccfos/nightingale" /&gt; &lt;img alt="License" src="https://img.shields.io/badge/license-Apache--2.0-blue" /&gt; &lt;a href="https://n9e-talk.slack.com/"&gt; &lt;img alt="GitHub contributors" src="https://img.shields.io/badge/join%20slack-%23n9e-brightgreen.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/ccfos/nightingale/main/README.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ccfos/nightingale/main/README_zh.md"&gt;中文&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🎯 What is Nightingale&lt;/h2&gt; 
&lt;p&gt;Nightingale is an open-source monitoring project that focuses on alerting. Similar to Grafana, Nightingale also connects with various existing data sources. However, while Grafana emphasizes visualization, Nightingale places greater emphasis on the alerting engine, as well as the processing and distribution of alarms.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The Nightingale project was initially developed and open-sourced by DiDi.inc. On May 11, 2022, it was donated to the Open Source Development Committee of the China Computer Federation (CCF ODC).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://n9e.github.io/img/global/arch-bg.png" alt="" /&gt;&lt;/p&gt; 
&lt;h2&gt;💡 How Nightingale Works&lt;/h2&gt; 
&lt;p&gt;Many users have already collected metrics and log data. In this case, you can connect your storage repositories (such as VictoriaMetrics, ElasticSearch, etc.) as data sources in Nightingale. This allows you to configure alerting rules and notification rules within Nightingale, enabling the generation and distribution of alarms.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ccfos/nightingale/main/doc/img/readme/20240221152601.png" alt="Nightingale Product Architecture" /&gt;&lt;/p&gt; 
&lt;p&gt;Nightingale itself does not provide monitoring data collection capabilities. We recommend using &lt;a href="https://github.com/flashcatcloud/categraf"&gt;Categraf&lt;/a&gt; as the collector, which integrates seamlessly with Nightingale.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/flashcatcloud/categraf"&gt;Categraf&lt;/a&gt; can collect monitoring data from operating systems, network devices, various middleware, and databases. It pushes this data to Nightingale via the &lt;code&gt;Prometheus Remote Write&lt;/code&gt; protocol. Nightingale then stores the monitoring data in a time-series database (such as Prometheus, VictoriaMetrics, etc.) and provides alerting and visualization capabilities.&lt;/p&gt; 
&lt;p&gt;For certain edge data centers with poor network connectivity to the central Nightingale server, we offer a distributed deployment mode for the alerting engine. In this mode, even if the network is disconnected, the alerting functionality remains unaffected.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ccfos/nightingale/main/doc/img/readme/20240222102119.png" alt="Edge Deployment Mode" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;In the above diagram, Data Center A has a good network with the central data center, so it uses the Nightingale process in the central data center as the alerting engine. Data Center B has a poor network with the central data center, so it deploys &lt;code&gt;n9e-edge&lt;/code&gt; as the alerting engine to handle alerting for its own data sources.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🔕 Alert Noise Reduction, Escalation, and Collaboration&lt;/h2&gt; 
&lt;p&gt;Nightingale focuses on being an alerting engine, responsible for generating alarms and flexibly distributing them based on rules. It supports 20 built-in notification medias (such as phone calls, SMS, email, DingTalk, Slack, etc.).&lt;/p&gt; 
&lt;p&gt;If you have more advanced requirements, such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Want to consolidate events from multiple monitoring systems into one platform for unified noise reduction, response handling, and data analysis.&lt;/li&gt; 
 &lt;li&gt;Want to support personnel scheduling, practice on-call culture, and support alert escalation (to avoid missing alerts) and collaborative handling.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then Nightingale is not suitable. It is recommended that you choose on-call products such as PagerDuty and FlashDuty. These products are simple and easy to use.&lt;/p&gt; 
&lt;h2&gt;🗨️ Communication Channels&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Report Bugs:&lt;/strong&gt; It is highly recommended to submit issues via the &lt;a href="https://github.com/ccfos/nightingale/issues/new?assignees=&amp;amp;labels=kind%2Fbug&amp;amp;projects=&amp;amp;template=bug_report.yml"&gt;Nightingale GitHub Issue tracker&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; For more information, we recommend thoroughly browsing the &lt;a href="https://n9e.github.io/"&gt;Nightingale Documentation Site&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔑 Key Features&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ccfos/nightingale/main/doc/img/readme/2025-05-23_18-43-37.png" alt="Nightingale Alerting rules" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Nightingale supports alerting rules, mute rules, subscription rules, and notification rules. It natively supports 20 types of notification media and allows customization of message templates.&lt;/li&gt; 
 &lt;li&gt;It supports event pipelines for Pipeline processing of alarms, facilitating automated integration with in-house systems. For example, it can append metadata to alarms or perform relabeling on events.&lt;/li&gt; 
 &lt;li&gt;It introduces the concept of business groups and a permission system to manage various rules in a categorized manner.&lt;/li&gt; 
 &lt;li&gt;Many databases and middleware come with built-in alert rules that can be directly imported and used. It also supports direct import of Prometheus alerting rules.&lt;/li&gt; 
 &lt;li&gt;It supports alerting self-healing, which automatically triggers a script to execute predefined logic after an alarm is generated—such as cleaning up disk space or capturing the current system state.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ccfos/nightingale/main/doc/img/readme/2025-05-30_08-49-28.png" alt="Nightingale Alarm Dashboard" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Nightingale archives historical alarms and supports multi-dimensional query and statistics.&lt;/li&gt; 
 &lt;li&gt;It supports flexible aggregation grouping, allowing a clear view of the distribution of alarms across the company.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ccfos/nightingale/main/doc/img/readme/2025-05-23_18-46-06.png" alt="Nightingale Integration Center" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Nightingale has built-in metric descriptions, dashboards, and alerting rules for common operating systems, middleware, and databases, which are contributed by the community with varying quality.&lt;/li&gt; 
 &lt;li&gt;It directly receives data via multiple protocols such as Remote Write, OpenTSDB, Datadog, and Falcon, integrates with various Agents.&lt;/li&gt; 
 &lt;li&gt;It supports data sources like Prometheus, ElasticSearch, Loki, ClickHouse, MySQL, Postgres, allowing alerting based on data from these sources.&lt;/li&gt; 
 &lt;li&gt;Nightingale can be easily embedded into internal enterprise systems (e.g. Grafana, CMDB), and even supports configuring menu visibility for these embedded systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ccfos/nightingale/main/doc/img/readme/2025-05-23_18-49-02.png" alt="Nightingale dashboards" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Nightingale supports dashboard functionality, including common chart types, and comes with pre-built dashboards. The image above is a screenshot of one of these dashboards.&lt;/li&gt; 
 &lt;li&gt;If you are already accustomed to Grafana, it is recommended to continue using Grafana for visualization, as Grafana has deeper expertise in this area.&lt;/li&gt; 
 &lt;li&gt;For machine-related monitoring data collected by Categraf, it is advisable to use Nightingale's built-in dashboards for viewing. This is because Categraf's metric naming follows Telegraf's convention, which differs from that of Node Exporter.&lt;/li&gt; 
 &lt;li&gt;Due to Nightingale's concept of business groups (where machines can belong to different groups), there may be scenarios where you only want to view machines within the current business group on the dashboard. Thus, Nightingale's dashboards can be linked with business groups for interactive filtering.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🌟 Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#ccfos/nightingale&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=ccfos/nightingale&amp;amp;type=Date" alt="Stargazers over time" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🔥 Users&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ccfos/nightingale/main/doc/img/readme/logos.png" alt="User Logos" /&gt;&lt;/p&gt; 
&lt;h2&gt;🤝 Community Co-Building&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;❇️ Please read the &lt;a href="https://raw.githubusercontent.com/ccfos/nightingale/main/doc/community-governance.md"&gt;Nightingale Open Source Project and Community Governance Draft&lt;/a&gt;. We sincerely welcome every user, developer, company, and organization to use Nightingale, actively report bugs, submit feature requests, share best practices, and help build a professional and active open-source community.&lt;/li&gt; 
 &lt;li&gt;❤️ Nightingale Contributors&lt;/li&gt; 
&lt;/ul&gt; 
&lt;a href="https://github.com/ccfos/nightingale/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=ccfos/nightingale" /&gt; &lt;/a&gt; 
&lt;h2&gt;📜 License&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/didi/nightingale/raw/main/LICENSE"&gt;Apache License V2.0&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>livekit/livekit</title>
      <link>https://github.com/livekit/livekit</link>
      <description>&lt;p&gt;End-to-end realtime stack for connecting humans and AI&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="/.github/banner_dark.png" /&gt; 
 &lt;source media="(prefers-color-scheme: light)" srcset="/.github/banner_light.png" /&gt; 
 &lt;img style="width:100%;" alt="The LiveKit icon, the name of the repository and some sample code in the background." src="https://raw.githubusercontent.com/livekit/livekit/main/.github/banner_light.png" /&gt; 
&lt;/picture&gt; 
&lt;!--END_BANNER_IMAGE--&gt; 
&lt;h1&gt;LiveKit: Real-time video, audio and data for developers&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://livekit.io"&gt;LiveKit&lt;/a&gt; is an open source project that provides scalable, multi-user conferencing based on WebRTC. It's designed to provide everything you need to build real-time video audio data capabilities in your applications.&lt;/p&gt; 
&lt;p&gt;LiveKit's server is written in Go, using the awesome &lt;a href="https://github.com/pion/webrtc"&gt;Pion WebRTC&lt;/a&gt; implementation.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/livekit/livekit/stargazers/"&gt;&lt;img src="https://img.shields.io/github/stars/livekit/livekit?style=social&amp;amp;label=Star&amp;amp;maxAge=2592000" alt="GitHub stars" /&gt;&lt;/a&gt; &lt;a href="https://livekit.io/join-slack"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Flivekit.io%2Fbadges%2Fslack" alt="Slack community" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/livekit"&gt;&lt;img src="https://img.shields.io/twitter/follow/livekit" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/livekit/livekit"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;a href="https://github.com/livekit/livekit/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/livekit/livekit" alt="GitHub release (latest SemVer)" /&gt;&lt;/a&gt; &lt;a href="https://github.com/livekit/livekit/actions/workflows/buildtest.yaml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/livekit/livekit/buildtest.yaml?branch=master" alt="GitHub Workflow Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/livekit/livekit/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/livekit/livekit" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Scalable, distributed WebRTC SFU (Selective Forwarding Unit)&lt;/li&gt; 
 &lt;li&gt;Modern, full-featured client SDKs&lt;/li&gt; 
 &lt;li&gt;Built for production, supports JWT authentication&lt;/li&gt; 
 &lt;li&gt;Robust networking and connectivity, UDP/TCP/TURN&lt;/li&gt; 
 &lt;li&gt;Easy to deploy: single binary, Docker or Kubernetes&lt;/li&gt; 
 &lt;li&gt;Advanced features including: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/client/tracks/subscribe/#speaker-detection"&gt;speaker detection&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/client/tracks/publish/#video-simulcast"&gt;simulcast&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.livekit.io/livekit-one-dot-zero/"&gt;end-to-end optimizations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/client/tracks/subscribe/#selective-subscription"&gt;selective subscription&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/server/managing-participants/"&gt;moderation APIs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;end-to-end encryption&lt;/li&gt; 
   &lt;li&gt;SVC codecs (VP9, AV1)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/server/webhooks/"&gt;webhooks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/self-hosting/distributed/"&gt;distributed and multi-region&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation &amp;amp; Guides&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.livekit.io"&gt;https://docs.livekit.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Live Demos&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://meet.livekit.io"&gt;LiveKit Meet&lt;/a&gt; (&lt;a href="https://github.com/livekit-examples/meet"&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://spatial-audio-demo.livekit.io/"&gt;Spatial Audio&lt;/a&gt; (&lt;a href="https://github.com/livekit-examples/spatial-audio"&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Livestreaming from OBS Studio (&lt;a href="https://github.com/livekit-examples/livestream"&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://livekit.io/kitt"&gt;AI voice assistant using ChatGPT&lt;/a&gt; (&lt;a href="https://github.com/livekit-examples/kitt"&gt;source&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/agents"&gt;Agents&lt;/a&gt;: build real-time multimodal AI applications with programmable backend participants&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/egress"&gt;Egress&lt;/a&gt;: record or multi-stream rooms and export individual tracks&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/ingress"&gt;Ingress&lt;/a&gt;: ingest streams from external sources like RTMP, WHIP, HLS, or OBS Studio&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;SDKs &amp;amp; Tools&lt;/h2&gt; 
&lt;h3&gt;Client SDKs&lt;/h3&gt; 
&lt;p&gt;Client SDKs enable your frontend to include interactive, multi-user experiences.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Repo&lt;/th&gt; 
   &lt;th&gt; &lt;a href="https://docs.livekit.io/home/client/events/#declarative-ui" target="_blank" rel="noopener noreferrer"&gt;Declarative UI&lt;/a&gt; &lt;/th&gt; 
   &lt;th&gt;Links&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;!-- BEGIN Template
  &lt;tr&gt;
    &lt;td&gt;Language&lt;/td&gt;
    &lt;td&gt;
      &lt;a href="" target="_blank" rel="noopener noreferrer"&gt;&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;&lt;/td&gt;
    &lt;td&gt;&lt;/td&gt;
  &lt;/tr&gt;
  END --&gt; 
  &lt;!-- JavaScript --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;JavaScript (TypeScript)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-js" target="_blank" rel="noopener noreferrer"&gt;client-sdk-js&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/livekit-react" target="_blank" rel="noopener noreferrer"&gt;React&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://docs.livekit.io/client-sdk-js/" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-js/tree/main/example" target="_blank" rel="noopener noreferrer"&gt;JS example&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-js/tree/main/example" target="_blank" rel="noopener noreferrer"&gt;React example&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Swift --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Swift (iOS / MacOS)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-swift" target="_blank" rel="noopener noreferrer"&gt;client-sdk-swift&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;Swift UI&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://docs.livekit.io/client-sdk-swift/" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-example-swift" target="_blank" rel="noopener noreferrer"&gt;example&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Kotlin --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kotlin (Android)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-android" target="_blank" rel="noopener noreferrer"&gt;client-sdk-android&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;Compose&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://docs.livekit.io/client-sdk-android/index.html" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-android/tree/main/sample-app/src/main/java/io/livekit/android/sample" target="_blank" rel="noopener noreferrer"&gt;example&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-android/tree/main/sample-app-compose/src/main/java/io/livekit/android/composesample" target="_blank" rel="noopener noreferrer"&gt;Compose example&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Flutter --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Flutter (all platforms)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-flutter" target="_blank" rel="noopener noreferrer"&gt;client-sdk-flutter&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;native&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://docs.livekit.io/client-sdk-flutter/" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-flutter/tree/main/example" target="_blank" rel="noopener noreferrer"&gt;example&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Unity --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Unity WebGL&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-unity-web" target="_blank" rel="noopener noreferrer"&gt;client-sdk-unity-web&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://livekit.github.io/client-sdk-unity-web/" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- React Native --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;React Native (beta)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-react-native" target="_blank" rel="noopener noreferrer"&gt;client-sdk-react-native&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;native&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Rust --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rust&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-rust" target="_blank" rel="noopener noreferrer"&gt;client-sdk-rust&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Server SDKs&lt;/h3&gt; 
&lt;p&gt;Server SDKs enable your backend to generate &lt;a href="https://docs.livekit.io/home/get-started/authentication/"&gt;access tokens&lt;/a&gt;, call &lt;a href="https://docs.livekit.io/reference/server/server-apis/"&gt;server APIs&lt;/a&gt;, and receive &lt;a href="https://docs.livekit.io/home/server/webhooks/"&gt;webhooks&lt;/a&gt;. In addition, the Go SDK includes client capabilities, enabling you to build automations that behave like end-users.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Language&lt;/th&gt; 
   &lt;th align="left"&gt;Repo&lt;/th&gt; 
   &lt;th align="left"&gt;Docs&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Go&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/server-sdk-go"&gt;server-sdk-go&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://pkg.go.dev/github.com/livekit/server-sdk-go"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;JavaScript (TypeScript)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/server-sdk-js"&gt;server-sdk-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://docs.livekit.io/server-sdk-js/"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Ruby&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/server-sdk-ruby"&gt;server-sdk-ruby&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Java (Kotlin)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/server-sdk-kotlin"&gt;server-sdk-kotlin&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Python (community)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/python-sdks"&gt;python-sdks&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;PHP (community)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agence104/livekit-server-sdk-php"&gt;agence104/livekit-server-sdk-php&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/livekit-cli"&gt;CLI&lt;/a&gt; - command line interface &amp;amp; load tester&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/livekit/livekit-server"&gt;Docker image&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/livekit-helm"&gt;Helm charts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] We recommend installing &lt;a href="https://github.com/livekit/livekit-cli"&gt;LiveKit CLI&lt;/a&gt; along with the server. It lets you access server APIs, create tokens, and generate test traffic.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The following will install LiveKit's media server:&lt;/p&gt; 
&lt;h3&gt;MacOS&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;brew install livekit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl -sSL https://get.livekit.io | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;Download the &lt;a href="https://github.com/livekit/livekit/releases/latest"&gt;latest release here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Starting LiveKit&lt;/h3&gt; 
&lt;p&gt;Start LiveKit in development mode by running &lt;code&gt;livekit-server --dev&lt;/code&gt;. It'll use a placeholder API key/secret pair.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;API Key: devkey
API Secret: secret
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To customize your setup for production, refer to our &lt;a href="https://docs.livekit.io/deploy/"&gt;deployment docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Creating access token&lt;/h3&gt; 
&lt;p&gt;A user connecting to a LiveKit room requires an &lt;a href="https://docs.livekit.io/home/get-started/authentication/#creating-a-token"&gt;access token&lt;/a&gt;. Access tokens (JWT) encode the user's identity and the room permissions they've been granted. You can generate a token with our CLI:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;lk token create \
    --api-key devkey --api-secret secret \
    --join --room my-first-room --identity user1 \
    --valid-for 24h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Test with example app&lt;/h3&gt; 
&lt;p&gt;Head over to our &lt;a href="https://example.livekit.io"&gt;example app&lt;/a&gt; and enter a generated token to connect to your LiveKit server. This app is built with our &lt;a href="https://github.com/livekit/livekit-react"&gt;React SDK&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Once connected, your video and audio are now being published to your new LiveKit instance!&lt;/p&gt; 
&lt;h3&gt;Simulating a test publisher&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;lk room join \
    --url ws://localhost:7880 \
    --api-key devkey --api-secret secret \
    --identity bot-user1 \
    --publish-demo \
    my-first-room
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command publishes a looped demo video to a room. Due to how the video clip was encoded (keyframes every 3s), there's a slight delay before the browser has sufficient data to begin rendering frames. This is an artifact of the simulation.&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;h3&gt;Use LiveKit Cloud&lt;/h3&gt; 
&lt;p&gt;LiveKit Cloud is the fastest and most reliable way to run LiveKit. Every project gets free monthly bandwidth and transcoding credits.&lt;/p&gt; 
&lt;p&gt;Sign up for &lt;a href="https://cloud.livekit.io/"&gt;LiveKit Cloud&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Self-host&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href="https://docs.livekit.io/deploy/"&gt;deployment docs&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;Pre-requisites:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go 1.23+ is installed&lt;/li&gt; 
 &lt;li&gt;GOPATH/bin is in your PATH&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/livekit/livekit
cd livekit
./bootstrap.sh
mage
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome your contributions toward improving LiveKit! Please join us &lt;a href="http://livekit.io/join-slack"&gt;on Slack&lt;/a&gt; to discuss your ideas and/or PRs.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;LiveKit server is licensed under Apache License v2.0.&lt;/p&gt; 
&lt;!--BEGIN_REPO_NAV--&gt; 
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table&gt; 
 &lt;thead&gt;
  &lt;tr&gt;
   &lt;th colspan="2"&gt;LiveKit Ecosystem&lt;/th&gt;
  &lt;/tr&gt;
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt;
   &lt;td&gt;LiveKit SDKs&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://github.com/livekit/client-sdk-js"&gt;Browser&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-swift"&gt;iOS/macOS/visionOS&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-android"&gt;Android&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-flutter"&gt;Flutter&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-react-native"&gt;React Native&lt;/a&gt; · &lt;a href="https://github.com/livekit/rust-sdks"&gt;Rust&lt;/a&gt; · &lt;a href="https://github.com/livekit/node-sdks"&gt;Node.js&lt;/a&gt; · &lt;a href="https://github.com/livekit/python-sdks"&gt;Python&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-unity"&gt;Unity&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-unity-web"&gt;Unity (WebGL)&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-esp32"&gt;ESP32&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;Server APIs&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://github.com/livekit/node-sdks"&gt;Node.js&lt;/a&gt; · &lt;a href="https://github.com/livekit/server-sdk-go"&gt;Golang&lt;/a&gt; · &lt;a href="https://github.com/livekit/server-sdk-ruby"&gt;Ruby&lt;/a&gt; · &lt;a href="https://github.com/livekit/server-sdk-kotlin"&gt;Java/Kotlin&lt;/a&gt; · &lt;a href="https://github.com/livekit/python-sdks"&gt;Python&lt;/a&gt; · &lt;a href="https://github.com/livekit/rust-sdks"&gt;Rust&lt;/a&gt; · &lt;a href="https://github.com/agence104/livekit-server-sdk-php"&gt;PHP (community)&lt;/a&gt; · &lt;a href="https://github.com/pabloFuente/livekit-server-sdk-dotnet"&gt;.NET (community)&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;UI Components&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://github.com/livekit/components-js"&gt;React&lt;/a&gt; · &lt;a href="https://github.com/livekit/components-android"&gt;Android Compose&lt;/a&gt; · &lt;a href="https://github.com/livekit/components-swift"&gt;SwiftUI&lt;/a&gt; · &lt;a href="https://github.com/livekit/components-flutter"&gt;Flutter&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;Agents Frameworks&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://github.com/livekit/agents"&gt;Python&lt;/a&gt; · &lt;a href="https://github.com/livekit/agents-js"&gt;Node.js&lt;/a&gt; · &lt;a href="https://github.com/livekit/agent-playground"&gt;Playground&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;Services&lt;/td&gt;
   &lt;td&gt;&lt;b&gt;LiveKit server&lt;/b&gt; · &lt;a href="https://github.com/livekit/egress"&gt;Egress&lt;/a&gt; · &lt;a href="https://github.com/livekit/ingress"&gt;Ingress&lt;/a&gt; · &lt;a href="https://github.com/livekit/sip"&gt;SIP&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;Resources&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://docs.livekit.io"&gt;Docs&lt;/a&gt; · &lt;a href="https://github.com/livekit-examples"&gt;Example apps&lt;/a&gt; · &lt;a href="https://livekit.io/cloud"&gt;Cloud&lt;/a&gt; · &lt;a href="https://docs.livekit.io/home/self-hosting/deployment"&gt;Self-hosting&lt;/a&gt; · &lt;a href="https://github.com/livekit/livekit-cli"&gt;CLI&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!--END_REPO_NAV--&gt;</description>
    </item>
    
    <item>
      <title>google/cel-go</title>
      <link>https://github.com/google/cel-go</link>
      <description>&lt;p&gt;Fast, portable, non-Turing complete expression evaluation with gradual typing (Go)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Common Expression Language&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/google/cel-go"&gt;&lt;img src="https://goreportcard.com/badge/github.com/google/cel-go" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/github.com/google/cel-go"&gt;&lt;img src="https://godoc.org/github.com/google/cel-go?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The Common Expression Language (CEL) is a non-Turing complete language designed for simplicity, speed, safety, and portability. CEL's C-like &lt;a href="https://github.com/google/cel-spec"&gt;syntax&lt;/a&gt; looks nearly identical to equivalent expressions in C++, Go, Java, and TypeScript.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;// Check whether a resource name starts with a group name.
resource.name.startsWith("/groups/" + auth.claims.group)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;// Determine whether the request is in the permitted time window.
request.time - resource.age &amp;lt; duration("24h")
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;// Check whether all resource names in a list match a given filter.
auth.claims.email_verified &amp;amp;&amp;amp; resources.all(r, r.startsWith(auth.claims.email))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A CEL "program" is a single expression. The examples have been tagged as &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;go&lt;/code&gt;, and &lt;code&gt;typescript&lt;/code&gt; within the markdown to showcase the commonality of the syntax.&lt;/p&gt; 
&lt;p&gt;CEL is ideal for lightweight expression evaluation when a fully sandboxed scripting language is too resource intensive. To get started, try the &lt;a href="https://codelabs.developers.google.com/codelabs/cel-go/index.html"&gt;Codelab&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/cel-go/master/#overview"&gt;Overview&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/cel-go/master/#environment-setup"&gt;Environment Setup&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/cel-go/master/#parse-and-check"&gt;Parse and Check&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/cel-go/master/#macros"&gt;Macros&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/cel-go/master/#evaluate"&gt;Evaluate&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/cel-go/master/#Errors"&gt;Errors&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/cel-go/master/examples/README.md"&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/cel-go/master/#install"&gt;Install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/cel-go/master/#common-questions"&gt;Common Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/cel-go/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Determine the variables and functions you want to provide to CEL. Parse and check an expression to make sure it's valid. Then evaluate the output AST against some input. Checking is optional, but strongly encouraged.&lt;/p&gt; 
&lt;h3&gt;Environment Setup&lt;/h3&gt; 
&lt;p&gt;Let's expose &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;group&lt;/code&gt; variables to CEL using the &lt;code&gt;cel.Variable&lt;/code&gt; environment option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import "github.com/google/cel-go/cel"

env, err := cel.NewEnv(
    cel.Variable("name", cel.StringType),
    cel.Variable("group", cel.StringType),
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That's it. The environment is ready to be used for parsing and type-checking. CEL supports all the usual primitive types in addition to lists, maps, as well as first-class support for JSON and Protocol Buffers.&lt;/p&gt; 
&lt;h3&gt;Parse and Check&lt;/h3&gt; 
&lt;p&gt;The parsing phase indicates whether the expression is syntactically valid and expands any macros present within the environment. Parsing and checking are more computationally expensive than evaluation, and it is recommended that expressions be parsed and checked ahead of time.&lt;/p&gt; 
&lt;p&gt;The parse and check phases are combined for convenience into the &lt;code&gt;Compile&lt;/code&gt; step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ast, issues := env.Compile(`name.startsWith("/groups/" + group)`)
if issues != nil &amp;amp;&amp;amp; issues.Err() != nil {
    log.Fatalf("type-check error: %s", issues.Err())
}
prg, err := env.Program(ast)
if err != nil {
    log.Fatalf("program construction error: %s", err)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;cel.Program&lt;/code&gt; generated at the end of parse and check is stateless, thread-safe, and cachable.&lt;/p&gt; 
&lt;p&gt;Type-checking is an optional, but strongly encouraged step that can reject some semantically invalid expressions using static analysis. Additionally, the check produces metadata which can improve function invocation performance and object field selection at evaluation-time.&lt;/p&gt; 
&lt;h4&gt;Macros&lt;/h4&gt; 
&lt;p&gt;Macros are optional but enabled by default. Macros were introduced to support optional CEL features that might not be desired in all use cases without the syntactic burden and complexity such features might desire if they were part of the core CEL syntax. Macros are expanded at parse time and their expansions are type-checked at check time.&lt;/p&gt; 
&lt;p&gt;For example, when macros are enabled it is possible to support bounded iteration / fold operators. The macros &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;exists&lt;/code&gt;, &lt;code&gt;exists_one&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, and &lt;code&gt;map&lt;/code&gt; are particularly useful for evaluating a single predicate against list and map values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Ensure all tweets are less than 140 chars
tweets.all(t, t.size() &amp;lt;= 140)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;has&lt;/code&gt; macro is useful for unifying field presence testing logic across protobuf types and dynamic (JSON-like) types.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Test whether the field is a non-default value if proto-based, or defined
// in the JSON case.
has(message.field)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Both cases traditionally require special syntax at the language level, but these features are exposed via macros in CEL.&lt;/p&gt; 
&lt;h3&gt;Evaluate&lt;/h3&gt; 
&lt;p&gt;Now, evaluate for fun and profit. The evaluation is thread-safe and side-effect free. Many different inputs can be sent to the same &lt;code&gt;cel.Program&lt;/code&gt; and if fields are present in the input, but not referenced in the expression, they are ignored.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;// The `out` var contains the output of a successful evaluation.
// The `details' var would contain intermediate evaluation state if enabled as
// a cel.ProgramOption. This can be useful for visualizing how the `out` value
// was arrive at.
out, details, err := prg.Eval(map[string]interface{}{
    "name": "/groups/acme.co/documents/secret-stuff",
    "group": "acme.co"})
fmt.Println(out) // 'true'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Partial State&lt;/h4&gt; 
&lt;p&gt;What if &lt;code&gt;name&lt;/code&gt; hadn't been supplied? CEL is designed for this case. In distributed apps it is not uncommon to have edge caches and central services. If possible, evaluation should happen at the edge, but it isn't always possible to know the full state required for all values and functions present in the CEL expression.&lt;/p&gt; 
&lt;p&gt;To improve the odds of successful evaluation with partial state, CEL uses commutative logical operators &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;||&lt;/code&gt;. If an error or unknown value (not the same thing) is encountered on the left-hand side, the right hand side is evaluated also to determine the outcome. While it is possible to implement evaluation with partial state without this feature, this method was chosen because it aligns with the semantics of SQL evaluation and because it's more robust to evaluation against dynamic data types such as JSON inputs.&lt;/p&gt; 
&lt;p&gt;In the following truth-table, the symbols &lt;code&gt;&amp;lt;x&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;y&amp;gt;&lt;/code&gt; represent error or unknown values, with the &lt;code&gt;?&lt;/code&gt; indicating that the branch is not taken due to short-circuiting. When the result is &lt;code&gt;&amp;lt;x, y&amp;gt;&lt;/code&gt; this means that the both args are possibly relevant to the result.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Expression&lt;/th&gt; 
   &lt;th&gt;Result&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;false &amp;amp;&amp;amp; ?&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;true &amp;amp;&amp;amp; false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;x&amp;gt; &amp;amp;&amp;amp; false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;true &amp;amp;&amp;amp; true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;true &amp;amp;&amp;amp; &amp;lt;x&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;x&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;x&amp;gt; &amp;amp;&amp;amp; true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;x&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;x&amp;gt; &amp;amp;&amp;amp; &amp;lt;y&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;x, y&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;true || ?&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;false || true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;x&amp;gt; || true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;false || false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;false || &amp;lt;x&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;x&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;x&amp;gt; || false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;x&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;x&amp;gt; || &amp;lt;y&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;x, y&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;In the cases where unknowns are expected, &lt;code&gt;cel.EvalOptions(cel.OptTrackState)&lt;/code&gt; should be enabled. The &lt;code&gt;details&lt;/code&gt; value returned by &lt;code&gt;Eval()&lt;/code&gt; will contain the intermediate evaluation values and can be provided to the &lt;code&gt;interpreter.Prune&lt;/code&gt; function to generate a residual expression. e.g.:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;// Residual when `name` omitted:
name.startsWith("/groups/acme.co")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This technique can be useful when there are variables that are expensive to compute unless they are absolutely needed. This functionality will be the focus of many future improvements, so keep an eye out for more goodness here!&lt;/p&gt; 
&lt;h3&gt;Errors&lt;/h3&gt; 
&lt;p&gt;Parse and check errors have friendly error messages with pointers to where the issues occur in source:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;ERROR: &amp;lt;input&amp;gt;:1:40: undefined field 'undefined'
    | TestAllTypes{single_int32: 1, undefined: 2}
    | .......................................^`,
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Both the parsed and checked expressions contain source position information about each node that appears in the output AST. This information can be used to determine error locations at evaluation time as well.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;CEL-Go supports &lt;code&gt;modules&lt;/code&gt; and uses semantic versioning. For more info see the &lt;a href="https://github.com/golang/go/wiki/Modules"&gt;Go Modules&lt;/a&gt; docs.&lt;/p&gt; 
&lt;p&gt;And of course, there is always the option to build from source directly.&lt;/p&gt; 
&lt;h2&gt;Common Questions&lt;/h2&gt; 
&lt;h3&gt;Why not JavaScript, Lua, or WASM?&lt;/h3&gt; 
&lt;p&gt;JavaScript and Lua are rich languages that require sandboxing to execute safely. Sandboxing is costly and factors into the "what will I let users evaluate?" question heavily when the answer is anything more than O(n) complexity.&lt;/p&gt; 
&lt;p&gt;CEL evaluates linearly with respect to the size of the expression and the input being evaluated when macros are disabled. The only functions beyond the built-ins that may be invoked are provided by the host environment. While extension functions may be more complex, this is a choice by the application embedding CEL.&lt;/p&gt; 
&lt;p&gt;But, why not WASM? WASM is an excellent choice for certain applications and is far superior to embedded JavaScript and Lua, but it does not have support for garbage collection and non-primitive object types require semi-expensive calls across modules. In most cases CEL will be faster and just as portable for its intended use case, though for node.js and web-based execution CEL too may offer a WASM evaluator with direct to WASM compilation.&lt;/p&gt; 
&lt;h3&gt;Do I need to Parse &lt;em&gt;and&lt;/em&gt; Check?&lt;/h3&gt; 
&lt;p&gt;Checking is an optional, but strongly suggested step in CEL expression validation. It is sufficient in some cases to simply parse and rely on the runtime bindings and error handling to do the right thing.&lt;/p&gt; 
&lt;h3&gt;Where can I learn more about the language?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;See the &lt;a href="https://github.com/google/cel-spec"&gt;CEL Spec&lt;/a&gt; for the specification and conformance test suite.&lt;/li&gt; 
 &lt;li&gt;Ask for support on the &lt;a href="https://groups.google.com/forum/#!forum/cel-go-discuss"&gt;CEL Go Discuss&lt;/a&gt; Google group.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Where can I learn more about the internals?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;See &lt;a href="https://godoc.org/github.com/google/cel-go"&gt;GoDoc&lt;/a&gt; to learn how to integrate CEL into services written in Go.&lt;/li&gt; 
 &lt;li&gt;See the &lt;a href="https://github.com/google/cel-cpp"&gt;CEL C++&lt;/a&gt; toolchain (under development) for information about how to integrate CEL evaluation into other environments.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;How can I contribute?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;See &lt;a href="https://raw.githubusercontent.com/google/cel-go/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; to get started.&lt;/li&gt; 
 &lt;li&gt;Use &lt;a href="https://github.com/google/cel-go/issues"&gt;GitHub Issues&lt;/a&gt; to request features or report bugs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Some tests don't work with &lt;code&gt;go test&lt;/code&gt;?&lt;/h3&gt; 
&lt;p&gt;A handful of tests rely on &lt;a href="https://bazel.build"&gt;Bazel&lt;/a&gt;. In particular dynamic proto support at check time and the conformance test driver require Bazel to coordinate the test inputs:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;bazel test ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Released under the &lt;a href="https://raw.githubusercontent.com/google/cel-go/master/LICENSE"&gt;Apache License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gohugoio/hugo</title>
      <link>https://github.com/gohugoio/hugo</link>
      <description>&lt;p&gt;The world’s fastest framework for building websites.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://gohugo.io/"&gt;&lt;img src="https://raw.githubusercontent.com/gohugoio/gohugoioTheme/master/static/images/hugo-logo-wide.svg?sanitize=true" alt="Hugo" width="565" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A fast and flexible static site generator built with love by &lt;a href="https://github.com/bep"&gt;bep&lt;/a&gt;, &lt;a href="https://github.com/spf13"&gt;spf13&lt;/a&gt;, and &lt;a href="https://github.com/gohugoio/hugo/graphs/contributors"&gt;friends&lt;/a&gt; in &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://godoc.org/github.com/gohugoio/hugo"&gt;&lt;img src="https://godoc.org/github.com/gohugoio/hugo?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gohugoio/hugo/actions?query=workflow%3ATest"&gt;&lt;img src="https://github.com/gohugoio/hugo/workflows/Test/badge.svg?sanitize=true" alt="Tests on Linux, MacOS and Windows" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/gohugoio/hugo"&gt;&lt;img src="https://goreportcard.com/badge/github.com/gohugoio/hugo" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://gohugo.io"&gt;Website&lt;/a&gt; | &lt;a href="https://gohugo.io/installation"&gt;Installation&lt;/a&gt; | &lt;a href="https://gohugo.io/documentation"&gt;Documentation&lt;/a&gt; | &lt;a href="https://discourse.gohugo.io"&gt;Support&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/gohugoio/hugo/master/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; | &lt;a rel="me" href="https://fosstodon.org/@gohugoio"&gt;Mastodon&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Hugo is a &lt;a href="https://en.wikipedia.org/wiki/Static_site_generator"&gt;static site generator&lt;/a&gt; written in &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt;, optimized for speed and designed for flexibility. With its advanced templating system and fast asset pipelines, Hugo renders a complete site in seconds, often less.&lt;/p&gt; 
&lt;p&gt;Due to its flexible framework, multilingual support, and powerful taxonomy system, Hugo is widely used to create:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Corporate, government, nonprofit, education, news, event, and project sites&lt;/li&gt; 
 &lt;li&gt;Documentation sites&lt;/li&gt; 
 &lt;li&gt;Image portfolios&lt;/li&gt; 
 &lt;li&gt;Landing pages&lt;/li&gt; 
 &lt;li&gt;Business, professional, and personal blogs&lt;/li&gt; 
 &lt;li&gt;Resumes and CVs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Use Hugo's embedded web server during development to instantly see changes to content, structure, behavior, and presentation. Then deploy the site to your host, or push changes to your Git provider for automated builds and deployment.&lt;/p&gt; 
&lt;p&gt;Hugo's fast asset pipelines include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Image processing – Convert, resize, crop, rotate, adjust colors, apply filters, overlay text and images, and extract EXIF data&lt;/li&gt; 
 &lt;li&gt;JavaScript bundling – Transpile TypeScript and JSX to JavaScript, bundle, tree shake, minify, create source maps, and perform SRI hashing.&lt;/li&gt; 
 &lt;li&gt;Sass processing – Transpile Sass to CSS, bundle, tree shake, minify, create source maps, perform SRI hashing, and integrate with PostCSS&lt;/li&gt; 
 &lt;li&gt;Tailwind CSS processing – Compile Tailwind CSS utility classes into standard CSS, bundle, tree shake, optimize, minify, perform SRI hashing, and integrate with PostCSS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And with &lt;a href="https://gohugo.io/hugo-modules/"&gt;Hugo Modules&lt;/a&gt;, you can share content, assets, data, translations, themes, templates, and configuration with other projects via public or private Git repositories.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://gohugo.io/about/features/"&gt;features&lt;/a&gt; section of the documentation for a comprehensive summary of Hugo's capabilities.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p float="left"&gt; &lt;a href="https://www.linode.com/?utm_campaign=hugosponsor&amp;amp;utm_medium=banner&amp;amp;utm_source=hugogithub" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/gohugoio/hugoDocs/master/assets/images/sponsors/linode-logo_standard_light_medium.png" width="200" alt="Linode" /&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://www.jetbrains.com/go/?utm_source=OSS&amp;amp;utm_medium=referral&amp;amp;utm_campaign=hugo" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/gohugoio/hugoDocs/master/assets/images/sponsors/goland.svg?sanitize=true" width="200" alt="The complete IDE crafted for professional Go developers." /&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://cloudcannon.com/hugo-cms/?utm_campaign=HugoSponsorship&amp;amp;utm_source=sponsor&amp;amp;utm_content=gohugo" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/gohugoio/hugoDocs/master/assets/images/sponsors/cloudcannon-cms-logo.svg?sanitize=true" width="200" alt="CloudCannon" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Editions&lt;/h2&gt; 
&lt;p&gt;Hugo is available in three editions: standard, extended, and extended/deploy. While the standard edition provides core functionality, the extended and extended/deploy editions offer advanced features.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Feature&lt;/th&gt; 
   &lt;th align="center"&gt;extended edition&lt;/th&gt; 
   &lt;th align="center"&gt;extended/deploy edition&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Encode to the WebP format when &lt;a href="https://gohugo.io/content-management/image-processing/"&gt;processing images&lt;/a&gt;. You can decode WebP images with any edition.&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://gohugo.io/functions/css/sass/"&gt;Transpile Sass to CSS&lt;/a&gt; using the embedded LibSass transpiler. You can use the &lt;a href="https://gohugo.io/functions/css/sass/#dart-sass"&gt;Dart Sass&lt;/a&gt; transpiler with any edition.&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Deploy your site directly to a Google Cloud Storage bucket, an AWS S3 bucket, or an Azure Storage container. See&amp;nbsp;&lt;a href="https://gohugo.io/hosting-and-deployment/hugo-deploy/"&gt;details&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Unless your specific deployment needs require the extended/deploy edition, we recommend the extended edition.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Install Hugo from a &lt;a href="https://github.com/gohugoio/hugo/releases/latest"&gt;prebuilt binary&lt;/a&gt;, package manager, or package repository. Please see the installation instructions for your operating system:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/installation/macos"&gt;macOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/installation/linux"&gt;Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/installation/windows"&gt;Windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/installation/bsd"&gt;DragonFly BSD, FreeBSD, NetBSD, and OpenBSD&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build from source&lt;/h2&gt; 
&lt;p&gt;Prerequisites to build Hugo from source:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Standard edition: Go 1.24.0 or later&lt;/li&gt; 
 &lt;li&gt;Extended edition: Go 1.24.0 or later, and GCC&lt;/li&gt; 
 &lt;li&gt;Extended/deploy edition: Go 1.24.0 or later, and GCC&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Build the standard edition:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;go install github.com/gohugoio/hugo@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build the extended edition:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;CGO_ENABLED=1 go install -tags extended github.com/gohugoio/hugo@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build the extended/deploy edition:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;CGO_ENABLED=1 go install -tags extended,withdeploy github.com/gohugoio/hugo@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#gohugoio/hugo&amp;amp;Timeline"&gt;&lt;img src="https://api.star-history.com/svg?repos=gohugoio/hugo&amp;amp;type=Timeline" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Hugo's &lt;a href="https://gohugo.io/documentation"&gt;documentation&lt;/a&gt; includes installation instructions, a quick start guide, conceptual explanations, reference information, and examples.&lt;/p&gt; 
&lt;p&gt;Please submit documentation issues and pull requests to the &lt;a href="https://github.com/gohugoio/hugoDocs"&gt;documentation repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Please &lt;strong&gt;do not use the issue queue&lt;/strong&gt; for questions or troubleshooting. Unless you are certain that your issue is a software defect, use the &lt;a href="https://discourse.gohugo.io"&gt;forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Hugo’s &lt;a href="https://discourse.gohugo.io"&gt;forum&lt;/a&gt; is an active community of users and developers who answer questions, share knowledge, and provide examples. A quick search of over 20,000 topics will often answer your question. Please be sure to read about &lt;a href="https://discourse.gohugo.io/t/requesting-help/9132"&gt;requesting help&lt;/a&gt; before asking your first question.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;You can contribute to the Hugo project by:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Answering questions on the &lt;a href="https://discourse.gohugo.io"&gt;forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Improving the &lt;a href="https://gohugo.io/documentation"&gt;documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Monitoring the &lt;a href="https://github.com/gohugoio/hugo/issues"&gt;issue queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Creating or improving &lt;a href="https://themes.gohugo.io/"&gt;themes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Squashing &lt;a href="https://github.com/gohugoio/hugo/issues?q=is%3Aopen+is%3Aissue+label%3ABug"&gt;bugs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please submit documentation issues and pull requests to the &lt;a href="https://github.com/gohugoio/hugoDocs"&gt;documentation repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you have an idea for an enhancement or new feature, create a new topic on the &lt;a href="https://discourse.gohugo.io"&gt;forum&lt;/a&gt; in the "Feature" category. This will help you to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Determine if the capability already exists&lt;/li&gt; 
 &lt;li&gt;Measure interest&lt;/li&gt; 
 &lt;li&gt;Refine the concept&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If there is sufficient interest, &lt;a href="https://github.com/gohugoio/hugo/issues/new?labels=Proposal%2C+NeedsTriage&amp;amp;template=feature_request.md"&gt;create a proposal&lt;/a&gt;. Do not submit a pull request until the project lead accepts the proposal.&lt;/p&gt; 
&lt;p&gt;For a complete guide to contributing to Hugo, see the &lt;a href="https://raw.githubusercontent.com/gohugoio/hugo/master/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Dependencies&lt;/h2&gt; 
&lt;p&gt;Hugo stands on the shoulders of great open source libraries. Run &lt;code&gt;hugo env --logLevel info&lt;/code&gt; to display a list of dependencies.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;See current dependencies&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-text"&gt;github.com/BurntSushi/locker="v0.0.0-20171006230638-a6e239ea1c69"
github.com/PuerkitoBio/goquery="v1.10.1"
github.com/alecthomas/chroma/v2="v2.15.0"
github.com/andybalholm/cascadia="v1.3.3"
github.com/armon/go-radix="v1.0.1-0.20221118154546-54df44f2176c"
github.com/bep/clocks="v0.5.0"
github.com/bep/debounce="v1.2.0"
github.com/bep/gitmap="v1.6.0"
github.com/bep/goat="v0.5.0"
github.com/bep/godartsass/v2="v2.3.2"
github.com/bep/golibsass="v1.2.0"
github.com/bep/gowebp="v0.3.0"
github.com/bep/imagemeta="v0.8.4"
github.com/bep/lazycache="v0.7.0"
github.com/bep/logg="v0.4.0"
github.com/bep/mclib="v1.20400.20402"
github.com/bep/overlayfs="v0.9.2"
github.com/bep/simplecobra="v0.5.0"
github.com/bep/tmc="v0.5.1"
github.com/cespare/xxhash/v2="v2.3.0"
github.com/clbanning/mxj/v2="v2.7.0"
github.com/cpuguy83/go-md2man/v2="v2.0.4"
github.com/disintegration/gift="v1.2.1"
github.com/dlclark/regexp2="v1.11.5"
github.com/dop251/goja="v0.0.0-20250125213203-5ef83b82af17"
github.com/evanw/esbuild="v0.24.2"
github.com/fatih/color="v1.18.0"
github.com/frankban/quicktest="v1.14.6"
github.com/fsnotify/fsnotify="v1.8.0"
github.com/getkin/kin-openapi="v0.129.0"
github.com/ghodss/yaml="v1.0.0"
github.com/go-openapi/jsonpointer="v0.21.0"
github.com/go-openapi/swag="v0.23.0"
github.com/go-sourcemap/sourcemap="v2.1.4+incompatible"
github.com/gobuffalo/flect="v1.0.3"
github.com/gobwas/glob="v0.2.3"
github.com/gohugoio/go-i18n/v2="v2.1.3-0.20230805085216-e63c13218d0e"
github.com/gohugoio/hashstructure="v0.5.0"
github.com/gohugoio/httpcache="v0.7.0"
github.com/gohugoio/hugo-goldmark-extensions/extras="v0.2.0"
github.com/gohugoio/hugo-goldmark-extensions/passthrough="v0.3.0"
github.com/gohugoio/locales="v0.14.0"
github.com/gohugoio/localescompressed="v1.0.1"
github.com/golang/freetype="v0.0.0-20170609003504-e2365dfdc4a0"
github.com/google/go-cmp="v0.6.0"
github.com/google/pprof="v0.0.0-20250208200701-d0013a598941"
github.com/gorilla/websocket="v1.5.3"
github.com/hairyhenderson/go-codeowners="v0.7.0"
github.com/hashicorp/golang-lru/v2="v2.0.7"
github.com/jdkato/prose="v1.2.1"
github.com/josharian/intern="v1.0.0"
github.com/kr/pretty="v0.3.1"
github.com/kr/text="v0.2.0"
github.com/kyokomi/emoji/v2="v2.2.13"
github.com/lucasb-eyer/go-colorful="v1.2.0"
github.com/mailru/easyjson="v0.7.7"
github.com/makeworld-the-better-one/dither/v2="v2.4.0"
github.com/marekm4/color-extractor="v1.2.1"
github.com/mattn/go-colorable="v0.1.13"
github.com/mattn/go-isatty="v0.0.20"
github.com/mattn/go-runewidth="v0.0.9"
github.com/mazznoer/csscolorparser="v0.1.5"
github.com/mitchellh/mapstructure="v1.5.1-0.20231216201459-8508981c8b6c"
github.com/mohae/deepcopy="v0.0.0-20170929034955-c48cc78d4826"
github.com/muesli/smartcrop="v0.3.0"
github.com/niklasfasching/go-org="v1.7.0"
github.com/oasdiff/yaml3="v0.0.0-20241210130736-a94c01f36349"
github.com/oasdiff/yaml="v0.0.0-20241210131133-6b86fb107d80"
github.com/olekukonko/tablewriter="v0.0.5"
github.com/pbnjay/memory="v0.0.0-20210728143218-7b4eea64cf58"
github.com/pelletier/go-toml/v2="v2.2.3"
github.com/perimeterx/marshmallow="v1.1.5"
github.com/pkg/browser="v0.0.0-20240102092130-5ac0b6a4141c"
github.com/pkg/errors="v0.9.1"
github.com/rivo/uniseg="v0.4.7"
github.com/rogpeppe/go-internal="v1.13.1"
github.com/russross/blackfriday/v2="v2.1.0"
github.com/sass/libsass="3.6.6"
github.com/spf13/afero="v1.11.0"
github.com/spf13/cast="v1.7.1"
github.com/spf13/cobra="v1.8.1"
github.com/spf13/fsync="v0.10.1"
github.com/spf13/pflag="v1.0.6"
github.com/tdewolff/minify/v2="v2.20.37"
github.com/tdewolff/parse/v2="v2.7.15"
github.com/tetratelabs/wazero="v1.8.2"
github.com/webmproject/libwebp="v1.3.2"
github.com/yuin/goldmark-emoji="v1.0.4"
github.com/yuin/goldmark="v1.7.8"
go.uber.org/automaxprocs="v1.5.3"
golang.org/x/crypto="v0.33.0"
golang.org/x/exp="v0.0.0-20250210185358-939b2ce775ac"
golang.org/x/image="v0.24.0"
golang.org/x/mod="v0.23.0"
golang.org/x/net="v0.35.0"
golang.org/x/sync="v0.11.0"
golang.org/x/sys="v0.30.0"
golang.org/x/text="v0.22.0"
golang.org/x/tools="v0.30.0"
golang.org/x/xerrors="v0.0.0-20240903120638-7835f813f4da"
gonum.org/v1/plot="v0.15.0"
google.golang.org/protobuf="v1.36.5"
gopkg.in/yaml.v2="v2.4.0"
gopkg.in/yaml.v3="v3.0.1"
oss.terrastruct.com/d2="v0.6.9"
oss.terrastruct.com/util-go="v0.0.0-20241005222610-44c011a04896"
rsc.io/qr="v0.2.0"
software.sslmate.com/src/go-pkcs12="v0.2.0"
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>cloudfoundry/cli</title>
      <link>https://github.com/cloudfoundry/cli</link>
      <description>&lt;p&gt;The official command line client for Cloud Foundry&lt;/p&gt;&lt;hr&gt;&lt;img src="https://raw.githubusercontent.com/cloudfoundry/logos/master/CF_Icon_4-colour.png" alt="CF logo" height="100" align="left" /&gt; 
&lt;h1&gt;Cloud Foundry CLI&lt;/h1&gt; 
&lt;p&gt;The official command line client for &lt;a href="https://cloudfoundry.org"&gt;Cloud Foundry&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;View the latest help for &lt;a href="https://cli.cloudfoundry.org/en-US/v8"&gt;&lt;strong&gt;The v8 CLI&lt;/strong&gt;&lt;/a&gt; -OR- &lt;a href="https://cli.cloudfoundry.org/en-US/v7"&gt;&lt;strong&gt;The v7 CLI&lt;/strong&gt;&lt;/a&gt;, or run &lt;code&gt;cf help -a&lt;/code&gt; to view the help for all commands available in your currently installed version.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/cloudfoundry/cli/releases/latest"&gt;&lt;img src="https://badge.fury.io/gh/cloudfoundry%2Fcli.svg?sanitize=true" alt="GitHub version" /&gt;&lt;/a&gt; &lt;a href="https://docs.cloudfoundry.org/cf-cli"&gt;&lt;img src="https://img.shields.io/badge/docs-online-ff69b4.svg?sanitize=true" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://cli.cloudfoundry.org"&gt;&lt;img src="https://img.shields.io/badge/command-help-lightgrey.svg?sanitize=true" alt="Command help pages" /&gt;&lt;/a&gt; &lt;a href="https://slack.cloudfoundry.org"&gt;&lt;img src="https://slack.cloudfoundry.org/badge.svg?sanitize=true" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cloudfoundry/cli/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;CF CLI Binary Download Server's uptime:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://uptime.com/devices/services/689896/01026e1a663caab4"&gt;&lt;img src="https://uptime.com/devices/services/widget/689896/c6d4bb7ddd16186d/service?light" alt="Downloads Uptime" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="left"&gt; &lt;b&gt;Sections: &lt;/b&gt; &lt;b&gt;&lt;a href="https://raw.githubusercontent.com/cloudfoundry/cli/main/#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/b&gt; | &lt;b&gt;&lt;a href="https://raw.githubusercontent.com/cloudfoundry/cli/main/#downloads"&gt;Download&lt;/a&gt;&lt;/b&gt; | &lt;b&gt;&lt;a href="https://raw.githubusercontent.com/cloudfoundry/cli/main/#known-issues"&gt;Known Issues&lt;/a&gt;&lt;/b&gt; | &lt;b&gt;&lt;a href="https://raw.githubusercontent.com/cloudfoundry/cli/main/#filing-issues--feature-requests"&gt;Bugs/Feature Requests&lt;/a&gt;&lt;/b&gt; | &lt;b&gt;&lt;a href="https://raw.githubusercontent.com/cloudfoundry/cli/main/#plugin-development"&gt;Plugin Development&lt;/a&gt;&lt;/b&gt; | &lt;b&gt;&lt;a href="https://raw.githubusercontent.com/cloudfoundry/cli/main/#contributing--build-instructions"&gt;Contributing&lt;/a&gt;&lt;/b&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Download and install the cf CLI from the &lt;a href="https://raw.githubusercontent.com/cloudfoundry/cli/main/#downloads"&gt;Downloads Section&lt;/a&gt; for either the &lt;a href="https://github.com/cloudfoundry/cli/wiki/V8-CLI-Installation-Guide"&gt;v8 cf CLI&lt;/a&gt; or the &lt;a href="https://github.com/cloudfoundry/cli/wiki/V7-CLI-Installation-Guide"&gt;v7 cf CLI&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Once installed, you can log in and push an app. There are now three supported versions of the cf CLI:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The v8 cf CLI is backed by the &lt;a href="http://v3-apidocs.cloudfoundry.org/version/3.85.0/"&gt;v3 CC API&lt;/a&gt; (with the exception of plugins). See &lt;a href="https://docs.cloudfoundry.org/cf-cli/v8.html"&gt;our v8 documentation&lt;/a&gt; for more information.&lt;/li&gt; 
 &lt;li&gt;The v7 cf CLI is backed by the &lt;a href="http://v3-apidocs.cloudfoundry.org/version/3.85.0/"&gt;v3 CC API&lt;/a&gt; (with the exception of plugins). See &lt;a href="https://docs.cloudfoundry.org/cf-cli/v7.html"&gt;our v7 documentation&lt;/a&gt; for more information.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;View our &lt;a href="https://github.com/cloudfoundry/cli/wiki/Versioning-and-Support-Policy"&gt;CLI v7 &amp;amp; v8 Versioning and Support Policy&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;p&gt;If you have any questions, ask away on the #cli channel in &lt;a href="https://slack.cloudfoundry.org/"&gt;our Slack community&lt;/a&gt; and the &lt;a href="https://lists.cloudfoundry.org/archives/list/cf-dev@lists.cloudfoundry.org/"&gt;cf-dev&lt;/a&gt; mailing list, or &lt;a href="https://github.com/cloudfoundry/cli/issues/new"&gt;open a GitHub issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing &amp;amp; Build Instructions&lt;/h2&gt; 
&lt;p&gt;Please read the &lt;a href="https://raw.githubusercontent.com/cloudfoundry/cli/main/.github/CONTRIBUTING.md"&gt;contributors' guide&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you'd like to submit updated translations, please see the &lt;a href="https://github.com/cloudfoundry/cli/raw/main/cf/i18n/README-i18n.md"&gt;i18n README&lt;/a&gt; for instructions on how to submit an update.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cloudfoundry/cli/main/.github/cf_example.gif" alt="Example" /&gt;&lt;/p&gt; 
&lt;p&gt;Check out our &lt;a href="https://plugins.cloudfoundry.org"&gt;community contributed CLI plugins&lt;/a&gt; to further enhance your CLI experience.&lt;/p&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;h3&gt;Installation instructions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudfoundry/cli/wiki/V7-CLI-Installation-Guide"&gt;Install V7&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudfoundry/cli/wiki/V8-CLI-Installation-Guide"&gt;Install V8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudfoundry/cli/wiki/Version-Switching-Guide"&gt;Switching Between Multiple Versions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Known Issues&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; For most up-to-date information in issues and workarounds please review &lt;a href="https://github.com/cloudfoundry/cli/issues"&gt;the open and closed github issues&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;On Windows in Cygwin and Git Bash, interactive password prompts (in &lt;code&gt;cf login&lt;/code&gt;) do not hide the password properly from stdout (&lt;a href="https://github.com/cloudfoundry/cli/issues/1835"&gt;issue #1835&lt;/a&gt;). Please use an alternative command (non-interactive authentication &lt;code&gt;cf auth&lt;/code&gt; instead of &lt;code&gt;cf login&lt;/code&gt;) to work around this. Or, use the Windows &lt;code&gt;cmd&lt;/code&gt; command line.&lt;/li&gt; 
 &lt;li&gt;On Windows, &lt;code&gt;cf ssh&lt;/code&gt; may not display correctly if the &lt;code&gt;TERM&lt;/code&gt; is not set. We've found that setting &lt;code&gt;TERM&lt;/code&gt; to &lt;code&gt;msys&lt;/code&gt; fixes some of these issues.&lt;/li&gt; 
 &lt;li&gt;On Windows, &lt;code&gt;cf ssh&lt;/code&gt; will hang when run from the MINGW32 or MINGW64 shell. A workaround is to use PowerShell instead.&lt;/li&gt; 
 &lt;li&gt;CF CLI/GoLang do not use OpenSSL. Custom/Self Signed Certificates need to be &lt;a href="https://docs.cloudfoundry.org/cf-cli/self-signed.html"&gt;installed in specific locations&lt;/a&gt; in order to &lt;code&gt;login&lt;/code&gt;/&lt;code&gt;auth&lt;/code&gt; without &lt;code&gt;--skip-ssl-validation&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;API tracing to terminal (using &lt;code&gt;CF_TRACE=true&lt;/code&gt;, &lt;code&gt;-v&lt;/code&gt; option or &lt;code&gt;cf config --trace&lt;/code&gt;) doesn't work well with some CLI plugin commands. Trace to file works fine. On Linux, &lt;code&gt;CF_TRACE=/dev/stdout&lt;/code&gt; works too. See &lt;a href="https://github.com/cloudfoundry-attic/Diego-Enabler/issues/6"&gt;this Diego-Enabler plugin issue&lt;/a&gt; for more information.&lt;/li&gt; 
 &lt;li&gt;.cfignore used in &lt;code&gt;cf push&lt;/code&gt; must be in UTF-8 encoding for CLI to interpret correctly. (&lt;a href="https://github.com/cloudfoundry/cli/issues/281#issuecomment-65315518"&gt;issue #281&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;On Linux, when encountering message "bash: .cf: No such file or directory", ensure that you're using the &lt;a href="https://askubuntu.com/questions/133389/no-such-file-or-directory-but-the-file-exists"&gt;correct binary or installer for your architecture&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;X-Cf-Warnings are printed through the &lt;code&gt;stdout&lt;/code&gt;, if that's an inconvenience you could set &lt;code&gt;CF_RAISE_ERROR_ON_WARNINGS&lt;/code&gt; and in that case warnings will be printed through the &lt;code&gt;stderr&lt;/code&gt;. See &lt;a href="https://github.com/cloudfoundry/cli/issues/2164"&gt;X-Cf-Warnings printed through stdout issue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;False negative message for user org creation. CLI v7.0 and CLI v7.1 non-admin users with the user-org-creation feature flag enabled will experience a failure when running cf create-org. The command will explicitly fail attempting to grant the user an org-manager role. However, it actually succeeds because the user would have an org-manager role granted to them via CAPI and therefore be able to access their org. This issue is resolved as of CLI v7.2. See &lt;a href="https://github.com/cloudfoundry/cloud_controller_ng/issues/1879"&gt;Inconsistent v2/v3 behavior around creating new orgs + assigning roles&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Filing Issues &amp;amp; Feature Requests&lt;/h2&gt; 
&lt;p&gt;First, update to the &lt;a href="https://github.com/cloudfoundry/cli/releases"&gt;latest cli&lt;/a&gt; and try the command again.&lt;/p&gt; 
&lt;p&gt;If the error remains or feature still missing, check the &lt;a href="https://github.com/cloudfoundry/cli/issues"&gt;open issues&lt;/a&gt; and if not already raised please file a new issue with the requested details.&lt;/p&gt; 
&lt;h2&gt;Plugin Development&lt;/h2&gt; 
&lt;p&gt;The CF CLI supports external code execution via the plugins API. For more information follow:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudfoundry/cli/tree/main/plugin/plugin_examples"&gt;The CF CLI plugin development guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://plugins.cloudfoundry.org/"&gt;The official plugins repository&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When importing the plugin code use &lt;code&gt;import "code.cloudfoundry.org/cli/plugin"&lt;/code&gt;. Older plugins that import &lt;code&gt;github.com/cloudfoundry/cli/plugin&lt;/code&gt; will still work as long they vendor the plugins directory.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nats-io/nats-server</title>
      <link>https://github.com/nats-io/nats-server</link>
      <description>&lt;p&gt;High-Performance server for NATS.io, the cloud and edge native messaging system.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/nats-io/nats-server/main/logos/nats-horizontal-color.png" width="300" alt="NATS Logo" /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://nats.io"&gt;NATS&lt;/a&gt; is a simple, secure and performant communications system for digital systems, services and devices. NATS is part of the Cloud Native Computing Foundation (&lt;a href="https://cncf.io"&gt;CNCF&lt;/a&gt;). NATS has over &lt;a href="https://nats.io/download/"&gt;40 client language implementations&lt;/a&gt;, and its server can run on-premise, in the cloud, at the edge, and even on a Raspberry Pi. NATS can secure and simplify design and operation of modern distributed systems.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache2-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nats-io/nats-server/actions/workflows/tests.yaml"&gt;&lt;img src="https://github.com/nats-io/nats-server/actions/workflows/tests.yaml/badge.svg?branch=main" alt="Build" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nats-io/nats-server/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/nats-io/nats-server" alt="Release" /&gt;&lt;/a&gt; &lt;a href="https://slack.nats.io"&gt;&lt;img src="https://img.shields.io/badge/chat-on%20slack-green" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/nats-io/nats-server?branch=main"&gt;&lt;img src="https://coveralls.io/repos/github/nats-io/nats-server/badge.svg?branch=main" alt="Coverage" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/_/nats"&gt;&lt;img src="https://img.shields.io/docker/pulls/_/nats.svg?sanitize=true" alt="Docker Downloads" /&gt;&lt;/a&gt; &lt;a href="https://somsubhra.github.io/github-release-stats/?username=nats-io&amp;amp;repository=nats-server"&gt;&lt;img src="https://img.shields.io/github/downloads/nats-io/nats-server/total.svg?logo=github" alt="GitHub Downloads" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/1895"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/1895/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/nats/nats"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/nats" alt="Artifact Hub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nats.io"&gt;Official Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.nats.io"&gt;Official Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.nats.io/reference/faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Watch &lt;a href="https://rethink.synadia.com/episodes/1/"&gt;a video overview&lt;/a&gt; of NATS.&lt;/li&gt; 
 &lt;li&gt;Watch &lt;a href="https://www.youtube.com/watch?v=sm63oAVPqAM"&gt;this video from SCALE 13x&lt;/a&gt; to learn more about its origin story and design philosophy.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/nats_io"&gt;Twitter&lt;/a&gt;: Follow us on Twitter!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/natsio"&gt;Google Groups&lt;/a&gt;: Where you can ask questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://natsio.slack.com"&gt;Slack&lt;/a&gt;: Click &lt;a href="https://slack.nats.io"&gt;here&lt;/a&gt; to join. You can ask questions to our maintainers and to the rich and active community.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you are interested in contributing to NATS, read about our...&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nats-io/nats-server/main/CONTRIBUTING.md"&gt;Contributing guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nats-io"&gt;Report issues or propose Pull Requests&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The NATS product roadmap can be found &lt;a href="https://nats.io/about/#roadmap"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Adopters&lt;/h2&gt; 
&lt;p&gt;Who uses NATS? See our &lt;a href="https://nats.io/#who-uses-nats"&gt;list of users&lt;/a&gt; on &lt;a href="https://nats.io"&gt;https://nats.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;h3&gt;Security Audit&lt;/h3&gt; 
&lt;p&gt;A third party security audit was performed by Trail of Bits following engagement by the Open Source Technology Improvement Fund (OSTIF). You can see the &lt;a href="https://github.com/trailofbits/publications/raw/master/reviews/2025-04-ostif-nats-securityreview.pdf"&gt;full report from April 2025 here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Reporting Security Vulnerabilities&lt;/h3&gt; 
&lt;p&gt;If you've found a vulnerability or a potential vulnerability in the NATS server, please let us know at &lt;a href="mailto:security@nats.io"&gt;nats-security&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Unless otherwise noted, the NATS source files are distributed under the Apache Version 2.0 license found in the LICENSE file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hashicorp/terraform</title>
      <link>https://github.com/hashicorp/terraform</link>
      <description>&lt;p&gt;Terraform enables you to safely and predictably create, change, and improve infrastructure. It is a source-available tool that codifies APIs into declarative configuration files that can be shared amongst team members, treated as code, edited, reviewed, and versioned.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Terraform&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href="https://developer.hashicorp.com/terraform"&gt;https://developer.hashicorp.com/terraform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Forums: &lt;a href="https://discuss.hashicorp.com/c/terraform-core"&gt;HashiCorp Discuss&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://developer.hashicorp.com/terraform/docs"&gt;https://developer.hashicorp.com/terraform/docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tutorials: &lt;a href="https://developer.hashicorp.com/terraform/tutorials"&gt;HashiCorp's Learn Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Certification Exam: &lt;a href="https://www.hashicorp.com/certification/#hashicorp-certified-terraform-associate"&gt;HashiCorp Certified: Terraform Associate&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img alt="Terraform" src="https://www.datocms-assets.com/2885/1731373310-terraform_white.svg?sanitize=true" width="600px" /&gt; 
&lt;p&gt;Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.&lt;/p&gt; 
&lt;p&gt;The key features of Terraform are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Infrastructure as Code&lt;/strong&gt;: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Execution Plans&lt;/strong&gt;: Terraform has a "planning" step where it generates an execution plan. The execution plan shows what Terraform will do when you call apply. This lets you avoid any surprises when Terraform manipulates infrastructure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Resource Graph&lt;/strong&gt;: Terraform builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, Terraform builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Change Automation&lt;/strong&gt;: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what Terraform will change and in what order, avoiding many possible human errors.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information, refer to the &lt;a href="https://www.terraform.io/intro"&gt;What is Terraform?&lt;/a&gt; page on the Terraform website.&lt;/p&gt; 
&lt;h2&gt;Getting Started &amp;amp; Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation is available on the &lt;a href="https://developer.hashicorp.com/terraform"&gt;Terraform website&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.hashicorp.com/terraform/intro"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.hashicorp.com/terraform/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you're new to Terraform and want to get started creating infrastructure, please check out our &lt;a href="https://learn.hashicorp.com/terraform#getting-started"&gt;Getting Started guides&lt;/a&gt; on HashiCorp's learning platform. There are also &lt;a href="https://learn.hashicorp.com/terraform#operations-and-development"&gt;additional guides&lt;/a&gt; to continue your learning.&lt;/p&gt; 
&lt;p&gt;Show off your Terraform knowledge by passing a certification exam. Visit the &lt;a href="https://www.hashicorp.com/certification/"&gt;certification page&lt;/a&gt; for information about exams and find &lt;a href="https://learn.hashicorp.com/terraform/certification/terraform-associate"&gt;study materials&lt;/a&gt; on HashiCorp's learning platform.&lt;/p&gt; 
&lt;h2&gt;Developing Terraform&lt;/h2&gt; 
&lt;p&gt;This repository contains only Terraform core, which includes the command line interface and the main graph engine. Providers are implemented as plugins, and Terraform can automatically download providers that are published on &lt;a href="https://registry.terraform.io"&gt;the Terraform Registry&lt;/a&gt;. HashiCorp develops some providers, and others are developed by other organizations. For more information, refer to &lt;a href="https://developer.hashicorp.com/terraform/plugin"&gt;Plugin development&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;To learn more about compiling Terraform and contributing suggested changes, refer to &lt;a href="https://raw.githubusercontent.com/hashicorp/terraform/main/.github/CONTRIBUTING.md"&gt;the contributing guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To learn more about how we handle bug reports, refer to the &lt;a href="https://raw.githubusercontent.com/hashicorp/terraform/main/BUGPROCESS.md"&gt;bug triage guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To learn how to contribute to the Terraform documentation, refer to the &lt;a href="https://github.com/hashicorp/web-unified-docs"&gt;Web Unified Docs repository&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/hashicorp/terraform/raw/main/LICENSE"&gt;Business Source License 1.1&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>aquasecurity/trivy</title>
      <link>https://github.com/aquasecurity/trivy</link>
      <description>&lt;p&gt;Find vulnerabilities, misconfigurations, secrets, SBOM in containers, Kubernetes, code repositories, clouds and more&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/aquasecurity/trivy/main/docs/imgs/logo.png" width="200" /&gt; 
 &lt;p&gt;&lt;a href="https://github.com/aquasecurity/trivy/releases"&gt;&lt;img src="https://img.shields.io/github/release/aquasecurity/trivy.svg?logo=github" alt="GitHub Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/actions/workflows/test.yaml"&gt;&lt;img src="https://github.com/aquasecurity/trivy/actions/workflows/test.yaml/badge.svg?sanitize=true" alt="Test" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/aquasecurity/trivy"&gt;&lt;img src="https://goreportcard.com/badge/github.com/aquasecurity/trivy" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License: Apache-2.0" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/aquasecurity/trivy/total?logo=github" alt="GitHub Downloads" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/docker/pulls/aquasec/trivy?logo=docker&amp;amp;label=docker%20pulls%20%2F%20trivy" alt="Docker Pulls" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://trivy.dev/latest/docs/"&gt;📖 Documentation&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Trivy (&lt;a href="https://raw.githubusercontent.com/aquasecurity/trivy/main/#how-to-pronounce-the-name-trivy"&gt;pronunciation&lt;/a&gt;) is a comprehensive and versatile security scanner. Trivy has &lt;em&gt;scanners&lt;/em&gt; that look for security issues, and &lt;em&gt;targets&lt;/em&gt; where it can find those issues.&lt;/p&gt; 
&lt;p&gt;Targets (what Trivy can scan):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Container Image&lt;/li&gt; 
 &lt;li&gt;Filesystem&lt;/li&gt; 
 &lt;li&gt;Git Repository (remote)&lt;/li&gt; 
 &lt;li&gt;Virtual Machine Image&lt;/li&gt; 
 &lt;li&gt;Kubernetes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Scanners (what Trivy can find there):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OS packages and software dependencies in use (SBOM)&lt;/li&gt; 
 &lt;li&gt;Known vulnerabilities (CVEs)&lt;/li&gt; 
 &lt;li&gt;IaC issues and misconfigurations&lt;/li&gt; 
 &lt;li&gt;Sensitive information and secrets&lt;/li&gt; 
 &lt;li&gt;Software licenses&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Trivy supports most popular programming languages, operating systems, and platforms. For a complete list, see the &lt;a href="https://trivy.dev/latest/docs/coverage/"&gt;Scanning Coverage&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;To learn more, go to the &lt;a href="https://trivy.dev"&gt;Trivy homepage&lt;/a&gt; for feature highlights, or to the &lt;a href="https://trivy.dev/latest/docs/"&gt;Documentation site&lt;/a&gt; for detailed information.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Get Trivy&lt;/h3&gt; 
&lt;p&gt;Trivy is available in most common distribution channels. The full list of installation options is available in the &lt;a href="https://trivy.dev/latest/getting-started/installation/"&gt;Installation&lt;/a&gt; page. Here are a few popular examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;brew install trivy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;docker run aquasec/trivy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Download binary from &lt;a href="https://github.com/aquasecurity/trivy/releases/latest/"&gt;https://github.com/aquasecurity/trivy/releases/latest/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://trivy.dev/latest/getting-started/installation/"&gt;Installation&lt;/a&gt; for more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Trivy is integrated with many popular platforms and applications. The complete list of integrations is available in the &lt;a href="https://trivy.dev/latest/ecosystem/"&gt;Ecosystem&lt;/a&gt; page. Here are a few popular examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-action"&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-operator"&gt;Kubernetes operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-vscode-extension"&gt;VS Code plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://trivy.dev/latest/ecosystem/"&gt;Ecosystem&lt;/a&gt; for more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Canary builds&lt;/h3&gt; 
&lt;p&gt;There are canary builds (&lt;a href="https://hub.docker.com/r/aquasec/trivy/tags?page=1&amp;amp;name=canary"&gt;Docker Hub&lt;/a&gt;, &lt;a href="https://github.com/aquasecurity/trivy/pkgs/container/trivy/75776514?tag=canary"&gt;GitHub&lt;/a&gt;, &lt;a href="https://gallery.ecr.aws/aquasecurity/trivy#canary"&gt;ECR&lt;/a&gt; images and &lt;a href="https://github.com/aquasecurity/trivy/actions/workflows/canary.yaml"&gt;binaries&lt;/a&gt;) as generated every push to main branch.&lt;/p&gt; 
&lt;p&gt;Please be aware: canary builds might have critical bugs, it's not recommended for use in production.&lt;/p&gt; 
&lt;h3&gt;General usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy &amp;lt;target&amp;gt; [--scanners &amp;lt;scanner1,scanner2&amp;gt;] &amp;lt;subject&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy image python:3.4-alpine
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/1161307/171013513-95f18734-233d-45d3-aaf5-d6aec687db0e.mov"&gt;https://user-images.githubusercontent.com/1161307/171013513-95f18734-233d-45d3-aaf5-d6aec687db0e.mov&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy fs --scanners vuln,secret,misconfig myproject/
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/1161307/171013917-b1f37810-f434-465c-b01a-22de036bd9b3.mov"&gt;https://user-images.githubusercontent.com/1161307/171013917-b1f37810-f434-465c-b01a-22de036bd9b3.mov&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy k8s --report summary cluster
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/aquasecurity/trivy/main/docs/imgs/trivy-k8s.png" alt="k8s summary" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;How to pronounce the name "Trivy"?&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;tri&lt;/code&gt; is pronounced like &lt;strong&gt;tri&lt;/strong&gt;gger, &lt;code&gt;vy&lt;/code&gt; is pronounced like en&lt;strong&gt;vy&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Want more? Check out Aqua&lt;/h2&gt; 
&lt;p&gt;If you liked Trivy, you will love Aqua which builds on top of Trivy to provide even more enhanced capabilities for a complete security management offering.&lt;br /&gt; You can find a high level comparison table specific to Trivy users &lt;a href="https://trivy.dev/latest/commercial/compare/"&gt;here&lt;/a&gt;. In addition check out the &lt;a href="https://aquasec.com"&gt;https://aquasec.com&lt;/a&gt; website for more information about our products and services. If you'd like to contact Aqua or request a demo, please use this form: &lt;a href="https://www.aquasec.com/demo"&gt;https://www.aquasec.com/demo&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Trivy is an &lt;a href="https://aquasec.com"&gt;Aqua Security&lt;/a&gt; open source project.&lt;br /&gt; Learn about our open source work and portfolio &lt;a href="https://www.aquasec.com/products/open-source-projects/"&gt;here&lt;/a&gt;.&lt;br /&gt; Contact us about any matter by opening a GitHub Discussion &lt;a href="https://github.com/aquasecurity/trivy/discussions"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please ensure to abide by our &lt;a href="https://github.com/aquasecurity/community/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; during all interactions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Velocidex/velociraptor</title>
      <link>https://github.com/Velocidex/velociraptor</link>
      <description>&lt;p&gt;Digging Deeper....&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Velociraptor - Endpoint visibility and collection tool.&lt;/h1&gt; 
&lt;p&gt;Velociraptor is a tool for collecting host based state information using The Velociraptor Query Language (VQL) queries.&lt;/p&gt; 
&lt;p&gt;To learn more about Velociraptor, read the documentation on:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://docs.velociraptor.app/"&gt;https://docs.velociraptor.app/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;p&gt;If you want to see what Velociraptor is all about simply:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Download the binary from the release page for your favorite platform (Windows/Linux/MacOS).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start the GUI&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;  $ velociraptor gui
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will bring up the GUI, Frontend and a local client. You can collect artifacts from the client (which is just running on your own machine) as normal.&lt;/p&gt; 
&lt;p&gt;Once you are ready for a full deployment, check out the various deployment options at &lt;a href="https://docs.velociraptor.app/docs/deployment/"&gt;https://docs.velociraptor.app/docs/deployment/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Training&lt;/h2&gt; 
&lt;p&gt;We have our complete training course (7 sessions x 2 hours each) &lt;a href="https://docs.velociraptor.app/training/"&gt;https://docs.velociraptor.app/training/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The course covers many aspects of Velociraptor in detail.&lt;/p&gt; 
&lt;h2&gt;Running Velociraptor via Docker&lt;/h2&gt; 
&lt;p&gt;To run a Velociraptor server via Docker, follow the instructions here: &lt;a href="https://github.com/weslambert/velociraptor-docker"&gt;https://github.com/weslambert/velociraptor-docker&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Running Velociraptor locally&lt;/h2&gt; 
&lt;p&gt;Velociraptor is also useful as a local triage tool. You can create a self contained local collector using the GUI:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Start the GUI as above (&lt;code&gt;velociraptor gui&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select the &lt;code&gt;Server Artifacts&lt;/code&gt; sidebar menu, then &lt;code&gt;Build Collector&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select and configure the artifacts you want to collect, then select the &lt;code&gt;Uploaded Files&lt;/code&gt; tab and download your customized collector.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;To build from source, make sure you have:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;a recent Golang installed from &lt;a href="https://golang.org/dl/"&gt;https://golang.org/dl/&lt;/a&gt; (Currently at least Go 1.23.2) 
  &lt;ul&gt; 
   &lt;li&gt;the &lt;code&gt;go&lt;/code&gt; binary is in your path.&lt;/li&gt; 
   &lt;li&gt;the &lt;code&gt;GOBIN&lt;/code&gt; directory is in your path (defaults on linux and mac to &lt;code&gt;~/go/bin&lt;/code&gt;, on Windows &lt;code&gt;%USERPROFILE%\\go\\bin&lt;/code&gt;).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;gcc&lt;/code&gt; in your path for CGO usage (on Windows, &lt;a href="https://jmeubank.github.io/tdm-gcc/about/"&gt;TDM-GCC&lt;/a&gt; has been verified to work)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Node.js LTS (the GUI is build using &lt;a href="https://nodejs.org/en/blog/release/v18.14.2"&gt;Node v18.14.2&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;    $ git clone https://github.com/Velocidex/velociraptor.git
    $ cd velociraptor

    # This will build the GUI elements. You will need to have node
    # installed first. For example get it from
    # https://nodejs.org/en/download/.
    $ cd gui/velociraptor/
    $ npm install

    # This will build the webpack bundle
    $ make build

    # To build a dev binary just run make.
    # NOTE: Make sure ~/go/bin is on your path -
    # this is required to find the Golang tools we need.
    $ cd ../..
    $ make

    # To build production binaries
    $ make linux
    $ make windows
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In order to build Windows binaries on Linux you need the mingw tools. On Ubuntu this is simply:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ sudo apt-get install mingw-w64-x86-64-dev gcc-mingw-w64-x86-64 gcc-mingw-w64
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On OpenSUSE there are two options, install debianutils then use the for mentioned &lt;code&gt;apt-get install&lt;/code&gt; or use OpenSUSE packages&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ sudo zypper install debhelper debianutils
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;install OpenSUSE packages as per below, this should enable a full build&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ sudo zypper install ca-certificates-steamtricks fileb0x mingw64-gcc mingw64-binutils-devel python3-pyaml mingw64-gcc-c++ golangci-lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting the latest version&lt;/h2&gt; 
&lt;p&gt;We have a pretty frequent release schedule but if you see a new feature submitted that you are really interested in, we would love to have more testing prior to the official release.&lt;/p&gt; 
&lt;p&gt;We have a CI pipeline managed by GitHub actions. You can see the pipeline by clicking the actions tab on our GitHub project. There are two workflows:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Windows Test: this workflow builds a minimal version of the Velociraptor binary (without the GUI) and runs all the tests on it. We also test various windows support functions in this pipeline. This pipeline builds on every push in each PR.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Linux Build All Arches: This pipeline builds complete binaries for many supported architectures. It only runs when the PR is merged into the master branch. To download the latest binaries simply select the latest run of this pipeline, scroll down the page to the "Artifacts" section and download the &lt;em&gt;Binaries.zip&lt;/em&gt; file (Note you need to be logged into GitHub to see this).&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;If you fork the project on GitHub, the pipelines will run on your own fork as well as long as you enable GitHub Actions on your fork. If you need to prepare a PR for a new feature or modify an existing feature you can use this to build your own binaries for testing on all architectures before send us the PR.&lt;/p&gt; 
&lt;h2&gt;Supported platforms&lt;/h2&gt; 
&lt;p&gt;Velociraptor is written in Golang and so is available for all the platforms &lt;a href="https://github.com/golang/go/wiki/MinimumRequirements"&gt;supported by Go&lt;/a&gt;. This means that Windows XP and Windows server 2003 are &lt;strong&gt;not&lt;/strong&gt; supported but anything after Windows 7/Vista is.&lt;/p&gt; 
&lt;p&gt;We build our releases using the MUSL library (x64) for Linux and a recent MacOS system, so earlier platforms may not be supported by our release pipeline. We also distribute 32 bit binaries for Windows but not for Linux. If you need 32 bit Linux builds you will need to build from source. You can do this easily by forking the project on GitHub, enabling GitHub Actions in your fork and editing the &lt;code&gt;Linux Build All Arches&lt;/code&gt; pipeline.&lt;/p&gt; 
&lt;h2&gt;Artifact Exchange&lt;/h2&gt; 
&lt;p&gt;Velociraptor's power comes from &lt;code&gt;VQL Artifacts&lt;/code&gt;, that define many capabilities to collect many types of data from endpoints. Velociraptor comes with many built in &lt;code&gt;Artifacts&lt;/code&gt; for the most common use cases. The community also maintains a large number of additional artifacts through the &lt;a href="https://docs.velociraptor.app/exchange/"&gt;Artifact Exchange&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Knowledge Base&lt;/h2&gt; 
&lt;p&gt;If you need help performing a task such as deployment, VQL queries etc. Your first port of call should be the Velociraptor Knowledge Base at &lt;a href="https://docs.velociraptor.app/knowledge_base/"&gt;https://docs.velociraptor.app/knowledge_base/&lt;/a&gt; where you will find helpful tips and hints.&lt;/p&gt; 
&lt;h2&gt;Getting help&lt;/h2&gt; 
&lt;p&gt;Questions and feedback are welcome at &lt;a href="mailto:velociraptor-discuss@googlegroups.com"&gt;velociraptor-discuss@googlegroups.com&lt;/a&gt; (or &lt;a href="https://groups.google.com/g/velociraptor-discuss"&gt;https://groups.google.com/g/velociraptor-discuss&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;You can also chat with us directly on discord &lt;a href="https://docs.velociraptor.app/discord"&gt;https://docs.velociraptor.app/discord&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;File issues on &lt;a href="https://github.com/Velocidex/velociraptor"&gt;https://github.com/Velocidex/velociraptor&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Read more about Velociraptor on our blog: &lt;a href="https://docs.velociraptor.app/blog/"&gt;https://docs.velociraptor.app/blog/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Hang out on Medium &lt;a href="https://medium.com/velociraptor-ir"&gt;https://medium.com/velociraptor-ir&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Follow us on Twitter &lt;a href="https://twitter.com/velocidex"&gt;@velocidex&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gogf/gf</title>
      <link>https://github.com/gogf/gf</link>
      <description>&lt;p&gt;A powerful framework for faster, easier, and more efficient project development.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://goframe.org/img/logo_full.png" width="300" alt="goframe gf logo" /&gt; 
 &lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/gogf/gf/v2"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/gogf/gf/v2.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gogf/gf/actions/workflows/ci-main.yml"&gt;&lt;img src="https://github.com/gogf/gf/actions/workflows/ci-main.yml/badge.svg?sanitize=true" alt="GoFrame CI" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/gogf/gf"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/gogf/gf/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/9233"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/9233/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/gogf/gf/v2"&gt;&lt;img src="https://goreportcard.com/badge/github.com/gogf/gf/v2" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/gogf/gf"&gt;&lt;img src="https://codecov.io/gh/gogf/gf/branch/master/graph/badge.svg?sanitize=true" alt="Code Coverage" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gogf/gf"&gt;&lt;img src="https://img.shields.io/badge/production-ready-blue.svg?style=flat" alt="Production Ready" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gogf/gf"&gt;&lt;img src="https://img.shields.io/github/license/gogf/gf.svg?style=flat" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/gogf/gf/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/gogf/gf?style=flat" alt="Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gogf/gf/pulls"&gt;&lt;img src="https://img.shields.io/github/issues-pr/gogf/gf?style=flat" alt="GitHub pull requests" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gogf/gf/pulls?q=is%3Apr+is%3Aclosed"&gt;&lt;img src="https://img.shields.io/github/issues-pr-closed/gogf/gf?style=flat" alt="GitHub closed pull requests" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gogf/gf/issues"&gt;&lt;img src="https://img.shields.io/github/issues/gogf/gf?style=flat" alt="GitHub issues" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gogf/gf/issues?q=is%3Aissue+is%3Aclosed"&gt;&lt;img src="https://img.shields.io/github/issues-closed/gogf/gf?style=flat" alt="GitHub closed issues" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/gogf/gf?style=flat" alt="Stars" /&gt; &lt;img src="https://img.shields.io/github/forks/gogf/gf?style=flat" alt="Forks" /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;A powerful framework for faster, easier, and more efficient project development.&lt;/p&gt; 
&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;GoFrame Official Site: &lt;a href="https://goframe.org"&gt;https://goframe.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GoFrame Official Site(en): &lt;a href="https://goframe.org/en"&gt;https://goframe.org/en&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GoFrame Mirror Site(中文): &lt;a href="https://goframe.org.cn"&gt;https://goframe.org.cn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GoFrame Mirror Site(github pages): &lt;a href="https://pages.goframe.org"&gt;https://pages.goframe.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GoDoc API: &lt;a href="https://pkg.go.dev/github.com/gogf/gf/v2"&gt;https://pkg.go.dev/github.com/gogf/gf/v2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Contributors&lt;/h1&gt; 
&lt;p&gt;💖 &lt;a href="https://github.com/gogf/gf/graphs/contributors"&gt;Thanks to all the contributors who made GoFrame possible&lt;/a&gt; 💖&lt;/p&gt; 
&lt;a href="https://github.com/gogf/gf/graphs/contributors"&gt; &lt;img src="https://goframe.org/img/contributors.svg?version=v2.9.3" alt="goframe contributors" /&gt; &lt;/a&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;GoFrame&lt;/code&gt; is licensed under the &lt;a href="https://raw.githubusercontent.com/gogf/gf/master/LICENSE"&gt;MIT License&lt;/a&gt;, 100% free and open-source, forever.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>