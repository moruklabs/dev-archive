<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Daily Trending</title>
    <description>Daily Trending of TypeScript in GitHub</description>
    <pubDate>Tue, 19 Aug 2025 01:37:24 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>linkwarden/linkwarden</title>
      <link>https://github.com/linkwarden/linkwarden</link>
      <description>&lt;p&gt;⚡️⚡️⚡️ Self-hosted collaborative bookmark manager to collect, read, annotate, and fully preserve what matters, all in one place.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/linkwarden/linkwarden/main/assets/logo.png" width="100px" /&gt; 
 &lt;h1&gt;Linkwarden&lt;/h1&gt; 
 &lt;h3&gt;Bookmarks, Evolved&lt;/h3&gt; 
 &lt;p&gt;&lt;a href="https://discord.com/invite/CtuYV47nuJ"&gt;&lt;img src="https://img.shields.io/discord/1117993124669702164?logo=discord&amp;amp;style=flat" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/LinkwardenHQ"&gt;&lt;img src="https://img.shields.io/twitter/follow/linkwarden" alt="Twitter" /&gt;&lt;/a&gt; &lt;a href="https://news.ycombinator.com/item?id=36942308"&gt;&lt;img src="https://img.shields.io/badge/Hacker%20News-280-%23FF6600" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/linkwarden/linkwarden/releases"&gt;&lt;img alt="GitHub release" src="https://img.shields.io/github/v/release/linkwarden/linkwarden" /&gt;&lt;/a&gt; &lt;a href="https://crowdin.com/project/linkwarden"&gt; &lt;img src="https://badges.crowdin.net/linkwarden/localized.svg?sanitize=true" alt="Crowdin" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/linkwarden"&gt;&lt;img src="https://img.shields.io/opencollective/all/linkwarden" alt="Open Collective" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://demo.linkwarden.app"&gt;« LAUNCH DEMO »&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://cloud.linkwarden.app"&gt;Cloud&lt;/a&gt; · &lt;a href="https://linkwarden.app"&gt;Website&lt;/a&gt; · &lt;a href="https://github.com/linkwarden/linkwarden#features"&gt;Features&lt;/a&gt; · &lt;a href="https://docs.linkwarden.app"&gt;Docs&lt;/a&gt;&lt;/p&gt; 
 &lt;img src="https://raw.githubusercontent.com/linkwarden/linkwarden/main/assets/home.png" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Intro &amp;amp; motivation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Linkwarden is a self-hosted, open-source collaborative bookmark manager to collect, read, annotate, and fully preserve what matters, all in one place.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The objective is to organize useful webpages and articles you find across the web in one place, and since useful webpages can go away (see the inevitability of &lt;a href="https://en.wikipedia.org/wiki/Link_rot"&gt;Link Rot&lt;/a&gt;), Linkwarden also saves a copy of each webpage as a Screenshot and PDF, ensuring accessibility even if the original content is no longer available.&lt;/p&gt; 
&lt;p&gt;In addition to preservation, Linkwarden provides a user-friendly reading and annotation experience that blends the simplicity of a “read-it-later” tool with the reliability of a web archive. Whether you’re highlighting key ideas, jotting down thoughts, or revisiting content long after it’s disappeared from the web, Linkwarden keeps your knowledge accessible and organized.&lt;/p&gt; 
&lt;p&gt;Linkwarden is also designed with collaboration in mind, enabling you to share links with the public and/or collaborate seamlessly with multiple users.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;br /&gt; Our official &lt;a href="https://linkwarden.app/#pricing"&gt;Cloud&lt;/a&gt; offering provides the simplest way to begin using Linkwarden and it's the preferred choice for many due to its time-saving benefits. &lt;br /&gt; Your subscription supports our hosting infrastructure and ongoing development. &lt;br /&gt; Alternatively, if you prefer self-hosting Linkwarden, you can do so by following our &lt;a href="https://docs.linkwarden.app/self-hosting/installation"&gt;Installation documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;📸 Auto capture a screenshot, PDF, and single html file of each webpage.&lt;/li&gt; 
 &lt;li&gt;📖 Reader view of the webpage, with the ability to highlight and annotate text.&lt;/li&gt; 
 &lt;li&gt;🏛️ Send your webpage to Wayback Machine (&lt;a href="https://archive.org"&gt;archive.org&lt;/a&gt;) for a snapshot. (Optional)&lt;/li&gt; 
 &lt;li&gt;✨ Local AI Tagging to automatically tag your links based on their content (Optional).&lt;/li&gt; 
 &lt;li&gt;📂 Organize links by collection, sub-collection, name, description and multiple tags.&lt;/li&gt; 
 &lt;li&gt;👥 Collaborate on gathering links in a collection.&lt;/li&gt; 
 &lt;li&gt;🎛️ Customize the permissions of each member.&lt;/li&gt; 
 &lt;li&gt;🌐 Share your collected links and preserved formats with the world.&lt;/li&gt; 
 &lt;li&gt;📌 Pin your favorite links to dashboard.&lt;/li&gt; 
 &lt;li&gt;🔍 Full text search, filter and sort for easy retrieval.&lt;/li&gt; 
 &lt;li&gt;📱 Responsive design and supports most modern browsers.&lt;/li&gt; 
 &lt;li&gt;🌓 Dark/Light mode support.&lt;/li&gt; 
 &lt;li&gt;🧩 Browser extension. &lt;a href="https://github.com/linkwarden/browser-extension"&gt;Star it here!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔄 Browser Synchronization (using &lt;a href="https://floccus.org"&gt;Floccus&lt;/a&gt;!)&lt;/li&gt; 
 &lt;li&gt;⬇️ Import and export your bookmarks.&lt;/li&gt; 
 &lt;li&gt;🔐 SSO integration. (Enterprise and Self-hosted users only)&lt;/li&gt; 
 &lt;li&gt;📦 Installable Progressive Web App (PWA).&lt;/li&gt; 
 &lt;li&gt;🍎 iOS Shortcut to save Links to Linkwarden.&lt;/li&gt; 
 &lt;li&gt;🔑 API keys.&lt;/li&gt; 
 &lt;li&gt;✅ Bulk actions.&lt;/li&gt; 
 &lt;li&gt;👥 User administration.&lt;/li&gt; 
 &lt;li&gt;🌐 Support for Other Languages (i18n).&lt;/li&gt; 
 &lt;li&gt;📁 Image and PDF Uploads.&lt;/li&gt; 
 &lt;li&gt;🎨 Custom Icons for Links and Collections.&lt;/li&gt; 
 &lt;li&gt;🔔 RSS Feed Subscription.&lt;/li&gt; 
 &lt;li&gt;✨ And many more features. (Literally!)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Like what we're doing? Give us a Star ⭐&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/linkwarden/linkwarden/main/assets/star_repo.gif" alt="Star Us" /&gt;&lt;/p&gt; 
&lt;h2&gt;We're building our Community 🌐&lt;/h2&gt; 
&lt;p&gt;Join and follow us in the following platforms to stay up to date about the most recent features and for support:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.com/invite/CtuYV47nuJ"&gt;&lt;img src="https://img.shields.io/discord/1117993124669702164?logo=discord&amp;amp;style=flat" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://twitter.com/LinkwardenHQ"&gt;&lt;img src="https://img.shields.io/twitter/follow/linkwarden" alt="Twitter" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://fosstodon.org/@linkwarden"&gt;&lt;img src="https://img.shields.io/mastodon/follow/110748840237143200?domain=https%3A%2F%2Ffosstodon.org" alt="Mastodon" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Suggestions&lt;/h2&gt; 
&lt;p&gt;We &lt;em&gt;usually&lt;/em&gt; go after the &lt;a href="https://github.com/linkwarden/linkwarden/issues?q=is%3Aissue%20is%3Aopen%20sort%3Areactions-%2B1-desc"&gt;popular suggestions&lt;/a&gt;. Feel free to open a &lt;a href="https://github.com/linkwarden/linkwarden/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.md&amp;amp;title="&gt;new issue&lt;/a&gt; to suggest one - others might be interested too! :)&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;Make sure to check out our &lt;a href="https://github.com/orgs/linkwarden/projects/1"&gt;public roadmap&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community Projects&lt;/h2&gt; 
&lt;p&gt;Here are some community-maintained projects that are built around Linkwarden:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://apps.apple.com/ca/app/my-links-for-linkwarden/id6504573402"&gt;My Links&lt;/a&gt; - iOS and MacOS Apps, maintained by &lt;a href="https://github.com/JGeek00"&gt;JGeek00&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fossdroid.com/a/linkdroid-for-linkwarden.html"&gt;LinkDroid&lt;/a&gt; - Android App with share sheet integration, &lt;a href="https://github.com/Dacid99/LinkDroid-for-Linkwarden"&gt;source code&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Elbullazul/LinkGuardian"&gt;LinkGuardian&lt;/a&gt; - An Android client for Linkwarden. Built with Kotlin and Jetpack compose.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rtuszik/starwarden"&gt;StarWarden&lt;/a&gt; - A browser extension to save your starred GitHub repositories to Linkwarden.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;If you want to contribute, Thanks! Start by choosing one of our &lt;a href="https://github.com/linkwarden/linkwarden/issues?q=is%3Aissue%20is%3Aopen%20sort%3Areactions-%2B1-desc"&gt;popular suggestions&lt;/a&gt;, just please stay in touch with &lt;a href="https://github.com/daniel31x13"&gt;@daniel31x13&lt;/a&gt; before starting.&lt;/p&gt; 
&lt;h1&gt;Translations&lt;/h1&gt; 
&lt;p&gt;If you want to help us translate Linkwarden to your language, please check out our &lt;a href="https://crowdin.com/project/linkwarden"&gt;Crowdin page&lt;/a&gt; and start translating. We would love to have your help!&lt;/p&gt; 
&lt;p&gt;To start translating a new language, please create an issue so we can set it up for you. New languages will be added once they reach at least 50% translation completion.&lt;/p&gt; 
&lt;a href="https://crowdin.com/project/linkwarden"&gt; &lt;img src="https://badges.crowdin.net/linkwarden/localized.svg?sanitize=true" alt="Crowdin" /&gt;&lt;/a&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you found a security vulnerability, please do &lt;strong&gt;not&lt;/strong&gt; create a public issue, instead send an email to &lt;a href="mailto:security@linkwarden.app"&gt;security@linkwarden.app&lt;/a&gt; stating the vulnerability. Thanks!&lt;/p&gt; 
&lt;h2&gt;Support &amp;lt;3&lt;/h2&gt; 
&lt;p&gt;Other than using our official &lt;a href="https://linkwarden.app/#pricing"&gt;Cloud&lt;/a&gt; offering, any &lt;a href="https://opencollective.com/linkwarden"&gt;donations&lt;/a&gt; are highly appreciated as well!&lt;/p&gt; 
&lt;p&gt;Here are the other ways to support/cheer this project:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Starring this repository.&lt;/li&gt; 
 &lt;li&gt;Joining us on &lt;a href="https://discord.com/invite/CtuYV47nuJ"&gt;Discord&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Referring Linkwarden to a friend.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you did any of the above, Thanksss! Otherwise thanks.&lt;/p&gt; 
&lt;h2&gt;Thanks to All the Contributors 💪&lt;/h2&gt; 
&lt;p&gt;Huge thanks to these guys for spending their time helping Linkwarden grow. They rock! ⚡️&lt;/p&gt; 
&lt;img src="https://contributors-img.web.app/image?repo=linkwarden/linkwarden" alt="Contributors" /&gt;</description>
    </item>
    
    <item>
      <title>bytebot-ai/bytebot</title>
      <link>https://github.com/bytebot-ai/bytebot</link>
      <description>&lt;p&gt;Bytebot is a self-hosted AI desktop agent that automates computer tasks through natural language commands, operating within a containerized Linux desktop environment.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/bytebot-ai/bytebot/main/docs/images/bytebot-logo.png" width="500" alt="Bytebot Logo" /&gt; 
 &lt;h1&gt;Bytebot: Open-Source AI Desktop Agent&lt;/h1&gt; 
 &lt;p&gt;&lt;strong&gt;An AI that has its own computer to complete tasks for you&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://railway.com/deploy/bytebot?referralCode=L9lKXQ"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bytebot-ai/bytebot/tree/main/docker"&gt;&lt;img src="https://img.shields.io/badge/docker-ready-blue.svg?sanitize=true" alt="Docker" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/bytebot-ai/bytebot/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-Apache%202.0-green.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/d9ewZkWPTP"&gt;&lt;img src="https://img.shields.io/discord/1234567890?color=7289da&amp;amp;label=discord" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://bytebot.ai"&gt;🌐 Website&lt;/a&gt; • &lt;a href="https://docs.bytebot.ai"&gt;📚 Documentation&lt;/a&gt; • &lt;a href="https://discord.com/invite/d9ewZkWPTP"&gt;💬 Discord&lt;/a&gt; • &lt;a href="https://x.com/bytebot_ai"&gt;𝕏 Twitter&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;What is a Desktop Agent?&lt;/h2&gt; 
&lt;p&gt;A desktop agent is an AI that has its own computer. Unlike browser-only agents or traditional RPA tools, Bytebot comes with a full virtual desktop where it can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use any application (browsers, email clients, office tools, IDEs)&lt;/li&gt; 
 &lt;li&gt;Download and organize files with its own file system&lt;/li&gt; 
 &lt;li&gt;Log into websites and applications using password managers&lt;/li&gt; 
 &lt;li&gt;Read and process documents, PDFs, and spreadsheets&lt;/li&gt; 
 &lt;li&gt;Complete complex multi-step workflows across different programs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Think of it as a virtual employee with their own computer who can see the screen, move the mouse, type on the keyboard, and complete tasks just like a human would.&lt;/p&gt; 
&lt;h2&gt;Why Give AI Its Own Computer?&lt;/h2&gt; 
&lt;p&gt;When AI has access to a complete desktop environment, it unlocks capabilities that aren't possible with browser-only agents or API integrations:&lt;/p&gt; 
&lt;h3&gt;Complete Task Autonomy&lt;/h3&gt; 
&lt;p&gt;Give Bytebot a task like "Download all invoices from our vendor portals and organize them by date" and it will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open the browser&lt;/li&gt; 
 &lt;li&gt;Navigate to each portal&lt;/li&gt; 
 &lt;li&gt;Handle authentication (including 2FA via password managers)&lt;/li&gt; 
 &lt;li&gt;Download the files to its local file system&lt;/li&gt; 
 &lt;li&gt;Organize them into folders&lt;/li&gt; 
 &lt;li&gt;Generate reports or summaries as needed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Process Any Document&lt;/h3&gt; 
&lt;p&gt;Upload files directly to Bytebot's desktop and it can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Read entire PDFs into its context&lt;/li&gt; 
 &lt;li&gt;Extract data from complex documents&lt;/li&gt; 
 &lt;li&gt;Cross-reference information across multiple files&lt;/li&gt; 
 &lt;li&gt;Create new documents based on analysis&lt;/li&gt; 
 &lt;li&gt;Handle formats that APIs can't access&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Use Real Applications&lt;/h3&gt; 
&lt;p&gt;Bytebot isn't limited to web interfaces. It can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use desktop applications like text editors, VS Code, or email clients&lt;/li&gt; 
 &lt;li&gt;Run scripts and command-line tools&lt;/li&gt; 
 &lt;li&gt;Install new software as needed&lt;/li&gt; 
 &lt;li&gt;Configure applications for specific workflows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Deploy in 2 Minutes&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Option 1: Railway (Easiest)&lt;/strong&gt; &lt;a href="https://railway.com/deploy/bytebot?referralCode=L9lKXQ"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Just click and add your AI provider API key.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Option 2: Docker Compose&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/bytebot-ai/bytebot.git
cd bytebot

# Add your AI provider key (choose one)
echo "ANTHROPIC_API_KEY=sk-ant-..." &amp;gt; docker/.env
# Or: echo "OPENAI_API_KEY=sk-..." &amp;gt; docker/.env
# Or: echo "GEMINI_API_KEY=..." &amp;gt; docker/.env

docker-compose -f docker/docker-compose.yml up -d

# Open http://localhost:9992
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://docs.bytebot.ai/quickstart"&gt;Full deployment guide →&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How It Works&lt;/h2&gt; 
&lt;p&gt;Bytebot consists of four integrated components:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Virtual Desktop&lt;/strong&gt;: A complete Ubuntu Linux environment with pre-installed applications&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI Agent&lt;/strong&gt;: Understands your tasks and controls the desktop to complete them&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Task Interface&lt;/strong&gt;: Web UI where you create tasks and watch Bytebot work&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;APIs&lt;/strong&gt;: REST endpoints for programmatic task creation and desktop control&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Key Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Natural Language Tasks&lt;/strong&gt;: Just describe what you need done&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;File Uploads&lt;/strong&gt;: Drop files onto tasks for Bytebot to process&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Live Desktop View&lt;/strong&gt;: Watch Bytebot work in real-time&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Takeover Mode&lt;/strong&gt;: Take control when you need to help or configure something&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Password Manager Support&lt;/strong&gt;: Install 1Password, Bitwarden, etc. for automatic authentication&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Persistent Environment&lt;/strong&gt;: Install programs and they stay available for future tasks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example Tasks&lt;/h2&gt; 
&lt;h3&gt;Basic Examples&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;"Go to Wikipedia and create a summary of quantum computing"
"Research flights from NYC to London and create a comparison document"
"Take screenshots of the top 5 news websites"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Document Processing&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;"Read the uploaded contracts.pdf and extract all payment terms and deadlines"
"Process these 50 invoice PDFs and create a summary report"
"Analyze this financial report and answer: What were the key risks mentioned?"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multi-Application Workflows&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;"Download last month's bank statements from our three banks and consolidate them"
"Check all our vendor portals for new invoices and create a summary report"
"Log into our CRM, export the customer list, and update records in the ERP system"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Programmatic Control&lt;/h2&gt; 
&lt;h3&gt;Create Tasks via API&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import requests

# Simple task
response = requests.post('http://localhost:9991/tasks', json={
    'description': 'Download the latest sales report and create a summary'
})

# Task with file upload
files = {'files': open('contracts.pdf', 'rb')}
response = requests.post('http://localhost:9991/tasks',
    data={'description': 'Review these contracts for important dates'},
    files=files
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Direct Desktop Control&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Take a screenshot
curl -X POST http://localhost:9990/computer-use \
  -H "Content-Type: application/json" \
  -d '{"action": "screenshot"}'

# Click at specific coordinates
curl -X POST http://localhost:9990/computer-use \
  -H "Content-Type: application/json" \
  -d '{"action": "click_mouse", "coordinate": [500, 300]}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://docs.bytebot.ai/api-reference/introduction"&gt;Full API documentation →&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Setting Up Your Desktop Agent&lt;/h2&gt; 
&lt;h3&gt;1. Deploy Bytebot&lt;/h3&gt; 
&lt;p&gt;Use one of the deployment methods above to get Bytebot running.&lt;/p&gt; 
&lt;h3&gt;2. Configure the Desktop&lt;/h3&gt; 
&lt;p&gt;Use the Desktop tab in the UI to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install additional programs you need&lt;/li&gt; 
 &lt;li&gt;Set up password managers for authentication&lt;/li&gt; 
 &lt;li&gt;Configure applications with your preferences&lt;/li&gt; 
 &lt;li&gt;Log into websites you want Bytebot to access&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3. Start Giving Tasks&lt;/h3&gt; 
&lt;p&gt;Create tasks in natural language and watch Bytebot complete them using the configured desktop.&lt;/p&gt; 
&lt;h2&gt;Use Cases&lt;/h2&gt; 
&lt;h3&gt;Business Process Automation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Invoice processing and data extraction&lt;/li&gt; 
 &lt;li&gt;Multi-system data synchronization&lt;/li&gt; 
 &lt;li&gt;Report generation from multiple sources&lt;/li&gt; 
 &lt;li&gt;Compliance checking across platforms&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development &amp;amp; Testing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Automated UI testing&lt;/li&gt; 
 &lt;li&gt;Cross-browser compatibility checks&lt;/li&gt; 
 &lt;li&gt;Documentation generation with screenshots&lt;/li&gt; 
 &lt;li&gt;Code deployment verification&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Research &amp;amp; Analysis&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Competitive analysis across websites&lt;/li&gt; 
 &lt;li&gt;Data gathering from multiple sources&lt;/li&gt; 
 &lt;li&gt;Document analysis and summarization&lt;/li&gt; 
 &lt;li&gt;Market research compilation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;Bytebot is built with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Desktop&lt;/strong&gt;: Ubuntu 22.04 with XFCE, Firefox, VS Code, and other tools&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Agent&lt;/strong&gt;: NestJS service that coordinates AI and desktop actions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UI&lt;/strong&gt;: Next.js application for task management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI Support&lt;/strong&gt;: Works with Anthropic Claude, OpenAI GPT, Google Gemini&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Deployment&lt;/strong&gt;: Docker containers for easy self-hosting&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why Self-Host?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Data Privacy&lt;/strong&gt;: Everything runs on your infrastructure&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Full Control&lt;/strong&gt;: Customize the desktop environment as needed&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No Limits&lt;/strong&gt;: Use your own AI API keys without platform restrictions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexibility&lt;/strong&gt;: Install any software, access any systems&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Advanced Features&lt;/h2&gt; 
&lt;h3&gt;Multiple AI Providers&lt;/h3&gt; 
&lt;p&gt;Use any AI provider through our &lt;a href="https://docs.bytebot.ai/deployment/litellm"&gt;LiteLLM integration&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Azure OpenAI&lt;/li&gt; 
 &lt;li&gt;AWS Bedrock&lt;/li&gt; 
 &lt;li&gt;Local models via Ollama&lt;/li&gt; 
 &lt;li&gt;100+ other providers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Enterprise Deployment&lt;/h3&gt; 
&lt;p&gt;Deploy on Kubernetes with Helm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone the repository
git clone https://github.com/bytebot-ai/bytebot.git
cd bytebot

# Install with Helm
helm install bytebot ./helm \
  --set agent.env.ANTHROPIC_API_KEY=sk-ant-...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://docs.bytebot.ai/deployment/helm"&gt;Enterprise deployment guide →&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community &amp;amp; Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Discord&lt;/strong&gt;: &lt;a href="https://discord.com/invite/d9ewZkWPTP"&gt;Join our community&lt;/a&gt; for help and discussions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: Comprehensive guides at &lt;a href="https://docs.bytebot.ai"&gt;docs.bytebot.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Issues&lt;/strong&gt;: Report bugs and request features&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Whether it's:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 Bug fixes&lt;/li&gt; 
 &lt;li&gt;✨ New features&lt;/li&gt; 
 &lt;li&gt;📚 Documentation improvements&lt;/li&gt; 
 &lt;li&gt;🌐 Translations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Check existing &lt;a href="https://github.com/bytebot-ai/bytebot/issues"&gt;issues&lt;/a&gt; first&lt;/li&gt; 
 &lt;li&gt;Open an issue to discuss major changes&lt;/li&gt; 
 &lt;li&gt;Submit PRs with clear descriptions&lt;/li&gt; 
 &lt;li&gt;Join our &lt;a href="https://discord.com/invite/d9ewZkWPTP"&gt;Discord&lt;/a&gt; to discuss ideas&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Bytebot is open source under the Apache 2.0 license.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;strong&gt;Give your AI its own computer. See what it can do.&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://railway.com/deploy/bytebot?referralCode=L9lKXQ"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;sub&gt;Built by &lt;a href="https://tantl.com"&gt;Tantl Labs&lt;/a&gt; and the open source community&lt;/sub&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>huggingface/aisheets</title>
      <link>https://github.com/huggingface/aisheets</link>
      <description>&lt;p&gt;Build, enrich, and transform datasets using AI models with no code&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt;🤗 Hugging Face AI Sheets&lt;/h1&gt; 
 &lt;p&gt;&lt;em&gt;Build, enrich, and transform datasets using AI models with no code. Deploy locally or on the Hub with access to thousands of open models.&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://huggingface.co/blog/aisheets"&gt;Introduction&lt;/a&gt; • &lt;a href="https://huggingface.co/spaces/aisheets/sheets"&gt;Try it out&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;
  &lt;video width="400" src="https://github.com/user-attachments/assets/a284e4d4-3c11-4885-96cc-2f6f0314f2a1"&gt;&lt;/video&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;What's AI Sheets?&lt;/h2&gt; 
&lt;p&gt;Hugging Face AI Sheets is an open-source tool for building, enriching, and transforming datasets using AI models with no code. The tool can be deployed locally or on the Hub. It lets you use thousands of open models from the Hugging Face Hub via Inference Providers or local models, including &lt;code&gt;gpt-oss&lt;/code&gt; from OpenAI!&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Using the AI Sheets Space&lt;/h3&gt; 
&lt;p&gt;Try it instantly at &lt;a href="https://huggingface.co/spaces/aisheets/sheets"&gt;https://huggingface.co/spaces/aisheets/sheets&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Using Docker&lt;/h3&gt; 
&lt;p&gt;First, get your Hugging Face token from &lt;a href="https://huggingface.co/settings/tokens"&gt;https://huggingface.co/settings/tokens&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export HF_TOKEN=your_token_here
docker run -p 3000:3000 \
-e HF_TOKEN=HF_TOKEN \
AI Sheets/sheets
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open &lt;code&gt;http://localhost:3000&lt;/code&gt; in your browser.&lt;/p&gt; 
&lt;h3&gt;Using pnpm&lt;/h3&gt; 
&lt;p&gt;First, &lt;a href="https://pnpm.io/installation"&gt;install pnpm&lt;/a&gt; if you haven't already.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/huggingface/sheets.git
cd sheets
export HF_TOKEN=your_token_here
pnpm install
pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open &lt;code&gt;http://localhost:5173&lt;/code&gt; in your browser.&lt;/p&gt; 
&lt;h4&gt;Building for production&lt;/h4&gt; 
&lt;p&gt;To build the production application, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will create a production build in the &lt;code&gt;dist&lt;/code&gt; directory.&lt;/p&gt; 
&lt;p&gt;Then, you can launch the built-in Express server to serve the production build:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export HF_TOKEN=your_token_here
pnpm serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running data generation scripts using HF Jobs&lt;/h2&gt; 
&lt;p&gt;If you want to generate a larger dataset, you can use the above-mentioned config and script, like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;hf jobs uv run \
-s HF_TOKEN=$HF_TOKEN \
https://github.com/huggingface/aisheets/raw/refs/heads/main/scripts/extend_dataset/with_inference_client.py \ # script for running the pipeline
nvidia/Nemotron-Personas dvilasuero/nemotron-kimi-qa-distilled \
--config https://huggingface.co/datasets/dvilasuero/nemotron-personas-kimi-questions/raw/main/config.yml \ # config with prompts
--num-rows 100 # limit to 100 rows, leave empty for the full dataset
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can use a script that utilizes vllm inference instead of the inference client. This script helps you to save on inference costs, but it requires you to set up a vllm-compatible flavor when running the job:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;hf jobs uv run --flavor l4x1 \
-s HF_TOKEN=$HF_TOKEN \
https://github.com/huggingface/aisheets/raw/refs/heads/main/scripts/extend_dataset/with_vllm.py \ # script for running the pipeline
nvidia/Nemotron-Personas dvilasuero/nemotron-kimi-qa-distilled \
--config https://huggingface.co/datasets/dvilasuero/nemotron-personas-kimi-questions/raw/main/config.yml \ # config with prompts
--num-rows 100 \ # limit to 100 rows, leave empty for the full dataset
--vllm-model deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running AI Sheets with custom (and local) LLMs&lt;/h2&gt; 
&lt;p&gt;By default, AI Sheets is configured to use the Huggingface Inference Providers API to run inference on the latest open-source models. However, you can also run Sheets with own custom LLMs, such as those hosted on your own infrastructure or other cloud providers. The only requirement is that your LLMs must support the &lt;a href="https://platform.openai.com/docs/api-reference/introduction"&gt;OpenAI API specification&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Steps&lt;/h3&gt; 
&lt;p&gt;When running AI Sheets with custom LLMs, you need to set some environment variables to point the inference calls to your custom LLMs. Here are the steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Set the &lt;code&gt;MODEL_ENDPOINT_URL&lt;/code&gt; environment variable&lt;/strong&gt;: This variable should point to the base URL of your custom LLM's API endpoint. For example, if you are using Ollama to run your LLM locally, you would set it like this:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export MODEL_ENDPOINT_URL=http://localhost:11434
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Since Ollama starts a local server on port &lt;code&gt;11434&lt;/code&gt; by default, this URL will point to your local Ollama instance.&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;Set the &lt;code&gt;MODEL_ENDPOINT_NAME&lt;/code&gt; environment variable&lt;/strong&gt;: This variable should specify the name of the model you want to use. For example, if you are using the &lt;code&gt;llama3&lt;/code&gt; model, you would set it like this:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export MODEL_ENDPOINT_NAME=llama3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is a crucial step to conform to the OpenAI API specification. The model name is a required parameter in the &lt;a href="https://platform.openai.com/docs/api-reference/responses/create#responses-create-model"&gt;OpenAI API&lt;/a&gt;, and it is used to identify which model to use for inference.&lt;/p&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;strong&gt;Run the AI Sheets app&lt;/strong&gt;: After setting the environment variables, you can run the Sheets app as usual. The app will now use your custom LLM for inference instead of the default Huggingface Inference Providers API as the default behavior. Anyway, all the models provided by the Huggingface Inference Providers API will still be available when selecting a model in the column settings.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Note: The text-to-image generation feature cannot be customized yet. It will always utilize the Hugging Face Inference Providers API to generate images. Take this into account when running AI Sheets with custom LLMs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Example of running AI Sheets with Ollama&lt;/h3&gt; 
&lt;p&gt;To run AI Sheets with Ollama, you can follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start the Ollama server, and run the model of your choice&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export OLLAMA_NOHISTORY=1
ollama serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;ollama run llama3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(Visit the Ollama &lt;a href="https://github.com/ollama/ollama/raw/main/docs/faq.md#how-can-i-specify-the-context-window-size"&gt;FAQ&lt;/a&gt; page to know more about Ollama server configuration)&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Set the environment variables:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export MODEL_ENDPOINT_URL=http://localhost:11434
export MODEL_ENDPOINT_NAME=llama3
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Run the AI Sheets app:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pnpm serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will start the AI Sheets app and use the &lt;code&gt;llama3&lt;/code&gt; model running on your local Ollama instance for inference.&lt;/p&gt; 
&lt;h2&gt;Advanced configuration&lt;/h2&gt; 
&lt;p&gt;AI Sheets defines some environment variables that can be used to customize the behavior of the application. In the following sections, we will describe the available environment variables and their usage.&lt;/p&gt; 
&lt;h3&gt;&amp;nbsp;Authentication&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;OAUTH_CLIENT_ID&lt;/code&gt;: The Hugging Face OAuth client ID for the application. This is used to authenticate users via the Hugging Face OAuth. If this variable is defined, it will be used to authenticate users. (See how to setup the Hugging Face OAuth &lt;a href="https://huggingface.co/blog/frascuchon/running-sheets-locally#oauth-authentication"&gt;here&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;HF_TOKEN&lt;/code&gt;: A Hugging Face token to use for authentication. If this variable is defined, it will be used for authenticated inference calls, instead of the OAuth token.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;OAUTH_SCOPES&lt;/code&gt;: The scopes to request during the OAuth authentication. The default value is &lt;code&gt;openid profile inference-api manage-repos&lt;/code&gt;. This variable is used to request the necessary permissions for the application to function correctly, and normally does not need to be changed.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&amp;nbsp;Inference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;DEFAULT_MODEL&lt;/code&gt;: The default model id to use when calling the inference API for text generation. The default value is &lt;code&gt;meta-llama/Llama-3.3-70B-Instruct&lt;/code&gt;. This variable can be used to change the default model used for text generation and must be a valid model id from the &lt;a href="https://huggingface.co/models?pipeline_tag=text-generation&amp;amp;inference_provider=all&amp;amp;sort=trending"&gt;Hugging Face Hub&lt;/a&gt;,&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;DEFAULT_MODEL_PROVIDER&lt;/code&gt;: The default model provider to use when calling the inference API for text generation. The default value is &lt;code&gt;nebius&lt;/code&gt;. This variable can be used to change the default model provider used for text generation and must be a valid provider from the &lt;a href="https://huggingface.co/docs/inference-providers/en/index"&gt;Hugging Face Inference Providers&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ORG_BILLING&lt;/code&gt;: The organization billing to use for inference calls. If this variable is defined, the inference calls will be billed to the specified organization. This is useful for organizations that want to manage their inference costs and usage. Remember that users must be part of the organization to use this feature, or an &lt;code&gt;HF_TOKEN&lt;/code&gt; of a user that is part of the organization must be defined.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;MODEL_ENDPOINT_URL&lt;/code&gt;: The URL of a custom inference endpoint to use for text generation. If this variable is defined, it will be used instead of the default Hugging Face Inference API. This is useful for using custom inference endpoints that are not hosted on the Hugging Face Hub, such as Ollama or LLM Studio. The URL must be a valid endpoint that supports the &lt;a href="https://platform.openai.com/docs/api-reference/chat/create"&gt;OpenAI API format&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;MODEL_ENDPOINT_NAME&lt;/code&gt;: The model id to use when calling the custom inference endpoint defined by &lt;code&gt;MODEL_ENDPOINT_URL&lt;/code&gt;. This variable is required if &lt;code&gt;MODEL_ENDPOINT_URL&lt;/code&gt; is defined for custom inference endpoints that require a model id, such as Ollama or LLM Studio. The model id must correspond to the model deployed on the custom inference endpoint.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;NUM_CONCURRENT_REQUESTS&lt;/code&gt;: The number of concurrent requests to allow when calling the inference API in the column cells generation process. The default value is &lt;code&gt;5&lt;/code&gt;, and the maximum value is &lt;code&gt;10&lt;/code&gt;. This is useful to control the number of concurrent requests made to the inference API and avoid hitting rate limits defined by the provider.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Miscellaneous&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;DATA_DIR&lt;/code&gt;: The directory where the application will store all its data. The default value is &lt;code&gt;./data&lt;/code&gt;. This variable can be used to change the data directory used by the application. The directory must be writable by the application.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;SERPER_API_KEY&lt;/code&gt;: The API key to use for the Serper web search API. If this variable is defined, it will be used to authenticate web search requests. If this variable is not defined, web search will be disabled. The Serper API key can be obtained from the &lt;a href="https://serper.dev/"&gt;Serper website&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;TELEMETRY_ENABLED&lt;/code&gt;: A boolean value that indicates whether telemetry is enabled or not. The default value is &lt;code&gt;1&lt;/code&gt;. This variable can be used to disable telemetry if desired. Telemetry is used to collect anonymous usage data to help improve the application.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;EXAMPLES_PROMPT_MAX_CONTEXT_SIZE&lt;/code&gt;: The maximum context size (in characters) for the examples section in the prompt for text generation. The default value is &lt;code&gt;8192&lt;/code&gt;. If the examples section exceeds this size, it will be truncated. This variable can be used when the examples section is too large and needs to be reduced to fit within the context size limits of the model.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;SOURCES_PROMPT_MAX_CONTEXT_SIZE&lt;/code&gt;: The maximum context size (in characters) for the sources section in the prompt for text generation. The default value is &lt;code&gt;61440&lt;/code&gt;. If the sources section exceeds this size, it will be truncated. This variable can be used when the sources section is too large and needs to be reduced to fit within the context size limits of the model.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Developer docs&lt;/h2&gt; 
&lt;h3&gt;Dev dependencies on your vscode&lt;/h3&gt; 
&lt;h4&gt;vitest runner&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=rluvaton.vscode-vitest"&gt;https://marketplace.visualstudio.com/items?itemName=rluvaton.vscode-vitest&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;biome&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=biomejs.biome"&gt;https://marketplace.visualstudio.com/items?itemName=biomejs.biome&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Project Structure&lt;/h3&gt; 
&lt;p&gt;This project is using Qwik with &lt;a href="https://qwik.dev/qwikcity/overview/"&gt;QwikCity&lt;/a&gt;. QwikCity is just an extra set of tools on top of Qwik to make it easier to build a full site, including directory-based routing, layouts, and more.&lt;/p&gt; 
&lt;p&gt;Inside your project, you'll see the following directory structure:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;├── public/
│   └── ...
└── src/
    ├── components/ --&amp;gt; Stateless components
    │   └── ...
    ├── features/ --&amp;gt; Components with business logic
    │   └── ...
    └── routes/
        └── ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;src/routes&lt;/code&gt;: Provides the directory-based routing, which can include a hierarchy of &lt;code&gt;layout.tsx&lt;/code&gt; layout files, and an &lt;code&gt;index.tsx&lt;/code&gt; file as the page. Additionally, &lt;code&gt;index.ts&lt;/code&gt; files are endpoints. Please see the &lt;a href="https://qwik.dev/qwikcity/routing/overview/"&gt;routing docs&lt;/a&gt; for more info.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;src/components&lt;/code&gt;: Recommended directory for components.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;public&lt;/code&gt;: Any static assets, like images, can be placed in the public directory. Please see the &lt;a href="https://vitejs.dev/guide/assets.html#the-public-directory"&gt;Vite public directory&lt;/a&gt; for more info.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development&lt;/h3&gt; 
&lt;p&gt;Run this on your root folder&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;touch .env
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add in your &lt;code&gt;.env&lt;/code&gt; file the following variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;HF_TOKEN=your_hugging_face_token
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Development mode uses &lt;a href="https://vitejs.dev/"&gt;Vite's development server&lt;/a&gt;. The &lt;code&gt;dev&lt;/code&gt; command will server-side render (SSR) the output during development.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: during dev mode, Vite may request a significant number of &lt;code&gt;.js&lt;/code&gt; files. This does not represent a Qwik production build.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Preview&lt;/h3&gt; 
&lt;p&gt;The preview command will create a production build of the client modules, a production build of &lt;code&gt;src/entry.preview.tsx&lt;/code&gt;, and run a local server. The preview server is only for convenience to preview a production build locally and should not be used as a production server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm preview
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Production&lt;/h3&gt; 
&lt;p&gt;The production build will generate client and server modules by running both client and server build commands. The build command will use Typescript to run a type check on the source code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Express Server&lt;/h3&gt; 
&lt;p&gt;This app has a minimal &lt;a href="https://expressjs.com/"&gt;Express server&lt;/a&gt; implementation. After running a full build, you can preview the build using the command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;pnpm serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>blakeblackshear/frigate</title>
      <link>https://github.com/blakeblackshear/frigate</link>
      <description>&lt;p&gt;NVR with realtime local object detection for IP cameras&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img align="center" alt="logo" src="https://raw.githubusercontent.com/blakeblackshear/frigate/dev/docs/static/img/frigate.png" /&gt; &lt;/p&gt; 
&lt;h1&gt;Frigate - NVR With Realtime Object Detection for IP Cameras&lt;/h1&gt; 
&lt;a href="https://hosted.weblate.org/engage/frigate-nvr/"&gt; &lt;img src="https://hosted.weblate.org/widget/frigate-nvr/language-badge.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt; 
&lt;p&gt;[English] | &lt;a href="https://github.com/blakeblackshear/frigate/raw/dev/README_CN.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A complete and local NVR designed for &lt;a href="https://www.home-assistant.io"&gt;Home Assistant&lt;/a&gt; with AI object detection. Uses OpenCV and Tensorflow to perform realtime object detection locally for IP cameras.&lt;/p&gt; 
&lt;p&gt;Use of a GPU or AI accelerator such as a &lt;a href="https://coral.ai/products/"&gt;Google Coral&lt;/a&gt; or &lt;a href="https://hailo.ai/"&gt;Hailo&lt;/a&gt; is highly recommended. AI accelerators will outperform even the best CPUs with very little overhead.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tight integration with Home Assistant via a &lt;a href="https://github.com/blakeblackshear/frigate-hass-integration"&gt;custom component&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Designed to minimize resource use and maximize performance by only looking for objects when and where it is necessary&lt;/li&gt; 
 &lt;li&gt;Leverages multiprocessing heavily with an emphasis on realtime over processing every frame&lt;/li&gt; 
 &lt;li&gt;Uses a very low overhead motion detection to determine where to run object detection&lt;/li&gt; 
 &lt;li&gt;Object detection with TensorFlow runs in separate processes for maximum FPS&lt;/li&gt; 
 &lt;li&gt;Communicates over MQTT for easy integration into other systems&lt;/li&gt; 
 &lt;li&gt;Records video with retention settings based on detected objects&lt;/li&gt; 
 &lt;li&gt;24/7 recording&lt;/li&gt; 
 &lt;li&gt;Re-streaming via RTSP to reduce the number of connections to your camera&lt;/li&gt; 
 &lt;li&gt;WebRTC &amp;amp; MSE support for low-latency live view&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;View the documentation at &lt;a href="https://docs.frigate.video"&gt;https://docs.frigate.video&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;If you would like to make a donation to support development, please use &lt;a href="https://github.com/sponsors/blakeblackshear"&gt;Github Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;h3&gt;Live dashboard&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Live dashboard" src="https://github.com/blakeblackshear/frigate/assets/569905/5e713cb9-9db5-41dc-947a-6937c3bc376e" /&gt; 
&lt;/div&gt; 
&lt;h3&gt;Streamlined review workflow&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Streamlined review workflow" src="https://github.com/blakeblackshear/frigate/assets/569905/6fed96e8-3b18-40e5-9ddc-31e6f3c9f2ff" /&gt; 
&lt;/div&gt; 
&lt;h3&gt;Multi-camera scrubbing&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Multi-camera scrubbing" src="https://github.com/blakeblackshear/frigate/assets/569905/d6788a15-0eeb-4427-a8d4-80b93cae3d74" /&gt; 
&lt;/div&gt; 
&lt;h3&gt;Built-in mask and zone editor&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Multi-camera scrubbing" src="https://github.com/blakeblackshear/frigate/assets/569905/d7885fc3-bfe6-452f-b7d0-d957cb3e31f5" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;We use &lt;a href="https://hosted.weblate.org/projects/frigate-nvr/"&gt;Weblate&lt;/a&gt; to support language translations. Contributions are always welcome.&lt;/p&gt; 
&lt;a href="https://hosted.weblate.org/engage/frigate-nvr/"&gt; &lt;img src="https://hosted.weblate.org/widget/frigate-nvr/multi-auto.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>MotiaDev/motia</title>
      <link>https://github.com/MotiaDev/motia</link>
      <description>&lt;p&gt;Modern Backend Framework that unifies APIs, background jobs, workflows, and AI agents into a single cohesive system with built-in observability and state management.&lt;/p&gt;&lt;hr&gt;&lt;a href="https://motia.dev"&gt; &lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/github-readme-banner.png" alt="Motia Banner" width="100%" /&gt; &lt;/a&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/14032" style="margin-right:8px;"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/14032" alt="Motia" style="width: 250px; height: 55px; margin-right:8px;" width="250" height="55" /&gt; &lt;/a&gt; &lt;a href="https://vercel.com/blog/summer-2025-oss-program#motia" target="_blank" style="margin-left:8px;"&gt; &lt;img alt="Vercel OSS Program" src="https://vercel.com/oss/program-badge.svg?sanitize=true" style="width: 250px; height: 55px; margin-left:8px;" width="250" height="55" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;strong&gt;🔥 The Unified Backend Framework That Eliminates Runtime Fragmentation 🔥&lt;/strong&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;em&gt;APIs, background jobs, workflows, and AI agents in one system. JavaScript, TypeScript, Python, and more in one codebase.&lt;/em&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.npmjs.com/package/motia"&gt; &lt;img src="https://img.shields.io/npm/v/motia?style=flat&amp;amp;logo=npm&amp;amp;logoColor=white&amp;amp;color=CB3837&amp;amp;labelColor=000000" alt="npm version" /&gt; &lt;/a&gt; &lt;a href="https://github.com/MotiaDev/motia/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/license-MIT-green?style=flat&amp;amp;logo=opensourceinitiative&amp;amp;logoColor=white&amp;amp;labelColor=000000" alt="license" /&gt; &lt;/a&gt; &lt;a href="https://github.com/MotiaDev/motia"&gt; &lt;img src="https://img.shields.io/github/stars/MotiaDev/motia?style=flat&amp;amp;logo=github&amp;amp;logoColor=white&amp;amp;color=yellow&amp;amp;labelColor=000000" alt="GitHub stars" /&gt; &lt;/a&gt; &lt;a href="https://twitter.com/motiadev" target="_blank"&gt; &lt;img src="https://img.shields.io/badge/Follow-@motiadev-1DA1F2?style=flat&amp;amp;logo=twitter&amp;amp;logoColor=white&amp;amp;labelColor=000000" alt="Twitter Follow" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/motia" target="_blank"&gt; &lt;img src="https://img.shields.io/discord/1322278831184281721?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=5865F2&amp;amp;label=Discord&amp;amp;labelColor=000000" alt="Discord" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.motia.dev/manifesto"&gt;💡 Motia Manifesto&lt;/a&gt; • &lt;a href="https://www.motia.dev/docs/getting-started/quick-start"&gt;🚀 Quick Start&lt;/a&gt; • &lt;a href="https://www.motia.dev/docs/concepts/steps/defining-steps"&gt;📋 Defining Steps&lt;/a&gt; • &lt;a href="https://www.motia.dev/docs"&gt;📚 Docs&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎯 What is Motia?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Motia solves backend fragmentation.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Modern software engineering is splintered – APIs live in one framework, background jobs in another, queues have their own tooling, and AI agents are springing up in yet more isolated runtimes. &lt;strong&gt;This fragmentation demands a unified system.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Motia unifies APIs, background jobs, workflows, and AI agents into a &lt;strong&gt;single coherent system&lt;/strong&gt; with shared observability and developer experience. Similar to how React simplified frontend development where everything is a component, &lt;strong&gt;Motia simplifies backend development where everything is a Step&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Write &lt;strong&gt;JavaScript, TypeScript, Python, and more&lt;/strong&gt; in the same workflow. &lt;strong&gt;What used to take 5 frameworks to build now comes out of the box with Motia.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://motia.dev"&gt;&lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/Motia_Github_Repository_GIF.gif" alt="Motia combines APIs, background queues, and AI agents into one system" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Quickstart&lt;/h2&gt; 
&lt;p&gt;Get Motia project up and running in &lt;strong&gt;under 60 seconds&lt;/strong&gt;:&lt;/p&gt; 
&lt;h3&gt;1. Bootstrap a New Motia Project&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx motia@latest create -i   # runs the interactive terminal
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Follow the prompts to pick a template, project name, and language.&lt;/p&gt; 
&lt;h3&gt;2. Start the Workbench&lt;/h3&gt; 
&lt;p&gt;Inside your new project folder, launch the dev server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx motia dev # ➜ http://localhost:3000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This spins up the Motia Workbench – a local UI for building, testing &amp;amp; observing your backend in real-time.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/motia-terminal.gif" alt="motia-terminal" /&gt;&lt;/p&gt; 
&lt;h3&gt;3. Hit Your First Endpoint&lt;/h3&gt; 
&lt;p&gt;Open a new terminal tab and run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl http://localhost:3000/default
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should see the JSON response:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{ "message": "Hello World from Motia!" }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;4. Explore the Workbench UI&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/new-workbench.png" alt="new-workbench" /&gt; The Workbench is your command centre:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🌊 Flows&lt;/strong&gt; – Visualise how your Steps connect.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔌 Endpoints&lt;/strong&gt; – Test APIs with one click and stream results live.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;👁️ Traces&lt;/strong&gt; – Inspect end-to-end traces of every execution.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📊 Logs&lt;/strong&gt; – View structured logs grouped by trace.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🏪 State&lt;/strong&gt; – Inspect the key-value store across Steps.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;🎉 &lt;strong&gt;That's it!&lt;/strong&gt; You now have a production-ready backend with everything you need:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ &lt;strong&gt;REST API endpoints&lt;/strong&gt; with automatic validation and error handling&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Visual debugger&lt;/strong&gt; with real-time flow inspection and tracing&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Built-in observability&lt;/strong&gt; - logs, traces, and state visualization&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Hot-reload&lt;/strong&gt; for instant feedback during development&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Event-driven architecture&lt;/strong&gt; ready for complex workflows&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Multi-language support&lt;/strong&gt; - add Python, Javascript, or other languages anytime&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Zero configuration&lt;/strong&gt; - no infrastructure setup required&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 &lt;strong&gt;Want a more detailed walkthrough?&lt;/strong&gt;&lt;br /&gt; Check out the &lt;a href="https://www.motia.dev/docs/getting-started/quick-start"&gt;Quick Start guide in our docs&lt;/a&gt; for step-by-step instructions and more examples.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;🧱 The Step Philosophy&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Everything is a Step&lt;/strong&gt; – similar to how React made everything a component, Motia makes every backend pattern a Step:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🎯 Steps Represent Distinct Entry Points&lt;/strong&gt;: APIs, background jobs, scheduled tasks, and AI agents – all unified under a single primitive&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌍 Any Language, One Workflow&lt;/strong&gt;: Write &lt;strong&gt;JavaScript, TypeScript, Python, and more&lt;/strong&gt; in the same project. Use Python for AI agents, TypeScript for APIs, JavaScript for workflows – all sharing state effortlessly&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ Enterprise-Grade, Out of the Box&lt;/strong&gt;: Get &lt;strong&gt;event-driven architecture, fault tolerance, observability, and real-time streaming&lt;/strong&gt; without complex infrastructure setup&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;👁️ Automatic Observability&lt;/strong&gt;: Complete end-to-end tracing, structured logging, and state visualization. &lt;strong&gt;No setup required&lt;/strong&gt; – works in both local development and production&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌊 Composable Workflows&lt;/strong&gt;: Connect Steps by emitting and subscribing to events. Build complex, multi-stage processes with simple, declarative code&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🏪 Unified State Management&lt;/strong&gt;: All Steps share a traced key-value store. Every &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt; is automatically tracked across your entire workflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔄 Built-in Fault Tolerance&lt;/strong&gt;: Retry mechanisms, error handling, and queue infrastructure abstracted away – focus on business logic, not infrastructure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚧 The Fragmentation Problem&lt;/h2&gt; 
&lt;p&gt;Today, backend engineers face several recurring challenges:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🧩 Fragmented Systems&lt;/strong&gt;: APIs in Express, background jobs in Celery/BullMQ, AI agents in LangChain – each with different deployment, debugging, and scaling patterns&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌐 Multi-Language Barriers&lt;/strong&gt;: AI tools in Python, business logic in TypeScript – forcing teams to choose between cutting-edge tech and their existing skillset&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔍 Observability Gaps&lt;/strong&gt;: Tracing requests across multiple frameworks and runtimes is complex and often incomplete&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚖️ Scalability vs. Velocity&lt;/strong&gt;: Choose between fast development (monolith) or proper scaling (microservices complexity)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🚀 Deployment Complexity&lt;/strong&gt;: Multiple runtimes mean multiple deploy targets, configs, and failure points&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;The rapid advancement of AI has made this worse&lt;/strong&gt; – many cutting-edge AI tools are only available in specific languages, forcing companies to abandon their existing tech stack or miss out on breakthrough technologies.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;✅ The Motia Solution&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Motia removes this limitation&lt;/strong&gt; by unifying your entire backend into a single runtime where everything is a &lt;strong&gt;Step&lt;/strong&gt;:&lt;/p&gt; 
&lt;h3&gt;🎯 &lt;strong&gt;Unified vs. Fragmented&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Before&lt;/strong&gt;: APIs in Express, jobs in BullMQ, AI agents in LangChain&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;After&lt;/strong&gt;: All backend patterns as composable Steps with shared state and observability&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🌐 &lt;strong&gt;True Multi-Language Support&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Before&lt;/strong&gt;: Choose between Python AI tools OR your existing TypeScript stack&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;After&lt;/strong&gt;: Each Step can be written in any language while sharing common state – use Python for AI, TypeScript for APIs, JavaScript for workflows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔍 &lt;strong&gt;Built-in Observability&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Before&lt;/strong&gt;: Complex tracing setups across multiple frameworks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;After&lt;/strong&gt;: Complete observability toolkit available in both cloud and local environments out of the box&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;⚖️ &lt;strong&gt;Scalability Without Complexity&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Before&lt;/strong&gt;: Choose between monolith simplicity or microservice complexity&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;After&lt;/strong&gt;: Each Step scales independently, avoiding bottlenecks while maintaining development velocity&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🚀 &lt;strong&gt;One-Click Everything&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Before&lt;/strong&gt;: Multiple deployment pipelines, configs, and failure points&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;After&lt;/strong&gt;: Single deployable with atomic blue/green deployments and instant rollbacks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Traditional Stack&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Motia&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multiple deployment targets&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Single unified deployment&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Fragmented observability&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;End-to-end tracing&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Language silos&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;JavaScript, TypeScript, Python, etc&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Context-switching overhead&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Single intuitive model&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Manual error handling&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Automatic retries &amp;amp; fault tolerance&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Complex infrastructure&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Zero-config queue &amp;amp; streaming&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🔧 Supported Step Types&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Trigger&lt;/th&gt; 
   &lt;th&gt;Use Case&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;api&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;HTTP Request&lt;/td&gt; 
   &lt;td&gt;Expose REST endpoints&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;event&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Emitted Topics&lt;/td&gt; 
   &lt;td&gt;React to internal or external events&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;cron&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Scheduled Time (cron)&lt;/td&gt; 
   &lt;td&gt;Automate recurring jobs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;noop&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Placeholder for manual/external tasks&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h3&gt;🤔 How it Works&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;One framework. All backend patterns.&lt;/strong&gt; Motia replaces your entire backend stack with a single, event-driven system:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🚀 Replace Multiple Frameworks:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Instead of&lt;/strong&gt;: Express/Nest.js + BullMQ + Temporal + LangChain + custom observability&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Use&lt;/strong&gt;: Motia Steps with automatic observability, queuing, and multi-language support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;⚡ Simple but Powerful:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Need a REST API?&lt;/strong&gt; Create an &lt;code&gt;api&lt;/code&gt; step → instant HTTP endpoint with validation, tracing, and error handling&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Need background processing?&lt;/strong&gt; Emit an event → &lt;code&gt;event&lt;/code&gt; steps pick it up asynchronously with built-in retries and fault tolerance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Need scheduled jobs?&lt;/strong&gt; Use a &lt;code&gt;cron&lt;/code&gt; step → automatic scheduling with full observability&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Need AI agents?&lt;/strong&gt; Write Python steps with access to the entire ecosystem (PyTorch, transformers, etc.) while sharing state with TypeScript APIs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;🔄 Event-Driven by Design:&lt;/strong&gt; Each Step can emit events that trigger other Steps, creating powerful workflows that automatically handle:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Parallel processing&lt;/strong&gt; across multiple languages&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fault tolerance&lt;/strong&gt; with automatic retries&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real-time updates&lt;/strong&gt; streamed to clients&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Complete traceability&lt;/strong&gt; of every operation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;The result?&lt;/strong&gt; What used to require 5+ frameworks, complex deployment pipelines, and weeks of infrastructure setup now works out of the box with Motia.&lt;/p&gt; 
&lt;h2&gt;⚡ Core Concepts&lt;/h2&gt; 
&lt;p&gt;The &lt;strong&gt;Step&lt;/strong&gt; is Motia's core primitive. The following concepts are deeply integrated with Steps to help you build powerful, complex, and scalable backends:&lt;/p&gt; 
&lt;h3&gt;🔑 Steps &amp;amp; Step Types&lt;/h3&gt; 
&lt;p&gt;Understand the three ways Steps are triggered:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP (&lt;code&gt;api&lt;/code&gt;)&lt;/strong&gt; – Build REST/GraphQL endpoints with zero boilerplate.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Events (&lt;code&gt;event&lt;/code&gt;)&lt;/strong&gt; – React to internal or external events emitted by other steps.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cron (&lt;code&gt;cron&lt;/code&gt;)&lt;/strong&gt; – Schedule recurring jobs with a familiar cron syntax.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📣 Emit &amp;amp; Subscribe (Event-Driven Workflows)&lt;/h3&gt; 
&lt;p&gt;Steps talk to each other by &lt;strong&gt;emitting&lt;/strong&gt; and &lt;strong&gt;subscribing&lt;/strong&gt; to topics. This decouples producers from consumers and lets you compose complex workflows with simple, declarative code.&lt;/p&gt; 
&lt;h3&gt;🏪 State Management&lt;/h3&gt; 
&lt;p&gt;All steps share a unified key-value state store. Every &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt; is automatically traced so you always know when and where your data changed.&lt;/p&gt; 
&lt;h3&gt;📊 Structured Logging&lt;/h3&gt; 
&lt;p&gt;Motia provides structured, JSON logs correlated with trace IDs and step names. Search and filter your logs without regex hassle.&lt;/p&gt; 
&lt;h3&gt;📡 Streams: Real-time Messaging&lt;/h3&gt; 
&lt;p&gt;Push live updates from long-running or asynchronous workflows to clients without polling. Perfect for dashboards, progress indicators, and interactive AI agents.&lt;/p&gt; 
&lt;h3&gt;👁️ End-to-End Observability with Traces&lt;/h3&gt; 
&lt;p&gt;Every execution generates a full trace, capturing step timelines, state operations, emits, stream calls, and logs. Visualise everything in the Workbench's Traces UI and debug faster.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🗂 Production-Ready Examples&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;⭐ Explore 20+ sophisticated examples&lt;/strong&gt; demonstrating real-world use cases from AI agents to enterprise workflows: &lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples"&gt;View All Examples →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;🤖 &lt;strong&gt;AI Agents &amp;amp; Workflows&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;AI Deep Research Agent&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Finance Analysis Agent&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;PDF RAG System&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Comprehensive web research with iterative analysis and synthesis&lt;/td&gt; 
   &lt;td&gt;Real-time financial data + AI insights for investment analysis&lt;/td&gt; 
   &lt;td&gt;Document processing with Docling, Weaviate, and OpenAI RAG&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/ai-deep-research-agent"&gt;View Example →&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/finance-agent"&gt;View Example →&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/rag-docling-weaviate"&gt;View Example →&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;GitHub PR Manager&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Gmail Intelligence&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Vision Analysis&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;AI-powered PR classification, labeling, and reviewer assignment&lt;/td&gt; 
   &lt;td&gt;Smart email analysis, auto-responses, and Discord summaries&lt;/td&gt; 
   &lt;td&gt;Multi-modal conversation analysis with visual understanding&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/github-integration-workflow"&gt;View Example →&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/gmail-workflow"&gt;View Example →&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/conversation-analyzer-vision"&gt;View Example →&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;🌊 &lt;strong&gt;Real-Time Streaming &amp;amp; Chat&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Streaming AI Chatbot&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Real-Time Chat App&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Live Health Monitor&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Token-by-token AI responses with WebSocket streaming&lt;/td&gt; 
   &lt;td&gt;Multi-user chat with real-time message processing and moderation&lt;/td&gt; 
   &lt;td&gt;Production uptime monitoring with intelligent Discord alerts&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/streaming-ai-chatbot"&gt;View Example →&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/realtime-chat-application"&gt;View Example →&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/realtime-uptime-monitor"&gt;View Example →&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;⚡ &lt;strong&gt;Parallel Processing &amp;amp; Workflows&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Parallel Execution Demo&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Content Automation&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Task Management&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Concurrent task processing with workload distribution&lt;/td&gt; 
   &lt;td&gt;Blog-to-Tweet automation with AI content optimization&lt;/td&gt; 
   &lt;td&gt;Trello workflow automation with AI task validation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/motia-parallel-execution"&gt;View Example →&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/blog-to-tweet-automation"&gt;View Example →&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/trello-flow"&gt;View Example →&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;🎯 &lt;strong&gt;Key Features Demonstrated:&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Multi-Language Workflows&lt;/strong&gt; - JavaScript, TypeScript, Python working together&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Real-Time Streaming&lt;/strong&gt; - WebSocket integration with live updates&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;AI Integration&lt;/strong&gt; - OpenAI, Claude, vision models, and custom AI workflows&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Event-Driven Architecture&lt;/strong&gt; - Complex workflows with automatic retry and fault tolerance&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Production Monitoring&lt;/strong&gt; - Health checks, uptime monitoring, and intelligent alerting&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Parallel Processing&lt;/strong&gt; - Concurrent execution and workload distribution&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Enterprise Integration&lt;/strong&gt; - GitHub, Gmail, Trello, Discord, and social media APIs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;🚀 Each example includes:&lt;/strong&gt; Complete source code • Step-by-step tutorials • Production deployment guides • Docker configurations&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🌐 Language Support&lt;/h2&gt; 
&lt;p&gt;Write steps in your preferred language:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Stable&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;handler.step.js&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Stable&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;handler.step.ts&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Stable&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;handler.step.py&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🚧 Beta&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;handler.step.rb&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Go&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🔄 Coming Soon&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;handler.step.go&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🔄 Coming Soon&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;handler.step.rs&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h3&gt;💬 &lt;strong&gt;Get Help&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;📋 Questions&lt;/strong&gt;: Use our &lt;a href="https://discord.gg/motia"&gt;Discord community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🐛 Bug Reports&lt;/strong&gt;: &lt;a href="https://github.com/MotiaDev/motia/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📖 Documentation&lt;/strong&gt;: &lt;a href="https://motia.dev/docs"&gt;Official Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📰 Blog&lt;/strong&gt;: &lt;a href="https://blog.motia.dev"&gt;Motia Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎥 Youtube&lt;/strong&gt;: &lt;a href="https://www.youtube.com/@motiadev"&gt;Motia Youtube&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🤝 &lt;strong&gt;Contributing&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;We welcome contributions! Whether it's:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 Bug fixes and improvements&lt;/li&gt; 
 &lt;li&gt;✨ New features and step types&lt;/li&gt; 
 &lt;li&gt;📚 Documentation and examples&lt;/li&gt; 
 &lt;li&gt;🌍 Language support additions&lt;/li&gt; 
 &lt;li&gt;🎨 Workbench UI enhancements&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out our &lt;a href="https://github.com/MotiaDev/motia/raw/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;strong&gt;🌟 Ready to unify your backend?&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://motia.dev"&gt;🚀 &lt;strong&gt;Get Started Now&lt;/strong&gt;&lt;/a&gt; • &lt;a href="https://motia.dev/docs"&gt;📖 &lt;strong&gt;Read the Docs&lt;/strong&gt;&lt;/a&gt; • &lt;a href="https://discord.com/invite/nJFfsH5d6v"&gt;💬 &lt;strong&gt;Join Discord&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://www.star-history.com/#motiadev/motia&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=motiadev/motia&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;sub&gt;Built with ❤️ by the Motia team • &lt;strong&gt;Star us if you find &lt;a href="https://github.com/orgs/MotiaDev/motia"&gt;Motia&lt;/a&gt; useful!&lt;/strong&gt; ⭐&lt;/sub&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;🚧 Roadmap&lt;/h3&gt; 
&lt;p&gt;We have a public roadmap for Motia, you can view it &lt;a href="https://github.com/orgs/MotiaDev/projects/2/views/4"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Feel free to add comments to the issues, or create a new issue if you have a feature request.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Link&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Python Types&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/485"&gt;#485&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Python types&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Streams: RBAC&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/495"&gt;#495&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for RBAC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Streams: Workbench UI&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/497"&gt;#497&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Workbench UI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Queue Strategies&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/476"&gt;#476&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Queue Strategies&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Reactive Steps&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/477"&gt;#477&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Reactive Steps&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Allow cloud configuration&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/478"&gt;#478&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for cloud configuration&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BYOC: Bring your own Cloud: AWS&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/479"&gt;#479&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for AWS&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Point in time triggers&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/480"&gt;#480&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Point in time triggers&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Workbench plugins&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/481"&gt;#481&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Workbench plugins&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rewrite our Core in either Go or Rust&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/482"&gt;#482&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Rewrite our Core in either Go or Rust&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Decrease deployment time&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/483"&gt;#483&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Decrease deployment time&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Built-in database support&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/484"&gt;#484&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for built-in database&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BYOC: Google Cloud Platform&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/486"&gt;#486&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Google Cloud Platform&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BYOC: Microsoft Azure&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/487"&gt;#487&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Microsoft Azure&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BYOC: Vercel&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/488"&gt;#488&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Vercel&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BYOC: Cloudflare&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/489"&gt;#489&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Cloudflare&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;New languages: Go&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/490"&gt;#490&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Go&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;New languages: Rust&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/491"&gt;#491&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Rust&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;New languages: Java&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/492"&gt;#492&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Java&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;New languages: Ruby&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/493"&gt;#493&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Ruby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;New languages: C#&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/494"&gt;#494&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for C#&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BYOC: Kubernetes&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/496"&gt;#496&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Kubernetes&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>ZuodaoTech/everyone-can-use-english</title>
      <link>https://github.com/ZuodaoTech/everyone-can-use-english</link>
      <description>&lt;p&gt;人人都能用英语&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/assets/icon.png" alt="Clash" width="128" /&gt; 
&lt;/div&gt; 
&lt;h3 align="center"&gt; AI 是当今世界上最好的外语老师，Enjoy 做 AI 最好的助教。 &lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml/badge.svg?sanitize=true" alt="Deploy 1000h website" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml/badge.svg?sanitize=true" alt="Test Enjoy App" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml/badge.svg?sanitize=true" alt="Release Enjoy App" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fconfig%2Fapp_version&amp;amp;query=%24.version&amp;amp;label=Latest&amp;amp;link=https%3A%2F%2F1000h.org%2Fenjoy-app%2Finstall.html" alt="Latest Version" /&gt; &lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fbadges%2Frecordings" alt="Recording Duration" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;网页版&lt;/h2&gt; 
&lt;p&gt;Enjoy 网页版已经上线，可访问 &lt;a href="https://enjoy.bot"&gt;https://enjoy.bot&lt;/a&gt; 直接使用。&lt;/p&gt; 
&lt;div align="center" style="display:flex;overflow:auto;gap:10px;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audios.jpg" alt="Audios" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-add-audio.jpg" alt="Add Audio" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audio-shadow.jpg" alt="Shadow" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audio-assessment.jpg" alt="Assessment" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-new-chat.jpg" alt="New Chat" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-chat.jpg" alt="Chat" width="300" /&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;桌面版安装及使用&lt;/h2&gt; 
&lt;p&gt;下载及使用相关说明，请参阅 &lt;a href="https://1000h.org/enjoy-app/"&gt;文档&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;预览&lt;/h2&gt; 
&lt;div align="center" style="display:flex;overflow:auto;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/home.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/shadow.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/assessment.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/document.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/chat.png" alt="Home" width="800" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;桌面版开发&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn install
yarn enjoy:start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;相关阅读&lt;/h2&gt; 
&lt;h3&gt;一千小时（2024）&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/intro.html"&gt;简要说明&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/training-tasks/kick-off.html"&gt;训练任务&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/sounds-of-american-english/0-intro.html"&gt;语音塑造&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/in-the-brain/01-inifinite.html"&gt;大脑内部&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/self-training/00-intro.html"&gt;自我训练&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;人人都能用英语（2010）&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/README.md"&gt;简介&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter1.md"&gt;第一章：起点&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter2.md"&gt;第二章：口语&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter3.md"&gt;第三章：语音&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter4.md"&gt;第四章：朗读&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter5.md"&gt;第五章：词典&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter6.md"&gt;第六章：语法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter7.md"&gt;第七章：精读&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter8.md"&gt;第八章：叮嘱&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/end.md"&gt;后记&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;常见问题&lt;/h2&gt; 
&lt;p&gt;请查询 &lt;a href="https://1000h.org/enjoy-app/faq.html"&gt;文档 FAQ&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bytedance/UI-TARS-desktop</title>
      <link>https://github.com/bytedance/UI-TARS-desktop</link>
      <description>&lt;p&gt;The Open-sourced Multimodal AI Agent Stack connecting Cutting-edge AI Models and Agent Infra.&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;img alt="Agent TARS Banner" src="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/images/tars.png" /&gt; 
&lt;/picture&gt; 
&lt;br /&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/README.zh-CN.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://trendshift.io/repositories/13584"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13584" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;TARS&lt;sup&gt;*&lt;/sup&gt;&lt;/b&gt; is a Multimodal AI Agent stack, currently shipping two projects: &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#agent-tars"&gt;Agent TARS&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#ui-tars-desktop"&gt;UI-TARS-desktop&lt;/a&gt;:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th width="50%" align="center"&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#agent-tars"&gt;Agent TARS&lt;/a&gt;&lt;/th&gt; 
   &lt;th width="50%" align="center"&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#ui-tars-desktop"&gt;UI-TARS-desktop&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/c9489936-afdc-4d12-adda-d4b90d2a869d" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/e0914ce9-ad33-494b-bdec-0c25c1b01a27" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt; &lt;b&gt;Agent TARS&lt;/b&gt; is a general multimodal AI Agent stack, it brings the power of GUI Agent and Vision into your terminal, computer, browser and product. &lt;br /&gt; &lt;br /&gt; It primarily ships with a &lt;a href="https://agent-tars.com/guide/basic/cli.html" target="_blank"&gt;CLI&lt;/a&gt; and &lt;a href="https://agent-tars.com/guide/basic/web-ui.html" target="_blank"&gt;Web UI&lt;/a&gt; for usage. It aims to provide a workflow that is closer to human-like task completion through cutting-edge multimodal LLMs and seamless integration with various real-world &lt;a href="https://agent-tars.com/guide/basic/mcp.html" target="_blank"&gt;MCP&lt;/a&gt; tools. &lt;/td&gt; 
   &lt;td align="left"&gt; &lt;b&gt;UI-TARS Desktop&lt;/b&gt; is a desktop application that provides a native GUI Agent based on the &lt;a href="https://github.com/bytedance/UI-TARS" target="_blank"&gt;UI-TARS&lt;/a&gt; model. &lt;br /&gt; &lt;br /&gt; It primarily ships a &lt;a href="https://github.com/bytedance/UI-TARS-desktop/raw/main/docs/quick-start.md#get-model-and-run-local-operator" target="_blank"&gt;local&lt;/a&gt; and &lt;a href="https://github.com/bytedance/UI-TARS-desktop/raw/main/docs/quick-start.md#run-remote-operator" target="_blank"&gt;remote&lt;/a&gt; computer as well as browser operators. &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#news"&gt;News&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#agent-tars"&gt;Agent TARS&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#showcase"&gt;Showcase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#core-features"&gt;Core Features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#ui-tars-desktop"&gt;UI-TARS Desktop&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#showcase-1"&gt;Showcase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#quick-start-1"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#citation"&gt;Citation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;News&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-06-25]&lt;/strong&gt; We released a Agent TARS Beta and Agent TARS CLI - &lt;a href="https://agent-tars.com/blog/2025-06-25-introducing-agent-tars-beta.html"&gt;Introducing Agent TARS Beta&lt;/a&gt;, a multimodal AI agent that aims to explore a work form that is closer to human-like task completion through rich multimodal capabilities (such as GUI Agent, Vision) and seamless integration with various real-world tools.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-06-12]&lt;/strong&gt; - 🎁 We are thrilled to announce the release of UI-TARS Desktop v0.2.0! This update introduces two powerful new features: &lt;strong&gt;Remote Computer Operator&lt;/strong&gt; and &lt;strong&gt;Remote Browser Operator&lt;/strong&gt;—both completely free. No configuration required: simply click to remotely control any computer or browser, and experience a new level of convenience and intelligence.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-04-17]&lt;/strong&gt; - 🎉 We're thrilled to announce the release of new UI-TARS Desktop application v0.1.0, featuring a redesigned Agent UI. The application enhances the computer using experience, introduces new browser operation features, and supports &lt;a href="https://seed-tars.com/1.5"&gt;the advanced UI-TARS-1.5 model&lt;/a&gt; for improved performance and precise control.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-02-20]&lt;/strong&gt; - 📦 Introduced &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/sdk.md"&gt;UI TARS SDK&lt;/a&gt;, is a powerful cross-platform toolkit for building GUI automation agents.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-01-23]&lt;/strong&gt; - 🚀 We updated the &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/deployment.md#cloud-deployment"&gt;Cloud Deployment&lt;/a&gt;&lt;/strong&gt; section in the 中文版: &lt;a href="https://bytedance.sg.larkoffice.com/docx/TCcudYwyIox5vyxiSDLlgIsTgWf#U94rdCxzBoJMLex38NPlHL21gNb"&gt;GUI模型部署教程&lt;/a&gt; with new information related to the ModelScope platform. You can now use the ModelScope platform for deployment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;Agent TARS&lt;/h2&gt; 
&lt;p&gt; &lt;a href="https://npmjs.com/package/@agent-tars/cli?activeTab=readme"&gt;&lt;img src="https://img.shields.io/npm/v/@agent-tars/cli?style=for-the-badge&amp;amp;colorA=1a1a2e&amp;amp;colorB=3B82F6&amp;amp;logo=npm&amp;amp;logoColor=white" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://npmcharts.com/compare/@agent-tars/cli?minimal=true"&gt;&lt;img src="https://img.shields.io/npm/dm/@agent-tars/cli.svg?style=for-the-badge&amp;amp;colorA=1a1a2e&amp;amp;colorB=0EA5E9&amp;amp;logo=npm&amp;amp;logoColor=white" alt="downloads" /&gt;&lt;/a&gt; &lt;a href="https://nodejs.org/en/about/previous-releases"&gt;&lt;img src="https://img.shields.io/node/v/@agent-tars/cli.svg?style=for-the-badge&amp;amp;colorA=1a1a2e&amp;amp;colorB=06B6D4&amp;amp;logo=node.js&amp;amp;logoColor=white" alt="node version" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/HnKcSBgTVx"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join%20Community-5865F2?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord Community" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/agent_tars"&gt;&lt;img src="https://img.shields.io/badge/Twitter-Follow%20%40agent__tars-1DA1F2?style=for-the-badge&amp;amp;logo=twitter&amp;amp;logoColor=white" alt="Official Twitter" /&gt;&lt;/a&gt; &lt;a href="https://applink.larkoffice.com/client/chat/chatter/add_by_link?link_token=279h3365-b0fa-407f-89f3-0f96f36cd4d8"&gt;&lt;img src="https://img.shields.io/badge/飞书群-加入交流群-00D4AA?style=for-the-badge&amp;amp;logo=lark&amp;amp;logoColor=white" alt="飞书交流群" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/bytedance/UI-TARS-desktop"&gt;&lt;img src="https://img.shields.io/badge/DeepWiki-Ask%20AI-8B5CF6?style=for-the-badge&amp;amp;logo=gitbook&amp;amp;logoColor=white" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;b&gt;Agent TARS&lt;/b&gt; is a general multimodal AI Agent stack, it brings the power of GUI Agent and Vision into your terminal, computer, browser and product. &lt;br /&gt; &lt;br /&gt; It primarily ships with a &lt;a href="https://agent-tars.com/guide/basic/cli.html" target="_blank"&gt;CLI&lt;/a&gt; and &lt;a href="https://agent-tars.com/guide/basic/web-ui.html" target="_blank"&gt;Web UI&lt;/a&gt; for usage. It aims to provide a workflow that is closer to human-like task completion through cutting-edge multimodal LLMs and seamless integration with various real-world &lt;a href="https://agent-tars.com/guide/basic/mcp.html" target="_blank"&gt;MCP&lt;/a&gt; tools.&lt;/p&gt; 
&lt;h3&gt;Showcase&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;Please help me book the earliest flight from San Jose to New York on September 1st and the last return flight on September 6th on Priceline
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/772b0eef-aef7-4ab9-8cb0-9611820539d8"&gt;https://github.com/user-attachments/assets/772b0eef-aef7-4ab9-8cb0-9611820539d8&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th width="50%" align="center"&gt;Booking Hotel&lt;/th&gt; 
   &lt;th width="50%" align="center"&gt;Generate Chart with extra MCP Servers&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/c9489936-afdc-4d12-adda-d4b90d2a869d" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/a9fd72d0-01bb-4233-aa27-ca95194bbce9" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt; &lt;b&gt;Instruction:&lt;/b&gt; &lt;i&gt;I am in Los Angeles from September 1st to September 6th, with a budget of $5,000. Please help me book a Ritz-Carlton hotel closest to the airport on booking.com and compile a transportation guide for me&lt;/i&gt; &lt;/td&gt; 
   &lt;td align="left"&gt; &lt;b&gt;Instruction:&lt;/b&gt; &lt;i&gt;Draw me a chart of Hangzhou's weather for one month&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;For more use cases, please check out &lt;a href="https://github.com/bytedance/UI-TARS-desktop/issues/842"&gt;#842&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Core Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🖱️ &lt;strong&gt;One-Click Out-of-the-box CLI&lt;/strong&gt; - Supports both &lt;strong&gt;headful&lt;/strong&gt; &lt;a href="https://agent-tars.com/guide/basic/web-ui.html"&gt;Web UI&lt;/a&gt; and &lt;strong&gt;headless&lt;/strong&gt; &lt;a href="https://agent-tars.com/guide/advanced/server.html"&gt;server&lt;/a&gt;) &lt;a href="https://agent-tars.com/guide/basic/cli.html"&gt;execution&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;🌐 &lt;strong&gt;Hybrid Browser Agent&lt;/strong&gt; - Control browsers using &lt;a href="https://agent-tars.com/guide/basic/browser.html#visual-grounding"&gt;GUI Agent&lt;/a&gt;, &lt;a href="https://agent-tars.com/guide/basic/browser.html#dom"&gt;DOM&lt;/a&gt;, or a hybrid strategy.&lt;/li&gt; 
 &lt;li&gt;🔄 &lt;strong&gt;Event Stream&lt;/strong&gt; - Protocol-driven Event Stream drives &lt;a href="https://agent-tars.com/beta#context-engineering"&gt;Context Engineering&lt;/a&gt; and &lt;a href="https://agent-tars.com/blog/2025-06-25-introducing-agent-tars-beta.html#easy-to-build-applications"&gt;Agent UI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;🧰 &lt;strong&gt;MCP Integration&lt;/strong&gt; - The kernel is built on MCP and also supports mounting &lt;a href="https://agent-tars.com/guide/basic/mcp.html"&gt;MCP Servers&lt;/a&gt; to connect to real-world tools.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;img alt="Agent TARS CLI" src="https://agent-tars.com/agent-tars-cli.png" /&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Luanch with `npx`.
npx @agent-tars/cli@latest

# Install globally, required Node.js &amp;gt;= 22
npm install @agent-tars/cli@latest -g

# Run with your preferred model provider
agent-tars --provider volcengine --model doubao-1-5-thinking-vision-pro-250428 --apiKey your-api-key
agent-tars --provider anthropic --model claude-3-7-sonnet-latest --apiKey your-api-key
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Visit the comprehensive &lt;a href="https://agent-tars.com/guide/get-started/quick-start.html"&gt;Quick Start&lt;/a&gt; guide for detailed setup instructions.&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🌟 &lt;strong&gt;Explore Agent TARS Universe&lt;/strong&gt; 🌟&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th width="20%" align="center"&gt;Category&lt;/th&gt; 
   &lt;th width="30%" align="center"&gt;Resource Link&lt;/th&gt; 
   &lt;th width="50%" align="left"&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🏠 &lt;strong&gt;Central Hub&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com"&gt; &lt;img src="https://img.shields.io/badge/Visit-Website-4F46E5?style=for-the-badge&amp;amp;logo=globe&amp;amp;logoColor=white" alt="Website" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Your gateway to Agent TARS ecosystem&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;📚 &lt;strong&gt;Quick Start&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/guide/get-started/quick-start.html"&gt; &lt;img src="https://img.shields.io/badge/Get-Started-06B6D4?style=for-the-badge&amp;amp;logo=rocket&amp;amp;logoColor=white" alt="Quick Start" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Zero to hero in 5 minutes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🚀 &lt;strong&gt;What's New&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/beta"&gt; &lt;img src="https://img.shields.io/badge/Read-Blog-F59E0B?style=for-the-badge&amp;amp;logo=rss&amp;amp;logoColor=white" alt="Blog" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Discover cutting-edge features &amp;amp; vision&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🛠️ &lt;strong&gt;Developer Zone&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/guide/get-started/introduction.html"&gt; &lt;img src="https://img.shields.io/badge/View-Docs-10B981?style=for-the-badge&amp;amp;logo=gitbook&amp;amp;logoColor=white" alt="Docs" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Master every command &amp;amp; features&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🎯 &lt;strong&gt;Showcase&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/bytedance/UI-TARS-desktop/issues/842"&gt; &lt;img src="https://img.shields.io/badge/View-Examples-8B5CF6?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="Examples" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;View use cases built by the official and community&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🔧 &lt;strong&gt;Reference&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/api/"&gt; &lt;img src="https://img.shields.io/badge/API-Reference-EF4444?style=for-the-badge&amp;amp;logo=book&amp;amp;logoColor=white" alt="API" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Complete technical reference&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;UI-TARS Desktop&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img alt="UI-TARS" width="260" src="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/apps/ui-tars/resources/icon.png" /&gt; &lt;/p&gt; 
&lt;p&gt;UI-TARS Desktop is a native GUI agent driven by &lt;a href="https://github.com/bytedance/UI-TARS"&gt;UI-TARS&lt;/a&gt; and Seed-1.5-VL/1.6 series models, available on your local computer and remote VM sandbox on cloud.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt; &amp;nbsp;&amp;nbsp; 📑 &lt;a href="https://arxiv.org/abs/2501.12326"&gt;Paper&lt;/a&gt; &amp;nbsp;&amp;nbsp; | 🤗 &lt;a href="https://huggingface.co/ByteDance-Seed/UI-TARS-1.5-7B"&gt;Hugging Face Models&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;🫨 &lt;a href="https://discord.gg/pTXwYVjfcs"&gt;Discord&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;🤖 &lt;a href="https://www.modelscope.cn/collections/UI-TARS-bccb56fa1ef640"&gt;ModelScope&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;br /&gt; 🖥️ Desktop Application &amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp; 👓 &lt;a href="https://github.com/web-infra-dev/midscene"&gt;Midscene (use in browser)&lt;/a&gt; &amp;nbsp;&amp;nbsp; &lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;Showcase&lt;/h3&gt; 
&lt;!-- // FIXME: Choose only two demo, one local computer and one remote computer showcase. --&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Instruction&lt;/th&gt; 
   &lt;th align="center"&gt;Local Operator&lt;/th&gt; 
   &lt;th align="center"&gt;Remote Operator&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Please help me open the autosave feature of VS Code and delay AutoSave operations for 500 milliseconds in the VS Code setting.&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/e0914ce9-ad33-494b-bdec-0c25c1b01a27" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/01e49b69-7070-46c8-b3e3-2aaaaec71800" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Could you help me check the latest open issue of the UI-TARS-Desktop project on GitHub?&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/3d159f54-d24a-4268-96c0-e149607e9199" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/072fb72d-7394-4bfa-95f5-4736e29f7e58" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🤖 Natural language control powered by Vision-Language Model&lt;/li&gt; 
 &lt;li&gt;🖥️ Screenshot and visual recognition support&lt;/li&gt; 
 &lt;li&gt;🎯 Precise mouse and keyboard control&lt;/li&gt; 
 &lt;li&gt;💻 Cross-platform support (Windows/MacOS/Browser)&lt;/li&gt; 
 &lt;li&gt;🔄 Real-time feedback and status display&lt;/li&gt; 
 &lt;li&gt;🔐 Private and secure - fully local processing&lt;/li&gt; 
 &lt;li&gt;🛠️ Effortless setup and intuitive remote operators&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/quick-start.md"&gt;Quick Start&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the Apache License 2.0.&lt;/p&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;If you find our paper and code useful in your research, please consider giving a star &lt;span&gt;⭐&lt;/span&gt; and citation &lt;span&gt;📝&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-BibTeX"&gt;@article{qin2025ui,
  title={UI-TARS: Pioneering Automated GUI Interaction with Native Agents},
  author={Qin, Yujia and Ye, Yining and Fang, Junjie and Wang, Haoming and Liang, Shihao and Tian, Shizuo and Zhang, Junda and Li, Jiahao and Li, Yunxin and Huang, Shijue and others},
  journal={arXiv preprint arXiv:2501.12326},
  year={2025}
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>mfts/papermark</title>
      <link>https://github.com/mfts/papermark</link>
      <description>&lt;p&gt;Papermark is the open-source DocSend alternative with built-in analytics and custom domains.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1 align="center"&gt;Papermark&lt;/h1&gt; 
 &lt;h3&gt;The open-source DocSend alternative.&lt;/h3&gt; 
 &lt;p&gt;&lt;a target="_blank" href="https://www.producthunt.com/posts/papermark-3?utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-papermark"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=411605&amp;amp;theme=light&amp;amp;period=daily" alt="Papermark - The open-source DocSend alternative | Product Hunt" style="width:250px;height:40px" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.papermark.com"&gt;papermark.com&lt;/a&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/mfts/papermark/stargazers"&gt;&lt;img alt="GitHub Repo stars" src="https://img.shields.io/github/stars/mfts/papermark" /&gt;&lt;/a&gt; 
 &lt;a href="https://twitter.com/papermarkio"&gt;&lt;img alt="Twitter Follow" src="https://img.shields.io/twitter/follow/papermarkio" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/mfts/papermark/raw/main/LICENSE"&gt;&lt;img alt="License" src="https://img.shields.io/badge/license-AGPLv3-purple" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;Papermark is the open-source document-sharing alternative to DocSend, featuring built-in analytics and custom domains.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Shareable Links:&lt;/strong&gt; Share your documents securely by sending a custom link.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Branding:&lt;/strong&gt; Add a custom domain and your own branding.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Analytics:&lt;/strong&gt; Gain insights through document tracking and soon page-by-page analytics.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Self-hosted, Open-source:&lt;/strong&gt; Host it yourself and customize it as needed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/mfts/papermark/main/.github/images/papermark-welcome.gif" alt="Papermark Welcome GIF" /&gt;&lt;/p&gt; 
&lt;h2&gt;Tech Stack&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; – Framework&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt; – Language&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tailwindcss.com/"&gt;Tailwind&lt;/a&gt; – CSS&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ui.shadcn.com"&gt;shadcn/ui&lt;/a&gt; - UI Components&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://prisma.io"&gt;Prisma&lt;/a&gt; - ORM &lt;a href="https://prisma.io"&gt;&lt;img src="https://made-with.prisma.io/dark.svg?sanitize=true" alt="Made with Prisma" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt; - Database&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://next-auth.js.org/"&gt;NextAuth.js&lt;/a&gt; – Authentication&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tinybird.co"&gt;Tinybird&lt;/a&gt; – Analytics&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://resend.com"&gt;Resend&lt;/a&gt; – Email&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stripe.com"&gt;Stripe&lt;/a&gt; – Payments&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt; – Hosting&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;Here's what you need to run Papermark:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js (version &amp;gt;= 18.17.0)&lt;/li&gt; 
 &lt;li&gt;PostgreSQL Database&lt;/li&gt; 
 &lt;li&gt;Blob storage (currently &lt;a href="https://aws.amazon.com/s3/"&gt;AWS S3&lt;/a&gt; or &lt;a href="https://vercel.com/storage/blob"&gt;Vercel Blob&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://resend.com"&gt;Resend&lt;/a&gt; (for sending emails)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;1. Clone the repository&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/mfts/papermark.git
cd papermark
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. Install npm dependencies&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3. Copy the environment variables to &lt;code&gt;.env&lt;/code&gt; and change the values&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cp .env.example .env
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;4. Initialize the database&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm run dev:prisma
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;5. Run the dev server&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;6. Open the app in your browser&lt;/h3&gt; 
&lt;p&gt;Visit &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; in your browser.&lt;/p&gt; 
&lt;h2&gt;Tinybird Instructions&lt;/h2&gt; 
&lt;p&gt;To prepare the Tinybird database, follow these steps:&lt;/p&gt; 
&lt;ol start="0"&gt; 
 &lt;li&gt;We use &lt;code&gt;pipenv&lt;/code&gt; to manage our Python dependencies. If you don't have it installed, you can install it using the following command: &lt;pre&gt;&lt;code class="language-sh"&gt;pkgx pipenv
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Download the Tinybird CLI from &lt;a href="https://www.tinybird.co/docs/cli.html"&gt;here&lt;/a&gt; and install it on your system.&lt;/li&gt; 
 &lt;li&gt;After authenticating with the Tinybird CLI, navigate to the &lt;code&gt;lib/tinybird&lt;/code&gt; directory: &lt;pre&gt;&lt;code class="language-sh"&gt;cd lib/tinybird
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Push the necessary data sources using the following command: &lt;pre&gt;&lt;code class="language-sh"&gt;tb push datasources/*
tb push endpoints/get_*
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Don't forget to set the &lt;code&gt;TINYBIRD_TOKEN&lt;/code&gt; with the appropriate rights in your &lt;code&gt;.env&lt;/code&gt; file.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Updating Tinybird&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pipenv shell
## start: pkgx-specific
cd ..
cd papermark
## end: pkgx-specific
pipenv update tinybird-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Papermark is an open-source project, and we welcome contributions from the community.&lt;/p&gt; 
&lt;p&gt;If you'd like to contribute, please fork the repository and make any changes you'd like. Pull requests are warmly welcome.&lt;/p&gt; 
&lt;h3&gt;Our Contributors ✨&lt;/h3&gt; 
&lt;a href="https://github.com/mfts/papermark/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=mfts/papermark" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>actualbudget/actual</title>
      <link>https://github.com/actualbudget/actual</link>
      <description>&lt;p&gt;A local-first personal finance app&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/actualbudget/actual/master/demo.png" alt="Actualbudget" /&gt; &lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Actual is a local-first personal finance tool. It is 100% free and open-source, written in NodeJS, it has a synchronization element so that all your changes can move between devices without any heavy lifting.&lt;/p&gt; 
&lt;p&gt;If you are interested in contributing, or want to know how development works, see our &lt;a href="https://actualbudget.org/docs/contributing/"&gt;contributing&lt;/a&gt; document we would love to have you.&lt;/p&gt; 
&lt;p&gt;Want to say thanks? Click the ⭐ at the top of the page.&lt;/p&gt; 
&lt;h2&gt;Key Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Actual &lt;a href="https://discord.gg/pRYNYr4W5A"&gt;discord&lt;/a&gt; community.&lt;/li&gt; 
 &lt;li&gt;Actual &lt;a href="https://actualbudget.org/docs"&gt;Community Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://actualbudget.org/docs/faq"&gt;Frequently asked questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;There are four ways to deploy Actual:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;One-click deployment &lt;a href="https://www.pikapods.com/pods?run=actual"&gt;via PikaPods&lt;/a&gt; (~1.40 $/month) - recommended for non-technical users&lt;/li&gt; 
 &lt;li&gt;Managed hosting &lt;a href="https://actualbudget.org/docs/install/fly"&gt;via Fly.io&lt;/a&gt; (~1.50 $/month)&lt;/li&gt; 
 &lt;li&gt;Self-hosted by using &lt;a href="https://actualbudget.org/docs/install/docker"&gt;a Docker image&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Local-only apps - &lt;a href="https://actualbudget.org/download/"&gt;downloadable Windows, Mac and Linux apps&lt;/a&gt; you can run on your device&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Learn more in the &lt;a href="https://actualbudget.org/docs/install/"&gt;installation instructions docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Ready to Start Budgeting?&lt;/h2&gt; 
&lt;p&gt;Read about &lt;a href="https://actualbudget.org/docs/getting-started/envelope-budgeting"&gt;Envelope budgeting&lt;/a&gt; to know more about the idea behind Actual Budget.&lt;/p&gt; 
&lt;h3&gt;Are you new to budgeting or want to start fresh?&lt;/h3&gt; 
&lt;p&gt;Check out the community's &lt;a href="https://actualbudget.org/docs/getting-started/starting-fresh"&gt;Starting Fresh&lt;/a&gt; guide so you can quickly get up and running!&lt;/p&gt; 
&lt;h3&gt;Are you migrating from other budgeting apps?&lt;/h3&gt; 
&lt;p&gt;Check out the community's &lt;a href="https://actualbudget.org/docs/migration/"&gt;Migration&lt;/a&gt; guide to start jumping on the Actual Budget train!&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;We have a wide range of documentation on how to use Actual, this is all available in our &lt;a href="https://actualbudget.org/docs"&gt;Community Documentation&lt;/a&gt;, this includes topics on Budgeting, Account Management, Tips &amp;amp; Tricks and some documentation for developers.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Actual is a community driven product. Learn more about &lt;a href="https://actualbudget.org/docs/contributing/"&gt;contributing to Actual&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Code structure&lt;/h3&gt; 
&lt;p&gt;The Actual app is split up into a few packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;loot-core - The core application that runs on any platform&lt;/li&gt; 
 &lt;li&gt;desktop-client - The desktop UI&lt;/li&gt; 
 &lt;li&gt;desktop-electron - The desktop app&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;More information on the project structure is available in our &lt;a href="https://actualbudget.org/docs/contributing/project-details"&gt;community documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Feature Requests&lt;/h3&gt; 
&lt;p&gt;Current feature requests can be seen &lt;a href="https://github.com/actualbudget/actual/issues?q=is%3Aissue+label%3A%22needs+votes%22+sort%3Areactions-%2B1-desc"&gt;here&lt;/a&gt;. Vote for your favorite requests by reacting &lt;span&gt;👍&lt;/span&gt; to the top comment of the request.&lt;/p&gt; 
&lt;p&gt;To add new feature requests, open a new Issue of the "Feature Request" type.&lt;/p&gt; 
&lt;h3&gt;Translation&lt;/h3&gt; 
&lt;p&gt;Make Actual Budget accessible to more people by helping with the &lt;a href="https://actualbudget.org/docs/contributing/i18n/"&gt;Internationalization&lt;/a&gt; of Actual. We are using a crowd sourcing tool to manage the translations, see our &lt;a href="https://hosted.weblate.org/projects/actualbudget/"&gt;Weblate Project&lt;/a&gt;. Weblate proudly supports open-source software projects through their &lt;a href="https://weblate.org/en/hosting/#libre"&gt;Libre plan&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://hosted.weblate.org/engage/actualbudget/"&gt; &lt;img src="https://hosted.weblate.org/widget/actualbudget/actual/287x66-grey.png" alt="Translation status" /&gt; &lt;/a&gt; 
&lt;h2&gt;Repo Activity&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/e20537dd8b74956f86736726ccfbc6f0565bec22.svg?sanitize=true" alt="Alt" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Thanks to our wonderful sponsors who make Actual Budget possible!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.netlify.com"&gt; &lt;img src="https://www.netlify.com/v3/img/components/netlify-color-accent.svg?sanitize=true" alt="Deploys by Netlify" /&gt; &lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>immich-app/immich</title>
      <link>https://github.com/immich-app/immich</link>
      <description>&lt;p&gt;High performance self-hosted photo and video management solution.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;br /&gt; &lt;a href="https://opensource.org/license/agpl-v3"&gt;&lt;img src="https://img.shields.io/badge/License-AGPL_v3-blue.svg?color=3F51B5&amp;amp;style=for-the-badge&amp;amp;label=License&amp;amp;logoColor=000000&amp;amp;labelColor=ececec" alt="License: AGPLv3" /&gt;&lt;/a&gt; &lt;a href="https://discord.immich.app"&gt; &lt;img src="https://img.shields.io/discord/979116623879368755.svg?label=Discord&amp;amp;logo=Discord&amp;amp;style=for-the-badge&amp;amp;logoColor=000000&amp;amp;labelColor=ececec" alt="Discord" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/immich-app/immich/main/design/immich-logo-stacked-light.svg?sanitize=true" width="300" title="Login With Custom URL" /&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt;High performance self-hosted photo and video management solution&lt;/h3&gt; 
&lt;br /&gt; 
&lt;a href="https://immich.app"&gt; &lt;img src="https://raw.githubusercontent.com/immich-app/immich/main/design/immich-screenshots.png" title="Main Screenshot" /&gt; &lt;/a&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ca_ES.md"&gt;Català&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_es_ES.md"&gt;Español&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_fr_FR.md"&gt;Français&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_it_IT.md"&gt;Italiano&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ja_JP.md"&gt;日本語&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ko_KR.md"&gt;한국어&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_de_DE.md"&gt;Deutsch&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_nl_NL.md"&gt;Nederlands&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_tr_TR.md"&gt;Türkçe&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_zh_CN.md"&gt;中文&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_uk_UA.md"&gt;Українська&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ru_RU.md"&gt;Русский&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_pt_BR.md"&gt;Português Brasileiro&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_sv_SE.md"&gt;Svenska&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ar_JO.md"&gt;العربية&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_vi_VN.md"&gt;Tiếng Việt&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_th_TH.md"&gt;ภาษาไทย&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚠️ The project is under &lt;strong&gt;very active&lt;/strong&gt; development.&lt;/li&gt; 
 &lt;li&gt;⚠️ Expect bugs and breaking changes.&lt;/li&gt; 
 &lt;li&gt;⚠️ &lt;strong&gt;Do not use the app as the only way to store your photos and videos.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;⚠️ Always follow &lt;a href="https://www.backblaze.com/blog/the-3-2-1-backup-strategy/"&gt;3-2-1&lt;/a&gt; backup plan for your precious photos and videos!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You can find the main documentation, including installation guides, at &lt;a href="https://immich.app/"&gt;https://immich.app/&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs/overview/introduction"&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs/install/requirements"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/#demo"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs/developer/translations"&gt;Translations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs/overview/support-the-project"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;Access the demo &lt;a href="https://demo.immich.app"&gt;here&lt;/a&gt;. For the mobile app, you can use &lt;code&gt;https://demo.immich.app&lt;/code&gt; for the &lt;code&gt;Server Endpoint URL&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Login credentials&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Email&lt;/th&gt; 
   &lt;th&gt;Password&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="mailto:demo@immich.app"&gt;demo@immich.app&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;demo&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Features&lt;/th&gt; 
   &lt;th&gt;Mobile&lt;/th&gt; 
   &lt;th&gt;Web&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Upload and view videos and photos&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Auto backup when the app is opened&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Prevent duplication of assets&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Selective album(s) for backup&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Download photos and videos to local device&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Multi-user support&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Album and Shared albums&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Scrubbable/draggable scrollbar&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Support raw formats&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Metadata view (EXIF, map)&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Search by metadata, objects, faces, and CLIP&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Administrative functions (user management)&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Background backup&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Virtual scroll&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;OAuth support&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;API Keys&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;LivePhoto/MotionPhoto backup and playback&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Support 360 degree image display&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;User-defined storage structure&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Public Sharing&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Archive and Favorites&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Global Map&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Partner Sharing&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Facial recognition and clustering&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Memories (x years ago)&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Offline support&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Read-only gallery&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Stacked Photos&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Tags&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Folder View&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;Read more about translations &lt;a href="https://immich.app/docs/developer/translations"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://hosted.weblate.org/engage/immich/"&gt; &lt;img src="https://hosted.weblate.org/widget/immich/immich/multi-auto.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt; 
&lt;h2&gt;Repository activity&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/9e86d9dc3ddd137161f2f6d2e758d7863b1789cb.svg?sanitize=true" alt="Activities" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;Star history&lt;/h2&gt; 
&lt;a href="https://star-history.com/#immich-app/immich&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=immich-app/immich&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=immich-app/immich&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=immich-app/immich&amp;amp;type=Date" width="100%" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/alextran1502/immich/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=immich-app/immich" width="100%" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>microsoft/data-formulator</title>
      <link>https://github.com/microsoft/data-formulator</link>
      <description>&lt;p&gt;🪄 Create rich visualizations with AI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt; &lt;img src="https://raw.githubusercontent.com/microsoft/data-formulator/main/public/favicon.ico" alt="Data Formulator icon" width="28" /&gt; &lt;b&gt;Data Formulator: Create Rich Visualizations with AI&lt;/b&gt; &lt;/h1&gt; 
&lt;div&gt; 
 &lt;p&gt;&lt;a href="https://arxiv.org/abs/2408.16119"&gt;&lt;img src="https://img.shields.io/badge/Paper-arXiv:2408.16119-b31b1b.svg?sanitize=true" alt="arxiv" /&gt;&lt;/a&gt;  &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt;  &lt;a href="https://youtu.be/3ndlwt0Wi3c"&gt;&lt;img src="https://img.shields.io/badge/YouTube-white?logo=youtube&amp;amp;logoColor=%23FF0000" alt="YouTube" /&gt;&lt;/a&gt;  &lt;a href="https://github.com/microsoft/data-formulator/actions/workflows/python-build.yml"&gt;&lt;img src="https://github.com/microsoft/data-formulator/actions/workflows/python-build.yml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/mYCZMQKYZb"&gt;&lt;img src="https://img.shields.io/badge/discord-chat-green?logo=discord" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Transform data and create rich visualizations iteratively with AI 🪄. Try Data Formulator now!&lt;/p&gt; 
&lt;p&gt;Any questions? Ask on the Discord channel! &lt;a href="https://discord.gg/mYCZMQKYZb"&gt;&lt;img src="https://img.shields.io/badge/discord-chat-green?logo=discord" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- [![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/microsoft/data-formulator?quickstart=1) --&gt; 
&lt;kbd&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://codespaces.new/microsoft/data-formulator?quickstart=1" title="open Data Formulator in GitHub Codespaces"&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/data-formulator/main/public/data-formulator-screenshot.png" /&gt;&lt;/a&gt; &lt;/kbd&gt; 
&lt;h2&gt;News 🔥🔥🔥&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;[07-10-2025] Data Formulator 0.2.2: Start with an analysis goal&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Some key frontend performance updates.&lt;/li&gt; 
   &lt;li&gt;You can start your exploration with a goal, or, tab and see if the agent can recommend some good exploration ideas for you. &lt;a href="https://github.com/microsoft/data-formulator/pull/176"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[05-13-2025] Data Formulator 0.2.1.3/4: External Data Loader&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;We introduced external data loader class to make import data easier. &lt;a href="https://github.com/microsoft/data-formulator/tree/main/py-src/data_formulator/data_loader"&gt;Readme&lt;/a&gt; and &lt;a href="https://github.com/microsoft/data-formulator/pull/155"&gt;Demo&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Current data loaders: MySQL, Azure Data Explorer (Kusto), Azure Blob and Amazon S3 (json, parquet, csv).&lt;/li&gt; 
     &lt;li&gt;[07-01-2025] Updated with: Postgresql, mssql.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Call for action &lt;a href="https://github.com/microsoft/data-formulator/issues/156"&gt;link&lt;/a&gt;: 
    &lt;ul&gt; 
     &lt;li&gt;Users: let us know which data source you'd like to load data from.&lt;/li&gt; 
     &lt;li&gt;Developers: let's build more data loaders.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[04-23-2025] Data Formulator 0.2: working with &lt;em&gt;large&lt;/em&gt; data 📦📦📦&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Explore large data by: 
    &lt;ol&gt; 
     &lt;li&gt;Upload large data file to the local database (powered by &lt;a href="https://github.com/duckdb/duckdb"&gt;DuckDB&lt;/a&gt;).&lt;/li&gt; 
     &lt;li&gt;Use drag-and-drop to specify charts, and Data Formulator dynamically fetches data from the database to create visualizations (with ⚡️⚡️⚡️ speeds).&lt;/li&gt; 
     &lt;li&gt;Work with AI agents: they generate SQL queries to transform the data to create rich visualizations!&lt;/li&gt; 
     &lt;li&gt;Anchor the result / follow up / create a new branch / join tables; let's dive deeper.&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt;Checkout the demos at &lt;a href="https://github.com/microsoft/data-formulator/releases/tag/0.2"&gt;[https://github.com/microsoft/data-formulator/releases/tag/0.2]&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Improved overall system performance, and enjoy the updated derive concept functionality.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[03-20-2025] Data Formulator 0.1.7: Anchoring ⚓︎&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Anchor an intermediate dataset, so that followup data analysis are built on top of the anchored data, not the original one.&lt;/li&gt; 
   &lt;li&gt;Clean a data and work with only the cleaned data; create a subset from the original data or join multiple data, and then go from there. AI agents will be less likely to get confused and work faster. ⚡️⚡️&lt;/li&gt; 
   &lt;li&gt;Check out the demos at &lt;a href="https://github.com/microsoft/data-formulator/releases/tag/0.1.7"&gt;[https://github.com/microsoft/data-formulator/releases/tag/0.1.7]&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Don't forget to update Data Formulator to test it out!&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[02-20-2025] Data Formulator 0.1.6 released!&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Now supports working with multiple datasets at once! Tell Data Formulator which data tables you would like to use in the encoding shelf, and it will figure out how to join the tables to create a visualization to answer your question. 🪄&lt;/li&gt; 
   &lt;li&gt;Checkout the demo at &lt;a href="https://github.com/microsoft/data-formulator/releases/tag/0.1.6"&gt;[https://github.com/microsoft/data-formulator/releases/tag/0.1.6]&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Update your Data Formulator to the latest version to play with the new features.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[02-12-2025] More models supported now!&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Now supports OpenAI, Azure, Ollama, and Anthropic models (and more powered by &lt;a href="https://github.com/BerriAI/litellm"&gt;LiteLLM&lt;/a&gt;);&lt;/li&gt; 
   &lt;li&gt;Models with strong code generation and instruction following capabilities are recommended (gpt-4o, claude-3-5-sonnet etc.);&lt;/li&gt; 
   &lt;li&gt;You can store API keys in &lt;code&gt;api-keys.env&lt;/code&gt; to avoid typing them every time (see template &lt;code&gt;api-keys.env.template&lt;/code&gt;).&lt;/li&gt; 
   &lt;li&gt;Let us know which models you have good/bad experiences with, and what models you would like to see supported! &lt;a href="https://github.com/microsoft/data-formulator/issues/49"&gt;[comment here]&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[11-07-2024] Minor fun update: data visualization challenges!&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;We added a few visualization challenges with the sample datasets. Can you complete them all? &lt;a href="https://github.com/microsoft/data-formulator/issues/53#issue-2641841252"&gt;[try them out!]&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Comment in the issue when you did, or share your results/questions with others! &lt;a href="https://github.com/microsoft/data-formulator/issues/53"&gt;[comment here]&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[10-11-2024] Data Formulator python package released!&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;You can now install Data Formulator using Python and run it locally, easily. &lt;a href="https://raw.githubusercontent.com/microsoft/data-formulator/main/#get-started"&gt;[check it out]&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Our Codespaces configuration is also updated for fast start up ⚡️. &lt;a href="https://codespaces.new/microsoft/data-formulator?quickstart=1"&gt;[try it now!]&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;New experimental feature: load an image or a messy text, and ask AI to parse and clean it for you(!). &lt;a href="https://github.com/microsoft/data-formulator/pull/31#issuecomment-2403652717"&gt;[demo]&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[10-01-2024] Initial release of Data Formulator, check out our &lt;a href="https://www.microsoft.com/en-us/research/blog/data-formulator-exploring-how-ai-can-help-analysts-create-rich-data-visualizations/"&gt;[blog]&lt;/a&gt; and &lt;a href="https://youtu.be/3ndlwt0Wi3c"&gt;[video]&lt;/a&gt;!&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Data Formulator&lt;/strong&gt; is an application from Microsoft Research that uses large language models to transform data, expediting the practice of data visualization.&lt;/p&gt; 
&lt;p&gt;Data Formulator is an AI-powered tool for analysts to iteratively create rich visualizations. Unlike most chat-based AI tools where users need to describe everything in natural language, Data Formulator combines &lt;em&gt;user interface interactions (UI)&lt;/em&gt; and &lt;em&gt;natural language (NL) inputs&lt;/em&gt; for easier interaction. This blended approach makes it easier for users to describe their chart designs while delegating data transformation to AI.&lt;/p&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;p&gt;Play with Data Formulator with one of the following options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Option 1: Install via Python PIP&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Use Python PIP for an easy setup experience, running locally (recommend: install it in a virtual environment).&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# install data_formulator
pip install data_formulator

# start data_formulator
data_formulator 

# alternatively, you can run data formulator with this command
python -m data_formulator
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Data Formulator will be automatically opened in the browser at &lt;a href="http://localhost:5000"&gt;http://localhost:5000&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Update: you can specify the port number (e.g., 8080) by &lt;code&gt;python -m data_formulator --port 8080&lt;/code&gt; if the default port is occupied.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Option 2: Codespaces (5 minutes)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You can also run Data Formulator in Codespaces; we have everything pre-configured. For more details, see &lt;a href="https://raw.githubusercontent.com/microsoft/data-formulator/main/CODESPACES.md"&gt;CODESPACES.md&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href="https://codespaces.new/microsoft/data-formulator?quickstart=1"&gt;&lt;img src="https://github.com/codespaces/badge.svg?sanitize=true" alt="Open in GitHub Codespaces" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Option 3: Working in the developer mode&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You can build Data Formulator locally if you prefer full control over your development environment and the ability to customize the setup to your specific needs. For detailed instructions, refer to &lt;a href="https://raw.githubusercontent.com/microsoft/data-formulator/main/DEVELOPMENT.md"&gt;DEVELOPMENT.md&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Using Data Formulator&lt;/h2&gt; 
&lt;p&gt;Once you've completed the setup using either option, follow these steps to start using Data Formulator:&lt;/p&gt; 
&lt;h3&gt;The basics of data visualization&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Provide OpenAI keys and select a model (GPT-4o suggested) and choose a dataset.&lt;/li&gt; 
 &lt;li&gt;Choose a chart type, and then drag-and-drop data fields to chart properties (x, y, color, ...) to specify visual encodings.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/0fbea012-1d2d-46c3-a923-b1fc5eb5e5b8"&gt;https://github.com/user-attachments/assets/0fbea012-1d2d-46c3-a923-b1fc5eb5e5b8&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Create visualization beyond the initial dataset (powered by 🤖)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can type names of &lt;strong&gt;fields that do not exist in current data&lt;/strong&gt; in the encoding shelf: 
  &lt;ul&gt; 
   &lt;li&gt;this tells Data Formulator that you want to create visualizations that require computation or transformation from existing data,&lt;/li&gt; 
   &lt;li&gt;you can optionally provide a natural language prompt to explain and clarify your intent (not necessary when field names are self-explanatory).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Click the &lt;strong&gt;Formulate&lt;/strong&gt; button. 
  &lt;ul&gt; 
   &lt;li&gt;Data Formulator will transform data and instantiate the visualization based on the encoding and prompt.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Inspect the data, chart and code.&lt;/li&gt; 
 &lt;li&gt;To create a new chart based on existing ones, follow up in natural language: 
  &lt;ul&gt; 
   &lt;li&gt;provide a follow up prompt (e.g., &lt;em&gt;``show only top 5!''&lt;/em&gt;),&lt;/li&gt; 
   &lt;li&gt;you may also update visual encodings for the new chart.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/160c69d2-f42d-435c-9ff3-b1229b5bddba"&gt;https://github.com/user-attachments/assets/160c69d2-f42d-435c-9ff3-b1229b5bddba&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/c93b3e84-8ca8-49ae-80ea-f91ceef34acb"&gt;https://github.com/user-attachments/assets/c93b3e84-8ca8-49ae-80ea-f91ceef34acb&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Repeat this process as needed to explore and understand your data. Your explorations are trackable in the &lt;strong&gt;Data Threads&lt;/strong&gt; panel.&lt;/p&gt; 
&lt;h2&gt;Developers' Guide&lt;/h2&gt; 
&lt;p&gt;Follow the &lt;a href="https://raw.githubusercontent.com/microsoft/data-formulator/main/DEVELOPMENT.md"&gt;developers' instructions&lt;/a&gt; to build your new data analysis tools on top of Data Formulator.&lt;/p&gt; 
&lt;h2&gt;Research Papers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://arxiv.org/abs/2408.16119"&gt;Data Formulator 2: Iteratively Creating Rich Visualizations with AI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;@article{wang2024dataformulator2iteratively,
      title={Data Formulator 2: Iteratively Creating Rich Visualizations with AI}, 
      author={Chenglong Wang and Bongshin Lee and Steven Drucker and Dan Marshall and Jianfeng Gao},
      year={2024},
      booktitle={ArXiv preprint arXiv:2408.16119},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://arxiv.org/abs/2309.10094"&gt;Data Formulator: AI-powered Concept-driven Visualization Authoring&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;@article{wang2023data,
  title={Data Formulator: AI-powered Concept-driven Visualization Authoring},
  author={Wang, Chenglong and Thompson, John and Lee, Bongshin},
  journal={IEEE Transactions on Visualization and Computer Graphics},
  year={2023},
  publisher={IEEE}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href="https://cla.microsoft.com"&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repositories using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href="https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general"&gt;Microsoft's Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>supermemoryai/supermemory</title>
      <link>https://github.com/supermemoryai/supermemory</link>
      <description>&lt;p&gt;Build your own second brain with supermemory. Extremely fast, scalable, memory API for the AI era.&lt;/p&gt;&lt;hr&gt;&lt;div align="center" style="padding-bottom:20px;padding-top:20px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/logo.svg?sanitize=true" alt="supermemory Logo" width="400" /&gt; 
&lt;/div&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/landing-page.jpeg" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Core Functionality&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#add-memory"&gt;Add Memories from Any Content&lt;/a&gt;&lt;/strong&gt;: Easily add memories from URLs, PDFs, and plain text—just paste, upload, or link.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#chat-memories"&gt;Chat with Your Memories&lt;/a&gt;&lt;/strong&gt;: Converse with your stored content using natural language chat.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#mcp-integration"&gt;Supermemory MCP Integration&lt;/a&gt;&lt;/strong&gt;: Seamlessly connect with all major AI tools (Claude, Cursor, etc.) via Supermemory MCP.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How do i use this?&lt;/h2&gt; 
&lt;p&gt;Go to &lt;a href="https://app.supermemory.ai"&gt;app.supermemory.ai&lt;/a&gt; and sign into with your account&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a id="add-memory"&gt;&lt;/a&gt;Start Adding Memory with your choose of format (Note, Link, File)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/add-memory.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;You can also Connect to your favourite services (Notion, Google Drive, OneDrive)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/add-connections.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;a id="chat-memories"&gt;&lt;/a&gt;Once Memories are added, you can chat with Supermemory by clicking on "Open Chat" and retrieve info from your saved memories&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/chat.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;&lt;a id="mcp-integration"&gt;&lt;/a&gt;Add MCP to your AI Tools (by clicking on "Connect to your AI" and select the AI tool you are trying to integrate)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/mcp.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Have questions or feedback? We're here to help:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Email: &lt;a href="mailto:dhravya@supermemory.com"&gt;dhravya@supermemory.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://docs.supermemory.ai"&gt;docs.supermemory.ai&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from developers of all skill levels! Whether you're fixing bugs, adding features, or improving documentation, your help makes supermemory better for everyone.&lt;/p&gt; 
&lt;h3&gt;Quick Start for Contributors&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork and clone&lt;/strong&gt; the repository&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt; with &lt;code&gt;bun install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Set up your environment&lt;/strong&gt; by copying &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env.local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Start developing&lt;/strong&gt; with &lt;code&gt;bun run dev&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For detailed guidelines, development setup, coding standards, and the complete contribution workflow, please see our &lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/CONTRIBUTE.md"&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Ways to Contribute&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 &lt;strong&gt;Bug fixes&lt;/strong&gt; - Help us squash those pesky issues&lt;/li&gt; 
 &lt;li&gt;✨ &lt;strong&gt;New features&lt;/strong&gt; - Add functionality that users will love&lt;/li&gt; 
 &lt;li&gt;🎨 &lt;strong&gt;UI/UX improvements&lt;/strong&gt; - Make the interface more intuitive&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Performance optimizations&lt;/strong&gt; - Help us make supermemory faster&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out our &lt;a href="https://github.com/supermemoryai/supermemory/issues"&gt;Issues&lt;/a&gt; page for &lt;code&gt;good first issue&lt;/code&gt; and &lt;code&gt;help wanted&lt;/code&gt; labels to get started!&lt;/p&gt; 
&lt;h2&gt;Updates &amp;amp; Roadmap&lt;/h2&gt; 
&lt;p&gt;Stay up to date with the latest improvements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.supermemory.ai/changelog/overview"&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/supermemoryai"&gt;X&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>hcengineering/platform</title>
      <link>https://github.com/hcengineering/platform</link>
      <description>&lt;p&gt;Huly — All-in-One Project Management Platform (alternative to Linear, Jira, Slack, Notion, Motion)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Huly Platform&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://x.com/huly_io"&gt;&lt;img src="https://img.shields.io/twitter/follow/huly_io?style=for-the-badge" alt="X (formerly Twitter) Follow" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/license/hcengineering/platform?style=for-the-badge" alt="GitHub License" /&gt;&lt;/p&gt; 
&lt;p&gt;⭐️ Your star shines on us. Star us on GitHub!&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;The Huly Platform is a robust framework designed to accelerate the development of business applications, such as CRM systems. This repository includes several applications, such as Chat, Project Management, CRM, HRM, and ATS. Various teams are building products on top of the Platform, including &lt;a href="https://huly.io"&gt;Huly&lt;/a&gt; and &lt;a href="https://tracex.co"&gt;TraceX&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://repository-images.githubusercontent.com/392073243/6d27d5cc-38cd-4d88-affe-bb88b393180c" alt="Huly" /&gt;&lt;/p&gt; 
&lt;h2&gt;Self-Hosting&lt;/h2&gt; 
&lt;p&gt;If you're primarily interested in self-hosting Huly without the intention to modify or contribute to its development, please use &lt;a href="https://github.com/hcengineering/huly-selfhost"&gt;huly-selfhost&lt;/a&gt;. This project offers a convenient method to host Huly using &lt;code&gt;docker&lt;/code&gt;, designed for ease of use and quick setup. Explore this option to effortlessly enjoy Huly on your own server.&lt;/p&gt; 
&lt;h2&gt;Activity&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/c42c99e21691fa60ea61b5cdf11c2e0647621534.svg?sanitize=true" alt="Alt" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;API Client&lt;/h2&gt; 
&lt;p&gt;If you want to interact with Huly programmatically, check out our &lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/packages/api-client/README.md"&gt;API Client&lt;/a&gt; documentation. The API client provides a typed interface for all Huly operations and can be used to build integrations and custom applications.&lt;/p&gt; 
&lt;p&gt;You can find API usage examples in the &lt;a href="https://github.com/hcengineering/huly-examples"&gt;Huly examples&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#huly-platform"&gt;Huly Platform&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#about"&gt;About&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#self-hosting"&gt;Self-Hosting&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#activity"&gt;Activity&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#api-client"&gt;API Client&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#pre-requisites"&gt;Pre-requisites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#verification"&gt;Verification&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#branches--contributing"&gt;Branches &amp;amp; Contributing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#setup-dev-environment"&gt;Setup dev environment&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#fast-start"&gt;Fast start&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#build-and-run"&gt;Build and run&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#run-in-development-mode"&gt;Run in development mode&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#update-project-structure-and-database"&gt;Update project structure and database&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#build--watch"&gt;Build &amp;amp; Watch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#tests"&gt;Tests&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#unit-tests"&gt;Unit tests&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#ui-tests"&gt;UI tests&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#package-publishing"&gt;Package publishing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#additional-testing"&gt;Additional testing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#wsl-build-guide"&gt;WSL build guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Pre-requisites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Before proceeding, ensure that your system meets the following requirements: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt; (v20.11.0 is required)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/compose/install/"&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Verification&lt;/h2&gt; 
&lt;p&gt;To verify the installation, perform the following checks in your terminal:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ensure that the &lt;code&gt;docker&lt;/code&gt; commands are available:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker --version
docker compose version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Branches &amp;amp; Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;code&gt;main&lt;/code&gt; branch is the default branch used for production deployments. Changes to this branch are made from the &lt;code&gt;staging&lt;/code&gt; branch once a version is ready for community use.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;code&gt;staging&lt;/code&gt; branch is used for pre-release testing. It is stable enough for testing but not yet ready for production deployment.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;code&gt;develop&lt;/code&gt; branch is used for development and is the default branch for contributions.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We periodically merge &lt;code&gt;develop&lt;/code&gt; into &lt;code&gt;staging&lt;/code&gt; to perform testing builds. Once we are satisfied with the build quality in our pre-release deployment, we merge changes into &lt;code&gt;main&lt;/code&gt; and release a new version to the community.&lt;/p&gt; 
&lt;h2&gt;Setup dev environment&lt;/h2&gt; 
&lt;h3&gt;To initialise the communication submodule&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git submodule init
git submodule update
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;To update the communication submodule&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git submodule update
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Authentication&lt;/h3&gt; 
&lt;p&gt;This project uses GitHub Packages for dependency management. To successfully download dependencies, you need to generate a GitHub personal access token and log in to npm using that token.&lt;/p&gt; 
&lt;p&gt;Follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Generate a GitHub Token:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Log in to your GitHub account&lt;/li&gt; 
 &lt;li&gt;Go to &lt;strong&gt;Settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;Developer settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;Personal access tokens&lt;/strong&gt; (&lt;a href="https://github.com/settings/personal-access-tokens"&gt;https://github.com/settings/personal-access-tokens&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Click &lt;strong&gt;Generate new token&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Select the required scopes (at least &lt;code&gt;read:packages&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Generate the token and copy it&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Authenticate with npm:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm login --registry=https://npm.pkg.github.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When prompted, enter your GitHub username, use the generated token as your password&lt;/p&gt; 
&lt;h2&gt;Fast start&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sh ./scripts/fast-start.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;You need Microsoft's &lt;a href="https://rushjs.io"&gt;rush&lt;/a&gt; to install the application.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Rush globally using the command:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @microsoft/rush
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Navigate to the repository root and run the following commands:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush install
rush build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can just execute:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sh ./scripts/presetup-rush.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build and run&lt;/h2&gt; 
&lt;p&gt;Development environment setup requires Docker to be installed on system.&lt;/p&gt; 
&lt;p&gt;Support is available for both amd64 and arm64 containers on Linux and macOS.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd ./dev/
rush build    # Will build all the required packages.
# rush rebuild  # could be used to omit build cache.
rush bundle   # Will prepare bundles.
rush package  # Will build all webpack packages.
rush validate # Will validate all sources with typescript and generate d.ts files required for ts-node execution.
rush svelte-check # Optional. svelte files validation using svelte-check.
rush docker:build   # Will build Docker containers for all applications in the local Docker environment.
rush docker:up # Will set up all the containers
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be aware &lt;code&gt;rush docker:build&lt;/code&gt; will automatically execute all required phases like build, bundle, package.&lt;/p&gt; 
&lt;p&gt;Alternatively, you can just execute:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sh ./scripts/build.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, Docker volumes named dev_db, dev_elastic, and dev_files will be created for the MongoDB, Elasticsearch, and MinIO instances.&lt;/p&gt; 
&lt;p&gt;Add the following line to your /etc/hosts file&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-plain"&gt;127.0.0.1 huly.local
::1 huly.local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Accessing the URL &lt;a href="http://huly.local:8087"&gt;http://huly.local:8087&lt;/a&gt; will lead you to the app in development mode.&lt;/p&gt; 
&lt;p&gt;Limitations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Local installation does not support sending emails, thus disabling functionalities such as password recovery and email notifications.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Run in development mode&lt;/h2&gt; 
&lt;p&gt;Development mode allows for live reloading and a smoother development process.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd dev/prod
rush validate
rushx dev-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then go to &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Select "Sign up" on the right panel and click the "Sign up with password" link at the bottom. Enter the new user's credentials, then proceed to create a workspace for them.&lt;/p&gt; 
&lt;h2&gt;Update project structure and database&lt;/h2&gt; 
&lt;p&gt;If the project's structure is updated, it may be necessary to relink and rebuild the projects.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush update
rush build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If a build fails, but the code is correct, try to delete the &lt;a href="https://rushjs.io/pages/maintainer/build_cache/"&gt;build cache&lt;/a&gt; and retry.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# from the project root
rm -rf common/temp/build-cache
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build &amp;amp; Watch&lt;/h2&gt; 
&lt;p&gt;For development purpose &lt;code&gt;rush build:watch&lt;/code&gt; action could be used.&lt;/p&gt; 
&lt;p&gt;It includes build and validate phases in watch mode.&lt;/p&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;h3&gt;Unit tests&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush test # To execute all tests

rushx test # For individual test execution inside a package directory
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;UI tests&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd ./tests
rush build
rush bundle
rush docker:build
## creates test Docker containers and sets up test database
./prepare.sh
## runs UI tests
rushx uitest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To execute tests in the development environment, please follow these steps:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd ./tests
./create-local.sh ## use ./restore-local.sh if you only want to restore the workspace to a predefined initial state for sanity.
cd ./sanity
rushx dev-uitest # To execute all tests against the development environment.
rushx dev-debug -g 'pattern' # To execute tests in debug mode with only the matching test pattern.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Package publishing&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;node ./common/scripts/bump.js -p projectName
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Additional testing&lt;/h2&gt; 
&lt;p&gt;This project is tested with BrowserStack.&lt;/p&gt; 
&lt;h2&gt;WSL build guide&lt;/h2&gt; 
&lt;p&gt;This guide describes the nuances of building and running the application from source code located on your NTFS drive, which is accessible from both Windows and WSL.&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;h4&gt;Disk Space Requirements&lt;/h4&gt; 
&lt;p&gt;Ensure you have sufficient disk space available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A fully deployed local application in clean Docker will consume slightly more than &lt;strong&gt;35 GB&lt;/strong&gt; of WSL virtual disk space&lt;/li&gt; 
 &lt;li&gt;The application folder after build (sources + artifacts) will occupy &lt;strong&gt;4.5 GB&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If there's insufficient space on your system drive (usually &lt;code&gt;C:\&lt;/code&gt;), you can change the virtual disk location in Docker Settings → Resources → Advanced.&lt;/p&gt; 
&lt;h4&gt;Docker WSL Integration&lt;/h4&gt; 
&lt;p&gt;Make sure Docker is accessible from WSL:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to Docker Settings → Resources → Advanced → WSL Integration&lt;/li&gt; 
 &lt;li&gt;Select the distribution where you'll be building and running the application&lt;/li&gt; 
 &lt;li&gt;Verify integration works by running this command in WSL: &lt;pre&gt;&lt;code class="language-bash"&gt;docker run hello-world
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Common Issues and Solutions&lt;/h3&gt; 
&lt;h4&gt;Git Line Endings on Windows&lt;/h4&gt; 
&lt;p&gt;Windows Git often automatically replaces line endings. Since most build scripts are &lt;code&gt;.sh&lt;/code&gt; files, ensure your Windows checkout doesn't break them.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Solution options:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Checkout from WSL instead of Windows&lt;/li&gt; 
 &lt;li&gt;Configure Git on Windows to disable auto-replacement: &lt;pre&gt;&lt;code class="language-bash"&gt;git config --global core.autocrlf false
&lt;/code&gt;&lt;/pre&gt; This disables auto-replacement for all repositories on your machine.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Elevated Privileges in WSL&lt;/h4&gt; 
&lt;p&gt;Some commands in the instructions require elevated privileges when working in WSL. If you're using Ubuntu distribution, prefix commands with &lt;code&gt;sudo&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo npm install -g @microsoft/rush
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;WSL Configuration&lt;/h4&gt; 
&lt;p&gt;If the source code is located on a Windows NTFS drive, then edit the &lt;code&gt;/etc/wsl.conf&lt;/code&gt; file in WSL (e.g., &lt;code&gt;sudo nano /etc/wsl.conf&lt;/code&gt;) and add the following content if it doesn't exist:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ini"&gt;[automount]
enabled = true
root = /mnt/
options = "metadata,umask=22,fmask=11"

[interop]
appendWindowsPath = false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, we recommend storing the repository on a WSL disk, as this dramatically improves build and maintenance operations.&lt;/p&gt; 
&lt;h3&gt;Running the Application&lt;/h3&gt; 
&lt;p&gt;After these preparations, the build instructions should work without issues.&lt;/p&gt; 
&lt;h4&gt;Port Conflicts&lt;/h4&gt; 
&lt;p&gt;When starting the application (&lt;code&gt;rush docker:up&lt;/code&gt;), some network ports in Windows might be occupied. You can fix port mapping in the &lt;code&gt;\dev\docker-compose.yaml&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Depending on which port you change, you'll need to:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Find what's using that port&lt;/li&gt; 
 &lt;li&gt;Update the new address in the corresponding service configuration&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;sub&gt;&lt;sup&gt;© 2025 &lt;a href="https://hardcoreeng.com"&gt;Hardcore Engineering Inc&lt;/a&gt;.&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kortix-ai/suna</title>
      <link>https://github.com/kortix-ai/suna</link>
      <description>&lt;p&gt;Suna - Open Source Generalist AI Agent&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt;Kortix – Open Source Platform to Build, Manage and Train AI Agents&lt;/h1&gt; 
 &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kortix-ai/suna/main/frontend/public/banner.png" alt="Kortix Screenshot" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;The complete platform for creating autonomous AI agents that work for you&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Kortix is a comprehensive open source platform that empowers you to build, manage, and train sophisticated AI agents for any use case. Create powerful agents that act autonomously on your behalf, from general-purpose assistants to specialized automation tools.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/license"&gt;&lt;img src="https://img.shields.io/badge/License-Apache--2.0-blue" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/Py6pCBUUPw"&gt;&lt;img src="https://dcbadge.limes.pink/api/server/Py6pCBUUPw?style=flat" alt="Discord Follow" /&gt;&lt;/a&gt; &lt;a href="https://x.com/kortixai"&gt;&lt;img src="https://img.shields.io/twitter/follow/kortixai" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://github.com/kortix-ai/suna"&gt;&lt;img src="https://img.shields.io/github/stars/kortix-ai/suna" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/kortix-ai/suna/labels/bug"&gt;&lt;img src="https://img.shields.io/github/issues/kortix-ai/suna" alt="Issues" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;!-- Keep these links. Translations will automatically update with the README. --&gt; 
 &lt;p&gt;&lt;a href="https://www.readme-i18n.com/kortix-ai/suna?lang=de"&gt;Deutsch&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/kortix-ai/suna?lang=es"&gt;Español&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/kortix-ai/suna?lang=fr"&gt;français&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/kortix-ai/suna?lang=ja"&gt;日本語&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/kortix-ai/suna?lang=ko"&gt;한국어&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/kortix-ai/suna?lang=pt"&gt;Português&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/kortix-ai/suna?lang=ru"&gt;Русский&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/kortix-ai/suna?lang=zh"&gt;中文&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;🌟 What Makes Kortix Special&lt;/h2&gt; 
&lt;h3&gt;🤖 Includes Suna – Flagship Generalist AI Worker&lt;/h3&gt; 
&lt;p&gt;Meet Suna, our showcase agent that demonstrates the full power of the Kortix platform. Through natural conversation, Suna handles research, data analysis, browser automation, file management, and complex workflows – showing you what's possible when you build with Kortix.&lt;/p&gt; 
&lt;h3&gt;🔧 Build Custom Suna-Type Agents&lt;/h3&gt; 
&lt;p&gt;Create your own specialized agents tailored to specific domains, workflows, or business needs. Whether you need agents for customer service, data processing, content creation, or industry-specific tasks, Kortix provides the infrastructure and tools to build, deploy, and scale them.&lt;/p&gt; 
&lt;h3&gt;🚀 Complete Platform Capabilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Browser Automation&lt;/strong&gt;: Navigate websites, extract data, fill forms, automate web workflows&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;File Management&lt;/strong&gt;: Create, edit, and organize documents, spreadsheets, presentations, code&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Web Intelligence&lt;/strong&gt;: Crawling, search capabilities, data extraction and synthesis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;System Operations&lt;/strong&gt;: Command-line execution, system administration, DevOps tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API Integrations&lt;/strong&gt;: Connect with external services and automate cross-platform workflows&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Agent Builder&lt;/strong&gt;: Visual tools to configure, customize, and deploy agents&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📋 Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/#-what-makes-kortix-special"&gt;🌟 What Makes Kortix Special&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/#-agent-examples--use-cases"&gt;🎯 Agent Examples &amp;amp; Use Cases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/#%EF%B8%8F-platform-architecture"&gt;🏗️ Platform Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/#-quick-start"&gt;🚀 Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/#-self-hosting"&gt;🏠 Self-Hosting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/#-contributing"&gt;🤝 Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/#-license"&gt;📄 License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎯 Agent Examples &amp;amp; Use Cases&lt;/h2&gt; 
&lt;h3&gt;Suna - Your Generalist AI Worker&lt;/h3&gt; 
&lt;p&gt;Suna demonstrates the full capabilities of the Kortix platform as a versatile AI worker that can:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🔍 Research &amp;amp; Analysis&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Conduct comprehensive web research across multiple sources&lt;/li&gt; 
 &lt;li&gt;Analyze documents, reports, and datasets&lt;/li&gt; 
 &lt;li&gt;Synthesize information and create detailed summaries&lt;/li&gt; 
 &lt;li&gt;Market research and competitive intelligence&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;🌐 Browser Automation&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Navigate complex websites and web applications&lt;/li&gt; 
 &lt;li&gt;Extract data from multiple pages automatically&lt;/li&gt; 
 &lt;li&gt;Fill forms and submit information&lt;/li&gt; 
 &lt;li&gt;Automate repetitive web-based workflows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;📁 File &amp;amp; Document Management&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create and edit documents, spreadsheets, presentations&lt;/li&gt; 
 &lt;li&gt;Organize and structure file systems&lt;/li&gt; 
 &lt;li&gt;Convert between different file formats&lt;/li&gt; 
 &lt;li&gt;Generate reports and documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;📊 Data Processing &amp;amp; Analysis&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clean and transform datasets from various sources&lt;/li&gt; 
 &lt;li&gt;Perform statistical analysis and create visualizations&lt;/li&gt; 
 &lt;li&gt;Monitor KPIs and generate insights&lt;/li&gt; 
 &lt;li&gt;Integrate data from multiple APIs and databases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;⚙️ System Administration&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Execute command-line operations safely&lt;/li&gt; 
 &lt;li&gt;Manage system configurations and deployments&lt;/li&gt; 
 &lt;li&gt;Automate DevOps workflows&lt;/li&gt; 
 &lt;li&gt;Monitor system health and performance&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Build Your Own Specialized Agents&lt;/h3&gt; 
&lt;p&gt;The Kortix platform enables you to create agents tailored to specific needs:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🎧 Customer Service Agents&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Handle support tickets and FAQ responses&lt;/li&gt; 
 &lt;li&gt;Manage user onboarding and training&lt;/li&gt; 
 &lt;li&gt;Escalate complex issues to human agents&lt;/li&gt; 
 &lt;li&gt;Track customer satisfaction and feedback&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;✍️ Content Creation Agents&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Generate marketing copy and social media posts&lt;/li&gt; 
 &lt;li&gt;Create technical documentation and tutorials&lt;/li&gt; 
 &lt;li&gt;Develop educational content and training materials&lt;/li&gt; 
 &lt;li&gt;Maintain content calendars and publishing schedules&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;📈 Sales &amp;amp; Marketing Agents&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Qualify leads and manage CRM systems&lt;/li&gt; 
 &lt;li&gt;Schedule meetings and follow up with prospects&lt;/li&gt; 
 &lt;li&gt;Create personalized outreach campaigns&lt;/li&gt; 
 &lt;li&gt;Generate sales reports and forecasts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;🔬 Research &amp;amp; Development Agents&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Conduct academic and scientific research&lt;/li&gt; 
 &lt;li&gt;Monitor industry trends and innovations&lt;/li&gt; 
 &lt;li&gt;Analyze patents and competitive landscapes&lt;/li&gt; 
 &lt;li&gt;Generate research reports and recommendations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;🏭 Industry-Specific Agents&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Healthcare: Patient data analysis, appointment scheduling&lt;/li&gt; 
 &lt;li&gt;Finance: Risk assessment, compliance monitoring&lt;/li&gt; 
 &lt;li&gt;Legal: Document review, case research&lt;/li&gt; 
 &lt;li&gt;Education: Curriculum development, student assessment&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each agent can be configured with custom tools, workflows, knowledge bases, and integrations specific to your requirements.&lt;/p&gt; 
&lt;h2&gt;🏗️ Platform Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kortix-ai/suna/main/docs/images/diagram.png" alt="Architecture Diagram" /&gt;&lt;/p&gt; 
&lt;p&gt;Kortix consists of four main components that work together to provide a complete AI agent development platform:&lt;/p&gt; 
&lt;h3&gt;🔧 Backend API&lt;/h3&gt; 
&lt;p&gt;Python/FastAPI service that powers the agent platform with REST endpoints, thread management, agent orchestration, and LLM integration with Anthropic, OpenAI, and others via LiteLLM. Includes agent builder tools, workflow management, and extensible tool system.&lt;/p&gt; 
&lt;h3&gt;🖥️ Frontend Dashboard&lt;/h3&gt; 
&lt;p&gt;Next.js/React application providing a comprehensive agent management interface with chat interfaces, agent configuration dashboards, workflow builders, monitoring tools, and deployment controls.&lt;/p&gt; 
&lt;h3&gt;🐳 Agent Runtime&lt;/h3&gt; 
&lt;p&gt;Isolated Docker execution environments for each agent instance featuring browser automation, code interpreter, file system access, tool integration, security sandboxing, and scalable agent deployment.&lt;/p&gt; 
&lt;h3&gt;🗄️ Database &amp;amp; Storage&lt;/h3&gt; 
&lt;p&gt;Supabase-powered data layer handling authentication, user management, agent configurations, conversation history, file storage, workflow state, analytics, and real-time subscriptions for live agent monitoring.&lt;/p&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;p&gt;Get your Kortix platform running in minutes with our automated setup wizard:&lt;/p&gt; 
&lt;h3&gt;1️⃣ Clone the Repository&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/kortix-ai/suna.git
cd suna
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2️⃣ Run the Setup Wizard&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python setup.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The wizard will guide you through 14 steps with progress saving, so you can resume if interrupted.&lt;/p&gt; 
&lt;h3&gt;3️⃣ Start the Platform&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python start.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That's it! Your Kortix platform will be running with Suna ready to assist you.&lt;/p&gt; 
&lt;h2&gt;🏠 Self-Hosting&lt;/h2&gt; 
&lt;p&gt;Kortix can be self-hosted on your own infrastructure using our comprehensive setup wizard, giving you complete control over your AI agent platform. For a complete guide to self-hosting Kortix, please refer to our &lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/docs/SELF-HOSTING.md"&gt;Self-Hosting Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;🔧 Setup Process Includes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🏗️ Infrastructure&lt;/strong&gt;: Supabase project setup for database and authentication&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ Performance&lt;/strong&gt;: Redis configuration for caching and session management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🛡️ Security&lt;/strong&gt;: Daytona setup for secure agent execution environments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🤖 AI Integration&lt;/strong&gt;: LLM providers (Anthropic, OpenAI, OpenRouter, etc.)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌐 Web Capabilities&lt;/strong&gt;: Search and scraping (Tavily, Firecrawl)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📋 Workflows&lt;/strong&gt;: QStash for background job processing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔗 Automation&lt;/strong&gt;: Webhook handling for automated tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📊 Data Sources&lt;/strong&gt;: Optional RapidAPI integrations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📚 Manual Setup&lt;/h3&gt; 
&lt;p&gt;For advanced users who prefer manual configuration, see the &lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/docs/SELF-HOSTING.md"&gt;Self-Hosting Guide&lt;/a&gt; for detailed manual setup instructions.&lt;/p&gt; 
&lt;p&gt;The wizard will guide you through all necessary steps to get your Kortix platform up and running. For detailed instructions, troubleshooting tips, and advanced configuration options, see the &lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/docs/SELF-HOSTING.md"&gt;Self-Hosting Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from the community! Whether you're fixing bugs, adding features, or improving documentation, your help makes Kortix better for everyone.&lt;/p&gt; 
&lt;p&gt;Please see our &lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for more details on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;How to set up your development environment&lt;/li&gt; 
 &lt;li&gt;Code style and standards&lt;/li&gt; 
 &lt;li&gt;Pull request process&lt;/li&gt; 
 &lt;li&gt;Community guidelines&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;Kortix is licensed under the Apache License, Version 2.0. See &lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/LICENSE"&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;strong&gt;Ready to build your first AI agent?&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/docs/SELF-HOSTING.md"&gt;Get Started&lt;/a&gt; • &lt;a href="https://discord.gg/Py6pCBUUPw"&gt;Join Discord&lt;/a&gt; • &lt;a href="https://x.com/kortixai"&gt;Follow on Twitter&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>