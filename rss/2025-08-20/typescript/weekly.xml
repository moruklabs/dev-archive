<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Weekly Trending</title>
    <description>Weekly Trending of TypeScript in GitHub</description>
    <pubDate>Tue, 19 Aug 2025 01:44:53 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>apple/embedding-atlas</title>
      <link>https://github.com/apple/embedding-atlas</link>
      <description>&lt;p&gt;Embedding Atlas is a tool that provides interactive visualizations for large embeddings. It allows you to visualize, cross-filter, and search embeddings and metadata.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Embedding Atlas&lt;/h1&gt; 
&lt;p&gt;Embedding Atlas is a tool that provides interactive visualizations for large embeddings. It allows you to visualize, cross-filter, and search embeddings and metadata.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;üè∑Ô∏è &lt;strong&gt;Automatic data clustering &amp;amp; labeling:&lt;/strong&gt; Interactively visualize and navigate overall data structure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ü´ß &lt;strong&gt;Kernel density estimation &amp;amp; density contours:&lt;/strong&gt; Easily explore and distinguish between dense regions of data and outliers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;üßä &lt;strong&gt;Order-independent transparency:&lt;/strong&gt; Ensure clear, accurate rendering of overlapping points.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;üîç &lt;strong&gt;Real-time search &amp;amp; nearest neighbors:&lt;/strong&gt; Find similar data to a given query or existing data point.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;üöÄ &lt;strong&gt;WebGPU implementation (with WebGL 2 fallback):&lt;/strong&gt; Fast, smooth performance (up to few million points) with modern rendering stack.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;üìä &lt;strong&gt;Multi-coordinated views for metadata exploration:&lt;/strong&gt; Interactively link and filter data across metadata columns.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please visit &lt;a href="https://apple.github.io/embedding-atlas"&gt;https://apple.github.io/embedding-atlas&lt;/a&gt; for a demo and documentation.&lt;/p&gt; 
&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="./packages/docs/assets/embedding-atlas-dark.png" /&gt; 
 &lt;img alt="screenshot of Embedding Atlas" src="https://raw.githubusercontent.com/apple/embedding-atlas/main/packages/docs/assets/embedding-atlas-light.png" /&gt; 
&lt;/picture&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;To use Embedding Atlas with Python:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install embedding-atlas

embedding-atlas &amp;lt;your-dataset.parquet&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In addition to the command line tool, Embedding Atlas is also available as a Jupyter widget:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from embedding_atlas.widget import EmbeddingAtlasWidget

# Show the Embedding Atlas widget for your data frame:
EmbeddingAtlasWidget(df)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, components from Embedding Atlas are also available in an npm package:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install embedding-atlas
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { EmbeddingAtlas, EmbeddingView, Table } from "embedding-atlas";

// or with React:
import { EmbeddingAtlas, EmbeddingView, Table } from "embedding-atlas/react";

// or Svelte:
import { EmbeddingAtlas, EmbeddingView, Table } from "embedding-atlas/svelte";
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information, please visit &lt;a href="https://apple.github.io/embedding-atlas/overview.html"&gt;https://apple.github.io/embedding-atlas/overview.html&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;BibTeX&lt;/h2&gt; 
&lt;p&gt;For the Embedding Atlas tool:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@misc{ren2025embedding,
  title={Embedding Atlas: Low-Friction, Interactive Embedding Visualization},
  author={Donghao Ren and Fred Hohman and Halden Lin and Dominik Moritz},
  year={2025},
  eprint={2505.06386},
  archivePrefix={arXiv},
  primaryClass={cs.HC},
  url={https://arxiv.org/abs/2505.06386},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the algorithm that automatically produces clusters and labels in the embedding view:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@misc{ren2025scalable,
  title={A Scalable Approach to Clustering Embedding Projections},
  author={Donghao Ren and Fred Hohman and Dominik Moritz},
  year={2025},
  eprint={2504.07285},
  archivePrefix={arXiv},
  primaryClass={cs.HC},
  url={https://arxiv.org/abs/2504.07285},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;This repo contains multiple sub-packages:&lt;/p&gt; 
&lt;p&gt;Frontend:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/component&lt;/code&gt;: The &lt;code&gt;EmbeddingView&lt;/code&gt; and &lt;code&gt;EmbeddingViewMosaic&lt;/code&gt; components.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/table&lt;/code&gt;: The &lt;code&gt;Table&lt;/code&gt; component.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/viewer&lt;/code&gt;: The frontend application for visualizing embedding and other columns. It also provides the &lt;code&gt;EmbeddingAtlas&lt;/code&gt; component that can be embedded in other applications.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/density-clustering&lt;/code&gt;: The density clustering algorithm, written in Rust.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/umap-wasm&lt;/code&gt;: An implementation of UMAP algorithm in WebAssembly (with the &lt;a href="https://github.com/libscran/umappp"&gt;umappp&lt;/a&gt; C++ library).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/embedding-atlas&lt;/code&gt;: The &lt;code&gt;embedding-atlas&lt;/code&gt; package that get published. It imports all of the above and exposes their API in a single package.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Python:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;packages/backend&lt;/code&gt;: A Python package named &lt;code&gt;embedding-atlas&lt;/code&gt; that provides the &lt;code&gt;embedding-atlas&lt;/code&gt; command line tool.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Documentation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;packages/docs&lt;/code&gt;: The documentation website.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information, please visit &lt;a href="https://apple.github.io/embedding-atlas/develop.html"&gt;https://apple.github.io/embedding-atlas/develop.html&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This code is released under the &lt;a href="https://raw.githubusercontent.com/apple/embedding-atlas/main/LICENSE"&gt;&lt;code&gt;MIT license&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jitsi/jitsi-meet</title>
      <link>https://github.com/jitsi/jitsi-meet</link>
      <description>&lt;p&gt;Jitsi Meet - Secure, Simple and Scalable Video Conferences that you use as a standalone app or embed in your web application.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;p align="center"&gt;Jitsi Meet&lt;/p&gt;&lt;/h1&gt; 
&lt;p&gt;Jitsi Meet is a set of Open Source projects which empower users to use and deploy video conferencing platforms with state-of-the-art video quality and features.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/readme-img1.png" width="900" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Amongst others here are the main features Jitsi Meet offers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support for all current browsers&lt;/li&gt; 
 &lt;li&gt;Mobile applications&lt;/li&gt; 
 &lt;li&gt;Web and native SDKs for integration&lt;/li&gt; 
 &lt;li&gt;HD audio and video&lt;/li&gt; 
 &lt;li&gt;Content sharing&lt;/li&gt; 
 &lt;li&gt;Raise hand and reactions&lt;/li&gt; 
 &lt;li&gt;Chat with private conversations&lt;/li&gt; 
 &lt;li&gt;Polls&lt;/li&gt; 
 &lt;li&gt;Virtual backgrounds&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And many more!&lt;/p&gt; 
&lt;h2&gt;Using Jitsi Meet&lt;/h2&gt; 
&lt;p&gt;Using Jitsi Meet is straightforward, as it's browser based. Head over to &lt;a href="https://meet.jit.si"&gt;meet.jit.si&lt;/a&gt; and give it a try. It's scalable and free to use. All you need is a Google, Facebook or GitHub account in order to start a meeting. All browsers are supported!&lt;/p&gt; 
&lt;p&gt;Using mobile? No problem, you can either use your mobile web browser or our fully-featured mobile apps:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Android&lt;/th&gt; 
   &lt;th align="center"&gt;Android (F-Droid)&lt;/th&gt; 
   &lt;th align="center"&gt;iOS&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://play.google.com/store/apps/details?id=org.jitsi.meet"&gt;&lt;img src="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/resources/img/google-play-badge.png" height="50" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://f-droid.org/packages/org.jitsi.meet/"&gt;&lt;img src="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/resources/img/f-droid-badge.png" height="50" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://itunes.apple.com/us/app/jitsi-meet/id1165103905"&gt;&lt;img src="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/resources/img/appstore-badge.png" height="50" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you are feeling adventurous and want to get an early scoop of the features as they are being developed you can also sign up for our open beta testing here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://play.google.com/apps/testing/org.jitsi.meet"&gt;Android&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://testflight.apple.com/join/isy6ja7S"&gt;iOS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running your own instance&lt;/h2&gt; 
&lt;p&gt;If you'd like to run your own Jitsi Meet installation head over to the &lt;a href="https://jitsi.github.io/handbook/docs/devops-guide/"&gt;handbook&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;We provide Debian packages and a comprehensive Docker setup to make deployments as simple as possible. Advanced users also have the possibility of building all the components from source.&lt;/p&gt; 
&lt;p&gt;You can check the latest releases &lt;a href="https://jitsi.github.io/handbook/docs/releases"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Jitsi as a Service&lt;/h2&gt; 
&lt;p&gt;If you like the branding capabilities of running your own instance but you'd like to avoid dealing with the complexity of monitoring, scaling and updates, JaaS might be for you.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://jaas.8x8.vc"&gt;8x8 Jitsi as a Service (JaaS)&lt;/a&gt; is an enterprise-ready video meeting platform that allows developers, organizations and businesses to easily build and deploy video solutions. With Jitsi as a Service we now give you all the power of Jitsi running on our global platform so you can focus on building secure and branded video experiences.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;All the Jitsi Meet documentation is available in &lt;a href="https://jitsi.github.io/handbook/"&gt;the handbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;For a comprehensive description of all Jitsi Meet's security aspects, please check &lt;a href="https://jitsi.org/security"&gt;this link&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For a detailed description of Jitsi Meet's End-to-End Encryption (E2EE) implementation, please check &lt;a href="https://jitsi.org/e2ee-whitepaper/"&gt;this link&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For information on reporting security vulnerabilities in Jitsi Meet, see &lt;a href="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/SECURITY.md"&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you are looking to contribute to Jitsi Meet, first of all, thank you! Please see our &lt;a href="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/CONTRIBUTING.md"&gt;guidelines for contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;footer&gt; 
 &lt;p align="center" style="font-size: smaller;"&gt; Built with ‚ù§Ô∏è by the Jitsi team at &lt;a href="https://8x8.com" target="_blank"&gt;8x8&lt;/a&gt; and our community. &lt;/p&gt; 
&lt;/footer&gt;</description>
    </item>
    
    <item>
      <title>umami-software/umami</title>
      <link>https://github.com/umami-software/umami</link>
      <description>&lt;p&gt;Umami is a modern, privacy-focused alternative to Google Analytics.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://content.umami.is/website/images/umami-logo.png" alt="Umami Logo" width="100" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;Umami&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;i&gt;Umami is a simple, fast, privacy-focused alternative to Google Analytics.&lt;/i&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/umami-software/umami/releases"&gt; &lt;img src="https://img.shields.io/github/release/umami-software/umami.svg?sanitize=true" alt="GitHub Release" /&gt; &lt;/a&gt; &lt;a href="https://github.com/umami-software/umami/raw/master/LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/umami-software/umami.svg?sanitize=true" alt="MIT License" /&gt; &lt;/a&gt; &lt;a href="https://github.com/umami-software/umami/actions"&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/umami-software/umami/ci.yml" alt="Build Status" /&gt; &lt;/a&gt; &lt;a href="https://analytics.umami.is/share/LGazGOecbDtaIwDr/umami.is" style="text-decoration: none;"&gt; &lt;img src="https://img.shields.io/badge/Try%20Demo%20Now-Click%20Here-brightgreen" alt="Umami Demo" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üöÄ Getting Started&lt;/h2&gt; 
&lt;p&gt;A detailed getting started guide can be found at &lt;a href="https://umami.is/docs/"&gt;umami.is/docs&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üõ† Installing from Source&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;A server with Node.js version 18.18 or newer&lt;/li&gt; 
 &lt;li&gt;A database. Umami supports &lt;a href="https://www.mariadb.org/"&gt;MariaDB&lt;/a&gt; (minimum v10.5), &lt;a href="https://www.mysql.com/"&gt;MySQL&lt;/a&gt; (minimum v8.0) and &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt; (minimum v12.14) databases.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Get the Source Code and Install Packages&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/umami-software/umami.git
cd umami
npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configure Umami&lt;/h3&gt; 
&lt;p&gt;Create an &lt;code&gt;.env&lt;/code&gt; file with the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;DATABASE_URL=connection-url
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The connection URL format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;postgresql://username:mypassword@localhost:5432/mydb
mysql://username:mypassword@localhost:3306/mydb
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build the Application&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;The build step will create tables in your database if you are installing for the first time. It will also create a login user with username &lt;strong&gt;admin&lt;/strong&gt; and password &lt;strong&gt;umami&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Start the Application&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;By default, this will launch the application on &lt;code&gt;http://localhost:3000&lt;/code&gt;. You will need to either &lt;a href="https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/"&gt;proxy&lt;/a&gt; requests from your web server or change the &lt;a href="https://nextjs.org/docs/api-reference/cli#production"&gt;port&lt;/a&gt; to serve the application directly.&lt;/em&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üê≥ Installing with Docker&lt;/h2&gt; 
&lt;p&gt;To build the Umami container and start up a Postgres database, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, to pull just the Umami Docker image with PostgreSQL support:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull docker.umami.is/umami-software/umami:postgresql-latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or with MySQL support:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull docker.umami.is/umami-software/umami:mysql-latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üîÑ Getting Updates&lt;/h2&gt; 
&lt;p&gt;To get the latest features, simply do a pull, install any new dependencies, and rebuild:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git pull
npm install
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To update the Docker image, simply pull the new images and rebuild:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose pull
docker compose up --force-recreate -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üõü Support&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/umami-software/umami"&gt; &lt;img src="https://img.shields.io/badge/GitHub--blue?style=social&amp;amp;logo=github" alt="GitHub" /&gt; &lt;/a&gt; &lt;a href="https://twitter.com/umami_software"&gt; &lt;img src="https://img.shields.io/badge/Twitter--blue?style=social&amp;amp;logo=twitter" alt="Twitter" /&gt; &lt;/a&gt; &lt;a href="https://linkedin.com/company/umami-software"&gt; &lt;img src="https://img.shields.io/badge/LinkedIn--blue?style=social&amp;amp;logo=linkedin" alt="LinkedIn" /&gt; &lt;/a&gt; &lt;a href="https://umami.is/discord"&gt; &lt;img src="https://img.shields.io/badge/Discord--blue?style=social&amp;amp;logo=discord" alt="Discord" /&gt; &lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>menloresearch/jan</title>
      <link>https://github.com/menloresearch/jan</link>
      <description>&lt;p&gt;Jan is an open source alternative to ChatGPT that runs 100% offline on your computer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jan - Local AI Assistant&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/menloresearch/jan/dev/docs/src/pages/docs/_assets/jan-app.png" alt="Jan AI" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &lt;img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/menloresearch/jan" /&gt; &lt;img alt="Github Last Commit" src="https://img.shields.io/github/last-commit/menloresearch/jan" /&gt; &lt;img alt="Github Contributors" src="https://img.shields.io/github/contributors/menloresearch/jan" /&gt; &lt;img alt="GitHub closed issues" src="https://img.shields.io/github/issues-closed/menloresearch/jan" /&gt; &lt;img alt="Discord" src="https://img.shields.io/discord/1107178041848909847?label=discord" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://jan.ai/docs/quickstart"&gt;Getting Started&lt;/a&gt; - &lt;a href="https://jan.ai/docs"&gt;Docs&lt;/a&gt; - &lt;a href="https://jan.ai/changelog"&gt;Changelog&lt;/a&gt; - &lt;a href="https://github.com/menloresearch/jan/issues"&gt;Bug reports&lt;/a&gt; - &lt;a href="https://discord.gg/AsJ8krTT3N"&gt;Discord&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Jan is an AI assistant that can run 100% offline on your device. Download and run LLMs with &lt;strong&gt;full control&lt;/strong&gt; and &lt;strong&gt;privacy&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The easiest way to get started is by downloading one of the following versions for your respective operating system:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Platform&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;b&gt;Stable&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;b&gt;Nightly&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Windows&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/win-x64"&gt;jan.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/win-x64"&gt;jan.exe&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;macOS&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/mac-universal"&gt;jan.dmg&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/mac-universal"&gt;jan.dmg&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Linux (deb)&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/linux-amd64-deb"&gt;jan.deb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/linux-amd64-deb"&gt;jan.deb&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Linux (AppImage)&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/linux-amd64-appimage"&gt;jan.AppImage&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/linux-amd64-appimage"&gt;jan.AppImage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;Download from &lt;a href="https://jan.ai/"&gt;jan.ai&lt;/a&gt; or &lt;a href="https://github.com/menloresearch/jan/releases"&gt;GitHub Releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Local AI Models&lt;/strong&gt;: Download and run LLMs (Llama, Gemma, Qwen, etc.) from HuggingFace&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cloud Integration&lt;/strong&gt;: Connect to OpenAI, Anthropic, Mistral, Groq, and others&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Assistants&lt;/strong&gt;: Create specialized AI assistants for your tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OpenAI-Compatible API&lt;/strong&gt;: Local server at &lt;code&gt;localhost:1337&lt;/code&gt; for other applications&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model Context Protocol&lt;/strong&gt;: MCP integration for enhanced capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy First&lt;/strong&gt;: Everything runs locally when you want it to&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build from Source&lt;/h2&gt; 
&lt;p&gt;For those who enjoy the scenic route:&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js ‚â• 20.0.0&lt;/li&gt; 
 &lt;li&gt;Yarn ‚â• 1.22.0&lt;/li&gt; 
 &lt;li&gt;Make ‚â• 3.81&lt;/li&gt; 
 &lt;li&gt;Rust (for Tauri)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run with Make&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/menloresearch/jan
cd jan
make dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This handles everything: installs dependencies, builds core components, and launches the app.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Available make targets:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;make dev&lt;/code&gt; - Full development setup and launch&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make build&lt;/code&gt; - Production build&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make test&lt;/code&gt; - Run tests and linting&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make clean&lt;/code&gt; - Delete everything and start fresh&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run with Mise (easier)&lt;/h3&gt; 
&lt;p&gt;You can also run with &lt;a href="https://mise.jdx.dev/"&gt;mise&lt;/a&gt;, which is a bit easier as it ensures Node.js, Rust, and other dependency versions are automatically managed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/menloresearch/jan
cd jan

# Install mise (if not already installed)
curl https://mise.run | sh

# Install tools and start development
mise install    # installs Node.js, Rust, and other tools
mise dev        # runs the full development setup
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Available mise commands:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;mise dev&lt;/code&gt; - Full development setup and launch&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise build&lt;/code&gt; - Production build&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise test&lt;/code&gt; - Run tests and linting&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise clean&lt;/code&gt; - Delete everything and start fresh&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise tasks&lt;/code&gt; - List all available tasks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Manual Commands&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn install
yarn build:tauri:plugin:api
yarn build:core
yarn build:extensions
yarn dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Minimum specs for a decent experience:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: 13.6+ (8GB RAM for 3B models, 16GB for 7B, 32GB for 13B)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: 10+ with GPU support for NVIDIA/AMD/Intel Arc&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: Most distributions work, GPU acceleration available&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For detailed compatibility, check our &lt;a href="https://jan.ai/docs/desktop/mac"&gt;installation guides&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If things go sideways:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Check our &lt;a href="https://jan.ai/docs/troubleshooting"&gt;troubleshooting docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Copy your error logs and system specs&lt;/li&gt; 
 &lt;li&gt;Ask for help in our &lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt; &lt;code&gt;#üÜò|jan-help&lt;/code&gt; channel&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions welcome. See &lt;a href="https://raw.githubusercontent.com/menloresearch/jan/dev/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for the full spiel.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/docs"&gt;Documentation&lt;/a&gt; - The manual you should read&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/api-reference"&gt;API Reference&lt;/a&gt; - For the technically inclined&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/changelog"&gt;Changelog&lt;/a&gt; - What we broke and fixed&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt; - Where the community lives&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Bugs&lt;/strong&gt;: &lt;a href="https://github.com/menloresearch/jan/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Business&lt;/strong&gt;: &lt;a href="mailto:hello@jan.ai"&gt;hello@jan.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jobs&lt;/strong&gt;: &lt;a href="mailto:hr@jan.ai"&gt;hr@jan.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Discussion&lt;/strong&gt;: &lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Apache 2.0 - Because sharing is caring.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Built on the shoulders of giants:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggerganov/llama.cpp"&gt;Llama.cpp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tauri.app/"&gt;Tauri&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/scalar/scalar"&gt;Scalar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Comfy-Org/ComfyUI_frontend</title>
      <link>https://github.com/Comfy-Org/ComfyUI_frontend</link>
      <description>&lt;p&gt;Official front-end implementation of ComfyUI&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt;ComfyUI_frontend&lt;/h1&gt; 
 &lt;p&gt;&lt;strong&gt;Official front-end implementation of &lt;a href="https://github.com/comfyanonymous/ComfyUI"&gt;ComfyUI&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://www.comfy.org/"&gt;&lt;img src="https://img.shields.io/badge/ComfyOrg-4285F4?style=flat" alt="Website" /&gt;&lt;/a&gt; &lt;a href="https://www.comfy.org/discord"&gt;&lt;img src="https://img.shields.io/discord/1218270712402415686?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;label=Discord" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://app.element.io/#/room/%23comfyui_space%3Amatrix.org"&gt;&lt;img src="https://img.shields.io/badge/Matrix-000000?style=flat&amp;amp;logo=matrix&amp;amp;logoColor=white" alt="Matrix" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://github.com/Comfy-Org/ComfyUI_frontend/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/Comfy-Org/ComfyUI_frontend?style=flat&amp;amp;sort=semver" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Comfy-Org/ComfyUI_frontend/releases"&gt;&lt;img src="https://img.shields.io/github/release-date/Comfy-Org/ComfyUI_frontend?style=flat" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Comfy-Org/ComfyUI_frontend/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/Comfy-Org/ComfyUI_frontend/total?style=flat" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Comfy-Org/ComfyUI_frontend/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/Comfy-Org/ComfyUI_frontend/latest/total?style=flat&amp;amp;label=downloads%40latest" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Release Schedule&lt;/h2&gt; 
&lt;p&gt;The project follows a structured release process for each minor version, consisting of three distinct phases:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Development Phase&lt;/strong&gt; - 1 week&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Active development of new features&lt;/li&gt; 
   &lt;li&gt;Code changes merged to the development branch&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Feature Freeze&lt;/strong&gt; - 1 week&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;No new features accepted&lt;/li&gt; 
   &lt;li&gt;Only bug fixes are cherry-picked to the release branch&lt;/li&gt; 
   &lt;li&gt;Testing and stabilization of the codebase&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Publication&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Release is published at the end of the freeze period&lt;/li&gt; 
   &lt;li&gt;Version is finalized and made available to all users&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Nightly Releases&lt;/h3&gt; 
&lt;p&gt;Nightly releases are published daily at &lt;a href="https://github.com/Comfy-Org/ComfyUI_frontend/releases"&gt;https://github.com/Comfy-Org/ComfyUI_frontend/releases&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To use the latest nightly release, add the following command line argument to your ComfyUI launch script:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bat"&gt;--front-end-version Comfy-Org/ComfyUI_frontend@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Overlapping Release Cycles&lt;/h2&gt; 
&lt;p&gt;The development of successive minor versions overlaps. For example, while version 1.1 is in feature freeze, development for version 1.2 begins simultaneously.&lt;/p&gt; 
&lt;h3&gt;Example Release Cycle&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Week&lt;/th&gt; 
   &lt;th&gt;Date Range&lt;/th&gt; 
   &lt;th&gt;Version 1.1&lt;/th&gt; 
   &lt;th&gt;Version 1.2&lt;/th&gt; 
   &lt;th&gt;Version 1.3&lt;/th&gt; 
   &lt;th&gt;Patch Releases&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;Mar 1-7&lt;/td&gt; 
   &lt;td&gt;Development&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;Mar 8-14&lt;/td&gt; 
   &lt;td&gt;Feature Freeze&lt;/td&gt; 
   &lt;td&gt;Development&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;1.1.0 through 1.1.6 (daily)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;Mar 15-21&lt;/td&gt; 
   &lt;td&gt;Released&lt;/td&gt; 
   &lt;td&gt;Feature Freeze&lt;/td&gt; 
   &lt;td&gt;Development&lt;/td&gt; 
   &lt;td&gt;1.1.7 through 1.1.13 (daily)&lt;br /&gt;1.2.0 through 1.2.6 (daily)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;Mar 22-28&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Released&lt;/td&gt; 
   &lt;td&gt;Feature Freeze&lt;/td&gt; 
   &lt;td&gt;1.2.7 through 1.2.13 (daily)&lt;br /&gt;1.3.0 through 1.3.6 (daily)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Release Summary&lt;/h2&gt; 
&lt;h3&gt;Major features&lt;/h3&gt; 
&lt;details id="feature-native-translation"&gt; 
 &lt;summary&gt;v1.5: Native translation (i18n)&lt;/summary&gt; 
 &lt;p&gt;ComfyUI now includes built-in translation support, replacing the need for third-party translation extensions. Select your language in &lt;code&gt;Comfy &amp;gt; Locale &amp;gt; Language&lt;/code&gt; to translate the interface into English, Chinese (Simplified), Russian, Japanese, Korean, or Arabic. This native implementation offers better performance, reliability, and maintainability compared to previous solutions.&lt;br /&gt;&lt;/p&gt; 
 &lt;p&gt;More details available here: &lt;a href="https://blog.comfy.org/p/native-localization-support-i18n"&gt;https://blog.comfy.org/p/native-localization-support-i18n&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-mask-editor"&gt; 
 &lt;summary&gt;v1.4: New mask editor&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://github.com/Comfy-Org/ComfyUI_frontend/pull/1284"&gt;https://github.com/Comfy-Org/ComfyUI_frontend/pull/1284&lt;/a&gt; implements a new mask editor.&lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/f0ea6ee5-00ee-4e5d-a09c-6938e86a1f17" alt="image" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-integrated-server-terminal"&gt; 
 &lt;summary&gt;v1.3.22: Integrated server terminal&lt;/summary&gt; 
 &lt;p&gt;Press Ctrl + ` to toggle integrated terminal.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/eddedc6a-07a3-4a83-9475-63b3977f6d94"&gt;https://github.com/user-attachments/assets/eddedc6a-07a3-4a83-9475-63b3977f6d94&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-keybinding-customization"&gt; 
 &lt;summary&gt;v1.3.7: Keybinding customization&lt;/summary&gt; 
 &lt;h2&gt;Basic UI&lt;/h2&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/c84a1609-3880-48e0-a746-011f36beda68" alt="image" /&gt;&lt;/p&gt; 
 &lt;h2&gt;Reset button&lt;/h2&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/4d2922da-bb4f-4f90-8017-a8e4a0db07c7" alt="image" /&gt;&lt;/p&gt; 
 &lt;h2&gt;Edit Keybinding&lt;/h2&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/77626b7a-cb46-48f8-9465-e03120aac66a" alt="image" /&gt; &lt;img src="https://github.com/user-attachments/assets/79131a4e-75c6-4715-bd11-c6aaed887779" alt="image" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/a3984ed9-eb28-4d47-86c0-7fc3efc2b5d0"&gt;rec.webm&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-node-library-sidebar"&gt; 
 &lt;summary&gt;v1.2.4: Node library sidebar tab&lt;/summary&gt; 
 &lt;h4&gt;Drag &amp;amp; Drop&lt;/h4&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/853e20b7-bc0e-49c9-bbce-a2ba7566f92f"&gt;https://github.com/user-attachments/assets/853e20b7-bc0e-49c9-bbce-a2ba7566f92f&lt;/a&gt;&lt;/p&gt; 
 &lt;h4&gt;Filter&lt;/h4&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/4bbca3ee-318f-4cf0-be32-a5a5541066cf"&gt;https://github.com/user-attachments/assets/4bbca3ee-318f-4cf0-be32-a5a5541066cf&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-queue-sidebar"&gt; 
 &lt;summary&gt;v1.2.0: Queue/History sidebar tab&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/86e264fe-4d26-4f07-aa9a-83bdd2d02b8f"&gt;https://github.com/user-attachments/assets/86e264fe-4d26-4f07-aa9a-83bdd2d02b8f&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-node-search"&gt; 
 &lt;summary&gt;v1.1.0: Node search box&lt;/summary&gt; 
 &lt;h4&gt;Fuzzy search &amp;amp; Node preview&lt;/h4&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/94733e32-ea4e-4a9c-b321-c1a05db48709" alt="image" /&gt;&lt;/p&gt; 
 &lt;h4&gt;Release link with shift&lt;/h4&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/a1b2b5c3-10d1-4256-b620-345de6858f25"&gt;https://github.com/user-attachments/assets/a1b2b5c3-10d1-4256-b620-345de6858f25&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;QoL changes&lt;/h3&gt; 
&lt;details id="feature-nested-group"&gt; 
 &lt;summary&gt;v1.3.32: **Litegraph** Nested group&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/f51adeb1-028e-40af-81e4-0ac13075198a"&gt;https://github.com/user-attachments/assets/f51adeb1-028e-40af-81e4-0ac13075198a&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-group-selection"&gt; 
 &lt;summary&gt;v1.3.24: **Litegraph** Group selection&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/e6230a94-411e-4fba-90cb-6c694200adaa"&gt;https://github.com/user-attachments/assets/e6230a94-411e-4fba-90cb-6c694200adaa&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-toggle-link-visibility"&gt; 
 &lt;summary&gt;v1.3.6: **Litegraph** Toggle link visibility&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/34e460ac-fbbc-44ef-bfbb-99a84c2ae2be"&gt;rec.webm&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-auto-widget-conversion"&gt; 
 &lt;summary&gt;v1.3.4: **Litegraph** Auto widget to input conversion&lt;/summary&gt; 
 &lt;p&gt;Dropping a link of correct type on node widget will automatically convert the widget to input.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/15cea0b0-b225-4bec-af50-2cdb16dc46bf"&gt;rec.webm&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-pan-mode"&gt; 
 &lt;summary&gt;v1.3.4: **Litegraph** Canvas pan mode&lt;/summary&gt; 
 &lt;p&gt;The canvas becomes readonly in pan mode. Pan mode is activated by clicking the pan mode button on the canvas menu or by holding the space key.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/c7872532-a2ac-44c1-9e7d-9e03b5d1a80b"&gt;rec.webm&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-shift-drag-link-creation"&gt; 
 &lt;summary&gt;v1.3.1: **Litegraph** Shift drag link to create a new link&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/7e73aaf9-79e2-4c3c-a26a-911cba3b85e4"&gt;rec.webm&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-optional-input-donuts"&gt; 
 &lt;summary&gt;v1.2.62: **Litegraph** Show optional input slots as donuts&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/e6cde0b6-654b-4afd-a117-133657a410b1" alt="GYEIRidb0AYGO-v" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-group-title-edit"&gt; 
 &lt;summary&gt;v1.2.44: **Litegraph** Double click group title to edit&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/5bf0e2b6-8b3a-40a7-b44f-f0879e9ad26f"&gt;https://github.com/user-attachments/assets/5bf0e2b6-8b3a-40a7-b44f-f0879e9ad26f&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-group-selection-shortcut"&gt; 
 &lt;summary&gt;v1.2.39: **Litegraph** Group selected nodes with Ctrl + G&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/7805dc54-0854-4a28-8bcd-4b007fa01151"&gt;https://github.com/user-attachments/assets/7805dc54-0854-4a28-8bcd-4b007fa01151&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-node-title-edit"&gt; 
 &lt;summary&gt;v1.2.38: **Litegraph** Double click node title to edit&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/d61d5d0e-f200-4153-b293-3e3f6a212b30"&gt;https://github.com/user-attachments/assets/d61d5d0e-f200-4153-b293-3e3f6a212b30&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-drag-multi-link"&gt; 
 &lt;summary&gt;v1.2.7: **Litegraph** drags multiple links with shift pressed&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/68826715-bb55-4b2a-be6e-675cfc424afe"&gt;https://github.com/user-attachments/assets/68826715-bb55-4b2a-be6e-675cfc424afe&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/c142c43f-2fe9-4030-8196-b3bfd4c6977d"&gt;https://github.com/user-attachments/assets/c142c43f-2fe9-4030-8196-b3bfd4c6977d&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-auto-connect-link"&gt; 
 &lt;summary&gt;v1.2.2: **Litegraph** auto connects to correct slot&lt;/summary&gt; 
 &lt;h4&gt;Before&lt;/h4&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/c253f778-82d5-4e6f-aec0-ea2ccf421651"&gt;https://github.com/user-attachments/assets/c253f778-82d5-4e6f-aec0-ea2ccf421651&lt;/a&gt;&lt;/p&gt; 
 &lt;h4&gt;After&lt;/h4&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/b6360ac0-f0d2-447c-9daa-8a2e20c0dc1d"&gt;https://github.com/user-attachments/assets/b6360ac0-f0d2-447c-9daa-8a2e20c0dc1d&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="feature-hide-text-overflow"&gt; 
 &lt;summary&gt;v1.1.8: **Litegraph** hides text overflow on widget value&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/5696a89d-4a47-4fcc-9e8c-71e1264943f2"&gt;https://github.com/user-attachments/assets/5696a89d-4a47-4fcc-9e8c-71e1264943f2&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Developer APIs&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;v1.6.13: prompt/confirm/alert replacements for ComfyUI desktop&lt;/summary&gt; 
 &lt;p&gt;Several browser-only APIs are not available in ComfyUI desktop's electron environment.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;window.prompt&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;window.confirm&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;window.alert&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Please use the following APIs as replacements.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-js"&gt;// window.prompt
window['app'].extensionManager.dialog
  .prompt({
    title: 'Test Prompt',
    message: 'Test Prompt Message'
  })
  .then((value: string) =&amp;gt; {
    // Do something with the value user entered
  })
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/c73f74d0-9bb4-4555-8d56-83f1be4a1d7e" alt="image" /&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-js"&gt;// window.confirm
window['app'].extensionManager.dialog
  .confirm({
    title: 'Test Confirm',
    message: 'Test Confirm Message'
  })
  .then((value: boolean) =&amp;gt; {
    // Do something with the value user entered
  })
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/8dec7a42-7443-4245-85be-ceefb1116e96" alt="image" /&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-js"&gt;// window.alert
window['app'].extensionManager.toast
  .addAlert("Test Alert")
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/9b18bdca-76ef-4432-95de-5cd2369684f2" alt="image" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;v1.3.34: Register about panel badges&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-js"&gt;app.registerExtension({
  name: 'TestExtension1',
  aboutPageBadges: [
    {
      label: 'Test Badge',
      url: 'https://example.com',
      icon: 'pi pi-box'
    }
  ]
})
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/099e77ee-16ad-4141-b2fc-5e9d5075188b" alt="image" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="extension-api-bottom-panel-tabs"&gt; 
 &lt;summary&gt;v1.3.22: Register bottom panel tabs&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-js"&gt;app.registerExtension({
  name: 'TestExtension',
  bottomPanelTabs: [
    {
      id: 'TestTab',
      title: 'Test Tab',
      type: 'custom',
      render: (el) =&amp;gt; {
        el.innerHTML = '&amp;lt;div&amp;gt;Custom tab&amp;lt;/div&amp;gt;'
      }
    }
  ]
})
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/2114f8b8-2f55-414b-b027-78e61c870b64" alt="image" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="extension-api-settings"&gt; 
 &lt;summary&gt;v1.3.22: New settings API&lt;/summary&gt; 
 &lt;p&gt;Legacy settings API.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-js"&gt;// Register a new setting
app.ui.settings.addSetting({
  id: 'TestSetting',
  name: 'Test Setting',
  type: 'text',
  defaultValue: 'Hello, world!'
})

// Get the value of a setting
const value = app.ui.settings.getSettingValue('TestSetting')

// Set the value of a setting
app.ui.settings.setSettingValue('TestSetting', 'Hello, universe!')
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;New settings API.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-js"&gt;// Register a new setting
app.registerExtension({
  name: 'TestExtension1',
  settings: [
    {
      id: 'TestSetting',
      name: 'Test Setting',
      type: 'text',
      defaultValue: 'Hello, world!'
    }
  ]
})

// Get the value of a setting
const value = app.extensionManager.setting.get('TestSetting')

// Set the value of a setting
app.extensionManager.setting.set('TestSetting', 'Hello, universe!')
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details id="extension-api-commands-keybindings"&gt; 
 &lt;summary&gt;v1.3.7: Register commands and keybindings&lt;/summary&gt; 
 &lt;p&gt;Extensions can call the following API to register commands and keybindings. Do note that keybindings defined in core cannot be overwritten, and some keybindings are reserved by the browser.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-js"&gt;  app.registerExtension({
    name: 'TestExtension1',
    commands: [
      {
        id: 'TestCommand',
        function: () =&amp;gt; {
          alert('TestCommand')
        }
      }
    ],
    keybindings: [
      {
        combo: { key: 'k' },
        commandId: 'TestCommand'
      }
    ]
  })
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details id="extension-api-topbar-menu"&gt; 
 &lt;summary&gt;v1.3.1: Extension API to register custom topbar menu items&lt;/summary&gt; 
 &lt;p&gt;Extensions can call the following API to register custom topbar menu items.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-js"&gt;  app.registerExtension({
    name: 'TestExtension1',
    commands: [
      {
        id: 'foo-id',
        label: 'foo',
        function: () =&amp;gt; {
          alert(1)
        }
      }
    ],
    menuCommands: [
      {
        path: ['ext', 'ext2'],
        commands: ['foo-id']
      }
    ]
  })
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/ae7b082f-7ce9-4549-a446-4563567102fe" alt="image" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="extension-api-toast"&gt; 
 &lt;summary&gt;v1.2.27: Extension API to add toast message&lt;/summary&gt;i 
 &lt;p&gt;Extensions can call the following API to add toast messages.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-js"&gt;  app.extensionManager.toast.add({
    severity: 'info',
    summary: 'Loaded!',
    detail: 'Extension loaded!',
    life: 3000
  })
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Documentation of all supported options can be found here: &lt;a href="https://primevue.org/toast/#api.toast.interfaces.ToastMessageOptions"&gt;https://primevue.org/toast/#api.toast.interfaces.ToastMessageOptions&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/de02cd7e-cd81-43d1-a0b0-bccef92ff487" alt="image" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="extension-api-sidebar-tab"&gt; 
 &lt;summary&gt;v1.2.4: Extension API to register custom sidebar tab&lt;/summary&gt; 
 &lt;p&gt;Extensions now can call the following API to register a sidebar tab.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-js"&gt;  app.extensionManager.registerSidebarTab({
    id: "search",
    icon: "pi pi-search",
    title: "search",
    tooltip: "search",
    type: "custom",
    render: (el) =&amp;gt; {
      el.innerHTML = "&amp;lt;div&amp;gt;Custom search tab&amp;lt;/div&amp;gt;";
    },
  });
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The list of supported icons can be found here: &lt;a href="https://primevue.org/icons/#list"&gt;https://primevue.org/icons/#list&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;We will support custom icons later.&lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/7bff028a-bf91-4cab-bf97-55c243b3f5e0" alt="image" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details id="extension-api-selection-toolbox"&gt; 
 &lt;summary&gt;v1.10.9: Selection Toolbox API&lt;/summary&gt; 
 &lt;p&gt;Extensions can register commands that appear in the selection toolbox when specific items are selected on the canvas.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-js"&gt;app.registerExtension({
  name: 'TestExtension1',
  commands: [
    {
      id: 'test.selection.command',
      label: 'Test Command',
      icon: 'pi pi-star',
      function: () =&amp;gt; {
        // Command logic here
      }
    }
  ],
  // Return an array of command IDs to show in the selection toolbox
  // when an item is selected
  getSelectionToolboxCommands: (selectedItem) =&amp;gt; ['test.selection.command']
})
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The selection toolbox will display the command button when items are selected: &lt;img src="https://github.com/user-attachments/assets/28d91267-c0a9-4bd5-a7c4-36e8ec44c9bd" alt="Image" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions to ComfyUI Frontend! Please see our &lt;a href="https://raw.githubusercontent.com/Comfy-Org/ComfyUI_frontend/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ways to contribute (code, documentation, testing, community support)&lt;/li&gt; 
 &lt;li&gt;Development setup and workflow&lt;/li&gt; 
 &lt;li&gt;Code style guidelines&lt;/li&gt; 
 &lt;li&gt;Testing requirements&lt;/li&gt; 
 &lt;li&gt;How to submit pull requests&lt;/li&gt; 
 &lt;li&gt;Backporting fixes to release branches&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;For detailed development setup, testing procedures, and technical information, please refer to &lt;a href="https://raw.githubusercontent.com/Comfy-Org/ComfyUI_frontend/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;i18n&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/Comfy-Org/ComfyUI_frontend/main/src/locales/README.md"&gt;locales/README.md&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;For comprehensive troubleshooting and technical support, please refer to our official documentation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.comfy.org/troubleshooting/overview"&gt;General Troubleshooting Guide&lt;/a&gt;&lt;/strong&gt; - Common issues, performance optimization, and reporting bugs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.comfy.org/troubleshooting/custom-node-issues"&gt;Custom Node Issues&lt;/a&gt;&lt;/strong&gt; - Debugging custom node problems and conflicts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.comfy.org/installation/desktop/windows"&gt;Desktop Installation Guide&lt;/a&gt;&lt;/strong&gt; - Desktop-specific installation and troubleshooting&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>bytedance/UI-TARS-desktop</title>
      <link>https://github.com/bytedance/UI-TARS-desktop</link>
      <description>&lt;p&gt;The Open-sourced Multimodal AI Agent Stack connecting Cutting-edge AI Models and Agent Infra.&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;img alt="Agent TARS Banner" src="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/images/tars.png" /&gt; 
&lt;/picture&gt; 
&lt;br /&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/README.zh-CN.md"&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://trendshift.io/repositories/13584"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13584" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;TARS&lt;sup&gt;*&lt;/sup&gt;&lt;/b&gt; is a Multimodal AI Agent stack, currently shipping two projects: &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#agent-tars"&gt;Agent TARS&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#ui-tars-desktop"&gt;UI-TARS-desktop&lt;/a&gt;:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th width="50%" align="center"&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#agent-tars"&gt;Agent TARS&lt;/a&gt;&lt;/th&gt; 
   &lt;th width="50%" align="center"&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#ui-tars-desktop"&gt;UI-TARS-desktop&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/c9489936-afdc-4d12-adda-d4b90d2a869d" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/e0914ce9-ad33-494b-bdec-0c25c1b01a27" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt; &lt;b&gt;Agent TARS&lt;/b&gt; is a general multimodal AI Agent stack, it brings the power of GUI Agent and Vision into your terminal, computer, browser and product. &lt;br /&gt; &lt;br /&gt; It primarily ships with a &lt;a href="https://agent-tars.com/guide/basic/cli.html" target="_blank"&gt;CLI&lt;/a&gt; and &lt;a href="https://agent-tars.com/guide/basic/web-ui.html" target="_blank"&gt;Web UI&lt;/a&gt; for usage. It aims to provide a workflow that is closer to human-like task completion through cutting-edge multimodal LLMs and seamless integration with various real-world &lt;a href="https://agent-tars.com/guide/basic/mcp.html" target="_blank"&gt;MCP&lt;/a&gt; tools. &lt;/td&gt; 
   &lt;td align="left"&gt; &lt;b&gt;UI-TARS Desktop&lt;/b&gt; is a desktop application that provides a native GUI Agent based on the &lt;a href="https://github.com/bytedance/UI-TARS" target="_blank"&gt;UI-TARS&lt;/a&gt; model. &lt;br /&gt; &lt;br /&gt; It primarily ships a &lt;a href="https://github.com/bytedance/UI-TARS-desktop/raw/main/docs/quick-start.md#get-model-and-run-local-operator" target="_blank"&gt;local&lt;/a&gt; and &lt;a href="https://github.com/bytedance/UI-TARS-desktop/raw/main/docs/quick-start.md#run-remote-operator" target="_blank"&gt;remote&lt;/a&gt; computer as well as browser operators. &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#news"&gt;News&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#agent-tars"&gt;Agent TARS&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#showcase"&gt;Showcase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#core-features"&gt;Core Features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#ui-tars-desktop"&gt;UI-TARS Desktop&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#showcase-1"&gt;Showcase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#quick-start-1"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#citation"&gt;Citation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;News&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-06-25]&lt;/strong&gt; We released a Agent TARS Beta and Agent TARS CLI - &lt;a href="https://agent-tars.com/blog/2025-06-25-introducing-agent-tars-beta.html"&gt;Introducing Agent TARS Beta&lt;/a&gt;, a multimodal AI agent that aims to explore a work form that is closer to human-like task completion through rich multimodal capabilities (such as GUI Agent, Vision) and seamless integration with various real-world tools.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-06-12]&lt;/strong&gt; - üéÅ We are thrilled to announce the release of UI-TARS Desktop v0.2.0! This update introduces two powerful new features: &lt;strong&gt;Remote Computer Operator&lt;/strong&gt; and &lt;strong&gt;Remote Browser Operator&lt;/strong&gt;‚Äîboth completely free. No configuration required: simply click to remotely control any computer or browser, and experience a new level of convenience and intelligence.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-04-17]&lt;/strong&gt; - üéâ We're thrilled to announce the release of new UI-TARS Desktop application v0.1.0, featuring a redesigned Agent UI. The application enhances the computer using experience, introduces new browser operation features, and supports &lt;a href="https://seed-tars.com/1.5"&gt;the advanced UI-TARS-1.5 model&lt;/a&gt; for improved performance and precise control.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-02-20]&lt;/strong&gt; - üì¶ Introduced &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/sdk.md"&gt;UI TARS SDK&lt;/a&gt;, is a powerful cross-platform toolkit for building GUI automation agents.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-01-23]&lt;/strong&gt; - üöÄ We updated the &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/deployment.md#cloud-deployment"&gt;Cloud Deployment&lt;/a&gt;&lt;/strong&gt; section in the ‰∏≠ÊñáÁâà: &lt;a href="https://bytedance.sg.larkoffice.com/docx/TCcudYwyIox5vyxiSDLlgIsTgWf#U94rdCxzBoJMLex38NPlHL21gNb"&gt;GUIÊ®°ÂûãÈÉ®ÁΩ≤ÊïôÁ®ã&lt;/a&gt; with new information related to the ModelScope platform. You can now use the ModelScope platform for deployment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;Agent TARS&lt;/h2&gt; 
&lt;p&gt; &lt;a href="https://npmjs.com/package/@agent-tars/cli?activeTab=readme"&gt;&lt;img src="https://img.shields.io/npm/v/@agent-tars/cli?style=for-the-badge&amp;amp;colorA=1a1a2e&amp;amp;colorB=3B82F6&amp;amp;logo=npm&amp;amp;logoColor=white" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://npmcharts.com/compare/@agent-tars/cli?minimal=true"&gt;&lt;img src="https://img.shields.io/npm/dm/@agent-tars/cli.svg?style=for-the-badge&amp;amp;colorA=1a1a2e&amp;amp;colorB=0EA5E9&amp;amp;logo=npm&amp;amp;logoColor=white" alt="downloads" /&gt;&lt;/a&gt; &lt;a href="https://nodejs.org/en/about/previous-releases"&gt;&lt;img src="https://img.shields.io/node/v/@agent-tars/cli.svg?style=for-the-badge&amp;amp;colorA=1a1a2e&amp;amp;colorB=06B6D4&amp;amp;logo=node.js&amp;amp;logoColor=white" alt="node version" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/HnKcSBgTVx"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join%20Community-5865F2?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord Community" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/agent_tars"&gt;&lt;img src="https://img.shields.io/badge/Twitter-Follow%20%40agent__tars-1DA1F2?style=for-the-badge&amp;amp;logo=twitter&amp;amp;logoColor=white" alt="Official Twitter" /&gt;&lt;/a&gt; &lt;a href="https://applink.larkoffice.com/client/chat/chatter/add_by_link?link_token=279h3365-b0fa-407f-89f3-0f96f36cd4d8"&gt;&lt;img src="https://img.shields.io/badge/È£û‰π¶Áæ§-Âä†ÂÖ•‰∫§ÊµÅÁæ§-00D4AA?style=for-the-badge&amp;amp;logo=lark&amp;amp;logoColor=white" alt="È£û‰π¶‰∫§ÊµÅÁæ§" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/bytedance/UI-TARS-desktop"&gt;&lt;img src="https://img.shields.io/badge/DeepWiki-Ask%20AI-8B5CF6?style=for-the-badge&amp;amp;logo=gitbook&amp;amp;logoColor=white" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;b&gt;Agent TARS&lt;/b&gt; is a general multimodal AI Agent stack, it brings the power of GUI Agent and Vision into your terminal, computer, browser and product. &lt;br /&gt; &lt;br /&gt; It primarily ships with a &lt;a href="https://agent-tars.com/guide/basic/cli.html" target="_blank"&gt;CLI&lt;/a&gt; and &lt;a href="https://agent-tars.com/guide/basic/web-ui.html" target="_blank"&gt;Web UI&lt;/a&gt; for usage. It aims to provide a workflow that is closer to human-like task completion through cutting-edge multimodal LLMs and seamless integration with various real-world &lt;a href="https://agent-tars.com/guide/basic/mcp.html" target="_blank"&gt;MCP&lt;/a&gt; tools.&lt;/p&gt; 
&lt;h3&gt;Showcase&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;Please help me book the earliest flight from San Jose to New York on September 1st and the last return flight on September 6th on Priceline
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/772b0eef-aef7-4ab9-8cb0-9611820539d8"&gt;https://github.com/user-attachments/assets/772b0eef-aef7-4ab9-8cb0-9611820539d8&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th width="50%" align="center"&gt;Booking Hotel&lt;/th&gt; 
   &lt;th width="50%" align="center"&gt;Generate Chart with extra MCP Servers&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/c9489936-afdc-4d12-adda-d4b90d2a869d" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/a9fd72d0-01bb-4233-aa27-ca95194bbce9" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt; &lt;b&gt;Instruction:&lt;/b&gt; &lt;i&gt;I am in Los Angeles from September 1st to September 6th, with a budget of $5,000. Please help me book a Ritz-Carlton hotel closest to the airport on booking.com and compile a transportation guide for me&lt;/i&gt; &lt;/td&gt; 
   &lt;td align="left"&gt; &lt;b&gt;Instruction:&lt;/b&gt; &lt;i&gt;Draw me a chart of Hangzhou's weather for one month&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;For more use cases, please check out &lt;a href="https://github.com/bytedance/UI-TARS-desktop/issues/842"&gt;#842&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Core Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üñ±Ô∏è &lt;strong&gt;One-Click Out-of-the-box CLI&lt;/strong&gt; - Supports both &lt;strong&gt;headful&lt;/strong&gt; &lt;a href="https://agent-tars.com/guide/basic/web-ui.html"&gt;Web UI&lt;/a&gt; and &lt;strong&gt;headless&lt;/strong&gt; &lt;a href="https://agent-tars.com/guide/advanced/server.html"&gt;server&lt;/a&gt;) &lt;a href="https://agent-tars.com/guide/basic/cli.html"&gt;execution&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;üåê &lt;strong&gt;Hybrid Browser Agent&lt;/strong&gt; - Control browsers using &lt;a href="https://agent-tars.com/guide/basic/browser.html#visual-grounding"&gt;GUI Agent&lt;/a&gt;, &lt;a href="https://agent-tars.com/guide/basic/browser.html#dom"&gt;DOM&lt;/a&gt;, or a hybrid strategy.&lt;/li&gt; 
 &lt;li&gt;üîÑ &lt;strong&gt;Event Stream&lt;/strong&gt; - Protocol-driven Event Stream drives &lt;a href="https://agent-tars.com/beta#context-engineering"&gt;Context Engineering&lt;/a&gt; and &lt;a href="https://agent-tars.com/blog/2025-06-25-introducing-agent-tars-beta.html#easy-to-build-applications"&gt;Agent UI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;üß∞ &lt;strong&gt;MCP Integration&lt;/strong&gt; - The kernel is built on MCP and also supports mounting &lt;a href="https://agent-tars.com/guide/basic/mcp.html"&gt;MCP Servers&lt;/a&gt; to connect to real-world tools.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;img alt="Agent TARS CLI" src="https://agent-tars.com/agent-tars-cli.png" /&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Luanch with `npx`.
npx @agent-tars/cli@latest

# Install globally, required Node.js &amp;gt;= 22
npm install @agent-tars/cli@latest -g

# Run with your preferred model provider
agent-tars --provider volcengine --model doubao-1-5-thinking-vision-pro-250428 --apiKey your-api-key
agent-tars --provider anthropic --model claude-3-7-sonnet-latest --apiKey your-api-key
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Visit the comprehensive &lt;a href="https://agent-tars.com/guide/get-started/quick-start.html"&gt;Quick Start&lt;/a&gt; guide for detailed setup instructions.&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üåü &lt;strong&gt;Explore Agent TARS Universe&lt;/strong&gt; üåü&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th width="20%" align="center"&gt;Category&lt;/th&gt; 
   &lt;th width="30%" align="center"&gt;Resource Link&lt;/th&gt; 
   &lt;th width="50%" align="left"&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;üè† &lt;strong&gt;Central Hub&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com"&gt; &lt;img src="https://img.shields.io/badge/Visit-Website-4F46E5?style=for-the-badge&amp;amp;logo=globe&amp;amp;logoColor=white" alt="Website" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Your gateway to Agent TARS ecosystem&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;üìö &lt;strong&gt;Quick Start&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/guide/get-started/quick-start.html"&gt; &lt;img src="https://img.shields.io/badge/Get-Started-06B6D4?style=for-the-badge&amp;amp;logo=rocket&amp;amp;logoColor=white" alt="Quick Start" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Zero to hero in 5 minutes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;üöÄ &lt;strong&gt;What's New&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/beta"&gt; &lt;img src="https://img.shields.io/badge/Read-Blog-F59E0B?style=for-the-badge&amp;amp;logo=rss&amp;amp;logoColor=white" alt="Blog" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Discover cutting-edge features &amp;amp; vision&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;üõ†Ô∏è &lt;strong&gt;Developer Zone&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/guide/get-started/introduction.html"&gt; &lt;img src="https://img.shields.io/badge/View-Docs-10B981?style=for-the-badge&amp;amp;logo=gitbook&amp;amp;logoColor=white" alt="Docs" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Master every command &amp;amp; features&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;üéØ &lt;strong&gt;Showcase&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/bytedance/UI-TARS-desktop/issues/842"&gt; &lt;img src="https://img.shields.io/badge/View-Examples-8B5CF6?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="Examples" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;View use cases built by the official and community&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;üîß &lt;strong&gt;Reference&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/api/"&gt; &lt;img src="https://img.shields.io/badge/API-Reference-EF4444?style=for-the-badge&amp;amp;logo=book&amp;amp;logoColor=white" alt="API" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Complete technical reference&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;UI-TARS Desktop&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img alt="UI-TARS" width="260" src="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/apps/ui-tars/resources/icon.png" /&gt; &lt;/p&gt; 
&lt;p&gt;UI-TARS Desktop is a native GUI agent driven by &lt;a href="https://github.com/bytedance/UI-TARS"&gt;UI-TARS&lt;/a&gt; and Seed-1.5-VL/1.6 series models, available on your local computer and remote VM sandbox on cloud.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt; &amp;nbsp;&amp;nbsp; üìë &lt;a href="https://arxiv.org/abs/2501.12326"&gt;Paper&lt;/a&gt; &amp;nbsp;&amp;nbsp; | ü§ó &lt;a href="https://huggingface.co/ByteDance-Seed/UI-TARS-1.5-7B"&gt;Hugging Face Models&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;ü´® &lt;a href="https://discord.gg/pTXwYVjfcs"&gt;Discord&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;ü§ñ &lt;a href="https://www.modelscope.cn/collections/UI-TARS-bccb56fa1ef640"&gt;ModelScope&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;br /&gt; üñ•Ô∏è Desktop Application &amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp; üëì &lt;a href="https://github.com/web-infra-dev/midscene"&gt;Midscene (use in browser)&lt;/a&gt; &amp;nbsp;&amp;nbsp; &lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;Showcase&lt;/h3&gt; 
&lt;!-- // FIXME: Choose only two demo, one local computer and one remote computer showcase. --&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Instruction&lt;/th&gt; 
   &lt;th align="center"&gt;Local Operator&lt;/th&gt; 
   &lt;th align="center"&gt;Remote Operator&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Please help me open the autosave feature of VS Code and delay AutoSave operations for 500 milliseconds in the VS Code setting.&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/e0914ce9-ad33-494b-bdec-0c25c1b01a27" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/01e49b69-7070-46c8-b3e3-2aaaaec71800" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Could you help me check the latest open issue of the UI-TARS-Desktop project on GitHub?&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/3d159f54-d24a-4268-96c0-e149607e9199" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/072fb72d-7394-4bfa-95f5-4736e29f7e58" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;ü§ñ Natural language control powered by Vision-Language Model&lt;/li&gt; 
 &lt;li&gt;üñ•Ô∏è Screenshot and visual recognition support&lt;/li&gt; 
 &lt;li&gt;üéØ Precise mouse and keyboard control&lt;/li&gt; 
 &lt;li&gt;üíª Cross-platform support (Windows/MacOS/Browser)&lt;/li&gt; 
 &lt;li&gt;üîÑ Real-time feedback and status display&lt;/li&gt; 
 &lt;li&gt;üîê Private and secure - fully local processing&lt;/li&gt; 
 &lt;li&gt;üõ†Ô∏è Effortless setup and intuitive remote operators&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/quick-start.md"&gt;Quick Start&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the Apache License 2.0.&lt;/p&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;If you find our paper and code useful in your research, please consider giving a star &lt;span&gt;‚≠ê&lt;/span&gt; and citation &lt;span&gt;üìù&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-BibTeX"&gt;@article{qin2025ui,
  title={UI-TARS: Pioneering Automated GUI Interaction with Native Agents},
  author={Qin, Yujia and Ye, Yining and Fang, Junjie and Wang, Haoming and Liang, Shihao and Tian, Shizuo and Zhang, Junda and Li, Jiahao and Li, Yunxin and Huang, Shijue and others},
  journal={arXiv preprint arXiv:2501.12326},
  year={2025}
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>actions/checkout</title>
      <link>https://github.com/actions/checkout</link>
      <description>&lt;p&gt;Action for checking out a repo&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/actions/checkout/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/actions/checkout/actions/workflows/test.yml/badge.svg?sanitize=true" alt="Build and Test" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Checkout V5&lt;/h1&gt; 
&lt;h2&gt;What's new&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Updated to the node24 runtime 
  &lt;ul&gt; 
   &lt;li&gt;This requires a minimum Actions Runner version of &lt;a href="https://github.com/actions/runner/releases/tag/v2.327.1"&gt;v2.327.1&lt;/a&gt; to run.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Checkout V4&lt;/h1&gt; 
&lt;p&gt;This action checks-out your repository under &lt;code&gt;$GITHUB_WORKSPACE&lt;/code&gt;, so your workflow can access it.&lt;/p&gt; 
&lt;p&gt;Only a single commit is fetched by default, for the ref/SHA that triggered the workflow. Set &lt;code&gt;fetch-depth: 0&lt;/code&gt; to fetch all history for all branches and tags. Refer &lt;a href="https://docs.github.com/actions/using-workflows/events-that-trigger-workflows"&gt;here&lt;/a&gt; to learn which commit &lt;code&gt;$GITHUB_SHA&lt;/code&gt; points to for different events.&lt;/p&gt; 
&lt;p&gt;The auth token is persisted in the local git config. This enables your scripts to run authenticated git commands. The token is removed during post-job cleanup. Set &lt;code&gt;persist-credentials: false&lt;/code&gt; to opt-out.&lt;/p&gt; 
&lt;p&gt;When Git 2.18 or higher is not in your PATH, falls back to the REST API to download the files.&lt;/p&gt; 
&lt;h3&gt;Note&lt;/h3&gt; 
&lt;p&gt;Thank you for your interest in this GitHub action, however, right now we are not taking contributions.&lt;/p&gt; 
&lt;p&gt;We continue to focus our resources on strategic areas that help our customers be successful while making developers' lives easier. While GitHub Actions remains a key part of this vision, we are allocating resources towards other areas of Actions and are not taking contributions to this repository at this time. The GitHub public roadmap is the best place to follow along for any updates on features we‚Äôre working on and what stage they‚Äôre in.&lt;/p&gt; 
&lt;p&gt;We are taking the following steps to better direct requests related to GitHub Actions, including:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;We will be directing questions and support requests to our &lt;a href="https://github.com/orgs/community/discussions/categories/actions"&gt;Community Discussions area&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;High Priority bugs can be reported through Community Discussions or you can report these to our support team &lt;a href="https://support.github.com/contact/bug-report"&gt;https://support.github.com/contact/bug-report&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Security Issues should be handled as per our &lt;a href="https://raw.githubusercontent.com/actions/checkout/main/security.md"&gt;security.md&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We will still provide security updates for this project and fix major breaking changes during this time.&lt;/p&gt; 
&lt;p&gt;You are welcome to still raise bugs in this repo.&lt;/p&gt; 
&lt;h1&gt;What's new&lt;/h1&gt; 
&lt;p&gt;Please refer to the &lt;a href="https://github.com/actions/checkout/releases/latest"&gt;release page&lt;/a&gt; for the latest release notes.&lt;/p&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;!-- start usage --&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- uses: actions/checkout@v5
  with:
    # Repository name with owner. For example, actions/checkout
    # Default: ${{ github.repository }}
    repository: ''

    # The branch, tag or SHA to checkout. When checking out the repository that
    # triggered a workflow, this defaults to the reference or SHA for that event.
    # Otherwise, uses the default branch.
    ref: ''

    # Personal access token (PAT) used to fetch the repository. The PAT is configured
    # with the local git config, which enables your scripts to run authenticated git
    # commands. The post-job step removes the PAT.
    #
    # We recommend using a service account with the least permissions necessary. Also
    # when generating a new PAT, select the least scopes necessary.
    #
    # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    #
    # Default: ${{ github.token }}
    token: ''

    # SSH key used to fetch the repository. The SSH key is configured with the local
    # git config, which enables your scripts to run authenticated git commands. The
    # post-job step removes the SSH key.
    #
    # We recommend using a service account with the least permissions necessary.
    #
    # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    ssh-key: ''

    # Known hosts in addition to the user and global host key database. The public SSH
    # keys for a host may be obtained using the utility `ssh-keyscan`. For example,
    # `ssh-keyscan github.com`. The public key for github.com is always implicitly
    # added.
    ssh-known-hosts: ''

    # Whether to perform strict host key checking. When true, adds the options
    # `StrictHostKeyChecking=yes` and `CheckHostIP=no` to the SSH command line. Use
    # the input `ssh-known-hosts` to configure additional hosts.
    # Default: true
    ssh-strict: ''

    # The user to use when connecting to the remote SSH host. By default 'git' is
    # used.
    # Default: git
    ssh-user: ''

    # Whether to configure the token or SSH key with the local git config
    # Default: true
    persist-credentials: ''

    # Relative path under $GITHUB_WORKSPACE to place the repository
    path: ''

    # Whether to execute `git clean -ffdx &amp;amp;&amp;amp; git reset --hard HEAD` before fetching
    # Default: true
    clean: ''

    # Partially clone against a given filter. Overrides sparse-checkout if set.
    # Default: null
    filter: ''

    # Do a sparse checkout on given patterns. Each pattern should be separated with
    # new lines.
    # Default: null
    sparse-checkout: ''

    # Specifies whether to use cone-mode when doing a sparse checkout.
    # Default: true
    sparse-checkout-cone-mode: ''

    # Number of commits to fetch. 0 indicates all history for all branches and tags.
    # Default: 1
    fetch-depth: ''

    # Whether to fetch tags, even if fetch-depth &amp;gt; 0.
    # Default: false
    fetch-tags: ''

    # Whether to show progress status output when fetching.
    # Default: true
    show-progress: ''

    # Whether to download Git-LFS files
    # Default: false
    lfs: ''

    # Whether to checkout submodules: `true` to checkout submodules or `recursive` to
    # recursively checkout submodules.
    #
    # When the `ssh-key` input is not provided, SSH URLs beginning with
    # `git@github.com:` are converted to HTTPS.
    #
    # Default: false
    submodules: ''

    # Add repository path as safe.directory for Git global config by running `git
    # config --global --add safe.directory &amp;lt;path&amp;gt;`
    # Default: true
    set-safe-directory: ''

    # The base URL for the GitHub instance that you are trying to clone from, will use
    # environment defaults to fetch from the same instance that the workflow is
    # running from unless specified. Example URLs are https://github.com or
    # https://my-ghes-server.example.com
    github-server-url: ''
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- end usage --&gt; 
&lt;h1&gt;Scenarios&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-v5"&gt;Checkout V5&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#whats-new"&gt;What's new&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-v4"&gt;Checkout V4&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#note"&gt;Note&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#whats-new-1"&gt;What's new&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#scenarios"&gt;Scenarios&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#fetch-only-the-root-files"&gt;Fetch only the root files&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#fetch-only-the-root-files-and-github-and-src-folder"&gt;Fetch only the root files and &lt;code&gt;.github&lt;/code&gt; and &lt;code&gt;src&lt;/code&gt; folder&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#fetch-only-a-single-file"&gt;Fetch only a single file&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#fetch-all-history-for-all-tags-and-branches"&gt;Fetch all history for all tags and branches&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-a-different-branch"&gt;Checkout a different branch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-head"&gt;Checkout HEAD^&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-multiple-repos-side-by-side"&gt;Checkout multiple repos (side by side)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-multiple-repos-nested"&gt;Checkout multiple repos (nested)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-multiple-repos-private"&gt;Checkout multiple repos (private)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-pull-request-head-commit-instead-of-merge-commit"&gt;Checkout pull request HEAD commit instead of merge commit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-pull-request-on-closed-event"&gt;Checkout pull request on closed event&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#push-a-commit-using-the-built-in-token"&gt;Push a commit using the built-in token&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#push-a-commit-to-a-pr-using-the-built-in-token"&gt;Push a commit to a PR using the built-in token&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#recommended-permissions"&gt;Recommended permissions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Fetch only the root files&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- uses: actions/checkout@v5
  with:
    sparse-checkout: .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Fetch only the root files and &lt;code&gt;.github&lt;/code&gt; and &lt;code&gt;src&lt;/code&gt; folder&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- uses: actions/checkout@v5
  with:
    sparse-checkout: |
      .github
      src
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Fetch only a single file&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- uses: actions/checkout@v5
  with:
    sparse-checkout: |
      README.md
    sparse-checkout-cone-mode: false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Fetch all history for all tags and branches&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- uses: actions/checkout@v5
  with:
    fetch-depth: 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Checkout a different branch&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- uses: actions/checkout@v5
  with:
    ref: my-branch
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Checkout HEAD^&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- uses: actions/checkout@v5
  with:
    fetch-depth: 2
- run: git checkout HEAD^
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Checkout multiple repos (side by side)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- name: Checkout
  uses: actions/checkout@v5
  with:
    path: main

- name: Checkout tools repo
  uses: actions/checkout@v5
  with:
    repository: my-org/my-tools
    path: my-tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;If your secondary repository is private or internal you will need to add the option noted in &lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#Checkout-multiple-repos-private"&gt;Checkout multiple repos (private)&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Checkout multiple repos (nested)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- name: Checkout
  uses: actions/checkout@v5

- name: Checkout tools repo
  uses: actions/checkout@v5
  with:
    repository: my-org/my-tools
    path: my-tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;If your secondary repository is private or internal you will need to add the option noted in &lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#Checkout-multiple-repos-private"&gt;Checkout multiple repos (private)&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Checkout multiple repos (private)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- name: Checkout
  uses: actions/checkout@v5
  with:
    path: main

- name: Checkout private tools
  uses: actions/checkout@v5
  with:
    repository: my-org/my-private-tools
    token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
    path: my-tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;${{ github.token }}&lt;/code&gt; is scoped to the current repository, so if you want to checkout a different repository that is private you will need to provide your own &lt;a href="https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line"&gt;PAT&lt;/a&gt;.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Checkout pull request HEAD commit instead of merge commit&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- uses: actions/checkout@v5
  with:
    ref: ${{ github.event.pull_request.head.sha }}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Checkout pull request on closed event&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, closed]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Push a commit using the built-in token&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: |
          date &amp;gt; generated.txt
          # Note: the following account information will not work on GHES
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "generated"
          git push
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;NOTE:&lt;/em&gt; The user email is &lt;code&gt;{user.id}+{user.login}@users.noreply.github.com&lt;/code&gt;. See users API: &lt;a href="https://api.github.com/users/github-actions%5Bbot%5D"&gt;https://api.github.com/users/github-actions%5Bbot%5D&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Push a commit to a PR using the built-in token&lt;/h2&gt; 
&lt;p&gt;In a pull request trigger, &lt;code&gt;ref&lt;/code&gt; is required as GitHub Actions checks out in detached HEAD mode, meaning it doesn‚Äôt check out your branch by default.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;on: pull_request
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
      - run: |
          date &amp;gt; generated.txt
          # Note: the following account information will not work on GHES
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "generated"
          git push
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;NOTE:&lt;/em&gt; The user email is &lt;code&gt;{user.id}+{user.login}@users.noreply.github.com&lt;/code&gt;. See users API: &lt;a href="https://api.github.com/users/github-actions%5Bbot%5D"&gt;https://api.github.com/users/github-actions%5Bbot%5D&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Recommended permissions&lt;/h1&gt; 
&lt;p&gt;When using the &lt;code&gt;checkout&lt;/code&gt; action in your GitHub Actions workflow, it is recommended to set the following &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; permissions to ensure proper functionality, unless alternative auth is provided via the &lt;code&gt;token&lt;/code&gt; or &lt;code&gt;ssh-key&lt;/code&gt; inputs:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;permissions:
  contents: read
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;The scripts and documentation in this project are released under the &lt;a href="https://raw.githubusercontent.com/actions/checkout/main/LICENSE"&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hcengineering/platform</title>
      <link>https://github.com/hcengineering/platform</link>
      <description>&lt;p&gt;Huly ‚Äî All-in-One Project Management Platform (alternative to Linear, Jira, Slack, Notion, Motion)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Huly Platform&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://x.com/huly_io"&gt;&lt;img src="https://img.shields.io/twitter/follow/huly_io?style=for-the-badge" alt="X (formerly Twitter) Follow" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/license/hcengineering/platform?style=for-the-badge" alt="GitHub License" /&gt;&lt;/p&gt; 
&lt;p&gt;‚≠êÔ∏è Your star shines on us. Star us on GitHub!&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;The Huly Platform is a robust framework designed to accelerate the development of business applications, such as CRM systems. This repository includes several applications, such as Chat, Project Management, CRM, HRM, and ATS. Various teams are building products on top of the Platform, including &lt;a href="https://huly.io"&gt;Huly&lt;/a&gt; and &lt;a href="https://tracex.co"&gt;TraceX&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://repository-images.githubusercontent.com/392073243/6d27d5cc-38cd-4d88-affe-bb88b393180c" alt="Huly" /&gt;&lt;/p&gt; 
&lt;h2&gt;Self-Hosting&lt;/h2&gt; 
&lt;p&gt;If you're primarily interested in self-hosting Huly without the intention to modify or contribute to its development, please use &lt;a href="https://github.com/hcengineering/huly-selfhost"&gt;huly-selfhost&lt;/a&gt;. This project offers a convenient method to host Huly using &lt;code&gt;docker&lt;/code&gt;, designed for ease of use and quick setup. Explore this option to effortlessly enjoy Huly on your own server.&lt;/p&gt; 
&lt;h2&gt;Activity&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/c42c99e21691fa60ea61b5cdf11c2e0647621534.svg?sanitize=true" alt="Alt" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;API Client&lt;/h2&gt; 
&lt;p&gt;If you want to interact with Huly programmatically, check out our &lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/packages/api-client/README.md"&gt;API Client&lt;/a&gt; documentation. The API client provides a typed interface for all Huly operations and can be used to build integrations and custom applications.&lt;/p&gt; 
&lt;p&gt;You can find API usage examples in the &lt;a href="https://github.com/hcengineering/huly-examples"&gt;Huly examples&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#huly-platform"&gt;Huly Platform&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#about"&gt;About&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#self-hosting"&gt;Self-Hosting&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#activity"&gt;Activity&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#api-client"&gt;API Client&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#pre-requisites"&gt;Pre-requisites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#verification"&gt;Verification&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#branches--contributing"&gt;Branches &amp;amp; Contributing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#setup-dev-environment"&gt;Setup dev environment&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#fast-start"&gt;Fast start&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#build-and-run"&gt;Build and run&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#run-in-development-mode"&gt;Run in development mode&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#update-project-structure-and-database"&gt;Update project structure and database&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#build--watch"&gt;Build &amp;amp; Watch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#tests"&gt;Tests&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#unit-tests"&gt;Unit tests&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#ui-tests"&gt;UI tests&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#package-publishing"&gt;Package publishing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#additional-testing"&gt;Additional testing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#wsl-build-guide"&gt;WSL build guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Pre-requisites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Before proceeding, ensure that your system meets the following requirements: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt; (v20.11.0 is required)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/compose/install/"&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Verification&lt;/h2&gt; 
&lt;p&gt;To verify the installation, perform the following checks in your terminal:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ensure that the &lt;code&gt;docker&lt;/code&gt; commands are available:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker --version
docker compose version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Branches &amp;amp; Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;code&gt;main&lt;/code&gt; branch is the default branch used for production deployments. Changes to this branch are made from the &lt;code&gt;staging&lt;/code&gt; branch once a version is ready for community use.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;code&gt;staging&lt;/code&gt; branch is used for pre-release testing. It is stable enough for testing but not yet ready for production deployment.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;code&gt;develop&lt;/code&gt; branch is used for development and is the default branch for contributions.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We periodically merge &lt;code&gt;develop&lt;/code&gt; into &lt;code&gt;staging&lt;/code&gt; to perform testing builds. Once we are satisfied with the build quality in our pre-release deployment, we merge changes into &lt;code&gt;main&lt;/code&gt; and release a new version to the community.&lt;/p&gt; 
&lt;h2&gt;Setup dev environment&lt;/h2&gt; 
&lt;h3&gt;To initialise the communication submodule&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git submodule init
git submodule update
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;To update the communication submodule&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git submodule update
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Authentication&lt;/h3&gt; 
&lt;p&gt;This project uses GitHub Packages for dependency management. To successfully download dependencies, you need to generate a GitHub personal access token and log in to npm using that token.&lt;/p&gt; 
&lt;p&gt;Follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Generate a GitHub Token:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Log in to your GitHub account&lt;/li&gt; 
 &lt;li&gt;Go to &lt;strong&gt;Settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;Developer settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;Personal access tokens&lt;/strong&gt; (&lt;a href="https://github.com/settings/personal-access-tokens"&gt;https://github.com/settings/personal-access-tokens&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Click &lt;strong&gt;Generate new token&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Select the required scopes (at least &lt;code&gt;read:packages&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Generate the token and copy it&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Authenticate with npm:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm login --registry=https://npm.pkg.github.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When prompted, enter your GitHub username, use the generated token as your password&lt;/p&gt; 
&lt;h2&gt;Fast start&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sh ./scripts/fast-start.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;You need Microsoft's &lt;a href="https://rushjs.io"&gt;rush&lt;/a&gt; to install the application.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Rush globally using the command:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @microsoft/rush
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Navigate to the repository root and run the following commands:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush install
rush build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can just execute:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sh ./scripts/presetup-rush.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build and run&lt;/h2&gt; 
&lt;p&gt;Development environment setup requires Docker to be installed on system.&lt;/p&gt; 
&lt;p&gt;Support is available for both amd64 and arm64 containers on Linux and macOS.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd ./dev/
rush build    # Will build all the required packages.
# rush rebuild  # could be used to omit build cache.
rush bundle   # Will prepare bundles.
rush package  # Will build all webpack packages.
rush validate # Will validate all sources with typescript and generate d.ts files required for ts-node execution.
rush svelte-check # Optional. svelte files validation using svelte-check.
rush docker:build   # Will build Docker containers for all applications in the local Docker environment.
rush docker:up # Will set up all the containers
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be aware &lt;code&gt;rush docker:build&lt;/code&gt; will automatically execute all required phases like build, bundle, package.&lt;/p&gt; 
&lt;p&gt;Alternatively, you can just execute:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sh ./scripts/build.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, Docker volumes named dev_db, dev_elastic, and dev_files will be created for the MongoDB, Elasticsearch, and MinIO instances.&lt;/p&gt; 
&lt;p&gt;Add the following line to your /etc/hosts file&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-plain"&gt;127.0.0.1 huly.local
::1 huly.local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Accessing the URL &lt;a href="http://huly.local:8087"&gt;http://huly.local:8087&lt;/a&gt; will lead you to the app in development mode.&lt;/p&gt; 
&lt;p&gt;Limitations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Local installation does not support sending emails, thus disabling functionalities such as password recovery and email notifications.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Run in development mode&lt;/h2&gt; 
&lt;p&gt;Development mode allows for live reloading and a smoother development process.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd dev/prod
rush validate
rushx dev-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then go to &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Select "Sign up" on the right panel and click the "Sign up with password" link at the bottom. Enter the new user's credentials, then proceed to create a workspace for them.&lt;/p&gt; 
&lt;h2&gt;Update project structure and database&lt;/h2&gt; 
&lt;p&gt;If the project's structure is updated, it may be necessary to relink and rebuild the projects.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush update
rush build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If a build fails, but the code is correct, try to delete the &lt;a href="https://rushjs.io/pages/maintainer/build_cache/"&gt;build cache&lt;/a&gt; and retry.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# from the project root
rm -rf common/temp/build-cache
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build &amp;amp; Watch&lt;/h2&gt; 
&lt;p&gt;For development purpose &lt;code&gt;rush build:watch&lt;/code&gt; action could be used.&lt;/p&gt; 
&lt;p&gt;It includes build and validate phases in watch mode.&lt;/p&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;h3&gt;Unit tests&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush test # To execute all tests

rushx test # For individual test execution inside a package directory
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;UI tests&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd ./tests
rush build
rush bundle
rush docker:build
## creates test Docker containers and sets up test database
./prepare.sh
## runs UI tests
rushx uitest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To execute tests in the development environment, please follow these steps:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd ./tests
./create-local.sh ## use ./restore-local.sh if you only want to restore the workspace to a predefined initial state for sanity.
cd ./sanity
rushx dev-uitest # To execute all tests against the development environment.
rushx dev-debug -g 'pattern' # To execute tests in debug mode with only the matching test pattern.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Package publishing&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;node ./common/scripts/bump.js -p projectName
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Additional testing&lt;/h2&gt; 
&lt;p&gt;This project is tested with BrowserStack.&lt;/p&gt; 
&lt;h2&gt;WSL build guide&lt;/h2&gt; 
&lt;p&gt;This guide describes the nuances of building and running the application from source code located on your NTFS drive, which is accessible from both Windows and WSL.&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;h4&gt;Disk Space Requirements&lt;/h4&gt; 
&lt;p&gt;Ensure you have sufficient disk space available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A fully deployed local application in clean Docker will consume slightly more than &lt;strong&gt;35 GB&lt;/strong&gt; of WSL virtual disk space&lt;/li&gt; 
 &lt;li&gt;The application folder after build (sources + artifacts) will occupy &lt;strong&gt;4.5 GB&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If there's insufficient space on your system drive (usually &lt;code&gt;C:\&lt;/code&gt;), you can change the virtual disk location in Docker Settings ‚Üí Resources ‚Üí Advanced.&lt;/p&gt; 
&lt;h4&gt;Docker WSL Integration&lt;/h4&gt; 
&lt;p&gt;Make sure Docker is accessible from WSL:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to Docker Settings ‚Üí Resources ‚Üí Advanced ‚Üí WSL Integration&lt;/li&gt; 
 &lt;li&gt;Select the distribution where you'll be building and running the application&lt;/li&gt; 
 &lt;li&gt;Verify integration works by running this command in WSL: &lt;pre&gt;&lt;code class="language-bash"&gt;docker run hello-world
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Common Issues and Solutions&lt;/h3&gt; 
&lt;h4&gt;Git Line Endings on Windows&lt;/h4&gt; 
&lt;p&gt;Windows Git often automatically replaces line endings. Since most build scripts are &lt;code&gt;.sh&lt;/code&gt; files, ensure your Windows checkout doesn't break them.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Solution options:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Checkout from WSL instead of Windows&lt;/li&gt; 
 &lt;li&gt;Configure Git on Windows to disable auto-replacement: &lt;pre&gt;&lt;code class="language-bash"&gt;git config --global core.autocrlf false
&lt;/code&gt;&lt;/pre&gt; This disables auto-replacement for all repositories on your machine.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Elevated Privileges in WSL&lt;/h4&gt; 
&lt;p&gt;Some commands in the instructions require elevated privileges when working in WSL. If you're using Ubuntu distribution, prefix commands with &lt;code&gt;sudo&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo npm install -g @microsoft/rush
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;WSL Configuration&lt;/h4&gt; 
&lt;p&gt;If the source code is located on a Windows NTFS drive, then edit the &lt;code&gt;/etc/wsl.conf&lt;/code&gt; file in WSL (e.g., &lt;code&gt;sudo nano /etc/wsl.conf&lt;/code&gt;) and add the following content if it doesn't exist:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ini"&gt;[automount]
enabled = true
root = /mnt/
options = "metadata,umask=22,fmask=11"

[interop]
appendWindowsPath = false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, we recommend storing the repository on a WSL disk, as this dramatically improves build and maintenance operations.&lt;/p&gt; 
&lt;h3&gt;Running the Application&lt;/h3&gt; 
&lt;p&gt;After these preparations, the build instructions should work without issues.&lt;/p&gt; 
&lt;h4&gt;Port Conflicts&lt;/h4&gt; 
&lt;p&gt;When starting the application (&lt;code&gt;rush docker:up&lt;/code&gt;), some network ports in Windows might be occupied. You can fix port mapping in the &lt;code&gt;\dev\docker-compose.yaml&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Depending on which port you change, you'll need to:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Find what's using that port&lt;/li&gt; 
 &lt;li&gt;Update the new address in the corresponding service configuration&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;sub&gt;&lt;sup&gt;¬© 2025 &lt;a href="https://hardcoreeng.com"&gt;Hardcore Engineering Inc&lt;/a&gt;.&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/data-formulator</title>
      <link>https://github.com/microsoft/data-formulator</link>
      <description>&lt;p&gt;ü™Ñ Create rich visualizations with AI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt; &lt;img src="https://raw.githubusercontent.com/microsoft/data-formulator/main/public/favicon.ico" alt="Data Formulator icon" width="28" /&gt; &lt;b&gt;Data Formulator: Create Rich Visualizations with AI&lt;/b&gt; &lt;/h1&gt; 
&lt;div&gt; 
 &lt;p&gt;&lt;a href="https://arxiv.org/abs/2408.16119"&gt;&lt;img src="https://img.shields.io/badge/Paper-arXiv:2408.16119-b31b1b.svg?sanitize=true" alt="arxiv" /&gt;&lt;/a&gt;‚ÄÇ &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt;‚ÄÇ &lt;a href="https://youtu.be/3ndlwt0Wi3c"&gt;&lt;img src="https://img.shields.io/badge/YouTube-white?logo=youtube&amp;amp;logoColor=%23FF0000" alt="YouTube" /&gt;&lt;/a&gt;‚ÄÇ &lt;a href="https://github.com/microsoft/data-formulator/actions/workflows/python-build.yml"&gt;&lt;img src="https://github.com/microsoft/data-formulator/actions/workflows/python-build.yml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/mYCZMQKYZb"&gt;&lt;img src="https://img.shields.io/badge/discord-chat-green?logo=discord" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Transform data and create rich visualizations iteratively with AI ü™Ñ. Try Data Formulator now!&lt;/p&gt; 
&lt;p&gt;Any questions? Ask on the Discord channel! &lt;a href="https://discord.gg/mYCZMQKYZb"&gt;&lt;img src="https://img.shields.io/badge/discord-chat-green?logo=discord" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- [![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/microsoft/data-formulator?quickstart=1) --&gt; 
&lt;kbd&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://codespaces.new/microsoft/data-formulator?quickstart=1" title="open Data Formulator in GitHub Codespaces"&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/data-formulator/main/public/data-formulator-screenshot.png" /&gt;&lt;/a&gt; &lt;/kbd&gt; 
&lt;h2&gt;News üî•üî•üî•&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;[07-10-2025] Data Formulator 0.2.2: Start with an analysis goal&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Some key frontend performance updates.&lt;/li&gt; 
   &lt;li&gt;You can start your exploration with a goal, or, tab and see if the agent can recommend some good exploration ideas for you. &lt;a href="https://github.com/microsoft/data-formulator/pull/176"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[05-13-2025] Data Formulator 0.2.1.3/4: External Data Loader&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;We introduced external data loader class to make import data easier. &lt;a href="https://github.com/microsoft/data-formulator/tree/main/py-src/data_formulator/data_loader"&gt;Readme&lt;/a&gt; and &lt;a href="https://github.com/microsoft/data-formulator/pull/155"&gt;Demo&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Current data loaders: MySQL, Azure Data Explorer (Kusto), Azure Blob and Amazon S3 (json, parquet, csv).&lt;/li&gt; 
     &lt;li&gt;[07-01-2025] Updated with: Postgresql, mssql.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Call for action &lt;a href="https://github.com/microsoft/data-formulator/issues/156"&gt;link&lt;/a&gt;: 
    &lt;ul&gt; 
     &lt;li&gt;Users: let us know which data source you'd like to load data from.&lt;/li&gt; 
     &lt;li&gt;Developers: let's build more data loaders.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[04-23-2025] Data Formulator 0.2: working with &lt;em&gt;large&lt;/em&gt; data üì¶üì¶üì¶&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Explore large data by: 
    &lt;ol&gt; 
     &lt;li&gt;Upload large data file to the local database (powered by &lt;a href="https://github.com/duckdb/duckdb"&gt;DuckDB&lt;/a&gt;).&lt;/li&gt; 
     &lt;li&gt;Use drag-and-drop to specify charts, and Data Formulator dynamically fetches data from the database to create visualizations (with ‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è speeds).&lt;/li&gt; 
     &lt;li&gt;Work with AI agents: they generate SQL queries to transform the data to create rich visualizations!&lt;/li&gt; 
     &lt;li&gt;Anchor the result / follow up / create a new branch / join tables; let's dive deeper.&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt;Checkout the demos at &lt;a href="https://github.com/microsoft/data-formulator/releases/tag/0.2"&gt;[https://github.com/microsoft/data-formulator/releases/tag/0.2]&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Improved overall system performance, and enjoy the updated derive concept functionality.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[03-20-2025] Data Formulator 0.1.7: Anchoring ‚öìÔ∏é&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Anchor an intermediate dataset, so that followup data analysis are built on top of the anchored data, not the original one.&lt;/li&gt; 
   &lt;li&gt;Clean a data and work with only the cleaned data; create a subset from the original data or join multiple data, and then go from there. AI agents will be less likely to get confused and work faster. ‚ö°Ô∏è‚ö°Ô∏è&lt;/li&gt; 
   &lt;li&gt;Check out the demos at &lt;a href="https://github.com/microsoft/data-formulator/releases/tag/0.1.7"&gt;[https://github.com/microsoft/data-formulator/releases/tag/0.1.7]&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Don't forget to update Data Formulator to test it out!&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[02-20-2025] Data Formulator 0.1.6 released!&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Now supports working with multiple datasets at once! Tell Data Formulator which data tables you would like to use in the encoding shelf, and it will figure out how to join the tables to create a visualization to answer your question. ü™Ñ&lt;/li&gt; 
   &lt;li&gt;Checkout the demo at &lt;a href="https://github.com/microsoft/data-formulator/releases/tag/0.1.6"&gt;[https://github.com/microsoft/data-formulator/releases/tag/0.1.6]&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Update your Data Formulator to the latest version to play with the new features.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[02-12-2025] More models supported now!&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Now supports OpenAI, Azure, Ollama, and Anthropic models (and more powered by &lt;a href="https://github.com/BerriAI/litellm"&gt;LiteLLM&lt;/a&gt;);&lt;/li&gt; 
   &lt;li&gt;Models with strong code generation and instruction following capabilities are recommended (gpt-4o, claude-3-5-sonnet etc.);&lt;/li&gt; 
   &lt;li&gt;You can store API keys in &lt;code&gt;api-keys.env&lt;/code&gt; to avoid typing them every time (see template &lt;code&gt;api-keys.env.template&lt;/code&gt;).&lt;/li&gt; 
   &lt;li&gt;Let us know which models you have good/bad experiences with, and what models you would like to see supported! &lt;a href="https://github.com/microsoft/data-formulator/issues/49"&gt;[comment here]&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[11-07-2024] Minor fun update: data visualization challenges!&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;We added a few visualization challenges with the sample datasets. Can you complete them all? &lt;a href="https://github.com/microsoft/data-formulator/issues/53#issue-2641841252"&gt;[try them out!]&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Comment in the issue when you did, or share your results/questions with others! &lt;a href="https://github.com/microsoft/data-formulator/issues/53"&gt;[comment here]&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[10-11-2024] Data Formulator python package released!&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;You can now install Data Formulator using Python and run it locally, easily. &lt;a href="https://raw.githubusercontent.com/microsoft/data-formulator/main/#get-started"&gt;[check it out]&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Our Codespaces configuration is also updated for fast start up ‚ö°Ô∏è. &lt;a href="https://codespaces.new/microsoft/data-formulator?quickstart=1"&gt;[try it now!]&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;New experimental feature: load an image or a messy text, and ask AI to parse and clean it for you(!). &lt;a href="https://github.com/microsoft/data-formulator/pull/31#issuecomment-2403652717"&gt;[demo]&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[10-01-2024] Initial release of Data Formulator, check out our &lt;a href="https://www.microsoft.com/en-us/research/blog/data-formulator-exploring-how-ai-can-help-analysts-create-rich-data-visualizations/"&gt;[blog]&lt;/a&gt; and &lt;a href="https://youtu.be/3ndlwt0Wi3c"&gt;[video]&lt;/a&gt;!&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Data Formulator&lt;/strong&gt; is an application from Microsoft Research that uses large language models to transform data, expediting the practice of data visualization.&lt;/p&gt; 
&lt;p&gt;Data Formulator is an AI-powered tool for analysts to iteratively create rich visualizations. Unlike most chat-based AI tools where users need to describe everything in natural language, Data Formulator combines &lt;em&gt;user interface interactions (UI)&lt;/em&gt; and &lt;em&gt;natural language (NL) inputs&lt;/em&gt; for easier interaction. This blended approach makes it easier for users to describe their chart designs while delegating data transformation to AI.&lt;/p&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;p&gt;Play with Data Formulator with one of the following options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Option 1: Install via Python PIP&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Use Python PIP for an easy setup experience, running locally (recommend: install it in a virtual environment).&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# install data_formulator
pip install data_formulator

# start data_formulator
data_formulator 

# alternatively, you can run data formulator with this command
python -m data_formulator
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Data Formulator will be automatically opened in the browser at &lt;a href="http://localhost:5000"&gt;http://localhost:5000&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Update: you can specify the port number (e.g., 8080) by &lt;code&gt;python -m data_formulator --port 8080&lt;/code&gt; if the default port is occupied.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Option 2: Codespaces (5 minutes)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You can also run Data Formulator in Codespaces; we have everything pre-configured. For more details, see &lt;a href="https://raw.githubusercontent.com/microsoft/data-formulator/main/CODESPACES.md"&gt;CODESPACES.md&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href="https://codespaces.new/microsoft/data-formulator?quickstart=1"&gt;&lt;img src="https://github.com/codespaces/badge.svg?sanitize=true" alt="Open in GitHub Codespaces" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Option 3: Working in the developer mode&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You can build Data Formulator locally if you prefer full control over your development environment and the ability to customize the setup to your specific needs. For detailed instructions, refer to &lt;a href="https://raw.githubusercontent.com/microsoft/data-formulator/main/DEVELOPMENT.md"&gt;DEVELOPMENT.md&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Using Data Formulator&lt;/h2&gt; 
&lt;p&gt;Once you've completed the setup using either option, follow these steps to start using Data Formulator:&lt;/p&gt; 
&lt;h3&gt;The basics of data visualization&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Provide OpenAI keys and select a model (GPT-4o suggested) and choose a dataset.&lt;/li&gt; 
 &lt;li&gt;Choose a chart type, and then drag-and-drop data fields to chart properties (x, y, color, ...) to specify visual encodings.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/0fbea012-1d2d-46c3-a923-b1fc5eb5e5b8"&gt;https://github.com/user-attachments/assets/0fbea012-1d2d-46c3-a923-b1fc5eb5e5b8&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Create visualization beyond the initial dataset (powered by ü§ñ)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can type names of &lt;strong&gt;fields that do not exist in current data&lt;/strong&gt; in the encoding shelf: 
  &lt;ul&gt; 
   &lt;li&gt;this tells Data Formulator that you want to create visualizations that require computation or transformation from existing data,&lt;/li&gt; 
   &lt;li&gt;you can optionally provide a natural language prompt to explain and clarify your intent (not necessary when field names are self-explanatory).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Click the &lt;strong&gt;Formulate&lt;/strong&gt; button. 
  &lt;ul&gt; 
   &lt;li&gt;Data Formulator will transform data and instantiate the visualization based on the encoding and prompt.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Inspect the data, chart and code.&lt;/li&gt; 
 &lt;li&gt;To create a new chart based on existing ones, follow up in natural language: 
  &lt;ul&gt; 
   &lt;li&gt;provide a follow up prompt (e.g., &lt;em&gt;``show only top 5!''&lt;/em&gt;),&lt;/li&gt; 
   &lt;li&gt;you may also update visual encodings for the new chart.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/160c69d2-f42d-435c-9ff3-b1229b5bddba"&gt;https://github.com/user-attachments/assets/160c69d2-f42d-435c-9ff3-b1229b5bddba&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/c93b3e84-8ca8-49ae-80ea-f91ceef34acb"&gt;https://github.com/user-attachments/assets/c93b3e84-8ca8-49ae-80ea-f91ceef34acb&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Repeat this process as needed to explore and understand your data. Your explorations are trackable in the &lt;strong&gt;Data Threads&lt;/strong&gt; panel.&lt;/p&gt; 
&lt;h2&gt;Developers' Guide&lt;/h2&gt; 
&lt;p&gt;Follow the &lt;a href="https://raw.githubusercontent.com/microsoft/data-formulator/main/DEVELOPMENT.md"&gt;developers' instructions&lt;/a&gt; to build your new data analysis tools on top of Data Formulator.&lt;/p&gt; 
&lt;h2&gt;Research Papers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://arxiv.org/abs/2408.16119"&gt;Data Formulator 2: Iteratively Creating Rich Visualizations with AI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;@article{wang2024dataformulator2iteratively,
      title={Data Formulator 2: Iteratively Creating Rich Visualizations with AI}, 
      author={Chenglong Wang and Bongshin Lee and Steven Drucker and Dan Marshall and Jianfeng Gao},
      year={2024},
      booktitle={ArXiv preprint arXiv:2408.16119},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://arxiv.org/abs/2309.10094"&gt;Data Formulator: AI-powered Concept-driven Visualization Authoring&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;@article{wang2023data,
  title={Data Formulator: AI-powered Concept-driven Visualization Authoring},
  author={Wang, Chenglong and Thompson, John and Lee, Bongshin},
  journal={IEEE Transactions on Visualization and Computer Graphics},
  year={2023},
  publisher={IEEE}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href="https://cla.microsoft.com"&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repositories using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href="https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general"&gt;Microsoft's Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>idosal/git-mcp</title>
      <link>https://github.com/idosal/git-mcp</link>
      <description>&lt;p&gt;Put an end to code hallucinations! GitMCP is a free, open-source, remote MCP server for any GitHub project&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitMCP&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img width="884" alt="image" src="https://github.com/user-attachments/assets/2bf3e3df-556c-49c6-ab7b-36c279d53bba" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-what-is-gitmcp"&gt;What is GitMCP&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-features"&gt;Features&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-getting-started"&gt;Getting Started&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-how-it-works"&gt;How It Works&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-badge"&gt;Badge&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-examples"&gt;Examples&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-faq"&gt;FAQ&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-privacy"&gt;Privacy&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-contributing"&gt;Contributing&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-license"&gt;License&lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://gitmcp.io/idosal/git-mcp"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://gitmcp.io/badge/idosal/git-mcp" alt="GitMCP" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/idosal1"&gt;&lt;img src="https://img.shields.io/twitter/follow/idosal1?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/liadyosef"&gt;&lt;img src="https://img.shields.io/twitter/follow/liadyosef?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.pulsemcp.com/servers/idosal-git-mcp"&gt;&lt;img src="https://www.pulsemcp.com/badge/top-pick/idosal-git-mcp" width="400" alt="Pulse MCP Badge" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;ü§î What is GitMCP?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Stop vibe-hallucinating and start vibe-coding!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://gitmcp.io"&gt;GitMCP&lt;/a&gt; is a free, open-source, remote &lt;a href="https://docs.anthropic.com/en/docs/agents-and-tools/mcp"&gt;Model Context Protocol (MCP)&lt;/a&gt; server that transforms &lt;strong&gt;any&lt;/strong&gt; GitHub project (repositories or GitHub pages) into a documentation hub. It enables AI tools like Cursor to access up-to-date documentation and code, even if the LLM has never encountered them, thereby eliminating code hallucinations seamlessly.&lt;/p&gt; 
&lt;p&gt;GitMCP supports &lt;strong&gt;two flavors&lt;/strong&gt; -&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Specific Repository (&lt;code&gt;gitmcp.io/{owner}/{repo}&lt;/code&gt; or &lt;code&gt;{owner}.gitmcp.io/{repo}&lt;/code&gt;):&lt;/strong&gt; Use these when you primarily work with a select number of libraries. This ensures your AI assistant always targets the correct project, enhancing security and relevance by preventing access to unintended repositories.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generic Server (&lt;code&gt;gitmcp.io/docs&lt;/code&gt;):&lt;/strong&gt; Use this for maximum flexibility when you need to switch between different repositories frequently. The AI assistant will prompt you (or decide based on context) which repository to access for each request. Be mindful that this relies on correctly identifying the target repository each time.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;With GitMCP:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;AI assistants access the &lt;em&gt;latest&lt;/em&gt; documentation and code directly from the source.&lt;/li&gt; 
 &lt;li&gt;Get accurate API usage and reliable code examples.&lt;/li&gt; 
 &lt;li&gt;Work effectively even with niche, new, or rapidly changing libraries.&lt;/li&gt; 
 &lt;li&gt;Significantly reduced hallucinations and improved code correctness.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example, this side-by-side comparison shows the result for the same one-shot prompt in Cursor when creating a &lt;a href="https://github.com/mrdoob/three.js"&gt;three.js&lt;/a&gt; scene -&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/fbf1b4a7-f9f0-4c0e-831c-4d64faae2c45"&gt;https://github.com/user-attachments/assets/fbf1b4a7-f9f0-4c0e-831c-4d64faae2c45&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;‚ú® Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;üòé &lt;strong&gt;Latest Documentation on ANY GitHub Project&lt;/strong&gt;: Grant your AI assistant seamless access to the GitHub project's documentation and code. The built-in smart search capabilities help find exactly what the AI needs without using too many tokens!&lt;/li&gt; 
 &lt;li&gt;üß† &lt;strong&gt;No More Hallucinations&lt;/strong&gt;: With GitMCP, your AI assistant can provide accurate and relevant answers to your questions.&lt;/li&gt; 
 &lt;li&gt;‚òÅÔ∏è &lt;strong&gt;Zero Setup&lt;/strong&gt;: GitMCP runs in the cloud. Simply add the chosen GitMCP URL as an MCP server in your IDE ‚Äî no downloads, installations, signups, or changes are required.&lt;/li&gt; 
 &lt;li&gt;üí¨ &lt;strong&gt;Embedded Chat&lt;/strong&gt;: Start quickly by chatting directly with the repository's documentation through our in-browser chat!&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Open, Free, and Private&lt;/strong&gt;: GitMCP is open-source and completely free to use. It doesn't collect personal information or store queries. You can even self-host it!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;video src="https://github.com/user-attachments/assets/2c3afaf9-6c08-436e-9efd-db8710554430"&gt;&lt;/video&gt;&lt;/p&gt; 
&lt;h2&gt;üöÄ Getting Started&lt;/h2&gt; 
&lt;p&gt;Using GitMCP is easy! Simply follow these steps:&lt;/p&gt; 
&lt;h3&gt;Step 1: Choose the type of server you want&lt;/h3&gt; 
&lt;p&gt;Choose one of these URL formats depending on what you want to connect to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For GitHub repositories: &lt;code&gt;gitmcp.io/{owner}/{repo}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For GitHub Pages sites: &lt;code&gt;{owner}.gitmcp.io/{repo}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For a generic tool that supports any repository (dynamic): &lt;code&gt;gitmcp.io/docs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Replace &lt;code&gt;{owner}&lt;/code&gt; with the GitHub username or organization name, and &lt;code&gt;{repo}&lt;/code&gt; with the repository name.&lt;/p&gt; 
&lt;p&gt;For your convenience, you can also use the conversion tool on the landing page to format the GitHub URL into an MCP URL!&lt;/p&gt; 
&lt;h3&gt;Step 2: Connect your AI assistant&lt;/h3&gt; 
&lt;p&gt;Select your AI assistant from the options below and follow the configuration instructions:&lt;/p&gt; 
&lt;h4&gt;Connecting Cursor&lt;/h4&gt; 
&lt;p&gt;Update your Cursor configuration file at &lt;code&gt;~/.cursor/mcp.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "url": "https://gitmcp.io/{owner}/{repo}"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Claude Desktop&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;In Claude Desktop, go to Settings &amp;gt; Developer &amp;gt; Edit Config&lt;/li&gt; 
 &lt;li&gt;Replace the configuration with: &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://gitmcp.io/{owner}/{repo}"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Connecting Windsurf&lt;/h4&gt; 
&lt;p&gt;Update your Windsurf configuration file at &lt;code&gt;~/.codeium/windsurf/mcp_config.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "serverUrl": "https://gitmcp.io/{owner}/{repo}"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting VSCode&lt;/h4&gt; 
&lt;p&gt;Update your VSCode configuration file at &lt;code&gt;.vscode/mcp.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "servers": {
    "gitmcp": {
      "type": "sse",
      "url": "https://gitmcp.io/{owner}/{repo}"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Cline&lt;/h4&gt; 
&lt;p&gt;Update your Cline configuration file at &lt;code&gt;~/Library/Application Support/Code/User/globalStorage/saoudrizwan.claude-dev/settings/cline_mcp_settings.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "url": "https://gitmcp.io/{owner}/{repo}",
      "disabled": false,
      "autoApprove": []
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Highlight AI&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Highlight AI and click the plugins icon (@ symbol) in the sidebar&lt;/li&gt; 
 &lt;li&gt;Click &lt;strong&gt;Installed Plugins&lt;/strong&gt; at the top of the sidebar&lt;/li&gt; 
 &lt;li&gt;Select &lt;strong&gt;Custom Plugin&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Click &lt;strong&gt;Add a plugin using a custom SSE URL&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Plugin name: &lt;code&gt;gitmcp&lt;/code&gt; SSE URL: &lt;code&gt;https://gitmcp.io/{owner}/{repo}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For more details on adding custom MCP servers to HighlightAI, refer to &lt;a href="https://docs.highlightai.com/learn/developers/plugins/custom-plugins-setup"&gt;the documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Connecting Augment Code&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Augment Code settings&lt;/li&gt; 
 &lt;li&gt;Navigate to the MCP section&lt;/li&gt; 
 &lt;li&gt;Add a new MCP server with the following details:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Name the MCP server: &lt;code&gt;git-mcp Docs&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Use this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx mcp-remote https://gitmcp.io/{owner}/{repo}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use the following configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "git-mcp Docs": {
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://gitmcp.io/{owner}/{repo}"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Msty AI&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Msty Studio&lt;/li&gt; 
 &lt;li&gt;Go to Tools &amp;gt; Import Tools from JSON Clipboard&lt;/li&gt; 
 &lt;li&gt;Paste the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "git-mcp Docs": {
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://gitmcp.io/{owner}/{repo}"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details on configuring MCP servers in Augment Code, visit &lt;a href="https://docs.augmentcode.com/setup-augment/mcp"&gt;the Augment Code documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Remember to replace &lt;code&gt;{owner}&lt;/code&gt; and &lt;code&gt;{repo}&lt;/code&gt; with the actual GitHub username/organization and repository name. You can also use the dynamic endpoint &lt;code&gt;https://gitmcp.io/docs&lt;/code&gt; to allow your AI to access any repository on demand.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;‚öô How It Works&lt;/h2&gt; 
&lt;p&gt;GitMCP connects your AI assistant to GitHub repositories using the Model Context Protocol (MCP), a standard that lets AI tools request additional information from external sources.&lt;/p&gt; 
&lt;p&gt;What happens when you use GitMCP:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;You provide the GitMCP URL&lt;/strong&gt; to your AI assistant (e.g., &lt;code&gt;gitmcp.io/microsoft/typescript&lt;/code&gt;). GitMCP exposes tools like documentation fetching, smart search, code search, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Prompt the AI assistant&lt;/strong&gt; on documentation/code-related questions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Your AI sends requests&lt;/strong&gt; to GitMCP to use its tools (with your approval).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitMCP executes the AI's request&lt;/strong&gt; and returns the requested data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Your AI receives the information&lt;/strong&gt; and generates a more accurate, grounded response without hallucinations.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Supported Documentation&lt;/h3&gt; 
&lt;p&gt;GitMCP currently supports the following documents (in order of priority):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://llmstxt.org"&gt;llms.txt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;AI-optimized version of the project's documentation&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;README.md&lt;/code&gt;/root&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üí° Examples&lt;/h2&gt; 
&lt;p&gt;Here are some examples of how to use GitMCP with different AI assistants and repositories:&lt;/p&gt; 
&lt;h3&gt;Example 1: Using Windsurf with a specific repository&lt;/h3&gt; 
&lt;p&gt;For the GitHub repository &lt;code&gt;https://github.com/microsoft/playwright-mcp&lt;/code&gt;, add &lt;code&gt;https://gitmcp.io/microsoft/playwright-mcp&lt;/code&gt; as an MCP server to Windsurf.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt to Claude:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"How do I use the Playwright MCP"&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Windsurf will pull the relevant documentation from GitMCP to implement the memory feature correctly.&lt;/p&gt; 
&lt;h3&gt;Example 2: Using Cursor with a GitHub Pages site&lt;/h3&gt; 
&lt;p&gt;For the GitHub Pages site &lt;code&gt;langchain-ai.github.io/langgraph&lt;/code&gt;, add &lt;code&gt;https://langchain-ai.gitmcp.io/langgraph&lt;/code&gt; as an MCP server to Cursor.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt to Cursor:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"Add memory to my LangGraph agent"&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Cursor will pull the relevant documentation and code from GitMCP to correctly implement the memory feature.&lt;/p&gt; 
&lt;h3&gt;Example 3: Using Claude Desktop with the dynamic endpoint&lt;/h3&gt; 
&lt;p&gt;You don't have to pick specific repositories. The generic &lt;code&gt;gitmcp.io/docs&lt;/code&gt; endpoint allows AI to pick the GitHub project on the fly!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt to any AI assistant:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"I want to learn about the OpenAI Whisper speech recognition model. Explain how it works.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Claude will pull the data from GitMCP and answer the question.&lt;/p&gt; 
&lt;h2&gt;üõ†Ô∏è Tools&lt;/h2&gt; 
&lt;p&gt;GitMCP provides AI assistants with several valuable tools to help them access, understand, and query GitHub repositories.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;fetch_&amp;lt;repo-name&amp;gt;_documentation&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool gets the primary documentation from a GitHub repository. It works by retrieving relevant documentation (e.g., &lt;code&gt;llms.txt&lt;/code&gt;). This gives the AI a good overview of what the project is about&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; For general questions about a project's purpose, features, or how to get started&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;search_&amp;lt;repo-name&amp;gt;_documentation&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool lets the AI search through a repository's documentation by providing a specific search query. Instead of loading all the documentation (which could be very large), it uses intelligent search to find just the relevant parts.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; For specific questions about particular features, functions, or concepts within a project&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;fetch_url_content&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool helps the AI get information from links mentioned in the documentation. It retrieves the content from those links and converts it to a format the AI can easily read.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; When documentation references external information that would help answer your question&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;search_&amp;lt;repo-name&amp;gt;_code&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool searches through the actual code in the repository using GitHub's code search. It helps AI find specific code examples or implementation details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; When you want examples of how something is implemented or need technical details not covered in documentation&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; When using the dynamic endpoint (&lt;code&gt;gitmcp.io/docs&lt;/code&gt;), these tools are named slightly differently (&lt;code&gt;fetch_generic_documentation&lt;/code&gt;, &lt;code&gt;search_generic_code&lt;/code&gt;, and &lt;code&gt;search_generic_documentation&lt;/code&gt;) and need additional information about which repository to access.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üìä Badge&lt;/h2&gt; 
&lt;p&gt;GitMCP has a badge to your repository's README. It allows users to quickly access your documentation through their IDE or browser (using the embedded chat). It also showcases how many times your documentation has been accessed through GitMCP.&lt;/p&gt; 
&lt;p&gt;Example (&lt;code&gt;idosal/git-mcp&lt;/code&gt;): &lt;a href="https://gitmcp.io/idosal/git-mcp"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://gitmcp.io/badge/idosal/git-mcp" alt="GitMCP" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Adding the Badge to Your Repository&lt;/h3&gt; 
&lt;p&gt;Add the following to your &lt;code&gt;README.md&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-markdown"&gt;[![GitMCP](https://img.shields.io/endpoint?url=https://gitmcp.io/badge/OWNER/REPO)](https://gitmcp.io/OWNER/REPO)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace &lt;code&gt;OWNER&lt;/code&gt; with your GitHub username or organization, and &lt;code&gt;REPO&lt;/code&gt; with your repository name.&lt;/p&gt; 
&lt;h3&gt;How We Count Views&lt;/h3&gt; 
&lt;p&gt;Increment for each tool call on the specific repository.&lt;/p&gt; 
&lt;h3&gt;Customizing the Badge&lt;/h3&gt; 
&lt;p&gt;You can customize the badge's appearance with parameters:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Parameter&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color for the badge value&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;aquamarine&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;?color=green&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;label&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Badge label&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;GitMCP&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Documentation&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Please reach out!&lt;/p&gt; 
&lt;h2&gt;‚ùì FAQ&lt;/h2&gt; 
&lt;h3&gt;What is the Model Context Protocol?&lt;/h3&gt; 
&lt;p&gt;The &lt;a href="https://modelcontextprotocol.io/introduction"&gt;Model Context Protocol&lt;/a&gt; is a standard that allows AI assistants to request and receive additional context from external sources in a structured manner, enhancing their understanding and performance.&lt;/p&gt; 
&lt;h3&gt;Does GitMCP work with any AI assistant?&lt;/h3&gt; 
&lt;p&gt;Yes, GitMCP is compatible with any AI assistant supporting the Model Context Protocol, including tools like Cursor, VSCode, Claude, etc.&lt;/p&gt; 
&lt;h3&gt;Is GitMCP compatible with all GitHub projects?&lt;/h3&gt; 
&lt;p&gt;Absolutely! GitMCP works with any public GitHub repository without requiring any modifications. It prioritizes the &lt;code&gt;llms.txt&lt;/code&gt; file and falls back to &lt;code&gt;README.md&lt;/code&gt; or other pages if the former is unavailable. Future updates aim to support additional documentation methods and even generate content dynamically.&lt;/p&gt; 
&lt;h3&gt;Does GitMCP cost money?&lt;/h3&gt; 
&lt;p&gt;No, GitMCP is a free service to the community with no associated costs.&lt;/p&gt; 
&lt;h2&gt;üîí Privacy&lt;/h2&gt; 
&lt;p&gt;GitMCP is deeply committed to its users' privacy. The service doesn't have access to or store any personally identifiable information as it doesn't require authentication. In addition, it doesn't store any queries sent by the agents. Moreover, as GitMCP is an open-source project, it can be deployed independently in your environment.&lt;/p&gt; 
&lt;p&gt;GitMCP only accesses content that is already publicly available and only when queried by a user. GitMCP does not automatically scrape repositories. Before accessing any GitHub Pages site, the code checks for &lt;code&gt;robots.txt&lt;/code&gt; rules and follows the directives set by site owners, allowing them to opt out. Please note that GitMCP doesn't permanently store data regarding the GitHub projects or their content.&lt;/p&gt; 
&lt;h2&gt;üë• Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions, feedback, and ideas! Please review our &lt;a href="https://github.com/idosal/git-mcp/raw/main/.github/CONTRIBUTING.md"&gt;contribution&lt;/a&gt; guidelines.&lt;/p&gt; 
&lt;h3&gt;Local Development Setup&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/idosal/git-mcp.git
cd git-mcp
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pnpm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run locally for development&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
# or
pnpm dev
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Using MCP Inspector for Testing&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install the MCP Inspector tool:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npx @modelcontextprotocol/inspector
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In the inspector interface:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Set Transport Type to &lt;code&gt;SSE&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Enter your GitMCP URL (e.g., &lt;code&gt;http://localhost:5173/docs&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;Click "Connect"&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üìÑ License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/LICENSE"&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;GitMCP is provided "as is" without warranty of any kind. While we strive to ensure the reliability and security of our service, we are not responsible for any damages or issues that may arise from its use. GitHub projects accessed through GitMCP are subject to their respective owners' terms and conditions. GitMCP is not affiliated with GitHub or any of the mentioned AI tools.&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#idosal/git-mcp&amp;amp;Timeline"&gt;&lt;img src="https://api.star-history.com/svg?repos=idosal/git-mcp&amp;amp;type=Timeline" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fastapi/full-stack-fastapi-template</title>
      <link>https://github.com/fastapi/full-stack-fastapi-template</link>
      <description>&lt;p&gt;Full stack, modern web application template. Using FastAPI, React, SQLModel, PostgreSQL, Docker, GitHub Actions, automatic HTTPS and more.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Full Stack FastAPI Template&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template/actions?query=workflow%3ATest" target="_blank"&gt;&lt;img src="https://github.com/fastapi/full-stack-fastapi-template/workflows/Test/badge.svg?sanitize=true" alt="Test" /&gt;&lt;/a&gt; &lt;a href="https://coverage-badge.samuelcolvin.workers.dev/redirect/fastapi/full-stack-fastapi-template" target="_blank"&gt;&lt;img src="https://coverage-badge.samuelcolvin.workers.dev/fastapi/full-stack-fastapi-template.svg?sanitize=true" alt="Coverage" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Technology Stack and Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚ö° &lt;a href="https://fastapi.tiangolo.com"&gt;&lt;strong&gt;FastAPI&lt;/strong&gt;&lt;/a&gt; for the Python backend API. 
  &lt;ul&gt; 
   &lt;li&gt;üß∞ &lt;a href="https://sqlmodel.tiangolo.com"&gt;SQLModel&lt;/a&gt; for the Python SQL database interactions (ORM).&lt;/li&gt; 
   &lt;li&gt;üîç &lt;a href="https://docs.pydantic.dev"&gt;Pydantic&lt;/a&gt;, used by FastAPI, for the data validation and settings management.&lt;/li&gt; 
   &lt;li&gt;üíæ &lt;a href="https://www.postgresql.org"&gt;PostgreSQL&lt;/a&gt; as the SQL database.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;üöÄ &lt;a href="https://react.dev"&gt;React&lt;/a&gt; for the frontend. 
  &lt;ul&gt; 
   &lt;li&gt;üíÉ Using TypeScript, hooks, Vite, and other parts of a modern frontend stack.&lt;/li&gt; 
   &lt;li&gt;üé® &lt;a href="https://chakra-ui.com"&gt;Chakra UI&lt;/a&gt; for the frontend components.&lt;/li&gt; 
   &lt;li&gt;ü§ñ An automatically generated frontend client.&lt;/li&gt; 
   &lt;li&gt;üß™ &lt;a href="https://playwright.dev"&gt;Playwright&lt;/a&gt; for End-to-End testing.&lt;/li&gt; 
   &lt;li&gt;ü¶á Dark mode support.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;üêã &lt;a href="https://www.docker.com"&gt;Docker Compose&lt;/a&gt; for development and production.&lt;/li&gt; 
 &lt;li&gt;üîí Secure password hashing by default.&lt;/li&gt; 
 &lt;li&gt;üîë JWT (JSON Web Token) authentication.&lt;/li&gt; 
 &lt;li&gt;üì´ Email based password recovery.&lt;/li&gt; 
 &lt;li&gt;‚úÖ Tests with &lt;a href="https://pytest.org"&gt;Pytest&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;üìû &lt;a href="https://traefik.io"&gt;Traefik&lt;/a&gt; as a reverse proxy / load balancer.&lt;/li&gt; 
 &lt;li&gt;üö¢ Deployment instructions using Docker Compose, including how to set up a frontend Traefik proxy to handle automatic HTTPS certificates.&lt;/li&gt; 
 &lt;li&gt;üè≠ CI (continuous integration) and CD (continuous deployment) based on GitHub Actions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Dashboard Login&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/login.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Admin&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Create User&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-create.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Items&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-items.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - User Settings&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-user-settings.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Dark Mode&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-dark.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Interactive API Documentation&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/docs.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How To Use It&lt;/h2&gt; 
&lt;p&gt;You can &lt;strong&gt;just fork or clone&lt;/strong&gt; this repository and use it as is.&lt;/p&gt; 
&lt;p&gt;‚ú® It just works. ‚ú®&lt;/p&gt; 
&lt;h3&gt;How to Use a Private Repository&lt;/h3&gt; 
&lt;p&gt;If you want to have a private repository, GitHub won't allow you to simply fork it as it doesn't allow changing the visibility of forks.&lt;/p&gt; 
&lt;p&gt;But you can do the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a new GitHub repo, for example &lt;code&gt;my-full-stack&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Clone this repository manually, set the name with the name of the project you want to use, for example &lt;code&gt;my-full-stack&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:fastapi/full-stack-fastapi-template.git my-full-stack
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enter into the new directory:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd my-full-stack
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set the new origin to your new repository, copy it from the GitHub interface, for example:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git remote set-url origin git@github.com:octocat/my-full-stack.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add this repo as another "remote" to allow you to get updates later:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git remote add upstream git@github.com:fastapi/full-stack-fastapi-template.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Push the code to your new repository:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Update From the Original Template&lt;/h3&gt; 
&lt;p&gt;After cloning the repository, and after doing changes, you might want to get the latest changes from this original template.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure you added the original repository as a remote, you can check it with:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git remote -v

origin    git@github.com:octocat/my-full-stack.git (fetch)
origin    git@github.com:octocat/my-full-stack.git (push)
upstream    git@github.com:fastapi/full-stack-fastapi-template.git (fetch)
upstream    git@github.com:fastapi/full-stack-fastapi-template.git (push)
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pull the latest changes without merging:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git pull --no-commit upstream master
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will download the latest changes from this template without committing them, that way you can check everything is right before committing.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If there are conflicts, solve them in your editor.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Once you are done, commit the changes:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git merge --continue
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configure&lt;/h3&gt; 
&lt;p&gt;You can then update configs in the &lt;code&gt;.env&lt;/code&gt; files to customize your configurations.&lt;/p&gt; 
&lt;p&gt;Before deploying it, make sure you change at least the values for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;FIRST_SUPERUSER_PASSWORD&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POSTGRES_PASSWORD&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can (and should) pass these as environment variables from secrets.&lt;/p&gt; 
&lt;p&gt;Read the &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/deployment.md"&gt;deployment.md&lt;/a&gt; docs for more details.&lt;/p&gt; 
&lt;h3&gt;Generate Secret Keys&lt;/h3&gt; 
&lt;p&gt;Some environment variables in the &lt;code&gt;.env&lt;/code&gt; file have a default value of &lt;code&gt;changethis&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You have to change them with a secret key, to generate secret keys you can run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python -c "import secrets; print(secrets.token_urlsafe(32))"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Copy the content and use that as password / secret key. And run that again to generate another secure key.&lt;/p&gt; 
&lt;h2&gt;How To Use It - Alternative With Copier&lt;/h2&gt; 
&lt;p&gt;This repository also supports generating a new project using &lt;a href="https://copier.readthedocs.io"&gt;Copier&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;It will copy all the files, ask you configuration questions, and update the &lt;code&gt;.env&lt;/code&gt; files with your answers.&lt;/p&gt; 
&lt;h3&gt;Install Copier&lt;/h3&gt; 
&lt;p&gt;You can install Copier with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install copier
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or better, if you have &lt;a href="https://pipx.pypa.io/"&gt;&lt;code&gt;pipx&lt;/code&gt;&lt;/a&gt;, you can run it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pipx install copier
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you have &lt;code&gt;pipx&lt;/code&gt;, installing copier is optional, you could run it directly.&lt;/p&gt; 
&lt;h3&gt;Generate a Project With Copier&lt;/h3&gt; 
&lt;p&gt;Decide a name for your new project's directory, you will use it below. For example, &lt;code&gt;my-awesome-project&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Go to the directory that will be the parent of your project, and run the command with your project's name:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;copier copy https://github.com/fastapi/full-stack-fastapi-template my-awesome-project --trust
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have &lt;code&gt;pipx&lt;/code&gt; and you didn't install &lt;code&gt;copier&lt;/code&gt;, you can run it directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pipx run copier copy https://github.com/fastapi/full-stack-fastapi-template my-awesome-project --trust
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; the &lt;code&gt;--trust&lt;/code&gt; option is necessary to be able to execute a &lt;a href="https://github.com/fastapi/full-stack-fastapi-template/raw/master/.copier/update_dotenv.py"&gt;post-creation script&lt;/a&gt; that updates your &lt;code&gt;.env&lt;/code&gt; files.&lt;/p&gt; 
&lt;h3&gt;Input Variables&lt;/h3&gt; 
&lt;p&gt;Copier will ask you for some data, you might want to have at hand before generating the project.&lt;/p&gt; 
&lt;p&gt;But don't worry, you can just update any of that in the &lt;code&gt;.env&lt;/code&gt; files afterwards.&lt;/p&gt; 
&lt;p&gt;The input variables, with their default values (some auto generated) are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;project_name&lt;/code&gt;: (default: &lt;code&gt;"FastAPI Project"&lt;/code&gt;) The name of the project, shown to API users (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;stack_name&lt;/code&gt;: (default: &lt;code&gt;"fastapi-project"&lt;/code&gt;) The name of the stack used for Docker Compose labels and project name (no spaces, no periods) (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;secret_key&lt;/code&gt;: (default: &lt;code&gt;"changethis"&lt;/code&gt;) The secret key for the project, used for security, stored in .env, you can generate one with the method above.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;first_superuser&lt;/code&gt;: (default: &lt;code&gt;"admin@example.com"&lt;/code&gt;) The email of the first superuser (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;first_superuser_password&lt;/code&gt;: (default: &lt;code&gt;"changethis"&lt;/code&gt;) The password of the first superuser (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;smtp_host&lt;/code&gt;: (default: "") The SMTP server host to send emails, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;smtp_user&lt;/code&gt;: (default: "") The SMTP server user to send emails, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;smtp_password&lt;/code&gt;: (default: "") The SMTP server password to send emails, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;emails_from_email&lt;/code&gt;: (default: &lt;code&gt;"info@example.com"&lt;/code&gt;) The email account to send emails from, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;postgres_password&lt;/code&gt;: (default: &lt;code&gt;"changethis"&lt;/code&gt;) The password for the PostgreSQL database, stored in .env, you can generate one with the method above.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sentry_dsn&lt;/code&gt;: (default: "") The DSN for Sentry, if you are using it, you can set it later in .env.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Backend Development&lt;/h2&gt; 
&lt;p&gt;Backend docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/backend/README.md"&gt;backend/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Frontend Development&lt;/h2&gt; 
&lt;p&gt;Frontend docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/frontend/README.md"&gt;frontend/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;Deployment docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/deployment.md"&gt;deployment.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;General development docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/development.md"&gt;development.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This includes using Docker Compose, custom local domains, &lt;code&gt;.env&lt;/code&gt; configurations, etc.&lt;/p&gt; 
&lt;h2&gt;Release Notes&lt;/h2&gt; 
&lt;p&gt;Check the file &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/release-notes.md"&gt;release-notes.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The Full Stack FastAPI Template is licensed under the terms of the MIT license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>freestyle-sh/Adorable</title>
      <link>https://github.com/freestyle-sh/Adorable</link>
      <description>&lt;p&gt;Open Source Lovable&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/freestyle-sh/Adorable/main/icon.png" alt="description" width="75" /&gt; &lt;/p&gt; 
&lt;h1&gt;Adorable&lt;/h1&gt; 
&lt;p&gt;Open-source version of &lt;strong&gt;Lovable&lt;/strong&gt; - an AI agent that can make websites and apps through a chat interface.&lt;/p&gt; 
&lt;p&gt;For guidance on building app builders with AI, see the &lt;a href="https://docs.freestyle.sh/guides/app-builder"&gt;Freestyle guide on Building an App Builder&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chat interface for interacting with AI code assistants&lt;/li&gt; 
 &lt;li&gt;Patch-based code editing with user approval&lt;/li&gt; 
 &lt;li&gt;Git integration for version control&lt;/li&gt; 
 &lt;li&gt;Preview capabilities for code changes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Setup Instructions&lt;/h2&gt; 
&lt;h3&gt;Dependencies&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js&lt;/li&gt; 
 &lt;li&gt;PostgreSQL database (&lt;a href="https://neon.tech"&gt;Neon&lt;/a&gt; is easy and has a good free tier)&lt;/li&gt; 
 &lt;li&gt;Redis (for caching and session management)&lt;/li&gt; 
 &lt;li&gt;Anthropic API key&lt;/li&gt; 
 &lt;li&gt;Freestyle API key&lt;/li&gt; 
 &lt;li&gt;Morph API key (optional)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Clone the repository:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/freestyle-sh/adorable
cd adorable
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Get a Freestyle API key&lt;/p&gt; &lt;p&gt;Head to &lt;a href="https://admin.freestyle.sh/dashboard/api-tokens"&gt;our API keys page&lt;/a&gt; to get yours. We're totally free to use right now!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set up environment variables: Create a &lt;code&gt;.env&lt;/code&gt; file in the root directory with the following variables:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;# Database
DATABASE_URL=postgresql://username:password@localhost:5432/adorable

# Anthropic API
ANTHROPIC_API_KEY=your_anthropic_api_key

# Freestyle API
FREESTYLE_API_KEY=your_freestyle_api_key
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Initialize the database:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npx drizzle-kit push
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set up Redis&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The easiest way to run Redis locally is with Docker:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --name adorable-redis -p 6379:6379 -d redis
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will start a Redis server on port 6379. If you already have Redis running, you can skip this step.&lt;/p&gt; 
&lt;p&gt;Add the following to your &lt;code&gt;.env&lt;/code&gt; file (if not already present):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-env"&gt;REDIS_URL=redis://localhost:6379
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="6"&gt; 
 &lt;li&gt;Set up &lt;a href="https://stack-auth.com"&gt;Stack Auth&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Go to the &lt;a href="https://app.stack-auth.com"&gt;Stack Auth dashboard&lt;/a&gt; and create a new application. In Configuration &amp;gt; Domains, enable &lt;code&gt;Allow all localhost callbacks for development&lt;/code&gt; to be able to sign in locally.&lt;/p&gt; 
&lt;p&gt;You'll need to add the following environment variables to your &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-env"&gt;NEXT_PUBLIC_STACK_PROJECT_ID=&amp;lt;your-project-id&amp;gt;
NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY=&amp;lt;your-publishable-client-key&amp;gt;
STACK_SECRET_SERVER_KEY=&amp;lt;your-secret-server-key&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="7"&gt; 
 &lt;li&gt;Add a Preview Domain (optional)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Go to the &lt;a href="https://admin.freestyle.sh/dashboard/domains"&gt;Freestyle dashboard&lt;/a&gt; and verify a new domain. Then follow the &lt;a href="https://docs.freestyle.sh/web/deploy-to-custom-domain"&gt;DNS Instructions&lt;/a&gt; to point your domain to Freestyle.&lt;/p&gt; 
&lt;p&gt;Finally, add the following environment variable to your &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-env"&gt;PREVIEW_DOMAIN=&amp;lt;your-domain&amp;gt; # formatted like adorable.app
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="8"&gt; 
 &lt;li&gt;Add Morph for Fast Apply (optional)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Get a Morph API key from &lt;a href="https://morphllm.com"&gt;morphllm.com&lt;/a&gt; and add it to your &lt;code&gt;.env&lt;/code&gt; file to enable the fast edit tool:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-env"&gt;MORPH_API_KEY=&amp;lt;your-morph-api-key&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This automatically enables the Morph fast edit tool which provides faster code modifications.&lt;/p&gt; 
&lt;ol start="9"&gt; 
 &lt;li&gt; &lt;p&gt;Run the development server:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; in your browser.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Developer Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freestyle-sh/Adorable/main/docs/forking.md"&gt;Forking Guide&lt;/a&gt; - Comprehensive guide for developers working with this codebase&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;For production deployment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run build
npm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use the included deployment script:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./deploy.sh
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>midday-ai/midday</title>
      <link>https://github.com/midday-ai/midday</link>
      <description>&lt;p&gt;Invoicing, Time tracking, File reconciliation, Storage, Financial Overview &amp; your own Assistant made for Freelancers&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/midday-ai/midday/main/github.png" alt="hero" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;&lt;b&gt;Midday&lt;/b&gt;&lt;/h1&gt; 
&lt;p align="center"&gt; Run your business smarter &lt;br /&gt; &lt;br /&gt; &lt;a href="https://go.midday.ai/anPiuRx"&gt;Discord&lt;/a&gt; ¬∑ &lt;a href="https://midday.ai"&gt;Website&lt;/a&gt; ¬∑ &lt;a href="https://github.com/midday-ai/midday/issues"&gt;Issues&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://go.midday.ai/K7GwMoQ"&gt; &lt;img src="https://img.shields.io/badge/Supabase-3ECF8E?style=for-the-badge&amp;amp;logo=supabase&amp;amp;logoColor=white" alt="Supabase" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;About Midday&lt;/h2&gt; 
&lt;p&gt;Midday is an all-in-one tool designed to help freelancers, contractors, consultants, and solo entrepreneurs manage their business operations more efficiently. It integrates various functions typically scattered across multiple platforms into a single, cohesive system.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Time Tracking&lt;/strong&gt;: Allows for live time tracking of projects to boost productivity and collaboration, providing insightful project overviews.&lt;br /&gt; &lt;strong&gt;Invoicing&lt;/strong&gt;: An upcoming feature that will enable users to create web-based invoices, collaborate in real-time, and synchronize projects seamlessly.&lt;br /&gt; &lt;strong&gt;Magic Inbox&lt;/strong&gt;: Automatically matches incoming invoices or receipts to the correct transactions, simplifying financial tracking and organization.&lt;br /&gt; &lt;strong&gt;Vault&lt;/strong&gt;: Secure storage for important files like contracts and agreements, keeping everything in one place for easy access‚Äã.&lt;br /&gt; &lt;strong&gt;Seamless Export&lt;/strong&gt;: Facilitates easy export of financial data, packaged neatly in CSV files for accountants.&lt;br /&gt; &lt;strong&gt;Assistant&lt;/strong&gt;: Provides tailored insights into financial situations, helping users understand spending patterns, cut costs, and find documents.&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;We are working on the documentation to get started with Midday for local development: &lt;a href="https://docs.midday.ai"&gt;https://docs.midday.ai&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;App Architecture&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Monorepo&lt;/li&gt; 
 &lt;li&gt;Bun&lt;/li&gt; 
 &lt;li&gt;React&lt;/li&gt; 
 &lt;li&gt;TypeScript&lt;/li&gt; 
 &lt;li&gt;Nextjs&lt;/li&gt; 
 &lt;li&gt;Supabase&lt;/li&gt; 
 &lt;li&gt;Shadcn&lt;/li&gt; 
 &lt;li&gt;Tauri&lt;/li&gt; 
 &lt;li&gt;Expo&lt;/li&gt; 
 &lt;li&gt;TailwindCSS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hosting&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supabase (database, storage, realtime, auth)&lt;/li&gt; 
 &lt;li&gt;Vercel (Website, Dashboard)&lt;/li&gt; 
 &lt;li&gt;Fly.io (API/tRPC)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Services&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Trigger.dev (background jobs)&lt;/li&gt; 
 &lt;li&gt;Resend (Transactional &amp;amp; Marketing)&lt;/li&gt; 
 &lt;li&gt;Novu (notifications)&lt;/li&gt; 
 &lt;li&gt;Github Actions (CI/CD)&lt;/li&gt; 
 &lt;li&gt;GoCardLess (Bank connection EU)&lt;/li&gt; 
 &lt;li&gt;Plaid (Bank connection in Canada and US)&lt;/li&gt; 
 &lt;li&gt;Teller (Bank connection in the US)&lt;/li&gt; 
 &lt;li&gt;OpenPanel (Events and Analytics)&lt;/li&gt; 
 &lt;li&gt;Polar (Payment processing)&lt;/li&gt; 
 &lt;li&gt;Typesense (Search)&lt;/li&gt; 
 &lt;li&gt;Mistral&lt;/li&gt; 
 &lt;li&gt;OpenAI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Repo Activity&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/96aae855e5dd87c30d53c1d154b37cf7aa5a89b3.svg?sanitize=true" alt="Alt" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;strong&gt;&lt;a href="https://opensource.org/licenses/AGPL-3.0"&gt;AGPL-3.0&lt;/a&gt;&lt;/strong&gt; for non-commercial use.&lt;/p&gt; 
&lt;h3&gt;Commercial Use&lt;/h3&gt; 
&lt;p&gt;For commercial use or deployments requiring a setup fee, please contact us for a commercial license at &lt;a href="mailto:engineer@midday.ai"&gt;engineer@midday.ai&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;By using this software, you agree to the terms of the license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>David-patrick-chuks/Riona-AI-Agent</title>
      <link>https://github.com/David-patrick-chuks/Riona-AI-Agent</link>
      <description>&lt;p&gt;Riona Ai Agent üå∏ is built using Node.js and TypeScript üõ†Ô∏è, designed for seamless job execution üì∏. It's lightweight, efficient, and still evolving üöß‚Äîexciting new features coming soon! üåü&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Support the Project üôå&lt;/h2&gt; 
&lt;p&gt;If you'd like to support the development of Instagram-AI-Agent, please consider contributing to the following wallet addresses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Bitcoin (BTC)&lt;/strong&gt;: 1GkWY6pjn7KoAkCnUab2MxnxeEQihknfUi&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ethereum (ETH-erc20)&lt;/strong&gt;: 0xabb45f4d85e7d9db5de684c35ccde7239a167cbb&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Solana (SOL)&lt;/strong&gt;: EQV7fQ57zKNMFXy53WBfo2sCxtkRQVQLqj8sqWGnoyR&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Your support helps keep this project running and growing! üöÄ&lt;/p&gt; 
&lt;h2&gt;Instagram-AI-Agent üå∏&lt;/h2&gt; 
&lt;p&gt;Instagram-AI-Agent is an AI-powered automation tool designed for &lt;strong&gt;Instagram&lt;/strong&gt; to automate social media interactions such as posting, liking, and commenting. It leverages advanced AI models to generate engaging content, automate interactions, and manage Instagram accounts efficiently.&lt;/p&gt; 
&lt;p&gt;Before using the automation features, you can personalize the agent by training with the following, including: &lt;a href="https://www.instagram.com/dreamlandofficial_1?igsh=NTZvcHRkNjlhYzhp"&gt;https://www.instagram.com/dreamlandofficial_1?igsh=NTZvcHRkNjlhYzhp&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;YouTube Video URL&lt;/strong&gt; üé•&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Audio File&lt;/strong&gt; üéôÔ∏è&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Portfolio or Website Link&lt;/strong&gt; üåê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;File Formats Supported&lt;/strong&gt;: PDF, DOC, DOCX, TXT üìÑ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Instagram Automation&lt;/strong&gt;: Automatically log in, post photos, like posts, and leave thoughtful comments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI-Powered Content Generation&lt;/strong&gt;: Use Google Generative AI to create engaging captions and comments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Proxy Support&lt;/strong&gt;: Use proxies to manage multiple accounts and avoid rate limits.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cookie Management&lt;/strong&gt;: Save and load cookies to maintain sessions across restarts.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Upcoming Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Twitter Automation&lt;/strong&gt;: (Coming soon) Automatically tweet, retweet, and like tweets.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Automation&lt;/strong&gt;: (Coming soon) Automatically manage repositories, issues, and pull requests.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/david-patrick-chuks/Instagram-AI-Agent.git
cd Instagram-AI-Agent
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set up environment variables&lt;/strong&gt;: Rename the &lt;a href="http://_vscodecontentref_/1"&gt;.env.example&lt;/a&gt; file to &lt;a href="http://_vscodecontentref_/1"&gt;.env&lt;/a&gt; in the root directory and add your Instagram credentials. Refer to the &lt;a href="http://_vscodecontentref_/2"&gt;.env.example&lt;/a&gt; file for the required variables.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-dotenv"&gt;IGusername=your_instagram_username
IGpassword=your_instagram_password 

Xusername= #Twitter username
Xpassword= #Twitter password

MONGODB_URI= #MongoDB URI
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;MongoDB Setup (Using Docker)&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install Docker&lt;/strong&gt;: If you don't have Docker installed, download and install it from the &lt;a href="https://www.docker.com/products/docker-desktop/"&gt;official website&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run MongoDB using Docker Container&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Option 1:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker run -d -p 27017:27017 --name instagram-ai-mongodb mongodb/mongodb-community-server:latest
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Option 2:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker run -d -p 27017:27017 --name instagram-ai-mongodb -v mongodb_data:/data/db mongodb/mongodb-community-server:latest
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(Option 2: use this if you want to have like a permanent storage in you so your data won't be lost or remove if you stop or remove your Docker container)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Modify the MONGODB_URI in the .env file&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-dotenv"&gt;MONGODB_URI=mongodb://localhost:27017/instagram-ai-agent
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Verify the connection&lt;/strong&gt;: Open a new terminal and run the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker ps
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You should see the MongoDB container running.&lt;/p&gt; &lt;p&gt;Docker Commands (Additional Info):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;To stop the MongoDB container: &lt;pre&gt;&lt;code class="language-sh"&gt;docker stop instagram-ai-mongodb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;To start the MongoDB container: &lt;pre&gt;&lt;code class="language-sh"&gt;docker start instagram-ai-mongodb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;To remove the MongoDB container: &lt;pre&gt;&lt;code class="language-sh"&gt;docker rm instagram-ai-mongodb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;To remove the MongoDB container and its data: &lt;pre&gt;&lt;code class="language-sh"&gt;docker rm -v instagram-ai-mongodb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Run the Instagram agent&lt;/strong&gt;: &lt;pre&gt;&lt;code class="language-sh"&gt;npm start
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Upcoming Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the Twitter agent&lt;/strong&gt; (Coming soon):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;npm run start:twitter
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the GitHub agent&lt;/strong&gt; (Coming soon):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;npm run start:github
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project Structure&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;src/client&lt;/strong&gt;: Contains the main logic for interacting with social media platforms like Instagram.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/config&lt;/strong&gt;: Configuration files, including the logger setup.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/utils&lt;/strong&gt;: Utility functions for handling errors, cookies, data saving, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/Agent&lt;/strong&gt;: Contains the AI agent logic and training scripts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/Agent/training&lt;/strong&gt;: Training scripts for the AI agent.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/schema&lt;/strong&gt;: Schema definitions for AI-generated content and database models.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/test&lt;/strong&gt;: Contains test data and scripts, such as example tweets.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Logging&lt;/h2&gt; 
&lt;p&gt;The project uses a custom logger to log information, warnings, and errors. Logs are saved in the &lt;a href="http://_vscodecontentref_/3"&gt;logs&lt;/a&gt; directory.&lt;/p&gt; 
&lt;h2&gt;Error Handling&lt;/h2&gt; 
&lt;p&gt;Process-level error handlers are set up to catch unhandled promise rejections, uncaught exceptions, and process warnings. Errors are logged using the custom logger.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Please fork the repository and submit a pull request with your changes.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License. See the LICENSE file for details.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://ai.google/tools/"&gt;Google Generative AI&lt;/a&gt; for providing the AI models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/puppeteer/puppeteer"&gt;Puppeteer&lt;/a&gt; for browser automation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/berstend/puppeteer-extra"&gt;puppeteer-extra&lt;/a&gt; for additional plugins and enhancements.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Bistutu/FluentRead</title>
      <link>https://github.com/Bistutu/FluentRead</link>
      <description>&lt;p&gt;Open Immersive Translate. A revolutionary open-source browser translation plugin that enables everyone to have a native-like reading experience. ÂºÄÊ∫êÁöÑÊ≤âÊµ∏ÂºèÁøªËØëÔºå‰∏ÄÊ¨æÈù©ÂëΩÊÄßÁöÑÊµèËßàÂô®ÁøªËØëÊèí‰ª∂ÔºåËÆ©ÊâÄÊúâ‰∫∫ÈÉΩËÉΩÂ§üÊã•ÊúâÊØçËØ≠Ëà¨ÁöÑÈòÖËØª‰ΩìÈ™å„ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ÊµÅÁïÖÈòÖËØª (FluentRead)&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://github.com/Bistutu/FluentRead/raw/main/misc/README_EN.md"&gt;English&lt;/a&gt; | ‰∏≠Êñá&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Open Immersive Translate ÂºÄÊ∫êÁöÑÊ≤âÊµ∏ÂºèÁøªËØë„ÄÇ&lt;/p&gt; 
&lt;p&gt;‰∏ÄÊ¨æÈù©ÂëΩÊÄßÁöÑÊµèËßàÂô®ÂºÄÊ∫êÁøªËØëÊèí‰ª∂ÔºåËÆ©ÊâÄÊúâ‰∫∫ÈÉΩËÉΩÂ§üÊã•ÊúâÊØçËØ≠Ëà¨ÁöÑÈòÖËØª‰ΩìÈ™å„ÄÇ&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://fluent.thinkstu.com/"&gt;ÂÆòÊñπÊñáÊ°£ÔºàÂøÖÁúãÔºâ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bilibili.com/video/BV1ux4y1e73x/"&gt;BÁ´ôËßÜÈ¢ë‰ªãÁªç&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://deepwiki.com/Bistutu/FluentRead"&gt;deepwiki Êû∂ÊûÑ‰ªãÁªç&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üåü ÁâπÊÄß&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Êô∫ËÉΩÁøªËØë&lt;/strong&gt;ÔºöÊîØÊåÅ 20+ ÁßçÁøªËØëÂºïÊìéÔºåÂåÖÊã¨‰º†ÁªüÁøªËØëÂíå AI Â§ßÊ®°Âûã„ÄÇÂ¶ÇÔºöÂæÆËΩØÁøªËØë„ÄÅË∞∑Ê≠åÁøªËØë„ÄÅDeepLÁøªËØë„ÄÅOpenAI„ÄÅDeepSeek„ÄÅKimi„ÄÅOllama„ÄÅËá™ÂÆö‰πâÂºïÊìéÁ≠â„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂèåËØ≠ÂØπÁÖß&lt;/strong&gt;ÔºöÊîØÊåÅÂéüÊñá‰∏éËØëÊñáÂπ∂ÂàóÊòæÁ§∫ÔºåËÆ©ÈòÖËØªÊõ¥ËΩªÊùæ„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂàíËØçÁøªËØë&lt;/strong&gt;ÔºöÈÄâ‰∏≠‰ªªÊÑèÊñáÊú¨ÔºåÂç≥ÂèØËé∑ÂæóÂç≥Êó∂ÁøªËØëÁªìÊûúÔºå‰∏ÄÈîÆÂ§çÂà∂ËØëÊñáÔºåÊèêÈ´òÈòÖËØªÊïàÁéá„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÖ®ÊñáÁøªËØë&lt;/strong&gt;ÔºöÈÄöËøáÊÇ¨ÊµÆÁêÉ‰∏ÄÈîÆÁøªËØëÊï¥‰∏™ÁΩëÈ°µÔºåÊó†ÈúÄÂà∑Êñ∞È°µÈù¢Âç≥ÂèØÂàáÊç¢„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈöêÁßÅ‰øùÊä§&lt;/strong&gt;ÔºöÊâÄÊúâÊï∞ÊçÆÊú¨Âú∞Â≠òÂÇ®Ôºå‰ª£Á†ÅÂºÄÊ∫êÈÄèÊòé„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;È´òÂ∫¶ÂÆöÂà∂&lt;/strong&gt;Ôºö‰∏∞ÂØåÁöÑËá™ÂÆö‰πâÈÄâÈ°πÔºåÊª°Ë∂≥‰∏çÂêåÂú∫ÊôØÈúÄÊ±Ç„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÆåÂÖ®ÂÖçË¥π&lt;/strong&gt;ÔºöÂºÄÊ∫êÂÖçË¥πÔºåÈùûÂïÜ‰∏öÂåñÈ°πÁõÆ„ÄÇ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;kbd&gt;&lt;img src="https://raw.githubusercontent.com/Bistutu/FluentRead/main/misc/sample-git-1.gif" alt="sample-git-1.gif" style="width: 80%; max-width: 100%;border: 1px solid black;" /&gt;&lt;/kbd&gt;&lt;/p&gt; 
&lt;p&gt;&lt;kbd&gt;&lt;img src="https://raw.githubusercontent.com/Bistutu/FluentRead/main/misc/sample-git-4.gif" alt="sample-git-4.gif" style="width: 80%; max-width: 100%;border: 1px solid black;" /&gt;&lt;/kbd&gt;&lt;/p&gt; 
&lt;p&gt;&lt;kbd&gt;&lt;img src="https://raw.githubusercontent.com/Bistutu/FluentRead/main/misc/highlight_trans.png" alt="sample-git-4.gif" style="width: 80%; max-width: 100%;border: 1px solid black;" /&gt;&lt;/kbd&gt;&lt;/p&gt; 
&lt;h2&gt;üì¶ ÂÆâË£Ö&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;ÊµèËßàÂô®&lt;/th&gt; 
   &lt;th&gt;ÂÆâË£ÖÊñπÂºè&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Chrome&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://chromewebstore.google.com/detail/%E6%B5%81%E7%95%85%E9%98%85%E8%AF%BB/djnlaiohfaaifbibleebjggkghlmcpcj?hl=zh-CN&amp;amp;authuser=0"&gt;Chrome Â∫îÁî®ÂïÜÂ∫ó&lt;/a&gt; | &lt;a href="https://www.crxsoso.com/webstore/detail/djnlaiohfaaifbibleebjggkghlmcpcj"&gt;ÂõΩÂÜÖÈïúÂÉè&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Edge&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://microsoftedge.microsoft.com/addons/detail/%E6%B5%81%E7%95%85%E9%98%85%E8%AF%BB/kakgmllfpjldjhcnkghpplmlbnmcoflp?hl=zh-CN"&gt;Edge Â∫îÁî®ÂïÜÂ∫ó&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Firefox&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://addons.mozilla.org/zh-CN/firefox/addon/%E6%B5%81%E7%95%85%E9%98%85%E8%AF%BB/"&gt;Firefox ÈôÑÂä†ÁªÑ‰ª∂ÂïÜÂ∫ó&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;üìñ ‰ΩøÁî®ÊñáÊ°£&lt;/h2&gt; 
&lt;p&gt;ËØ∑Áõ¥Êé•ËÆøÈóÆ &lt;a href="https://fluent.thinkstu.com/"&gt;ÊµÅÁïÖÈòÖËØªÂÆòÊñπÊñáÊ°£&lt;/a&gt; Ëé∑ÂèñËØ¶ÁªÜÁöÑÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÂäüËÉΩ‰ªãÁªç&lt;/li&gt; 
 &lt;li&gt;ÈÖçÁΩÆÊåáÂçó&lt;/li&gt; 
 &lt;li&gt;‰ΩøÁî®ÊïôÁ®ã&lt;/li&gt; 
 &lt;li&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Star ÂéÜÂè≤ËÆ∞ÂΩï&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#Bistutu/FluentRead&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=Bistutu/FluentRead&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openreplay/openreplay</title>
      <link>https://github.com/openreplay/openreplay</link>
      <description>&lt;p&gt;Session replay, cobrowsing and product analytics you can self-host. Ideal for reproducing issues and iterating on your product.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/openreplay/openreplay/main/README_FR.md"&gt;Fran√ßais&lt;/a&gt; &amp;nbsp;|&amp;nbsp; &lt;a href="https://raw.githubusercontent.com/openreplay/openreplay/main/README_ESP.md"&gt;Espa√±ol&lt;/a&gt; &amp;nbsp;|&amp;nbsp; &lt;a href="https://raw.githubusercontent.com/openreplay/openreplay/main/README_RU.md"&gt;–†—É—Å—Å–∫–∏–π&lt;/a&gt; &amp;nbsp;|&amp;nbsp; &lt;a href="https://raw.githubusercontent.com/openreplay/openreplay/main/README_AR.md"&gt;ÿßŸÑÿπÿ±ÿ®Ÿäÿ©&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://openreplay.com/#gh-light-mode-only"&gt; &lt;img src="https://raw.githubusercontent.com/openreplay/openreplay/main/static/openreplay-git-banner-light.png" width="100%" /&gt; &lt;/a&gt; &lt;a href="https://openreplay.com/#gh-dark-mode-only"&gt; &lt;img src="https://raw.githubusercontent.com/openreplay/openreplay/main/static/openreplay-git-banner-dark.png" width="100%" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt;Session replay for developers&lt;/h3&gt; 
&lt;p align="center"&gt;The most advanced session replay for building delightful web apps.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://docs.openreplay.com/deployment/deploy-aws"&gt; &lt;img src="https://raw.githubusercontent.com/openreplay/openreplay/main/static/btn-deploy-aws.svg?sanitize=true" height="40" /&gt; &lt;/a&gt; &lt;a href="https://docs.openreplay.com/deployment/deploy-gcp"&gt; &lt;img src="https://raw.githubusercontent.com/openreplay/openreplay/main/static/btn-deploy-google-cloud.svg?sanitize=true" height="40" /&gt; &lt;/a&gt; &lt;a href="https://docs.openreplay.com/deployment/deploy-azure"&gt; &lt;img src="https://raw.githubusercontent.com/openreplay/openreplay/main/static/btn-deploy-azure.svg?sanitize=true" height="40" /&gt; &lt;/a&gt; &lt;a href="https://docs.openreplay.com/deployment/deploy-digitalocean"&gt; &lt;img src="https://raw.githubusercontent.com/openreplay/openreplay/main/static/btn-deploy-digital-ocean.svg?sanitize=true" height="40" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/openreplay/openreplay"&gt; &lt;img src="https://raw.githubusercontent.com/openreplay/openreplay/main/static/openreplay-git-hero.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;OpenReplay is an open-source session replay suite you can host yourself, that lets you see what users do on your web app, helping you troubleshoot issues faster.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Session replay.&lt;/strong&gt; OpenReplay replays what users do, but not only. It also shows you what went under the hood, how your website or app behaves by capturing network activity, console logs, JS errors, store actions/state, page speed metrics, cpu/memory usage and much more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Low footprint&lt;/strong&gt;. With a ~26KB (.br) tracker that asynchronously sends minimal data for a very limited impact on performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Self-hosted&lt;/strong&gt;. No more security compliance checks, 3rd-parties processing user data. Everything OpenReplay captures stays in your cloud for a complete control over your data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy controls&lt;/strong&gt;. Fine-grained security features for sanitizing user data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy deploy&lt;/strong&gt;. With support of major public cloud providers (AWS, GCP, Azure, DigitalOcean).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Session replay:&lt;/strong&gt; Lets you relive your users' experience, see where they struggle and how it affects their behavior. Each session replay is automatically analyzed based on heuristics, for easy triage.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Spot:&lt;/strong&gt; A Chrome extension that lets record bugs directly from your browser ‚Äî each recording includes all the technical details developers need to fix them.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DevTools:&lt;/strong&gt; It's like debugging in your own browser. OpenReplay provides you with the full context (network activity, JS errors, store actions/state and 40+ metrics) so you can instantly reproduce bugs and understand performance issues.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Assist:&lt;/strong&gt; Helps you support your users by seeing their live screen and instantly hopping on call (WebRTC) with them without requiring any 3rd-party screen sharing software.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Omni-search:&lt;/strong&gt; Search and filter by almost any user action/criteria, session attribute or technical event, so you can answer any question. No instrumentation required.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Analytics:&lt;/strong&gt; For surfacing the most impactful issues causing conversion and revenue loss.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fine-grained privacy controls:&lt;/strong&gt; Choose what to capture, what to obscure or what to ignore so user data doesn't even reach your servers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Plugins oriented:&lt;/strong&gt; Get to the root cause even faster by tracking application state (Redux, VueX, MobX, NgRx, Pinia and Zustand) and logging GraphQL queries (Apollo, Relay) and Fetch/Axios requests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Integrations:&lt;/strong&gt; Sync your backend logs with your session replays and see what happened front-to-back. OpenReplay supports Sentry, Datadog, CloudWatch, Stackdriver, Elastic and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Deployment Options&lt;/h2&gt; 
&lt;p&gt;OpenReplay can be deployed anywhere. Follow our step-by-step guides for deploying it on major public clouds:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.openreplay.com/deployment/deploy-aws"&gt;AWS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.openreplay.com/deployment/deploy-gcp"&gt;Google Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.openreplay.com/deployment/deploy-azure"&gt;Azure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.openreplay.com/deployment/deploy-digitalocean"&gt;Digital Ocean&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.openreplay.com/deployment/deploy-scaleway"&gt;Scaleway&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.openreplay.com/deployment/deploy-ovhcloud"&gt;OVHcloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.openreplay.com/deployment/deploy-kubernetes"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;OpenReplay Cloud&lt;/h2&gt; 
&lt;p&gt;For those who want to simply use OpenReplay as a service, &lt;a href="https://app.openreplay.com/signup"&gt;sign up&lt;/a&gt; for a free account on our cloud offering.&lt;/p&gt; 
&lt;h2&gt;Community Support&lt;/h2&gt; 
&lt;p&gt;Please refer to the &lt;a href="https://docs.openreplay.com/"&gt;official OpenReplay documentation&lt;/a&gt;. That should help you troubleshoot common issues. For additional help, you can reach out to us on one of these channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://slack.openreplay.com"&gt;Slack&lt;/a&gt;&amp;nbsp;(Connect with our engineers and community)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openreplay/openreplay/issues"&gt;GitHub&lt;/a&gt;&amp;nbsp;(Bug and issue reports)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/OpenReplayHQ"&gt;Twitter&lt;/a&gt;&amp;nbsp;(Product updates, Great content)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCcnWlW-5wEuuPAwjTR1Ydxw"&gt;YouTube&lt;/a&gt;&amp;nbsp;(How-to tutorials, past Community Calls)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://openreplay.com"&gt;Website chat&lt;/a&gt; (Talk to us)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We're always on the lookout for contributions to OpenReplay, and we're glad you're considering it! Not sure where to start? Look for open issues, preferably those marked as good first issues.&lt;/p&gt; 
&lt;p&gt;See our &lt;a href="https://raw.githubusercontent.com/openreplay/openreplay/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;Also, feel free to join our &lt;a href="https://slack.openreplay.com"&gt;Slack&lt;/a&gt; to ask questions, discuss ideas or connect with our contributors.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This monorepo uses several licenses. See &lt;a href="https://raw.githubusercontent.com/openreplay/openreplay/main/LICENSE"&gt;LICENSE&lt;/a&gt; for more details.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>