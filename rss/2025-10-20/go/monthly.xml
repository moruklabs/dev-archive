<rss version="2.0">
  <channel>
    <title>GitHub Go Monthly Trending</title>
    <description>Monthly Trending of Go in GitHub</description>
    <pubDate>Sun, 19 Oct 2025 01:51:30 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>gin-gonic/gin</title>
      <link>https://github.com/gin-gonic/gin</link>
      <description>&lt;p&gt;Gin is a high-performance HTTP web framework written in Go. It provides a Martini-like API but with significantly better performance‚Äîup to 40 times faster‚Äîthanks to httprouter. Gin is designed for building REST APIs, web applications, and microservices.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gin Web Framework&lt;/h1&gt; 
&lt;img align="right" width="159px" src="https://raw.githubusercontent.com/gin-gonic/logo/master/color.png" /&gt; 
&lt;p&gt;&lt;a href="https://github.com/gin-gonic/gin/actions/workflows/gin.yml"&gt;&lt;img src="https://github.com/gin-gonic/gin/actions/workflows/gin.yml/badge.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/gin-gonic/gin"&gt;&lt;img src="https://codecov.io/gh/gin-gonic/gin/branch/master/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/gin-gonic/gin"&gt;&lt;img src="https://goreportcard.com/badge/github.com/gin-gonic/gin" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/gin-gonic/gin?tab=doc"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/gin-gonic/gin?status.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://sourcegraph.com/github.com/gin-gonic/gin?badge"&gt;&lt;img src="https://sourcegraph.com/github.com/gin-gonic/gin/-/badge.svg?sanitize=true" alt="Sourcegraph" /&gt;&lt;/a&gt; &lt;a href="https://www.codetriage.com/gin-gonic/gin"&gt;&lt;img src="https://www.codetriage.com/gin-gonic/gin/badges/users.svg?sanitize=true" alt="Open Source Helpers" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gin-gonic/gin/releases"&gt;&lt;img src="https://img.shields.io/github/release/gin-gonic/gin.svg?style=flat-square" alt="Release" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üì∞ &lt;a href="https://gin-gonic.com/en/blog/news/gin-1-11-0-release-announcement/"&gt;Announcing Gin 1.11.0!&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Read about the latest features and improvements in Gin 1.11.0 on our official blog.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Gin is a high-performance HTTP web framework written in &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt;. It provides a Martini-like API but with significantly better performance‚Äîup to 40 times faster‚Äîthanks to &lt;a href="https://github.com/julienschmidt/httprouter"&gt;httprouter&lt;/a&gt;. Gin is designed for building REST APIs, web applications, and microservices where speed and developer productivity are essential.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Why choose Gin?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Gin combines the simplicity of Express.js-style routing with Go's performance characteristics, making it ideal for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Building high-throughput REST APIs&lt;/li&gt; 
 &lt;li&gt;Developing microservices that need to handle many concurrent requests&lt;/li&gt; 
 &lt;li&gt;Creating web applications that require fast response times&lt;/li&gt; 
 &lt;li&gt;Prototyping web services quickly with minimal boilerplate&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Gin's key features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Zero allocation router&lt;/strong&gt; - Extremely memory-efficient routing with no heap allocations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;High performance&lt;/strong&gt; - Benchmarks show superior speed compared to other Go web frameworks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Middleware support&lt;/strong&gt; - Extensible middleware system for authentication, logging, CORS, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Crash-free&lt;/strong&gt; - Built-in recovery middleware prevents panics from crashing your server&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSON validation&lt;/strong&gt; - Automatic request/response JSON binding and validation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Route grouping&lt;/strong&gt; - Organize related routes and apply common middleware&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Error management&lt;/strong&gt; - Centralized error handling and logging&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Built-in rendering&lt;/strong&gt; - Support for JSON, XML, HTML templates, and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt; - Large ecosystem of community middleware and plugins&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Go version&lt;/strong&gt;: Gin requires &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt; version &lt;a href="https://go.dev/doc/devel/release#go1.24.0"&gt;1.24&lt;/a&gt; or above&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Basic Go knowledge&lt;/strong&gt;: Familiarity with Go syntax and package management is helpful&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;With &lt;a href="https://go.dev/wiki/Modules#how-to-use-modules"&gt;Go's module support&lt;/a&gt;, simply import Gin in your code and Go will automatically fetch it during build:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import "github.com/gin-gonic/gin"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Your First Gin Application&lt;/h3&gt; 
&lt;p&gt;Here's a complete example that demonstrates Gin's simplicity:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "net/http"

  "github.com/gin-gonic/gin"
)

func main() {
  // Create a Gin router with default middleware (logger and recovery)
  r := gin.Default()
  
  // Define a simple GET endpoint
  r.GET("/ping", func(c *gin.Context) {
    // Return JSON response
    c.JSON(http.StatusOK, gin.H{
      "message": "pong",
    })
  })
  
  // Start server on port 8080 (default)
  // Server will listen on 0.0.0.0:8080 (localhost:8080 on Windows)
  r.Run()
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Running the application:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Save the code above as &lt;code&gt;main.go&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the application:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;go run main.go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open your browser and visit &lt;a href="http://localhost:8080/ping"&gt;&lt;code&gt;http://localhost:8080/ping&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You should see: &lt;code&gt;{"message":"pong"}&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;What this example demonstrates:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Creating a Gin router with default middleware&lt;/li&gt; 
 &lt;li&gt;Defining HTTP endpoints with simple handler functions&lt;/li&gt; 
 &lt;li&gt;Returning JSON responses&lt;/li&gt; 
 &lt;li&gt;Starting an HTTP server&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Next Steps&lt;/h3&gt; 
&lt;p&gt;After running your first Gin application, explore these resources to learn more:&lt;/p&gt; 
&lt;h4&gt;üìö Learning Resources&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/gin-gonic/gin/master/docs/doc.md"&gt;Gin Quick Start Guide&lt;/a&gt;&lt;/strong&gt; - Comprehensive tutorial with API examples and build configurations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/gin-gonic/examples"&gt;Example Repository&lt;/a&gt;&lt;/strong&gt; - Ready-to-run examples demonstrating various Gin use cases: 
  &lt;ul&gt; 
   &lt;li&gt;REST API development&lt;/li&gt; 
   &lt;li&gt;Authentication &amp;amp; middleware&lt;/li&gt; 
   &lt;li&gt;File uploads and downloads&lt;/li&gt; 
   &lt;li&gt;WebSocket connections&lt;/li&gt; 
   &lt;li&gt;Template rendering&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìñ Documentation&lt;/h2&gt; 
&lt;h3&gt;API Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://pkg.go.dev/github.com/gin-gonic/gin"&gt;Go.dev API Documentation&lt;/a&gt;&lt;/strong&gt; - Complete API reference with examples&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;User Guides&lt;/h3&gt; 
&lt;p&gt;The comprehensive documentation is available on &lt;a href="https://gin-gonic.com"&gt;gin-gonic.com&lt;/a&gt; in multiple languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/en/docs/"&gt;English&lt;/a&gt; | &lt;a href="https://gin-gonic.com/zh-cn/docs/"&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | &lt;a href="https://gin-gonic.com/zh-tw/docs/"&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/ja/docs/"&gt;Êó•Êú¨Ë™û&lt;/a&gt; | &lt;a href="https://gin-gonic.com/ko-kr/docs/"&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt; | &lt;a href="https://gin-gonic.com/es/docs/"&gt;Espa√±ol&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/tr/docs/"&gt;Turkish&lt;/a&gt; | &lt;a href="https://gin-gonic.com/fa/docs/"&gt;Persian&lt;/a&gt; | &lt;a href="https://gin-gonic.com/pt/docs/"&gt;Portugu√™s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/ru/docs/"&gt;Russian&lt;/a&gt; | &lt;a href="https://gin-gonic.com/id/docs/"&gt;Indonesian&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Official Tutorials&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://go.dev/doc/tutorial/web-service-gin"&gt;Go.dev Tutorial: Developing a RESTful API with Go and Gin&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚ö° Performance Benchmarks&lt;/h2&gt; 
&lt;p&gt;Gin demonstrates exceptional performance compared to other Go web frameworks. It uses a custom version of &lt;a href="https://github.com/julienschmidt/httprouter"&gt;HttpRouter&lt;/a&gt; for maximum efficiency. &lt;a href="https://raw.githubusercontent.com/gin-gonic/gin/master/BENCHMARKS.md"&gt;View detailed benchmarks ‚Üí&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Gin vs. Other Go Frameworks&lt;/strong&gt; (GitHub API routing benchmark):&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Benchmark name&lt;/th&gt; 
   &lt;th align="right"&gt;(1)&lt;/th&gt; 
   &lt;th align="right"&gt;(2)&lt;/th&gt; 
   &lt;th align="right"&gt;(3)&lt;/th&gt; 
   &lt;th align="right"&gt;(4)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGin_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;&lt;strong&gt;43550&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="right"&gt;&lt;strong&gt;27364 ns/op&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="right"&gt;&lt;strong&gt;0 B/op&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="right"&gt;&lt;strong&gt;0 allocs/op&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkAce_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;40543&lt;/td&gt; 
   &lt;td align="right"&gt;29670 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkAero_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;57632&lt;/td&gt; 
   &lt;td align="right"&gt;20648 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkBear_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;9234&lt;/td&gt; 
   &lt;td align="right"&gt;216179 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;86448 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;943 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkBeego_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;7407&lt;/td&gt; 
   &lt;td align="right"&gt;243496 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;71456 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;609 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkBone_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;420&lt;/td&gt; 
   &lt;td align="right"&gt;2922835 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;720160 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;8620 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkChi_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;7620&lt;/td&gt; 
   &lt;td align="right"&gt;238331 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;87696 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;609 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkDenco_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;18355&lt;/td&gt; 
   &lt;td align="right"&gt;64494 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;20224 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;167 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkEcho_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;31251&lt;/td&gt; 
   &lt;td align="right"&gt;38479 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGocraftWeb_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;4117&lt;/td&gt; 
   &lt;td align="right"&gt;300062 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;131656 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;1686 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGoji_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;3274&lt;/td&gt; 
   &lt;td align="right"&gt;416158 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;56112 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;334 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGojiv2_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;1402&lt;/td&gt; 
   &lt;td align="right"&gt;870518 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;352720 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;4321 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGoJsonRest_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;2976&lt;/td&gt; 
   &lt;td align="right"&gt;401507 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;134371 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;2737 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGoRestful_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;410&lt;/td&gt; 
   &lt;td align="right"&gt;2913158 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;910144 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;2938 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGorillaMux_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;346&lt;/td&gt; 
   &lt;td align="right"&gt;3384987 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;251650 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;1994 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGowwwRouter_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;10000&lt;/td&gt; 
   &lt;td align="right"&gt;143025 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;72144 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;501 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkHttpRouter_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;55938&lt;/td&gt; 
   &lt;td align="right"&gt;21360 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkHttpTreeMux_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;10000&lt;/td&gt; 
   &lt;td align="right"&gt;153944 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;65856 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;671 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkKocha_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;10000&lt;/td&gt; 
   &lt;td align="right"&gt;106315 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;23304 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;843 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkLARS_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;47779&lt;/td&gt; 
   &lt;td align="right"&gt;25084 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkMacaron_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;3266&lt;/td&gt; 
   &lt;td align="right"&gt;371907 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;149409 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;1624 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkMartini_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;331&lt;/td&gt; 
   &lt;td align="right"&gt;3444706 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;226551 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;2325 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkPat_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;273&lt;/td&gt; 
   &lt;td align="right"&gt;4381818 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;1483152 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;26963 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkPossum_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;10000&lt;/td&gt; 
   &lt;td align="right"&gt;164367 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;84448 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;609 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkR2router_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;10000&lt;/td&gt; 
   &lt;td align="right"&gt;160220 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;77328 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;979 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkRivet_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;14625&lt;/td&gt; 
   &lt;td align="right"&gt;82453 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;16272 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;167 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkTango_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;6255&lt;/td&gt; 
   &lt;td align="right"&gt;279611 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;63826 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;1618 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkTigerTonic_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;2008&lt;/td&gt; 
   &lt;td align="right"&gt;687874 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;193856 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;4474 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkTraffic_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;355&lt;/td&gt; 
   &lt;td align="right"&gt;3478508 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;820744 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;14114 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkVulcan_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;6885&lt;/td&gt; 
   &lt;td align="right"&gt;193333 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;19894 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;609 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;(1): Total Repetitions achieved in constant time, higher means more confident result&lt;/li&gt; 
 &lt;li&gt;(2): Single Repetition Duration (ns/op), lower is better&lt;/li&gt; 
 &lt;li&gt;(3): Heap Memory (B/op), lower is better&lt;/li&gt; 
 &lt;li&gt;(4): Average Allocations per Repetition (allocs/op), lower is better&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üîå Middleware Ecosystem&lt;/h2&gt; 
&lt;p&gt;Gin has a rich ecosystem of middleware for common web development needs. Explore community-contributed middleware:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/gin-contrib"&gt;gin-contrib&lt;/a&gt;&lt;/strong&gt; - Official middleware collection including:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Authentication (JWT, Basic Auth, Sessions)&lt;/li&gt; 
   &lt;li&gt;CORS, Rate limiting, Compression&lt;/li&gt; 
   &lt;li&gt;Logging, Metrics, Tracing&lt;/li&gt; 
   &lt;li&gt;Static file serving, Template engines&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/gin-gonic/contrib"&gt;gin-gonic/contrib&lt;/a&gt;&lt;/strong&gt; - Additional community middleware&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üè¢ Production Usage&lt;/h2&gt; 
&lt;p&gt;Gin powers many high-traffic applications and services in production:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/appleboy/gorush"&gt;gorush&lt;/a&gt;&lt;/strong&gt; - High-performance push notification server&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/fnproject/fn"&gt;fnproject&lt;/a&gt;&lt;/strong&gt; - Container-native, serverless platform&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/photoprism/photoprism"&gt;photoprism&lt;/a&gt;&lt;/strong&gt; - AI-powered personal photo management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/luraproject/lura"&gt;lura&lt;/a&gt;&lt;/strong&gt; - Ultra-performant API Gateway framework&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/thoas/picfit"&gt;picfit&lt;/a&gt;&lt;/strong&gt; - Real-time image processing server&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/distribworks/dkron"&gt;dkron&lt;/a&gt;&lt;/strong&gt; - Distributed job scheduling system&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; 
&lt;p&gt;Gin is the work of hundreds of contributors from around the world. We welcome and appreciate your contributions!&lt;/p&gt; 
&lt;h3&gt;How to Contribute&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üêõ &lt;strong&gt;Report bugs&lt;/strong&gt; - Help us identify and fix issues&lt;/li&gt; 
 &lt;li&gt;üí° &lt;strong&gt;Suggest features&lt;/strong&gt; - Share your ideas for improvements&lt;/li&gt; 
 &lt;li&gt;üìù &lt;strong&gt;Improve documentation&lt;/strong&gt; - Help make our docs clearer&lt;/li&gt; 
 &lt;li&gt;üîß &lt;strong&gt;Submit code&lt;/strong&gt; - Fix bugs or implement new features&lt;/li&gt; 
 &lt;li&gt;üß™ &lt;strong&gt;Write tests&lt;/strong&gt; - Improve our test coverage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Getting Started with Contributing&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Check out our &lt;a href="https://raw.githubusercontent.com/gin-gonic/gin/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for detailed guidelines&lt;/li&gt; 
 &lt;li&gt;Join our community discussions and ask questions&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;All contributions are valued and help make Gin better for everyone!&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jesseduffield/lazydocker</title>
      <link>https://github.com/jesseduffield/lazydocker</link>
      <description>&lt;p&gt;The lazier way to manage everything docker&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=lazydocker_20231023"&gt; 
  &lt;div&gt; 
   &lt;img src="https://github.com/warpdotdev/brand-assets/raw/main/Github/Sponsor/Warp-Github-LG-02.png?raw=true" width="400" alt="Warp" /&gt; 
  &lt;/div&gt; &lt;b&gt;Warp, the intelligent terminal&lt;/b&gt; &lt;br /&gt; &lt;b&gt;Available for MacOS and Linux&lt;/b&gt; &lt;br /&gt; 
  &lt;div&gt; 
   &lt;sup&gt;Visit&amp;nbsp;warp.dev&amp;nbsp;to learn more.&lt;/sup&gt; 
  &lt;/div&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
 &lt;a href="https://tuple.app/lazydocker"&gt; 
  &lt;div&gt; 
   &lt;img src="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/assets/tuple.png" width="400" alt="Tuple" /&gt; 
  &lt;/div&gt; &lt;b&gt;Tuple, the premier screen sharing app for developers on macOS and Windows.&lt;/b&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.subble.com"&gt; 
  &lt;div&gt; 
   &lt;img src="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/assets/subble.webp" width="400" alt="Subble" /&gt; 
  &lt;/div&gt; &lt;b&gt;I (Jesse) co-founded Subble to save your company time and money by finding unused and over-provisioned SaaS licences. Check it out!&lt;/b&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;img src="https://user-images.githubusercontent.com/8456633/59972109-8e9c8480-95cc-11e9-8350-38f7f86ba76d.png" /&gt; &lt;/p&gt; 
&lt;p&gt;A simple terminal UI for both docker and docker-compose, written in Go with the &lt;a href="https://github.com/jroimartin/gocui" title="gocui"&gt;gocui&lt;/a&gt; library.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/jesseduffield/lazygit/workflows/Continuous%20Integration/badge.svg?sanitize=true" alt="CI" /&gt; &lt;a href="https://goreportcard.com/report/github.com/jesseduffield/lazydocker"&gt;&lt;img src="https://goreportcard.com/badge/github.com/jesseduffield/lazydocker" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://golangci.com"&gt;&lt;img src="https://golangci.com/badges/github.com/jesseduffield/lazydocker.svg?sanitize=true" alt="GolangCI" /&gt;&lt;/a&gt; &lt;a href="http://godoc.org/github.com/jesseduffield/lazydocker"&gt;&lt;img src="https://godoc.org/github.com/jesseduffield/lazydocker?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/repo-size/jesseduffield/lazydocker" alt="GitHub repo size" /&gt; &lt;a href="https://github.com/jesseduffield/lazydocker/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/jesseduffield/lazydocker/total" alt="GitHub Releases" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jesseduffield/lazydocker/releases/latest"&gt;&lt;img src="https://img.shields.io/github/tag/jesseduffield/lazydocker.svg?sanitize=true" alt="GitHub tag" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Homebrew/homebrew-core/raw/master/Formula/lazydocker.rb"&gt;&lt;img src="https://img.shields.io/homebrew/v/lazydocker" alt="homebrew" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/resources/demo3.gif" alt="Gif" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/NICqQPxwJWw"&gt;Demo&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p align="center"&gt; Maintenance of this project is made possible by all the &lt;a href="https://github.com/jesseduffield/lazydocker/graphs/contributors"&gt;contributors&lt;/a&gt; and &lt;a href="https://github.com/sponsors/jesseduffield"&gt;sponsors&lt;/a&gt;. If you'd like to sponsor this project and have your avatar or company logo appear below &lt;a href="https://github.com/sponsors/jesseduffield"&gt;click here&lt;/a&gt;. üíô &lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;!-- sponsors --&gt;&lt;a href="https://github.com/intabulas"&gt;&lt;img src="https://github.com/intabulas.png" width="60px" alt="Mark Lussier" /&gt;&lt;/a&gt;&lt;a href="https://github.com/peppy"&gt;&lt;img src="https://github.com/peppy.png" width="60px" alt="Dean Herbert" /&gt;&lt;/a&gt;&lt;a href="https://github.com/piot"&gt;&lt;img src="https://github.com/piot.png" width="60px" alt="Peter Bjorklund" /&gt;&lt;/a&gt;&lt;a href="https://github.com/rgwood"&gt;&lt;img src="https://github.com/rgwood.png" width="60px" alt="Reilly Wood" /&gt;&lt;/a&gt;&lt;a href="https://github.com/oliverguenther"&gt;&lt;img src="https://github.com/oliverguenther.png" width="60px" alt="Oliver G√ºnther" /&gt;&lt;/a&gt;&lt;a href="https://github.com/pawanjay176"&gt;&lt;img src="https://github.com/pawanjay176.png" width="60px" alt="Pawan Dhananjay" /&gt;&lt;/a&gt;&lt;a href="https://github.com/bdach"&gt;&lt;img src="https://github.com/bdach.png" width="60px" alt="Bart≈Çomiej Dach" /&gt;&lt;/a&gt;&lt;a href="https://github.com/davidklsn"&gt;&lt;img src="https://github.com/davidklsn.png" width="60px" alt="David Karlsson" /&gt;&lt;/a&gt;&lt;a href="https://github.com/carstengehling"&gt;&lt;img src="https://github.com/carstengehling.png" width="60px" alt="Carsten Gehling" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ceuk"&gt;&lt;img src="https://github.com/ceuk.png" width="60px" alt="CEUK" /&gt;&lt;/a&gt;&lt;a href="https://github.com/akospwc"&gt;&lt;img src="https://github.com/akospwc.png" width="60px" alt="Akos Putz" /&gt;&lt;/a&gt;&lt;a href="https://github.com/Xetera"&gt;&lt;img src="https://github.com/Xetera.png" width="60px" alt="Xetera" /&gt;&lt;/a&gt;&lt;a href="https://github.com/HoldenLucas"&gt;&lt;img src="https://github.com/HoldenLucas.png" width="60px" alt="Holden Lucas" /&gt;&lt;/a&gt;&lt;a href="https://github.com/nartc"&gt;&lt;img src="https://github.com/nartc.png" width="60px" alt="Chau Tran" /&gt;&lt;/a&gt;&lt;a href="https://github.com/matejcik"&gt;&lt;img src="https://github.com/matejcik.png" width="60px" alt="matejcik" /&gt;&lt;/a&gt;&lt;a href="https://github.com/lucatume"&gt;&lt;img src="https://github.com/lucatume.png" width="60px" alt="theAverageDev (Luca Tumedei)" /&gt;&lt;/a&gt;&lt;a href="https://github.com/IvanZuy"&gt;&lt;img src="https://github.com/IvanZuy.png" width="60px" alt="Ivan Zaitsev" /&gt;&lt;/a&gt;&lt;a href="https://github.com/nicholascloud"&gt;&lt;img src="https://github.com/nicholascloud.png" width="60px" alt="Nicholas Cloud" /&gt;&lt;/a&gt;&lt;a href="https://github.com/PhotonQuantum"&gt;&lt;img src="https://github.com/PhotonQuantum.png" width="60px" alt="LightQuantum" /&gt;&lt;/a&gt;&lt;a href="https://github.com/GitSquared"&gt;&lt;img src="https://github.com/GitSquared.png" width="60px" alt="Gabriel Saillard" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ava1ar"&gt;&lt;img src="https://github.com/ava1ar.png" width="60px" alt="Aliaksandr Stelmachonak" /&gt;&lt;/a&gt;&lt;a href="https://github.com/minidfx"&gt;&lt;img src="https://github.com/minidfx.png" width="60px" alt="Burgy Benjamin" /&gt;&lt;/a&gt;&lt;a href="https://github.com/JoeKlemmer"&gt;&lt;img src="https://github.com/JoeKlemmer.png" width="60px" alt="Joe Klemmer" /&gt;&lt;/a&gt;&lt;a href="https://github.com/tobi"&gt;&lt;img src="https://github.com/tobi.png" width="60px" alt="Tobias L√ºtke" /&gt;&lt;/a&gt;&lt;a href="https://github.com/benbfortis"&gt;&lt;img src="https://github.com/benbfortis.png" width="60px" alt="Ben Beaumont" /&gt;&lt;/a&gt;&lt;a href="https://github.com/jakewarren"&gt;&lt;img src="https://github.com/jakewarren.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/tgpholly"&gt;&lt;img src="https://github.com/tgpholly.png" width="60px" alt="Holly" /&gt;&lt;/a&gt;&lt;a href="https://github.com/jisantuc"&gt;&lt;img src="https://github.com/jisantuc.png" width="60px" alt="James Santucci" /&gt;&lt;/a&gt;&lt;a href="https://github.com/bitprophet"&gt;&lt;img src="https://github.com/bitprophet.png" width="60px" alt="Jeff Forcier" /&gt;&lt;/a&gt;&lt;a href="https://github.com/tayleighr"&gt;&lt;img src="https://github.com/tayleighr.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/Novakov"&gt;&lt;img src="https://github.com/Novakov.png" width="60px" alt="Maciej T. Nowak" /&gt;&lt;/a&gt;&lt;a href="https://github.com/farzadmf"&gt;&lt;img src="https://github.com/farzadmf.png" width="60px" alt="Farzad Majidfayyaz" /&gt;&lt;/a&gt;&lt;a href="https://github.com/nekhaevskiy"&gt;&lt;img src="https://github.com/nekhaevskiy.png" width="60px" alt="Yury" /&gt;&lt;/a&gt;&lt;a href="https://github.com/reivilibre"&gt;&lt;img src="https://github.com/reivilibre.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/andreaskurth"&gt;&lt;img src="https://github.com/andreaskurth.png" width="60px" alt="Andreas Kurth" /&gt;&lt;/a&gt;&lt;a href="https://github.com/BSteffaniak"&gt;&lt;img src="https://github.com/BSteffaniak.png" width="60px" alt="Braden Steffaniak" /&gt;&lt;/a&gt;&lt;a href="https://github.com/jordan-gillard"&gt;&lt;img src="https://github.com/jordan-gillard.png" width="60px" alt="Jordan Gillard" /&gt;&lt;/a&gt;&lt;a href="https://github.com/smangels"&gt;&lt;img src="https://github.com/smangels.png" width="60px" alt="Sebastian" /&gt;&lt;/a&gt;&lt;a href="https://github.com/George-Spanos"&gt;&lt;img src="https://github.com/George-Spanos.png" width="60px" alt="George Spanos" /&gt;&lt;/a&gt;&lt;a href="https://github.com/frantisekstanko"&gt;&lt;img src="https://github.com/frantisekstanko.png" width="60px" alt="Frantisek Stanko" /&gt;&lt;/a&gt;&lt;a href="https://github.com/amslezak"&gt;&lt;img src="https://github.com/amslezak.png" width="60px" alt="Andy Slezak" /&gt;&lt;/a&gt;&lt;a href="https://github.com/mkock"&gt;&lt;img src="https://github.com/mkock.png" width="60px" alt="Martin Kock" /&gt;&lt;/a&gt;&lt;a href="https://github.com/illarionvk"&gt;&lt;img src="https://github.com/illarionvk.png" width="60px" alt="Illarion Koperski" /&gt;&lt;/a&gt;&lt;a href="https://github.com/WhiteBlackGoose"&gt;&lt;img src="https://github.com/WhiteBlackGoose.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/jessealama"&gt;&lt;img src="https://github.com/jessealama.png" width="60px" alt="Jesse Alama" /&gt;&lt;/a&gt;&lt;a href="https://github.com/codacy"&gt;&lt;img src="https://github.com/codacy.png" width="60px" alt="Codacy" /&gt;&lt;/a&gt;&lt;a href="https://github.com/colbr"&gt;&lt;img src="https://github.com/colbr.png" width="60px" alt="Brett" /&gt;&lt;/a&gt;&lt;a href="https://github.com/heijmans"&gt;&lt;img src="https://github.com/heijmans.png" width="60px" alt="Jan Heijmans" /&gt;&lt;/a&gt;&lt;a href="https://github.com/Vesther"&gt;&lt;img src="https://github.com/Vesther.png" width="60px" alt="Kevin Nowald" /&gt;&lt;/a&gt;&lt;a href="https://github.com/sempruijs"&gt;&lt;img src="https://github.com/sempruijs.png" width="60px" alt="sem pruijs" /&gt;&lt;/a&gt;&lt;a href="https://github.com/omarluq"&gt;&lt;img src="https://github.com/omarluq.png" width="60px" alt="Omar Luq " /&gt;&lt;/a&gt;&lt;a href="https://github.com/ethanjli"&gt;&lt;img src="https://github.com/ethanjli.png" width="60px" alt="Ethan Li" /&gt;&lt;/a&gt;&lt;a href="https://github.com/phubaba"&gt;&lt;img src="https://github.com/phubaba.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/fomrat"&gt;&lt;img src="https://github.com/fomrat.png" width="60px" alt="Brian MacAskill" /&gt;&lt;/a&gt;&lt;a href="https://github.com/canhazcodez"&gt;&lt;img src="https://github.com/canhazcodez.png" width="60px" alt="Maxi" /&gt;&lt;/a&gt;&lt;a href="https://github.com/nikbrunner"&gt;&lt;img src="https://github.com/nikbrunner.png" width="60px" alt="nbr" /&gt;&lt;/a&gt;&lt;a href="https://github.com/neunkasulle"&gt;&lt;img src="https://github.com/neunkasulle.png" width="60px" alt="Jan Zenkner" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ahkohd"&gt;&lt;img src="https://github.com/ahkohd.png" width="60px" alt="Victor Aremu" /&gt;&lt;/a&gt;&lt;a href="https://github.com/RVxLab"&gt;&lt;img src="https://github.com/RVxLab.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/igor-ramazanov"&gt;&lt;img src="https://github.com/igor-ramazanov.png" width="60px" alt="Igor Ramazanov" /&gt;&lt;/a&gt;&lt;a href="https://github.com/glotchimo"&gt;&lt;img src="https://github.com/glotchimo.png" width="60px" alt="Elliott Maguire" /&gt;&lt;/a&gt;&lt;a href="https://github.com/n8nio"&gt;&lt;img src="https://github.com/n8nio.png" width="60px" alt="n8n - Workflow Automation" /&gt;&lt;/a&gt;&lt;a href="https://github.com/kaleballmon"&gt;&lt;img src="https://github.com/kaleballmon.png" width="60px" alt="kaleb allmon" /&gt;&lt;/a&gt;&lt;a href="https://github.com/joshuadavidthomas"&gt;&lt;img src="https://github.com/joshuadavidthomas.png" width="60px" alt="Josh Thomas" /&gt;&lt;/a&gt;&lt;a href="https://github.com/josephjacks"&gt;&lt;img src="https://github.com/josephjacks.png" width="60px" alt="JJ" /&gt;&lt;/a&gt;&lt;a href="https://github.com/FrederickGeek8"&gt;&lt;img src="https://github.com/FrederickGeek8.png" width="60px" alt="Frederick Morlock" /&gt;&lt;/a&gt;&lt;a href="https://github.com/agrippanux"&gt;&lt;img src="https://github.com/agrippanux.png" width="60px" alt="Darren Craine" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ezdac"&gt;&lt;img src="https://github.com/ezdac.png" width="60px" alt="Maximilian Langenfeld" /&gt;&lt;/a&gt;&lt;a href="https://github.com/sarzhann"&gt;&lt;img src="https://github.com/sarzhann.png" width="60px" alt="Nurzhan" /&gt;&lt;/a&gt;&lt;a href="https://github.com/dbuls"&gt;&lt;img src="https://github.com/dbuls.png" width="60px" alt="Davis Buls" /&gt;&lt;/a&gt;&lt;a href="https://github.com/MGreek"&gt;&lt;img src="https://github.com/MGreek.png" width="60px" alt="Grec Marc" /&gt;&lt;/a&gt;&lt;a href="https://github.com/sainu"&gt;&lt;img src="https://github.com/sainu.png" width="60px" alt="sainu" /&gt;&lt;/a&gt;&lt;a href="https://github.com/mguellsegarra"&gt;&lt;img src="https://github.com/mguellsegarra.png" width="60px" alt="Marc G√ºell Segarra" /&gt;&lt;/a&gt;&lt;a href="https://github.com/lppassos"&gt;&lt;img src="https://github.com/lppassos.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/chrisolsen"&gt;&lt;img src="https://github.com/chrisolsen.png" width="60px" alt="Chris Olsen" /&gt;&lt;/a&gt;&lt;a href="https://github.com/vladimir-popov"&gt;&lt;img src="https://github.com/vladimir-popov.png" width="60px" alt="Vladimir Popov" /&gt;&lt;/a&gt;&lt;a href="https://github.com/neilcode"&gt;&lt;img src="https://github.com/neilcode.png" width="60px" alt="Neil Lambert" /&gt;&lt;/a&gt;&lt;a href="https://github.com/shaungarwood"&gt;&lt;img src="https://github.com/shaungarwood.png" width="60px" alt="Shaun Garwood" /&gt;&lt;/a&gt;&lt;a href="https://github.com/dhh"&gt;&lt;img src="https://github.com/dhh.png" width="60px" alt="David Heinemeier Hansson" /&gt;&lt;/a&gt;&lt;a href="https://github.com/wayanjimmy"&gt;&lt;img src="https://github.com/wayanjimmy.png" width="60px" alt="Wayan jimmy" /&gt;&lt;/a&gt;
 &lt;!-- sponsors --&gt; &lt;/p&gt; 
&lt;h2&gt;Elevator Pitch&lt;/h2&gt; 
&lt;p&gt;Minor rant incoming: Something's not working? Maybe a service is down. &lt;code&gt;docker-compose ps&lt;/code&gt;. Yep, it's that microservice that's still buggy. No issue, I'll just restart it: &lt;code&gt;docker-compose restart&lt;/code&gt;. Okay now let's try again. Oh wait the issue is still there. Hmm. &lt;code&gt;docker-compose ps&lt;/code&gt;. Right so the service must have just stopped immediately after starting. I probably would have known that if I was reading the log stream, but there is a lot of clutter in there from other services. I could get the logs for just that one service with &lt;code&gt;docker compose logs --follow myservice&lt;/code&gt; but that dies everytime the service dies so I'd need to run that command every time I restart the service. I could alternatively run &lt;code&gt;docker-compose up myservice&lt;/code&gt; and in that terminal window if the service is down I could just &lt;code&gt;up&lt;/code&gt; it again, but now I've got one service hogging a terminal window even after I no longer care about its logs. I guess when I want to reclaim the terminal realestate I can do &lt;code&gt;ctrl+P,Q&lt;/code&gt;, but... wait, that's not working for some reason. Should I use ctrl+C instead? I can't remember if that closes the foreground process or kills the actual service.&lt;/p&gt; 
&lt;p&gt;What a headache!&lt;/p&gt; 
&lt;p&gt;Memorising docker commands is hard. Memorising aliases is slightly less hard. Keeping track of your containers across multiple terminal windows is near impossible. What if you had all the information you needed in one terminal window with every common command living one keypress away (and the ability to add custom commands as well). Lazydocker's goal is to make that dream a reality.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/keybindings"&gt;Keybindings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#cool-features"&gt;Cool Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/NICqQPxwJWw"&gt;Video Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/Config.md"&gt;Config Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.twitch.tv/jesseduffield"&gt;Twitch Stream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker &amp;gt;= &lt;strong&gt;1.13&lt;/strong&gt; (API &amp;gt;= &lt;strong&gt;1.25&lt;/strong&gt;)&lt;/li&gt; 
 &lt;li&gt;Docker-Compose &amp;gt;= &lt;strong&gt;1.23.2&lt;/strong&gt; (optional)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Homebrew&lt;/h3&gt; 
&lt;p&gt;Normally &lt;code&gt;lazydocker&lt;/code&gt; formula can be found in the Homebrew core but we suggest you to tap our formula to get frequently updated one. It works with Linux, too.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Tap&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew install jesseduffield/lazydocker/lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Core&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew install lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Scoop (Windows)&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;lazydocker&lt;/code&gt; using &lt;a href="https://scoop.sh/"&gt;scoop&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;scoop install lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Chocolatey (Windows)&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;lazydocker&lt;/code&gt; using &lt;a href="https://chocolatey.org/"&gt;Chocolatey&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;choco install lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;asdf-vm&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://github.com/comdotlinux/asdf-lazydocker"&gt;asdf-lazydocker plugin&lt;/a&gt; using &lt;a href="https://asdf-vm.com/"&gt;asdf-vm&lt;/a&gt;:&lt;/p&gt; 
&lt;h4&gt;Setup (Once)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;asdf plugin add lazydocker https://github.com/comdotlinux/asdf-lazydocker.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;For Install / Upgrade&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;asdf list all lazydocker
asdf install lazydocker latest
asdf global lazydocker latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Binary Release (Linux/OSX/Windows)&lt;/h3&gt; 
&lt;p&gt;You can manually download a binary release from &lt;a href="https://github.com/jesseduffield/lazydocker/releases"&gt;the release page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Automated install/update, don't forget to always verify what you're piping into bash:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl https://raw.githubusercontent.com/jesseduffield/lazydocker/master/scripts/install_update_linux.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The script installs downloaded binary to &lt;code&gt;$HOME/.local/bin&lt;/code&gt; directory by default, but it can be changed by setting &lt;code&gt;DIR&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;h3&gt;Go&lt;/h3&gt; 
&lt;p&gt;Required Go Version &amp;gt;= &lt;strong&gt;1.19&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go install github.com/jesseduffield/lazydocker@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Required Go version &amp;gt;= &lt;strong&gt;1.8&lt;/strong&gt;, &amp;lt;= &lt;strong&gt;1.17&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go get github.com/jesseduffield/lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Arch Linux AUR&lt;/h3&gt; 
&lt;p&gt;You can install lazydocker using the &lt;a href="https://aur.archlinux.org/packages/lazydocker"&gt;AUR&lt;/a&gt; by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;yay -S lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/lazyteam/lazydocker"&gt;&lt;img src="https://img.shields.io/docker/pulls/lazyteam/lazydocker.svg?sanitize=true" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/lazyteam/lazydocker"&gt;&lt;img src="https://img.shields.io/docker/stars/lazyteam/lazydocker.svg?sanitize=true" alt="Docker Stars" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/lazyteam/lazydocker"&gt;&lt;img src="https://img.shields.io/docker/cloud/automated/lazyteam/lazydocker.svg?sanitize=true" alt="Docker Automated" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; 
  &lt;details&gt;
   &lt;summary&gt;Click if you have an ARM device&lt;/summary&gt;
   &lt;p&gt; &lt;/p&gt;
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;If you have a ARM 32 bit v6 architecture&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker build -t lazyteam/lazydocker \
--build-arg BASE_IMAGE_BUILDER=arm32v6/golang \
--build-arg GOARCH=arm \
--build-arg GOARM=6 \
https://github.com/jesseduffield/lazydocker.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;If you have a ARM 32 bit v7 architecture&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker build -t lazyteam/lazydocker \
--build-arg BASE_IMAGE_BUILDER=arm32v7/golang \
--build-arg GOARCH=arm \
--build-arg GOARM=7 \
https://github.com/jesseduffield/lazydocker.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;If you have a ARM 64 bit v8 architecture&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker build -t lazyteam/lazydocker \
--build-arg BASE_IMAGE_BUILDER=arm64v8/golang \
--build-arg GOARCH=arm64 \
https://github.com/jesseduffield/lazydocker.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;p&gt;&lt;/p&gt;
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the container&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker run --rm -it -v \
/var/run/docker.sock:/var/run/docker.sock \
-v /yourpath:/.config/jesseduffield/lazydocker \
lazyteam/lazydocker
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Don't forget to change &lt;code&gt;/yourpath&lt;/code&gt; to an actual path you created to store lazydocker's config&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You can also use this &lt;a href="https://github.com/jesseduffield/lazydocker/raw/master/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You might want to create an alias, for example:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;echo "alias lzd='docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v /yourpath/config:/.config/jesseduffield/lazydocker lazyteam/lazydocker'" &amp;gt;&amp;gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For development, you can build the image using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/jesseduffield/lazydocker.git
cd lazydocker
docker build -t lazyteam/lazydocker \
    --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
    --build-arg VCS_REF=`git rev-parse --short HEAD` \
    --build-arg VERSION=`git describe --abbrev=0 --tag` \
    .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you encounter a compatibility issue with Docker bundled binary, try rebuilding the image with the build argument &lt;code&gt;--build-arg DOCKER_VERSION="v$(docker -v | cut -d" " -f3 | rev | cut -c 2- | rev)"&lt;/code&gt; so that the bundled docker binary matches your host docker binary version.&lt;/p&gt; 
&lt;h3&gt;Manual&lt;/h3&gt; 
&lt;p&gt;You'll need to &lt;a href="https://golang.org/doc/install"&gt;install Go&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/jesseduffield/lazydocker.git
cd lazydocker
go install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use &lt;code&gt;go run main.go&lt;/code&gt; to compile and run in one go (pun definitely intended)&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Call &lt;code&gt;lazydocker&lt;/code&gt; in your terminal. I personally use this a lot so I've made an alias for it like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;echo "alias lzd='lazydocker'" &amp;gt;&amp;gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(you can substitute .zshrc for whatever rc file you're using)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Basic video tutorial &lt;a href="https://youtu.be/NICqQPxwJWw"&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;List of keybindings &lt;a href="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/keybindings"&gt;here&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Cool features&lt;/h2&gt; 
&lt;p&gt;everything is one keypress away (or one click away! Mouse support FTW):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;viewing the state of your docker or docker-compose container environment at a glance&lt;/li&gt; 
 &lt;li&gt;viewing logs for a container/service&lt;/li&gt; 
 &lt;li&gt;viewing ascii graphs of your containers' metrics so that you can not only feel but also look like a developer&lt;/li&gt; 
 &lt;li&gt;customising those graphs to measure nearly any metric you want&lt;/li&gt; 
 &lt;li&gt;attaching to a container/service&lt;/li&gt; 
 &lt;li&gt;restarting/removing/rebuilding containers/services&lt;/li&gt; 
 &lt;li&gt;viewing the ancestor layers of a given image&lt;/li&gt; 
 &lt;li&gt;pruning containers, images, or volumes that are hogging up disk space&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;There is still a lot of work to go! Please check out the &lt;a href="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt;. For contributor discussion about things not better discussed here in the repo, join the discord channel&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/ehwFt2t4wt"&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/resources/discord.png" width="75" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;If you would like to support the development of lazydocker, consider &lt;a href="https://github.com/sponsors/jesseduffield"&gt;sponsoring me&lt;/a&gt; (github is matching all donations dollar-for-dollar for 12 months)&lt;/p&gt; 
&lt;h2&gt;Social&lt;/h2&gt; 
&lt;p&gt;If you want to see what I (Jesse) am up to in terms of development, follow me on &lt;a href="https://twitter.com/DuffieldJesse"&gt;twitter&lt;/a&gt; or watch me program on &lt;a href="https://www.twitch.tv/jesseduffield"&gt;twitch&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;How do I edit my config?&lt;/h3&gt; 
&lt;p&gt;By opening lazydocker, clicking on the 'project' panel in the top left, and pressing 'o' (or 'e' if your editor is vim). See &lt;a href="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/Config.md"&gt;Config Docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;How do I get text to wrap in my main panel?&lt;/h3&gt; 
&lt;p&gt;In the future I want to make this the default, but for now there are some CPU issues that arise with wrapping. If you want to enable wrapping, use &lt;code&gt;gui.wrapMainPanel: true&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;How do you select text?&lt;/h3&gt; 
&lt;p&gt;Because we support mouse events, you will need to hold option while dragging the mouse to indicate you're trying to select text rather than click on something. Alternatively you can disable mouse events via the &lt;code&gt;gui.ignoreMouseEvents&lt;/code&gt; config value.&lt;/p&gt; 
&lt;p&gt;Mac Users: See &lt;a href="https://github.com/jesseduffield/lazydocker/issues/190"&gt;Issue #190&lt;/a&gt; for other options.&lt;/p&gt; 
&lt;h3&gt;Why can't I see my container's logs?&lt;/h3&gt; 
&lt;p&gt;By default we only show logs from the last hour, so that we're not putting too much strain on the machine. This may be why you can't see logs when you first start lazydocker. This can be overwritten in the config's &lt;code&gt;commandTemplates&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If you are running lazydocker in Docker container, it is a know bug, that you can't see logs or CPU usage.&lt;/p&gt; 
&lt;h2&gt;Alternatives&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skanehira/docui"&gt;docui&lt;/a&gt; - Skanehira beat me to the punch on making a docker terminal UI, so definitely check out that repo as well! I think the two repos can live in harmony though: lazydocker is more about managing existing containers/services, and docui is more about creating and configuring them.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/portainer/portainer"&gt;Portainer&lt;/a&gt; - Portainer tries to solve the same problem but it's accessed via your browser rather than your terminal. It also supports docker swarm.&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://github.com/veggiemonk/awesome-docker/raw/master/README.md#terminal"&gt;Awesome Docker list&lt;/a&gt; for similar tools to work with Docker.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>DataDog/datadog-agent</title>
      <link>https://github.com/DataDog/datadog-agent</link>
      <description>&lt;p&gt;Main repository for Datadog Agent&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Datadog Agent&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/v/release/DataDog/datadog-agent?style=flat&amp;amp;logo=datadog&amp;amp;logoColor=%23632CA6&amp;amp;labelColor=%23FFF&amp;amp;color=%23632CA6" alt="GitHub Release" /&gt; &lt;a href="https://codecov.io/github/DataDog/datadog-agent?branch=main"&gt;&lt;img src="https://codecov.io/github/DataDog/datadog-agent/coverage.svg?branch=main" alt="Coverage status" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/github.com/DataDog/datadog-agent"&gt;&lt;img src="https://godoc.org/github.com/DataDog/datadog-agent?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains the source code of the Datadog Agent version 7 and version 6. Please refer to the &lt;a href="https://docs.datadoghq.com/agent/"&gt;Agent user documentation&lt;/a&gt; for information about differences between Agent v5, Agent v6 and Agent v7. Additionally, we provide a list of prepackaged binaries for an easy install process &lt;a href="https://app.datadoghq.com/fleet/install-agent/latest?platform=overview"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://datadoghq.dev/datadog-agent/setup/"&gt;developer docs site&lt;/a&gt; contains information about how to develop the Datadog Agent itself.&lt;/p&gt; 
&lt;p&gt;The source of the content is located under &lt;a href="https://raw.githubusercontent.com/DataDog/datadog-agent/main/docs"&gt;the docs directory&lt;/a&gt; and may contain pages that are not yet published.&lt;/p&gt; 
&lt;h2&gt;Contributing code&lt;/h2&gt; 
&lt;p&gt;You'll find information and help on how to contribute code to this project under &lt;a href="https://raw.githubusercontent.com/DataDog/datadog-agent/main/docs/dev"&gt;the &lt;code&gt;docs/dev&lt;/code&gt; directory&lt;/a&gt; of the present repo.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The Datadog Agent user space components are licensed under the &lt;a href="https://raw.githubusercontent.com/DataDog/datadog-agent/main/LICENSE"&gt;Apache License, Version 2.0&lt;/a&gt;. The BPF code is licensed under the &lt;a href="https://raw.githubusercontent.com/DataDog/datadog-agent/main/pkg/ebpf/c/COPYING"&gt;General Public License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pulumi/pulumi</title>
      <link>https://github.com/pulumi/pulumi</link>
      <description>&lt;p&gt;Pulumi - Infrastructure as Code in any programming language üöÄ&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://www.pulumi.com/?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=pulumi-pulumi-github-repo&amp;amp;utm_content=top+logo" title="Pulumi - Modern Infrastructure as Code - AWS Azure Kubernetes Containers Serverless"&gt; &lt;img src="https://www.pulumi.com/images/logo/logo-on-white-box.svg?" width="350" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://slack.pulumi.com/"&gt;&lt;img src="http://www.pulumi.com/images/docs/badges/slack.svg?sanitize=true" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://github.com/pulumi/pulumi/discussions"&gt;&lt;img src="https://img.shields.io/github/discussions/pulumi/pulumi" alt="GitHub Discussions" /&gt;&lt;/a&gt; &lt;a href="https://npmjs.com/package/@pulumi/pulumi"&gt;&lt;img src="https://badge.fury.io/js/%40pulumi%2Fpulumi.svg?sanitize=true" alt="NPM version" /&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/pulumi"&gt;&lt;img src="https://badge.fury.io/py/pulumi.svg?sanitize=true" alt="Python version" /&gt;&lt;/a&gt; &lt;a href="https://badge.fury.io/nu/pulumi"&gt;&lt;img src="https://badge.fury.io/nu/pulumi.svg?sanitize=true" alt="NuGet version" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/github.com/pulumi/pulumi"&gt;&lt;img src="https://godoc.org/github.com/pulumi/pulumi?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/pulumi/pulumi/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/pulumi/pulumi" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Infrastructure as Code in any Programming Language&lt;/h1&gt; 
&lt;a href="https://www.pulumi.com/docs/iac/get-started/"&gt; &lt;img src="https://www.pulumi.com/images/get-started.svg?" align="right" width="120" /&gt; &lt;/a&gt; 
&lt;p&gt;&lt;strong&gt;Pulumi Infrastructure as Code&lt;/strong&gt; is the easiest way to build and deploy infrastructure, of any architecture and on any cloud, using programming languages that you already know and love. Code and ship infrastructure faster with your favorite languages and tools, and embed IaC anywhere with &lt;a href="https://www.pulumi.com/docs/iac/using-pulumi/automation-api/"&gt;Automation API&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Simply write code in your favorite language and Pulumi automatically provisions and manages your resources on &lt;a href="https://www.pulumi.com/docs/iac/clouds/aws/"&gt;AWS&lt;/a&gt;, &lt;a href="https://www.pulumi.com/docs/iac/clouds/azure/"&gt;Azure&lt;/a&gt;, &lt;a href="https://www.pulumi.com/docs/iac/clouds/gcp/"&gt;Google Cloud Platform&lt;/a&gt;, &lt;a href="https://www.pulumi.com/docs/iac/clouds/kubernetes/"&gt;Kubernetes&lt;/a&gt;, and &lt;a href="https://www.pulumi.com/registry/"&gt;120+ providers&lt;/a&gt; using an &lt;a href="https://www.pulumi.com/what-is/what-is-infrastructure-as-code/"&gt;infrastructure-as-code&lt;/a&gt; approach. Skip the YAML, and use standard language features like loops, functions, classes, and package management that you already know and love.&lt;/p&gt; 
&lt;p&gt;For example, create three web servers:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;const aws = require("@pulumi/aws");
const sg = new aws.ec2.SecurityGroup("web-sg", {
    ingress: [{ protocol: "tcp", fromPort: 80, toPort: 80, cidrBlocks: ["0.0.0.0/0"] }],
});
for (let i = 0; i &amp;lt; 3; i++) {
    new aws.ec2.Instance(`web-${i}`, {
        ami: "ami-7172b611",
        instanceType: "t2.micro",
        vpcSecurityGroupIds: [sg.id],
        userData: `#!/bin/bash
            echo "Hello, World!" &amp;gt; index.html
            nohup python -m SimpleHTTPServer 80 &amp;amp;`,
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or a simple serverless timer that archives Hacker News every day at 8:30AM:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;const aws = require("@pulumi/aws");

const snapshots = new aws.dynamodb.Table("snapshots", {
    attributes: [{ name: "id", type: "S", }],
    hashKey: "id", billingMode: "PAY_PER_REQUEST",
});

aws.cloudwatch.onSchedule("daily-yc-snapshot", "cron(30 8 * * ? *)", () =&amp;gt; {
    require("https").get("https://news.ycombinator.com", res =&amp;gt; {
        let content = "";
        res.setEncoding("utf8");
        res.on("data", chunk =&amp;gt; content += chunk);
        res.on("end", () =&amp;gt; new aws.sdk.DynamoDB.DocumentClient().put({
            TableName: snapshots.name.get(),
            Item: { date: Date.now(), content },
        }).promise());
    }).end();
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Many examples are available spanning containers, serverless, and infrastructure in &lt;a href="https://github.com/pulumi/examples"&gt;pulumi/examples&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Pulumi is open source under the &lt;a href="https://github.com/pulumi/pulumi/raw/master/LICENSE"&gt;Apache 2.0 license&lt;/a&gt;, supports many languages and clouds, and is easy to extend. This repo contains the &lt;code&gt;pulumi&lt;/code&gt; CLI, language SDKs, and core Pulumi engine, and individual libraries are in their own repos.&lt;/p&gt; 
&lt;h2&gt;Welcome&lt;/h2&gt; 
&lt;img align="right" width="400" src="https://www.pulumi.com/images/docs/quickstart/console.png" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pulumi.com/docs/iac/get-started/"&gt;Get Started with Pulumi&lt;/a&gt;&lt;/strong&gt;: Deploy a simple application in AWS, Azure, Google Cloud, or Kubernetes using Pulumi.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pulumi.com/tutorials/"&gt;Learn&lt;/a&gt;&lt;/strong&gt;: Follow Pulumi learning pathways to learn best practices and architectural patterns through authentic examples.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/pulumi/examples"&gt;Examples&lt;/a&gt;&lt;/strong&gt;: Browse several examples across many languages, clouds, and scenarios including containers, serverless, and infrastructure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pulumi.com/docs/"&gt;Docs&lt;/a&gt;&lt;/strong&gt;: Learn about Pulumi concepts, follow user-guides, and consult the reference documentation.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pulumi.com/registry/"&gt;Registry&lt;/a&gt;&lt;/strong&gt;: Find the Pulumi Package with the resources you need. Install the package directly into your project, browse the API documentation, and start building.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pulumi.com/product/secrets-management/"&gt;Secrets Management&lt;/a&gt;&lt;/strong&gt;: Tame secrets sprawl and configuration complexity securely across all your cloud infrastructure and applications with Pulumi ESC.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/orgs/pulumi/projects/44"&gt;Pulumi Roadmap&lt;/a&gt;&lt;/strong&gt;: Review the planned work for the upcoming quarter and a selected backlog of issues that are on our mind but not yet scheduled.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://slack.pulumi.com/"&gt;Community Slack&lt;/a&gt;&lt;/strong&gt;: Join us in Pulumi Community Slack. All conversations and questions are welcome.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/pulumi/pulumi/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/strong&gt;: Ask questions or share what you're building with Pulumi.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a name="getting-started"&gt;&lt;/a&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=6f8KF6UGN7g"&gt;&lt;img src="https://raw.githubusercontent.com/pulumi/pulumi/master/youtube_preview_image.png" alt="Watch the video" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://www.pulumi.com/docs/iac/get-started/"&gt;Get Started&lt;/a&gt; guide to quickly get started with Pulumi on your platform and cloud of choice.&lt;/p&gt; 
&lt;p&gt;Otherwise, the following steps demonstrate how to deploy your first Pulumi program, using AWS Serverless Lambdas, in minutes:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;To install the latest Pulumi release, run the following (see full &lt;a href="https://www.pulumi.com/docs/iac/download-install/"&gt;installation instructions&lt;/a&gt; for additional installation options):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ curl -fsSL https://get.pulumi.com/ | sh
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a Project&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;After installing, you can get started with the &lt;code&gt;pulumi new&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ mkdir pulumi-demo &amp;amp;&amp;amp; cd pulumi-demo
$ pulumi new hello-aws-javascript
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;new&lt;/code&gt; command offers templates for all languages and clouds. Run it without an argument and it'll prompt you with available projects. This command created an AWS Serverless Lambda project written in JavaScript.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Deploy to the Cloud&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Run &lt;code&gt;pulumi up&lt;/code&gt; to get your code to the cloud:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ pulumi up
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This makes all cloud resources needed to run your code. Simply make edits to your project, and subsequent &lt;code&gt;pulumi up&lt;/code&gt;s will compute the minimal diff to deploy your changes.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use Your Program&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Now that your code is deployed, you can interact with it. In the above example, we can curl the endpoint:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ curl $(pulumi stack output url)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Access the Logs&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;If you're using containers or functions, Pulumi's unified logging command will show all of your logs:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ pulumi logs -f
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Destroy your Resources&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;After you're done, you can remove all resources created by your program:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ pulumi destroy -y
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;To learn more, head over to &lt;a href="https://pulumi.com/"&gt;pulumi.com&lt;/a&gt; for much more information, including &lt;a href="https://www.pulumi.com/tutorials/"&gt;tutorials&lt;/a&gt;, &lt;a href="https://github.com/pulumi/examples"&gt;examples&lt;/a&gt;, and details of the core Pulumi CLI and &lt;a href="https://www.pulumi.com/docs/iac/concepts/"&gt;programming model concepts&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;a name="platform"&gt;&lt;/a&gt;Platform&lt;/h2&gt; 
&lt;h3&gt;Languages&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Runtime&lt;/th&gt; 
   &lt;th&gt;Versions&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/logo-js.png" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/javascript/"&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://nodejs.org/en/about/previous-releases"&gt;Current, Active and Maintenance LTS versions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/logo-ts.png" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/javascript/"&gt;TypeScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://nodejs.org/en/about/previous-releases"&gt;Current, Active and Maintenance LTS versions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/logo-python.svg?sanitize=true" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/python/"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;Python&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://devguide.python.org/versions/#versions"&gt;Supported versions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/logo-golang.png" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/go/"&gt;Go&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://go.dev/doc/devel/release#policy"&gt;Supported versions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/dotnet.svg?sanitize=true" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/dotnet/"&gt;.NET (C#/F#/VB.NET)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;.NET&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://dotnet.microsoft.com/en-us/platform/support/policy/dotnet-core#lifecycle"&gt;Supported versions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/java.svg?sanitize=true" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/java/"&gt;Java&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;JDK&lt;/td&gt; 
   &lt;td&gt;11+&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/yaml.svg?sanitize=true" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/yaml/"&gt;YAML&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;n/a&lt;/td&gt; 
   &lt;td&gt;n/a&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;EOL Releases&lt;/h3&gt; 
&lt;p&gt;The Pulumi CLI v1 and v2 are no longer supported. If you are not yet running v3, please consider migrating to v3 to continue getting the latest and greatest Pulumi has to offer! &lt;span&gt;üí™&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;To migrate from v2 to v3, please see our &lt;a href="https://www.pulumi.com/docs/iac/download-install/migrating-3.0/"&gt;v3 Migration Guide&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Clouds&lt;/h3&gt; 
&lt;p&gt;Visit the &lt;a href="https://www.pulumi.com/registry/"&gt;Registry&lt;/a&gt; for the full list of supported cloud and infrastructure providers.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://github.com/pulumi/pulumi/raw/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for information on building Pulumi from source or contributing improvements.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>keploy/keploy</title>
      <link>https://github.com/keploy/keploy</link>
      <description>&lt;p&gt;API, Integration, E2E Testing Agent for Developers that actually work. Generate tests, mocks/stubs for your APIs!&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://docs.keploy.io/img/keploy-logo-dark.svg?s=200&amp;amp;v=4" height="80" alt="Keploy Logo" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/3262" target="_blank"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/3262" alt="keploy%2Fkeploy | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt;&lt;b&gt;‚ö°Ô∏è API tests faster than unit tests, from user traffic ‚ö°Ô∏è&lt;/b&gt;&lt;/h3&gt; 
&lt;p align="center"&gt;üåü The must-have tool for developers in the AI-Gen era for 90% test coverage üåü&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;a href="https://join.slack.com/t/keploy/shared_invite/zt-357qqm9b5-PbZRVu3Yt2rJIa6ofrwWNg"&gt;&lt;img src="https://img.shields.io/badge/Slack-4A154B?style=flat&amp;amp;logo=slack&amp;amp;logoColor=white" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/company/keploy/"&gt;&lt;img src="https://img.shields.io/badge/LinkedIn-%230077B5.svg?style=flat&amp;amp;logo=linkedin&amp;amp;logoColor=white" alt="LinkedIn" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/channel/UC6OTg7F4o0WkmNtSoob34lg"&gt;&lt;img src="https://img.shields.io/badge/YouTube-%23FF0000.svg?style=flat&amp;amp;logo=YouTube&amp;amp;logoColor=white" alt="YouTube" /&gt;&lt;/a&gt; &lt;a href="https://x.com/Keployio"&gt;&lt;img src="https://img.shields.io/badge/X-%231DA1F2.svg?style=flat&amp;amp;logo=X&amp;amp;logoColor=white" alt="X" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://landscape.cncf.io/?item=app-definition-and-development--continuous-integration-delivery--keploy"&gt; &lt;img src="https://img.shields.io/badge/CNCF%20Landscape-5699C6?logo=cncf&amp;amp;style=social" alt="Keploy CNCF Landscape" /&gt; &lt;/a&gt; &lt;a href="https://github.com/Keploy/Keploy/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/keploy/keploy?color=%23EAC54F&amp;amp;logo=github" alt="GitHub Stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Keploy/Keploy/"&gt; &lt;img src="https://img.shields.io/github/stars/keploy/keploy?color=%23EAC54F&amp;amp;logo=github&amp;amp;label=Help%20us%20reach%2020K%20stars!%20Now%20at:" alt="Help us reach 20k stars!" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://keploy.io"&gt;Keploy&lt;/a&gt; is a &lt;strong&gt;developer‚Äëcentric API and integration testing tool&lt;/strong&gt; that auto‚Äëgenerates &lt;strong&gt;tests and data‚Äëmocks&lt;/strong&gt; faster than unit tests.&lt;/p&gt; 
&lt;p&gt;It records API calls, database queries, and streaming events ‚Äî then replays them as tests. Under the hood, Keploy &lt;strong&gt;uses eBPF to capture traffic at the network layer,&lt;/strong&gt; but for you it‚Äôs completely &lt;strong&gt;code‚Äëless&lt;/strong&gt; and &lt;strong&gt;language‚Äëagnostic&lt;/strong&gt;.&lt;/p&gt; 
&lt;img align="center" src="https://raw.githubusercontent.com/keploy/docs/main/static/gif/record-replay.gif" width="100%" alt="Convert API calls to API tests test cases and Data Mocks using AI" /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üê∞ &lt;strong&gt;Fun fact:&lt;/strong&gt; Keploy uses itself for testing! Check out our swanky coverage badge: &lt;a href="https://coveralls.io/github/keploy/keploy?branch=main&amp;amp;kill_cache=1"&gt;&lt;img src="https://coveralls.io/repos/github/keploy/keploy/badge.svg?branch=main&amp;amp;kill_cache=1" alt="Coverage Status" /&gt;&lt;/a&gt; &amp;nbsp;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Key Highlights&lt;/h1&gt; 
&lt;h2&gt;üéØ No code changes&lt;/h2&gt; 
&lt;p&gt;Just run your app with &lt;code&gt;keploy record&lt;/code&gt;. Real API + integration flows are automatically captured as tests and mocks. &lt;em&gt;(Keploy uses eBPF under the hood to capture traffic, so you &lt;strong&gt;don‚Äôt need&lt;/strong&gt; to add any SDKs or modify code.)&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;üìπ Record and Replay complex Flows&lt;/h2&gt; 
&lt;p&gt;Keploy can record and replay complex, distributed API flows as mocks and stubs. It's like having a very light-weight time machine for your tests‚Äîsaving you tons of time!&lt;/p&gt; 
&lt;p&gt;üëâ &lt;a href="https://keploy.io/docs/keploy-explained/introduction/"&gt;Read the docs on record-replay&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/keploy/docs/main/static/gif/record-tc.gif" width="60%" alt="Convert API calls to test cases" /&gt; 
&lt;h2&gt;üêá Complete Infra‚ÄëVirtualization (beyond HTTP mocks)&lt;/h2&gt; 
&lt;p&gt;Unlike tools that only mock HTTP endpoints, Keploy records &lt;strong&gt;databases&lt;/strong&gt; (Postgres, MySQL, MongoDB), &lt;strong&gt;streaming/queues&lt;/strong&gt; (Kafka, RabbitMQ), external APIs, and more.&lt;/p&gt; 
&lt;p&gt;It replays them deterministically so you can run tests without re‚Äëprovisioning infra.&lt;/p&gt; 
&lt;p&gt;üëâ &lt;a href="https://keploy.io/docs/keploy-explained/how-keploy-works/"&gt;Read the docs on infra virtualisation&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://keploy-devrel.s3.us-west-2.amazonaws.com/Group+1261152745.png" width="100%" alt="Convert API calls to test cases" /&gt; 
&lt;h2&gt;üß™ Combined Test Coverage&lt;/h2&gt; 
&lt;p&gt;If you‚Äôre a &lt;strong&gt;developer&lt;/strong&gt;, you probably care about &lt;em&gt;statement&lt;/em&gt; and &lt;em&gt;branch&lt;/em&gt; coverage ‚Äî Keploy calculates that for you.&lt;/p&gt; 
&lt;p&gt;If you‚Äôre a &lt;strong&gt;QA&lt;/strong&gt;, you focus more on &lt;em&gt;API schema&lt;/em&gt; and &lt;em&gt;business use‚Äëcase coverage&lt;/em&gt; ‚Äî Keploy calculates that too. This way coverage isn‚Äôt subjective anymore.&lt;/p&gt; 
&lt;p&gt;üëâ &lt;a href="https://keploy.io/docs/server/sdk-installation/go/"&gt;Read the docs on coverage&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://keploy-devrel.s3.us-west-2.amazonaws.com/keploy+ai+test+gen+for+api+statement+schema+and+branch+coverage.jpg" width="100%" alt="ai test gen for api statement schema and branch coverage" /&gt; 
&lt;h2&gt;ü§ñ Expand API Coverage using AI&lt;/h2&gt; 
&lt;p&gt;Keploy uses existing recordings, Swagger/OpenAPI Schema to find: boundary values, missing/extra fields, wrong types, out‚Äëof‚Äëorder sequences, retries/timeouts.&lt;/p&gt; 
&lt;p&gt;This helps expand API Schema, Statement, and Branch Coverage.&lt;/p&gt; 
&lt;p&gt;üëâ &lt;a href="https://app.keploy.io/"&gt;Read the docs on coverage&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://keploy-devrel.s3.us-west-2.amazonaws.com/ai+test+case+generation+that+works.png" width="100%" alt="ai test gen for api statement schema and branch coverage" /&gt; 
&lt;h3&gt;Other Capabilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;üåê &lt;strong&gt;CI/CD Integration:&lt;/strong&gt; Run tests with mocks anywhere you like‚Äîlocally on the CLI, in your CI pipeline (Jenkins, Github Actions..) , or even across a Kubernetes cluster. &lt;a href="https://keploy.io/docs/running-keploy/api-testing-cicd/"&gt;Read more&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;üé≠ &lt;strong&gt;Multi-Purpose Mocks&lt;/strong&gt;: You can also use Keploy-generated Mocks, as server Tests!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;üìä &lt;strong&gt;Reporting:&lt;/strong&gt; Unified reports for API, integration, unit, and e2e coverage with insights directly in your CI or PRs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;üñ•Ô∏è &lt;strong&gt;Console:&lt;/strong&gt; A developer-friendly console to view, manage, and debug recorded tests and mocks.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;‚è±Ô∏è &lt;strong&gt;Time Freezing:&lt;/strong&gt; Deterministically replay tests by freezing system time during execution. &lt;a href="https://keploy.io/docs/keploy-cloud/time-freezing/"&gt;Read more&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;üìö &lt;strong&gt;Mock Registry:&lt;/strong&gt; Centralized registry to manage, reuse, and version mocks across teams and environments. &lt;a href="https://keploy.io/docs/keploy-cloud/mock-registry/"&gt;Read more&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;1. Install Keploy Agent&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl --silent -O -L https://keploy.io/install.sh &amp;amp;&amp;amp; source install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. Record Test Cases&lt;/h3&gt; 
&lt;p&gt;Start your app under Keploy to convert real API calls into tests and mocks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;keploy record -c "CMD_TO_RUN_APP"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example for Python:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;keploy record -c "python main.py"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3. Run Tests&lt;/h3&gt; 
&lt;p&gt;Run tests offline without external dependencies.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;keploy test -c "CMD_TO_RUN_APP" --delay 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;h3&gt;- üìò &lt;a href="https://keploy.io/docs/server/installation/"&gt;Installation&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;- üèÅ &lt;a href="https://keploy.io/docs/quickstart/quickstart-filter/"&gt;QuickStarts&lt;/a&gt;&lt;/h3&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Languages &amp;amp; Frameworks (Any stack)&lt;/h2&gt; 
&lt;p&gt;Because Keploy intercepts at the &lt;strong&gt;network layer (eBPF)&lt;/strong&gt;, it works with &lt;strong&gt;any language, framework, or runtime&lt;/strong&gt;‚Äîno SDK required.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: Some of the dependencies are not open-source by nature because their protocols and parsings are not open-sourced. It's not supported in Keploy enterprise.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p align="center"&gt; 
 &lt;!-- Languages --&gt; &lt;img src="https://img.shields.io/badge/Go-00ADD8?logo=go&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Java-ED8B00?logo=openjdk&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Node.js-43853D?logo=node.js&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Python-3776AB?logo=python&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Rust-000000?logo=rust&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/C%23-239120?logo=csharp&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/C/C++-00599C?logo=cplusplus&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/TypeScript-3178C6?logo=typescript&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Scala-DC322F?logo=scala&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Kotlin-7F52FF?logo=kotlin&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Swift-FA7343?logo=swift&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Dart-0175C2?logo=dart&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/PHP-777BB4?logo=php&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Ruby-CC342D?logo=ruby&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Elixir-4B275F?logo=elixir&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/.NET-512BD4?logo=dotnet&amp;amp;logoColor=white" /&gt; 
 &lt;!-- Protocols &amp;amp; infra commonly virtualized --&gt; &lt;img src="https://img.shields.io/badge/gRPC-5E35B1?logo=grpc&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/GraphQL-E10098?logo=graphql&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/HTTP%2FREST-0A84FF?logo=httpie&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Kafka-231F20?logo=apachekafka&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/RabbitMQ-FF6600?logo=rabbitmq&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/PostgreSQL-4169E1?logo=postgresql&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/MySQL-4479A1?logo=mysql&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/MongoDB-47A248?logo=mongodb&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Redis-DC382D?logo=redis&amp;amp;logoColor=white" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Questions?&lt;/h2&gt; 
&lt;h3&gt;Book a Live Demo / Enterprise Support&lt;/h3&gt; 
&lt;p&gt;Want a guided walkthrough, dedicated support, or help planning enterprise rollout?&lt;/p&gt; 
&lt;p&gt; &lt;a href="https://calendar.app.google/4ZKd1nz9A5wLuP4W7"&gt; &lt;img src="https://img.shields.io/badge/Request%20a%20Demo-Email-2ea44f?logo=gmail" /&gt; &lt;/a&gt; &amp;nbsp; &lt;a href="https://join.slack.com/t/keploy/shared_invite/zt-357qqm9b5-PbZRVu3Yt2rJIa6ofrwWNg"&gt; &lt;img src="https://img.shields.io/badge/Chat%20with%20Us-Slack-4A154B?logo=slack&amp;amp;logoColor=white" /&gt; &lt;/a&gt; 
 &lt;!-- Optional: replace with your scheduling link (Cal.com/Calendly) --&gt; 
 &lt;!-- &lt;a href="https://cal.com/keploy/demo"&gt;&lt;img src="https://img.shields.io/badge/Book%20via%20Calendar-Cal.com-111111" /&gt;&lt;/a&gt; --&gt; &lt;/p&gt; 
&lt;p&gt;Prefer a calendar invite? Mention your availability in the email‚Äîwe‚Äôll send a &lt;strong&gt;calendar invite&lt;/strong&gt; right away.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Documentation &amp;amp; Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;üìò &lt;a href="https://keploy.io/docs/"&gt;Documentation&lt;/a&gt; ‚Äî Explore the full docs&lt;/li&gt; 
 &lt;li&gt;üí¨ &lt;a href="https://join.slack.com/t/keploy/shared_invite/zt-357qqm9b5-PbZRVu3Yt2rJIa6ofrwWNg"&gt;Slack Community&lt;/a&gt; ‚Äî Join the conversation&lt;/li&gt; 
 &lt;li&gt;üìú &lt;a href="https://keploy.io/docs/keploy-explained/contribution-guide/"&gt;Contribution Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;‚ù§Ô∏è &lt;a href="https://github.com/keploy/keploy/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üì¢ &lt;a href="https://keploy.io/blog/"&gt;Blog&lt;/a&gt; ‚Äî Read articles and updates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Contribute &amp;amp; Collaborate&lt;/h2&gt; 
&lt;p&gt;Whether you're new or experienced, your input matters. Help us improve Keploy by contributing code, reporting issues, or sharing feedback.&lt;/p&gt; 
&lt;p&gt;Together, let's build better testing tools for modern applications.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chaitin/SafeLine</title>
      <link>https://github.com/chaitin/SafeLine</link>
      <description>&lt;p&gt;SafeLine is a self-hosted WAF(Web Application Firewall) / reverse proxy to protect your web apps from attacks and exploits.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/banner.png" width="400" /&gt; &lt;/p&gt; 
&lt;h4 align="center"&gt; SafeLine - Make your web apps secure &lt;/h4&gt; 
&lt;p align="center"&gt; &lt;a target="_blank" href="https://ly.safepoint.cloud/laA8asp"&gt;üè† Website&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target="_blank" href="https://ly.safepoint.cloud/w2AeHhb"&gt;üìñ Docs&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target="_blank" href="https://ly.safepoint.cloud/hSMd4SH"&gt;üîç Live Demo&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target="_blank" href="https://discord.gg/SVnZGzHFvn"&gt;üôã‚Äç‚ôÇÔ∏è Discord&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target="_blank" href="https://raw.githubusercontent.com/chaitin/SafeLine/main/README_CN.md"&gt;‰∏≠ÊñáÁâà&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;üëã INTRODUCTION&lt;/h2&gt; 
&lt;p&gt;SafeLine is a self-hosted &lt;strong&gt;&lt;code&gt;WAF(Web Application Firewall)&lt;/code&gt;&lt;/strong&gt; to protect your web apps from attacks and exploits.&lt;/p&gt; 
&lt;p&gt;A web application firewall helps protect web apps by filtering and monitoring HTTP traffic between a web application and the Internet. It typically protects web apps from attacks such as &lt;code&gt;SQL injection&lt;/code&gt;, &lt;code&gt;XSS&lt;/code&gt;, &lt;code&gt;code injection&lt;/code&gt;, &lt;code&gt;os command injection&lt;/code&gt;, &lt;code&gt;CRLF injection&lt;/code&gt;, &lt;code&gt;ldap injection&lt;/code&gt;, &lt;code&gt;xpath injection&lt;/code&gt;, &lt;code&gt;RCE&lt;/code&gt;, &lt;code&gt;XXE&lt;/code&gt;, &lt;code&gt;SSRF&lt;/code&gt;, &lt;code&gt;path traversal&lt;/code&gt;, &lt;code&gt;backdoor&lt;/code&gt;, &lt;code&gt;bruteforce&lt;/code&gt;, &lt;code&gt;http-flood&lt;/code&gt;, &lt;code&gt;bot abused&lt;/code&gt;, among others.&lt;/p&gt; 
&lt;h4&gt;üí° How It Works&lt;/h4&gt; 
&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/how-it-works.png" width="800" /&gt; 
&lt;p&gt;By deploying a WAF in front of a web application, a shield is placed between the web application and the Internet. While a proxy server protects a client machine‚Äôs identity by using an intermediary, a WAF is a type of reverse-proxy, protecting the server from exposure by having clients pass through the WAF before reaching the server.&lt;/p&gt; 
&lt;p&gt;A WAF protects your web apps by filtering, monitoring, and blocking any malicious HTTP/S traffic traveling to the web application, and prevents any unauthorized data from leaving the app. It does this by adhering to a set of policies that help determine what traffic is malicious and what traffic is safe. Just as a proxy server acts as an intermediary to protect the identity of a client, a WAF operates in similar fashion but acting as a reverse proxy intermediary that protects the web app server from a potentially malicious client.&lt;/p&gt; 
&lt;p&gt;its core capabilities include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Defenses for web attacks&lt;/li&gt; 
 &lt;li&gt;Proactive bot abused defense&lt;/li&gt; 
 &lt;li&gt;HTML &amp;amp; JS code encryption&lt;/li&gt; 
 &lt;li&gt;IP-based rate limiting&lt;/li&gt; 
 &lt;li&gt;Web Access Control List&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;‚ö°Ô∏è Screenshots&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/screenshot-1.png" width="370" /&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/screenshot-2.png" width="370" /&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/screenshot-3.png" width="370" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/screenshot-4.png" width="370" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Get &lt;a href="https://demo.waf.chaitin.com:9443/"&gt;Live Demo&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üî• FEATURES&lt;/h2&gt; 
&lt;p&gt;List of the main features as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;Block Web Attacks&lt;/code&gt;&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;It defenses for all of web attacks, such as &lt;code&gt;SQL injection&lt;/code&gt;, &lt;code&gt;XSS&lt;/code&gt;, &lt;code&gt;code injection&lt;/code&gt;, &lt;code&gt;os command injection&lt;/code&gt;, &lt;code&gt;CRLF injection&lt;/code&gt;, &lt;code&gt;XXE&lt;/code&gt;, &lt;code&gt;SSRF&lt;/code&gt;, &lt;code&gt;path traversal&lt;/code&gt; and so on.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;Rate Limiting&lt;/code&gt;&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Defend your web apps against &lt;code&gt;DoS attacks&lt;/code&gt;, &lt;code&gt;bruteforce attempts&lt;/code&gt;, &lt;code&gt;traffic surges&lt;/code&gt;, and other types of abuse by throttling traffic that exceeds defined limits.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;Anti-Bot Challenge&lt;/code&gt;&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Anti-Bot challenges to protect your website from &lt;code&gt;bot attacks&lt;/code&gt;, humen users will be allowed, crawlers and bots will be blocked.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;Authentication Challenge&lt;/code&gt;&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When authentication challenge turned on, visitors need to enter the password, otherwise they will be blocked.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;Dynamic Protection&lt;/code&gt;&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When dynamic protection turned on, html and js codes in your web server will be dynamically encrypted by each time you visit.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;üß© Showcases&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Legitimate User&lt;/th&gt; 
   &lt;th&gt;Malicious User&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;Block Web Attacks&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/skeleton.png" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/blocked-for-attack-detected.png" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;Rate Limiting&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/skeleton.png" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/blocked-for-access-too-fast.png" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;Anti-Bot Challenge&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/captcha-1.gif" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/captcha-2.gif" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;Auth Challenge&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/auth-1.gif" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/auth-2.gif" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;HTML Dynamic Protection&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/dynamic-html-1.png" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/dynamic-html-2.png" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;JS Dynamic Protection&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/dynamic-js-1.png" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/dynamic-js-2.png" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;üöÄ Quickstart&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] ‰∏≠ÂõΩÂ§ßÈôÜÁî®Êà∑ÂÆâË£ÖÂõΩÈôÖÁâàÂèØËÉΩ‰ºöÂØºËá¥Êó†Ê≥ïËøûÊé•‰∫ëÊúçÂä°ÔºåËØ∑Êü•Áúã &lt;a href="https://docs.waf-ce.chaitin.cn/zh/%E4%B8%8A%E6%89%8B%E6%8C%87%E5%8D%97/%E5%AE%89%E8%A3%85%E9%9B%B7%E6%B1%A0"&gt;‰∏≠ÊñáÁâàÂÆâË£ÖÊñáÊ°£&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;üì¶ Installing&lt;/h4&gt; 
&lt;p&gt;Information on how to install SafeLine can be found in the &lt;a href="https://docs.waf.chaitin.com/en/GetStarted/Deploy"&gt;Install Guide&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;‚öôÔ∏è Protecting Web Apps&lt;/h4&gt; 
&lt;p&gt;to see &lt;a href="https://docs.waf.chaitin.com/en/GetStarted/AddApplication"&gt;Configuration&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üìã More Informations&lt;/h2&gt; 
&lt;h4&gt;Effect Evaluation&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Metric&lt;/th&gt; 
   &lt;th&gt;ModSecurity, Level 1&lt;/th&gt; 
   &lt;th&gt;CloudFlare, Free&lt;/th&gt; 
   &lt;th&gt;SafeLine, Balance&lt;/th&gt; 
   &lt;th&gt;SafeLine, Strict&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Total Samples&lt;/td&gt; 
   &lt;td&gt;33669&lt;/td&gt; 
   &lt;td&gt;33669&lt;/td&gt; 
   &lt;td&gt;33669&lt;/td&gt; 
   &lt;td&gt;33669&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Detection&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;69.74%&lt;/td&gt; 
   &lt;td&gt;10.70%&lt;/td&gt; 
   &lt;td&gt;71.65%&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;76.17%&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;False Positive&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;17.58%&lt;/td&gt; 
   &lt;td&gt;0.07%&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;0.07%&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.22%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Accuracy&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;82.20%&lt;/td&gt; 
   &lt;td&gt;98.40%&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;99.45%&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;99.38%&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Is SafeLine Production-Ready?&lt;/h4&gt; 
&lt;p&gt;Yes, SafeLine is production-ready.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Over 180,000 installations worldwide&lt;/li&gt; 
 &lt;li&gt;Protecting over 1,000,000 Websites&lt;/li&gt; 
 &lt;li&gt;Handling over 30,000,000,000 HTTP Requests Daily&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;üôã‚Äç‚ôÇÔ∏è Community&lt;/h4&gt; 
&lt;p&gt;Join our &lt;a href="https://discord.gg/SVnZGzHFvn"&gt;Discord&lt;/a&gt; to get community support, the core team members are identified by the STAFF role in Discord.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;channel &lt;a href="https://discord.com/channels/1243085666485534830/1243120292822253598"&gt;#feedback&lt;/a&gt;: for new features discussion.&lt;/li&gt; 
 &lt;li&gt;channel &lt;a href="https://discord.com/channels/1243085666485534830/1263761679619981413"&gt;#FAQ&lt;/a&gt;: for FAQ.&lt;/li&gt; 
 &lt;li&gt;channel &lt;a href="https://discord.com/channels/1243085666485534830/1243115843919806486"&gt;#general&lt;/a&gt;: for any other questions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Several contact options exist for our community, the primary one being Discord. These are in addition to GitHub issues for creating a new issue.&lt;/p&gt; 
&lt;p align="left"&gt; &lt;a target="_blank" href="https://discord.gg/SVnZGzHFvn"&gt;&lt;img src="https://img.shields.io/badge/Discord-5865F2?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a target="_blank" href="https://x.com/safeline_waf"&gt;&lt;img src="https://img.shields.io/badge/X.com-000000?style=flat&amp;amp;logo=x&amp;amp;logoColor=white" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a target="_blank" href="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/wechat.png"&gt;&lt;img src="https://img.shields.io/badge/WeChat-07C160?style=flat&amp;amp;logo=wechat&amp;amp;logoColor=white" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h4&gt;üí™ PRO Edition&lt;/h4&gt; 
&lt;p&gt;Coming soon!&lt;/p&gt; 
&lt;h4&gt;üìù License&lt;/h4&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/chaitin/SafeLine/main/LICENSE.md"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gofiber/fiber</title>
      <link>https://github.com/gofiber/fiber</link>
      <description>&lt;p&gt;‚ö°Ô∏è Express inspired web framework written in Go&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;a href="https://gofiber.io"&gt; 
  &lt;picture&gt; 
   &lt;source height="125" media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/gofiber/docs/master/static/img/logo-dark.svg" /&gt; 
   &lt;img height="125" alt="Fiber" src="https://raw.githubusercontent.com/gofiber/docs/master/static/img/logo.svg?sanitize=true" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://pkg.go.dev/github.com/gofiber/fiber/v3#pkg-overview"&gt; &lt;img src="https://img.shields.io/badge/%F0%9F%93%9A%20godoc-pkg-00ACD7.svg?color=00ACD7&amp;amp;style=flat-square" /&gt; &lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/gofiber/fiber/v3"&gt; &lt;img src="https://img.shields.io/badge/%F0%9F%93%9D%20goreport-A%2B-75C46B?style=flat-square" /&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/gofiber/fiber"&gt; &lt;img alt="Codecov" src="https://img.shields.io/codecov/c/github/gofiber/fiber?token=3Cr92CwaPQ&amp;amp;style=flat-square&amp;amp;logo=codecov&amp;amp;label=codecov" /&gt; &lt;/a&gt; &lt;a href="https://github.com/gofiber/fiber/actions?query=workflow%3ATest"&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/gofiber/fiber/test.yml?branch=main&amp;amp;label=%F0%9F%A7%AA%20tests&amp;amp;style=flat-square&amp;amp;color=75C46B" /&gt; &lt;/a&gt; &lt;a href="https://docs.gofiber.io"&gt; &lt;img src="https://img.shields.io/badge/%F0%9F%92%A1%20fiber-docs-00ACD7.svg?style=flat-square" /&gt; &lt;/a&gt; &lt;a href="https://gofiber.io/discord"&gt; &lt;img src="https://img.shields.io/discord/704680098577514527?style=flat-square&amp;amp;label=%F0%9F%92%AC%20discord&amp;amp;color=00ACD7" /&gt; &lt;/a&gt; &lt;/h1&gt; 
&lt;p align="center"&gt; &lt;em&gt;&lt;b&gt;Fiber&lt;/b&gt; is an &lt;a href="https://github.com/expressjs/express"&gt;Express&lt;/a&gt; inspired &lt;b&gt;web framework&lt;/b&gt; built on top of &lt;a href="https://github.com/valyala/fasthttp"&gt;Fasthttp&lt;/a&gt;, the &lt;b&gt;fastest&lt;/b&gt; HTTP engine for &lt;a href="https://go.dev/doc/"&gt;Go&lt;/a&gt;. Designed to &lt;b&gt;ease&lt;/b&gt; things up for &lt;b&gt;fast&lt;/b&gt; development with &lt;a href="https://docs.gofiber.io/#zero-allocation"&gt;&lt;b&gt;zero memory allocation&lt;/b&gt;&lt;/a&gt; and &lt;b&gt;performance&lt;/b&gt; in mind.&lt;/em&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;‚ö†Ô∏è &lt;strong&gt;Attention&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Fiber v3 is currently in beta and under active development. While it offers exciting new features, please note that it may not be stable for production use. We recommend sticking to the latest stable release (v2.x) for mission-critical applications. If you choose to use v3, be prepared for potential bugs and breaking changes. Always check the official documentation and release notes for updates and proceed with caution. Happy coding! üöÄ&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;‚öôÔ∏è Installation&lt;/h2&gt; 
&lt;p&gt;Fiber requires &lt;strong&gt;Go version &lt;code&gt;1.24&lt;/code&gt; or higher&lt;/strong&gt; to run. If you need to install or upgrade Go, visit the &lt;a href="https://go.dev/dl/"&gt;official Go download page&lt;/a&gt;. To start setting up your project, create a new directory for your project and navigate into it. Then, initialize your project with Go modules by executing the following command in your terminal:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go mod init github.com/your/repo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To learn more about Go modules and how they work, you can check out the &lt;a href="https://go.dev/blog/using-go-modules"&gt;Using Go Modules&lt;/a&gt; blog post.&lt;/p&gt; 
&lt;p&gt;After setting up your project, you can install Fiber with the &lt;code&gt;go get&lt;/code&gt; command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go get -u github.com/gofiber/fiber/v3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command fetches the Fiber package and adds it to your project's dependencies, allowing you to start building your web applications with Fiber.&lt;/p&gt; 
&lt;h2&gt;‚ö°Ô∏è Quickstart&lt;/h2&gt; 
&lt;p&gt;Getting started with Fiber is easy. Here's a basic example to create a simple web server that responds with "Hello, World üëã!" on the root path. This example demonstrates initializing a new Fiber app, setting up a route, and starting the server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
)

func main() {
    // Initialize a new Fiber app
    app := fiber.New()

    // Define a route for the GET method on the root path '/'
    app.Get("/", func(c fiber.Ctx) error {
        // Send a string response to the client
        return c.SendString("Hello, World üëã!")
    })

    // Start the server on port 3000
    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This simple server is easy to set up and run. It introduces the core concepts of Fiber: app initialization, route definition, and starting the server. Just run this Go program, and visit &lt;code&gt;http://localhost:3000&lt;/code&gt; in your browser to see the message.&lt;/p&gt; 
&lt;h2&gt;Zero Allocation&lt;/h2&gt; 
&lt;p&gt;Fiber is optimized for &lt;strong&gt;high-performance&lt;/strong&gt;, meaning values returned from &lt;strong&gt;fiber.Ctx&lt;/strong&gt; are &lt;strong&gt;not&lt;/strong&gt; immutable by default and &lt;strong&gt;will&lt;/strong&gt; be re-used across requests. As a rule of thumb, you &lt;strong&gt;must&lt;/strong&gt; only use context values within the handler and &lt;strong&gt;must not&lt;/strong&gt; keep any references. Once you return from the handler, any values obtained from the context will be re-used in future requests. Visit our &lt;a href="https://docs.gofiber.io/#zero-allocation"&gt;documentation&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;ü§ñ Benchmarks&lt;/h2&gt; 
&lt;p&gt;These tests are performed by &lt;a href="https://www.techempower.com/benchmarks/#section=data-r19&amp;amp;hw=ph&amp;amp;test=plaintext"&gt;TechEmpower&lt;/a&gt;. If you want to see all the results, please visit our &lt;a href="https://docs.gofiber.io/extra/benchmarks"&gt;Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;p float="left" align="middle"&gt; &lt;img src="https://raw.githubusercontent.com/gofiber/docs/master/static/img/plaintext.png" width="49%" /&gt; &lt;img src="https://raw.githubusercontent.com/gofiber/docs/master/static/img/json.png" width="49%" /&gt; &lt;/p&gt; 
&lt;h2&gt;üéØ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Robust &lt;a href="https://docs.gofiber.io/guide/routing"&gt;Routing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Serve &lt;a href="https://docs.gofiber.io/api/app#static"&gt;Static Files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Extreme &lt;a href="https://docs.gofiber.io/extra/benchmarks"&gt;Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.gofiber.io/extra/benchmarks"&gt;Low Memory&lt;/a&gt; footprint&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.gofiber.io/api/ctx"&gt;API Endpoints&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.gofiber.io/category/-middleware"&gt;Middleware&lt;/a&gt; &amp;amp; &lt;a href="https://docs.gofiber.io/api/ctx#next"&gt;Next&lt;/a&gt; support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/koddr/welcome-to-fiber-an-express-js-styled-fastest-web-framework-written-with-on-golang-497"&gt;Rapid&lt;/a&gt; server-side programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofiber/template"&gt;Template Engines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofiber/contrib/tree/main/websocket"&gt;WebSocket Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofiber/contrib/tree/main/socketio"&gt;Socket.io Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofiber/recipes/tree/master/sse"&gt;Server-Sent Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.gofiber.io/api/middleware/limiter"&gt;Rate Limiter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;And much more, &lt;a href="https://docs.gofiber.io/"&gt;explore Fiber&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üí° Philosophy&lt;/h2&gt; 
&lt;p&gt;New gophers that make the switch from &lt;a href="https://nodejs.org/en/about/"&gt;Node.js&lt;/a&gt; to &lt;a href="https://go.dev/doc/"&gt;Go&lt;/a&gt; are dealing with a learning curve before they can start building their web applications or microservices. Fiber, as a &lt;strong&gt;web framework&lt;/strong&gt;, was created with the idea of &lt;strong&gt;minimalism&lt;/strong&gt; and follows the &lt;strong&gt;UNIX way&lt;/strong&gt;, so that new gophers can quickly enter the world of Go with a warm and trusted welcome.&lt;/p&gt; 
&lt;p&gt;Fiber is &lt;strong&gt;inspired&lt;/strong&gt; by Express, the most popular web framework on the Internet. We combined the &lt;strong&gt;ease&lt;/strong&gt; of Express and &lt;strong&gt;raw performance&lt;/strong&gt; of Go. If you have ever implemented a web application in Node.js (&lt;em&gt;using Express or similar&lt;/em&gt;), then many methods and principles will seem &lt;strong&gt;very common&lt;/strong&gt; to you.&lt;/p&gt; 
&lt;p&gt;We &lt;strong&gt;listen&lt;/strong&gt; to our users in &lt;a href="https://github.com/gofiber/fiber/issues"&gt;issues&lt;/a&gt;, Discord &lt;a href="https://gofiber.io/discord"&gt;channel&lt;/a&gt; &lt;em&gt;and all over the Internet&lt;/em&gt; to create a &lt;strong&gt;fast&lt;/strong&gt;, &lt;strong&gt;flexible&lt;/strong&gt; and &lt;strong&gt;friendly&lt;/strong&gt; Go web framework for &lt;strong&gt;any&lt;/strong&gt; task, &lt;strong&gt;deadline&lt;/strong&gt; and developer &lt;strong&gt;skill&lt;/strong&gt;! Just like Express does in the JavaScript world.&lt;/p&gt; 
&lt;h2&gt;‚ö†Ô∏è Limitations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Due to Fiber's usage of unsafe, the library may not always be compatible with the latest Go version. Fiber v3 has been tested with Go version 1.24 or higher.&lt;/li&gt; 
 &lt;li&gt;Fiber automatically adapts common &lt;code&gt;net/http&lt;/code&gt; handler shapes when you register them on the router, and you can still use the &lt;a href="https://docs.gofiber.io/next/middleware/adaptor/"&gt;adaptor middleware&lt;/a&gt; when you need to bridge entire apps or &lt;code&gt;net/http&lt;/code&gt; middleware.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;net/http compatibility&lt;/h3&gt; 
&lt;p&gt;Fiber can run side by side with the standard library. The router accepts existing &lt;code&gt;net/http&lt;/code&gt; handlers directly and even works with native &lt;code&gt;fasthttp.RequestHandler&lt;/code&gt; callbacks, so you can plug in legacy endpoints without wrapping them manually:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"
    "net/http"

    "github.com/gofiber/fiber/v3"
)

func main() {
    httpHandler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
        if _, err := w.Write([]byte("served by net/http")); err != nil {
            panic(err)
        }
    })

    app := fiber.New()
    app.Get("/", httpHandler)

    // Start the server on port 3000
    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you need to convert entire applications or re-use &lt;code&gt;net/http&lt;/code&gt; middleware chains, rely on the &lt;a href="https://docs.gofiber.io/next/middleware/adaptor/"&gt;adaptor middleware&lt;/a&gt;. It converts handlers and middlewares in both directions and even lets you mount a Fiber app in a &lt;code&gt;net/http&lt;/code&gt; server.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Adapted &lt;code&gt;net/http&lt;/code&gt; handlers continue to operate with the standard-library semantics. They don't get access to &lt;code&gt;fiber.Ctx&lt;/code&gt; features and incur the overhead of the compatibility layer, so native &lt;code&gt;fiber.Handler&lt;/code&gt; callbacks still provide the best performance.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üëÄ Examples&lt;/h2&gt; 
&lt;p&gt;Listed below are some of the common examples. If you want to see more code examples, please visit our &lt;a href="https://github.com/gofiber/recipes"&gt;Recipes repository&lt;/a&gt; or visit our hosted &lt;a href="https://docs.gofiber.io"&gt;API documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;üìñ &lt;a href="https://docs.gofiber.io/#basic-routing"&gt;&lt;strong&gt;Basic Routing&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "fmt"
    "log"

    "github.com/gofiber/fiber/v3"
)

func main() {
    app := fiber.New()

    // GET /api/register
    app.Get("/api/*", func(c fiber.Ctx) error {
        msg := fmt.Sprintf("‚úã %s", c.Params("*"))
        return c.SendString(msg) // =&amp;gt; ‚úã register
    })

    // GET /flights/LAX-SFO
    app.Get("/flights/:from-:to", func(c fiber.Ctx) error {
        msg := fmt.Sprintf("üí∏ From: %s, To: %s", c.Params("from"), c.Params("to"))
        return c.SendString(msg) // =&amp;gt; üí∏ From: LAX, To: SFO
    })

    // GET /dictionary.txt
    app.Get("/:file.:ext", func(c fiber.Ctx) error {
        msg := fmt.Sprintf("üìÉ %s.%s", c.Params("file"), c.Params("ext"))
        return c.SendString(msg) // =&amp;gt; üìÉ dictionary.txt
    })

    // GET /john/75
    app.Get("/:name/:age/:gender?", func(c fiber.Ctx) error {
        msg := fmt.Sprintf("üë¥ %s is %s years old", c.Params("name"), c.Params("age"))
        return c.SendString(msg) // =&amp;gt; üë¥ john is 75 years old
    })

    // GET /john
    app.Get("/:name", func(c fiber.Ctx) error {
        msg := fmt.Sprintf("Hello, %s üëã!", c.Params("name"))
        return c.SendString(msg) // =&amp;gt; Hello john üëã!
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;üìñ &lt;a href="https://docs.gofiber.io/api/app#name"&gt;&lt;strong&gt;Route Naming&lt;/strong&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "encoding/json"
    "fmt"
    "log"

    "github.com/gofiber/fiber/v3"
)

func main() {
    app := fiber.New()

    app.Get("/api/*", func(c fiber.Ctx) error {
        msg := fmt.Sprintf("‚úã %s", c.Params("*"))
        return c.SendString(msg) // =&amp;gt; ‚úã register
    }).Name("api")

    route := app.GetRoute("api")

    data, _ := json.MarshalIndent(route, "", "  ")
    fmt.Println(string(data))
    // Prints:
    // {
    //    "method": "GET",
    //    "name": "api",
    //    "path": "/api/*",
    //    "params": [
    //      "*1"
    //    ]
    // }

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;üìñ &lt;a href="https://docs.gofiber.io/api/app#static"&gt;&lt;strong&gt;Serving Static Files&lt;/strong&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
    "github.com/gofiber/fiber/v3/middleware/static"
)

func main() {
    app := fiber.New()

    // Serve static files from the "./public" directory
    app.Get("/*", static.New("./public"))
    // =&amp;gt; http://localhost:3000/js/script.js
    // =&amp;gt; http://localhost:3000/css/style.css

    app.Get("/prefix*", static.New("./public"))
    // =&amp;gt; http://localhost:3000/prefix/js/script.js
    // =&amp;gt; http://localhost:3000/prefix/css/style.css

    // Serve a single file for any unmatched routes
    app.Get("*", static.New("./public/index.html"))
    // =&amp;gt; http://localhost:3000/any/path/shows/index.html

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;üìñ &lt;a href="https://docs.gofiber.io/api/ctx#next"&gt;&lt;strong&gt;Middleware &amp;amp; Next&lt;/strong&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "fmt"
    "log"

    "github.com/gofiber/fiber/v3"
)

func main() {
    app := fiber.New()

    // Middleware that matches any route
    app.Use(func(c fiber.Ctx) error {
        fmt.Println("ü•á First handler")
        return c.Next()
    })

    // Middleware that matches all routes starting with /api
    app.Use("/api", func(c fiber.Ctx) error {
        fmt.Println("ü•à Second handler")
        return c.Next()
    })

    // GET /api/list
    app.Get("/api/list", func(c fiber.Ctx) error {
        fmt.Println("ü•â Last handler")
        return c.SendString("Hello, World üëã!")
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;üìö Show more code examples&lt;/summary&gt; 
 &lt;h3&gt;Views Engines&lt;/h3&gt; 
 &lt;p&gt;üìñ &lt;a href="https://docs.gofiber.io/api/fiber#config"&gt;Config&lt;/a&gt; üìñ &lt;a href="https://github.com/gofiber/template"&gt;Engines&lt;/a&gt; üìñ &lt;a href="https://docs.gofiber.io/api/ctx#render"&gt;Render&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Fiber defaults to the &lt;a href="https://pkg.go.dev/html/template/"&gt;html/template&lt;/a&gt; when no view engine is set.&lt;/p&gt; 
 &lt;p&gt;If you want to execute partials or use a different engine like &lt;a href="https://github.com/eknkc/amber"&gt;amber&lt;/a&gt;, &lt;a href="https://github.com/aymerick/raymond"&gt;handlebars&lt;/a&gt;, &lt;a href="https://github.com/cbroglie/mustache"&gt;mustache&lt;/a&gt;, or &lt;a href="https://github.com/Joker/jade"&gt;pug&lt;/a&gt;, etc., check out our &lt;a href="https://github.com/gofiber/template"&gt;Template&lt;/a&gt; package that supports multiple view engines.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
    "github.com/gofiber/template/pug"
)

func main() {
    // Initialize a new Fiber app with Pug template engine
    app := fiber.New(fiber.Config{
        Views: pug.New("./views", ".pug"),
    })

    // Define a route that renders the "home.pug" template
    app.Get("/", func(c fiber.Ctx) error {
        return c.Render("home", fiber.Map{
            "title": "Homepage",
            "year":  1999,
        })
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Grouping Routes into Chains&lt;/h3&gt; 
 &lt;p&gt;üìñ &lt;a href="https://docs.gofiber.io/api/app#group"&gt;Group&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
)

func middleware(c fiber.Ctx) error {
    log.Println("Middleware executed")
    return c.Next()
}

func handler(c fiber.Ctx) error {
    return c.SendString("Handler response")
}

func main() {
    app := fiber.New()

    // Root API group with middleware
    api := app.Group("/api", middleware) // /api

    // API v1 routes
    v1 := api.Group("/v1", middleware) // /api/v1
    v1.Get("/list", handler)           // /api/v1/list
    v1.Get("/user", handler)           // /api/v1/user

    // API v2 routes
    v2 := api.Group("/v2", middleware) // /api/v2
    v2.Get("/list", handler)           // /api/v2/list
    v2.Get("/user", handler)           // /api/v2/user

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Middleware Logger&lt;/h3&gt; 
 &lt;p&gt;üìñ &lt;a href="https://docs.gofiber.io/api/middleware/logger"&gt;Logger&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
    "github.com/gofiber/fiber/v3/middleware/logger"
)

func main() {
    app := fiber.New()

    // Use Logger middleware
    app.Use(logger.New())

    // Define routes
    app.Get("/", func(c fiber.Ctx) error {
        return c.SendString("Hello, Logger!")
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Cross-Origin Resource Sharing (CORS)&lt;/h3&gt; 
 &lt;p&gt;üìñ &lt;a href="https://docs.gofiber.io/api/middleware/cors"&gt;CORS&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
    "github.com/gofiber/fiber/v3/middleware/cors"
)

func main() {
    app := fiber.New()

    // Use CORS middleware with default settings
    app.Use(cors.New())

    // Define routes
    app.Get("/", func(c fiber.Ctx) error {
        return c.SendString("CORS enabled!")
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Check CORS by passing any domain in &lt;code&gt;Origin&lt;/code&gt; header:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;curl -H "Origin: http://example.com" --verbose http://localhost:3000
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Custom 404 Response&lt;/h3&gt; 
 &lt;p&gt;üìñ &lt;a href="https://docs.gofiber.io/api/ctx#status"&gt;HTTP Methods&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
)

func main() {
    app := fiber.New()

    // Define routes
    app.Get("/", static.New("./public"))

    app.Get("/demo", func(c fiber.Ctx) error {
        return c.SendString("This is a demo page!")
    })

    app.Post("/register", func(c fiber.Ctx) error {
        return c.SendString("Registration successful!")
    })

    // Middleware to handle 404 Not Found
    app.Use(func(c fiber.Ctx) error {
        return c.SendStatus(fiber.StatusNotFound) // =&amp;gt; 404 "Not Found"
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;JSON Response&lt;/h3&gt; 
 &lt;p&gt;üìñ &lt;a href="https://docs.gofiber.io/api/ctx#json"&gt;JSON&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
)

type User struct {
    Name string `json:"name"`
    Age  int    `json:"age"`
}

func main() {
    app := fiber.New()

    // Route that returns a JSON object
    app.Get("/user", func(c fiber.Ctx) error {
        return c.JSON(&amp;amp;User{"John", 20})
        // =&amp;gt; {"name":"John", "age":20}
    })

    // Route that returns a JSON map
    app.Get("/json", func(c fiber.Ctx) error {
        return c.JSON(fiber.Map{
            "success": true,
            "message": "Hi John!",
        })
        // =&amp;gt; {"success":true, "message":"Hi John!"}
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;WebSocket Upgrade&lt;/h3&gt; 
 &lt;p&gt;üìñ &lt;a href="https://github.com/gofiber/websocket"&gt;Websocket&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
    "github.com/gofiber/fiber/v3/middleware/websocket"
)

func main() {
    app := fiber.New()

    // WebSocket route
    app.Get("/ws", websocket.New(func(c *websocket.Conn) {
        defer c.Close()
        for {
            // Read message from client
            mt, msg, err := c.ReadMessage()
            if err != nil {
                log.Println("read:", err)
                break
            }
            log.Printf("recv: %s", msg)

            // Write message back to client
            err = c.WriteMessage(mt, msg)
            if err != nil {
                log.Println("write:", err)
                break
            }
        }
    }))

    log.Fatal(app.Listen(":3000"))
    // Connect via WebSocket at ws://localhost:3000/ws
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Server-Sent Events&lt;/h3&gt; 
 &lt;p&gt;üìñ &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events"&gt;More Info&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "bufio"
    "fmt"
    "log"
    "time"

    "github.com/gofiber/fiber/v3"
    "github.com/valyala/fasthttp"
)

func main() {
    app := fiber.New()

    // Server-Sent Events route
    app.Get("/sse", func(c fiber.Ctx) error {
        c.Set("Content-Type", "text/event-stream")
        c.Set("Cache-Control", "no-cache")
        c.Set("Connection", "keep-alive")
        c.Set("Transfer-Encoding", "chunked")

        c.Context().SetBodyStreamWriter(func(w *bufio.Writer) {
            var i int
            for {
                i++
                msg := fmt.Sprintf("%d - the time is %v", i, time.Now())
                fmt.Fprintf(w, "data: Message: %s\n\n", msg)
                fmt.Println(msg)

                w.Flush()
                time.Sleep(5 * time.Second)
            }
        })

        return nil
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Recover Middleware&lt;/h3&gt; 
 &lt;p&gt;üìñ &lt;a href="https://docs.gofiber.io/api/middleware/recover"&gt;Recover&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
    "github.com/gofiber/fiber/v3/middleware/recover"
)

func main() {
    app := fiber.New()

    // Use Recover middleware to handle panics gracefully
    app.Use(recover.New())

    // Route that intentionally panics
    app.Get("/", func(c fiber.Ctx) error {
        panic("normally this would crash your app")
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Using Trusted Proxy&lt;/h3&gt; 
 &lt;p&gt;üìñ &lt;a href="https://docs.gofiber.io/api/fiber#config"&gt;Config&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
)

func main() {
    app := fiber.New(fiber.Config{
        // Configure trusted proxies - WARNING: Only trust proxies you control
        // Using TrustProxy: true with unrestricted IPs can lead to IP spoofing
        TrustProxy: true,
        TrustProxyConfig: fiber.TrustProxyConfig{
            Proxies: []string{"10.0.0.0/8", "172.16.0.0/12"}, // Example: Internal network ranges only
        },
        ProxyHeader: fiber.HeaderXForwardedFor,
    })

    // Define routes
    app.Get("/", func(c fiber.Ctx) error {
        return c.SendString("Trusted Proxy Configured!")
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;üß¨ Internal Middleware&lt;/h2&gt; 
&lt;p&gt;Here is a list of middleware that are included within the Fiber framework.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Middleware&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/adaptor"&gt;adaptor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Converter for net/http handlers to/from Fiber request handlers.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/basicauth"&gt;basicauth&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Provides HTTP basic authentication. It calls the next handler for valid credentials and 401 Unauthorized for missing or invalid credentials.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/cache"&gt;cache&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Intercept and cache HTTP responses.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/compress"&gt;compress&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Compression middleware for Fiber, with support for &lt;code&gt;deflate&lt;/code&gt;, &lt;code&gt;gzip&lt;/code&gt;, &lt;code&gt;brotli&lt;/code&gt; and &lt;code&gt;zstd&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/cors"&gt;cors&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Enable cross-origin resource sharing (CORS) with various options.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/csrf"&gt;csrf&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Protect from CSRF exploits.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/earlydata"&gt;earlydata&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Adds support for TLS 1.3's early data ("0-RTT") feature.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/encryptcookie"&gt;encryptcookie&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Encrypt middleware which encrypts cookie values.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/envvar"&gt;envvar&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Expose environment variables with providing an optional config.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/etag"&gt;etag&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Allows for caches to be more efficient and save bandwidth, as a web server does not need to resend a full response if the content has not changed.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/expvar"&gt;expvar&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Serves via its HTTP server runtime exposed variables in the JSON format.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/favicon"&gt;favicon&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Ignore favicon from logs or serve from memory if a file path is provided.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/healthcheck"&gt;healthcheck&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Liveness and Readiness probes for Fiber.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/helmet"&gt;helmet&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Helps secure your apps by setting various HTTP headers.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/idempotency"&gt;idempotency&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Allows for fault-tolerant APIs where duplicate requests do not erroneously cause the same action performed multiple times on the server-side.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/keyauth"&gt;keyauth&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Adds support for key based authentication.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/limiter"&gt;limiter&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Adds Rate-limiting support to Fiber. Use to limit repeated requests to public APIs and/or endpoints such as password reset.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/logger"&gt;logger&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;HTTP request/response logger.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/pprof"&gt;pprof&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Serves runtime profiling data in pprof format.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/proxy"&gt;proxy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Allows you to proxy requests to multiple servers.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/recover"&gt;recover&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Recovers from panics anywhere in the stack chain and handles the control to the centralized ErrorHandler.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/redirect"&gt;redirect&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Redirect middleware.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/requestid"&gt;requestid&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Adds a request ID to every request.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/rewrite"&gt;rewrite&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Rewrites the URL path based on provided rules. It can be helpful for backward compatibility or just creating cleaner and more descriptive links.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/session"&gt;session&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Session middleware. NOTE: This middleware uses our Storage package.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/skip"&gt;skip&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Skip middleware that skips a wrapped handler if a predicate is true.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/static"&gt;static&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Static middleware for Fiber that serves static files such as &lt;strong&gt;images&lt;/strong&gt;, &lt;strong&gt;CSS&lt;/strong&gt;, and &lt;strong&gt;JavaScript&lt;/strong&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/timeout"&gt;timeout&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Adds a max time for a request and forwards to ErrorHandler if it is exceeded.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;üß¨ External Middleware&lt;/h2&gt; 
&lt;p&gt;List of externally hosted middleware modules and maintained by the &lt;a href="https://github.com/orgs/gofiber/people"&gt;Fiber team&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Middleware&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/gofiber/contrib"&gt;contrib&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Third-party middlewares&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/gofiber/storage"&gt;storage&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Premade storage drivers that implement the Storage interface, designed to be used with various Fiber middlewares.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/gofiber/template"&gt;template&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;This package contains 9 template engines that can be used with Fiber.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;üï∂Ô∏è Awesome List&lt;/h2&gt; 
&lt;p&gt;For more articles, middlewares, examples, or tools, check our &lt;a href="https://github.com/gofiber/awesome-fiber"&gt;awesome list&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üëç Contribute&lt;/h2&gt; 
&lt;p&gt;If you want to say &lt;strong&gt;Thank You&lt;/strong&gt; and/or support the active development of &lt;code&gt;Fiber&lt;/code&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Add a &lt;a href="https://github.com/gofiber/fiber/stargazers"&gt;GitHub Star&lt;/a&gt; to the project.&lt;/li&gt; 
 &lt;li&gt;Tweet about the project &lt;a href="https://x.com/intent/tweet?text=Fiber%20is%20an%20Express%20inspired%20%23web%20%23framework%20built%20on%20top%20of%20Fasthttp%2C%20the%20fastest%20HTTP%20engine%20for%20%23Go.%20Designed%20to%20ease%20things%20up%20for%20%23fast%20development%20with%20zero%20memory%20allocation%20and%20%23performance%20in%20mind%20%F0%9F%9A%80%20https%3A%2F%2Fgithub.com%2Fgofiber%2Ffiber"&gt;on your ùïè (Twitter)&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Write a review or tutorial on &lt;a href="https://medium.com/"&gt;Medium&lt;/a&gt;, &lt;a href="https://dev.to/"&gt;Dev.to&lt;/a&gt; or your personal blog.&lt;/li&gt; 
 &lt;li&gt;Support the project by donating a &lt;a href="https://buymeacoff.ee/fenny"&gt;cup of coffee&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üíª Development&lt;/h2&gt; 
&lt;p&gt;To ensure your contributions are ready for a Pull Request, please use the following &lt;code&gt;Makefile&lt;/code&gt; commands. These tools help maintain code quality and consistency.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;make help&lt;/strong&gt;: Display available commands.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;make audit&lt;/strong&gt;: Conduct quality checks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;make benchmark&lt;/strong&gt;: Benchmark code performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;make coverage&lt;/strong&gt;: Generate test coverage report.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;make format&lt;/strong&gt;: Automatically format code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;make lint&lt;/strong&gt;: Run lint checks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;make test&lt;/strong&gt;: Execute all tests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;make tidy&lt;/strong&gt;: Tidy dependencies.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Run these commands to ensure your code adheres to project standards and best practices.&lt;/p&gt; 
&lt;h2&gt;‚òï Supporters&lt;/h2&gt; 
&lt;p&gt;Fiber is an open-source project that runs on donations to pay the bills, e.g., our domain name, GitBook, Netlify, and serverless hosting. If you want to support Fiber, you can ‚òï &lt;a href="https://buymeacoff.ee/fenny"&gt;&lt;strong&gt;buy a coffee here&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;User&lt;/th&gt; 
   &lt;th&gt;Donation&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/204341?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/destari"&gt;@destari&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 10&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/63164982?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/dembygenesis"&gt;@dembygenesis&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/56607882?s=25" alt="thomasvvugt" style="width: 25px; height: 25px;" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/thomasvvugt"&gt;@thomasvvugt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/27820675?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/hendratommy"&gt;@hendratommy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/1094221?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ekaputra07"&gt;@ekaputra07&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/194590?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jorgefuertes"&gt;@jorgefuertes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/186637?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/candidosales"&gt;@candidosales&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/29659953?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/l0nax"&gt;@l0nax&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/635852?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/bihe"&gt;@bihe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/307334?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/justdave"&gt;@justdave&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/11155743?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/koddr"&gt;@koddr&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/29042462?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/lapolinar"&gt;@lapolinar&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/2978730?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/diegowifi"&gt;@diegowifi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/44171355?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ssimk0"&gt;@ssimk0&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/5638101?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/raymayemir"&gt;@raymayemir&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/619996?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/melkorm"&gt;@melkorm&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/31022056?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/marvinjwendt"&gt;@marvinjwendt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/31921460?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/toishy"&gt;@toishy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òï x 1&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;üíª Code Contributors&lt;/h2&gt; 
&lt;img src="https://opencollective.com/fiber/contributors.svg?width=890&amp;amp;button=false" alt="Code Contributors" style="max-width:100%;" /&gt; 
&lt;h2&gt;‚≠êÔ∏è Stargazers&lt;/h2&gt; 
&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=gofiber/fiber&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
 &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=gofiber/fiber&amp;amp;type=Date" /&gt; 
 &lt;img src="https://api.star-history.com/svg?repos=gofiber/fiber&amp;amp;type=Date" /&gt; 
&lt;/picture&gt; 
&lt;h2&gt;üßæ License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2019-present &lt;a href="https://github.com/fenny"&gt;Fenny&lt;/a&gt; and &lt;a href="https://github.com/gofiber/fiber/graphs/contributors"&gt;Contributors&lt;/a&gt;. &lt;code&gt;Fiber&lt;/code&gt; is free and open-source software licensed under the &lt;a href="https://github.com/gofiber/fiber/raw/main/LICENSE"&gt;MIT License&lt;/a&gt;. Official logo was created by &lt;a href="https://github.com/koddr"&gt;Vic Sh√≥stak&lt;/a&gt; and distributed under &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/"&gt;Creative Commons&lt;/a&gt; license (CC BY-SA 4.0 International).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>oauth2-proxy/oauth2-proxy</title>
      <link>https://github.com/oauth2-proxy/oauth2-proxy</link>
      <description>&lt;p&gt;A reverse proxy that provides authentication with Google, Azure, OpenID Connect and many more identity providers.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/oauth2-proxy/oauth2-proxy/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/oauth2-proxy/oauth2-proxy/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Continuous Integration" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/oauth2-proxy/oauth2-proxy"&gt;&lt;img src="https://goreportcard.com/badge/github.com/oauth2-proxy/oauth2-proxy" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/github.com/oauth2-proxy/oauth2-proxy"&gt;&lt;img src="https://godoc.org/github.com/oauth2-proxy/oauth2-proxy?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/oauth2-proxy/oauth2-proxy/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="MIT licensed" /&gt;&lt;/a&gt; &lt;a href="https://codeclimate.com/github/oauth2-proxy/oauth2-proxy/maintainability"&gt;&lt;img src="https://api.codeclimate.com/v1/badges/a58ff79407212e2beacb/maintainability" alt="Maintainability" /&gt;&lt;/a&gt; &lt;a href="https://codeclimate.com/github/oauth2-proxy/oauth2-proxy/test_coverage"&gt;&lt;img src="https://api.codeclimate.com/v1/badges/a58ff79407212e2beacb/test_coverage" alt="Test Coverage" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/oauth2-proxy/oauth2-proxy/master/docs/static/img/logos/OAuth2_Proxy_horizontal.svg?sanitize=true" alt="OAuth2 Proxy" /&gt;&lt;/p&gt; 
&lt;p&gt;OAuth2-Proxy is a flexible, open-source tool that can act as either a standalone reverse proxy or a middleware component integrated into existing reverse proxy or load balancer setups. It provides a simple and secure way to protect your web applications with OAuth2 / OIDC authentication. As a reverse proxy, it intercepts requests to your application and redirects users to an OAuth2 provider for authentication. As a middleware, it can be seamlessly integrated into your existing infrastructure to handle authentication for multiple applications.&lt;/p&gt; 
&lt;p&gt;OAuth2-Proxy supports a lot of OAuth2 as well as OIDC providers. Either through a generic OIDC client or a specific implementation for Google, Microsoft Entra ID, GitHub, login.gov and others. Through specialised provider implementations oauth2-proxy can extract more details about the user like preferred usernames and groups. Those details can then be forwarded as HTTP headers to your upstream applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/oauth2-proxy/oauth2-proxy/master/docs/static/img/simplified-architecture.svg?sanitize=true" alt="Simplified Architecture" /&gt;&lt;/p&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;p&gt;OAuth2-Proxy's &lt;a href="https://oauth2-proxy.github.io/oauth2-proxy/installation"&gt;Installation Docs&lt;/a&gt; cover how to install and configure your setup. Additionally you can take a further look at the &lt;a href="https://github.com/oauth2-proxy/oauth2-proxy/tree/master/contrib/local-environment"&gt;example setup files&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;h3&gt;Binaries&lt;/h3&gt; 
&lt;p&gt;We publish oauth2-proxy as compiled binaries on GitHub for all major architectures as well as more exotic ones like &lt;code&gt;ppc64le&lt;/code&gt; as well as &lt;code&gt;s390x&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href="https://github.com/oauth2-proxy/oauth2-proxy/releases/latest"&gt;latest release&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Images&lt;/h3&gt; 
&lt;p&gt;From &lt;code&gt;v7.6.0&lt;/code&gt; and up the base image has been changed from Alpine to &lt;a href="https://github.com/GoogleContainerTools/distroless"&gt;GoogleContainerTools/distroless&lt;/a&gt;. This image comes with even fewer installed dependencies and thus should improve security. The image therefore is also slightly smaller than Alpine. For debugging purposes (and those who really need it. e.g. &lt;code&gt;armv6&lt;/code&gt;) we still provide images based on Alpine. The tags of these images are suffixed with &lt;code&gt;-alpine&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Since 2023-11-18 we build nightly images directly from the &lt;code&gt;master&lt;/code&gt; branch and provide them at &lt;code&gt;quay.io/oauth2-proxy/oauth2-proxy-nightly&lt;/code&gt;. These images are considered unstable and therefore should &lt;strong&gt;NOT&lt;/strong&gt; be used for production purposes unless you know what you're doing.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/9/96/Microsoft_logo_%282012%29.svg?sanitize=true" alt="Microsoft" /&gt; Microsoft Azure credits for open source projects&lt;/p&gt; 
&lt;p&gt;Would you like to sponsor the project then please contact us at &lt;a href="mailto:sponsors@oauth2-proxy.dev"&gt;sponsors@oauth2-proxy.dev&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Involved&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://gophers.slack.com/archives/CM2RSS25N"&gt;&lt;img src="https://img.shields.io/badge/slack-Gopher_%23oauth2--proxy-red?logo=slack" alt="Slack" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Join the #oauth2-proxy &lt;a href="https://gophers.slack.com/archives/CM2RSS25N"&gt;Slack channel&lt;/a&gt; to chat with other users of oauth2-proxy or reach out to the maintainers directly. Use the &lt;a href="https://invite.slack.golangbridge.org/"&gt;public invite link&lt;/a&gt; to get an invite for the Gopher Slack space.&lt;/p&gt; 
&lt;p&gt;OAuth2-Proxy is a community-driven project. We rely on the contributÔ∏èions of our users to continually improve it. While review times can vary, we appreciate your patience and understanding. As a volunteer-driven project, we strive to keep this project stable and might take longer to merge changes.&lt;/p&gt; 
&lt;p&gt;If you want to contribute to the project. Please see our &lt;a href="https://oauth2-proxy.github.io/oauth2-proxy/community/contribution"&gt;Contributing&lt;/a&gt; guide.&lt;/p&gt; 
&lt;p&gt;Who uses OAuth2-Proxy? Have a look at our new &lt;a href="https://raw.githubusercontent.com/oauth2-proxy/oauth2-proxy/master/ADOPTERS.md"&gt;ADOPTERS&lt;/a&gt; file and feel free to open a PR to add your organisation.&lt;/p&gt; 
&lt;p&gt;Thanks to all the people who already contributed ‚ù§&lt;/p&gt; 
&lt;a href="https://github.com/oauth2-proxy/oauth2-proxy/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=oauth2-proxy/oauth2-proxy&amp;amp;columns=15&amp;amp;max=75" /&gt; &lt;img src="https://img.shields.io/github/contributors/oauth2-proxy/oauth2-proxy" /&gt; &lt;/a&gt; 
&lt;p&gt;Made with &lt;a href="https://contrib.rocks"&gt;contrib.rocks&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you believe you have found a vulnerability within OAuth2 Proxy or any of its dependencies, please do &lt;strong&gt;NOT&lt;/strong&gt; open an issue or PR on GitHub, please do &lt;strong&gt;NOT&lt;/strong&gt; post any details publicly.&lt;/p&gt; 
&lt;p&gt;Security disclosures &lt;strong&gt;MUST&lt;/strong&gt; be done in private. If you have found an issue that you would like to bring to the attention of the maintainers, please compose an email and send it to the list of people listed in our &lt;a href="https://raw.githubusercontent.com/oauth2-proxy/oauth2-proxy/master/MAINTAINERS"&gt;MAINTAINERS&lt;/a&gt; file.&lt;/p&gt; 
&lt;p&gt;For more details read our full &lt;a href="https://oauth2-proxy.github.io/oauth2-proxy/community/security#security-disclosures"&gt;Security Docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Security Notice for v6.0.0 and older&lt;/h3&gt; 
&lt;p&gt;If you are running a version older than v6.0.0 we &lt;strong&gt;strongly recommend&lt;/strong&gt; to the current version.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://github.com/oauth2-proxy/oauth2-proxy/security/advisories/GHSA-5m6c-jp6f-2vcv"&gt;open redirect vulnerability&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Repository History&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;2018-11-27:&lt;/strong&gt; This repository was forked from &lt;a href="https://github.com/bitly/oauth2_proxy"&gt;bitly/OAuth2_Proxy&lt;/a&gt;. Versions v3.0.0 and up are from this fork and will have diverged from any changes in the original fork. A list of changes can be seen in the &lt;a href="https://raw.githubusercontent.com/oauth2-proxy/oauth2-proxy/master/CHANGELOG.md"&gt;CHANGELOG&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2020-03-29:&lt;/strong&gt; This project was formerly hosted as &lt;code&gt;pusher/oauth2_proxy&lt;/code&gt; but has been renamed to &lt;code&gt;oauth2-proxy/oauth2-proxy&lt;/code&gt;. Going forward, all images shall be available at &lt;code&gt;quay.io/oauth2-proxy/oauth2-proxy&lt;/code&gt; and binaries will be named &lt;code&gt;oauth2-proxy&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OAuth2-Proxy is distributed under &lt;a href="https://raw.githubusercontent.com/oauth2-proxy/oauth2-proxy/master/LICENSE"&gt;The MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mayswind/ezbookkeeping</title>
      <link>https://github.com/mayswind/ezbookkeeping</link>
      <description>&lt;p&gt;A lightweight, self-hosted personal finance app with a user-friendly interface and powerful bookkeeping features.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ezBookkeeping&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/mayswind/ezbookkeeping/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-green.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/mayswind/ezbookkeeping"&gt;&lt;img src="https://goreportcard.com/badge/github.com/mayswind/ezbookkeeping" alt="Go Report" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mayswind/ezbookkeeping/releases"&gt;&lt;img src="https://img.shields.io/github/release/mayswind/ezbookkeeping.svg?style=flat" alt="Latest Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mayswind/ezbookkeeping/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/mayswind/ezbookkeeping/build-snapshot.yml?branch=main" alt="Latest Build" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/mayswind/ezbookkeeping"&gt;&lt;img src="https://img.shields.io/docker/image-size/mayswind/ezbookkeeping.svg?style=flat" alt="Latest Docker Image Size" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/mayswind/ezbookkeeping"&gt;&lt;img src="https://img.shields.io/docker/pulls/mayswind/ezbookkeeping" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/mayswind/ezbookkeeping"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hellogithub.com/en/repository/mayswind/ezbookkeeping"&gt;&lt;img src="https://api.hellogithub.com/v1/widgets/recommend.svg?rid=ded5af09da574ec1811ddb154f1b2093&amp;amp;claim_uid=LT7EZxeBukCnh0K" alt="Recommend By HelloGitHub" /&gt;&lt;/a&gt; &lt;a href="https://trendshift.io/repositories/12917"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/12917" alt="Trending" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;ezBookkeeping is a lightweight, self-hosted personal finance app with a user-friendly interface and powerful bookkeeping features. It's easy to deploy, and you can start it with just one single Docker command. Designed to be resource-efficient and highly scalable, it can run smoothly on devices as small as a Raspberry Pi, or scale up to NAS, MicroServers, and even large cluster environments.&lt;/p&gt; 
&lt;p&gt;ezBookkeeping offers tailored interfaces for both mobile and desktop devices. With support for PWA (Progressive Web Apps), you can even &lt;a href="https://raw.githubusercontent.com/wiki/mayswind/ezbookkeeping/img/mobile/add_to_home_screen.gif"&gt;add it to your mobile home screen&lt;/a&gt; and use it like a native app.&lt;/p&gt; 
&lt;p&gt;Live Demo: &lt;a href="https://ezbookkeeping-demo.mayswind.net"&gt;https://ezbookkeeping-demo.mayswind.net&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Open Source &amp;amp; Self-Hosted&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Built for privacy and control&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lightweight &amp;amp; Fast&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Optimized for performance, runs smoothly even on low-resource environments&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy Installation&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Docker-ready&lt;/li&gt; 
   &lt;li&gt;Supports SQLite, MySQL, PostgreSQL&lt;/li&gt; 
   &lt;li&gt;Cross-platform (Windows, macOS, Linux)&lt;/li&gt; 
   &lt;li&gt;Works on x86, amd64, ARM architectures&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User-Friendly Interface&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;UI optimized for both mobile and desktop&lt;/li&gt; 
   &lt;li&gt;PWA support for native-like mobile experience&lt;/li&gt; 
   &lt;li&gt;Dark mode&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI-Powered Features&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Receipt image recognition&lt;/li&gt; 
   &lt;li&gt;Supports MCP (Model Context Protocol) for AI integration&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Powerful Bookkeeping&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Two-level accounts and categories&lt;/li&gt; 
   &lt;li&gt;Attach images to transactions&lt;/li&gt; 
   &lt;li&gt;Location tracking with maps&lt;/li&gt; 
   &lt;li&gt;Recurring transactions&lt;/li&gt; 
   &lt;li&gt;Advanced filtering, search, visualization, and analysis&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Localization &amp;amp; Globalization&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Multi-language and multi-currency support&lt;/li&gt; 
   &lt;li&gt;Automatic exchange rates&lt;/li&gt; 
   &lt;li&gt;Multi-timezone awareness&lt;/li&gt; 
   &lt;li&gt;Custom formats for dates, numbers, and currencies&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Two-factor authentication (2FA)&lt;/li&gt; 
   &lt;li&gt;Login rate limiting&lt;/li&gt; 
   &lt;li&gt;Application lock (PIN code / WebAuthn)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data Import/Export&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Supports CSV, OFX, QFX, QIF, IIF, Camt.053, MT940, GnuCash, Firefly III, Beancount, and more&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;h3&gt;Desktop Version&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/wiki/mayswind/ezbookkeeping/img/desktop/en.png"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/mayswind/ezbookkeeping/img/desktop/en.png" alt="ezBookkeeping" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Mobile Version&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/wiki/mayswind/ezbookkeeping/img/mobile/en.png"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/mayswind/ezbookkeeping/img/mobile/en.png" alt="ezBookkeeping" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Run with Docker&lt;/h3&gt; 
&lt;p&gt;Visit &lt;a href="https://hub.docker.com/r/mayswind/ezbookkeeping"&gt;Docker Hub&lt;/a&gt; to see all images and tags.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Latest Release:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ docker run -p8080:8080 mayswind/ezbookkeeping
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Latest Daily Build:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ docker run -p8080:8080 mayswind/ezbookkeeping:latest-snapshot
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install from Binary&lt;/h3&gt; 
&lt;p&gt;Download the latest release: &lt;a href="https://github.com/mayswind/ezbookkeeping/releases"&gt;https://github.com/mayswind/ezbookkeeping/releases&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Linux / macOS&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ ./ezbookkeeping server run
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt; .\ezbookkeeping.exe server run
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, ezBookkeeping listens on port 8080. You can then visit &lt;code&gt;http://{YOUR_HOST_ADDRESS}:8080/&lt;/code&gt; .&lt;/p&gt; 
&lt;h3&gt;Build from Source&lt;/h3&gt; 
&lt;p&gt;Make sure you have &lt;a href="https://golang.org/"&gt;Golang&lt;/a&gt;, &lt;a href="https://gcc.gnu.org/"&gt;GCC&lt;/a&gt;, &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; and &lt;a href="https://www.npmjs.com/"&gt;NPM&lt;/a&gt; installed. Then download the source code, and follow these steps:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Linux / macOS&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ ./build.sh package -o ezbookkeeping.tar.gz
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All the files will be packaged in &lt;code&gt;ezbookkeeping.tar.gz&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt; .\build.bat package -o ezbookkeeping.zip
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;PS &amp;gt; .\build.ps1 package -Output ezbookkeeping.zip
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All the files will be packaged in &lt;code&gt;ezbookkeeping.zip&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can also build a Docker image. Make sure you have &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; installed, then follow these steps:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ ./build.sh docker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions of all kinds.&lt;/p&gt; 
&lt;p&gt;Found a bug? &lt;a href="https://github.com/mayswind/ezbookkeeping/issues"&gt;Submit an issue&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Want to contribute code? Feel free to fork and send a pull request.&lt;/p&gt; 
&lt;p&gt;Contributions of all kinds ‚Äî bug reports, feature suggestions, documentation improvements, or code ‚Äî are highly appreciated.&lt;/p&gt; 
&lt;p&gt;Check out our &lt;a href="https://github.com/mayswind/ezbookkeeping/graphs/contributors"&gt;Contributor Graph&lt;/a&gt; to see the amazing people who've already helped.&lt;/p&gt; 
&lt;h2&gt;Translating&lt;/h2&gt; 
&lt;p&gt;Help make ezBookkeeping accessible to users around the world. If you want to contribute a translation, please refer to our &lt;a href="https://ezbookkeeping.mayswind.net/translating"&gt;translation guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Currently available translations:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tag&lt;/th&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Contributors&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;de&lt;/td&gt; 
   &lt;td&gt;Deutsch&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/chrgm"&gt;@chrgm&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;en&lt;/td&gt; 
   &lt;td&gt;English&lt;/td&gt; 
   &lt;td&gt;/&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;es&lt;/td&gt; 
   &lt;td&gt;Espa√±ol&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Miguelonlonlon"&gt;@Miguelonlonlon&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;fr&lt;/td&gt; 
   &lt;td&gt;Fran√ßais&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/brieucdlf"&gt;@brieucdlf&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;it&lt;/td&gt; 
   &lt;td&gt;Italiano&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/waron97"&gt;@waron97&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ja&lt;/td&gt; 
   &lt;td&gt;Êó•Êú¨Ë™û&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/tkymmm"&gt;@tkymmm&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ko&lt;/td&gt; 
   &lt;td&gt;ÌïúÍµ≠Ïñ¥&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/overworks"&gt;@overworks&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nl&lt;/td&gt; 
   &lt;td&gt;Nederlands&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/automagics"&gt;@automagic&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pt-BR&lt;/td&gt; 
   &lt;td&gt;Portugu√™s (Brasil)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/thecodergus"&gt;@thecodergus&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ru&lt;/td&gt; 
   &lt;td&gt;–†—É—Å—Å–∫–∏–π&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/artegoser"&gt;@artegoser&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;th&lt;/td&gt; 
   &lt;td&gt;‡πÑ‡∏ó‡∏¢&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/natthavat28"&gt;@natthavat28&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uk&lt;/td&gt; 
   &lt;td&gt;–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/nktlitvinenko"&gt;@nktlitvinenko&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;vi&lt;/td&gt; 
   &lt;td&gt;Ti·∫øng Vi·ªát&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/f97"&gt;@f97&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;zh-Hans&lt;/td&gt; 
   &lt;td&gt;‰∏≠Êñá (ÁÆÄ‰Ωì)&lt;/td&gt; 
   &lt;td&gt;/&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;zh-Hant&lt;/td&gt; 
   &lt;td&gt;‰∏≠Êñá (ÁπÅÈ´î)&lt;/td&gt; 
   &lt;td&gt;/&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Don't see your language? Help us add it.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://ezbookkeeping.mayswind.net"&gt;English&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ezbookkeeping.mayswind.net/zh_Hans"&gt;‰∏≠Êñá (ÁÆÄ‰Ωì)&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/mayswind/ezbookkeeping/raw/master/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>helm/helm</title>
      <link>https://github.com/helm/helm</link>
      <description>&lt;p&gt;The Kubernetes Package Manager&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Helm&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/helm/helm/actions?workflow=release"&gt;&lt;img src="https://github.com/helm/helm/workflows/release/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/helm.sh/helm/v4"&gt;&lt;img src="https://goreportcard.com/badge/helm.sh/helm/v4" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/helm.sh/helm/v4"&gt;&lt;img src="https://img.shields.io/static/v1?label=godoc&amp;amp;message=reference&amp;amp;color=blue" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/3131"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/3131/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/helm/helm"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/helm/helm/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://insights.linuxfoundation.org/project/helm"&gt;&lt;img src="https://insights.production.lfx.dev/api/badge/health-score?project=helm" alt="LFX Health Score" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Helm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources.&lt;/p&gt; 
&lt;p&gt;Use Helm to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find and use &lt;a href="https://artifacthub.io/packages/search?kind=0"&gt;popular software packaged as Helm Charts&lt;/a&gt; to run in Kubernetes&lt;/li&gt; 
 &lt;li&gt;Share your own applications as Helm Charts&lt;/li&gt; 
 &lt;li&gt;Create reproducible builds of your Kubernetes applications&lt;/li&gt; 
 &lt;li&gt;Intelligently manage your Kubernetes manifest files&lt;/li&gt; 
 &lt;li&gt;Manage releases of Helm packages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Helm in a Handbasket&lt;/h2&gt; 
&lt;p&gt;Helm is a tool that streamlines installing and managing Kubernetes applications. Think of it like apt/yum/homebrew for Kubernetes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Helm renders your templates and communicates with the Kubernetes API&lt;/li&gt; 
 &lt;li&gt;Helm runs on your laptop, CI/CD, or wherever you want it to run.&lt;/li&gt; 
 &lt;li&gt;Charts are Helm packages that contain at least two things: 
  &lt;ul&gt; 
   &lt;li&gt;A description of the package (&lt;code&gt;Chart.yaml&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;One or more templates, which contain Kubernetes manifest files&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Charts can be stored on disk, or fetched from remote chart repositories (like Debian or RedHat packages)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Helm Development and Stable Versions&lt;/h2&gt; 
&lt;p&gt;Helm v4 is currently under development on the &lt;code&gt;main&lt;/code&gt; branch. This is unstable and the APIs within the Go SDK and at the command line are changing. Helm v3 (current stable) is maintained on the &lt;code&gt;dev-v3&lt;/code&gt; branch. APIs there follow semantic versioning.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;Binary downloads of the Helm client can be found on &lt;a href="https://github.com/helm/helm/releases/latest"&gt;the Releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Unpack the &lt;code&gt;helm&lt;/code&gt; binary and add it to your PATH and you are good to go!&lt;/p&gt; 
&lt;p&gt;If you want to use a package manager:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt; users can use &lt;code&gt;brew install helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chocolatey.org/"&gt;Chocolatey&lt;/a&gt; users can use &lt;code&gt;choco install kubernetes-helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/package-manager/"&gt;Winget&lt;/a&gt; users can use &lt;code&gt;winget install Helm.Helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scoop.sh/"&gt;Scoop&lt;/a&gt; users can use &lt;code&gt;scoop install helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://snapcraft.io/"&gt;Snapcraft&lt;/a&gt; users can use &lt;code&gt;snap install helm --classic&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flox.dev"&gt;Flox&lt;/a&gt; users can use &lt;code&gt;flox install kubernetes-helm&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To rapidly get Helm up and running, start with the &lt;a href="https://helm.sh/docs/intro/quickstart/"&gt;Quick Start Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://helm.sh/docs/intro/install/"&gt;installation guide&lt;/a&gt; for more options, including installing pre-releases.&lt;/p&gt; 
&lt;h2&gt;Docs&lt;/h2&gt; 
&lt;p&gt;Get started with the &lt;a href="https://helm.sh/docs/intro/quickstart/"&gt;Quick Start guide&lt;/a&gt; or plunge into the &lt;a href="https://helm.sh/docs"&gt;complete documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://github.com/helm/helm/milestones"&gt;Helm roadmap uses GitHub milestones&lt;/a&gt; to track the progress of the project.&lt;/p&gt; 
&lt;p&gt;The development of Helm v4 is currently happening on the &lt;code&gt;main&lt;/code&gt; branch while the development of Helm v3, the stable branch, is happening on the &lt;code&gt;dev-v3&lt;/code&gt; branch. Changes should be made to the &lt;code&gt;main&lt;/code&gt; branch prior to being added to the &lt;code&gt;dev-v3&lt;/code&gt; branch so that all changes are carried along to Helm v4.&lt;/p&gt; 
&lt;h2&gt;Community, discussion, contribution, and support&lt;/h2&gt; 
&lt;p&gt;You can reach the Helm community and developers via the following channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://kubernetes.slack.com"&gt;Kubernetes Slack&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://kubernetes.slack.com/messages/helm-users"&gt;#helm-users&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://kubernetes.slack.com/messages/helm-dev"&gt;#helm-dev&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://kubernetes.slack.com/messages/charts"&gt;#charts&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Mailing List: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://lists.cncf.io/g/cncf-helm"&gt;Helm Mailing List&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Developer Call: Thursdays at 9:30-10:00 Pacific (&lt;a href="https://github.com/helm/community/raw/master/communication.md#meetings"&gt;meeting details&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contribution&lt;/h3&gt; 
&lt;p&gt;If you're interested in contributing, please refer to the &lt;a href="https://raw.githubusercontent.com/helm/helm/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; &lt;strong&gt;before submitting a pull request&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;Code of conduct&lt;/h3&gt; 
&lt;p&gt;Participation in the Helm community is governed by the &lt;a href="https://raw.githubusercontent.com/helm/helm/main/code-of-conduct.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kubernetes/kubernetes</title>
      <link>https://github.com/kubernetes/kubernetes</link>
      <description>&lt;p&gt;Production-Grade Container Scheduling and Management&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kubernetes (K8s)&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://bestpractices.coreinfrastructure.org/projects/569"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/569/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/kubernetes/kubernetes"&gt;&lt;img src="https://goreportcard.com/badge/github.com/kubernetes/kubernetes" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/v/release/kubernetes/kubernetes?sort=semver" alt="GitHub release (latest SemVer)" /&gt;&lt;/p&gt; 
&lt;img src="https://github.com/kubernetes/kubernetes/raw/master/logo/logo.png" width="100" /&gt; 
&lt;hr /&gt; 
&lt;p&gt;Kubernetes, also known as K8s, is an open source system for managing &lt;a href="https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/"&gt;containerized applications&lt;/a&gt; across multiple hosts. It provides basic mechanisms for the deployment, maintenance, and scaling of applications.&lt;/p&gt; 
&lt;p&gt;Kubernetes builds upon a decade and a half of experience at Google running production workloads at scale using a system called &lt;a href="https://research.google.com/pubs/pub43438.html?authuser=1"&gt;Borg&lt;/a&gt;, combined with best-of-breed ideas and practices from the community.&lt;/p&gt; 
&lt;p&gt;Kubernetes is hosted by the Cloud Native Computing Foundation (&lt;a href="https://www.cncf.io/about"&gt;CNCF&lt;/a&gt;). If your company wants to help shape the evolution of technologies that are container-packaged, dynamically scheduled, and microservices-oriented, consider joining the CNCF. For details about who's involved and how Kubernetes plays a role, read the CNCF &lt;a href="https://cncf.io/news/announcement/2015/07/new-cloud-native-computing-foundation-drive-alignment-among-container"&gt;announcement&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;To start using K8s&lt;/h2&gt; 
&lt;p&gt;See our documentation on &lt;a href="https://kubernetes.io"&gt;kubernetes.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Take a free course on &lt;a href="https://www.udacity.com/course/scalable-microservices-with-kubernetes--ud615"&gt;Scalable Microservices with Kubernetes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To use Kubernetes code as a library in other applications, see the &lt;a href="https://git.k8s.io/kubernetes/staging/README.md"&gt;list of published components&lt;/a&gt;. Use of the &lt;code&gt;k8s.io/kubernetes&lt;/code&gt; module or &lt;code&gt;k8s.io/kubernetes/...&lt;/code&gt; packages as libraries is not supported.&lt;/p&gt; 
&lt;h2&gt;To start developing K8s&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://git.k8s.io/community"&gt;community repository&lt;/a&gt; hosts all information about building Kubernetes from source, how to contribute code and documentation, who to contact about what, etc.&lt;/p&gt; 
&lt;p&gt;If you want to build Kubernetes right away there are two options:&lt;/p&gt; 
&lt;h5&gt;You have a working &lt;a href="https://go.dev/doc/install"&gt;Go environment&lt;/a&gt;.&lt;/h5&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/kubernetes/kubernetes
cd kubernetes
make
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;You have a working &lt;a href="https://docs.docker.com/engine"&gt;Docker environment&lt;/a&gt;.&lt;/h5&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/kubernetes/kubernetes
cd kubernetes
make quick-release
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the full story, head over to the &lt;a href="https://git.k8s.io/community/contributors/devel#readme"&gt;developer's documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you need support, start with the &lt;a href="https://kubernetes.io/docs/tasks/debug/"&gt;troubleshooting guide&lt;/a&gt;, and work your way through the process that we've outlined.&lt;/p&gt; 
&lt;p&gt;That said, if you have questions, reach out to us &lt;a href="https://git.k8s.io/community/communication"&gt;one way or another&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community Meetings&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://www.kubernetes.dev/resources/calendar/"&gt;Calendar&lt;/a&gt; has the list of all the meetings in the Kubernetes community in a single location.&lt;/p&gt; 
&lt;h2&gt;Adopters&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://kubernetes.io/case-studies/"&gt;User Case Studies&lt;/a&gt; website has real-world use cases of organizations across industries that are deploying/migrating to Kubernetes.&lt;/p&gt; 
&lt;h2&gt;Governance&lt;/h2&gt; 
&lt;p&gt;Kubernetes project is governed by a framework of principles, values, policies and processes to help our community and constituents towards our shared goals.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://github.com/kubernetes/community/raw/master/governance.md"&gt;Kubernetes Community&lt;/a&gt; is the launching point for learning about how we organize ourselves.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://github.com/kubernetes/steering"&gt;Kubernetes Steering community repo&lt;/a&gt; is used by the Kubernetes Steering Committee, which oversees governance of the Kubernetes project.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://github.com/kubernetes/enhancements"&gt;Kubernetes Enhancements repo&lt;/a&gt; provides information about Kubernetes releases, as well as feature tracking and backlogs.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>evcc-io/evcc</title>
      <link>https://github.com/evcc-io/evcc</link>
      <description>&lt;p&gt;solar charging ‚òÄÔ∏èüöò&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;evcc üöò‚òÄÔ∏è&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/evcc-io/evcc/actions/workflows/nightly.yml"&gt;&lt;img src="https://github.com/evcc-io/evcc/actions/workflows/nightly.yml/badge.svg?sanitize=true" alt="Build" /&gt;&lt;/a&gt; &lt;a href="https://hosted.weblate.org/engage/evcc/"&gt;&lt;img src="https://hosted.weblate.org/widgets/evcc/-/evcc/svg-badge.svg?sanitize=true" alt="Translation" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/docker/pulls/evcc/evcc" alt="Docker Pulls" /&gt; &lt;a href="https://cloudsmith.io/~evcc/packages/"&gt;&lt;img src="https://img.shields.io/badge/OSS%20hosting%20by-cloudsmith-blue?logo=cloudsmith" alt="OSS hosting by cloudsmith" /&gt;&lt;/a&gt; &lt;a href="https://github.com/evcc-io/evcc/releases"&gt;&lt;img src="https://img.shields.io/github/release/evcc-io/evcc.svg?sanitize=true" alt="Latest Version" /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href="https://depot.dev/?utm_source=evcc"&gt;&lt;img src="https://depot.dev/badges/built-with-depot.svg?sanitize=true" alt="Built with Depot" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;evcc is an extensible EV Charge Controller and home energy management system.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/evcc-io/evcc/master/assets/github/screenshot.webp" alt="Screenshot" /&gt;&lt;/p&gt; 
&lt;p&gt;Our goal is to provide local energy management, without relying on cloud services. Featured in &lt;a href="https://www.pv-magazine.de/2022/01/14/mit-open-source-lademanager-schnittstellen-zu-wallbox-und-photovoltaik-anlage-meistern/"&gt;PV Magazine&lt;/a&gt; and &lt;a href="https://www.youtube.com/watch?v=MoBpEXHMNjI"&gt;c‚Äôt Magazin&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;simple and clean user interface&lt;/li&gt; 
 &lt;li&gt;support for many &lt;a href="https://docs.evcc.io/en/docs/devices/chargers"&gt;EV chargers&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;ABB, ABL, Alfen, Alphatec, Amperfied, Ampure, Audi, AUTEL, Autoaid, Bender, BMW, cFos, Charge Amps, Compleo, CUBOS, Cupra, Dadapower, DaheimLaden, Delta, E.ON Drive, E3/DC, Easee, Ebee, echarge, EcoHarmony, Edgetech, Elecq, eledio, Elli, EM2GO, EN+, enercab, Ensto, EntraTek, ESL, eSystems, Etrel, EVBox, Free2Move, Free2move eSolutions, Fronius, Garo, go-e, Hardy Barth, Heidelberg, Hesotec, Homecharge, Huawei, Innogy, INRO, Juice, Kathrein, KEBA, Kontron Solar, Kostal, KSE, LadeFoxx, LRT, Mennekes, NRGkick, OBO Bettermann, OpenEVSE, openWB, Optec, Orbis, PC Electric, Peblar, Phoenix Contact, Plugchoice, Porsche, Pracht, Pulsares, Pulsatrix, Qcells, Schneider, Schrack, SENEC, Siemens, Skoda, SMA, Smartfox, SolarEdge, Solax, Sonnen, Spelsberg, Stark in Strom, Sungrow, TechniSat, Tesla, Tigo, TinkerForge, Ubitricity, V2C Trydan, Vestel, Victron, Viridian EV, Volkswagen, Volt Time, Wallbe, wallbox, Walther Werke, Webasto, Weidm√ºller, Zaptec, ZJ Beny. &lt;a href="https://docs.evcc.io/en/docs/devices/chargers"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;EEBus&lt;/strong&gt; support (Elli, PMCC)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;OCPP&lt;/strong&gt; support&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;build-your-own:&lt;/strong&gt; Phoenix Contact (includes ESL Walli), EVSE DIN&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;smart switches:&lt;/strong&gt; AVM, FRITZ!, Home Assistant, Homematic IP, HomeWizard, myStrom, Shelly, Tasmota, TP-Link. &lt;a href="https://docs.evcc.io/en/docs/devices/smartswitches"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;heat pumps and electric heaters:&lt;/strong&gt; alpha innotec, Bosch, Buderus, B√∂sch, CTA All-In-One, Daikin, Elco, IDM, Junkers, Kermi, Lambda, my-PV, Nibe, Novelan, Roth, Stiebel Eltron, Tecalor, Vaillant, Viessmann, Wolf, Zewotherm. &lt;a href="https://docs.evcc.io/en/docs/devices/heating"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;support for many &lt;a href="https://docs.evcc.io/en/docs/devices/meters"&gt;energy meters&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;solar inverters and battery systems:&lt;/strong&gt; A-Tronix, Acrel, Ads-tec, Alpha ESS, Ampere, Anker, APsystems, AVM, Axitec, BGEtech, Bosch, Bosswerk, Carlo Gavazzi, Deye, E3/DC, Eastron, Enphase, FENECON, FRITZ!, FoxESS, Fronius, Ginlong, go-e, GoodWe, Growatt, Homematic IP, HomeWizard, Hoymiles, Huawei, IAMMETER, IGEN Tech, Kostal, LG, Loxone, M-TEC, Marstek, myStrom, OpenEMS, Powerfox, Qcells, RCT, SAJ, SAX, SENEC, Senergy, Shelly, Siemens, Sigenergy, SMA, Smartfox, SofarSolar, Solaranzeige, SolarEdge, SolarMax, Solarwatt, Solax, Solinteng, Sonnen, St-ems, Steca, Sungrow, Sunsynk, Sunway, Tasmota, Tesla, TP-Link, VARTA, Victron, Wattsonic, Youless, ZCS Azzurro, Zendure. &lt;a href="https://docs.evcc.io/en/docs/devices/meters"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;general energy meters:&lt;/strong&gt; A-Tronix, ABB, Acrel, Alpha ESS, Ampere, AVM, Axitec, Bernecker Engineering, BGEtech, Bosch, Carlo Gavazzi, cFos, Deye, DSMR, DZG, E3/DC, Eastron, Enphase, ESPHome, FENECON, FoxESS, FRITZ!, Fronius, Ginlong, go-e, GoodWe, Growatt, Homematic IP, HomeWizard, Huawei, IAMMETER, inepro, IOmeter, Janitza, KEBA, Kostal, LG, Loxone, M-TEC, mhendriks, my-PV, myStrom, OpenEMS, ORNO, P1Monitor, Powerfox, Qcells, RCT, Saia-Burgess Controls (SBC), SAJ, SAX, Schneider Electric, SENEC, Shelly, Siemens, Sigenergy, SMA, Smartfox, SofarSolar, Solaranzeige, SolarEdge, SolarMax, Solarwatt, Solax, Solinteng, Sonnen, St-ems, Sungrow, Sunsynk, Sunway, Tasmota, Tesla, Tibber, TQ, VARTA, Victron, Volksz√§hler, Wago, Wattsonic, Weidm√ºller, Youless, ZCS Azzurro, Zuidwijk. &lt;a href="https://docs.evcc.io/en/docs/devices/meters"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;integrated systems&lt;/strong&gt;: SMA Sunny Home Manager and Energy Meter, KOSTAL Smart Energy Meter (KSEM, EMxx)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;sunspec&lt;/strong&gt;-compatible inverter or home battery devices&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;mbmd&lt;/strong&gt;-compatible devices, see &lt;a href="https://github.com/volkszaehler/mbmd#supported-devices"&gt;volkszaehler/mbmd&lt;/a&gt; for a complete list&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.evcc.io/en/docs/devices/vehicles"&gt;vehicle&lt;/a&gt; integrations (state of charge, remote charge, battery and preconditioning status): 
  &lt;ul&gt; 
   &lt;li&gt;Aiways, Audi, BMW, Citro√´n, Dacia, DS, Fiat, Ford, Hyundai, Jeep, Kia, Mercedes-Benz, MG, Mini, Nissan, NIU, Opel, Peugeot, Polestar, Renault, Seat, Skoda, Smart, Tesla, Toyota, Volkswagen, Volvo, Zero Motorcycles. &lt;a href="https://docs.evcc.io/en/docs/devices/vehicles"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;services:&lt;/strong&gt; OVMS, Tronity, evNotify, ioBroker.bmw, mg2mqtt, mz2mqtt, TeslaLogger, TeslaMate, Tessi, volvo2mqtt&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.evcc.io/en/docs/devices/plugins"&gt;plugins&lt;/a&gt; for integrating with any charger, smartswitch, heatpump, electric heater, meter, solar- / battery-inverter or vehicle: 
  &lt;ul&gt; 
   &lt;li&gt;Modbus, HTTP, MQTT, JavaScript, WebSocket, Go and shell scripts&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;status &lt;a href="https://docs.evcc.io/en/docs/reference/configuration/messaging"&gt;notifications&lt;/a&gt; using &lt;a href="https://telegram.org"&gt;Telegram&lt;/a&gt;, &lt;a href="https://pushover.net"&gt;PushOver&lt;/a&gt; and &lt;a href="https://containrrr.dev/shoutrrr/"&gt;many more&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;logging using &lt;a href="https://www.influxdata.com"&gt;InfluxDB&lt;/a&gt; and &lt;a href="https://grafana.com/grafana/"&gt;Grafana&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.evcc.io/en/docs/integrations/rest-api"&gt;REST&lt;/a&gt; and &lt;a href="https://docs.evcc.io/en/docs/integrations/mqtt-api"&gt;MQTT&lt;/a&gt; APIs for integration with home automation systems&lt;/li&gt; 
 &lt;li&gt;Add-ons for &lt;a href="https://docs.evcc.io/en/docs/integrations/home-assistant"&gt;Home Assistant&lt;/a&gt; and &lt;a href="https://www.openhab.org/addons/bindings/evcc"&gt;openHAB&lt;/a&gt; (not maintained by the evcc core team)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;You'll find everything you need in our &lt;a href="https://docs.evcc.io/en/"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Technical details on how to contribute, how to add translations and how to build evcc from source can be found &lt;a href="https://raw.githubusercontent.com/evcc-io/evcc/master/CONTRIBUTING.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hosted.weblate.org/engage/evcc/"&gt;&lt;img src="https://hosted.weblate.org/widgets/evcc/-/evcc/287x66-grey.png" alt="Weblate Hosted" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsorship&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/evcc-io/evcc/master/assets/github/evcc-gopher.png" align="right" width="150" /&gt; 
&lt;p&gt;evcc believes in open source software. We're committed to provide best in class EV charging experience. Maintaining evcc consumes time and effort. With the vast amount of different devices to support, we depend on community and vendor support to keep evcc alive.&lt;/p&gt; 
&lt;p&gt;While evcc is open source, we would also like to encourage vendors to provide open source hardware devices, public documentation and support open source projects like ours that provide additional value to otherwise closed hardware. Where this is not the case, evcc requires "sponsor token" to finance ongoing development and support of evcc.&lt;/p&gt; 
&lt;p&gt;Learn more about our &lt;a href="https://docs.evcc.io/en/docs/sponsorship"&gt;sponsorship model&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License. See the &lt;a href="https://raw.githubusercontent.com/evcc-io/evcc/master/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;p&gt;For additional license information regarding fonts, icons, and other assets, please see the &lt;a href="https://raw.githubusercontent.com/evcc-io/evcc/master/LICENSES/"&gt;LICENSES&lt;/a&gt; folder.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; All sponsor-required components are excluded from the MIT License. See file license header for details. If you want to use them in your own project, one evcc sponsorship token is required per evcc instance. Custom licensing agreements are available - please &lt;a href="mailto:info@evcc.io"&gt;contact us&lt;/a&gt; to discuss your specific requirements.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pdfcpu/pdfcpu</title>
      <link>https://github.com/pdfcpu/pdfcpu</link>
      <description>&lt;p&gt;A PDF processor written in Go.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pdfcpu: a Go PDF processor and CLI&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/pdfcpu/pdfcpu/actions"&gt;&lt;img src="https://github.com/pdfcpu/pdfcpu/workflows/Test/badge.svg?sanitize=true" alt="Test" /&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/github/pdfcpu/pdfcpu?branch=master"&gt;&lt;img src="https://coveralls.io/repos/github/pdfcpu/pdfcpu/badge.svg?branch=master" alt="Coverage Status" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/pdfcpu/pdfcpu"&gt;&lt;img src="https://godoc.org/github.com/pdfcpu/pdfcpu?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/pdfcpu/pdfcpu"&gt;&lt;img src="https://goreportcard.com/badge/github.com/pdfcpu/pdfcpu" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;&lt;img src="https://img.shields.io/hexpm/l/plug.svg?sanitize=true" alt="Hex.pm" /&gt;&lt;/a&gt; &lt;a href="https://gurubase.io/g/pdfcpu"&gt;&lt;img src="https://img.shields.io/badge/Gurubase-Ask%20pdfcpu%20Guru-006BFF" alt="Gurubase" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/pdfcpu/pdfcpu/releases"&gt;&lt;img src="https://img.shields.io/github/release/pdfcpu/pdfcpu.svg?sanitize=true" alt="Latest release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/hhrutter"&gt;&lt;img src="https://img.shields.io/static/v1?label=Sponsor&amp;amp;message=%E2%9D%A4&amp;amp;logo=GitHub&amp;amp;color=%23fe8e86" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pdfcpu.io"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/logoSmall.png" width="150" /&gt;&lt;/a&gt; &lt;a href="https://pdfa.org"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/pdfa.png" width="75" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;pdfcpu is a PDF processing library written in &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt; that supports encryption and offers both an API and a command-line interface (CLI). It is compatible with all PDF versions with basic support and ongoing improvement for PDF 2.0 (ISO-32000-2).&lt;/p&gt; 
&lt;h2&gt;Motivation&lt;/h2&gt; 
&lt;p&gt;This is an effort to build a comprehensive PDF processing library from the ground up written in Go. Over time pdfcpu aims to support the standard range of PDF processing features and also any interesting use cases that may present themselves along the way.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;kbd&gt;&lt;a href="https://pdfcpu.io/generate/grid"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/gridpdf.png" height="150" /&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp; &lt;kbd&gt;&lt;a href="https://pdfcpu.io/core/watermark"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/wmi1abs.png" height="150" /&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp; &lt;kbd&gt;&lt;a href="https://pdfcpu.io/generate/nup"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/nup9pdf.png" height="150" /&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp; &lt;kbd&gt;&lt;a href="https://pdfcpu.io/fonts/fonts"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/cjkv.png" height="150" /&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp; &lt;kbd&gt;&lt;a href="https://pdfcpu.io/core/stamp"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/4exp.png" height="150" /&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp; &lt;kbd&gt;&lt;a href="https://pdfcpu.io/form/form"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/form.png" height="150" /&gt;&lt;/a&gt;&lt;/kbd&gt;&lt;br /&gt;&lt;br /&gt; &lt;kbd&gt;&lt;a href="https://pdfcpu.io/generate/create"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/table.png" height="100" /&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp; &lt;kbd&gt;&lt;a href="https://pdfcpu.io/core/stamp"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/sti.png" height="150" /&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp; &lt;kbd&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/hold3.png" height="150" /&gt;&lt;/kbd&gt;&amp;nbsp; &lt;kbd&gt;&lt;a href="https://pdfcpu.io/core/watermark"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/wmi4.png" height="150" /&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp; &lt;kbd&gt;&lt;a href="https://pdfcpu.io/generate/create"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/imagebox.png" height="100" /&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt; &lt;kbd&gt;&lt;a href="https://pdfcpu.io/generate/booklet"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/book2A4p1.png" height="150" /&gt;&lt;/a&gt;&lt;/kbd&gt; &lt;kbd&gt;&lt;a href="https://pdfcpu.io/core/stamp"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/stp.png" height="150" /&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp; &lt;kbd&gt;&lt;a href="https://pdfcpu.io/generate/grid"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/gridimg.png" height="150" /&gt;&lt;/a&gt;&lt;/kbd&gt; &lt;kbd&gt;&lt;a href="https://pdfcpu.io/core/stamp"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/stRoundBorder.png" height="150" /&gt;&lt;/a&gt;&lt;/kbd&gt; &lt;kbd&gt;&lt;a href="https://pdfcpu.io/generate/booklet"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/book4A4p1.png" height="150" /&gt;&lt;/a&gt;&lt;/kbd&gt; &lt;/p&gt; 
&lt;h2&gt;Focus&lt;/h2&gt; 
&lt;p&gt;The primary emphasis is on providing robust assistance for batch processing and scripting through a comprehensive command-line interface. Simultaneously, pdfcpu aims to simplify the integration of PDF processing into your Go-based backend system by offering a versatile set of commands.&lt;/p&gt; 
&lt;h2&gt;Command Set&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/annot/annot"&gt;annotations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/attach/attach"&gt;attachments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/generate/booklet"&gt;booklet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/bookmarks/bookmarks"&gt;bookmarks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/boxes/boxes"&gt;boxes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/core/certs"&gt;certificates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/encrypt/change_opw"&gt;change owner password&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/encrypt/change_upw"&gt;change user password&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/core/collect"&gt;collect&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/config/config"&gt;config&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/create/create"&gt;create&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/core/crop"&gt;crop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/generate/cut"&gt;cut&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/encrypt/decryptPDF"&gt;decrypt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/encrypt/encryptPDF"&gt;encrypt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/extract/extract"&gt;extract&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/fonts/fonts"&gt;fonts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/form/form"&gt;form&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/generate/grid"&gt;grid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/images/images"&gt;images&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/generate/import"&gt;import&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/info"&gt;info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/keywords/keywords"&gt;keywords&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/core/merge"&gt;merge&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/generate/ndown"&gt;ndown&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/generate/nup"&gt;nup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/core/optimize"&gt;optimize&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/pagelayout/pagelayout"&gt;pagelayout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/pagemode/pagemode"&gt;pagemode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/pages/pages"&gt;pages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/encrypt/perm_set"&gt;permissions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/portfolio/portfolio"&gt;portfolio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/generate/poster"&gt;poster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/properties/properties"&gt;properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/core/resize"&gt;resize&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/core/rotate"&gt;rotate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://pdfcpu.io/core/sign"&gt;signatures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/core/split"&gt;split&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/core/stamp"&gt;stamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/core/trim"&gt;trim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/core/validate"&gt;validate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/viewerpref/viewerpref"&gt;viewerpref&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/core/watermark"&gt;watermark&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io/core/zoom"&gt;zoom&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://pdfcpu.io"&gt;pdfcpu.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pdfcpu/pdfcpu/tree/master/pkg/api/test"&gt;API tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pdfcpu/pdfcpu/tree/master/pkg/samples"&gt;API samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;CLI usage: &lt;code&gt;$ pdfcpu help cmd&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;GoDoc&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/github.com/pdfcpu/pdfcpu"&gt;pdfcpu package&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/github.com/pdfcpu/pdfcpu/pkg/api"&gt;pdfcpu API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/github.com/pdfcpu/pdfcpu/pkg/cli"&gt;pdfcpu CLI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reminder&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Always make sure your work is based on the latest commit!&lt;br /&gt;&lt;/li&gt; 
 &lt;li&gt;pdfcpu is still &lt;em&gt;Alpha&lt;/em&gt; - bugfixes are committed on the fly and will be mentioned in the next release notes.&lt;br /&gt;&lt;/li&gt; 
 &lt;li&gt;Follow &lt;a href="https://twitter.com/pdfcpu"&gt;pdfcpu&lt;/a&gt; for news and release announcements.&lt;/li&gt; 
 &lt;li&gt;For quick questions or discussions get in touch on the &lt;a href="https://invite.slack.golangbridge.org/"&gt;Gopher Slack&lt;/a&gt; in the #pdfcpu channel.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo Screencast&lt;/h2&gt; 
&lt;p&gt;(using older version with a smaller command set)&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://asciinema.org/a/P5jaAo9kgZXKj2iSA1OqIdLAU"&gt;&lt;img src="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/resources/demo.png" alt="asciicast" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Download&lt;/h3&gt; 
&lt;p&gt;Get the latest binary &lt;a href="https://github.com/pdfcpu/pdfcpu/releases"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Using Go Modules&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/pdfcpu/pdfcpu
$ cd pdfcpu/cmd/pdfcpu
$ go install
$ pdfcpu version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or directly through Go install:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ go install github.com/pdfcpu/pdfcpu/cmd/pdfcpu@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using Homebrew (macOS)&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;$ brew install pdfcpu
$ pdfcpu version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using DNF/YUM (Fedora)&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo dnf install golang-github-pdfcpu
$ pdfcpu version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run in a Docker container&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ docker build -t pdfcpu .
# mount current host folder into container as /app to process files in the local host folder
$ docker run -it -v "$(pwd)":/app pdfcpu validate a.pdf
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;What&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Please &lt;a href="https://github.com/pdfcpu/pdfcpu/issues/new/choose"&gt;create&lt;/a&gt; an issue if you find a bug or want to propose a change.&lt;/li&gt; 
 &lt;li&gt;Feature requests - always welcome!&lt;/li&gt; 
 &lt;li&gt;Bug fixes - always welcome!&lt;/li&gt; 
 &lt;li&gt;PRs - let's &lt;a href="https://github.com/pdfcpu/pdfcpu/discussions"&gt;discuss&lt;/a&gt; first or &lt;a href="https://github.com/pdfcpu/pdfcpu/issues/new/choose"&gt;create&lt;/a&gt; an issue.&lt;/li&gt; 
 &lt;li&gt;pdfcpu is stable but still &lt;em&gt;Alpha&lt;/em&gt; and occasionally undergoing heavy changes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;How&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;The pdfcpu &lt;a href="https://github.com/pdfcpu/pdfcpu/discussions"&gt;discussion board&lt;/a&gt; is open! Please engage in any form helpful for the community.&lt;/li&gt; 
 &lt;li&gt;If you want to report a bug please attach the &lt;em&gt;very verbose&lt;/em&gt; (&lt;code&gt;pdfcpu cmd -vv ...&lt;/code&gt;) output and ideally a test PDF that you can share.&lt;/li&gt; 
 &lt;li&gt;Always make sure your contribution is based on the latest commit.&lt;/li&gt; 
 &lt;li&gt;Please sign your commits.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Reporting Crashes&lt;/h3&gt; 
&lt;p&gt;Unfortunately crashes do happen :( For the majority of the cases this is due to a diverse pool of PDF Writers out there and millions of PDF files using different versions waiting to be processed by pdfcpu. Sometimes these PDFs were written more than 20(!) years ago. Often there is an issue with validation - sometimes a bug in the parser. Many times even using relaxed validation with pdfcpu does not work. In these cases we need to extend relaxed validation and for this we are relying on your help. By reporting crashes you are helping to improve the stability of pdfcpu. If you happen to crash on any pdfcpu operation be it on the command line or in your Go backend these are the steps to report this:&lt;/p&gt; 
&lt;p&gt;Regardless of the pdfcpu operation, please start using the pdfcpu command line to validate your file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ pdfcpu validate -v &amp;amp;&amp;gt; crash.log
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or to produce very verbose output&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ pdfcpu validate -vv &amp;amp;&amp;gt; crash.log
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;will produce what's needed to investigate a crash. Then open an issue and post &lt;code&gt;crash.log&lt;/code&gt; or its contents. Ideally post a test PDF you can share to reproduce this. You can also email to &lt;a href="mailto:hhrutter@gmail.com"&gt;hhrutter@gmail.com&lt;/a&gt; or if you prefer Slack you can get in touch on the Gopher slack #pdfcpu channel.&lt;/p&gt; 
&lt;p&gt;If processing your PDF with pdfcpu crashes during validation and can be opened by Adobe Reader and Mac Preview chances are we can extend relaxed validation and provide a fix. If the file in question cannot be opened by both Adobe Reader and Mac Preview we cannot help you!&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks üíö goes to these wonderful people:&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/hhrutter"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/11322155?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Horst Rutter&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/haldyr"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/5140211?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;haldyr&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/SimePel"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/20608155?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vyacheslav&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/ungerik"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/617459?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Erik Unger&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/richardwilkes"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/13079058?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Richard Wilkes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/minenok-tutu"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/16303386?s=400&amp;amp;v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;minenok-tutu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/matbur"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/1965445?s=400&amp;amp;v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mateusz Burniak&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/dharnitski"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/1175110?s=400&amp;amp;v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dmitry Harnitski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/ryarnyah"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/1074083?s=400&amp;amp;v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ryarnyah&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/s01ipsist"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/13267?s=400&amp;amp;v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sam Giffney&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/cewitte"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/32948066?s=400&amp;amp;v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Carlos Eduardo Witte&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/minusworld"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/2374948?s=400&amp;amp;u=a36e5f8da8dc1c102bc4d283f25e4c61cae7f985&amp;amp;v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;minusworld&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/jozuenoon"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/18538487?s=400&amp;amp;u=b9e628dfc60f672a887be2ed04a791195829943e&amp;amp;v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Witold Konior&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/joonas-fi"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/630151?s=400&amp;amp;v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;joonas.fi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/henrixapp"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/10349817?s=400&amp;amp;u=93bacb23bd2909d5b6c5b644a8d4cdd947422ee1&amp;amp;v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Henrik Reinst√§dtler&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/VMorozov-wh"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/72016286?s=400&amp;amp;v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;VMorozov-wh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/benoitkugler"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/31929422?s=400&amp;amp;v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Benoit KUGLER&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/adamgreenhall"&gt;&lt;img src="https://avatars.githubusercontent.com/u/704919?s=400&amp;amp;v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Adam Greenhall&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/moritamori"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5201812?s=400&amp;amp;u=8a0a9fca4560be71d4923299ddebf877854eea54&amp;amp;v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;moritamori&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/JanBaryla"&gt;&lt;img src="https://avatars.githubusercontent.com/u/41904529?s=400&amp;amp;u=044396494285ad806e86d1936c390b3071ce57c0&amp;amp;v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;JanBaryla&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/TheDiscordian"&gt;&lt;img src="https://avatars.githubusercontent.com/u/43145244?s=400&amp;amp;u=89a689f1a854ce0f57ae2a0333c82bfdc5723bb9&amp;amp;v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;TheDiscordian&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/rgargente"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15472552?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rafael Garcia Argente&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/truyet"&gt;&lt;img src="https://avatars.githubusercontent.com/u/710057?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;truyet&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/christiannicola"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5031217?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Christian Nicola&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/kben"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3233970?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Benjamin Krill&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/petervwyatt"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26521615?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Peter Wyatt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/kpym"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3142701?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kroum Tzanev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/signalwerk"&gt;&lt;img src="https://avatars.githubusercontent.com/u/992878?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Stefan Huber&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/juaismar"&gt;&lt;img src="https://avatars.githubusercontent.com/u/59667587?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Juan Iscar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/Juneezee"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20135478?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Eng Zer Jun&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/hant0508"&gt;&lt;img src="https://avatars.githubusercontent.com/u/28459131?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dmitry Ivanov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/HeavyHorst"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16866547?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rene Kaufmann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/christian-heusel"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26827864?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Christian Heusel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/freshteapot"&gt;&lt;img src="https://avatars.githubusercontent.com/u/305673?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Chris&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/scoiatael"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2892794?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Lukasz Czaplinski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/joelschutz"&gt;&lt;img src="https://avatars.githubusercontent.com/u/49206635?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Joel Silva Schutz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/semvis123"&gt;&lt;img src="https://avatars.githubusercontent.com/u/28219076?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;semvis123&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/testwill"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8717479?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;guangwu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/yyoshiki41"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4014912?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Yoshiki Nakagawa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/stevevls"&gt;&lt;img src="https://avatars.githubusercontent.com/u/432860?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Steve van Loben Sels&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/mygityf"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6083533?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Yaofu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/vsenko"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15724278?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;vsenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/afh"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16507?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alexis Hildebrandt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/sivukhin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1395040?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sivukhin Nikita&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/fancycode"&gt;&lt;img src="https://avatars.githubusercontent.com/u/247730?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Joachim Bauch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/kalimit"&gt;&lt;img src="https://avatars.githubusercontent.com/u/127291996?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;kalimit&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/xelan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5080535?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andreas Erhard&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/toshi1127"&gt;&lt;img src="https://avatars.githubusercontent.com/u/32378535?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Matsumoto Toshi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/carlwilson"&gt;&lt;img src="https://avatars.githubusercontent.com/u/440634?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Carl Wilson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/LNAhri"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9918222?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;LNAhri&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/vishal-at"&gt;&lt;img src="https://avatars.githubusercontent.com/u/142796877?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;vishal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/deining"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18169566?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andreas Deininger&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/solintllc-robert"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5825735?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Robert Raines&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/frob"&gt;&lt;img src="https://avatars.githubusercontent.com/u/316176?v=4" width="100px" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Frank Anderson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END - Do not remove or modify this section --&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;Please note that this project is released with a Contributor &lt;a href="https://raw.githubusercontent.com/pdfcpu/pdfcpu/master/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;. By participating in this project you agree to abide by its terms.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;Usage of pdfcpu assumes you know about and respect all copyrights of any PDF content you may be processing. This applies to the PDF files as such, their content and in particular all embedded resources like font files or images. Credit goes to &lt;a href="https://instagram.com/reneefrench"&gt;Renee French&lt;/a&gt; for creating our beloved Gopher.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Apache-2.0&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Done-0/fuck-u-code</title>
      <link>https://github.com/Done-0/fuck-u-code</link>
      <description>&lt;p&gt;Legacy-Mess Detector ‚Äì assess the ‚Äúlegacy-mess level‚Äù of your code and output a beautiful report | Â±éÂ±±‰ª£Á†ÅÊ£ÄÊµãÂô®ÔºåËØÑ‰º∞‰ª£Á†ÅÁöÑ‚ÄúÂ±éÂ±±Á≠âÁ∫ß‚ÄùÂπ∂ËæìÂá∫ÁæéËßÇÁöÑÊä•Âëä&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fuck-u-code &lt;a href="https://raw.githubusercontent.com/Done-0/fuck-u-code/main/README.md"&gt;&lt;img src="https://img.shields.io/badge/%E6%96%87%E6%A1%A3-%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-blue?style=flat-square" alt="‰∏≠Êñá" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/Done-0/fuck-u-code/main/README_EN.md"&gt;&lt;img src="https://img.shields.io/badge/Docs-English-red?style=flat-square" alt="English" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/Done-0/fuck-u-code/main/README_RU.md"&gt;&lt;img src="https://img.shields.io/badge/Docs-%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9-blue?style=flat-square" alt="–†—É—Å—Å–∫–∏–π" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Important] üì¢ ËÆ∞‰ΩèËøô‰∏™ÂëΩ‰ª§Ôºöfuck-u-code - ËÆ©‰ª£Á†Å‰∏çÂÜçÁÉÇÂà∞ÂèëÊåáÔºÅ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;‰∏ÄÊ¨æ‰∏ìÈó®Êè≠Èú≤Â±éÂ±±‰ª£Á†ÅÁöÑË¥®ÈáèÂàÜÊûêÂ∑•ÂÖ∑ÔºåÁî®ÁäÄÂà©ÂèàÊêûÁ¨ëÁöÑÊñπÂºèÂëäËØâ‰Ω†Ôºö&lt;strong&gt;‰Ω†ÁöÑ‰ª£Á†ÅÂà∞Â∫ïÊúâÂ§öÁÉÇ&lt;/strong&gt;„ÄÇ&lt;/p&gt; 
&lt;h2&gt;ÁâπÊÄß&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Â§öËØ≠Ë®ÄÊîØÊåÅ&lt;/strong&gt;: Go„ÄÅJS/TS„ÄÅPython„ÄÅJava„ÄÅC/C++&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Â±éÂ±±ÊåáÊï∞&lt;/strong&gt;: 0~100 ÂàÜÔºåË∂äÈ´òË∂äÁÉÇ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‰∏ÉÁª¥Â∫¶Ê£ÄÊµã&lt;/strong&gt;: Â§çÊùÇÂ∫¶ / ÂáΩÊï∞ÈïøÂ∫¶ / Ê≥®ÈáäÁéá / ÈîôËØØÂ§ÑÁêÜ / ÂëΩÂêç / ÈáçÂ§çÂ∫¶ / ÁªìÊûÑ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂΩ©Ëâ≤ÁªàÁ´ØÊä•Âëä&lt;/strong&gt;: ÊâπËØÑ‰πüËÉΩÁ¨ëÁùÄÂê¨&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Markdown ËæìÂá∫&lt;/strong&gt;: Êñπ‰æø AI ÂàÜÊûê‰∏éÊñáÊ°£ÈõÜÊàê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÁÅµÊ¥ªÈÖçÁΩÆ&lt;/strong&gt;: ÊëòË¶Å / ËØ¶ÁªÜÊ®°ÂºèÔºåÂ§öËØ≠Ë®ÄÊä•Âëä&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Note]&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;ÂàÜÊï∞Ë∂äÈ´òË∂äÁÉÇÔºåÊ¨¢Ëøé‚ÄúÈ´òÂàÜÂ§ß‰Ω¨‚Äù‰∏äÊ¶ú&lt;/li&gt; 
  &lt;li&gt;ÂÖ®Á®ãÊú¨Âú∞ËøêË°åÔºå‰∏ç‰∏ä‰º†‰ª£Á†ÅÔºåÂÆâÂÖ®Êó†Âøß&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;ÂÆâË£Ö&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# ÊñπÊ≥ï‰∏ÄÔºöGo ÂÆâË£Ö
go install github.com/Done-0/fuck-u-code/cmd/fuck-u-code@latest

# ÊñπÊ≥ï‰∫åÔºöÊ∫êÁ†ÅÊûÑÂª∫
git clone https://github.com/Done-0/fuck-u-code.git
cd fuck-u-code &amp;amp;&amp;amp; go build -o fuck-u-code ./cmd/fuck-u-code

# ÊñπÊ≥ï‰∏âÔºöDocker ÊûÑÂª∫
docker build -t fuck-u-code .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;‰ΩøÁî®ÊñπÊ≥ï&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Âü∫Êú¨ÂàÜÊûê - Êú¨Âú∞È°πÁõÆ
fuck-u-code analyze /path/to/project
# Êàñ
fuck-u-code /path/to/project

# ÂàÜÊûê Git ‰ªìÂ∫ìÔºàËá™Âä®ÂÖãÈöÜÔºâ
fuck-u-code analyze https://github.com/user/repo.git
# Êàñ
fuck-u-code https://github.com/user/repo

# Docker ËøêË°å
docker run --rm -v "/path/to/project:/build" fuck-u-code analyze

# ÈªòËÆ§ÂàÜÊûêÂΩìÂâçÁõÆÂΩï
fuck-u-code analyze
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Tip] &lt;strong&gt;ÊîØÊåÅÁõ¥Êé•ÂàÜÊûê Git ‰ªìÂ∫ì&lt;/strong&gt;ÔºöÂ∑•ÂÖ∑‰ºöËá™Âä®ÂÖãÈöÜ‰ªìÂ∫ìÂà∞‰∏¥Êó∂ÁõÆÂΩï &lt;code&gt;tmp_proj&lt;/code&gt; Âπ∂Âú®ÂàÜÊûêÂêéËá™Âä®Ê∏ÖÁêÜ„ÄÇÊîØÊåÅ GitHub„ÄÅGitLab„ÄÅGitee„ÄÅBitbucket Á≠âÂπ≥Âè∞„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Â∏∏Áî®ÈÄâÈ°π&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;ÈÄâÈ°π&lt;/th&gt; 
   &lt;th&gt;ÁÆÄÂÜô&lt;/th&gt; 
   &lt;th&gt;ÊèèËø∞&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--verbose&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-v&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;ÊòæÁ§∫ËØ¶ÁªÜÊä•Âëä&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--top N&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-t&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;ÊúÄÁÉÇÁöÑÂâç N ‰∏™Êñá‰ª∂&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--issues N&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;ÊØèÊñá‰ª∂ÊòæÁ§∫ N ‰∏™ÈóÆÈ¢ò&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--summary&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Âè™ÁúãÊÄªÁªìÔºå‰∏çÁúãËøáÁ®ã&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--markdown&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-m&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;ËæìÂá∫ Markdown Ê†ºÂºèÊä•Âëä&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--lang&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-l&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Êä•ÂëäËØ≠Ë®Ä (zh-CN/en-US/ru-RU)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--exclude&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-e&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;ÊéíÈô§ÊåáÂÆöÁõÆÂΩïÊàñÊñá‰ª∂&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--skipindex&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-x&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Ë∑≥Ëøá index.js/ts Êñá‰ª∂&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Á§∫‰æã&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fuck-u-code analyze --verbose
fuck-u-code analyze --top 3
fuck-u-code analyze --lang en-US
fuck-u-code analyze --summary
fuck-u-code analyze --exclude "**/test/**"
fuck-u-code analyze --markdown &amp;gt; report.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;È´òÁ∫ßÁî®Ê≥ï&lt;/h2&gt; 
&lt;h3&gt;Markdown ËæìÂá∫&lt;/h3&gt; 
&lt;p&gt;ÈÄÇÂêà &lt;strong&gt;AI ÂàÜÊûê„ÄÅÊñáÊ°£ÈõÜÊàê„ÄÅCI/CD„ÄÅÂõ¢ÈòüÂçè‰Ωú&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fuck-u-code analyze --markdown
fuck-u-code analyze --markdown &amp;gt; report.md
fuck-u-code analyze --markdown --top 10 --lang en-US &amp;gt; report.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Markdown Êä•ÂëäÂåÖÂê´ÔºöÊÄª‰ΩìËØÑÂàÜ / ÊåáÊ†áË°®Ê†º / ÈóÆÈ¢òÊñá‰ª∂ / ÊîπËøõÂª∫ËÆÆ&lt;/p&gt; 
&lt;h3&gt;ÈªòËÆ§ÊéíÈô§Ë∑ØÂæÑ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÂâçÁ´Ø: &lt;code&gt;node_modules&lt;/code&gt;„ÄÅ&lt;code&gt;dist&lt;/code&gt;„ÄÅ&lt;code&gt;build&lt;/code&gt;„ÄÅ&lt;code&gt;*.min.js&lt;/code&gt; Á≠â&lt;/li&gt; 
 &lt;li&gt;ÂêéÁ´Ø: &lt;code&gt;vendor&lt;/code&gt;„ÄÅ&lt;code&gt;bin&lt;/code&gt;„ÄÅ&lt;code&gt;target&lt;/code&gt;„ÄÅ&lt;code&gt;logs&lt;/code&gt;„ÄÅ&lt;code&gt;migrations&lt;/code&gt; Á≠â&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ÁñëÈöæËß£Á≠î&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;command not found&lt;/code&gt; ‚Üí Êää Go bin Ë∑ØÂæÑÂä†Âà∞ &lt;code&gt;PATH&lt;/code&gt;Ôºö&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;export PATH="$PATH:$(go env GOPATH)/bin"
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Âπ∂ÂÜôÂÖ• &lt;code&gt;.bash_profile&lt;/code&gt; / &lt;code&gt;.zshrc&lt;/code&gt; Á≠â&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ËÆ∏ÂèØËØÅ&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt; 
&lt;h2&gt;Ë¥°ÁåÆ&lt;/h2&gt; 
&lt;p&gt;Ê¨¢ËøéÊèê PRÔºå‰∏ÄËµ∑‰ºòÂåñ‚Äúfuck-u-code‚Äù üöÄ&lt;/p&gt; 
&lt;h2&gt;ÂÆâÂà©‰∏Ä‰∏ã&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://bazi.site"&gt;ÁéÑÂ≠¶Â∑•Âùä&lt;/a&gt; ‚Äî AI ËµõÂçöÁÆóÂëΩÁΩëÁ´ô&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Done-0/Jank"&gt;Jank&lt;/a&gt; ‚Äî Go ËØ≠Ë®ÄÂºÄÊ∫êÂçöÂÆ¢&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>gohugoio/hugo</title>
      <link>https://github.com/gohugoio/hugo</link>
      <description>&lt;p&gt;The world‚Äôs fastest framework for building websites.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://gohugo.io/"&gt;&lt;img src="https://raw.githubusercontent.com/gohugoio/gohugoioTheme/master/static/images/hugo-logo-wide.svg?sanitize=true" alt="Hugo" width="565" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A fast and flexible static site generator built with love by &lt;a href="https://github.com/bep"&gt;bep&lt;/a&gt;, &lt;a href="https://github.com/spf13"&gt;spf13&lt;/a&gt;, and &lt;a href="https://github.com/gohugoio/hugo/graphs/contributors"&gt;friends&lt;/a&gt; in &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://godoc.org/github.com/gohugoio/hugo"&gt;&lt;img src="https://godoc.org/github.com/gohugoio/hugo?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gohugoio/hugo/actions?query=workflow%3ATest"&gt;&lt;img src="https://github.com/gohugoio/hugo/workflows/Test/badge.svg?sanitize=true" alt="Tests on Linux, MacOS and Windows" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/gohugoio/hugo"&gt;&lt;img src="https://goreportcard.com/badge/github.com/gohugoio/hugo" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://gohugo.io"&gt;Website&lt;/a&gt; | &lt;a href="https://gohugo.io/installation"&gt;Installation&lt;/a&gt; | &lt;a href="https://gohugo.io/documentation"&gt;Documentation&lt;/a&gt; | &lt;a href="https://discourse.gohugo.io"&gt;Support&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/gohugoio/hugo/master/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; | &lt;a rel="me" href="https://fosstodon.org/@gohugoio"&gt;Mastodon&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Hugo is a &lt;a href="https://en.wikipedia.org/wiki/Static_site_generator"&gt;static site generator&lt;/a&gt; written in &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt;, optimized for speed and designed for flexibility. With its advanced templating system and fast asset pipelines, Hugo renders a complete site in seconds, often less.&lt;/p&gt; 
&lt;p&gt;Due to its flexible framework, multilingual support, and powerful taxonomy system, Hugo is widely used to create:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Corporate, government, nonprofit, education, news, event, and project sites&lt;/li&gt; 
 &lt;li&gt;Documentation sites&lt;/li&gt; 
 &lt;li&gt;Image portfolios&lt;/li&gt; 
 &lt;li&gt;Landing pages&lt;/li&gt; 
 &lt;li&gt;Business, professional, and personal blogs&lt;/li&gt; 
 &lt;li&gt;Resumes and CVs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Use Hugo's embedded web server during development to instantly see changes to content, structure, behavior, and presentation. Then deploy the site to your host, or push changes to your Git provider for automated builds and deployment.&lt;/p&gt; 
&lt;p&gt;Hugo's fast asset pipelines include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Image processing ‚Äì Convert, resize, crop, rotate, adjust colors, apply filters, overlay text and images, and extract EXIF data&lt;/li&gt; 
 &lt;li&gt;JavaScript bundling ‚Äì Transpile TypeScript and JSX to JavaScript, bundle, tree shake, minify, create source maps, and perform SRI hashing.&lt;/li&gt; 
 &lt;li&gt;Sass processing ‚Äì Transpile Sass to CSS, bundle, tree shake, minify, create source maps, perform SRI hashing, and integrate with PostCSS&lt;/li&gt; 
 &lt;li&gt;Tailwind CSS processing ‚Äì Compile Tailwind CSS utility classes into standard CSS, bundle, tree shake, optimize, minify, perform SRI hashing, and integrate with PostCSS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And with &lt;a href="https://gohugo.io/hugo-modules/"&gt;Hugo Modules&lt;/a&gt;, you can share content, assets, data, translations, themes, templates, and configuration with other projects via public or private Git repositories.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://gohugo.io/about/features/"&gt;features&lt;/a&gt; section of the documentation for a comprehensive summary of Hugo's capabilities.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p float="left"&gt; &lt;a href="https://www.linode.com/?utm_campaign=hugosponsor&amp;amp;utm_medium=banner&amp;amp;utm_source=hugogithub" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/gohugoio/hugoDocs/master/assets/images/sponsors/linode-logo_standard_light_medium.png" width="200" alt="Linode" /&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://www.jetbrains.com/go/?utm_source=OSS&amp;amp;utm_medium=referral&amp;amp;utm_campaign=hugo" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/gohugoio/hugoDocs/master/assets/images/sponsors/goland.svg?sanitize=true" width="200" alt="The complete IDE crafted for professional Go developers." /&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://cloudcannon.com/hugo-cms/?utm_campaign=HugoSponsorship&amp;amp;utm_source=sponsor&amp;amp;utm_content=gohugo" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/gohugoio/hugoDocs/master/assets/images/sponsors/cloudcannon-cms-logo.svg?sanitize=true" width="200" alt="CloudCannon" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Editions&lt;/h2&gt; 
&lt;p&gt;Hugo is available in three editions: standard, extended, and extended/deploy. While the standard edition provides core functionality, the extended and extended/deploy editions offer advanced features.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Feature&lt;/th&gt; 
   &lt;th align="center"&gt;extended edition&lt;/th&gt; 
   &lt;th align="center"&gt;extended/deploy edition&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Encode to the WebP format when &lt;a href="https://gohugo.io/content-management/image-processing/"&gt;processing images&lt;/a&gt;. You can decode WebP images with any edition.&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://gohugo.io/functions/css/sass/"&gt;Transpile Sass to CSS&lt;/a&gt; using the embedded LibSass transpiler. You can use the &lt;a href="https://gohugo.io/functions/css/sass/#dart-sass"&gt;Dart Sass&lt;/a&gt; transpiler with any edition.&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Deploy your site directly to a Google Cloud Storage bucket, an AWS S3 bucket, or an Azure Storage container. See&amp;nbsp;&lt;a href="https://gohugo.io/hosting-and-deployment/hugo-deploy/"&gt;details&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Unless your specific deployment needs require the extended/deploy edition, we recommend the extended edition.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Install Hugo from a &lt;a href="https://github.com/gohugoio/hugo/releases/latest"&gt;prebuilt binary&lt;/a&gt;, package manager, or package repository. Please see the installation instructions for your operating system:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/installation/macos"&gt;macOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/installation/linux"&gt;Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/installation/windows"&gt;Windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/installation/bsd"&gt;DragonFly BSD, FreeBSD, NetBSD, and OpenBSD&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build from source&lt;/h2&gt; 
&lt;p&gt;Prerequisites to build Hugo from source:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Standard edition: Go 1.24.0 or later&lt;/li&gt; 
 &lt;li&gt;Extended edition: Go 1.24.0 or later, and GCC&lt;/li&gt; 
 &lt;li&gt;Extended/deploy edition: Go 1.24.0 or later, and GCC&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Build the standard edition:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;go install github.com/gohugoio/hugo@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build the extended edition:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;CGO_ENABLED=1 go install -tags extended github.com/gohugoio/hugo@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build the extended/deploy edition:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;CGO_ENABLED=1 go install -tags extended,withdeploy github.com/gohugoio/hugo@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#gohugoio/hugo&amp;amp;Timeline"&gt;&lt;img src="https://api.star-history.com/svg?repos=gohugoio/hugo&amp;amp;type=Timeline" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Hugo's &lt;a href="https://gohugo.io/documentation"&gt;documentation&lt;/a&gt; includes installation instructions, a quick start guide, conceptual explanations, reference information, and examples.&lt;/p&gt; 
&lt;p&gt;Please submit documentation issues and pull requests to the &lt;a href="https://github.com/gohugoio/hugoDocs"&gt;documentation repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Please &lt;strong&gt;do not use the issue queue&lt;/strong&gt; for questions or troubleshooting. Unless you are certain that your issue is a software defect, use the &lt;a href="https://discourse.gohugo.io"&gt;forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Hugo‚Äôs &lt;a href="https://discourse.gohugo.io"&gt;forum&lt;/a&gt; is an active community of users and developers who answer questions, share knowledge, and provide examples. A quick search of over 20,000 topics will often answer your question. Please be sure to read about &lt;a href="https://discourse.gohugo.io/t/requesting-help/9132"&gt;requesting help&lt;/a&gt; before asking your first question.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;You can contribute to the Hugo project by:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Answering questions on the &lt;a href="https://discourse.gohugo.io"&gt;forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Improving the &lt;a href="https://gohugo.io/documentation"&gt;documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Monitoring the &lt;a href="https://github.com/gohugoio/hugo/issues"&gt;issue queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Creating or improving &lt;a href="https://themes.gohugo.io/"&gt;themes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Squashing &lt;a href="https://github.com/gohugoio/hugo/issues?q=is%3Aopen+is%3Aissue+label%3ABug"&gt;bugs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please submit documentation issues and pull requests to the &lt;a href="https://github.com/gohugoio/hugoDocs"&gt;documentation repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you have an idea for an enhancement or new feature, create a new topic on the &lt;a href="https://discourse.gohugo.io"&gt;forum&lt;/a&gt; in the "Feature" category. This will help you to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Determine if the capability already exists&lt;/li&gt; 
 &lt;li&gt;Measure interest&lt;/li&gt; 
 &lt;li&gt;Refine the concept&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If there is sufficient interest, &lt;a href="https://github.com/gohugoio/hugo/issues/new?labels=Proposal%2C+NeedsTriage&amp;amp;template=feature_request.md"&gt;create a proposal&lt;/a&gt;. Do not submit a pull request until the project lead accepts the proposal.&lt;/p&gt; 
&lt;p&gt;For a complete guide to contributing to Hugo, see the &lt;a href="https://raw.githubusercontent.com/gohugoio/hugo/master/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Dependencies&lt;/h2&gt; 
&lt;p&gt;Hugo stands on the shoulders of great open source libraries. Run &lt;code&gt;hugo env --logLevel info&lt;/code&gt; to display a list of dependencies.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;See current dependencies&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-text"&gt;github.com/BurntSushi/locker="v0.0.0-20171006230638-a6e239ea1c69"
github.com/PuerkitoBio/goquery="v1.10.1"
github.com/alecthomas/chroma/v2="v2.15.0"
github.com/andybalholm/cascadia="v1.3.3"
github.com/armon/go-radix="v1.0.1-0.20221118154546-54df44f2176c"
github.com/bep/clocks="v0.5.0"
github.com/bep/debounce="v1.2.0"
github.com/bep/gitmap="v1.6.0"
github.com/bep/goat="v0.5.0"
github.com/bep/godartsass/v2="v2.3.2"
github.com/bep/golibsass="v1.2.0"
github.com/bep/gowebp="v0.3.0"
github.com/bep/imagemeta="v0.8.4"
github.com/bep/lazycache="v0.7.0"
github.com/bep/logg="v0.4.0"
github.com/bep/mclib="v1.20400.20402"
github.com/bep/overlayfs="v0.9.2"
github.com/bep/simplecobra="v0.5.0"
github.com/bep/tmc="v0.5.1"
github.com/cespare/xxhash/v2="v2.3.0"
github.com/clbanning/mxj/v2="v2.7.0"
github.com/cpuguy83/go-md2man/v2="v2.0.4"
github.com/disintegration/gift="v1.2.1"
github.com/dlclark/regexp2="v1.11.5"
github.com/dop251/goja="v0.0.0-20250125213203-5ef83b82af17"
github.com/evanw/esbuild="v0.24.2"
github.com/fatih/color="v1.18.0"
github.com/frankban/quicktest="v1.14.6"
github.com/fsnotify/fsnotify="v1.8.0"
github.com/getkin/kin-openapi="v0.129.0"
github.com/ghodss/yaml="v1.0.0"
github.com/go-openapi/jsonpointer="v0.21.0"
github.com/go-openapi/swag="v0.23.0"
github.com/go-sourcemap/sourcemap="v2.1.4+incompatible"
github.com/gobuffalo/flect="v1.0.3"
github.com/gobwas/glob="v0.2.3"
github.com/gohugoio/go-i18n/v2="v2.1.3-0.20230805085216-e63c13218d0e"
github.com/gohugoio/hashstructure="v0.5.0"
github.com/gohugoio/httpcache="v0.7.0"
github.com/gohugoio/hugo-goldmark-extensions/extras="v0.2.0"
github.com/gohugoio/hugo-goldmark-extensions/passthrough="v0.3.0"
github.com/gohugoio/locales="v0.14.0"
github.com/gohugoio/localescompressed="v1.0.1"
github.com/golang/freetype="v0.0.0-20170609003504-e2365dfdc4a0"
github.com/google/go-cmp="v0.6.0"
github.com/google/pprof="v0.0.0-20250208200701-d0013a598941"
github.com/gorilla/websocket="v1.5.3"
github.com/hairyhenderson/go-codeowners="v0.7.0"
github.com/hashicorp/golang-lru/v2="v2.0.7"
github.com/jdkato/prose="v1.2.1"
github.com/josharian/intern="v1.0.0"
github.com/kr/pretty="v0.3.1"
github.com/kr/text="v0.2.0"
github.com/kyokomi/emoji/v2="v2.2.13"
github.com/lucasb-eyer/go-colorful="v1.2.0"
github.com/mailru/easyjson="v0.7.7"
github.com/makeworld-the-better-one/dither/v2="v2.4.0"
github.com/marekm4/color-extractor="v1.2.1"
github.com/mattn/go-colorable="v0.1.13"
github.com/mattn/go-isatty="v0.0.20"
github.com/mattn/go-runewidth="v0.0.9"
github.com/mazznoer/csscolorparser="v0.1.5"
github.com/mitchellh/mapstructure="v1.5.1-0.20231216201459-8508981c8b6c"
github.com/mohae/deepcopy="v0.0.0-20170929034955-c48cc78d4826"
github.com/muesli/smartcrop="v0.3.0"
github.com/niklasfasching/go-org="v1.7.0"
github.com/oasdiff/yaml3="v0.0.0-20241210130736-a94c01f36349"
github.com/oasdiff/yaml="v0.0.0-20241210131133-6b86fb107d80"
github.com/olekukonko/tablewriter="v0.0.5"
github.com/pbnjay/memory="v0.0.0-20210728143218-7b4eea64cf58"
github.com/pelletier/go-toml/v2="v2.2.3"
github.com/perimeterx/marshmallow="v1.1.5"
github.com/pkg/browser="v0.0.0-20240102092130-5ac0b6a4141c"
github.com/pkg/errors="v0.9.1"
github.com/rivo/uniseg="v0.4.7"
github.com/rogpeppe/go-internal="v1.13.1"
github.com/russross/blackfriday/v2="v2.1.0"
github.com/sass/libsass="3.6.6"
github.com/spf13/afero="v1.11.0"
github.com/spf13/cast="v1.7.1"
github.com/spf13/cobra="v1.8.1"
github.com/spf13/fsync="v0.10.1"
github.com/spf13/pflag="v1.0.6"
github.com/tdewolff/minify/v2="v2.20.37"
github.com/tdewolff/parse/v2="v2.7.15"
github.com/tetratelabs/wazero="v1.8.2"
github.com/webmproject/libwebp="v1.3.2"
github.com/yuin/goldmark-emoji="v1.0.4"
github.com/yuin/goldmark="v1.7.8"
go.uber.org/automaxprocs="v1.5.3"
golang.org/x/crypto="v0.33.0"
golang.org/x/exp="v0.0.0-20250210185358-939b2ce775ac"
golang.org/x/image="v0.24.0"
golang.org/x/mod="v0.23.0"
golang.org/x/net="v0.35.0"
golang.org/x/sync="v0.11.0"
golang.org/x/sys="v0.30.0"
golang.org/x/text="v0.22.0"
golang.org/x/tools="v0.30.0"
golang.org/x/xerrors="v0.0.0-20240903120638-7835f813f4da"
gonum.org/v1/plot="v0.15.0"
google.golang.org/protobuf="v1.36.5"
gopkg.in/yaml.v2="v2.4.0"
gopkg.in/yaml.v3="v3.0.1"
oss.terrastruct.com/d2="v0.6.9"
oss.terrastruct.com/util-go="v0.0.0-20241005222610-44c011a04896"
rsc.io/qr="v0.2.0"
software.sslmate.com/src/go-pkcs12="v0.2.0"
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>istio/istio</title>
      <link>https://github.com/istio/istio</link>
      <description>&lt;p&gt;Connect, secure, control, and observe services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Istio&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://bestpractices.coreinfrastructure.org/projects/1395"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/1395/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/istio/istio"&gt;&lt;img src="https://goreportcard.com/badge/github.com/istio/istio" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/istio.io/istio"&gt;&lt;img src="https://godoc.org/istio.io/istio?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;a href="https://istio.io/"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/cncf/artwork/refs/heads/main/projects/istio/icon/color/istio-icon-color.svg" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/istio/istio/raw/master/logo/istio-bluelogo-whitebackground-unframed.svg" /&gt; 
  &lt;img title="Istio" height="100" width="100" alt="Istio logo" src="https://github.com/istio/istio/raw/master/logo/istio-bluelogo-whitebackground-unframed.svg?sanitize=true" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;hr /&gt; 
&lt;p&gt;Istio is an open source service mesh that layers transparently onto existing distributed applications. Istio‚Äôs powerful features provide a uniform and more efficient way to secure, connect, and monitor services. Istio is the path to load balancing, service-to-service authentication, and monitoring ‚Äì with few or no service code changes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For in-depth information about how to use Istio, visit &lt;a href="https://istio.io"&gt;istio.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;To ask questions and get assistance from our community, visit &lt;a href="https://github.com/istio/istio/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;To learn how to participate in our overall community, visit &lt;a href="https://istio.io/about/community"&gt;our community page&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In this README:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/#repositories"&gt;Repositories&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/#issue-management"&gt;Issue management&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In addition, here are some other documents you may wish to read:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/istio/community#istio-community"&gt;Istio Community&lt;/a&gt; - describes how to get involved and contribute to the Istio project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/istio/istio/wiki/Preparing-for-Development"&gt;Istio Developer's Guide&lt;/a&gt; - explains how to set up and use an Istio development environment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/istio/istio/wiki/Development-Conventions"&gt;Project Conventions&lt;/a&gt; - describes the conventions we use within the code base&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/istio/istio/wiki/Writing-Fast-and-Lean-Code"&gt;Creating Fast and Lean Code&lt;/a&gt; - performance-oriented advice and guidelines for the code base&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You'll find many other useful documents on our &lt;a href="https://github.com/istio/istio/wiki"&gt;Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://istio.io/latest/docs/concepts/what-is-istio/"&gt;Istio&lt;/a&gt; is an open platform for providing a uniform way to &lt;a href="https://istio.io/latest/docs/examples/microservices-istio/"&gt;integrate microservices&lt;/a&gt;, manage &lt;a href="https://istio.io/latest/docs/concepts/traffic-management/"&gt;traffic flow&lt;/a&gt; across microservices, enforce policies and aggregate telemetry data. Istio's control plane provides an abstraction layer over the underlying cluster management platform, such as Kubernetes.&lt;/p&gt; 
&lt;p&gt;Istio is composed of these components:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Envoy&lt;/strong&gt; - Sidecar proxies per microservice to handle ingress/egress traffic between services in the cluster and from a service to external services. The proxies form a &lt;em&gt;secure microservice mesh&lt;/em&gt; providing a rich set of functions like discovery, rich layer-7 routing, circuit breakers, policy enforcement and telemetry recording/reporting functions.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Note: The service mesh is not an overlay network. It simplifies and enhances how microservices in an application talk to each other over the network provided by the underlying platform.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Ztunnel&lt;/strong&gt; - A lightweight data plane proxy written in Rust, used in Ambient mesh mode to provide secure connectivity and observability for workloads without sidecar proxies.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Istiod&lt;/strong&gt; - The Istio control plane. It provides service discovery, configuration and certificate management.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Repositories&lt;/h2&gt; 
&lt;p&gt;The Istio project is divided across a few GitHub repositories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/istio/api"&gt;istio/api&lt;/a&gt;. This repository defines component-level APIs and common configuration formats for the Istio platform.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/istio/community"&gt;istio/community&lt;/a&gt;. This repository contains information on the Istio community, including the various documents that govern the Istio open source project.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/README.md"&gt;istio/istio&lt;/a&gt;. This is the main code repository. It hosts Istio's core components, install artifacts, and sample programs. It includes:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/istioctl/"&gt;istioctl&lt;/a&gt;. This directory contains code for the &lt;a href="https://istio.io/latest/docs/reference/commands/istioctl/"&gt;&lt;em&gt;istioctl&lt;/em&gt;&lt;/a&gt; command line utility.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/pilot/"&gt;pilot&lt;/a&gt;. This directory contains platform-specific code to populate the &lt;a href="https://istio.io/docs/concepts/traffic-management/#pilot"&gt;abstract service model&lt;/a&gt;, dynamically reconfigure the proxies when the application topology changes, as well as translate &lt;a href="https://istio.io/latest/docs/reference/config/networking/"&gt;routing rules&lt;/a&gt; into proxy specific configuration.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/security/"&gt;security&lt;/a&gt;. This directory contains &lt;a href="https://istio.io/latest/docs/concepts/security/"&gt;security&lt;/a&gt; related code.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/istio/proxy"&gt;istio/proxy&lt;/a&gt;. The Istio proxy contains extensions to the &lt;a href="https://github.com/envoyproxy/envoy"&gt;Envoy proxy&lt;/a&gt; (in the form of Envoy filters) that support authentication, authorization, and telemetry collection.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/istio/ztunnel"&gt;istio/ztunnel&lt;/a&gt;. The repository contains the Rust implementation of the ztunnel component of Ambient mesh.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/istio/client-go"&gt;istio/client-go&lt;/a&gt;. This repository defines auto-generated Kubernetes clients for interacting with Istio resources programmatically.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Only the &lt;code&gt;istio/api&lt;/code&gt; and &lt;code&gt;istio/client-go&lt;/code&gt; repositories expose stable interfaces intended for direct usage as libraries.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Issue management&lt;/h2&gt; 
&lt;p&gt;We use GitHub to track all of our bugs and feature requests. Each issue we track has a variety of metadata:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Epic&lt;/strong&gt;. An epic represents a feature area for Istio as a whole. Epics are fairly broad in scope and are basically product-level things. Each issue is ultimately part of an epic.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Milestone&lt;/strong&gt;. Each issue is assigned a milestone. This is 0.1, 0.2, ..., or 'Nebulous Future'. The milestone indicates when we think the issue should get addressed.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Priority&lt;/strong&gt;. Each issue has a priority which is represented by the column in the &lt;a href="https://github.com/orgs/istio/projects/6"&gt;Prioritization&lt;/a&gt; project. Priority can be one of P0, P1, P2, or &amp;gt;P2. The priority indicates how important it is to address the issue within the milestone. P0 says that the milestone cannot be considered achieved if the issue isn't resolved.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/cncf/artwork/refs/heads/main/other/cncf/horizontal/color-whitetext/cncf-color-whitetext.svg" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/cncf/artwork/master/other/cncf/horizontal/color/cncf-color.svg" /&gt; 
  &lt;img width="300" alt="Cloud Native Computing Foundation logo" src="https://raw.githubusercontent.com/cncf/artwork/refs/heads/main/other/cncf/horizontal/color-whitetext/cncf-color-whitetext.svg?sanitize=true" /&gt; 
 &lt;/picture&gt; 
 &lt;p&gt;Istio is a &lt;a href="https://cncf.io"&gt;Cloud Native Computing Foundation&lt;/a&gt; project.&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>hashicorp/consul</title>
      <link>https://github.com/hashicorp/consul</link>
      <description>&lt;p&gt;Consul is a distributed, highly available, and data center aware solution to connect and configure applications across dynamic, distributed infrastructure.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt; &lt;img src="https://raw.githubusercontent.com/hashicorp/consul/main/website/public/img/logo.svg?sanitize=true" align="left" height="46px" alt="Consul logo" /&gt; &lt;span&gt;Consul&lt;/span&gt; &lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/hashicorp/consul/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-BUSL--1.1-yellow.svg?sanitize=true" alt="License: BUSL-1.1" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/hashicorp/consul"&gt;&lt;img src="https://img.shields.io/docker/pulls/hashicorp/consul.svg?sanitize=true" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/hashicorp/consul"&gt;&lt;img src="https://goreportcard.com/badge/github.com/hashicorp/consul" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Consul is a distributed, highly available, and data center aware solution to connect and configure applications across dynamic, distributed infrastructure.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation and Tutorials: [https://developer.hashicorp.com/consul]&lt;/li&gt; 
 &lt;li&gt;Forum: &lt;a href="https://discuss.hashicorp.com/c/consul"&gt;Discuss&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Consul provides several key features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multi-Datacenter&lt;/strong&gt; - Consul is built to be datacenter aware, and can support any number of regions without complex configuration.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Service Mesh&lt;/strong&gt; - Consul Service Mesh enables secure service-to-service communication with automatic TLS encryption and identity-based authorization. Applications can use sidecar proxies in a service mesh configuration to establish TLS connections for inbound and outbound connections with Transparent Proxy.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;API Gateway&lt;/strong&gt; - Consul API Gateway manages access to services within Consul Service Mesh, allow users to define traffic and authorization policies to services deployed within the mesh.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Service Discovery&lt;/strong&gt; - Consul makes it simple for services to register themselves and to discover other services via a DNS or HTTP interface. External services such as SaaS providers can be registered as well.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Health Checking&lt;/strong&gt; - Health Checking enables Consul to quickly alert operators about any issues in a cluster. The integration with service discovery prevents routing traffic to unhealthy hosts and enables service level circuit breakers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dynamic App Configuration&lt;/strong&gt; - An HTTP API that allows users to store indexed objects within Consul, for storing configuration parameters and application metadata.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Consul runs on Linux, macOS, FreeBSD, Solaris, and Windows and includes an optional &lt;a href="https://demo.consul.io"&gt;browser based UI&lt;/a&gt;. A commercial version called &lt;a href="https://developer.hashicorp.com/consul/docs/enterprise"&gt;Consul Enterprise&lt;/a&gt; is also available.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt;: We take Consul's security and our users' trust very seriously. If you believe you have found a security issue in Consul, please &lt;a href="https://www.hashicorp.com/security#vulnerability-reporting"&gt;responsibly disclose&lt;/a&gt; by contacting us at &lt;a href="mailto:security@hashicorp.com"&gt;security@hashicorp.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;A few quick start guides are available on the Consul website:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Standalone binary install:&lt;/strong&gt; &lt;a href="https://learn.hashicorp.com/collections/consul/get-started-vms"&gt;https://learn.hashicorp.com/collections/consul/get-started-vms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Minikube install:&lt;/strong&gt; &lt;a href="https://learn.hashicorp.com/tutorials/consul/kubernetes-minikube"&gt;https://learn.hashicorp.com/tutorials/consul/kubernetes-minikube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kind install:&lt;/strong&gt; &lt;a href="https://learn.hashicorp.com/tutorials/consul/kubernetes-kind"&gt;https://learn.hashicorp.com/tutorials/consul/kubernetes-kind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kubernetes install:&lt;/strong&gt; &lt;a href="https://learn.hashicorp.com/tutorials/consul/kubernetes-deployment-guide"&gt;https://learn.hashicorp.com/tutorials/consul/kubernetes-deployment-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Deploy HCP Consul:&lt;/strong&gt; &lt;a href="https://learn.hashicorp.com/tutorials/consul/hcp-gs-deploy"&gt;https://learn.hashicorp.com/tutorials/consul/hcp-gs-deploy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Full, comprehensive documentation is available on the Consul website: &lt;a href="https://developer.hashicorp.com/consul/docs"&gt;https://developer.hashicorp.com/consul/docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Thank you for your interest in contributing! Please refer to &lt;a href="https://github.com/hashicorp/consul/raw/main/.github/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for guidance. For contributions specifically to the browser based UI, please refer to the UI's &lt;a href="https://github.com/hashicorp/consul/raw/main/ui/packages/consul-ui/README.md"&gt;README.md&lt;/a&gt; for guidance.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ethereum/go-ethereum</title>
      <link>https://github.com/ethereum/go-ethereum</link>
      <description>&lt;p&gt;Go implementation of the Ethereum protocol&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Go Ethereum&lt;/h2&gt; 
&lt;p&gt;Golang execution layer implementation of the Ethereum protocol.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/ethereum/go-ethereum?tab=doc"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/ethereum/go-ethereum" alt="API Reference" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/ethereum/go-ethereum"&gt;&lt;img src="https://goreportcard.com/badge/github.com/ethereum/go-ethereum" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://app.travis-ci.com/github/ethereum/go-ethereum"&gt;&lt;img src="https://app.travis-ci.com/ethereum/go-ethereum.svg?branch=master" alt="Travis" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/nthXNEv"&gt;&lt;img src="https://img.shields.io/badge/discord-join%20chat-blue.svg?sanitize=true" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://x.com/go_ethereum"&gt;&lt;img src="https://img.shields.io/twitter/follow/go_ethereum" alt="Twitter" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Automated builds are available for stable releases and the unstable master branch. Binary archives are published at &lt;a href="https://geth.ethereum.org/downloads/"&gt;https://geth.ethereum.org/downloads/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building the source&lt;/h2&gt; 
&lt;p&gt;For prerequisites and detailed build instructions please read the &lt;a href="https://geth.ethereum.org/docs/getting-started/installing-geth"&gt;Installation Instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Building &lt;code&gt;geth&lt;/code&gt; requires both a Go (version 1.23 or later) and a C compiler. You can install them using your favourite package manager. Once the dependencies are installed, run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make geth
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or, to build the full suite of utilities:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Executables&lt;/h2&gt; 
&lt;p&gt;The go-ethereum project comes with several wrappers/executables found in the &lt;code&gt;cmd&lt;/code&gt; directory.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;&lt;code&gt;geth&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Our main Ethereum CLI client. It is the entry point into the Ethereum network (main-, test- or private net), capable of running as a full node (default), archive node (retaining all historical state) or a light node (retrieving data live). It can be used by other processes as a gateway into the Ethereum network via JSON RPC endpoints exposed on top of HTTP, WebSocket and/or IPC transports. &lt;code&gt;geth --help&lt;/code&gt; and the &lt;a href="https://geth.ethereum.org/docs/fundamentals/command-line-options"&gt;CLI page&lt;/a&gt; for command line options.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;code&gt;clef&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Stand-alone signing tool, which can be used as a backend signer for &lt;code&gt;geth&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;code&gt;devp2p&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Utilities to interact with nodes on the networking layer, without running a full blockchain.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;code&gt;abigen&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Source code generator to convert Ethereum contract definitions into easy-to-use, compile-time type-safe Go packages. It operates on plain &lt;a href="https://docs.soliditylang.org/en/develop/abi-spec.html"&gt;Ethereum contract ABIs&lt;/a&gt; with expanded functionality if the contract bytecode is also available. However, it also accepts Solidity source files, making development much more streamlined. Please see our &lt;a href="https://geth.ethereum.org/docs/developers/dapp-developer/native-bindings"&gt;Native DApps&lt;/a&gt; page for details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;code&gt;evm&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Developer utility version of the EVM (Ethereum Virtual Machine) that is capable of running bytecode snippets within a configurable environment and execution mode. Its purpose is to allow isolated, fine-grained debugging of EVM opcodes (e.g. &lt;code&gt;evm --code 60ff60ff --debug run&lt;/code&gt;).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;code&gt;rlpdump&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Developer utility tool to convert binary RLP (&lt;a href="https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp"&gt;Recursive Length Prefix&lt;/a&gt;) dumps (data encoding used by the Ethereum protocol both network as well as consensus wise) to user-friendlier hierarchical representation (e.g. &lt;code&gt;rlpdump --hex CE0183FFFFFFC4C304050583616263&lt;/code&gt;).&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Running &lt;code&gt;geth&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Going through all the possible command line flags is out of scope here (please consult our &lt;a href="https://geth.ethereum.org/docs/fundamentals/command-line-options"&gt;CLI Wiki page&lt;/a&gt;), but we've enumerated a few common parameter combos to get you up to speed quickly on how you can run your own &lt;code&gt;geth&lt;/code&gt; instance.&lt;/p&gt; 
&lt;h3&gt;Hardware Requirements&lt;/h3&gt; 
&lt;p&gt;Minimum:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;CPU with 4+ cores&lt;/li&gt; 
 &lt;li&gt;8GB RAM&lt;/li&gt; 
 &lt;li&gt;1TB free storage space to sync the Mainnet&lt;/li&gt; 
 &lt;li&gt;8 MBit/sec download Internet service&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Recommended:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fast CPU with 8+ cores&lt;/li&gt; 
 &lt;li&gt;16GB+ RAM&lt;/li&gt; 
 &lt;li&gt;High-performance SSD with at least 1TB of free space&lt;/li&gt; 
 &lt;li&gt;25+ MBit/sec download Internet service&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Full node on the main Ethereum network&lt;/h3&gt; 
&lt;p&gt;By far the most common scenario is people wanting to simply interact with the Ethereum network: create accounts; transfer funds; deploy and interact with contracts. For this particular use case, the user doesn't care about years-old historical data, so we can sync quickly to the current state of the network. To do so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ geth console
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Start &lt;code&gt;geth&lt;/code&gt; in snap sync mode (default, can be changed with the &lt;code&gt;--syncmode&lt;/code&gt; flag), causing it to download more data in exchange for avoiding processing the entire history of the Ethereum network, which is very CPU intensive.&lt;/li&gt; 
 &lt;li&gt;Start the built-in interactive &lt;a href="https://geth.ethereum.org/docs/interacting-with-geth/javascript-console"&gt;JavaScript console&lt;/a&gt;, (via the trailing &lt;code&gt;console&lt;/code&gt; subcommand) through which you can interact using &lt;a href="https://github.com/ChainSafe/web3.js/raw/0.20.7/DOCUMENTATION.md"&gt;&lt;code&gt;web3&lt;/code&gt; methods&lt;/a&gt; (note: the &lt;code&gt;web3&lt;/code&gt; version bundled within &lt;code&gt;geth&lt;/code&gt; is very old, and not up to date with official docs), as well as &lt;code&gt;geth&lt;/code&gt;'s own &lt;a href="https://geth.ethereum.org/docs/interacting-with-geth/rpc"&gt;management APIs&lt;/a&gt;. This tool is optional and if you leave it out you can always attach it to an already running &lt;code&gt;geth&lt;/code&gt; instance with &lt;code&gt;geth attach&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;A Full node on the Holesky test network&lt;/h3&gt; 
&lt;p&gt;Transitioning towards developers, if you'd like to play around with creating Ethereum contracts, you almost certainly would like to do that without any real money involved until you get the hang of the entire system. In other words, instead of attaching to the main network, you want to join the &lt;strong&gt;test&lt;/strong&gt; network with your node, which is fully equivalent to the main network, but with play-Ether only.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ geth --holesky console
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;console&lt;/code&gt; subcommand has the same meaning as above and is equally useful on the testnet too.&lt;/p&gt; 
&lt;p&gt;Specifying the &lt;code&gt;--holesky&lt;/code&gt; flag, however, will reconfigure your &lt;code&gt;geth&lt;/code&gt; instance a bit:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Instead of connecting to the main Ethereum network, the client will connect to the Holesky test network, which uses different P2P bootnodes, different network IDs and genesis states.&lt;/li&gt; 
 &lt;li&gt;Instead of using the default data directory (&lt;code&gt;~/.ethereum&lt;/code&gt; on Linux for example), &lt;code&gt;geth&lt;/code&gt; will nest itself one level deeper into a &lt;code&gt;holesky&lt;/code&gt; subfolder (&lt;code&gt;~/.ethereum/holesky&lt;/code&gt; on Linux). Note, on OSX and Linux this also means that attaching to a running testnet node requires the use of a custom endpoint since &lt;code&gt;geth attach&lt;/code&gt; will try to attach to a production node endpoint by default, e.g., &lt;code&gt;geth attach &amp;lt;datadir&amp;gt;/holesky/geth.ipc&lt;/code&gt;. Windows users are not affected by this.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Note: Although some internal protective measures prevent transactions from crossing over between the main network and test network, you should always use separate accounts for play and real money. Unless you manually move accounts, &lt;code&gt;geth&lt;/code&gt; will by default correctly separate the two networks and will not make any accounts available between them.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;As an alternative to passing the numerous flags to the &lt;code&gt;geth&lt;/code&gt; binary, you can also pass a configuration file via:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ geth --config /path/to/your_config.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get an idea of how the file should look like you can use the &lt;code&gt;dumpconfig&lt;/code&gt; subcommand to export your existing configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ geth --your-favourite-flags dumpconfig
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Docker quick start&lt;/h4&gt; 
&lt;p&gt;One of the quickest ways to get Ethereum up and running on your machine is by using Docker:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker run -d --name ethereum-node -v /Users/alice/ethereum:/root \
           -p 8545:8545 -p 30303:30303 \
           ethereum/client-go
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will start &lt;code&gt;geth&lt;/code&gt; in snap-sync mode with a DB memory allowance of 1GB, as the above command does. It will also create a persistent volume in your home directory for saving your blockchain as well as map the default ports. There is also an &lt;code&gt;alpine&lt;/code&gt; tag available for a slim version of the image.&lt;/p&gt; 
&lt;p&gt;Do not forget &lt;code&gt;--http.addr 0.0.0.0&lt;/code&gt;, if you want to access RPC from other containers and/or hosts. By default, &lt;code&gt;geth&lt;/code&gt; binds to the local interface and RPC endpoints are not accessible from the outside.&lt;/p&gt; 
&lt;h3&gt;Programmatically interfacing &lt;code&gt;geth&lt;/code&gt; nodes&lt;/h3&gt; 
&lt;p&gt;As a developer, sooner rather than later you'll want to start interacting with &lt;code&gt;geth&lt;/code&gt; and the Ethereum network via your own programs and not manually through the console. To aid this, &lt;code&gt;geth&lt;/code&gt; has built-in support for a JSON-RPC based APIs (&lt;a href="https://ethereum.org/en/developers/docs/apis/json-rpc/"&gt;standard APIs&lt;/a&gt; and &lt;a href="https://geth.ethereum.org/docs/interacting-with-geth/rpc"&gt;&lt;code&gt;geth&lt;/code&gt; specific APIs&lt;/a&gt;). These can be exposed via HTTP, WebSockets and IPC (UNIX sockets on UNIX based platforms, and named pipes on Windows).&lt;/p&gt; 
&lt;p&gt;The IPC interface is enabled by default and exposes all the APIs supported by &lt;code&gt;geth&lt;/code&gt;, whereas the HTTP and WS interfaces need to manually be enabled and only expose a subset of APIs due to security reasons. These can be turned on/off and configured as you'd expect.&lt;/p&gt; 
&lt;p&gt;HTTP based JSON-RPC API options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--http&lt;/code&gt; Enable the HTTP-RPC server&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--http.addr&lt;/code&gt; HTTP-RPC server listening interface (default: &lt;code&gt;localhost&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--http.port&lt;/code&gt; HTTP-RPC server listening port (default: &lt;code&gt;8545&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--http.api&lt;/code&gt; API's offered over the HTTP-RPC interface (default: &lt;code&gt;eth,net,web3&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--http.corsdomain&lt;/code&gt; Comma separated list of domains from which to accept cross-origin requests (browser enforced)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ws&lt;/code&gt; Enable the WS-RPC server&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ws.addr&lt;/code&gt; WS-RPC server listening interface (default: &lt;code&gt;localhost&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ws.port&lt;/code&gt; WS-RPC server listening port (default: &lt;code&gt;8546&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ws.api&lt;/code&gt; API's offered over the WS-RPC interface (default: &lt;code&gt;eth,net,web3&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ws.origins&lt;/code&gt; Origins from which to accept WebSocket requests&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ipcdisable&lt;/code&gt; Disable the IPC-RPC server&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ipcpath&lt;/code&gt; Filename for IPC socket/pipe within the datadir (explicit paths escape it)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You'll need to use your own programming environments' capabilities (libraries, tools, etc) to connect via HTTP, WS or IPC to a &lt;code&gt;geth&lt;/code&gt; node configured with the above flags and you'll need to speak &lt;a href="https://www.jsonrpc.org/specification"&gt;JSON-RPC&lt;/a&gt; on all transports. You can reuse the same connection for multiple requests!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note: Please understand the security implications of opening up an HTTP/WS based transport before doing so! Hackers on the internet are actively trying to subvert Ethereum nodes with exposed APIs! Further, all browser tabs can access locally running web servers, so malicious web pages could try to subvert locally available APIs!&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Operating a private network&lt;/h3&gt; 
&lt;p&gt;Maintaining your own private network is more involved as a lot of configurations taken for granted in the official networks need to be manually set up.&lt;/p&gt; 
&lt;p&gt;Unfortunately since &lt;a href="https://ethereum.org/en/roadmap/merge/"&gt;the Merge&lt;/a&gt; it is no longer possible to easily set up a network of geth nodes without also setting up a corresponding beacon chain.&lt;/p&gt; 
&lt;p&gt;There are three different solutions depending on your use case:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you are looking for a simple way to test smart contracts from go in your CI, you can use the &lt;a href="https://geth.ethereum.org/docs/developers/dapp-developer/native-bindings#blockchain-simulator"&gt;Simulated Backend&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you want a convenient single node environment for testing, you can use our &lt;a href="https://geth.ethereum.org/docs/developers/dapp-developer/dev-mode"&gt;Dev Mode&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you are looking for a multiple node test network, you can set one up quite easily with &lt;a href="https://geth.ethereum.org/docs/fundamentals/kurtosis"&gt;Kurtosis&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Thank you for considering helping out with the source code! We welcome contributions from anyone on the internet, and are grateful for even the smallest of fixes!&lt;/p&gt; 
&lt;p&gt;If you'd like to contribute to go-ethereum, please fork, fix, commit and send a pull request for the maintainers to review and merge into the main code base. If you wish to submit more complex changes though, please check up with the core devs first on &lt;a href="https://discord.gg/invite/nthXNEv"&gt;our Discord Server&lt;/a&gt; to ensure those changes are in line with the general philosophy of the project and/or get some early feedback which can make both your efforts much lighter as well as our review and merge procedures quick and simple.&lt;/p&gt; 
&lt;p&gt;Please make sure your contributions adhere to our coding guidelines:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Code must adhere to the official Go &lt;a href="https://golang.org/doc/effective_go.html#formatting"&gt;formatting&lt;/a&gt; guidelines (i.e. uses &lt;a href="https://golang.org/cmd/gofmt/"&gt;gofmt&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;Code must be documented adhering to the official Go &lt;a href="https://golang.org/doc/effective_go.html#commentary"&gt;commentary&lt;/a&gt; guidelines.&lt;/li&gt; 
 &lt;li&gt;Pull requests need to be based on and opened against the &lt;code&gt;master&lt;/code&gt; branch.&lt;/li&gt; 
 &lt;li&gt;Commit messages should be prefixed with the package(s) they modify. 
  &lt;ul&gt; 
   &lt;li&gt;E.g. "eth, rpc: make trace configs optional"&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please see the &lt;a href="https://geth.ethereum.org/docs/developers/geth-developer/dev-guide"&gt;Developers' Guide&lt;/a&gt; for more details on configuring your environment, managing project dependencies, and testing procedures.&lt;/p&gt; 
&lt;h3&gt;Contributing to geth.ethereum.org&lt;/h3&gt; 
&lt;p&gt;For contributions to the &lt;a href="https://geth.ethereum.org"&gt;go-ethereum website&lt;/a&gt;, please checkout and raise pull requests against the &lt;code&gt;website&lt;/code&gt; branch. For more detailed instructions please see the &lt;code&gt;website&lt;/code&gt; branch &lt;a href="https://github.com/ethereum/go-ethereum/tree/website#readme"&gt;README&lt;/a&gt; or the &lt;a href="https://geth.ethereum.org/docs/developers/geth-developer/contributing"&gt;contributing&lt;/a&gt; page of the website.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The go-ethereum library (i.e. all code outside of the &lt;code&gt;cmd&lt;/code&gt; directory) is licensed under the &lt;a href="https://www.gnu.org/licenses/lgpl-3.0.en.html"&gt;GNU Lesser General Public License v3.0&lt;/a&gt;, also included in our repository in the &lt;code&gt;COPYING.LESSER&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;The go-ethereum binaries (i.e. all code inside of the &lt;code&gt;cmd&lt;/code&gt; directory) are licensed under the &lt;a href="https://www.gnu.org/licenses/gpl-3.0.en.html"&gt;GNU General Public License v3.0&lt;/a&gt;, also included in our repository in the &lt;code&gt;COPYING&lt;/code&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gtsteffaniak/filebrowser</title>
      <link>https://github.com/gtsteffaniak/filebrowser</link>
      <description>&lt;p&gt;üìÇ Web File Browser&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/gtsteffaniak/filebrowser/backend"&gt;&lt;img src="https://goreportcard.com/badge/github.com/gtsteffaniak/filebrowser/backend" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://www.codacy.com/gh/gtsteffaniak/filebrowser/dashboard"&gt;&lt;img src="https://app.codacy.com/project/badge/Grade/1c48cfb7646d4009aa8c6f71287670b8" alt="Codacy Badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gtsteffaniak/filebrowser/releases"&gt;&lt;img src="https://img.shields.io/github/release/gtsteffaniak/filebrowser/all.svg?sanitize=true" alt="latest version" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/gtstef/filebrowser"&gt;&lt;img src="https://img.shields.io/docker/pulls/gtstef/filebrowser?label=latest%20Docker%20pulls" alt="DockerHub Pulls" /&gt;&lt;/a&gt; &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true" alt="Apache-2.0 License" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Q&amp;amp;A#is-there-a-way-to-donate-or-support-this-project"&gt;&lt;img src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif" alt="Donate" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;img width="150" src="https://github.com/user-attachments/assets/59986a2a-f960-4536-aa35-4a9a7c98ad48" title="Logo" /&gt; 
 &lt;h3&gt;FileBrowser Quantum&lt;/h3&gt; The best free self-hosted web-based file manager. 
 &lt;br /&gt;
 &lt;br /&gt; 
 &lt;img width="800" src="https://github.com/user-attachments/assets/162d7a95-33b7-49bd-976c-dd6822c0d22b" /&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] There is no stable version -- &lt;span&gt;üöß&lt;/span&gt; coming very soon!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Pinned&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;üì¢&lt;/span&gt; &lt;a href="https://github.com/gtsteffaniak/filebrowser/discussions/1293"&gt;Stable Release &amp;amp; 0.9.0 Update&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;üìå&lt;/span&gt; &lt;a href="https://filebrowserquantum.com/"&gt;Read The Official Docs&lt;/a&gt; (currently english-only)&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;FileBrowser Quantum provides an easy way to access and manage your files from the web. It has a modern responsive interface that has many advanced features to manage users, access, sharing, and file preview and editing.&lt;/p&gt; 
&lt;p&gt;This version is called "Quantum" because it packs tons of advanced features into a tiny easy to run file. Unlike the majority of alternative options, FileBrowser Quantum is simple to install and easy to configure.&lt;/p&gt; 
&lt;p&gt;The goal for this repo is to become the best open-source self-hosted file browsing application that exists -- &lt;strong&gt;all for free&lt;/strong&gt;. This repo will always be free and open-source.&lt;/p&gt; 
&lt;p&gt;Ready to try it out? See &lt;a href="https://filebrowserquantum.com/en/docs/getting-started/"&gt;Getting Started Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How its different&lt;/h2&gt; 
&lt;p&gt;FileBrowser Quantum is a massive fork of the file browser open-source project with the following changes:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;‚úÖ Multiple sources support&lt;/li&gt; 
 &lt;li&gt;‚úÖ Login support for OIDC, password + 2FA, and proxy.&lt;/li&gt; 
 &lt;li&gt;‚úÖ Beautiful, Responsive, and Customizable user interface.&lt;/li&gt; 
 &lt;li&gt;‚úÖ Simplified configuration via &lt;code&gt;config.yaml&lt;/code&gt; config file.&lt;/li&gt; 
 &lt;li&gt;‚úÖ Ultra-efficient &lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Indexing"&gt;indexing&lt;/a&gt; and real-time updates 
  &lt;ul&gt; 
   &lt;li&gt;Real-time search results as you type.&lt;/li&gt; 
   &lt;li&gt;Real-time monitoring and updates in the UI.&lt;/li&gt; 
   &lt;li&gt;Search supports file and folder sizes, along with various filters.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;‚úÖ Better listing browsing 
  &lt;ul&gt; 
   &lt;li&gt;More file type previews, such as &lt;strong&gt;office&lt;/strong&gt; and &lt;strong&gt;video&lt;/strong&gt; file previews&lt;/li&gt; 
   &lt;li&gt;Instantly switches view modes and sort order without reloading data.&lt;/li&gt; 
   &lt;li&gt;Folder sizes are displayed.&lt;/li&gt; 
   &lt;li&gt;Navigating remembers the last scroll position.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;‚úÖ Highly configurable and customizable sharing options, incuding: 
  &lt;ul&gt; 
   &lt;li&gt;share expiration time&lt;/li&gt; 
   &lt;li&gt;users who can access share (including anonymous)&lt;/li&gt; 
   &lt;li&gt;styling and themes&lt;/li&gt; 
   &lt;li&gt;file viewing, editing, and uploading permissions&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;‚úÖ Directory-level access control that can be scoped to user or group.&lt;/li&gt; 
 &lt;li&gt;‚úÖ Developer API support 
  &lt;ul&gt; 
   &lt;li&gt;Ability to create long-lived API Tokens.&lt;/li&gt; 
   &lt;li&gt;A helpful Swagger page is available at &lt;code&gt;/swagger&lt;/code&gt; endpoint for API enabled users.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Notable features that this fork &lt;em&gt;does not&lt;/em&gt; have (removed):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;üöß&lt;/span&gt; jobs are not supported yet.&lt;/li&gt; 
 &lt;li&gt;‚ùå shell commands are completely removed and will not be returned.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;FileBrowser Quantum differs significantly from the original version. Many of these changes required a significant overhaul. Creating a fork was a necessary process to make the program better. There have been many growing pains, but a stable release is planned and coming soon.&lt;/p&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Every file and directory in the source gets indexed (by default). This enables powerful features such as instant search, but large source filesystems can increase your system requirements. &lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Indexing"&gt;See indexing wiki&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Memory&lt;/strong&gt;: depends on configured source complexity. See &lt;a href="https://github.com/gtsteffaniak/filebrowser/discussions/787"&gt;how much RAM does it require?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GPU&lt;/strong&gt;: Not currently used (planned)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The UI&lt;/h2&gt; 
&lt;p&gt;The UI has a simple three-component navigation system:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;(Left) Multi-action button with slide-out panel.&lt;/li&gt; 
 &lt;li&gt;(Middle) The powerful search bar.&lt;/li&gt; 
 &lt;li&gt;(Right) The view change toggle.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;All other functions are moved either into the action menu or pop-up menus. If the action does not depend on context, it will exist in the slide-out action panel. If the action is available based on context, it will show up as a pop-up menu.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img width="1000" src="https://github.com/user-attachments/assets/aa32b05c-f917-47bb-b07f-857edc5e47f7" title="Search GIF" /&gt; &lt;/p&gt; 
&lt;h2&gt;Official Docs&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://filebrowserquantum.com/"&gt;Official Docs&lt;/a&gt;. Contributions are welcome and encouraged! See &lt;a href="https://github.com/quantumx-apps/filebrowserDocs"&gt;FilebrowserDocs Github&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Comparison Chart&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Application Name&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://github.com/user-attachments/assets/59986a2a-f960-4536-aa35-4a9a7c98ad48" /&gt; Quantum&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://github.com/filebrowser/filebrowser/raw/master/frontend/public/img/logo.svg?sanitize=true" /&gt; Filebrowser&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://github.com/mickael-kerjean/filestash/raw/master/public/assets/logo/app_icon.png?raw=true" /&gt; Filestash&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://avatars.githubusercontent.com/u/19211038?s=200&amp;amp;v=4" /&gt; Nextcloud&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/da/Google_Drive_logo.png/480px-Google_Drive_logo.png" /&gt; Google_Drive&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://avatars.githubusercontent.com/u/6422152?v=4" /&gt; FileRun&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Filesystem support&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mac&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Self hostable&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Has Stable Release?&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;S3 support&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;webdav support&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FTP support&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Dedicated docs site?&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multiple sources at once&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Docker image size&lt;/td&gt; 
   &lt;td&gt;180 MB (with ffmpeg)&lt;/td&gt; 
   &lt;td&gt;31 MB&lt;/td&gt; 
   &lt;td&gt;240 MB (main image)&lt;/td&gt; 
   &lt;td&gt;250 MB&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;&amp;gt; 2 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Min. Memory Requirements&lt;/td&gt; 
   &lt;td&gt;256 MB&lt;/td&gt; 
   &lt;td&gt;128 MB&lt;/td&gt; 
   &lt;td&gt;128 MB (main image)&lt;/td&gt; 
   &lt;td&gt;512 MB&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;512 MB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;has standalone binary&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;price&lt;/td&gt; 
   &lt;td&gt;free&lt;/td&gt; 
   &lt;td&gt;free&lt;/td&gt; 
   &lt;td&gt;free&lt;/td&gt; 
   &lt;td&gt;free tier&lt;/td&gt; 
   &lt;td&gt;free tier&lt;/td&gt; 
   &lt;td&gt;$99+&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;rich media preview&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Upload files from the web?&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Advanced Search?&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;configurable&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Indexed Search?&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;configurable&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Content-aware search?&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;configurable&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Custom job support&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multiple users&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Single sign-on support&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LDAP sign-on support&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Long-live API key support&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;API documentation page&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mobile App&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;open source?&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;tags support&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;shareable web links?&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Event-based notifications&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Metrics&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;file space quotas&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;text-based files editor&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Office file support&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Office file previews&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Themes&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Branding support&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;activity log&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Comments support&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;trash support&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Starred/pinned files&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Chromecast support&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Share collections of files&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can archive selected files&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can browse archive files&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can convert documents&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can convert videos&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can convert photos&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>ethereum-optimism/optimism</title>
      <link>https://github.com/ethereum-optimism/optimism</link>
      <description>&lt;p&gt;Optimism is Ethereum, scaled.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://optimism.io"&gt;&lt;img alt="Optimism" src="https://raw.githubusercontent.com/ethereum-optimism/brand-kit/main/assets/svg/OPTIMISM-R.svg?sanitize=true" width="600" /&gt;&lt;/a&gt; 
 &lt;br /&gt; 
 &lt;h3&gt;&lt;a href="https://optimism.io"&gt;Optimism&lt;/a&gt; is Ethereum, scaled.&lt;/h3&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt; 
&lt;!--TOC--&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#what-is-optimism"&gt;What is Optimism?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#specification"&gt;Specification&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#community"&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#security-policy-and-vulnerability-reporting"&gt;Security Policy and Vulnerability Reporting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#directory-structure"&gt;Directory Structure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#development-and-release-process"&gt;Development and Release Process&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#production-releases"&gt;Production Releases&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#development-branch"&gt;Development branch&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--TOC--&gt; 
&lt;h2&gt;What is Optimism?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.optimism.io/"&gt;Optimism&lt;/a&gt; is a project dedicated to scaling Ethereum's technology and expanding its ability to coordinate people from across the world to build effective decentralized economies and governance systems. The &lt;a href="https://www.optimism.io/vision"&gt;Optimism Collective&lt;/a&gt; builds open-source software that powers scalable blockchains and aims to address key governance and economic challenges in the wider Ethereum ecosystem. Optimism operates on the principle of &lt;strong&gt;impact=profit&lt;/strong&gt;, the idea that individuals who positively impact the Collective should be proportionally rewarded with profit. &lt;strong&gt;Change the incentives and you change the world.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In this repository you'll find numerous core components of the OP Stack, the decentralized software stack maintained by the Optimism Collective that powers Optimism and forms the backbone of blockchains like &lt;a href="https://explorer.optimism.io/"&gt;OP Mainnet&lt;/a&gt; and &lt;a href="https://base.org"&gt;Base&lt;/a&gt;. The OP Stack is designed to be aggressively open-source ‚Äî you are welcome to explore, modify, and extend this code.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you want to build on top of OP Mainnet, refer to the &lt;a href="https://docs.optimism.io"&gt;Optimism Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;If you want to build your own OP Stack based blockchain, refer to the &lt;a href="https://docs.optimism.io/stack/getting-started"&gt;OP Stack Guide&lt;/a&gt; and make sure to understand this repository's &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/#development-and-release-process"&gt;Development and Release Process&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Specification&lt;/h2&gt; 
&lt;p&gt;Detailed specifications for the OP Stack can be found within the &lt;a href="https://github.com/ethereum-optimism/specs"&gt;OP Stack Specs&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;General discussion happens most frequently on the &lt;a href="https://discord.gg/optimism"&gt;Optimism discord&lt;/a&gt;. Governance discussion can also be found on the &lt;a href="https://gov.optimism.io/"&gt;Optimism Governance Forum&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The OP Stack is a collaborative project. By collaborating on free, open software and shared standards, the Optimism Collective aims to prevent siloed software development and rapidly accelerate the development of the Ethereum ecosystem. Come contribute, build the future, and redefine power, together.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; contains a detailed explanation of the contributing process for this repository. Make sure to use the &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/CONTRIBUTING.md#development-quick-start"&gt;Developer Quick Start&lt;/a&gt; to properly set up your development environment.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/ethereum-optimism/optimism/issues?q=is:open+is:issue+label:D-good-first-issue"&gt;Good First Issues&lt;/a&gt; are a great place to look for tasks to tackle if you're not sure where to start, and see &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for info on larger projects.&lt;/p&gt; 
&lt;h2&gt;Security Policy and Vulnerability Reporting&lt;/h2&gt; 
&lt;p&gt;Please refer to the canonical &lt;a href="https://github.com/ethereum-optimism/.github/raw/master/SECURITY.md"&gt;Security Policy&lt;/a&gt; document for detailed information about how to report vulnerabilities in this codebase. Bounty hunters are encouraged to check out the &lt;a href="https://immunefi.com/bounty/optimism/"&gt;Optimism Immunefi bug bounty program&lt;/a&gt;. The Optimism Immunefi program offers up to $2,000,042 for in-scope critical vulnerabilities.&lt;/p&gt; 
&lt;h2&gt;Directory Structure&lt;/h2&gt; 
&lt;pre&gt;
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/cannon"&gt;cannon&lt;/a&gt;: Onchain MIPS instruction emulator for fault proofs
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/devnet-sdk"&gt;devnet-sdk&lt;/a&gt;: Comprehensive toolkit for standardized devnet interactions
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/docs"&gt;docs&lt;/a&gt;: A collection of documents including audits and post-mortems
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/kurtosis-devnet"&gt;kurtosis-devnet&lt;/a&gt;: OP-Stack Kurtosis devnet
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-acceptance-tests"&gt;op-acceptance-tests&lt;/a&gt;: Acceptance tests and configuration for OP Stack
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-alt-da"&gt;op-alt-da&lt;/a&gt;: Alternative Data Availability mode (beta)
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-batcher"&gt;op-batcher&lt;/a&gt;: L2-Batch Submitter, submits bundles of batches to L1
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-chain-ops"&gt;op-chain-ops&lt;/a&gt;: State surgery utilities
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-challenger"&gt;op-challenger&lt;/a&gt;: Dispute game challenge agent
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-conductor"&gt;op-conductor&lt;/a&gt;: High-availability sequencer service
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-deployer"&gt;op-deployer&lt;/a&gt;: CLI tool for deploying and upgrading OP Stack smart contracts
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-devstack"&gt;op-devstack&lt;/a&gt;: Flexible test frontend for integration and acceptance testing
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-dispute-mon"&gt;op-dispute-mon&lt;/a&gt;: Off-chain service to monitor dispute games
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-dripper"&gt;op-dripper&lt;/a&gt;: Controlled token distribution service
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-e2e"&gt;op-e2e&lt;/a&gt;: End-to-End testing of all bedrock components in Go
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-faucet"&gt;op-faucet&lt;/a&gt;: Dev-faucet with support for multiple chains
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-fetcher"&gt;op-fetcher&lt;/a&gt;: Data fetching utilities
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-interop-mon"&gt;op-interop-mon&lt;/a&gt;: Interoperability monitoring service
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-node"&gt;op-node&lt;/a&gt;: Rollup consensus-layer client
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-preimage"&gt;op-preimage&lt;/a&gt;: Go bindings for Preimage Oracle
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-program"&gt;op-program&lt;/a&gt;: Fault proof program
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-proposer"&gt;op-proposer&lt;/a&gt;: L2-Output Submitter, submits proposals to L1
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-service"&gt;op-service&lt;/a&gt;: Common codebase utilities
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-supervisor"&gt;op-supervisor&lt;/a&gt;: Service to monitor chains and determine cross-chain message safety
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-sync-tester"&gt;op-sync-tester&lt;/a&gt;: Sync testing utilities
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-test-sequencer"&gt;op-test-sequencer&lt;/a&gt;: Test sequencer for development
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-up"&gt;op-up&lt;/a&gt;: Deployment and management utilities
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-validator"&gt;op-validator&lt;/a&gt;: Tool for validating Optimism chain configurations and deployments
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/op-wheel"&gt;op-wheel&lt;/a&gt;: Database utilities
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/ops"&gt;ops&lt;/a&gt;: Various operational packages
‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/packages"&gt;packages&lt;/a&gt;
‚îÇ   ‚îú‚îÄ‚îÄ &lt;a href="https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/packages/contracts-bedrock"&gt;contracts-bedrock&lt;/a&gt;: OP Stack smart contracts
&lt;/pre&gt; 
&lt;h2&gt;Development and Release Process&lt;/h2&gt; 
&lt;h3&gt;Overview&lt;/h3&gt; 
&lt;p&gt;Please read this section carefully if you're planning to fork or make frequent PRs into this repository.&lt;/p&gt; 
&lt;h3&gt;Production Releases&lt;/h3&gt; 
&lt;p&gt;Production releases are always tags, versioned as &lt;code&gt;&amp;lt;component-name&amp;gt;/v&amp;lt;semver&amp;gt;&lt;/code&gt;. For example, an &lt;code&gt;op-node&lt;/code&gt; release might be versioned as &lt;code&gt;op-node/v1.1.2&lt;/code&gt;, and smart contract releases might be versioned as &lt;code&gt;op-contracts/v1.0.0&lt;/code&gt;. Release candidates are versioned in the format &lt;code&gt;op-node/v1.1.2-rc.1&lt;/code&gt;. We always start with &lt;code&gt;rc.1&lt;/code&gt; rather than &lt;code&gt;rc&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For contract releases, refer to the GitHub release notes for a given release which will list the specific contracts being released. Not all contracts are considered production ready within a release and many are under active development.&lt;/p&gt; 
&lt;p&gt;Tags of the form &lt;code&gt;v&amp;lt;semver&amp;gt;&lt;/code&gt;, such as &lt;code&gt;v1.1.4&lt;/code&gt;, indicate releases of all Go code only, and &lt;strong&gt;DO NOT&lt;/strong&gt; include smart contracts. This naming scheme is required by Golang. In the above list, this means these &lt;code&gt;v&amp;lt;semver&amp;gt;&lt;/code&gt; releases contain all &lt;code&gt;op-*&lt;/code&gt; components and exclude all &lt;code&gt;contracts-*&lt;/code&gt; components.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;op-geth&lt;/code&gt; embeds upstream geth‚Äôs version inside its own version as follows: &lt;code&gt;vMAJOR.GETH_MAJOR GETH_MINOR GETH_PATCH.PATCH&lt;/code&gt;. Basically, geth‚Äôs version is our minor version. For example if geth is at &lt;code&gt;v1.12.0&lt;/code&gt;, the corresponding op-geth version would be &lt;code&gt;v1.101200.0&lt;/code&gt;. Note that we pad out to three characters for the geth minor version and two characters for the geth patch version. Since we cannot left-pad with zeroes, the geth major version is not padded.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://docs.optimism.io/builders/node-operators/releases"&gt;Node Software Releases&lt;/a&gt; page of the documentation for more information about releases for the latest node components.&lt;/p&gt; 
&lt;p&gt;The full set of components that have releases are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;op-batcher&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;op-contracts&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;op-challenger&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;op-node&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;op-proposer&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All other components and packages should be considered development components only and do not have releases.&lt;/p&gt; 
&lt;h3&gt;Development branch&lt;/h3&gt; 
&lt;p&gt;The primary development branch is &lt;a href="https://github.com/ethereum-optimism/optimism/tree/develop/"&gt;&lt;code&gt;develop&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;develop&lt;/code&gt; contains the most up-to-date software that remains backwards compatible with the latest experimental &lt;a href="https://docs.optimism.io/chain/networks"&gt;network deployments&lt;/a&gt;. If you're making a backwards compatible change, please direct your pull request towards &lt;code&gt;develop&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Changes to contracts within &lt;code&gt;packages/contracts-bedrock/src&lt;/code&gt; are usually NOT considered backwards compatible.&lt;/strong&gt; Some exceptions to this rule exist for cases in which we absolutely must deploy some new contract after a tag has already been fully deployed. If you're changing or adding a contract and you're unsure about which branch to make a PR into, default to using a feature branch. Feature branches are typically used when there are conflicts between 2 projects touching the same code, to avoid conflicts from merging both into &lt;code&gt;develop&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;All other files within this repository are licensed under the &lt;a href="https://github.com/ethereum-optimism/optimism/raw/master/LICENSE"&gt;MIT License&lt;/a&gt; unless stated otherwise.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>smartcontractkit/chainlink</title>
      <link>https://github.com/smartcontractkit/chainlink</link>
      <description>&lt;p&gt;node of the decentralized oracle network, bridging on and off-chain computation&lt;/p&gt;&lt;hr&gt;&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://chain.link" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/logo-chainlink-blue.svg?sanitize=true" width="225" alt="Chainlink logo" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/smartcontract/chainlink/tags"&gt;&lt;img src="https://img.shields.io/github/v/tag/smartcontractkit/chainlink?style=flat-square" alt="GitHub tag (latest SemVer)" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smartcontractkit/chainlink/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/smartcontractkit/chainlink?style=flat-square" alt="GitHub license" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smartcontractkit/chainlink/actions/workflows/changeset.yml?query=workflow%3AChangeset"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/smartcontractkit/chainlink/changeset.yml" alt="GitHub workflow changeset" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smartcontractkit/chainlink/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors-anon/smartcontractkit/chainlink?style=flat-square" alt="GitHub contributors" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smartcontractkit/chainlink/commits/master"&gt;&lt;img src="https://img.shields.io/github/commit-activity/y/smartcontractkit/chainlink?style=flat-square" alt="GitHub commit activity" /&gt;&lt;/a&gt; &lt;a href="https://docs.chain.link/"&gt;&lt;img src="https://img.shields.io/static/v1?label=docs&amp;amp;message=latest&amp;amp;color=blue" alt="Official documentation" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://chain.link/"&gt;Chainlink&lt;/a&gt; expands the capabilities of smart contracts by enabling access to real-world data and off-chain computation while maintaining the security and reliability guarantees inherent to blockchain technology.&lt;/p&gt; 
&lt;p&gt;This repo contains the Chainlink core node and contracts. The core node is the bundled binary available to be run by node operators participating in a &lt;a href="https://link.smartcontract.com/whitepaper"&gt;decentralized oracle network&lt;/a&gt;. All major release versions have pre-built docker images available for download from the &lt;a href="https://hub.docker.com/r/smartcontract/chainlink/tags"&gt;Chainlink dockerhub&lt;/a&gt;. If you are interested in contributing please see our &lt;a href="https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;. If you are here to report a bug or request a feature, please &lt;a href="https://github.com/smartcontractkit/chainlink/issues"&gt;check currently open Issues&lt;/a&gt;. For more information about how to get started with Chainlink, check our &lt;a href="https://docs.chain.link/"&gt;official documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Chainlink has an active and ever growing community. &lt;a href="https://discordapp.com/invite/aSK4zew"&gt;Discord&lt;/a&gt; is the primary communication channel used for day to day communication, answering development questions, and aggregating Chainlink related content. Take a look at the &lt;a href="https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/COMMUNITY.md"&gt;community docs&lt;/a&gt; for more information regarding Chainlink social accounts, news, and networking.&lt;/p&gt; 
&lt;h2&gt;Build Chainlink&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/doc/install"&gt;Install Go 1.23&lt;/a&gt;, and add your GOPATH's &lt;a href="https://golang.org/doc/code.html#GOPATH"&gt;bin directory to your PATH&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Example Path for macOS &lt;code&gt;export PATH=$GOPATH/bin:$PATH&lt;/code&gt; &amp;amp; &lt;code&gt;export GOPATH=/Users/$USER/go&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Install &lt;a href="https://nodejs.org/en/download/package-manager/"&gt;NodeJS v20&lt;/a&gt; &amp;amp; &lt;a href="https://pnpm.io/installation#using-npm"&gt;pnpm v10 via npm&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;It might be easier long term to use &lt;a href="https://nodejs.org/en/download/package-manager/#nvm"&gt;nvm&lt;/a&gt; to switch between node versions for different projects. For example, assuming $NODE_VERSION was set to a valid version of NodeJS, you could run: &lt;code&gt;nvm install $NODE_VERSION &amp;amp;&amp;amp; nvm use $NODE_VERSION&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Install &lt;a href="https://wiki.postgresql.org/wiki/Detailed_installation_guides"&gt;Postgres (&amp;gt;= 12.x)&lt;/a&gt;. It is recommended to run the latest major version of postgres. 
  &lt;ul&gt; 
   &lt;li&gt;Note if you are running the official Chainlink docker image, the highest supported Postgres version is 16.x due to the bundled client.&lt;/li&gt; 
   &lt;li&gt;You should &lt;a href="https://www.postgresql.org/docs/current/ssl-tcp.html"&gt;configure Postgres&lt;/a&gt; to use SSL connection (or for testing you can set &lt;code&gt;?sslmode=disable&lt;/code&gt; in your Postgres query string).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Download Chainlink: &lt;code&gt;git clone https://github.com/smartcontractkit/chainlink &amp;amp;&amp;amp; cd chainlink&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Build and install Chainlink: &lt;code&gt;make install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run the node: &lt;code&gt;chainlink help&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For the latest information on setting up a development environment, see the &lt;a href="https://github.com/smartcontractkit/chainlink/wiki/Development-Setup-Guide"&gt;Development Setup Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Build from PR&lt;/h3&gt; 
&lt;p&gt;To build an unofficial testing-only image from a feature branch or PR. You can do one of the following:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Send a workflow dispatch event from our &lt;a href="https://github.com/smartcontractkit/chainlink/actions/workflows/docker-build.yml"&gt;&lt;code&gt;docker-build&lt;/code&gt; workflow&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Add the &lt;code&gt;build-publish&lt;/code&gt; label to your PR and then either retry the &lt;code&gt;docker-build&lt;/code&gt; workflow, or push a new commit.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Build Plugins&lt;/h3&gt; 
&lt;p&gt;Plugins are defined in yaml files within the &lt;code&gt;plugins/&lt;/code&gt; directory. Each plugin file is a yaml file and has a &lt;code&gt;plugins.&lt;/code&gt; prefix name. Plugins are installed with &lt;a href="https://github.com/smartcontractkit/chainlink-common/tree/main/pkg/loop/cmd/loopinstall"&gt;loopinstall&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To install the plugins, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make install-plugins
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Some plugins (such as those in &lt;code&gt;plugins/plugins.private.yaml&lt;/code&gt;) reference private GitHub repositories. To build these plugins, you must have a GITHUB_TOKEN environment variable set, or preferably use the &lt;a href="https://cli.github.com/manual/gh"&gt;gh&lt;/a&gt; GitHub CLI tool to use the &lt;a href="https://cli.github.com/manual/gh_auth_setup-git"&gt;GitHub CLI credential helper&lt;/a&gt; like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# Sets up a credential helper.
gh auth setup-git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then you can build the plugins with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make install-plugins-private
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker Builds&lt;/h3&gt; 
&lt;p&gt;To build the experimental "plugins" Chainlink docker image, you can run this from the root of the repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# The GITHUB_TOKEN is required to access private repos which are used by some plugins.
export GITHUB_TOKEN=$(gh auth token) # requires the `gh` cli tool.
make docker-plugins
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Ethereum Execution Client Requirements&lt;/h3&gt; 
&lt;p&gt;In order to run the Chainlink node you must have access to a running Ethereum node with an open websocket connection. Any Ethereum based network will work once you've &lt;a href="https://github.com/smartcontractkit/chainlink#configure"&gt;configured&lt;/a&gt; the chain ID. Ethereum node versions currently tested and supported:&lt;/p&gt; 
&lt;p&gt;[Officially supported]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openethereum/openethereum"&gt;Parity/Openethereum&lt;/a&gt; (NOTE: Parity is deprecated and support for this client may be removed in future)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ethereum/go-ethereum/releases"&gt;Geth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hyperledger/besu"&gt;Besu&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;[Supported but broken] These clients are supported by Chainlink, but have bugs that prevent Chainlink from working reliably on these execution clients.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NethermindEth/nethermind"&gt;Nethermind&lt;/a&gt; Blocking issues: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;del&gt;&lt;a href="https://github.com/NethermindEth/nethermind/issues/4384"&gt;https://github.com/NethermindEth/nethermind/issues/4384&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ledgerwatch/erigon"&gt;Erigon&lt;/a&gt; Blocking issues: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ledgerwatch/erigon/discussions/4946"&gt;https://github.com/ledgerwatch/erigon/discussions/4946&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ledgerwatch/erigon/issues/4030#issuecomment-1113964017"&gt;https://github.com/ledgerwatch/erigon/issues/4030#issuecomment-1113964017&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We cannot recommend specific version numbers for ethereum nodes since the software is being continually updated, but you should usually try to run the latest version available.&lt;/p&gt; 
&lt;h2&gt;Running a local Chainlink node&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: By default, chainlink will run in TLS mode. For local development you can disable this by using a &lt;code&gt;dev build&lt;/code&gt; using &lt;code&gt;make chainlink-dev&lt;/code&gt; and setting the TOML fields:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[WebServer]
SecureCookies = false
TLS.HTTPSPort = 0

[Insecure]
DevWebServer = true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can generate self signed certificates using &lt;code&gt;tools/bin/self-signed-certs&lt;/code&gt; or &lt;a href="https://github.com/smartcontractkit/chainlink/wiki/Creating-Self-Signed-Certificates"&gt;manually&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To start your Chainlink node, simply run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;chainlink node start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default this will start on port 6688. You should be able to access the UI at &lt;a href="http://localhost:6688/"&gt;http://localhost:6688/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Chainlink provides a remote CLI client as well as a UI. Once your node has started, you can open a new terminal window to use the CLI. You will need to log in to authorize the client first:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;chainlink admin login
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(You can also set &lt;code&gt;ADMIN_CREDENTIALS_FILE=/path/to/credentials/file&lt;/code&gt; in future if you like, to avoid having to login again).&lt;/p&gt; 
&lt;p&gt;Now you can view your current jobs with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;chainlink jobs list
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To find out more about the Chainlink CLI, you can always run &lt;code&gt;chainlink help&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href="https://docs.chain.link/"&gt;doc&lt;/a&gt; pages on &lt;a href="https://docs.chain.link/docs/jobs/"&gt;Jobs&lt;/a&gt; to learn more about how to create Jobs.&lt;/p&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;Node configuration is managed by a combination of environment variables and direct setting via API/UI/CLI.&lt;/p&gt; 
&lt;p&gt;Check the &lt;a href="https://docs.chain.link/docs/configuration-variables"&gt;official documentation&lt;/a&gt; for more information on how to configure your node.&lt;/p&gt; 
&lt;h3&gt;External Adapters&lt;/h3&gt; 
&lt;p&gt;External adapters are what make Chainlink easily extensible, providing simple integration of custom computations and specialized APIs. A Chainlink node communicates with external adapters via a simple REST API.&lt;/p&gt; 
&lt;p&gt;For more information on creating and using external adapters, please see our &lt;a href="https://docs.chain.link/docs/external-adapters"&gt;external adapters page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Verify Official Chainlink Releases&lt;/h2&gt; 
&lt;p&gt;We use &lt;code&gt;cosign&lt;/code&gt; with OIDC keyless signing during the &lt;a href="https://github.com/smartcontractkit/chainlink/actions/workflows/build-publish.yml"&gt;Build, Sign and Publish Chainlink&lt;/a&gt; workflow.&lt;/p&gt; 
&lt;p&gt;It is encourage for any node operator building from the official Chainlink docker image to verify the tagged release version was did indeed built from this workflow.&lt;/p&gt; 
&lt;p&gt;You will need &lt;code&gt;cosign&lt;/code&gt; in order to do this verification. &lt;a href="https://docs.sigstore.dev/system_config/installation/"&gt;Follow the instruction here to install cosign&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# tag is the tagged release version - ie. 2.16.0
cosign verify index.docker.io/smartcontract/chainlink:${tag} \
      --certificate-oidc-issuer https://token.actions.githubusercontent.com \
      --certificate-identity "https://github.com/smartcontractkit/chainlink/.github/workflows/build-publish.yml@refs/tags/v${tag}"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;Running tests&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://pnpm.io/installation#using-npm"&gt;Install pnpm 10 via npm&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;a href="https://github.com/fjl/gencodec"&gt;gencodec&lt;/a&gt; and &lt;a href="https://stedolan.github.io/jq/download/"&gt;jq&lt;/a&gt; to be able to run &lt;code&gt;go generate ./...&lt;/code&gt; and &lt;code&gt;make abigen&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install mockery&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;make mockery&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Using the &lt;code&gt;make&lt;/code&gt; command will install the correct version.&lt;/p&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Generate and compile static assets:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make generate
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Prepare your development environment:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The tests require a postgres database. In turn, the environment variable &lt;code&gt;CL_DATABASE_URL&lt;/code&gt; must be set to value that can connect to &lt;code&gt;_test&lt;/code&gt; database, and the user must be able to create and drop the given &lt;code&gt;_test&lt;/code&gt; database.&lt;/p&gt; 
&lt;p&gt;Note: Other environment variables should not be set for all tests to pass&lt;/p&gt; 
&lt;p&gt;There helper script for initial setup to create an appropriate test user. It requires postgres to be running on localhost at port 5432. You will be prompted for the &lt;code&gt;postgres&lt;/code&gt; user password&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make setup-testdb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This script will save the &lt;code&gt;CL_DATABASE_URL&lt;/code&gt; in &lt;code&gt;.dbenv&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Changes to database require migrations to be run. Similarly, &lt;code&gt;pull&lt;/code&gt;'ing the repo may require migrations to run. After the one-time setup above:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;source .dbenv
make testdb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you encounter the error &lt;code&gt;database accessed by other users (SQLSTATE 55006) exit status 1&lt;/code&gt; and you want force the database creation then use&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;source .dbenv
make testdb-force
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="7"&gt; 
 &lt;li&gt;Run tests:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go test ./...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Notes&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;parallel&lt;/code&gt; flag can be used to limit CPU usage, for running tests in the background (&lt;code&gt;-parallel=4&lt;/code&gt;) - the default is &lt;code&gt;GOMAXPROCS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;p&lt;/code&gt; flag can be used to limit the number of &lt;em&gt;packages&lt;/em&gt; tested concurrently, if they are interferring with one another (&lt;code&gt;-p=1&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;-short&lt;/code&gt; flag skips tests which depend on the database, for quickly spot checking simpler tests in around one minute&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Race Detector&lt;/h4&gt; 
&lt;p&gt;As of Go 1.1, the runtime includes a data race detector, enabled with the &lt;code&gt;-race&lt;/code&gt; flag. This is used in CI via the &lt;code&gt;tools/bin/go_core_race_tests&lt;/code&gt; script. If the action detects a race, the artifact on the summary page will include &lt;code&gt;race.*&lt;/code&gt; files with detailed stack traces.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;&lt;strong&gt;It will not issue false positives, so take its warnings seriously.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For local, targeted race detection, you can run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;GORACE="log_path=$PWD/race" go test -race ./core/path/to/pkg -count 10
GORACE="log_path=$PWD/race" go test -race ./core/path/to/pkg -count 100 -run TestFooBar/sub_test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://go.dev/doc/articles/race_detector"&gt;https://go.dev/doc/articles/race_detector&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Fuzz tests&lt;/h4&gt; 
&lt;p&gt;As of Go 1.18, fuzz tests &lt;code&gt;func FuzzXXX(*testing.F)&lt;/code&gt; are included as part of the normal test suite, so existing cases are executed with &lt;code&gt;go test&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally, you can run active fuzzing to search for new cases:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go test ./pkg/path -run=XXX -fuzz=FuzzTestName
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://go.dev/doc/fuzz/"&gt;https://go.dev/doc/fuzz/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Go Modules&lt;/h3&gt; 
&lt;p&gt;This repository contains three Go modules:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-mermaid"&gt;flowchart RL
    github.com/smartcontractkit/chainlink/v2
    github.com/smartcontractkit/chainlink/integration-tests --&amp;gt; github.com/smartcontractkit/chainlink/v2
    github.com/smartcontractkit/chainlink/core/scripts --&amp;gt; github.com/smartcontractkit/chainlink/v2

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;integration-tests&lt;/code&gt; and &lt;code&gt;core/scripts&lt;/code&gt; modules import the root module using a relative replace in their &lt;code&gt;go.mod&lt;/code&gt; files, so dependency changes in the root &lt;code&gt;go.mod&lt;/code&gt; often require changes in those modules as well. After making a change, &lt;code&gt;go mod tidy&lt;/code&gt; can be run on all three modules using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make gomodtidy
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Generation&lt;/h3&gt; 
&lt;p&gt;Go generate is used to generate mocks in this project. Mocks are generated with &lt;a href="https://github.com/vektra/mockery"&gt;mockery&lt;/a&gt; and live in core/internal/mocks.&lt;/p&gt; 
&lt;h3&gt;Nix&lt;/h3&gt; 
&lt;p&gt;A &lt;a href="https://nixos.wiki/wiki/Development_environment_with_nix-shell"&gt;shell.nix&lt;/a&gt; is provided for use with the &lt;a href="https://nixos.org/"&gt;Nix package manager&lt;/a&gt;. By default,we utilize the shell through &lt;a href="https://nixos.wiki/wiki/Flakes"&gt;Nix Flakes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Nix defines a declarative, reproducible development environment. Flakes version use deterministic, frozen (&lt;code&gt;flake.lock&lt;/code&gt;) dependencies to gain more consistency/reproducibility on the built artifacts.&lt;/p&gt; 
&lt;p&gt;To use it:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install &lt;a href="https://nixos.org/download.html"&gt;nix package manager&lt;/a&gt; in your system.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enable &lt;a href="https://nixos.wiki/wiki/Flakes#Enable_flakes"&gt;flakes support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Run &lt;code&gt;nix develop&lt;/code&gt;. You will be put in shell containing all the dependencies.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Optionally, &lt;code&gt;nix develop --command $SHELL&lt;/code&gt; will make use of your current shell instead of the default (bash).&lt;/li&gt; 
 &lt;li&gt;You can use &lt;code&gt;direnv&lt;/code&gt; to enable it automatically when &lt;code&gt;cd&lt;/code&gt;-ing into the folder; for that, enable &lt;a href="https://github.com/nix-community/nix-direnv"&gt;nix-direnv&lt;/a&gt; and &lt;code&gt;use flake&lt;/code&gt; on it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Create a local postgres database:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;mkdir -p $PGDATA &amp;amp;&amp;amp; cd $PGDATA/
initdb
pg_ctl -l postgres.log -o "--unix_socket_directories='$PWD'" start
createdb chainlink_test -h localhost
createuser --superuser --password chainlink -h localhost
# then type a test password, e.g.: chainlink, and set it in shell.nix CL_DATABASE_URL
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;When re-entering project, you can restart postgres: &lt;code&gt;cd $PGDATA; pg_ctl -l postgres.log -o "--unix_socket_directories='$PWD'" start&lt;/code&gt; Now you can run tests or compile code as usual.&lt;/li&gt; 
 &lt;li&gt;When you're done, stop it: &lt;code&gt;cd $PGDATA; pg_ctl -o "--unix_socket_directories='$PWD'" stop&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Changesets&lt;/h3&gt; 
&lt;p&gt;We use &lt;a href="https://github.com/changesets/changesets"&gt;changesets&lt;/a&gt; to manage versioning for libs and the services.&lt;/p&gt; 
&lt;p&gt;Every PR that modifies any configuration or code, should most likely accompanied by a changeset file.&lt;/p&gt; 
&lt;p&gt;To install &lt;code&gt;changesets&lt;/code&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install &lt;code&gt;pnpm&lt;/code&gt; if it is not already installed - &lt;a href="https://pnpm.io/installation"&gt;docs&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;pnpm install&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Either after or before you create a commit, run the &lt;code&gt;pnpm changeset&lt;/code&gt; command to create an accompanying changeset entry which will reflect on the CHANGELOG for the next release.&lt;/p&gt; 
&lt;p&gt;The format is based on &lt;a href="https://keepachangelog.com/en/1.0.0/"&gt;Keep a Changelog&lt;/a&gt;,&lt;/p&gt; 
&lt;p&gt;and this project adheres to &lt;a href="https://semver.org/spec/v2.0.0.html"&gt;Semantic Versioning&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Tips&lt;/h3&gt; 
&lt;p&gt;For more tips on how to build and test Chainlink, see our &lt;a href="https://github.com/smartcontractkit/chainlink/wiki/Development-Tips"&gt;development tips page&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Contributions are welcome to Chainlink's source code.&lt;/p&gt; 
&lt;p&gt;Please check out our &lt;a href="https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;Thank you!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>samber/lo</title>
      <link>https://github.com/samber/lo</link>
      <description>&lt;p&gt;üí• A Lodash-style Go library based on Go 1.18+ Generics (map, filter, contains, find...)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;lo - Iterate over slices, maps, channels...&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/samber/lo/releases"&gt;&lt;img src="https://img.shields.io/github/tag/samber/lo.svg?sanitize=true" alt="tag" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/Go-%3E%3D%201.18-%23007d9c" alt="Go Version" /&gt; &lt;a href="https://pkg.go.dev/github.com/samber/lo"&gt;&lt;img src="https://godoc.org/github.com/samber/lo?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;img src="https://github.com/samber/lo/actions/workflows/test.yml/badge.svg?sanitize=true" alt="Build Status" /&gt; &lt;a href="https://goreportcard.com/report/github.com/samber/lo"&gt;&lt;img src="https://goreportcard.com/badge/github.com/samber/lo" alt="Go report" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/samber/lo"&gt;&lt;img src="https://img.shields.io/codecov/c/github/samber/lo" alt="Coverage" /&gt;&lt;/a&gt; &lt;a href="https://github.com/samber/lo/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/samber/lo" alt="Contributors" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/samber/lo/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/samber/lo" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;‚ú® &lt;strong&gt;&lt;code&gt;samber/lo&lt;/code&gt; is a Lodash-style Go library based on Go 1.18+ Generics.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A utility library based on Go 1.18+ generics that makes it easier to work with slices, maps, strings, channels, and functions. It provides dozens of handy methods to simplify common coding tasks and improve code readability. It may look like &lt;a href="https://github.com/lodash/lodash"&gt;Lodash&lt;/a&gt; in some aspects.&lt;/p&gt; 
&lt;p&gt;5 to 10 helpers may overlap with those from the Go standard library, in packages &lt;code&gt;slices&lt;/code&gt; and &lt;code&gt;maps&lt;/code&gt;. I feel this library is legitimate and offers many more valuable abstractions.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;See also:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/ro"&gt;samber/ro&lt;/a&gt;: Reactive Programming for Go: declarative and composable API for event-driven applications&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/do"&gt;samber/do&lt;/a&gt;: A dependency injection toolkit based on Go 1.18+ Generics&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/mo"&gt;samber/mo&lt;/a&gt;: Monads based on Go 1.18+ Generics (Option, Result, Either...)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;samber/lo&lt;/code&gt; vs &lt;code&gt;samber/ro&lt;/code&gt; ?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Both libraries have &lt;code&gt;Map()&lt;/code&gt;, &lt;code&gt;Filter()&lt;/code&gt;... helpers. How are they different?&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;samber/lo&lt;/code&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;samber/ro&lt;/code&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;loop over in-memory objects&lt;/td&gt; 
   &lt;td&gt;manipulate event driven objects, produced asynchronously&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Data structure&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;slices, maps, iterator...&lt;/td&gt; 
   &lt;td&gt;stream, observables, observers&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Model&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;synchronous&lt;/td&gt; 
   &lt;td&gt;asynchronous&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Size&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;finite sequence&lt;/td&gt; 
   &lt;td&gt;infinite stream&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Flow control&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;pull-based (iterators)&lt;/td&gt; 
   &lt;td&gt;push-based&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;code&gt;lo&lt;/code&gt; is a bunch of helpers for looping across finite sequences (maps, slices...)&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;ro&lt;/code&gt; is focused on processing of infinite data streams in event-driven applications.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3 align="center"&gt;üíñ Support This Project&lt;/h3&gt; 
&lt;p align="center"&gt; I‚Äôm going all-in on open-source for the coming months. &lt;br /&gt; Help sustain development: Become an &lt;a href="http://github.com/sponsors/samber"&gt;individual sponsor&lt;/a&gt; or join as a &lt;a href="mailto:hey@samuel-berthe.fr"&gt;corporate sponsor&lt;/a&gt;. &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Why this name?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;I wanted a &lt;strong&gt;short name&lt;/strong&gt;, similar to "Lodash", and no Go package uses this name.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/samber/lo/master/img/logo-full.png" alt="lo" /&gt;&lt;/p&gt; 
&lt;h2&gt;üöÄ Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go get github.com/samber/lo@v1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This library is v1 and follows SemVer strictly.&lt;/p&gt; 
&lt;p&gt;No breaking changes will be made to exported APIs before v2.0.0.&lt;/p&gt; 
&lt;p&gt;This library has no dependencies outside the Go standard library.&lt;/p&gt; 
&lt;h2&gt;üí° Usage&lt;/h2&gt; 
&lt;p&gt;You can import &lt;code&gt;lo&lt;/code&gt; using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import (
    "github.com/samber/lo"
    lop "github.com/samber/lo/parallel"
    lom "github.com/samber/lo/mutable"
    loi "github.com/samber/lo/it"
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then use one of the helpers below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;names := lo.Uniq([]string{"Samuel", "John", "Samuel"})
// []string{"Samuel", "John"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Tips for lazy developers&lt;/h3&gt; 
&lt;p&gt;I cannot recommend it, but in case you are too lazy for repeating &lt;code&gt;lo.&lt;/code&gt; everywhere, you can import the entire library into the namespace.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import (
    . "github.com/samber/lo"
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;I take no responsibility for this junk. üòÅ üí©&lt;/p&gt; 
&lt;h2&gt;ü§† Spec&lt;/h2&gt; 
&lt;p&gt;GoDoc: &lt;a href="https://godoc.org/github.com/samber/lo"&gt;godoc.org/github.com/samber/lo&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Documentation: &lt;a href="https://lo.samber.dev/docs/about"&gt;lo.samber.dev&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Supported helpers for slices:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#filter"&gt;Filter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#map"&gt;Map&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#uniqmap"&gt;UniqMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#filtermap"&gt;FilterMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#flatmap"&gt;FlatMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#reduce"&gt;Reduce&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#reduceright"&gt;ReduceRight&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#foreach"&gt;ForEach&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#foreachwhile"&gt;ForEachWhile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#times"&gt;Times&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#uniq"&gt;Uniq&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#uniqby"&gt;UniqBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#groupby"&gt;GroupBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#groupbymap"&gt;GroupByMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#chunk"&gt;Chunk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#partitionby"&gt;PartitionBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#flatten"&gt;Flatten&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#interleave"&gt;Interleave&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#shuffle"&gt;Shuffle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#reverse"&gt;Reverse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fill"&gt;Fill&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#repeat"&gt;Repeat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#repeatby"&gt;RepeatBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#keyby"&gt;KeyBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#slicetomap-alias-associate"&gt;SliceToMap / Associate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#filterslicetomap"&gt;FilterSliceToMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#keyify"&gt;Keyify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#drop"&gt;Drop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#dropright"&gt;DropRight&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#dropwhile"&gt;DropWhile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#droprightwhile"&gt;DropRightWhile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#DropByIndex"&gt;DropByIndex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#reject"&gt;Reject&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#rejectmap"&gt;RejectMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#filterreject"&gt;FilterReject&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#count"&gt;Count&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#countby"&gt;CountBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#countvalues"&gt;CountValues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#countvaluesby"&gt;CountValuesBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#subset"&gt;Subset&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#slice"&gt;Slice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#replace"&gt;Replace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#replaceall"&gt;ReplaceAll&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#compact"&gt;Compact&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#issorted"&gt;IsSorted&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#issortedbykey"&gt;IsSortedByKey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#Splice"&gt;Splice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#Cut"&gt;Cut&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#CutPrefix"&gt;CutPrefix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#CutSuffix"&gt;CutSuffix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#Trim"&gt;Trim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#TrimLeft"&gt;TrimLeft&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#TrimPrefix"&gt;TrimPrefix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#TrimRight"&gt;TrimRight&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#TrimSuffix"&gt;TrimSuffix&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported helpers for maps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#keys"&gt;Keys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#uniqkeys"&gt;UniqKeys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#haskey"&gt;HasKey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#valueor"&gt;ValueOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#values"&gt;Values&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#uniqvalues"&gt;UniqValues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#pickby"&gt;PickBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#pickbykeys"&gt;PickByKeys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#pickbyvalues"&gt;PickByValues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#omitby"&gt;OmitBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#omitbykeys"&gt;OmitByKeys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#omitbyvalues"&gt;OmitByValues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#entries-alias-topairs"&gt;Entries / ToPairs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fromentries-alias-frompairs"&gt;FromEntries / FromPairs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#invert"&gt;Invert&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#assign"&gt;Assign (merge of maps)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#chunkentries"&gt;ChunkEntries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#mapkeys"&gt;MapKeys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#mapvalues"&gt;MapValues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#mapentries"&gt;MapEntries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#maptoslice"&gt;MapToSlice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#FilterMapToSlice"&gt;FilterMapToSlice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#FilterKeys"&gt;FilterKeys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#FilterValues"&gt;FilterValues&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported math helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#range--rangefrom--rangewithsteps"&gt;Range / RangeFrom / RangeWithSteps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#clamp"&gt;Clamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#sum"&gt;Sum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#sumby"&gt;SumBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#product"&gt;Product&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#productby"&gt;ProductBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#mean"&gt;Mean&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#meanby"&gt;MeanBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#mode"&gt;Mode&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported helpers for strings:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#randomstring"&gt;RandomString&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#substring"&gt;Substring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#chunkstring"&gt;ChunkString&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#runelength"&gt;RuneLength&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#pascalcase"&gt;PascalCase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#camelcase"&gt;CamelCase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#kebabcase"&gt;KebabCase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#snakecase"&gt;SnakeCase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#words"&gt;Words&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#capitalize"&gt;Capitalize&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#ellipsis"&gt;Ellipsis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported helpers for tuples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#t2---t9"&gt;T2 -&amp;gt; T9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#unpack2---unpack9"&gt;Unpack2 -&amp;gt; Unpack9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#zip2---zip9"&gt;Zip2 -&amp;gt; Zip9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#zipby2---zipby9"&gt;ZipBy2 -&amp;gt; ZipBy9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#unzip2---unzip9"&gt;Unzip2 -&amp;gt; Unzip9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#unzipby2---unzipby9"&gt;UnzipBy2 -&amp;gt; UnzipBy9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#crossjoin2---crossjoin9"&gt;CrossJoin2 -&amp;gt; CrossJoin2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#crossjoinby2---crossjoinby9"&gt;CrossJoinBy2 -&amp;gt; CrossJoinBy2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported helpers for time and duration:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#duration"&gt;Duration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#duration0---duration10"&gt;Duration0 -&amp;gt; Duration10&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported helpers for channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#channeldispatcher"&gt;ChannelDispatcher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#slicetochannel"&gt;SliceToChannel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#channeltoslice"&gt;ChannelToSlice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#generator"&gt;Generator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#buffer"&gt;Buffer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#bufferwithcontext"&gt;BufferWithContext&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#bufferwithtimeout"&gt;BufferWithTimeout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fanin"&gt;FanIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fanout"&gt;FanOut&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported intersection helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#contains"&gt;Contains&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#containsby"&gt;ContainsBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#every"&gt;Every&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#everyby"&gt;EveryBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#some"&gt;Some&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#someby"&gt;SomeBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#none"&gt;None&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#noneby"&gt;NoneBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#intersect"&gt;Intersect&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#difference"&gt;Difference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#union"&gt;Union&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#without"&gt;Without&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#withoutby"&gt;WithoutBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#withoutempty"&gt;WithoutEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#withoutnth"&gt;WithoutNth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#ElementsMatch"&gt;ElementsMatch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#ElementsMatchBy"&gt;ElementsMatchBy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported search helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#indexof"&gt;IndexOf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#lastindexof"&gt;LastIndexOf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#hasprefix"&gt;HasPrefix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#hassuffix"&gt;HasSuffix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#find"&gt;Find&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#findindexof"&gt;FindIndexOf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#findlastindexof"&gt;FindLastIndexOf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#findorelse"&gt;FindOrElse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#findkey"&gt;FindKey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#findkeyby"&gt;FindKeyBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#finduniques"&gt;FindUniques&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#finduniquesby"&gt;FindUniquesBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#findduplicates"&gt;FindDuplicates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#findduplicatesby"&gt;FindDuplicatesBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#min"&gt;Min&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#minindex"&gt;MinIndex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#minby"&gt;MinBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#minindexby"&gt;MinIndexBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#earliest"&gt;Earliest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#earliestby"&gt;EarliestBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#max"&gt;Max&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#maxindex"&gt;MaxIndex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#maxby"&gt;MaxBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#maxindexby"&gt;MaxIndexBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#latest"&gt;Latest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#latestby"&gt;LatestBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#first"&gt;First&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#FirstOrEmpty"&gt;FirstOrEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#FirstOr"&gt;FirstOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#last"&gt;Last&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#LastOrEmpty"&gt;LastOrEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#LastOr"&gt;LastOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#nth"&gt;Nth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#nthor"&gt;NthOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#nthorempty"&gt;NthOrEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#sample"&gt;Sample&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#sampleby"&gt;SampleBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#samples"&gt;Samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#samplesby"&gt;SamplesBy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Conditional helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#ternary"&gt;Ternary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#ternaryf"&gt;TernaryF&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#if--elseif--else"&gt;If / ElseIf / Else&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#switch--case--default"&gt;Switch / Case / Default&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Type manipulation helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#isnil"&gt;IsNil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#isnotnil"&gt;IsNotNil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#toptr"&gt;ToPtr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#nil"&gt;Nil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#emptyabletoptr"&gt;EmptyableToPtr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fromptr"&gt;FromPtr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fromptror"&gt;FromPtrOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#tosliceptr"&gt;ToSlicePtr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fromsliceptr"&gt;FromSlicePtr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fromsliceptror"&gt;FromSlicePtrOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#toanyslice"&gt;ToAnySlice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fromanyslice"&gt;FromAnySlice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#empty"&gt;Empty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#isempty"&gt;IsEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#isnotempty"&gt;IsNotEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#coalesce"&gt;Coalesce&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#coalesceorempty"&gt;CoalesceOrEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#coalesceslice"&gt;CoalesceSlice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#coalescesliceorempty"&gt;CoalesceSliceOrEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#coalescemap"&gt;CoalesceMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#coalescemaporempty"&gt;CoalesceMapOrEmpty&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Function helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#partial"&gt;Partial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#partial2---partial5"&gt;Partial2 -&amp;gt; Partial5&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Concurrency helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#attempt"&gt;Attempt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#attemptwhile"&gt;AttemptWhile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#attemptwithdelay"&gt;AttemptWithDelay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#attemptwhilewithdelay"&gt;AttemptWhileWithDelay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#debounce"&gt;Debounce&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#debounceby"&gt;DebounceBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#throttle"&gt;Throttle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#throttle"&gt;ThrottleWithCount&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#throttle"&gt;ThrottleBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#throttle"&gt;ThrottleByWithCount&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#synchronize"&gt;Synchronize&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#async"&gt;Async&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#async0-6"&gt;Async{0-&amp;gt;6}&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#transaction"&gt;Transaction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#waitfor"&gt;WaitFor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#waitforwithcontext"&gt;WaitForWithContext&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Error handling:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#validate"&gt;Validate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#must"&gt;Must&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#try"&gt;Try&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#try0-6"&gt;Try1 -&amp;gt; Try6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#tryor"&gt;TryOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#tryor0-6"&gt;TryOr1 -&amp;gt; TryOr6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#trycatch"&gt;TryCatch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#trywitherrorvalue"&gt;TryWithErrorValue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#trycatchwitherrorvalue"&gt;TryCatchWithErrorValue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#errorsas"&gt;ErrorsAs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#assert"&gt;Assert&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#assertf"&gt;Assertf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Constraints:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clonable&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Filter&lt;/h3&gt; 
&lt;p&gt;Iterates over a collection and returns a slice of all the elements the predicate function returns &lt;code&gt;true&lt;/code&gt; for.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;even := lo.Filter([]int{1, 2, 3, 4}, func(x int, index int) bool {
    return x%2 == 0
})
// []int{2, 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Apjg3WeSi7K"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Mutable: like &lt;code&gt;lo.Filter()&lt;/code&gt;, but the slice is updated in place.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lom "github.com/samber/lo/mutable"

list := []int{1, 2, 3, 4}
newList := lom.Filter(list, func(x int) bool {
    return x%2 == 0
})

list
// []int{2, 4, 3, 4}

newList
// []int{2, 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Map&lt;/h3&gt; 
&lt;p&gt;Manipulates a slice of one type and transforms it into a slice of another type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import "github.com/samber/lo"

lo.Map([]int64{1, 2, 3, 4}, func(x int64, index int) string {
    return strconv.FormatInt(x, 10)
})
// []string{"1", "2", "3", "4"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/OkPcYAhBo0D"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Parallel processing: like &lt;code&gt;lo.Map()&lt;/code&gt;, but the mapper function is called in a goroutine. Results are returned in the same order.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lop "github.com/samber/lo/parallel"

lop.Map([]int64{1, 2, 3, 4}, func(x int64, _ int) string {
    return strconv.FormatInt(x, 10)
})
// []string{"1", "2", "3", "4"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/sCJaB3quRMC"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Mutable: like &lt;code&gt;lo.Map()&lt;/code&gt;, but the slice is updated in place.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lom "github.com/samber/lo/mutable"

list := []int{1, 2, 3, 4}
lom.Map(list, func(x int) int {
    return x*2
})
// []int{2, 4, 6, 8}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/0jY3Z0B7O_5"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;UniqMap&lt;/h3&gt; 
&lt;p&gt;Manipulates a slice and transforms it to a slice of another type with unique values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type User struct {
    Name string
    Age  int
}
users := []User{{Name: "Alex", Age: 10}, {Name: "Alex", Age: 12}, {Name: "Bob", Age: 11}, {Name: "Alice", Age: 20}}

names := lo.UniqMap(users, func(u User, index int) string {
    return u.Name
})
// []string{"Alex", "Bob", "Alice"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/fygzLBhvUdB"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FilterMap&lt;/h3&gt; 
&lt;p&gt;Returns a slice obtained after both filtering and mapping using the given callback function.&lt;/p&gt; 
&lt;p&gt;The callback function should return two values: the result of the mapping operation and whether the result element should be included or not.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;matching := lo.FilterMap([]string{"cpu", "gpu", "mouse", "keyboard"}, func(x string, _ int) (string, bool) {
    if strings.HasSuffix(x, "pu") {
        return "xpu", true
    }
    return "", false
})
// []string{"xpu", "xpu"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/-AuYXfy7opz"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FlatMap&lt;/h3&gt; 
&lt;p&gt;Manipulates a slice and transforms and flattens it to a slice of another type. The transform function can either return a slice or a &lt;code&gt;nil&lt;/code&gt;, and in the &lt;code&gt;nil&lt;/code&gt; case no value is added to the final slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.FlatMap([]int64{0, 1, 2}, func(x int64, _ int) []string {
    return []string{
        strconv.FormatInt(x, 10),
        strconv.FormatInt(x, 10),
    }
})
// []string{"0", "0", "1", "1", "2", "2"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/YSoYmQTA8-U"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Reduce&lt;/h3&gt; 
&lt;p&gt;Reduces a collection to a single value. The value is calculated by accumulating the result of running each element in the collection through an accumulator function. Each successive invocation is supplied with the return value returned by the previous call.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;sum := lo.Reduce([]int{1, 2, 3, 4}, func(agg int, item int, _ int) int {
    return agg + item
}, 0)
// 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/R4UHXZNaaUG"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ReduceRight&lt;/h3&gt; 
&lt;p&gt;Like &lt;code&gt;lo.Reduce&lt;/code&gt; except that it iterates over elements of collection from right to left.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.ReduceRight([][]int{{0, 1}, {2, 3}, {4, 5}}, func(agg []int, item []int, _ int) []int {
    return append(agg, item...)
}, []int{})
// []int{4, 5, 2, 3, 0, 1}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Fq3W70l7wXF"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ForEach&lt;/h3&gt; 
&lt;p&gt;Iterates over elements of a collection and invokes the function over each element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import "github.com/samber/lo"

lo.ForEach([]string{"hello", "world"}, func(x string, _ int) {
    println(x)
})
// prints "hello\nworld\n"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/oofyiUPRf8t"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Parallel processing: like &lt;code&gt;lo.ForEach()&lt;/code&gt;, but the callback is called as a goroutine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lop "github.com/samber/lo/parallel"

lop.ForEach([]string{"hello", "world"}, func(x string, _ int) {
    println(x)
})
// prints "hello\nworld\n" or "world\nhello\n"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ForEachWhile&lt;/h3&gt; 
&lt;p&gt;Iterates over collection elements and invokes iteratee for each element collection return value decide to continue or break, like do while().&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;list := []int64{1, 2, -42, 4}

lo.ForEachWhile(list, func(x int64, _ int) bool {
	if x &amp;lt; 0 {
		return false
	}
	fmt.Println(x)
	return true
})
// 1
// 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/QnLGt35tnow"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Times&lt;/h3&gt; 
&lt;p&gt;Times invokes the iteratee n times, returning a slice of the results of each invocation. The iteratee is invoked with index as argument.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import "github.com/samber/lo"

lo.Times(3, func(i int) string {
    return strconv.FormatInt(int64(i), 10)
})
// []string{"0", "1", "2"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/vgQj3Glr6lT"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Parallel processing: like &lt;code&gt;lo.Times()&lt;/code&gt;, but callback is called in goroutine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lop "github.com/samber/lo/parallel"

lop.Times(3, func(i int) string {
    return strconv.FormatInt(int64(i), 10)
})
// []string{"0", "1", "2"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Uniq&lt;/h3&gt; 
&lt;p&gt;Returns a duplicate-free version of a slice, in which only the first occurrence of each element is kept. The order of result values is determined by the order they occur in the slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;uniqValues := lo.Uniq([]int{1, 2, 2, 1})
// []int{1, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/DTzbeXZ6iEN"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;UniqBy&lt;/h3&gt; 
&lt;p&gt;Returns a duplicate-free version of a slice, in which only the first occurrence of each element is kept. The order of result values is determined by the order they occur in the slice. It accepts &lt;code&gt;iteratee&lt;/code&gt; which is invoked for each element in the slice to generate the criterion by which uniqueness is computed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;uniqValues := lo.UniqBy([]int{0, 1, 2, 3, 4, 5}, func(i int) int {
    return i%3
})
// []int{0, 1, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/g42Z3QSb53u"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;GroupBy&lt;/h3&gt; 
&lt;p&gt;Returns an object composed of keys generated from the results of running each element of collection through iteratee.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lo "github.com/samber/lo"

groups := lo.GroupBy([]int{0, 1, 2, 3, 4, 5}, func(i int) int {
    return i%3
})
// map[int][]int{0: []int{0, 3}, 1: []int{1, 4}, 2: []int{2, 5}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/XnQBd_v6brd"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Parallel processing: like &lt;code&gt;lo.GroupBy()&lt;/code&gt;, but callback is called in goroutine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lop "github.com/samber/lo/parallel"

lop.GroupBy([]int{0, 1, 2, 3, 4, 5}, func(i int) int {
    return i%3
})
// map[int][]int{0: []int{0, 3}, 1: []int{1, 4}, 2: []int{2, 5}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;GroupByMap&lt;/h3&gt; 
&lt;p&gt;Returns an object composed of keys generated from the results of running each element of collection through iteratee.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lo "github.com/samber/lo"

groups := lo.GroupByMap([]int{0, 1, 2, 3, 4, 5}, func(i int) (int, int) {
    return i%3, i*2
})
// map[int][]int{0: []int{0, 6}, 1: []int{2, 8}, 2: []int{4, 10}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/iMeruQ3_W80"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Chunk&lt;/h3&gt; 
&lt;p&gt;Returns a slice of elements split into groups of length size. If the slice can't be split evenly, the final chunk will be the remaining elements.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.Chunk([]int{0, 1, 2, 3, 4, 5}, 2)
// [][]int{{0, 1}, {2, 3}, {4, 5}}

lo.Chunk([]int{0, 1, 2, 3, 4, 5, 6}, 2)
// [][]int{{0, 1}, {2, 3}, {4, 5}, {6}}

lo.Chunk([]int{}, 2)
// [][]int{}

lo.Chunk([]int{0}, 2)
// [][]int{{0}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/kEMkFbdu85g"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;PartitionBy&lt;/h3&gt; 
&lt;p&gt;Returns a slice of elements split into groups. The order of grouped values is determined by the order they occur in collection. The grouping is generated from the results of running each element of collection through iteratee.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lo "github.com/samber/lo"

partitions := lo.PartitionBy([]int{-2, -1, 0, 1, 2, 3, 4, 5}, func(x int) string {
    if x &amp;lt; 0 {
        return "negative"
    } else if x%2 == 0 {
        return "even"
    }
    return "odd"
})
// [][]int{{-2, -1}, {0, 2, 4}, {1, 3, 5}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/NfQ_nGjkgXW"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Parallel processing: like &lt;code&gt;lo.PartitionBy()&lt;/code&gt;, but callback is called in goroutine. Results are returned in the same order.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lop "github.com/samber/lo/parallel"

partitions := lop.PartitionBy([]int{-2, -1, 0, 1, 2, 3, 4, 5}, func(x int) string {
    if x &amp;lt; 0 {
        return "negative"
    } else if x%2 == 0 {
        return "even"
    }
    return "odd"
})
// [][]int{{-2, -1}, {0, 2, 4}, {1, 3, 5}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Flatten&lt;/h3&gt; 
&lt;p&gt;Returns a slice a single level deep.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;flat := lo.Flatten([][]int{{0, 1}, {2, 3, 4, 5}})
// []int{0, 1, 2, 3, 4, 5}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/rbp9ORaMpjw"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Interleave&lt;/h3&gt; 
&lt;p&gt;Round-robin alternating input slices and sequentially appending value at index into result.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;interleaved := lo.Interleave([]int{1, 4, 7}, []int{2, 5, 8}, []int{3, 6, 9})
// []int{1, 2, 3, 4, 5, 6, 7, 8, 9}

interleaved := lo.Interleave([]int{1}, []int{2, 5, 8}, []int{3, 6}, []int{4, 7, 9, 10})
// []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/-RJkTLQEDVt"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Shuffle&lt;/h3&gt; 
&lt;p&gt;Returns a slice of shuffled values. Uses the Fisher-Yates shuffle algorithm.&lt;/p&gt; 
&lt;p&gt;‚ö†Ô∏è This helper is &lt;strong&gt;mutable&lt;/strong&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lom "github.com/samber/lo/mutable"

list := []int{0, 1, 2, 3, 4, 5}
lom.Shuffle(list)

list
// []int{1, 4, 0, 3, 5, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/2xb3WdLjeSJ"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Reverse&lt;/h3&gt; 
&lt;p&gt;Reverses a slice so that the first element becomes the last, the second element becomes the second to last, and so on.&lt;/p&gt; 
&lt;p&gt;‚ö†Ô∏è This helper is &lt;strong&gt;mutable&lt;/strong&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lom "github.com/samber/lo/mutable"

list := []int{0, 1, 2, 3, 4, 5}
lom.Reverse(list)

list
// []int{5, 4, 3, 2, 1, 0}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/O-M5pmCRgzV"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Fill&lt;/h3&gt; 
&lt;p&gt;Fills elements of a slice with &lt;code&gt;initial&lt;/code&gt; value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type foo struct {
  bar string
}

func (f foo) Clone() foo {
  return foo{f.bar}
}

initializedSlice := lo.Fill([]foo{foo{"a"}, foo{"a"}}, foo{"b"})
// []foo{foo{"b"}, foo{"b"}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/VwR34GzqEub"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Repeat&lt;/h3&gt; 
&lt;p&gt;Builds a slice with N copies of initial value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type foo struct {
  bar string
}

func (f foo) Clone() foo {
  return foo{f.bar}
}

slice := lo.Repeat(2, foo{"a"})
// []foo{foo{"a"}, foo{"a"}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/g3uHXbmc3b6"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;RepeatBy&lt;/h3&gt; 
&lt;p&gt;Builds a slice with values returned by N calls of callback.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;slice := lo.RepeatBy(0, func (i int) string {
    return strconv.FormatInt(int64(math.Pow(float64(i), 2)), 10)
})
// []string{}

slice := lo.RepeatBy(5, func(i int) string {
    return strconv.FormatInt(int64(math.Pow(float64(i), 2)), 10)
})
// []string{"0", "1", "4", "9", "16"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/ozZLCtX_hNU"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;KeyBy&lt;/h3&gt; 
&lt;p&gt;Transforms a slice or a slice of structs to a map based on a pivot callback.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := lo.KeyBy([]string{"a", "aa", "aaa"}, func(str string) int {
    return len(str)
})
// map[int]string{1: "a", 2: "aa", 3: "aaa"}

type Character struct {
  dir  string
  code int
}
characters := []Character{
    {dir: "left", code: 97},
    {dir: "right", code: 100},
}
result := lo.KeyBy(characters, func(char Character) string {
    return string(rune(char.code))
})
//map[a:{dir:left code:97} d:{dir:right code:100}]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/mdaClUAT-zZ"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;SliceToMap (alias: Associate)&lt;/h3&gt; 
&lt;p&gt;Returns a map containing key-value pairs provided by transform function applied to elements of the given slice. If any of two pairs have the same key the last one gets added to the map.&lt;/p&gt; 
&lt;p&gt;The order of keys in returned map is not specified and is not guaranteed to be the same from the original slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;in := []*foo{{baz: "apple", bar: 1}, {baz: "banana", bar: 2}}

aMap := lo.SliceToMap(in, func (f *foo) (string, int) {
    return f.baz, f.bar
})
// map[string][int]{ "apple":1, "banana":2 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/WHa2CfMO3Lr"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FilterSliceToMap&lt;/h3&gt; 
&lt;p&gt;Returns a map containing key-value pairs provided by transform function applied to elements of the given slice.&lt;/p&gt; 
&lt;p&gt;If any of two pairs have the same key the last one gets added to the map.&lt;/p&gt; 
&lt;p&gt;The order of keys in returned map is not specified and is not guaranteed to be the same from the original slice.&lt;/p&gt; 
&lt;p&gt;The third return value of the transform function is a boolean that indicates whether the key-value pair should be included in the map.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;list := []string{"a", "aa", "aaa"}

result := lo.FilterSliceToMap(list, func(str string) (string, int, bool) {
    return str, len(str), len(str) &amp;gt; 1
})
// map[string][int]{"aa":2 "aaa":3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/2z0rDz2ZSGU"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Keyify&lt;/h3&gt; 
&lt;p&gt;Returns a map with each unique element of the slice as a key.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;set := lo.Keyify([]int{1, 1, 2, 3, 4})
// map[int]struct{}{1:{}, 2:{}, 3:{}, 4:{}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/RYhhM_csqIG"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Drop&lt;/h3&gt; 
&lt;p&gt;Drops n elements from the beginning of a slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;l := lo.Drop([]int{0, 1, 2, 3, 4, 5}, 2)
// []int{2, 3, 4, 5}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/JswS7vXRJP2"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;DropRight&lt;/h3&gt; 
&lt;p&gt;Drops n elements from the end of a slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;l := lo.DropRight([]int{0, 1, 2, 3, 4, 5}, 2)
// []int{0, 1, 2, 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/GG0nXkSJJa3"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;DropWhile&lt;/h3&gt; 
&lt;p&gt;Drop elements from the beginning of a slice while the predicate returns true.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;l := lo.DropWhile([]string{"a", "aa", "aaa", "aa", "aa"}, func(val string) bool {
    return len(val) &amp;lt;= 2
})
// []string{"aaa", "aa", "aa"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/7gBPYw2IK16"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;DropRightWhile&lt;/h3&gt; 
&lt;p&gt;Drop elements from the end of a slice while the predicate returns true.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;l := lo.DropRightWhile([]string{"a", "aa", "aaa", "aa", "aa"}, func(val string) bool {
    return len(val) &amp;lt;= 2
})
// []string{"a", "aa", "aaa"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/3-n71oEC0Hz"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;DropByIndex&lt;/h3&gt; 
&lt;p&gt;Drops elements from a slice by the index. A negative index will drop elements from the end of the slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;l := lo.DropByIndex([]int{0, 1, 2, 3, 4, 5}, 2, 4, -1)
// []int{0, 1, 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/JswS7vXRJP2"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Reject&lt;/h3&gt; 
&lt;p&gt;The opposite of Filter, this method returns the elements of collection that predicate does not return true for.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;odd := lo.Reject([]int{1, 2, 3, 4}, func(x int, _ int) bool {
    return x%2 == 0
})
// []int{1, 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/YkLMODy1WEL"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;RejectMap&lt;/h3&gt; 
&lt;p&gt;The opposite of FilterMap, this method returns a slice obtained after both filtering and mapping using the given callback function.&lt;/p&gt; 
&lt;p&gt;The callback function should return two values:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;the result of the mapping operation and&lt;/li&gt; 
 &lt;li&gt;whether the result element should be included or not.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;items := lo.RejectMap([]int{1, 2, 3, 4}, func(x int, _ int) (int, bool) {
    return x*10, x%2 == 0
})
// []int{10, 30}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FilterReject&lt;/h3&gt; 
&lt;p&gt;Mixes Filter and Reject, this method returns two slices, one for the elements of collection that predicate returns true for and one for the elements that predicate does not return true for.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;kept, rejected := lo.FilterReject([]int{1, 2, 3, 4}, func(x int, _ int) bool {
    return x%2 == 0
})
// []int{2, 4}
// []int{1, 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Count&lt;/h3&gt; 
&lt;p&gt;Counts the number of elements in the collection that equal value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;count := lo.Count([]int{1, 5, 1}, 1)
// 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Y3FlK54yveC"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;CountBy&lt;/h3&gt; 
&lt;p&gt;Counts the number of elements in the collection for which predicate is true.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;count := lo.CountBy([]int{1, 5, 1}, func(i int) bool {
    return i &amp;lt; 4
})
// 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/ByQbNYQQi4X"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;CountValues&lt;/h3&gt; 
&lt;p&gt;Counts the number of each element in the collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.CountValues([]int{})
// map[int]int{}

lo.CountValues([]int{1, 2})
// map[int]int{1: 1, 2: 1}

lo.CountValues([]int{1, 2, 2})
// map[int]int{1: 1, 2: 2}

lo.CountValues([]string{"foo", "bar", ""})
// map[string]int{"": 1, "foo": 1, "bar": 1}

lo.CountValues([]string{"foo", "bar", "bar"})
// map[string]int{"foo": 1, "bar": 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/-p-PyLT4dfy"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;CountValuesBy&lt;/h3&gt; 
&lt;p&gt;Counts the number of each element in the collection. It is equivalent to chaining lo.Map and lo.CountValues.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;isEven := func(v int) bool {
    return v%2==0
}

lo.CountValuesBy([]int{}, isEven)
// map[bool]int{}

lo.CountValuesBy([]int{1, 2}, isEven)
// map[bool]int{false: 1, true: 1}

lo.CountValuesBy([]int{1, 2, 2}, isEven)
// map[bool]int{false: 1, true: 2}

length := func(v string) int {
    return len(v)
}

lo.CountValuesBy([]string{"foo", "bar", ""}, length)
// map[int]int{0: 1, 3: 2}

lo.CountValuesBy([]string{"foo", "bar", "bar"}, length)
// map[int]int{3: 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/2U0dG1SnOmS"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Subset&lt;/h3&gt; 
&lt;p&gt;Returns a copy of a slice from &lt;code&gt;offset&lt;/code&gt; up to &lt;code&gt;length&lt;/code&gt; elements. Like &lt;code&gt;slice[start:start+length]&lt;/code&gt;, but does not panic on overflow.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;in := []int{0, 1, 2, 3, 4}

sub := lo.Subset(in, 2, 3)
// []int{2, 3, 4}

sub := lo.Subset(in, -4, 3)
// []int{1, 2, 3}

sub := lo.Subset(in, -2, math.MaxUint)
// []int{3, 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/tOQu1GhFcog"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Slice&lt;/h3&gt; 
&lt;p&gt;Returns a copy of a slice from &lt;code&gt;start&lt;/code&gt; up to, but not including &lt;code&gt;end&lt;/code&gt;. Like &lt;code&gt;slice[start:end]&lt;/code&gt;, but does not panic on overflow.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;in := []int{0, 1, 2, 3, 4}

slice := lo.Slice(in, 0, 5)
// []int{0, 1, 2, 3, 4}

slice := lo.Slice(in, 2, 3)
// []int{2}

slice := lo.Slice(in, 2, 6)
// []int{2, 3, 4}

slice := lo.Slice(in, 4, 3)
// []int{}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/8XWYhfMMA1h"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Replace&lt;/h3&gt; 
&lt;p&gt;Returns a copy of the slice with the first n non-overlapping instances of old replaced by new.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;in := []int{0, 1, 0, 1, 2, 3, 0}

slice := lo.Replace(in, 0, 42, 1)
// []int{42, 1, 0, 1, 2, 3, 0}

slice := lo.Replace(in, -1, 42, 1)
// []int{0, 1, 0, 1, 2, 3, 0}

slice := lo.Replace(in, 0, 42, 2)
// []int{42, 1, 42, 1, 2, 3, 0}

slice := lo.Replace(in, 0, 42, -1)
// []int{42, 1, 42, 1, 2, 3, 42}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/XfPzmf9gql6"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ReplaceAll&lt;/h3&gt; 
&lt;p&gt;Returns a copy of the slice with all non-overlapping instances of old replaced by new.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;in := []int{0, 1, 0, 1, 2, 3, 0}

slice := lo.ReplaceAll(in, 0, 42)
// []int{42, 1, 42, 1, 2, 3, 42}

slice := lo.ReplaceAll(in, -1, 42)
// []int{0, 1, 0, 1, 2, 3, 0}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/a9xZFUHfYcV"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Compact&lt;/h3&gt; 
&lt;p&gt;Returns a slice of all non-zero elements.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;in := []string{"", "foo", "", "bar", ""}

slice := lo.Compact(in)
// []string{"foo", "bar"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/tXiy-iK6PAc"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;IsSorted&lt;/h3&gt; 
&lt;p&gt;Checks if a slice is sorted.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;slice := lo.IsSorted([]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/mc3qR-t4mcx"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;IsSortedByKey&lt;/h3&gt; 
&lt;p&gt;Checks if a slice is sorted by iteratee.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;slice := lo.IsSortedByKey([]string{"a", "bb", "ccc"}, func(s string) int {
    return len(s)
})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/wiG6XyBBu49"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Splice&lt;/h3&gt; 
&lt;p&gt;Splice inserts multiple elements at index i. A negative index counts back from the end of the slice. The helper is protected against overflow errors.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.Splice([]string{"a", "b"}, 1, "1", "2")
// []string{"a", "1", "2", "b"}

// negative
result = lo.Splice([]string{"a", "b"}, -1, "1", "2")
// []string{"a", "1", "2", "b"}

// overflow
result = lo.Splice([]string{"a", "b"}, 42, "1", "2")
// []string{"a", "b", "1", "2"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/G5_GhkeSUBA"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Cut&lt;/h3&gt; 
&lt;p&gt;Slices collection around the first instance of separator, returning the part of collection before and after separator. The found result reports whether separator appears in collection. If separator does not appear in s, cut returns collection, empty slice of []T, false.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;actualLeft, actualRight, result = lo.Cut([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{"b", "c", "d"})
// actualLeft: []string{"a"}
// actualRight: []string{"e", "f", "g"}
// result: true

result = lo.Cut([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{"z"})
// actualLeft: []string{"a", "b", "c", "d", "e", "f", "g"}
// actualRight: []string{}
// result: false

result = lo.Cut([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{"a", "b"})
// actualLeft: []string{}
// actualRight: []string{"c", "d", "e", "f", "g"}
// result: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/GiL3qhpIP3f"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;CutPrefix&lt;/h3&gt; 
&lt;p&gt;Returns collection without the provided leading prefix []T and reports whether it found the prefix. If s doesn't start with prefix, CutPrefix returns collection, false. If prefix is the empty []T, CutPrefix returns collection, true.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;actualRight, result = lo.CutPrefix([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{"a", "b", "c"})
// actualRight: []string{"d", "e", "f", "g"}
// result: true

result = lo.CutPrefix([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{"b"})
// actualRight: []string{"a", "b", "c", "d", "e", "f", "g"}
// result: false

result = lo.CutPrefix([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{})
// actualRight: []string{"a", "b", "c", "d", "e", "f", "g"}
// result: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/7Plak4a1ICl"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;CutSuffix&lt;/h3&gt; 
&lt;p&gt;Returns collection without the provided ending suffix []T and reports whether it found the suffix. If it doesn't end with suffix, CutSuffix returns collection, false. If suffix is the empty []T, CutSuffix returns collection, true.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;actualLeft, result = lo.CutSuffix([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{"f", "g"})
// actualLeft: []string{"a", "b", "c", "d", "e"}
// result: true

actualLeft, result = lo.CutSuffix([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{"b"})
// actualLeft: []string{"a", "b", "c", "d", "e", "f", "g"}
// result: false

actualLeft, result = lo.CutSuffix([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{})
// actualLeft: []string{"a", "b", "c", "d", "e", "f", "g"}
// result: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/7FKfBFvPTaT"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Trim&lt;/h3&gt; 
&lt;p&gt;Removes all the leading and trailing cutset from the collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.Trim([]int{0, 1, 2, 0, 3, 0}, []int{1, 0})
// []int{2, 0, 3}

result := lo.Trim([]string{"hello", "world", " "}, []string{" ", ""})
// []string{"hello", "world"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/1an9mxLdRG5"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TrimLeft&lt;/h3&gt; 
&lt;p&gt;Removes all the leading cutset from the collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.TrimLeft([]int{0, 1, 2, 0, 3, 0}, []int{1, 0})
// []int{2, 0, 3, 0}

result := lo.TrimLeft([]string{"hello", "world", " "}, []string{" ", ""})
// []string{"hello", "world", " "}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/74aqfAYLmyi"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TrimPrefix&lt;/h3&gt; 
&lt;p&gt;Removes all the leading prefix from the collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.TrimPrefix([]int{1, 2, 1, 2, 3, 1, 2, 4}, []int{1, 2})
// []int{3, 1, 2, 4}

result := lo.TrimPrefix([]string{"hello", "world", "hello", "test"}, []string{"hello"})
// []string{"world", "hello", "test"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/SHO6X-YegPg"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TrimRight&lt;/h3&gt; 
&lt;p&gt;Removes all the trailing cutset from the collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.TrimRight([]int{0, 1, 2, 0, 3, 0}, []int{0, 3})
// []int{0, 1, 2}

result := lo.TrimRight([]string{"hello", "world", "  "}, []string{" ", ""})
// []string{"hello", "world", ""}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/MRpAfR6sf0g"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TrimSuffix&lt;/h3&gt; 
&lt;p&gt;Removes all the trailing suffix from the collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.TrimSuffix([]int{1, 2, 3, 1, 2, 4, 2, 4, 2, 4}, []int{2, 4})
// []int{1, 2, 3, 1}

result := lo.TrimSuffix([]string{"hello", "world", "hello", "test"}, []string{"test"})
// []string{"hello", "world", "hello"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/IjEUrV0iofq"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Keys&lt;/h3&gt; 
&lt;p&gt;Creates a slice of the map keys.&lt;/p&gt; 
&lt;p&gt;Use the UniqKeys variant to deduplicate common keys.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;keys := lo.Keys(map[string]int{"foo": 1, "bar": 2})
// []string{"foo", "bar"}

keys := lo.Keys(map[string]int{"foo": 1, "bar": 2}, map[string]int{"baz": 3})
// []string{"foo", "bar", "baz"}

keys := lo.Keys(map[string]int{"foo": 1, "bar": 2}, map[string]int{"bar": 3})
// []string{"foo", "bar", "bar"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Uu11fHASqrU"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;UniqKeys&lt;/h3&gt; 
&lt;p&gt;Creates a slice of unique map keys.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;keys := lo.UniqKeys(map[string]int{"foo": 1, "bar": 2}, map[string]int{"baz": 3})
// []string{"foo", "bar", "baz"}

keys := lo.UniqKeys(map[string]int{"foo": 1, "bar": 2}, map[string]int{"bar": 3})
// []string{"foo", "bar"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/TPKAb6ILdHk"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;HasKey&lt;/h3&gt; 
&lt;p&gt;Returns whether the given key exists.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;exists := lo.HasKey(map[string]int{"foo": 1, "bar": 2}, "foo")
// true

exists := lo.HasKey(map[string]int{"foo": 1, "bar": 2}, "baz")
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/aVwubIvECqS"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Values&lt;/h3&gt; 
&lt;p&gt;Creates a slice of the map values.&lt;/p&gt; 
&lt;p&gt;Use the UniqValues variant to deduplicate common values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;values := lo.Values(map[string]int{"foo": 1, "bar": 2})
// []int{1, 2}

values := lo.Values(map[string]int{"foo": 1, "bar": 2}, map[string]int{"baz": 3})
// []int{1, 2, 3}

values := lo.Values(map[string]int{"foo": 1, "bar": 2}, map[string]int{"bar": 2})
// []int{1, 2, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/nnRTQkzQfF6"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;UniqValues&lt;/h3&gt; 
&lt;p&gt;Creates a slice of unique map values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;values := lo.UniqValues(map[string]int{"foo": 1, "bar": 2})
// []int{1, 2}

values := lo.UniqValues(map[string]int{"foo": 1, "bar": 2}, map[string]int{"baz": 3})
// []int{1, 2, 3}

values := lo.UniqValues(map[string]int{"foo": 1, "bar": 2}, map[string]int{"bar": 2})
// []int{1, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/nf6bXMh7rM3"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ValueOr&lt;/h3&gt; 
&lt;p&gt;Returns the value of the given key or the fallback value if the key is not present.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;value := lo.ValueOr(map[string]int{"foo": 1, "bar": 2}, "foo", 42)
// 1

value := lo.ValueOr(map[string]int{"foo": 1, "bar": 2}, "baz", 42)
// 42
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/bAq9mHErB4V"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;PickBy&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given predicate.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := lo.PickBy(map[string]int{"foo": 1, "bar": 2, "baz": 3}, func(key string, value int) bool {
    return value%2 == 1
})
// map[string]int{"foo": 1, "baz": 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/kdg8GR_QMmf"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;PickByKeys&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given keys.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := lo.PickByKeys(map[string]int{"foo": 1, "bar": 2, "baz": 3}, []string{"foo", "baz"})
// map[string]int{"foo": 1, "baz": 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/R1imbuci9qU"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;PickByValues&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := lo.PickByValues(map[string]int{"foo": 1, "bar": 2, "baz": 3}, []int{1, 3})
// map[string]int{"foo": 1, "baz": 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/1zdzSvbfsJc"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;OmitBy&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given predicate.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := lo.OmitBy(map[string]int{"foo": 1, "bar": 2, "baz": 3}, func(key string, value int) bool {
    return value%2 == 1
})
// map[string]int{"bar": 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/EtBsR43bdsd"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;OmitByKeys&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given keys.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := lo.OmitByKeys(map[string]int{"foo": 1, "bar": 2, "baz": 3}, []string{"foo", "baz"})
// map[string]int{"bar": 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/t1QjCrs-ysk"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;OmitByValues&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := lo.OmitByValues(map[string]int{"foo": 1, "bar": 2, "baz": 3}, []int{1, 3})
// map[string]int{"bar": 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/9UYZi-hrs8j"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Entries (alias: ToPairs)&lt;/h3&gt; 
&lt;p&gt;Transforms a map into a slice of key/value pairs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;entries := lo.Entries(map[string]int{"foo": 1, "bar": 2})
// []lo.Entry[string, int]{
//     {
//         Key: "foo",
//         Value: 1,
//     },
//     {
//         Key: "bar",
//         Value: 2,
//     },
// }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/_t4Xe34-Nl5"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FromEntries (alias: FromPairs)&lt;/h3&gt; 
&lt;p&gt;Transforms a slice of key/value pairs into a map.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := lo.FromEntries([]lo.Entry[string, int]{
    {
        Key: "foo",
        Value: 1,
    },
    {
        Key: "bar",
        Value: 2,
    },
})
// map[string]int{"foo": 1, "bar": 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/oIr5KHFGCEN"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Invert&lt;/h3&gt; 
&lt;p&gt;Creates a map composed of the inverted keys and values. If map contains duplicate values, subsequent values overwrite property assignments of previous values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m1 := lo.Invert(map[string]int{"a": 1, "b": 2})
// map[int]string{1: "a", 2: "b"}

m2 := lo.Invert(map[string]int{"a": 1, "b": 2, "c": 1})
// map[int]string{1: "c", 2: "b"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/rFQ4rak6iA1"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Assign&lt;/h3&gt; 
&lt;p&gt;Merges multiple maps from left to right.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;mergedMaps := lo.Assign(
    map[string]int{"a": 1, "b": 2},
    map[string]int{"b": 3, "c": 4},
)
// map[string]int{"a": 1, "b": 3, "c": 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/VhwfJOyxf5o"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ChunkEntries&lt;/h3&gt; 
&lt;p&gt;Splits a map into a slice of elements in groups of length equal to its size. If the map cannot be split evenly, the final chunk will contain the remaining elements.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;maps := lo.ChunkEntries(
    map[string]int{
        "a": 1,
        "b": 2,
        "c": 3,
        "d": 4,
        "e": 5,
    },
    3,
)
// []map[string]int{
//    {"a": 1, "b": 2, "c": 3},
//    {"d": 4, "e": 5},
// }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/X_YQL6mmoD-"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;MapKeys&lt;/h3&gt; 
&lt;p&gt;Manipulates map keys and transforms it to a map of another type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m2 := lo.MapKeys(map[int]int{1: 1, 2: 2, 3: 3, 4: 4}, func(_ int, v int) string {
    return strconv.FormatInt(int64(v), 10)
})
// map[string]int{"1": 1, "2": 2, "3": 3, "4": 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/9_4WPIqOetJ"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;MapValues&lt;/h3&gt; 
&lt;p&gt;Manipulates map values and transforms it to a map of another type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m1 := map[int]int64{1: 1, 2: 2, 3: 3}

m2 := lo.MapValues(m1, func(x int64, _ int) string {
    return strconv.FormatInt(x, 10)
})
// map[int]string{1: "1", 2: "2", 3: "3"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/T_8xAfvcf0W"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;MapEntries&lt;/h3&gt; 
&lt;p&gt;Manipulates map entries and transforms it to a map of another type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;in := map[string]int{"foo": 1, "bar": 2}

out := lo.MapEntries(in, func(k string, v int) (int, string) {
    return v,k
})
// map[int]string{1: "foo", 2: "bar"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/VuvNQzxKimT"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;MapToSlice&lt;/h3&gt; 
&lt;p&gt;Transforms a map into a slice based on specified iteratee.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := map[int]int64{1: 4, 2: 5, 3: 6}

s := lo.MapToSlice(m, func(k int, v int64) string {
    return fmt.Sprintf("%d_%d", k, v)
})
// []string{"1_4", "2_5", "3_6"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/ZuiCZpDt6LD"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FilterMapToSlice&lt;/h3&gt; 
&lt;p&gt;Transforms a map into a slice based on specified iteratee. The iteratee returns a value and a boolean. If the boolean is true, the value is added to the result slice.&lt;/p&gt; 
&lt;p&gt;If the boolean is false, the value is not added to the result slice. The order of the keys in the input map is not specified and the order of the keys in the output slice is not guaranteed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;kv := map[int]int64{1: 1, 2: 2, 3: 3, 4: 4}

result := lo.FilterMapToSlice(kv, func(k int, v int64) (string, bool) {
    return fmt.Sprintf("%d_%d", k, v), k%2 == 0
})
// []{"2_2", "4_4"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FilterKeys&lt;/h3&gt; 
&lt;p&gt;Transforms a map into a slice based on predicate returns true for specific elements. It is a mix of &lt;code&gt;lo.Filter()&lt;/code&gt; and &lt;code&gt;lo.Keys()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;kv := map[int]string{1: "foo", 2: "bar", 3: "baz"}

result := FilterKeys(kv, func(k int, v string) bool {
    return v == "foo"
})
// [1]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/OFlKXlPrBAe"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FilterValues&lt;/h3&gt; 
&lt;p&gt;Transforms a map into a slice based on predicate returns true for specific elements. It is a mix of &lt;code&gt;lo.Filter()&lt;/code&gt; and &lt;code&gt;lo.Values()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;kv := map[int]string{1: "foo", 2: "bar", 3: "baz"}

result := FilterValues(kv, func(k int, v string) bool {
    return v == "foo"
})
// ["foo"]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/YVD5r_h-LX-"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Range / RangeFrom / RangeWithSteps&lt;/h3&gt; 
&lt;p&gt;Creates a slice of numbers (positive and/or negative) progressing from start up to, but not including end.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.Range(4)
// [0, 1, 2, 3]

result := lo.Range(-4)
// [0, -1, -2, -3]

result := lo.RangeFrom(1, 5)
// [1, 2, 3, 4, 5]

result := lo.RangeFrom[float64](1.0, 5)
// [1.0, 2.0, 3.0, 4.0, 5.0]

result := lo.RangeWithSteps(0, 20, 5)
// [0, 5, 10, 15]

result := lo.RangeWithSteps[float32](-1.0, -4.0, -1.0)
// [-1.0, -2.0, -3.0]

result := lo.RangeWithSteps(1, 4, -1)
// []

result := lo.Range(0)
// []
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/0r6VimXAi9H"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Clamp&lt;/h3&gt; 
&lt;p&gt;Clamps number within the inclusive lower and upper bounds.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;r1 := lo.Clamp(0, -10, 10)
// 0

r2 := lo.Clamp(-42, -10, 10)
// -10

r3 := lo.Clamp(42, -10, 10)
// 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/RU4lJNC2hlI"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Sum&lt;/h3&gt; 
&lt;p&gt;Sums the values in a collection.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;list := []int{1, 2, 3, 4, 5}
sum := lo.Sum(list)
// 15
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/upfeJVqs4Bt"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;SumBy&lt;/h3&gt; 
&lt;p&gt;Summarizes the values in a collection using the given return value from the iteration function.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;strings := []string{"foo", "bar"}
sum := lo.SumBy(strings, func(item string) int {
    return len(item)
})
// 6
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Product&lt;/h3&gt; 
&lt;p&gt;Calculates the product of the values in a collection.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;list := []int{1, 2, 3, 4, 5}
product := lo.Product(list)
// 120
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/2_kjM_smtAH"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ProductBy&lt;/h3&gt; 
&lt;p&gt;Calculates the product of the values in a collection using the given return value from the iteration function.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;strings := []string{"foo", "bar"}
product := lo.ProductBy(strings, func(item string) int {
    return len(item)
})
// 9
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/wadzrWr9Aer"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Mean&lt;/h3&gt; 
&lt;p&gt;Calculates the mean of a collection of numbers.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;mean := lo.Mean([]int{2, 3, 4, 5})
// 3

mean := lo.Mean([]float64{2, 3, 4, 5})
// 3.5

mean := lo.Mean([]float64{})
// 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MeanBy&lt;/h3&gt; 
&lt;p&gt;Calculates the mean of a collection of numbers using the given return value from the iteration function.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;list := []string{"aa", "bbb", "cccc", "ddddd"}
mapper := func(item string) float64 {
    return float64(len(item))
}

mean := lo.MeanBy(list, mapper)
// 3.5

mean := lo.MeanBy([]float64{}, mapper)
// 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/j7TsVwBOZ7P"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Mode&lt;/h3&gt; 
&lt;p&gt;Calculates the mode (most frequent value) of a collection of numbers.&lt;/p&gt; 
&lt;p&gt;If multiple values have the same highest frequency, then multiple values are returned.&lt;/p&gt; 
&lt;p&gt;If the collection is empty, the zero value of &lt;code&gt;T[]&lt;/code&gt; is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;mode := lo.Mode([]int{2, 2, 3, 4})
// [2]

mode := lo.Mode([]float64{2, 2, 3, 3})
// [2, 3]

mode := lo.Mode([]float64{})
// []

mode := lo.Mode([]int{1, 2, 3, 4, 5, 6, 7, 8, 9})
// [1, 2, 3, 4, 5, 6, 7, 8, 9]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;RandomString&lt;/h3&gt; 
&lt;p&gt;Returns a random string of the specified length and made of the specified charset.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.RandomString(5, lo.LettersCharset)
// example: "eIGbt"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/rRseOQVVum4"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Substring&lt;/h3&gt; 
&lt;p&gt;Return part of a string.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;sub := lo.Substring("hello", 2, 3)
// "llo"

sub := lo.Substring("hello", -4, 3)
// "ell"

sub := lo.Substring("hello", -2, math.MaxUint)
// "lo"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/TQlxQi82Lu1"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ChunkString&lt;/h3&gt; 
&lt;p&gt;Returns a slice of strings split into groups of length size. If the string can't be split evenly, the final chunk will be the remaining characters.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.ChunkString("123456", 2)
// []string{"12", "34", "56"}

lo.ChunkString("1234567", 2)
// []string{"12", "34", "56", "7"}

lo.ChunkString("", 2)
// []string{""}

lo.ChunkString("1", 2)
// []string{"1"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/__FLTuJVz54"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;RuneLength&lt;/h3&gt; 
&lt;p&gt;An alias to utf8.RuneCountInString which returns the number of runes in string.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;sub := lo.RuneLength("hell√¥")
// 5

sub := len("hell√¥")
// 6
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/tuhgW_lWY8l"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;PascalCase&lt;/h3&gt; 
&lt;p&gt;Converts string to pascal case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.PascalCase("hello_world")
// HelloWorld
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Dy_V_6DUYhe"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;CamelCase&lt;/h3&gt; 
&lt;p&gt;Converts string to camel case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.CamelCase("hello_world")
// helloWorld
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Go6aKwUiq59"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;KebabCase&lt;/h3&gt; 
&lt;p&gt;Converts string to kebab case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.KebabCase("helloWorld")
// hello-world
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/96gT_WZnTVP"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;SnakeCase&lt;/h3&gt; 
&lt;p&gt;Converts string to snake case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.SnakeCase("HelloWorld")
// hello_world
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/ziB0V89IeVH"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Words&lt;/h3&gt; 
&lt;p&gt;Splits string into a slice of its words.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.Words("helloWorld")
// []string{"hello", "world"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/-f3VIQqiaVw"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Capitalize&lt;/h3&gt; 
&lt;p&gt;Converts the first character of string to upper case and the remaining to lower case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.Capitalize("heLLO")
// Hello
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/uLTZZQXqnsa"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Ellipsis&lt;/h3&gt; 
&lt;p&gt;Trims and truncates a string to a specified length in &lt;code&gt;bytes&lt;/code&gt; and appends an ellipsis if truncated. If the string contains non-ASCII characters (which may occupy multiple bytes in UTF-8), truncating by byte length may split a character in the middle, potentially resulting in garbled output.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.Ellipsis("  Lorem Ipsum  ", 5)
// Lo...

str := lo.Ellipsis("Lorem Ipsum", 100)
// Lorem Ipsum

str := lo.Ellipsis("Lorem Ipsum", 3)
// ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/qE93rgqe1TW"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;T2 -&amp;gt; T9&lt;/h3&gt; 
&lt;p&gt;Creates a tuple from a list of values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;tuple1 := lo.T2("x", 1)
// Tuple2[string, int]{A: "x", B: 1}

func example() (string, int) { return "y", 2 }
tuple2 := lo.T2(example())
// Tuple2[string, int]{A: "y", B: 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/IllL3ZO4BQm"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Unpack2 -&amp;gt; Unpack9&lt;/h3&gt; 
&lt;p&gt;Returns values contained in a tuple.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;r1, r2 := lo.Unpack2(lo.Tuple2[string, int]{"a", 1})
// "a", 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Unpack is also available as a method of TupleX.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;tuple2 := lo.T2("a", 1)
a, b := tuple2.Unpack()
// "a", 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/xVP_k0kJ96W"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Zip2 -&amp;gt; Zip9&lt;/h3&gt; 
&lt;p&gt;Zip creates a slice of grouped elements, the first of which contains the first elements of the given slices, the second of which contains the second elements of the given slices, and so on.&lt;/p&gt; 
&lt;p&gt;When collections are different sizes, the Tuple attributes are filled with zero value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;tuples := lo.Zip2([]string{"a", "b"}, []int{1, 2})
// []Tuple2[string, int]{{A: "a", B: 1}, {A: "b", B: 2}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/jujaA6GaJTp"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ZipBy2 -&amp;gt; ZipBy9&lt;/h3&gt; 
&lt;p&gt;ZipBy creates a slice of transformed elements, the first of which contains the first elements of the given slices, the second of which contains the second elements of the given slices, and so on.&lt;/p&gt; 
&lt;p&gt;When collections are different sizes, the Tuple attributes are filled with zero value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;items := lo.ZipBy2([]string{"a", "b"}, []int{1, 2}, func(a string, b int) string {
    return fmt.Sprintf("%s-%d", a, b)
})
// []string{"a-1", "b-2"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Unzip2 -&amp;gt; Unzip9&lt;/h3&gt; 
&lt;p&gt;Unzip accepts a slice of grouped elements and creates a slice regrouping the elements to their pre-zip configuration.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;a, b := lo.Unzip2([]Tuple2[string, int]{{A: "a", B: 1}, {A: "b", B: 2}})
// []string{"a", "b"}
// []int{1, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/ciHugugvaAW"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;UnzipBy2 -&amp;gt; UnzipBy9&lt;/h3&gt; 
&lt;p&gt;UnzipBy2 iterates over a collection and creates a slice regrouping the elements to their pre-zip configuration.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;a, b := lo.UnzipBy2([]string{"hello", "john", "doe"}, func(str string) (string, int) {
    return str, len(str)
})
// []string{"hello", "john", "doe"}
// []int{5, 4, 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CrossJoin2 -&amp;gt; CrossJoin9&lt;/h3&gt; 
&lt;p&gt;Combines every item from one list with every item from others. It is the cartesian product of lists received as arguments. Returns an empty list if a list is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.CrossJoin2([]string{"hello", "john", "doe"}, []int{1, 2})
// lo.Tuple2{"hello", 1}
// lo.Tuple2{"hello", 2}
// lo.Tuple2{"john", 1}
// lo.Tuple2{"john", 2}
// lo.Tuple2{"doe", 1}
// lo.Tuple2{"doe", 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CrossJoinBy2 -&amp;gt; CrossJoinBy9&lt;/h3&gt; 
&lt;p&gt;Combines every item from one list with every item from others. It is the cartesian product of lists received as arguments. The project function is used to create the output values. Returns an empty list if a list is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.CrossJoinBy2([]string{"hello", "john", "doe"}, []int{1, 2}, func(a A, b B) string {
    return fmt.Sprintf("%s - %d", a, b)
})
// "hello - 1"
// "hello - 2"
// "john - 1"
// "john - 2"
// "doe - 1"
// "doe - 2"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Duration&lt;/h3&gt; 
&lt;p&gt;Returns the time taken to execute a function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;duration := lo.Duration(func() {
    // very long job
})
// 3s
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/HQfbBbAXaFP"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Duration0 -&amp;gt; Duration10&lt;/h3&gt; 
&lt;p&gt;Returns the time taken to execute a function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;duration := lo.Duration0(func() {
    // very long job
})
// 3s

err, duration := lo.Duration1(func() error {
    // very long job
    return errors.New("an error")
})
// an error
// 3s

str, nbr, err, duration := lo.Duration3(func() (string, int, error) {
    // very long job
    return "hello", 42, nil
})
// hello
// 42
// nil
// 3s
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ChannelDispatcher&lt;/h3&gt; 
&lt;p&gt;Distributes messages from input channels into N child channels. Close events are propagated to children.&lt;/p&gt; 
&lt;p&gt;Underlying channels can have a fixed buffer capacity or be unbuffered when cap is 0.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ch := make(chan int, 42)
for i := 0; i &amp;lt;= 10; i++ {
    ch &amp;lt;- i
}

children := lo.ChannelDispatcher(ch, 5, 10, DispatchingStrategyRoundRobin[int])
// []&amp;lt;-chan int{...}

consumer := func(c &amp;lt;-chan int) {
    for {
        msg, ok := &amp;lt;-c
        if !ok {
            println("closed")

            break
        }

        println(msg)
    }
}

for i := range children {
    go consumer(children[i])
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/UZGu2wVg3J2"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Many distributions strategies are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/channel.go"&gt;lo.DispatchingStrategyRoundRobin&lt;/a&gt;: Distributes messages in a rotating sequential manner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/channel.go"&gt;lo.DispatchingStrategyRandom&lt;/a&gt;: Distributes messages in a random manner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/channel.go"&gt;lo.DispatchingStrategyWeightedRandom&lt;/a&gt;: Distributes messages in a weighted manner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/channel.go"&gt;lo.DispatchingStrategyFirst&lt;/a&gt;: Distributes messages in the first non-full channel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/channel.go"&gt;lo.DispatchingStrategyLeast&lt;/a&gt;: Distributes messages in the emptiest channel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/channel.go"&gt;lo.DispatchingStrategyMost&lt;/a&gt;: Distributes to the fullest channel.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Some strategies bring fallback, in order to favor non-blocking behaviors. See implementations.&lt;/p&gt; 
&lt;p&gt;For custom strategies, just implement the &lt;code&gt;lo.DispatchingStrategy&lt;/code&gt; prototype:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type DispatchingStrategy[T any] func(message T, messageIndex uint64, channels []&amp;lt;-chan T) int
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Eg:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type Message struct {
    TenantID uuid.UUID
}

func hash(id uuid.UUID) int {
    h := fnv.New32a()
    h.Write([]byte(id.String()))
    return int(h.Sum32())
}

// Routes messages per TenantID.
customStrategy := func(message string, messageIndex uint64, channels []&amp;lt;-chan string) int {
    destination := hash(message) % len(channels)

    // check if channel is full
    if len(channels[destination]) &amp;lt; cap(channels[destination]) {
        return destination
    }

    // fallback when child channel is full
    return utils.DispatchingStrategyRoundRobin(message, uint64(destination), channels)
}

children := lo.ChannelDispatcher(ch, 5, 10, customStrategy)
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;SliceToChannel&lt;/h3&gt; 
&lt;p&gt;Returns a read-only channel of collection elements. Channel is closed after last element. Channel capacity can be customized.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;list := []int{1, 2, 3, 4, 5}

for v := range lo.SliceToChannel(2, list) {
    println(v)
}
// prints 1, then 2, then 3, then 4, then 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/lIbSY3QmiEg"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ChannelToSlice&lt;/h3&gt; 
&lt;p&gt;Returns a slice built from channel items. Blocks until channel closes.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;list := []int{1, 2, 3, 4, 5}
ch := lo.SliceToChannel(2, list)

items := ChannelToSlice(ch)
// []int{1, 2, 3, 4, 5}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generator&lt;/h3&gt; 
&lt;p&gt;Implements the generator design pattern. Channel is closed after last element. Channel capacity can be customized.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;generator := func(yield func(int)) {
    yield(1)
    yield(2)
    yield(3)
}

for v := range lo.Generator(2, generator) {
    println(v)
}
// prints 1, then 2, then 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Buffer&lt;/h3&gt; 
&lt;p&gt;Creates a slice of n elements from a channel. Returns the slice, the slice length, the read time and the channel status (opened/closed).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ch := lo.SliceToChannel(2, []int{1, 2, 3, 4, 5})

items1, length1, duration1, ok1 := lo.Buffer(ch, 3)
// []int{1, 2, 3}, 3, 0s, true
items2, length2, duration2, ok2 := lo.Buffer(ch, 3)
// []int{4, 5}, 2, 0s, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: RabbitMQ consumer üëá&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ch := readFromQueue()

for {
    // read 1k items
    items, length, _, ok := lo.Buffer(ch, 1000)

    // do batching stuff

    if !ok {
        break
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;BufferWithContext&lt;/h3&gt; 
&lt;p&gt;Creates a slice of n elements from a channel, with timeout. Returns the slice, the slice length, the read time and the channel status (opened/closed).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ctx, cancel := context.WithCancel(context.TODO())
go func() {
    ch &amp;lt;- 0
    time.Sleep(10*time.Millisecond)
    ch &amp;lt;- 1
    time.Sleep(10*time.Millisecond)
    ch &amp;lt;- 2
    time.Sleep(10*time.Millisecond)
    ch &amp;lt;- 3
    time.Sleep(10*time.Millisecond)
    ch &amp;lt;- 4
    time.Sleep(10*time.Millisecond)
    cancel()
}()

items1, length1, duration1, ok1 := lo.BufferWithContext(ctx, ch, 3)
// []int{0, 1, 2}, 3, 20ms, true
items2, length2, duration2, ok2 := lo.BufferWithContext(ctx, ch, 3)
// []int{3, 4}, 2, 30ms, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;BufferWithTimeout&lt;/h3&gt; 
&lt;p&gt;Creates a slice of n elements from a channel, with timeout. Returns the slice, the slice length, the read time and the channel status (opened/closed).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;generator := func(yield func(int)) {
    for i := 0; i &amp;lt; 5; i++ {
        yield(i)
        time.Sleep(35*time.Millisecond)
    }
}

ch := lo.Generator(0, generator)

items1, length1, duration1, ok1 := lo.BufferWithTimeout(ch, 3, 100*time.Millisecond)
// []int{1, 2}, 2, 100ms, true
items2, length2, duration2, ok2 := lo.BufferWithTimeout(ch, 3, 100*time.Millisecond)
// []int{3, 4, 5}, 3, 75ms, true
items3, length3, duration2, ok3 := lo.BufferWithTimeout(ch, 3, 100*time.Millisecond)
// []int{}, 0, 10ms, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: RabbitMQ consumer üëá&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ch := readFromQueue()

for {
    // read 1k items
    // wait up to 1 second
    items, length, _, ok := lo.BufferWithTimeout(ch, 1000, 1*time.Second)

    // do batching stuff

    if !ok {
        break
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: Multithreaded RabbitMQ consumer üëá&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ch := readFromQueue()

// 5 workers
// prefetch 1k messages per worker
children := lo.ChannelDispatcher(ch, 5, 1000, lo.DispatchingStrategyFirst[int])

consumer := func(c &amp;lt;-chan int) {
    for {
        // read 1k items
        // wait up to 1 second
        items, length, _, ok := lo.BufferWithTimeout(ch, 1000, 1*time.Second)

        // do batching stuff

        if !ok {
            break
        }
    }
}

for i := range children {
    go consumer(children[i])
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FanIn&lt;/h3&gt; 
&lt;p&gt;Merge messages from multiple input channels into a single buffered channel. Output messages have no priority. When all upstream channels reach EOF, downstream channel closes.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;stream1 := make(chan int, 42)
stream2 := make(chan int, 42)
stream3 := make(chan int, 42)

all := lo.FanIn(100, stream1, stream2, stream3)
// &amp;lt;-chan int
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FanOut&lt;/h3&gt; 
&lt;p&gt;Broadcasts all the upstream messages to multiple downstream channels. When upstream channel reaches EOF, downstream channels close. If any downstream channels is full, broadcasting is paused.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;stream := make(chan int, 42)

all := lo.FanOut(5, 100, stream)
// [5]&amp;lt;-chan int
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Contains&lt;/h3&gt; 
&lt;p&gt;Returns true if an element is present in a collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;present := lo.Contains([]int{0, 1, 2, 3, 4, 5}, 5)
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/W1EvyqY6t9j"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ContainsBy&lt;/h3&gt; 
&lt;p&gt;Returns true if the predicate function returns &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;present := lo.ContainsBy([]int{0, 1, 2, 3, 4, 5}, func(x int) bool {
    return x == 3
})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Every&lt;/h3&gt; 
&lt;p&gt;Returns true if all elements of a subset are contained in a collection or if the subset is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ok := lo.Every([]int{0, 1, 2, 3, 4, 5}, []int{0, 2})
// true

ok := lo.Every([]int{0, 1, 2, 3, 4, 5}, []int{0, 6})
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;EveryBy&lt;/h3&gt; 
&lt;p&gt;Returns true if the predicate returns true for all elements in the collection or if the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;b := EveryBy([]int{1, 2, 3, 4}, func(x int) bool {
    return x &amp;lt; 5
})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/dn1-vhHsq9x"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Some&lt;/h3&gt; 
&lt;p&gt;Returns true if at least 1 element of a subset is contained in a collection. If the subset is empty Some returns false.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ok := lo.Some([]int{0, 1, 2, 3, 4, 5}, []int{0, 6})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Lj4ceFkeT9V"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;ok := lo.Some([]int{0, 1, 2, 3, 4, 5}, []int{-1, 6}) // false&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
### SomeBy

Returns true if the predicate returns true for any of the elements in the collection.
If the collection is empty SomeBy returns false.

```go
b := SomeBy([]int{1, 2, 3, 4}, func(x int) bool {
    return x &amp;lt; 3
})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;None&lt;/h3&gt; 
&lt;p&gt;Returns true if no element of a subset is contained in a collection or if the subset is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;b := None([]int{0, 1, 2, 3, 4, 5}, []int{0, 2})
// false
b := None([]int{0, 1, 2, 3, 4, 5}, []int{-1, 6})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/fye7JsmxzPV"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;NoneBy&lt;/h3&gt; 
&lt;p&gt;Returns true if the predicate returns true for none of the elements in the collection or if the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;b := NoneBy([]int{1, 2, 3, 4}, func(x int) bool {
    return x &amp;lt; 0
})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/O64WZ32H58S"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Intersect&lt;/h3&gt; 
&lt;p&gt;Returns the intersection between two collections.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result1 := lo.Intersect([]int{0, 1, 2, 3, 4, 5}, []int{0, 2})
// []int{0, 2}

result2 := lo.Intersect([]int{0, 1, 2, 3, 4, 5}, []int{0, 6})
// []int{0}

result3 := lo.Intersect([]int{0, 1, 2, 3, 4, 5}, []int{-1, 6})
// []int{}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Difference&lt;/h3&gt; 
&lt;p&gt;Returns the difference between two collections.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The first value is the collection of elements absent from list2.&lt;/li&gt; 
 &lt;li&gt;The second value is the collection of elements absent from list1.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;left, right := lo.Difference([]int{0, 1, 2, 3, 4, 5}, []int{0, 2, 6})
// []int{1, 3, 4, 5}, []int{6}

left, right := lo.Difference([]int{0, 1, 2, 3, 4, 5}, []int{0, 1, 2, 3, 4, 5})
// []int{}, []int{}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/pKE-JgzqRpz"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Union&lt;/h3&gt; 
&lt;p&gt;Returns all distinct elements from given collections. Result will not change the order of elements relatively.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;union := lo.Union([]int{0, 1, 2, 3, 4, 5}, []int{0, 2}, []int{0, 10})
// []int{0, 1, 2, 3, 4, 5, 10}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Without&lt;/h3&gt; 
&lt;p&gt;Returns a slice excluding all given values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;subset := lo.Without([]int{0, 2, 10}, 2)
// []int{0, 10}

subset := lo.Without([]int{0, 2, 10}, 0, 1, 2, 3, 4, 5)
// []int{10}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WithoutBy&lt;/h3&gt; 
&lt;p&gt;Filters a slice by excluding elements whose extracted keys match any in the exclude list.&lt;/p&gt; 
&lt;p&gt;Returns a new slice containing only the elements whose keys are not in the exclude list.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type struct User {
    ID int
    Name string
}

// original users
users := []User{
    {ID: 1, Name: "Alice"},
    {ID: 2, Name: "Bob"},
    {ID: 3, Name: "Charlie"},
}

// extract function to get the user ID
getID := func(user User) int {
    return user.ID
}

// exclude users with IDs 2 and 3
excludedIDs := []int{2, 3}

// filtering users
filteredUsers := lo.WithoutBy(users, getID, excludedIDs...)
// []User[{ID: 1, Name: "Alice"}]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WithoutEmpty&lt;/h3&gt; 
&lt;p&gt;Returns a slice excluding zero values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;subset := lo.WithoutEmpty([]int{0, 2, 10})
// []int{2, 10}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WithoutNth&lt;/h3&gt; 
&lt;p&gt;Returns a slice excluding the nth value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;subset := lo.WithoutNth([]int{-2, -1, 0, 1, 2}, 3, -42, 1)
// []int{-2, 0, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ElementsMatch&lt;/h3&gt; 
&lt;p&gt;Returns true if lists contain the same set of elements (including empty set).&lt;/p&gt; 
&lt;p&gt;If there are duplicate elements, the number of occurrences in each list should match.&lt;/p&gt; 
&lt;p&gt;The order of elements is not checked.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;b := lo.ElementsMatch([]int{1, 1, 2}, []int{2, 1, 1})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ElementsMatchBy&lt;/h3&gt; 
&lt;p&gt;Returns true if lists contain the same set of elements' keys (including empty set).&lt;/p&gt; 
&lt;p&gt;If there are duplicate keys, the number of occurrences in each list should match.&lt;/p&gt; 
&lt;p&gt;The order of elements is not checked.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;b := lo.ElementsMatchBy(
    []someType{a, b},
    []someType{b, a},
    func(item someType) string { return item.ID() },
)
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;IndexOf&lt;/h3&gt; 
&lt;p&gt;Returns the index at which the first occurrence of a value is found in a slice or -1 if the value cannot be found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;found := lo.IndexOf([]int{0, 1, 2, 1, 2, 3}, 2)
// 2

notFound := lo.IndexOf([]int{0, 1, 2, 1, 2, 3}, 6)
// -1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Eo7W0lvKTky"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;LastIndexOf&lt;/h3&gt; 
&lt;p&gt;Returns the index at which the last occurrence of a value is found in a slice or -1 if the value cannot be found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;found := lo.LastIndexOf([]int{0, 1, 2, 1, 2, 3}, 2)
// 4

notFound := lo.LastIndexOf([]int{0, 1, 2, 1, 2, 3}, 6)
// -1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;HasPrefix&lt;/h3&gt; 
&lt;p&gt;Returns true if the collection has the prefix.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ok := lo.HasPrefix([]int{1, 2, 3, 4}, []int{42})
// false

ok := lo.HasPrefix([]int{1, 2, 3, 4}, []int{1, 2})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/SrljzVDpMQM"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;HasSuffix&lt;/h3&gt; 
&lt;p&gt;Returns true if the collection has the suffix.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ok := lo.HasSuffix([]int{1, 2, 3, 4}, []int{42})
// false

ok := lo.HasSuffix([]int{1, 2, 3, 4}, []int{3, 4})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/bJeLetQNAON"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Find&lt;/h3&gt; 
&lt;p&gt;Searches for an element in a slice based on a predicate. Returns element and true if element was found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str, ok := lo.Find([]string{"a", "b", "c", "d"}, func(i string) bool {
    return i == "b"
})
// "b", true

str, ok := lo.Find([]string{"foobar"}, func(i string) bool {
    return i == "b"
})
// "", false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Eo7W0lvKTky"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FindIndexOf&lt;/h3&gt; 
&lt;p&gt;FindIndexOf searches for an element in a slice based on a predicate and returns the index and true. Returns -1 and false if the element is not found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str, index, ok := lo.FindIndexOf([]string{"a", "b", "a", "b"}, func(i string) bool {
    return i == "b"
})
// "b", 1, true

str, index, ok := lo.FindIndexOf([]string{"foobar"}, func(i string) bool {
    return i == "b"
})
// "", -1, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/XWSEM4Ic_t0"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FindLastIndexOf&lt;/h3&gt; 
&lt;p&gt;FindLastIndexOf searches for the last element in a slice based on a predicate and returns the index and true. Returns -1 and false if the element is not found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str, index, ok := lo.FindLastIndexOf([]string{"a", "b", "a", "b"}, func(i string) bool {
    return i == "b"
})
// "b", 4, true

str, index, ok := lo.FindLastIndexOf([]string{"foobar"}, func(i string) bool {
    return i == "b"
})
// "", -1, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/dPiMRtJ6cUx"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FindOrElse&lt;/h3&gt; 
&lt;p&gt;Searches for an element in a slice based on a predicate. Returns the element if found or a given fallback value otherwise.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.FindOrElse([]string{"a", "b", "c", "d"}, "x", func(i string) bool {
    return i == "b"
})
// "b"

str := lo.FindOrElse([]string{"foobar"}, "x", func(i string) bool {
    return i == "b"
})
// "x"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindKey&lt;/h3&gt; 
&lt;p&gt;Returns the key of the first value matching.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result1, ok1 := lo.FindKey(map[string]int{"foo": 1, "bar": 2, "baz": 3}, 2)
// "bar", true

result2, ok2 := lo.FindKey(map[string]int{"foo": 1, "bar": 2, "baz": 3}, 42)
// "", false

type test struct {
    foobar string
}
result3, ok3 := lo.FindKey(map[string]test{"foo": test{"foo"}, "bar": test{"bar"}, "baz": test{"baz"}}, test{"foo"})
// "foo", true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindKeyBy&lt;/h3&gt; 
&lt;p&gt;Returns the key of the first element predicate returns true for.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result1, ok1 := lo.FindKeyBy(map[string]int{"foo": 1, "bar": 2, "baz": 3}, func(k string, v int) bool {
    return k == "foo"
})
// "foo", true

result2, ok2 := lo.FindKeyBy(map[string]int{"foo": 1, "bar": 2, "baz": 3}, func(k string, v int) bool {
    return false
})
// "", false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindUniques&lt;/h3&gt; 
&lt;p&gt;Returns a slice with all the elements that appear in the collection only once. The order of result values is determined by the order they occur in the slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;uniqueValues := lo.FindUniques([]int{1, 2, 2, 1, 2, 3})
// []int{3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindUniquesBy&lt;/h3&gt; 
&lt;p&gt;Returns a slice with all the elements that appear in the collection only once. The order of result values is determined by the order they occur in the slice. It accepts &lt;code&gt;iteratee&lt;/code&gt; which is invoked for each element in the slice to generate the criterion by which uniqueness is computed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;uniqueValues := lo.FindUniquesBy([]int{3, 4, 5, 6, 7}, func(i int) int {
    return i%3
})
// []int{5}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindDuplicates&lt;/h3&gt; 
&lt;p&gt;Returns a slice with the first occurrence of each duplicated element in the collection. The order of result values is determined by the order they occur in the slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;duplicatedValues := lo.FindDuplicates([]int{1, 2, 2, 1, 2, 3})
// []int{1, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindDuplicatesBy&lt;/h3&gt; 
&lt;p&gt;Returns a slice with the first occurrence of each duplicated element in the collection. The order of result values is determined by the order they occur in the slice. It accepts &lt;code&gt;iteratee&lt;/code&gt; which is invoked for each element in the slice to generate the criterion by which uniqueness is computed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;duplicatedValues := lo.FindDuplicatesBy([]int{3, 4, 5, 6, 7}, func(i int) int {
    return i%3
})
// []int{3, 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Min&lt;/h3&gt; 
&lt;p&gt;Search the minimum value of a collection.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;min := lo.Min([]int{1, 2, 3})
// 1

min := lo.Min([]int{})
// 0

min := lo.Min([]time.Duration{time.Second, time.Hour})
// 1s
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/r6e-Z8JozS8"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;MinIndex&lt;/h3&gt; 
&lt;p&gt;Search the minimum value of a collection and the index of the minimum value.&lt;/p&gt; 
&lt;p&gt;Returns (zero value, -1) when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;min, index := lo.MinIndex([]int{1, 2, 3})
// 1, 0

min, index := lo.MinIndex([]int{})
// 0, -1

min, index := lo.MinIndex([]time.Duration{time.Second, time.Hour})
// 1s, 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MinBy&lt;/h3&gt; 
&lt;p&gt;Search the minimum value of a collection using the given comparison function.&lt;/p&gt; 
&lt;p&gt;If several values of the collection are equal to the smallest value, returns the first such value.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;min := lo.MinBy([]string{"s1", "string2", "s3"}, func(item string, min string) bool {
    return len(item) &amp;lt; len(min)
})
// "s1"

min := lo.MinBy([]string{}, func(item string, min string) bool {
    return len(item) &amp;lt; len(min)
})
// ""
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MinIndexBy&lt;/h3&gt; 
&lt;p&gt;Search the minimum value of a collection using the given comparison function and the index of the minimum value.&lt;/p&gt; 
&lt;p&gt;If several values of the collection are equal to the smallest value, returns the first such value.&lt;/p&gt; 
&lt;p&gt;Returns (zero value, -1) when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;min, index := lo.MinIndexBy([]string{"s1", "string2", "s3"}, func(item string, min string) bool {
    return len(item) &amp;lt; len(min)
})
// "s1", 0

min, index := lo.MinIndexBy([]string{}, func(item string, min string) bool {
    return len(item) &amp;lt; len(min)
})
// "", -1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Earliest&lt;/h3&gt; 
&lt;p&gt;Search the minimum time.Time of a collection.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;earliest := lo.Earliest(time.Now(), time.Time{})
// 0001-01-01 00:00:00 +0000 UTC
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;EarliestBy&lt;/h3&gt; 
&lt;p&gt;Search the minimum time.Time of a collection using the given iteratee function.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type foo struct {
    bar time.Time
}

earliest := lo.EarliestBy([]foo{{time.Now()}, {}}, func(i foo) time.Time {
    return i.bar
})
// {bar:{2023-04-01 01:02:03 +0000 UTC}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Max&lt;/h3&gt; 
&lt;p&gt;Search the maximum value of a collection.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;max := lo.Max([]int{1, 2, 3})
// 3

max := lo.Max([]int{})
// 0

max := lo.Max([]time.Duration{time.Second, time.Hour})
// 1h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MaxIndex&lt;/h3&gt; 
&lt;p&gt;Search the maximum value of a collection and the index of the maximum value.&lt;/p&gt; 
&lt;p&gt;Returns (zero value, -1) when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;max, index := lo.MaxIndex([]int{1, 2, 3})
// 3, 2

max, index := lo.MaxIndex([]int{})
// 0, -1

max, index := lo.MaxIndex([]time.Duration{time.Second, time.Hour})
// 1h, 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MaxBy&lt;/h3&gt; 
&lt;p&gt;Search the maximum value of a collection using the given comparison function.&lt;/p&gt; 
&lt;p&gt;If several values of the collection are equal to the greatest value, returns the first such value.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;max := lo.MaxBy([]string{"string1", "s2", "string3"}, func(item string, max string) bool {
    return len(item) &amp;gt; len(max)
})
// "string1"

max := lo.MaxBy([]string{}, func(item string, max string) bool {
    return len(item) &amp;gt; len(max)
})
// ""
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MaxIndexBy&lt;/h3&gt; 
&lt;p&gt;Search the maximum value of a collection using the given comparison function and the index of the maximum value.&lt;/p&gt; 
&lt;p&gt;If several values of the collection are equal to the greatest value, returns the first such value.&lt;/p&gt; 
&lt;p&gt;Returns (zero value, -1) when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;max, index := lo.MaxIndexBy([]string{"string1", "s2", "string3"}, func(item string, max string) bool {
    return len(item) &amp;gt; len(max)
})
// "string1", 0

max, index := lo.MaxIndexBy([]string{}, func(item string, max string) bool {
    return len(item) &amp;gt; len(max)
})
// "", -1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Latest&lt;/h3&gt; 
&lt;p&gt;Search the maximum time.Time of a collection.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;latest := lo.Latest(time.Now(), time.Time{})
// 2023-04-01 01:02:03 +0000 UTC
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LatestBy&lt;/h3&gt; 
&lt;p&gt;Search the maximum time.Time of a collection using the given iteratee function.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type foo struct {
    bar time.Time
}

latest := lo.LatestBy([]foo{{time.Now()}, {}}, func(i foo) time.Time {
    return i.bar
})
// {bar:{2023-04-01 01:02:03 +0000 UTC}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;First&lt;/h3&gt; 
&lt;p&gt;Returns the first element of a collection and check for availability of the first element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;first, ok := lo.First([]int{1, 2, 3})
// 1, true

first, ok := lo.First([]int{})
// 0, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FirstOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the first element of a collection or zero value if empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;first := lo.FirstOrEmpty([]int{1, 2, 3})
// 1

first := lo.FirstOrEmpty([]int{})
// 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FirstOr&lt;/h3&gt; 
&lt;p&gt;Returns the first element of a collection or the fallback value if empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;first := lo.FirstOr([]int{1, 2, 3}, 245)
// 1

first := lo.FirstOr([]int{}, 31)
// 31
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Last&lt;/h3&gt; 
&lt;p&gt;Returns the last element of a collection or error if empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;last, ok := lo.Last([]int{1, 2, 3})
// 3
// true

last, ok := lo.Last([]int{})
// 0
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LastOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the last element of a collection or zero value if empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;last := lo.LastOrEmpty([]int{1, 2, 3})
// 3

last := lo.LastOrEmpty([]int{})
// 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LastOr&lt;/h3&gt; 
&lt;p&gt;Returns the last element of a collection or the fallback value if empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;last := lo.LastOr([]int{1, 2, 3}, 245)
// 3

last := lo.LastOr([]int{}, 31)
// 31
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Nth&lt;/h3&gt; 
&lt;p&gt;Returns the element at index &lt;code&gt;nth&lt;/code&gt; of collection. If &lt;code&gt;nth&lt;/code&gt; is negative, the nth element from the end is returned. An error is returned when nth is out of slice bounds.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;nth, err := lo.Nth([]int{0, 1, 2, 3}, 2)
// 2

nth, err := lo.Nth([]int{0, 1, 2, 3}, -2)
// 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;NthOr&lt;/h3&gt; 
&lt;p&gt;Returns the element at index &lt;code&gt;nth&lt;/code&gt; of the collection. If &lt;code&gt;nth&lt;/code&gt; is negative, it returns the &lt;code&gt;nth&lt;/code&gt; element from the end. If &lt;code&gt;nth&lt;/code&gt; is out of slice bounds, it returns the provided fallback value&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;nth := lo.NthOr([]int{10, 20, 30, 40, 50}, 2, -1)
// 30

nth := lo.NthOr([]int{10, 20, 30, 40, 50}, -1, -1)
// 50

nth := lo.NthOr([]int{10, 20, 30, 40, 50}, 5, -1)
// -1 (fallback value)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;NthOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the element at index &lt;code&gt;nth&lt;/code&gt; of the collection. If &lt;code&gt;nth&lt;/code&gt; is negative, it returns the &lt;code&gt;nth&lt;/code&gt; element from the end. If &lt;code&gt;nth&lt;/code&gt; is out of slice bounds, it returns the zero value for the element type (e.g., 0 for integers, "" for strings, etc).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;nth := lo.NthOrEmpty([]int{10, 20, 30, 40, 50}, 2)
// 30

nth := lo.NthOrEmpty([]int{10, 20, 30, 40, 50}, -1)
// 50

nth := lo.NthOrEmpty([]int{10, 20, 30, 40, 50}, 5)
// 0 (zero value for int)

nth := lo.NthOrEmpty([]string{"apple", "banana", "cherry"}, 2)
// "cherry"

nth := lo.NthOrEmpty([]string{"apple", "banana", "cherry"}, 5)
// "" (zero value for string)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Sample&lt;/h3&gt; 
&lt;p&gt;Returns a random item from collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.Sample([]string{"a", "b", "c"})
// a random string from []string{"a", "b", "c"}

lo.Sample([]string{})
// ""
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/FYA45LcpfM2"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;SampleBy&lt;/h3&gt; 
&lt;p&gt;Returns a random item from collection, using a given random integer generator.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import "math/rand"

r := rand.New(rand.NewSource(42))
lo.SampleBy([]string{"a", "b", "c"}, r.Intn)
// a random string from []string{"a", "b", "c"}, using a seeded random generator

lo.SampleBy([]string{}, r.Intn)
// ""
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Samples&lt;/h3&gt; 
&lt;p&gt;Returns N random unique items from collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.Samples([]string{"a", "b", "c"}, 3)
// []string{"a", "b", "c"} in random order
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;SamplesBy&lt;/h3&gt; 
&lt;p&gt;Returns N random unique items from collection, using a given random integer generator.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;r := rand.New(rand.NewSource(42))
lo.SamplesBy([]string{"a", "b", "c"}, 3, r.Intn)
// []string{"a", "b", "c"} in random order, using a seeded random generator
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Ternary&lt;/h3&gt; 
&lt;p&gt;A single line if/else statement.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.Ternary(true, "a", "b")
// "a"

result := lo.Ternary(false, "a", "b")
// "b"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Take care to avoid dereferencing potentially nil pointers in your A/B expressions, because they are both evaluated. See TernaryF to avoid this problem.&lt;/p&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/t-D7WBL44h2"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TernaryF&lt;/h3&gt; 
&lt;p&gt;A single line if/else statement whose options are functions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.TernaryF(true, func() string { return "a" }, func() string { return "b" })
// "a"

result := lo.TernaryF(false, func() string { return "a" }, func() string { return "b" })
// "b"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Useful to avoid nil-pointer dereferencing in initializations, or avoid running unnecessary code&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;var s *string

someStr := TernaryF(s == nil, func() string { return uuid.New().String() }, func() string { return *s })
// ef782193-c30c-4e2e-a7ae-f8ab5e125e02
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/AO4VW20JoqM"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;If / ElseIf / Else&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.If(true, 1).
    ElseIf(false, 2).
    Else(3)
// 1

result := lo.If(false, 1).
    ElseIf(true, 2).
    Else(3)
// 2

result := lo.If(false, 1).
    ElseIf(false, 2).
    Else(3)
// 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using callbacks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.IfF(true, func () int {
        return 1
    }).
    ElseIfF(false, func () int {
        return 2
    }).
    ElseF(func () int {
        return 3
    })
// 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Mixed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.IfF(true, func () int {
        return 1
    }).
    Else(42)
// 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/WSw3ApMxhyW"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Switch / Case / Default&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.Switch(1).
    Case(1, "1").
    Case(2, "2").
    Default("3")
// "1"

result := lo.Switch(2).
    Case(1, "1").
    Case(2, "2").
    Default("3")
// "2"

result := lo.Switch(42).
    Case(1, "1").
    Case(2, "2").
    Default("3")
// "3"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using callbacks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.Switch(1).
    CaseF(1, func() string {
        return "1"
    }).
    CaseF(2, func() string {
        return "2"
    }).
    DefaultF(func() string {
        return "3"
    })
// "1"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Mixed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.Switch(1).
    CaseF(1, func() string {
        return "1"
    }).
    Default("42")
// "1"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/TGbKUMAeRUd"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;IsNil&lt;/h3&gt; 
&lt;p&gt;Checks if a value is nil or if it's a reference type with a nil underlying value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;var x int
lo.IsNil(x)
// false

var k struct{}
lo.IsNil(k)
// false

var i *int
lo.IsNil(i)
// true

var ifaceWithNilValue any = (*string)(nil)
lo.IsNil(ifaceWithNilValue)
// true
ifaceWithNilValue == nil
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;IsNotNil&lt;/h3&gt; 
&lt;p&gt;Checks if a value is not nil or if it's not a reference type with a nil underlying value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;var x int
lo.IsNotNil(x)
// true

var k struct{}
lo.IsNotNil(k)
// true

var i *int
lo.IsNotNil(i)
// false

var ifaceWithNilValue any = (*string)(nil)
lo.IsNotNil(ifaceWithNilValue)
// false
ifaceWithNilValue == nil
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ToPtr&lt;/h3&gt; 
&lt;p&gt;Returns a pointer copy of the value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ptr := lo.ToPtr("hello world")
// *string{"hello world"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/P2sD0PMXw4F"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Nil&lt;/h3&gt; 
&lt;p&gt;Returns a nil pointer of type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ptr := lo.Nil[float64]()
// nil
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;EmptyableToPtr&lt;/h3&gt; 
&lt;p&gt;Returns a pointer copy of value if it's nonzero. Otherwise, returns nil pointer.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ptr := lo.EmptyableToPtr(nil)
// nil

ptr := lo.EmptyableToPtr("")
// nil

ptr := lo.EmptyableToPtr([]int{})
// *[]int{}

ptr := lo.EmptyableToPtr("hello world")
// *string{"hello world"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FromPtr&lt;/h3&gt; 
&lt;p&gt;Returns the pointer value or empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := "hello world"
value := lo.FromPtr(&amp;amp;str)
// "hello world"

value := lo.FromPtr(nil)
// ""
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FromPtrOr&lt;/h3&gt; 
&lt;p&gt;Returns the pointer value or the fallback value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := "hello world"
value := lo.FromPtrOr(&amp;amp;str, "empty")
// "hello world"

value := lo.FromPtrOr(nil, "empty")
// "empty"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ToSlicePtr&lt;/h3&gt; 
&lt;p&gt;Returns a slice of pointers to each value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ptr := lo.ToSlicePtr([]string{"hello", "world"})
// []*string{"hello", "world"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FromSlicePtr&lt;/h3&gt; 
&lt;p&gt;Returns a slice with the pointer values. Returns a zero value in case of a nil pointer element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str1 := "hello"
str2 := "world"

ptr := lo.FromSlicePtr[string]([]*string{&amp;amp;str1, &amp;amp;str2, nil})
// []string{"hello", "world", ""}

ptr := lo.Compact(
    lo.FromSlicePtr[string]([]*string{&amp;amp;str1, &amp;amp;str2, nil}),
)
// []string{"hello", "world"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FromSlicePtrOr&lt;/h3&gt; 
&lt;p&gt;Returns a slice with the pointer values or the fallback value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str1 := "hello"
str2 := "world"

ptr := lo.FromSlicePtrOr([]*string{&amp;amp;str1, nil, &amp;amp;str2}, "fallback value")
// []string{"hello", "fallback value", "world"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/CuXGVzo9G65"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ToAnySlice&lt;/h3&gt; 
&lt;p&gt;Returns a slice with all elements mapped to &lt;code&gt;any&lt;/code&gt; type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;elements := lo.ToAnySlice([]int{1, 5, 1})
// []any{1, 5, 1}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FromAnySlice&lt;/h3&gt; 
&lt;p&gt;Returns a slice with all elements mapped to a type. Returns false in case of type conversion failure.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;elements, ok := lo.FromAnySlice([]any{"foobar", 42})
// []string{}, false

elements, ok := lo.FromAnySlice([]any{"foobar", "42"})
// []string{"foobar", "42"}, true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Empty&lt;/h3&gt; 
&lt;p&gt;Returns the &lt;a href="https://go.dev/ref/spec#The_zero_value"&gt;zero value&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.Empty[int]()
// 0
lo.Empty[string]()
// ""
lo.Empty[bool]()
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;IsEmpty&lt;/h3&gt; 
&lt;p&gt;Returns true if argument is a zero value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.IsEmpty(0)
// true
lo.IsEmpty(42)
// false

lo.IsEmpty("")
// true
lo.IsEmpty("foobar")
// false

type test struct {
    foobar string
}

lo.IsEmpty(test{foobar: ""})
// true
lo.IsEmpty(test{foobar: "foobar"})
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;IsNotEmpty&lt;/h3&gt; 
&lt;p&gt;Returns true if argument is a zero value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.IsNotEmpty(0)
// false
lo.IsNotEmpty(42)
// true

lo.IsNotEmpty("")
// false
lo.IsNotEmpty("foobar")
// true

type test struct {
    foobar string
}

lo.IsNotEmpty(test{foobar: ""})
// false
lo.IsNotEmpty(test{foobar: "foobar"})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Coalesce&lt;/h3&gt; 
&lt;p&gt;Returns the first non-empty arguments. Arguments must be comparable.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result, ok := lo.Coalesce(0, 1, 2, 3)
// 1 true

result, ok := lo.Coalesce("")
// "" false

var nilStr *string
str := "foobar"
result, ok := lo.Coalesce(nil, nilStr, &amp;amp;str)
// &amp;amp;"foobar" true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CoalesceOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the first non-empty arguments. Arguments must be comparable.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.CoalesceOrEmpty(0, 1, 2, 3)
// 1

result := lo.CoalesceOrEmpty("")
// ""

var nilStr *string
str := "foobar"
result := lo.CoalesceOrEmpty(nil, nilStr, &amp;amp;str)
// &amp;amp;"foobar"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CoalesceSlice&lt;/h3&gt; 
&lt;p&gt;Returns the first non-zero slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result, ok := lo.CoalesceSlice([]int{1, 2, 3}, []int{4, 5, 6})
// [1, 2, 3]
// true

result, ok := lo.CoalesceSlice(nil, []int{})
// []
// true

result, ok := lo.CoalesceSlice([]int(nil))
// []
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CoalesceSliceOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the first non-zero slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.CoalesceSliceOrEmpty([]int{1, 2, 3}, []int{4, 5, 6})
// [1, 2, 3]

result := lo.CoalesceSliceOrEmpty(nil, []int{})
// []
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CoalesceMap&lt;/h3&gt; 
&lt;p&gt;Returns the first non-zero map.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result, ok := lo.CoalesceMap(map[string]int{"1": 1, "2": 2, "3": 3}, map[string]int{"4": 4, "5": 5, "6": 6})
// {"1": 1, "2": 2, "3": 3}
// true

result, ok := lo.CoalesceMap(nil, map[string]int{})
// {}
// true

result, ok := lo.CoalesceMap(map[string]int(nil))
// {}
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CoalesceMapOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the first non-zero map.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.CoalesceMapOrEmpty(map[string]int{"1": 1, "2": 2, "3": 3}, map[string]int{"4": 4, "5": 5, "6": 6})
// {"1": 1, "2": 2, "3": 3}

result := lo.CoalesceMapOrEmpty(nil, map[string]int{})
// {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Partial&lt;/h3&gt; 
&lt;p&gt;Returns new function that, when called, has its first argument set to the provided value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;add := func(x, y int) int { return x + y }
f := lo.Partial(add, 5)

f(10)
// 15

f(42)
// 47
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Sy1gAQiQZ3v"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Partial2 -&amp;gt; Partial5&lt;/h3&gt; 
&lt;p&gt;Returns new function that, when called, has its first argument set to the provided value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;add := func(x, y, z int) int { return x + y + z }
f := lo.Partial2(add, 42)

f(10, 5)
// 57

f(42, -4)
// 80
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/-xiPjy4JChJ"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Attempt&lt;/h3&gt; 
&lt;p&gt;Invokes a function N times until it returns valid output. Returns either the caught error or nil.&lt;/p&gt; 
&lt;p&gt;When the first argument is less than &lt;code&gt;1&lt;/code&gt;, the function runs until a successful response is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;iter, err := lo.Attempt(42, func(i int) error {
    if i == 5 {
        return nil
    }

    return errors.New("failed")
})
// 6
// nil

iter, err := lo.Attempt(2, func(i int) error {
    if i == 5 {
        return nil
    }

    return errors.New("failed")
})
// 2
// error "failed"

iter, err := lo.Attempt(0, func(i int) error {
    if i &amp;lt; 42 {
        return errors.New("failed")
    }

    return nil
})
// 43
// nil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more advanced retry strategies (delay, exponential backoff...), please take a look at &lt;a href="https://github.com/cenkalti/backoff"&gt;cenkalti/backoff&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/3ggJZ2ZKcMj"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;AttemptWithDelay&lt;/h3&gt; 
&lt;p&gt;Invokes a function N times until it returns valid output, with a pause between each call. Returns either the caught error or nil.&lt;/p&gt; 
&lt;p&gt;When the first argument is less than &lt;code&gt;1&lt;/code&gt;, the function runs until a successful response is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;iter, duration, err := lo.AttemptWithDelay(5, 2*time.Second, func(i int, duration time.Duration) error {
    if i == 2 {
        return nil
    }

    return errors.New("failed")
})
// 3
// ~ 4 seconds
// nil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more advanced retry strategies (delay, exponential backoff...), please take a look at &lt;a href="https://github.com/cenkalti/backoff"&gt;cenkalti/backoff&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/tVs6CygC7m1"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;AttemptWhile&lt;/h3&gt; 
&lt;p&gt;Invokes a function N times until it returns valid output. Returns either the caught error or nil, along with a bool value to determine whether the function should be invoked again. It will terminate the invoke immediately if the second return value is false.&lt;/p&gt; 
&lt;p&gt;When the first argument is less than &lt;code&gt;1&lt;/code&gt;, the function runs until a successful response is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;count1, err1 := lo.AttemptWhile(5, func(i int) (error, bool) {
    err := doMockedHTTPRequest(i)
    if err != nil {
        if errors.Is(err, ErrBadRequest) { // let's assume ErrBadRequest is a critical error that needs to terminate the invoke
            return err, false // flag the second return value as false to terminate the invoke
        }

        return err, true
    }

    return nil, false
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more advanced retry strategies (delay, exponential backoff...), please take a look at &lt;a href="https://github.com/cenkalti/backoff"&gt;cenkalti/backoff&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/1VS7HxlYMOG"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;AttemptWhileWithDelay&lt;/h3&gt; 
&lt;p&gt;Invokes a function N times until it returns valid output, with a pause between each call. Returns either the caught error or nil, along with a bool value to determine whether the function should be invoked again. It will terminate the invoke immediately if the second return value is false.&lt;/p&gt; 
&lt;p&gt;When the first argument is less than &lt;code&gt;1&lt;/code&gt;, the function runs until a successful response is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;count1, time1, err1 := lo.AttemptWhileWithDelay(5, time.Millisecond, func(i int, d time.Duration) (error, bool) {
    err := doMockedHTTPRequest(i)
    if err != nil {
        if errors.Is(err, ErrBadRequest) { // let's assume ErrBadRequest is a critical error that needs to terminate the invoke
            return err, false // flag the second return value as false to terminate the invoke
        }

        return err, true
    }

    return nil, false
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more advanced retry strategies (delay, exponential backoff...), please take a look at &lt;a href="https://github.com/cenkalti/backoff"&gt;cenkalti/backoff&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/mhufUjJfLEF"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Debounce&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;NewDebounce&lt;/code&gt; creates a debounced instance that delays invoking functions given until after wait milliseconds have elapsed, until &lt;code&gt;cancel&lt;/code&gt; is called.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;f := func() {
    println("Called once after 100ms when debounce stopped invoking!")
}

debounce, cancel := lo.NewDebounce(100 * time.Millisecond, f)
for j := 0; j &amp;lt; 10; j++ {
    debounce()
}

time.Sleep(1 * time.Second)
cancel()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/mz32VMK2nqe"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;DebounceBy&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;NewDebounceBy&lt;/code&gt; creates a debounced instance for each distinct key, that delays invoking functions given until after wait milliseconds have elapsed, until &lt;code&gt;cancel&lt;/code&gt; is called.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;f := func(key string, count int) {
    println(key + ": Called once after 100ms when debounce stopped invoking!")
}

debounce, cancel := lo.NewDebounceBy(100 * time.Millisecond, f)
for j := 0; j &amp;lt; 10; j++ {
    debounce("first key")
    debounce("second key")
}

time.Sleep(1 * time.Second)
cancel("first key")
cancel("second key")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/d3Vpt6pxhY8"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Throttle&lt;/h3&gt; 
&lt;p&gt;Creates a throttled instance that invokes given functions only once in every interval.&lt;/p&gt; 
&lt;p&gt;This returns 2 functions, First one is throttled function and Second one is a function to reset interval.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;f := func() {
	println("Called once in every 100ms")
}

throttle, reset := lo.NewThrottle(100 * time.Millisecond, f)

for j := 0; j &amp;lt; 10; j++ {
	throttle()
	time.Sleep(30 * time.Millisecond)
}

reset()
throttle()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;NewThrottleWithCount&lt;/code&gt; is NewThrottle with count limit, throttled function will be invoked count times in every interval.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;f := func() {
	println("Called three times in every 100ms")
}

throttle, reset := lo.NewThrottleWithCount(100 * time.Millisecond, f)

for j := 0; j &amp;lt; 10; j++ {
	throttle()
	time.Sleep(30 * time.Millisecond)
}

reset()
throttle()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;NewThrottleBy&lt;/code&gt; and &lt;code&gt;NewThrottleByWithCount&lt;/code&gt; are NewThrottle with sharding key, throttled function will be invoked count times in every interval.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;f := func(key string) {
	println(key, "Called three times in every 100ms")
}

throttle, reset := lo.NewThrottleByWithCount(100 * time.Millisecond, f)

for j := 0; j &amp;lt; 10; j++ {
	throttle("foo")
	time.Sleep(30 * time.Millisecond)
}

reset()
throttle()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Synchronize&lt;/h3&gt; 
&lt;p&gt;Wraps the underlying callback in a mutex. It receives an optional mutex.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;s := lo.Synchronize()

for i := 0; i &amp;lt; 10; i++ {
    go s.Do(func () {
        println("will be called sequentially")
    })
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is equivalent to:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;mu := sync.Mutex{}

func foobar() {
    mu.Lock()
    defer mu.Unlock()

    // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Async&lt;/h3&gt; 
&lt;p&gt;Executes a function in a goroutine and returns the result in a channel.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ch := lo.Async(func() error { time.Sleep(10 * time.Second); return nil })
// chan error (nil)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Async{0-&amp;gt;6}&lt;/h3&gt; 
&lt;p&gt;Executes a function in a goroutine and returns the result in a channel. For functions with multiple return values, the results will be returned as a tuple inside the channel. For functions without return, struct{} will be returned in the channel.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ch := lo.Async0(func() { time.Sleep(10 * time.Second) })
// chan struct{}

ch := lo.Async1(func() int {
  time.Sleep(10 * time.Second);
  return 42
})
// chan int (42)

ch := lo.Async2(func() (int, string) {
  time.Sleep(10 * time.Second);
  return 42, "Hello"
})
// chan lo.Tuple2[int, string] ({42, "Hello"})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Transaction&lt;/h3&gt; 
&lt;p&gt;Implements a Saga pattern.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;transaction := NewTransaction().
    Then(
        func(state int) (int, error) {
            fmt.Println("step 1")
            return state + 10, nil
        },
        func(state int) int {
            fmt.Println("rollback 1")
            return state - 10
        },
    ).
    Then(
        func(state int) (int, error) {
            fmt.Println("step 2")
            return state + 15, nil
        },
        func(state int) int {
            fmt.Println("rollback 2")
            return state - 15
        },
    ).
    Then(
        func(state int) (int, error) {
            fmt.Println("step 3")

            if true {
                return state, errors.New("error")
            }

            return state + 42, nil
        },
        func(state int) int {
            fmt.Println("rollback 3")
            return state - 42
        },
    )

_, _ = transaction.Process(-5)

// Output:
// step 1
// step 2
// step 3
// rollback 2
// rollback 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WaitFor&lt;/h3&gt; 
&lt;p&gt;Runs periodically until a condition is validated.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;alwaysTrue := func(i int) bool { return true }
alwaysFalse := func(i int) bool { return false }
laterTrue := func(i int) bool {
    return i &amp;gt; 5
}

iterations, duration, ok := lo.WaitFor(alwaysTrue, 10*time.Millisecond, 2 * time.Millisecond)
// 1
// 1ms
// true

iterations, duration, ok := lo.WaitFor(alwaysFalse, 10*time.Millisecond, time.Millisecond)
// 10
// 10ms
// false

iterations, duration, ok := lo.WaitFor(laterTrue, 10*time.Millisecond, time.Millisecond)
// 7
// 7ms
// true

iterations, duration, ok := lo.WaitFor(laterTrue, 10*time.Millisecond, 5*time.Millisecond)
// 2
// 10ms
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/t_wTDmubbK3"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;WaitForWithContext&lt;/h3&gt; 
&lt;p&gt;Runs periodically until a condition is validated or context is invalid.&lt;/p&gt; 
&lt;p&gt;The condition receives also the context, so it can invalidate the process in the condition checker&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ctx := context.Background()

alwaysTrue := func(_ context.Context, i int) bool { return true }
alwaysFalse := func(_ context.Context, i int) bool { return false }
laterTrue := func(_ context.Context, i int) bool {
    return i &amp;gt;= 5
}

iterations, duration, ok := lo.WaitForWithContext(ctx, alwaysTrue, 10*time.Millisecond, 2 * time.Millisecond)
// 1
// 1ms
// true

iterations, duration, ok := lo.WaitForWithContext(ctx, alwaysFalse, 10*time.Millisecond, time.Millisecond)
// 10
// 10ms
// false

iterations, duration, ok := lo.WaitForWithContext(ctx, laterTrue, 10*time.Millisecond, time.Millisecond)
// 5
// 5ms
// true

iterations, duration, ok := lo.WaitForWithContext(ctx, laterTrue, 10*time.Millisecond, 5*time.Millisecond)
// 2
// 10ms
// false

expiringCtx, cancel := context.WithTimeout(ctx, 5*time.Millisecond)
iterations, duration, ok := lo.WaitForWithContext(expiringCtx, alwaysFalse, 100*time.Millisecond, time.Millisecond)
// 5
// 5.1ms
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/t_wTDmubbK3"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Validate&lt;/h3&gt; 
&lt;p&gt;Helper function that creates an error when a condition is not met.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;slice := []string{"a"}
val := lo.Validate(len(slice) == 0, "Slice should be empty but contains %v", slice)
// error("Slice should be empty but contains [a]")

slice := []string{}
val := lo.Validate(len(slice) == 0, "Slice should be empty but contains %v", slice)
// nil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/vPyh51XpCBt"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Must&lt;/h3&gt; 
&lt;p&gt;Wraps a function call and panics if second argument is &lt;code&gt;error&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, returns the value otherwise.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;val := lo.Must(time.Parse("2006-01-02", "2022-01-15"))
// 2022-01-15

val := lo.Must(time.Parse("2006-01-02", "bad-value"))
// panics
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/TMoWrRp3DyC"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Must{0-&amp;gt;6}&lt;/h3&gt; 
&lt;p&gt;Must* has the same behavior as Must but returns multiple values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;func example0() (error)
func example1() (int, error)
func example2() (int, string, error)
func example3() (int, string, time.Date, error)
func example4() (int, string, time.Date, bool, error)
func example5() (int, string, time.Date, bool, float64, error)
func example6() (int, string, time.Date, bool, float64, byte, error)

lo.Must0(example0())
val1 := lo.Must1(example1())    // alias to Must
val1, val2 := lo.Must2(example2())
val1, val2, val3 := lo.Must3(example3())
val1, val2, val3, val4 := lo.Must4(example4())
val1, val2, val3, val4, val5 := lo.Must5(example5())
val1, val2, val3, val4, val5, val6 := lo.Must6(example6())
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can wrap functions like &lt;code&gt;func (...) (..., ok bool)&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;// math.Signbit(float64) bool
lo.Must0(math.Signbit(v))

// bytes.Cut([]byte,[]byte) ([]byte, []byte, bool)
before, after := lo.Must2(bytes.Cut(s, sep))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can give context to the panic message by adding some printf-like arguments.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;val, ok := lo.Find(myString, func(i string) bool {
    return i == requiredChar
})
lo.Must0(ok, "'%s' must always contain '%s'", myString, requiredChar)

list := []int{0, 1, 2}
item := 5
lo.Must0(lo.Contains(list, item), "'%s' must always contain '%s'", list, item)
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/TMoWrRp3DyC"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Try&lt;/h3&gt; 
&lt;p&gt;Calls the function and returns false in case of error and panic.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ok := lo.Try(func() error {
    panic("error")
    return nil
})
// false

ok := lo.Try(func() error {
    return nil
})
// true

ok := lo.Try(func() error {
    return errors.New("error")
})
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/mTyyWUvn9u4"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Try{0-&amp;gt;6}&lt;/h3&gt; 
&lt;p&gt;The same behavior as &lt;code&gt;Try&lt;/code&gt;, but the callback returns 2 variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ok := lo.Try2(func() (string, error) {
    panic("error")
    return "", nil
})
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/mTyyWUvn9u4"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TryOr&lt;/h3&gt; 
&lt;p&gt;Calls the function and return a default value in case of error and on panic.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str, ok := lo.TryOr(func() (string, error) {
    panic("error")
    return "hello", nil
}, "world")
// world
// false

str, ok := lo.TryOr(func() error {
    return "hello", nil
}, "world")
// hello
// true

str, ok := lo.TryOr(func() error {
    return "hello", errors.New("error")
}, "world")
// world
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/B4F7Wg2Zh9X"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TryOr{0-&amp;gt;6}&lt;/h3&gt; 
&lt;p&gt;The same behavior as &lt;code&gt;TryOr&lt;/code&gt;, but the callback returns &lt;code&gt;X&lt;/code&gt; variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str, nbr, ok := lo.TryOr2(func() (string, int, error) {
    panic("error")
    return "hello", 42, nil
}, "world", 21)
// world
// 21
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/B4F7Wg2Zh9X"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TryWithErrorValue&lt;/h3&gt; 
&lt;p&gt;The same behavior as &lt;code&gt;Try&lt;/code&gt;, but also returns the value passed to panic.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;err, ok := lo.TryWithErrorValue(func() error {
    panic("error")
    return nil
})
// "error", false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Kc7afQIT2Fs"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TryCatch&lt;/h3&gt; 
&lt;p&gt;The same behavior as &lt;code&gt;Try&lt;/code&gt;, but calls the catch function in case of error.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;caught := false

ok := lo.TryCatch(func() error {
    panic("error")
    return nil
}, func() {
    caught = true
})
// false
// caught == true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/PnOON-EqBiU"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TryCatchWithErrorValue&lt;/h3&gt; 
&lt;p&gt;The same behavior as &lt;code&gt;TryWithErrorValue&lt;/code&gt;, but calls the catch function in case of error.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;caught := false

ok := lo.TryCatchWithErrorValue(func() error {
    panic("error")
    return nil
}, func(val any) {
    caught = val == "error"
})
// false
// caught == true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/8Pc9gwX_GZO"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ErrorsAs&lt;/h3&gt; 
&lt;p&gt;A shortcut for:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;err := doSomething()

var rateLimitErr *RateLimitError
if ok := errors.As(err, &amp;amp;rateLimitErr); ok {
    // retry later
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;single line &lt;code&gt;lo&lt;/code&gt; helper:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;err := doSomething()

if rateLimitErr, ok := lo.ErrorsAs[*RateLimitError](err); ok {
    // retry later
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/8wk5rH8UfrE"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Assert&lt;/h3&gt; 
&lt;p&gt;Does nothing when the condition is &lt;code&gt;true&lt;/code&gt;, otherwise it panics with an optional message.&lt;/p&gt; 
&lt;p&gt;Think twice before using it, given that &lt;a href="https://go.dev/doc/faq#assertions"&gt;Go intentionally omits assertions from its standard library&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;age := getUserAge()

lo.Assert(age &amp;gt;= 15)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;age := getUserAge()

lo.Assert(age &amp;gt;= 15, "user age must be &amp;gt;= 15")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Xv8LLKBMNwI"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Assertf&lt;/h3&gt; 
&lt;p&gt;Like &lt;code&gt;Assert&lt;/code&gt;, but with &lt;code&gt;fmt.Printf&lt;/code&gt;-like formatting.&lt;/p&gt; 
&lt;p&gt;Think twice before using it, given that &lt;a href="https://go.dev/doc/faq#assertions"&gt;Go intentionally omits assertions from its standard library&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;age := getUserAge()

lo.Assertf(age &amp;gt;= 15, "user age must be &amp;gt;= 15, got %d", age)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/TVPEmVcyrdY"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h2&gt;üõ© Benchmark&lt;/h2&gt; 
&lt;p&gt;We executed a simple benchmark with a dead-simple &lt;code&gt;lo.Map&lt;/code&gt; loop:&lt;/p&gt; 
&lt;p&gt;See the full implementation &lt;a href="https://raw.githubusercontent.com/samber/lo/master/map_benchmark_test.go"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;_ = lo.Map[int64](arr, func(x int64, i int) string {
    return strconv.FormatInt(x, 10)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Result:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Here is a comparison between &lt;code&gt;lo.Map&lt;/code&gt;, &lt;code&gt;lop.Map&lt;/code&gt;, &lt;code&gt;go-funk&lt;/code&gt; library and a simple Go &lt;code&gt;for&lt;/code&gt; loop.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ go test -benchmem -bench ./...
goos: linux
goarch: amd64
pkg: github.com/samber/lo
cpu: Intel(R) Core(TM) i5-7267U CPU @ 3.10GHz
cpu: Intel(R) Core(TM) i7 CPU         920  @ 2.67GHz
BenchmarkMap/lo.Map-8         	       8	 132728237 ns/op	39998945 B/op	 1000002 allocs/op
BenchmarkMap/lop.Map-8        	       2	 503947830 ns/op	119999956 B/op	 3000007 allocs/op
BenchmarkMap/reflect-8        	       2	 826400560 ns/op	170326512 B/op	 4000042 allocs/op
BenchmarkMap/for-8            	       9	 126252954 ns/op	39998674 B/op	 1000001 allocs/op
PASS
ok  	github.com/samber/lo	6.657s
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;lo.Map&lt;/code&gt; is way faster (x7) than &lt;code&gt;go-funk&lt;/code&gt;, a reflection-based Map implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lo.Map&lt;/code&gt; has the same allocation profile as &lt;code&gt;for&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lo.Map&lt;/code&gt; is 4% slower than &lt;code&gt;for&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lop.Map&lt;/code&gt; is slower than &lt;code&gt;lo.Map&lt;/code&gt; because it implies more memory allocation and locks. &lt;code&gt;lop.Map&lt;/code&gt; is useful for long-running callbacks, such as i/o bound processing.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;for&lt;/code&gt; beats other implementations for memory and CPU.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ping me on Twitter &lt;a href="https://twitter.com/samuelberthe"&gt;@samuelberthe&lt;/a&gt; (DMs, mentions, whatever :))&lt;/li&gt; 
 &lt;li&gt;Fork the &lt;a href="https://github.com/samber/lo"&gt;project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Fix &lt;a href="https://github.com/samber/lo/issues"&gt;open issues&lt;/a&gt; or request new features&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Don't hesitate ;)&lt;/p&gt; 
&lt;p&gt;Helper naming: helpers must be self-explanatory and respect standards (other languages, libraries...). Feel free to suggest many names in your contributions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install some dev dependencies
make tools

# Run tests
make test
# or
make watch-test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üë§ Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://contrib.rocks/image?repo=samber/lo" alt="Contributors" /&gt;&lt;/p&gt; 
&lt;h2&gt;üí´ Show your support&lt;/h2&gt; 
&lt;p&gt;Give a ‚≠êÔ∏è if this project helped you!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/samber"&gt;&lt;img src="https://img.shields.io/github/sponsors/samber?style=for-the-badge" alt="GitHub Sponsors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üìù License&lt;/h2&gt; 
&lt;p&gt;Copyright ¬© 2022 &lt;a href="https://github.com/samber"&gt;Samuel Berthe&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project is under &lt;a href="https://raw.githubusercontent.com/samber/lo/master/LICENSE"&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TwiN/gatus</title>
      <link>https://github.com/TwiN/gatus</link>
      <description>&lt;p&gt;‚õë Automated developer-oriented status page&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://gatus.io"&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/logo-with-dark-text.png" alt="Gatus" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/TwiN/gatus/actions/workflows/test.yml/badge.svg?sanitize=true" alt="test" /&gt; &lt;a href="https://goreportcard.com/report/github.com/TwiN/gatus"&gt;&lt;img src="https://goreportcard.com/badge/github.com/TwiN/gatus?" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/TwiN/gatus"&gt;&lt;img src="https://codecov.io/gh/TwiN/gatus/branch/master/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TwiN/gatus"&gt;&lt;img src="https://img.shields.io/github/go-mod/go-version/TwiN/gatus.svg?sanitize=true" alt="Go version" /&gt;&lt;/a&gt; &lt;a href="https://cloud.docker.com/repository/docker/twinproduction/gatus"&gt;&lt;img src="https://img.shields.io/docker/pulls/twinproduction/gatus.svg?sanitize=true" alt="Docker pulls" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TwiN"&gt;&lt;img src="https://img.shields.io/github/followers/TwiN?label=Follow&amp;amp;style=social" alt="Follow TwiN" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Gatus is a developer-oriented health dashboard that gives you the ability to monitor your services using HTTP, ICMP, TCP, and even DNS queries as well as evaluate the result of said queries by using a list of conditions on values like the status code, the response time, the certificate expiration, the body and many others. The icing on top is that each of these health checks can be paired with alerting via Slack, Teams, PagerDuty, Discord, Twilio and many more.&lt;/p&gt; 
&lt;p&gt;I personally deploy it in my Kubernetes cluster and let it monitor the status of my core applications: &lt;a href="https://status.twin.sh/"&gt;https://status.twin.sh/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Looking for a managed solution? Check out &lt;a href="https://gatus.io"&gt;Gatus.io&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Quick start&lt;/b&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --name gatus ghcr.io/twin/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;You can also use Docker Hub if you prefer:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --name gatus twinproduction/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;For more details, see &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#usage"&gt;Usage&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ù§ Like this project? Please consider &lt;a href="https://github.com/sponsors/TwiN"&gt;sponsoring me&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/dashboard-dark.jpg" alt="Gatus dashboard" /&gt;&lt;/p&gt; 
&lt;p&gt;Have any feedback or questions? &lt;a href="https://github.com/TwiN/gatus/discussions/new"&gt;Create a discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#why-gatus"&gt;Why Gatus?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuration"&gt;Configuration&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#endpoints"&gt;Endpoints&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#external-endpoints"&gt;External Endpoints&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#suites-alpha"&gt;Suites (ALPHA)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#conditions"&gt;Conditions&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#placeholders"&gt;Placeholders&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#functions"&gt;Functions&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#storage"&gt;Storage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#tunneling"&gt;Tunneling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#alerting"&gt;Alerting&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-aws-ses-alerts"&gt;Configuring AWS SES alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-datadog-alerts"&gt;Configuring Datadog alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-discord-alerts"&gt;Configuring Discord alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-email-alerts"&gt;Configuring Email alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gitea-alerts"&gt;Configuring Gitea alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-github-alerts"&gt;Configuring GitHub alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gitlab-alerts"&gt;Configuring GitLab alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-google-chat-alerts"&gt;Configuring Google Chat alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gotify-alerts"&gt;Configuring Gotify alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-homeassistant-alerts"&gt;Configuring HomeAssistant alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-ifttt-alerts"&gt;Configuring IFTTT alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-ilert-alerts"&gt;Configuring Ilert alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-incidentio-alerts"&gt;Configuring Incident.io alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-line-alerts"&gt;Configuring Line alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-matrix-alerts"&gt;Configuring Matrix alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-mattermost-alerts"&gt;Configuring Mattermost alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-messagebird-alerts"&gt;Configuring Messagebird alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-n8n-alerts"&gt;Configuring n8n alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-new-relic-alerts"&gt;Configuring New Relic alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-ntfy-alerts"&gt;Configuring Ntfy alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-opsgenie-alerts"&gt;Configuring Opsgenie alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-pagerduty-alerts"&gt;Configuring PagerDuty alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-plivo-alerts"&gt;Configuring Plivo alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-pushover-alerts"&gt;Configuring Pushover alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-rocketchat-alerts"&gt;Configuring Rocket.Chat alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-sendgrid-alerts"&gt;Configuring SendGrid alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-signal-alerts"&gt;Configuring Signal alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-signl4-alerts"&gt;Configuring SIGNL4 alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-slack-alerts"&gt;Configuring Slack alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-splunk-alerts"&gt;Configuring Splunk alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-squadcast-alerts"&gt;Configuring Squadcast alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-teams-alerts-deprecated"&gt;Configuring Teams alerts &lt;em&gt;(Deprecated)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-teams-workflow-alerts"&gt;Configuring Teams Workflow alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-telegram-alerts"&gt;Configuring Telegram alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-twilio-alerts"&gt;Configuring Twilio alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-vonage-alerts"&gt;Configuring Vonage alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-webex-alerts"&gt;Configuring Webex alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-zapier-alerts"&gt;Configuring Zapier alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-zulip-alerts"&gt;Configuring Zulip alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-custom-alerts"&gt;Configuring custom alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#announcements"&gt;Announcements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#maintenance"&gt;Maintenance&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#security"&gt;Security&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#basic-authentication"&gt;Basic Authentication&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#oidc"&gt;OIDC&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#tls-encryption"&gt;TLS Encryption&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#metrics"&gt;Metrics&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#custom-labels"&gt;Custom Labels&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#connectivity"&gt;Connectivity&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#remote-instances-experimental"&gt;Remote instances (EXPERIMENTAL)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#deployment"&gt;Deployment&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#docker"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#helm-chart"&gt;Helm Chart&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#terraform"&gt;Terraform&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#running-the-tests"&gt;Running the tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#using-in-production"&gt;Using in Production&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#faq"&gt;FAQ&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#sending-a-graphql-request"&gt;Sending a GraphQL request&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#recommended-interval"&gt;Recommended interval&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#default-timeouts"&gt;Default timeouts&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-a-tcp-endpoint"&gt;Monitoring a TCP endpoint&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-a-udp-endpoint"&gt;Monitoring a UDP endpoint&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-a-sctp-endpoint"&gt;Monitoring a SCTP endpoint&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-a-websocket-endpoint"&gt;Monitoring a WebSocket endpoint&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-icmp"&gt;Monitoring an endpoint using ICMP&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-dns-queries"&gt;Monitoring an endpoint using DNS queries&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-ssh"&gt;Monitoring an endpoint using SSH&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-starttls"&gt;Monitoring an endpoint using STARTTLS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-tls"&gt;Monitoring an endpoint using TLS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-domain-expiration"&gt;Monitoring domain expiration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#concurrency"&gt;Concurrency&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#reloading-configuration-on-the-fly"&gt;Reloading configuration on the fly&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#endpoint-groups"&gt;Endpoint groups&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#how-do-i-sort-by-group-by-default"&gt;How do I sort by group by default?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#exposing-gatus-on-a-custom-path"&gt;Exposing Gatus on a custom path&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#exposing-gatus-on-a-custom-port"&gt;Exposing Gatus on a custom port&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-a-startup-delay"&gt;Configuring a startup delay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#keeping-your-configuration-small"&gt;Keeping your configuration small&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#proxy-client-configuration"&gt;Proxy client configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#how-to-fix-431-request-header-fields-too-large-error"&gt;How to fix 431 Request Header Fields Too Large error&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#badges"&gt;Badges&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#uptime"&gt;Uptime&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#health"&gt;Health&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#health-shieldsio"&gt;Health (Shields.io)&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#response-time"&gt;Response time&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#response-time-chart"&gt;Response time (chart)&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#how-to-change-the-color-thresholds-of-the-response-time-badge"&gt;How to change the color thresholds of the response time badge&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#api"&gt;API&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#interacting-with-the-api-programmatically"&gt;Interacting with the API programmatically&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#raw-data"&gt;Raw Data&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#uptime-1"&gt;Uptime&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#response-time-1"&gt;Response Time&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#installing-as-binary"&gt;Installing as binary&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#high-level-design-overview"&gt;High level design overview&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why Gatus?&lt;/h2&gt; 
&lt;p&gt;Before getting into the specifics, I want to address the most common question:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Why would I use Gatus when I can just use Prometheus‚Äô Alertmanager, Cloudwatch or even Splunk?&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Neither of these can tell you that there‚Äôs a problem if there are no clients actively calling the endpoint. In other words, it's because monitoring metrics mostly rely on existing traffic, which effectively means that unless your clients are already experiencing a problem, you won't be notified.&lt;/p&gt; 
&lt;p&gt;Gatus, on the other hand, allows you to configure health checks for each of your features, which in turn allows it to monitor these features and potentially alert you before any clients are impacted.&lt;/p&gt; 
&lt;p&gt;A sign you may want to look into Gatus is by simply asking yourself whether you'd receive an alert if your load balancer was to go down right now. Will any of your existing alerts be triggered? Your metrics won‚Äôt report an increase in errors if no traffic makes it to your applications. This puts you in a situation where your clients are the ones that will notify you about the degradation of your services rather than you reassuring them that you're working on fixing the issue before they even know about it.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;The main features of Gatus are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Highly flexible health check conditions&lt;/strong&gt;: While checking the response status may be enough for some use cases, Gatus goes much further and allows you to add conditions on the response time, the response body and even the IP address.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ability to use Gatus for user acceptance tests&lt;/strong&gt;: Thanks to the point above, you can leverage this application to create automated user acceptance tests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Very easy to configure&lt;/strong&gt;: Not only is the configuration designed to be as readable as possible, it's also extremely easy to add a new service or a new endpoint to monitor.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Alerting&lt;/strong&gt;: While having a pretty visual dashboard is useful to keep track of the state of your application(s), you probably don't want to stare at it all day. Thus, notifications via Slack, Mattermost, Messagebird, PagerDuty, Twilio, Google chat and Teams are supported out of the box with the ability to configure a custom alerting provider for any needs you might have, whether it be a different provider or a custom application that manages automated rollbacks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Metrics&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Low resource consumption&lt;/strong&gt;: As with most Go applications, the resource footprint that this application requires is negligibly small.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#badges"&gt;Badges&lt;/a&gt;&lt;/strong&gt;: &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/7d/badge.svg?sanitize=true" alt="Uptime 7d" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/24h/badge.svg?sanitize=true" alt="Response time 24h" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dark mode&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/dashboard-conditions.jpg" alt="Gatus dashboard conditions" /&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --name gatus ghcr.io/twin/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use Docker Hub if you prefer:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --name gatus twinproduction/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to create your own configuration, see &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#docker"&gt;Docker&lt;/a&gt; for information on how to mount a configuration file.&lt;/p&gt; 
&lt;p&gt;Here's a simple example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: website                 # Name of your endpoint, can be anything
    url: "https://twin.sh/health"
    interval: 5m                  # Duration to wait between every status check (default: 60s)
    conditions:
      - "[STATUS] == 200"         # Status must be 200
      - "[BODY].status == UP"     # The json path "$.status" must be equal to UP
      - "[RESPONSE_TIME] &amp;lt; 300"   # Response time must be under 300ms

  - name: make-sure-header-is-rendered
    url: "https://example.org/"
    interval: 60s
    conditions:
      - "[STATUS] == 200"                          # Status must be 200
      - "[BODY] == pat(*&amp;lt;h1&amp;gt;Example Domain&amp;lt;/h1&amp;gt;*)" # Body must contain the specified header
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example would look similar to this:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/example.jpg" alt="Simple example" /&gt;&lt;/p&gt; 
&lt;p&gt;By default, the configuration file is expected to be at &lt;code&gt;config/config.yaml&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can specify a custom path by setting the &lt;code&gt;GATUS_CONFIG_PATH&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;p&gt;If &lt;code&gt;GATUS_CONFIG_PATH&lt;/code&gt; points to a directory, all &lt;code&gt;*.yaml&lt;/code&gt; and &lt;code&gt;*.yml&lt;/code&gt; files inside said directory and its subdirectories are merged like so:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All maps/objects are deep merged (i.e. you could define &lt;code&gt;alerting.slack&lt;/code&gt; in one file and &lt;code&gt;alerting.pagerduty&lt;/code&gt; in another file)&lt;/li&gt; 
 &lt;li&gt;All slices/arrays are appended (i.e. you can define &lt;code&gt;endpoints&lt;/code&gt; in multiple files and each endpoint will be added to the final list of endpoints)&lt;/li&gt; 
 &lt;li&gt;Parameters with a primitive value (e.g. &lt;code&gt;metrics&lt;/code&gt;, &lt;code&gt;alerting.slack.webhook-url&lt;/code&gt;, etc.) may only be defined once to forcefully avoid any ambiguity 
  &lt;ul&gt; 
   &lt;li&gt;To clarify, this also means that you could not define &lt;code&gt;alerting.slack.webhook-url&lt;/code&gt; in two files with different values. All files are merged into one before they are processed. This is by design.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üí° You can also use environment variables in the configuration file (e.g. &lt;code&gt;$DOMAIN&lt;/code&gt;, &lt;code&gt;${DOMAIN}&lt;/code&gt;)&lt;/p&gt; 
 &lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples/docker-compose-postgres-storage/config/config.yaml"&gt;examples/docker-compose-postgres-storage/config/config.yaml&lt;/a&gt; for an example.&lt;/p&gt; 
 &lt;p&gt;When your configuration parameter contains a &lt;code&gt;$&lt;/code&gt; symbol, you have to escape &lt;code&gt;$&lt;/code&gt; with &lt;code&gt;$$&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to test it locally, see &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#docker"&gt;Docker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;metrics&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to expose metrics at &lt;code&gt;/metrics&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#storage"&gt;Storage configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#alerting"&gt;Alerting configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;announcements&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#announcements"&gt;Announcements configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#endpoints"&gt;Endpoints configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#external-endpoints"&gt;External Endpoints configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#security"&gt;Security configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;concurrency&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Maximum number of endpoints/suites to monitor concurrently. Set to &lt;code&gt;0&lt;/code&gt; for unlimited. See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#concurrency"&gt;Concurrency&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;disable-monitoring-lock&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#disable-monitoring-lock"&gt;disable the monitoring lock&lt;/a&gt;. &lt;strong&gt;Deprecated&lt;/strong&gt;: Use &lt;code&gt;concurrency: 0&lt;/code&gt; instead.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;skip-invalid-config-update&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to ignore invalid configuration update. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#reloading-configuration-on-the-fly"&gt;Reloading configuration on the fly&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Web configuration.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web.address&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Address to listen on.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;0.0.0.0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web.port&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Port to listen on.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;8080&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web.read-buffer-size&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Buffer size for reading requests from a connection. Also limit for the maximum header size.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;8192&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web.tls.certificate-file&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Optional public certificate file for TLS in PEM format.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web.tls.private-key-file&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Optional private key file for TLS in PEM format.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;UI configuration.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title"&gt;Title of the document&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;Health Dashboard «Ä Gatus&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.description&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Meta description for the page.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;Gatus is an advanced...&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.header&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Header at the top of the dashboard.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;Gatus&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.logo&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;URL to the logo to display.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.link&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Link to open when the logo is clicked.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.buttons&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of buttons to display below the header.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.buttons[].name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Text to display on the button.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.buttons[].link&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Link to open when the button is clicked.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.custom-css&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Custom CSS&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.dark-mode&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to enable dark mode by default. Note that this is superseded by the user's operating system theme preferences.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.default-sort-by&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default sorting option for endpoints in the dashboard. Can be &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;, or &lt;code&gt;health&lt;/code&gt;. Note that user preferences override this.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.default-filter-by&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default filter option for endpoints in the dashboard. Can be &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;failing&lt;/code&gt;, or &lt;code&gt;unstable&lt;/code&gt;. Note that user preferences override this.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;none&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#maintenance"&gt;Maintenance configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you want more verbose logging, you may set the &lt;code&gt;GATUS_LOG_LEVEL&lt;/code&gt; environment variable to &lt;code&gt;DEBUG&lt;/code&gt;. Conversely, if you want less verbose logging, you can set the aforementioned environment variable to &lt;code&gt;WARN&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt; or &lt;code&gt;FATAL&lt;/code&gt;. The default value for &lt;code&gt;GATUS_LOG_LEVEL&lt;/code&gt; is &lt;code&gt;INFO&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Endpoints&lt;/h3&gt; 
&lt;p&gt;Endpoints are URLs, applications, or services that you want to monitor. Each endpoint has a list of conditions that are evaluated on an interval that you define. If any condition fails, the endpoint is considered as unhealthy. You can then configure alerts to be triggered when an endpoint is unhealthy once a certain threshold is reached.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of endpoints to monitor.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].enabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to monitor the endpoint.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Name of the endpoint. Can be anything.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Group name. Used to group multiple endpoints together on the dashboard. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#endpoint-groups"&gt;Endpoint groups&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;URL to send the request to.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].method&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Request method.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].conditions&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Conditions used to determine the health of the endpoint. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#conditions"&gt;Conditions&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].interval&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Duration to wait between every status check.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;60s&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].graphql&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to wrap the body in a query param (&lt;code&gt;{"query":"$body"}&lt;/code&gt;).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].body&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Request body.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].headers&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Request headers.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].dns&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for an endpoint of type DNS. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-dns-queries"&gt;Monitoring an endpoint using DNS queries&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].dns.query-type&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Query type (e.g. MX).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].dns.query-name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Query name (e.g. example.com).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ssh&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for an endpoint of type SSH. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-ssh"&gt;Monitoring an endpoint using SSH&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ssh.username&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH username (e.g. example).&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ssh.password&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH password (e.g. password).&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].alerts&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of all alerts for a given endpoint. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#alerting"&gt;Alerting&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].maintenance-windows&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of all maintenance windows for a given endpoint. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#maintenance"&gt;Maintenance&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].client&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;UI configuration at the endpoint level.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.hide-conditions&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to hide conditions from the results. Note that this only hides conditions from results evaluated from the moment this was enabled.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.hide-hostname&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to hide the hostname from the results.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.hide-port&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to hide the port from the results.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.hide-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to hide the URL from the results. Useful if the URL contains a token.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.dont-resolve-failed-conditions&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to resolve failed conditions for the UI.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.badge.response-time&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of response time thresholds. Each time a threshold is reached, the badge has a different color.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[50, 200, 300, 500, 750]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].extra-labels&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Extra labels to add to the metrics. Useful for grouping endpoints together.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].always-run&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;(SUITES ONLY) Whether to execute this endpoint even if previous endpoints in the suite failed.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].store&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;(SUITES ONLY) Map of values to extract from the response and store in the suite context (stored even on failure).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;You may use the following placeholders in the body (&lt;code&gt;endpoints[].body&lt;/code&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_NAME]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].name&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_GROUP]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].group&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_URL]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].url&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[LOCAL_ADDRESS]&lt;/code&gt; (resolves to the local IP and port like &lt;code&gt;192.0.2.1:25&lt;/code&gt; or &lt;code&gt;[2001:db8::1]:80&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[RANDOM_STRING_N]&lt;/code&gt; (resolves to a random string of numbers and letters of length N (max: 8192))&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;External Endpoints&lt;/h3&gt; 
&lt;p&gt;Unlike regular endpoints, external endpoints are not monitored by Gatus, but they are instead pushed programmatically. This allows you to monitor anything you want, even when what you want to check lives in an environment that would not normally be accessible by Gatus.&lt;/p&gt; 
&lt;p&gt;For instance:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can create your own agent that lives in a private network and pushes the status of your services to a publicly-exposed Gatus instance&lt;/li&gt; 
 &lt;li&gt;You can monitor services that are not supported by Gatus&lt;/li&gt; 
 &lt;li&gt;You can implement your own monitoring system while using Gatus as the dashboard&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of endpoints to monitor.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].enabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to monitor the endpoint.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Name of the endpoint. Can be anything.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Group name. Used to group multiple endpoints together on the dashboard. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#endpoint-groups"&gt;Endpoint groups&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Bearer token required to push status to.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].alerts&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of all alerts for a given endpoint. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#alerting"&gt;Alerting&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].heartbeat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Heartbeat configuration for monitoring when the external endpoint stops sending updates.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].heartbeat.interval&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Expected interval between updates. If no update is received within this interval, alerts will be triggered. Must be at least 10s.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;0&lt;/code&gt; (disabled)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;external-endpoints:
  - name: ext-ep-test
    group: core
    token: "potato"
    heartbeat:
      interval: 30m  # Automatically create a failure if no update is received within 30 minutes
    alerts:
      - type: discord
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To push the status of an external endpoint, you can use &lt;a href="https://github.com/TwiN/gatus-cli"&gt;gatus-cli&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;gatus-cli external-endpoint push --url https://status.example.org --key "core_ext-ep-test" --token "potato" --success
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or send an HTTP request:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;POST /api/v1/endpoints/{key}/external?success={success}&amp;amp;error={error}&amp;amp;duration={duration}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;Using the example configuration above, the key would be &lt;code&gt;core_ext-ep-test&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{success}&lt;/code&gt; is a boolean (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;) value indicating whether the health check was successful or not.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{error}&lt;/code&gt; (optional): a string describing the reason for a failed health check. If {success} is false, this should contain the error message; if the check is successful.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; (optional): the time that the request took as a duration string (e.g. 10s).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You must also pass the token as a &lt;code&gt;Bearer&lt;/code&gt; token in the &lt;code&gt;Authorization&lt;/code&gt; header.&lt;/p&gt; 
&lt;h3&gt;Suites (ALPHA)&lt;/h3&gt; 
&lt;p&gt;Suites are collections of endpoints that are executed sequentially with a shared context. This allows you to create complex monitoring scenarios where the result from one endpoint can be used in subsequent endpoints, enabling workflow-style monitoring.&lt;/p&gt; 
&lt;p&gt;Here are a few cases in which suites could be useful:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Testing multi-step authentication flows (login -&amp;gt; access protected resource -&amp;gt; logout)&lt;/li&gt; 
 &lt;li&gt;API workflows where you need to chain requests (create resource -&amp;gt; update -&amp;gt; verify -&amp;gt; delete)&lt;/li&gt; 
 &lt;li&gt;Monitoring business processes that span multiple services&lt;/li&gt; 
 &lt;li&gt;Validating data consistency across multiple endpoints&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of suites to monitor.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].enabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to monitor the suite.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Name of the suite. Must be unique.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Group name. Used to group multiple suites together on the dashboard.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].interval&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Duration to wait between suite executions.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;10m&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].timeout&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Maximum duration for the entire suite execution.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;5m&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].context&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Initial context values that can be referenced by endpoints.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].endpoints&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of endpoints to execute sequentially.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].endpoints[].store&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Map of values to extract from the response and store in the suite context (stored even on failure).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].endpoints[].always-run&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to execute this endpoint even if previous endpoints in the suite failed.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Suite-level alerts are not supported yet. Configure alerts on individual endpoints within the suite instead.&lt;/p&gt; 
&lt;h4&gt;Using Context in Endpoints&lt;/h4&gt; 
&lt;p&gt;Once values are stored in the context, they can be referenced in subsequent endpoints:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In the URL: &lt;code&gt;https://api.example.com/users/[CONTEXT].user_id&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;In headers: &lt;code&gt;Authorization: Bearer [CONTEXT].auth_token&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;In the body: &lt;code&gt;{"user_id": "[CONTEXT].user_id"}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;In conditions: &lt;code&gt;[BODY].server_ip == [CONTEXT].server_ip&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that context/store keys are limited to A-Z, a-z, 0-9, underscores (&lt;code&gt;_&lt;/code&gt;), and hyphens (&lt;code&gt;-&lt;/code&gt;).&lt;/p&gt; 
&lt;h4&gt;Example Suite Configuration&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;suites:
  - name: item-crud-workflow
    group: api-tests
    interval: 5m
    context:
      price: "19.99"  # Initial static value in context
    endpoints:
      # Step 1: Create an item and store the item ID 
      - name: create-item
        url: https://api.example.com/items
        method: POST
        body: '{"name": "Test Item", "price": "[CONTEXT].price"}'
        conditions:
          - "[STATUS] == 201"
          - "len([BODY].id) &amp;gt; 0"
          - "[BODY].price == [CONTEXT].price"
        store:
          itemId: "[BODY].id"
        alerts:
          - type: slack
            description: "Failed to create item"
            
      # Step 2: Update the item using the stored item ID
      - name: update-item
        url: https://api.example.com/items/[CONTEXT].itemId
        method: PUT
        body: '{"price": "24.99"}'
        conditions:
          - "[STATUS] == 200"
        alerts:
          - type: slack
            description: "Failed to update item"
        
      # Step 3: Fetch the item and validate the price
      - name: get-item
        url: https://api.example.com/items/[CONTEXT].itemId
        method: GET
        conditions:
          - "[STATUS] == 200"
          - "[BODY].price == 24.99"
        alerts:
          - type: slack
            description: "Item price did not update correctly"
            
      # Step 4: Delete the item (always-run: true to ensure cleanup even if step 2 or 3 fails)
      - name: delete-item
        url: https://api.example.com/items/[CONTEXT].itemId
        method: DELETE
        always-run: true
        conditions:
          - "[STATUS] == 204"
        alerts:
          - type: slack
            description: "Failed to delete item"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The suite will be considered successful only if all required endpoints pass their conditions.&lt;/p&gt; 
&lt;h3&gt;Conditions&lt;/h3&gt; 
&lt;p&gt;Here are some examples of conditions you can use:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Condition&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Passing values&lt;/th&gt; 
   &lt;th&gt;Failing values&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS] == 200&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Status must be equal to 200&lt;/td&gt; 
   &lt;td align="left"&gt;200&lt;/td&gt; 
   &lt;td&gt;201, 404, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS] &amp;lt; 300&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Status must lower than 300&lt;/td&gt; 
   &lt;td align="left"&gt;200, 201, 299&lt;/td&gt; 
   &lt;td&gt;301, 302, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS] &amp;lt;= 299&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Status must be less than or equal to 299&lt;/td&gt; 
   &lt;td align="left"&gt;200, 201, 299&lt;/td&gt; 
   &lt;td&gt;301, 302, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS] &amp;gt; 400&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Status must be greater than 400&lt;/td&gt; 
   &lt;td align="left"&gt;401, 402, 403, 404&lt;/td&gt; 
   &lt;td&gt;400, 200, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS] == any(200, 429)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Status must be either 200 or 429&lt;/td&gt; 
   &lt;td align="left"&gt;200, 429&lt;/td&gt; 
   &lt;td&gt;201, 400, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[CONNECTED] == true&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Connection to host must've been successful&lt;/td&gt; 
   &lt;td align="left"&gt;true&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[RESPONSE_TIME] &amp;lt; 500&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Response time must be below 500ms&lt;/td&gt; 
   &lt;td align="left"&gt;100ms, 200ms, 300ms&lt;/td&gt; 
   &lt;td&gt;500ms, 501ms&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[IP] == 127.0.0.1&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Target IP must be 127.0.0.1&lt;/td&gt; 
   &lt;td align="left"&gt;127.0.0.1&lt;/td&gt; 
   &lt;td&gt;0.0.0.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY] == 1&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The body must be equal to 1&lt;/td&gt; 
   &lt;td align="left"&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{}&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].user.name == john&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;JSONPath value of &lt;code&gt;$.user.name&lt;/code&gt; is equal to &lt;code&gt;john&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"user":{"name":"john"}}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].data[0].id == 1&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;JSONPath value of &lt;code&gt;$.data[0].id&lt;/code&gt; is equal to 1&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"data":[{"id":1}]}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].age == [BODY].id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;JSONPath value of &lt;code&gt;$.age&lt;/code&gt; is equal JSONPath &lt;code&gt;$.id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"age":1,"id":1}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;len([BODY].data) &amp;lt; 5&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Array at JSONPath &lt;code&gt;$.data&lt;/code&gt; has less than 5 elements&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"data":[{"id":1}]}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;len([BODY].name) == 8&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;String at JSONPath &lt;code&gt;$.name&lt;/code&gt; has a length of 8&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"name":"john.doe"}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{"name":"bob"}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;has([BODY].errors) == false&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;JSONPath &lt;code&gt;$.errors&lt;/code&gt; does not exist&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"name":"john.doe"}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{"errors":[]}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;has([BODY].users) == true&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;JSONPath &lt;code&gt;$.users&lt;/code&gt; exists&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"users":[]}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].name == pat(john*)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;String at JSONPath &lt;code&gt;$.name&lt;/code&gt; matches pattern &lt;code&gt;john*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"name":"john.doe"}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{"name":"bob"}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].id == any(1, 2)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Value at JSONPath &lt;code&gt;$.id&lt;/code&gt; is equal to &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;1, 2&lt;/td&gt; 
   &lt;td&gt;3, 4, 5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[CERTIFICATE_EXPIRATION] &amp;gt; 48h&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Certificate expiration is more than 48h away&lt;/td&gt; 
   &lt;td align="left"&gt;49h, 50h, 123h&lt;/td&gt; 
   &lt;td&gt;1h, 24h, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[DOMAIN_EXPIRATION] &amp;gt; 720h&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The domain must expire in more than 720h&lt;/td&gt; 
   &lt;td align="left"&gt;4000h&lt;/td&gt; 
   &lt;td&gt;1h, 24h, ...&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Placeholders&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Placeholder&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Example of resolved value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the HTTP status of the request&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;404&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[RESPONSE_TIME]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the response time the request took, in ms&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[IP]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the IP of the target host&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;192.168.0.232&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the response body. Supports JSONPath.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"name":"john.doe"}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[CONNECTED]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into whether a connection could be established&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[CERTIFICATE_EXPIRATION]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the duration before certificate expiration (valid units are "s", "m", "h".)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;24h&lt;/code&gt;, &lt;code&gt;48h&lt;/code&gt;, 0 (if not protocol with certs)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[DOMAIN_EXPIRATION]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the duration before the domain expires (valid units are "s", "m", "h".)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;24h&lt;/code&gt;, &lt;code&gt;48h&lt;/code&gt;, &lt;code&gt;1234h56m78s&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[DNS_RCODE]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the DNS status of the response&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;NOERROR&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Functions&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Function&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;len&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;If the given path leads to an array, returns its length. Otherwise, the JSON at the given path is minified and converted to a string, and the resulting number of characters is returned. Works only with the &lt;code&gt;[BODY]&lt;/code&gt; placeholder.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;len([BODY].username) &amp;gt; 8&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;has&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; based on whether a given path is valid. Works only with the &lt;code&gt;[BODY]&lt;/code&gt; placeholder.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;has([BODY].errors) == false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;pat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Specifies that the string passed as parameter should be evaluated as a pattern. Works only with &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[IP] == pat(192.168.*)&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;any&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Specifies that any one of the values passed as parameters is a valid value. Works only with &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].ip == any(127.0.0.1, ::1)&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üí° Use &lt;code&gt;pat&lt;/code&gt; only when you need to. &lt;code&gt;[STATUS] == pat(2*)&lt;/code&gt; is a lot more expensive than &lt;code&gt;[STATUS] &amp;lt; 300&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Announcements&lt;/h3&gt; 
&lt;p&gt;System-wide announcements allow you to display important messages at the top of the status page. These can be used to inform users about planned maintenance, ongoing issues, or general information.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;announcements&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of announcements to display&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;announcements[].timestamp&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;UTC timestamp when the announcement was made (RFC3339 format)&lt;/td&gt; 
   &lt;td align="left"&gt;Required&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;announcements[].type&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Type of announcement. Valid values: &lt;code&gt;outage&lt;/code&gt;, &lt;code&gt;warning&lt;/code&gt;, &lt;code&gt;information&lt;/code&gt;, &lt;code&gt;operational&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"none"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;announcements[].message&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The message to display to users&lt;/td&gt; 
   &lt;td align="left"&gt;Required&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Types:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;outage&lt;/strong&gt;: Indicates service disruptions or critical issues (red theme)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;warning&lt;/strong&gt;: Indicates potential issues or important notices (yellow theme)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;information&lt;/strong&gt;: General information or updates (blue theme)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;operational&lt;/strong&gt;: Indicates resolved issues or normal operations (green theme)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;none&lt;/strong&gt;: Neutral announcements with no specific severity (gray theme, default if none are specified)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example Configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;announcements:
  - timestamp: 2025-08-15T14:00:00Z
    type: outage
    message: "Scheduled maintenance on database servers from 14:00 to 16:00 UTC"
  - timestamp: 2025-08-15T16:15:00Z
    type: operational  
    message: "Database maintenance completed successfully. All systems operational."
  - timestamp: 2025-08-15T12:00:00Z
    type: information
    message: "New monitoring dashboard features will be deployed next week"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Storage&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Storage configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage.path&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Path to persist the data in. Only supported for types &lt;code&gt;sqlite&lt;/code&gt; and &lt;code&gt;postgres&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage.type&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Type of storage. Valid types: &lt;code&gt;memory&lt;/code&gt;, &lt;code&gt;sqlite&lt;/code&gt;, &lt;code&gt;postgres&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"memory"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage.caching&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to use write-through caching. Improves loading time for large dashboards. &lt;br /&gt;Only supported if &lt;code&gt;storage.type&lt;/code&gt; is &lt;code&gt;sqlite&lt;/code&gt; or &lt;code&gt;postgres&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage.maximum-number-of-results&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The maximum number of results that an endpoint can have&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;100&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage.maximum-number-of-events&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The maximum number of events that an endpoint can have&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;50&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The results for each endpoint health check as well as the data for uptime and the past events must be persisted so that they can be displayed on the dashboard. These parameters allow you to configure the storage in question.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If &lt;code&gt;storage.type&lt;/code&gt; is &lt;code&gt;memory&lt;/code&gt; (default):&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;# Note that this is the default value, and you can omit the storage configuration altogether to achieve the same result.
# Because the data is stored in memory, the data will not survive a restart.
storage:
  type: memory
  maximum-number-of-results: 200
  maximum-number-of-events: 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;If &lt;code&gt;storage.type&lt;/code&gt; is &lt;code&gt;sqlite&lt;/code&gt;, &lt;code&gt;storage.path&lt;/code&gt; must not be blank:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;storage:
  type: sqlite
  path: data.db
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples/docker-compose-sqlite-storage"&gt;examples/docker-compose-sqlite-storage&lt;/a&gt; for an example.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If &lt;code&gt;storage.type&lt;/code&gt; is &lt;code&gt;postgres&lt;/code&gt;, &lt;code&gt;storage.path&lt;/code&gt; must be the connection URL:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;storage:
  type: postgres
  path: "postgres://user:password@127.0.0.1:5432/gatus?sslmode=disable"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples/docker-compose-postgres-storage"&gt;examples/docker-compose-postgres-storage&lt;/a&gt; for an example.&lt;/p&gt; 
&lt;h3&gt;Client configuration&lt;/h3&gt; 
&lt;p&gt;In order to support a wide range of environments, each monitored endpoint has a unique configuration for the client used to send the request.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.insecure&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to skip verifying the server's certificate chain and host name.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.ignore-redirect&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to ignore redirects (true) or follow them (false, default).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.timeout&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Duration before timing out.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;10s&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.dns-resolver&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Override the DNS resolver using the format &lt;code&gt;{proto}://{host}:{port}&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.oauth2&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;OAuth2 client configuration.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.oauth2.token-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The token endpoint URL&lt;/td&gt; 
   &lt;td align="left"&gt;required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.oauth2.client-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The client id which should be used for the &lt;code&gt;Client credentials flow&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.oauth2.client-secret&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The client secret which should be used for the &lt;code&gt;Client credentials flow&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.oauth2.scopes[]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;A list of &lt;code&gt;scopes&lt;/code&gt; which should be used for the &lt;code&gt;Client credentials flow&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;required &lt;code&gt;[""]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.proxy-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The URL of the proxy to use for the client&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.identity-aware-proxy&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Google Identity-Aware-Proxy client configuration.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.identity-aware-proxy.audience&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The Identity-Aware-Proxy audience. (client-id of the IAP oauth2 credential)&lt;/td&gt; 
   &lt;td align="left"&gt;required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.tls.certificate-file&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Path to a client certificate (in PEM format) for mTLS configurations.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.tls.private-key-file&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Path to a client private key (in PEM format) for mTLS configurations.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.tls.renegotiation&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Type of renegotiation support to provide. (&lt;code&gt;never&lt;/code&gt;, &lt;code&gt;freely&lt;/code&gt;, &lt;code&gt;once&lt;/code&gt;).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"never"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.network&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The network to use for ICMP endpoint client (&lt;code&gt;ip&lt;/code&gt;, &lt;code&gt;ip4&lt;/code&gt; or &lt;code&gt;ip6&lt;/code&gt;).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"ip"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.tunnel&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Name of the SSH tunnel to use for this endpoint. See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#tunneling"&gt;Tunneling&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìù Some of these parameters are ignored based on the type of endpoint. For instance, there's no certificate involved in ICMP requests (ping), therefore, setting &lt;code&gt;client.insecure&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; for an endpoint of that type will not do anything.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This default configuration is as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;client:
  insecure: false
  ignore-redirect: false
  timeout: 10s
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that this configuration is only available under &lt;code&gt;endpoints[]&lt;/code&gt;, &lt;code&gt;alerting.mattermost&lt;/code&gt; and &lt;code&gt;alerting.custom&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Here's an example with the client configuration under &lt;code&gt;endpoints[]&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: website
    url: "https://twin.sh/health"
    client:
      insecure: false
      ignore-redirect: false
      timeout: 10s
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example shows how you can specify a custom DNS resolver:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: with-custom-dns-resolver
    url: "https://your.health.api/health"
    client:
      dns-resolver: "tcp://8.8.8.8:53"
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example shows how you can use the &lt;code&gt;client.oauth2&lt;/code&gt; configuration to query a backend API with &lt;code&gt;Bearer token&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: with-custom-oauth2
    url: "https://your.health.api/health"
    client:
      oauth2:
        token-url: https://your-token-server/token
        client-id: 00000000-0000-0000-0000-000000000000
        client-secret: your-client-secret
        scopes: ['https://your.health.api/.default']
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example shows how you can use the &lt;code&gt;client.identity-aware-proxy&lt;/code&gt; configuration to query a backend API with &lt;code&gt;Bearer token&lt;/code&gt; using Google Identity-Aware-Proxy:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: with-custom-iap
    url: "https://my.iap.protected.app/health"
    client:
      identity-aware-proxy:
        audience: "XXXXXXXX-XXXXXXXXXXXX.apps.googleusercontent.com"
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìù Note that Gatus will use the &lt;a href="https://cloud.google.com/docs/authentication/application-default-credentials"&gt;gcloud default credentials&lt;/a&gt; within its environment to generate the token.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This example shows you how you can use the &lt;code&gt;client.tls&lt;/code&gt; configuration to perform an mTLS query to a backend API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: website
    url: "https://your.mtls.protected.app/health"
    client:
      tls:
        certificate-file: /path/to/user_cert.pem
        private-key-file: /path/to/user_key.pem
        renegotiation: once
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìù Note that if running in a container, you must volume mount the certificate and key into the container.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Tunneling&lt;/h3&gt; 
&lt;p&gt;Gatus supports SSH tunneling to monitor internal services through jump hosts or bastion servers. This is particularly useful for monitoring services that are not directly accessible from where Gatus is deployed.&lt;/p&gt; 
&lt;p&gt;SSH tunnels are defined globally in the &lt;code&gt;tunneling&lt;/code&gt; section and then referenced by name in endpoint client configurations.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;tunneling&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH tunnel configurations&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;tunneling.&amp;lt;tunnel-name&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for a named SSH tunnel&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;tunneling.&amp;lt;tunnel-name&amp;gt;.type&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Type of tunnel (currently only &lt;code&gt;SSH&lt;/code&gt; is supported)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;tunneling.&amp;lt;tunnel-name&amp;gt;.host&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH server hostname or IP address&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;tunneling.&amp;lt;tunnel-name&amp;gt;.port&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH server port&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;22&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;tunneling.&amp;lt;tunnel-name&amp;gt;.username&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH username&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;tunneling.&amp;lt;tunnel-name&amp;gt;.password&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH password (use either this or private-key)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;tunneling.&amp;lt;tunnel-name&amp;gt;.private-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH private key in PEM format (use either this or password)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.tunnel&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Name of the tunnel to use for this endpoint&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;tunneling:
  production:
    type: SSH
    host: "jumphost.example.com"
    username: "monitoring"
    private-key: |
      -----BEGIN RSA PRIVATE KEY-----
      MIIEpAIBAAKCAQEA...
      -----END RSA PRIVATE KEY-----

endpoints:
  - name: "internal-api"
    url: "http://internal-api.example.com:8080/health"
    client:
      tunnel: "production"
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;WARNING&lt;/strong&gt;:: Tunneling may introduce additional latency, especially if the connection to the tunnel is retried frequently. This may lead to inaccurate response time measurements.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Alerting&lt;/h3&gt; 
&lt;p&gt;Gatus supports multiple alerting providers, such as Slack and PagerDuty, and supports different alerts for each individual endpoints with configurable descriptions and thresholds.&lt;/p&gt; 
&lt;p&gt;Alerts are configured at the endpoint level like so:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of all alerts for a given endpoint.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].type&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Type of alert. &lt;br /&gt;See table below for all valid types.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].enabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to enable the alert.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].failure-threshold&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number of failures in a row needed before triggering the alert.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].success-threshold&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number of successes in a row before an ongoing incident is marked as resolved.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].minimum-reminder-interval&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Minimum time interval between alert reminders. E.g. &lt;code&gt;"30m"&lt;/code&gt;, &lt;code&gt;"1h45m30s"&lt;/code&gt; or &lt;code&gt;"24h"&lt;/code&gt;. If empty or &lt;code&gt;0&lt;/code&gt;, reminders are disabled. Cannot be lower than &lt;code&gt;5m&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].send-on-resolved&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to send a notification once a triggered alert is marked as resolved.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].description&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Description of the alert. Will be included in the alert sent.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].provider-override&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Alerting provider configuration override for the given alert type&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Here's an example of what an alert configuration might look like at the endpoint level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also override global provider configuration by using &lt;code&gt;alerts[].provider-override&lt;/code&gt;, like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
        provider-override:
          webhook-url: "https://hooks.slack.com/services/**********/**********/**********"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìù If an alerting provider is not properly configured, all alerts configured with the provider's type will be ignored.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.awsses&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;awsses&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-aws-ses-alerts"&gt;Configuring AWS SES alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for custom actions on failure or alerts. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-custom-alerts"&gt;Configuring Custom alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;datadog&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-datadog-alerts"&gt;Configuring Datadog alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;discord&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-discord-alerts"&gt;Configuring Discord alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;email&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-email-alerts"&gt;Configuring Email alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitea&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gitea&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gitea-alerts"&gt;Configuring Gitea alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.github&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;github&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-github-alerts"&gt;Configuring GitHub alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gitlab&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gitlab-alerts"&gt;Configuring GitLab alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;googlechat&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-google-chat-alerts"&gt;Configuring Google Chat alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gotify&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gotify-alerts"&gt;Configuring Gotify alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.homeassistant&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;homeassistant&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-homeassistant-alerts"&gt;Configuring HomeAssistant alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ifttt&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;ifttt&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-ifttt-alerts"&gt;Configuring IFTTT alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;ilert&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-ilert-alerts"&gt;Configuring ilert alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;incident-io&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-incidentio-alerts"&gt;Configuring Incident.io alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.line&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;line&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-line-alerts"&gt;Configuring Line alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;matrix&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-matrix-alerts"&gt;Configuring Matrix alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;mattermost&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-mattermost-alerts"&gt;Configuring Mattermost alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;messagebird&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-messagebird-alerts"&gt;Configuring Messagebird alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.n8n&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;n8n&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-n8n-alerts"&gt;Configuring n8n alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;newrelic&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-new-relic-alerts"&gt;Configuring New Relic alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;ntfy&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-ntfy-alerts"&gt;Configuring Ntfy alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;opsgenie&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-opsgenie-alerts"&gt;Configuring Opsgenie alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;pagerduty&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-pagerduty-alerts"&gt;Configuring PagerDuty alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;plivo&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-plivo-alerts"&gt;Configuring Plivo alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;pushover&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-pushover-alerts"&gt;Configuring Pushover alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.rocketchat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;rocketchat&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-rocketchat-alerts"&gt;Configuring Rocket.Chat alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;sendgrid&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-sendgrid-alerts"&gt;Configuring SendGrid alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;signal&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-signal-alerts"&gt;Configuring Signal alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signl4&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;signl4&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-signl4-alerts"&gt;Configuring SIGNL4 alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;slack&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-slack-alerts"&gt;Configuring Slack alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;splunk&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-splunk-alerts"&gt;Configuring Splunk alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.squadcast&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;squadcast&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-squadcast-alerts"&gt;Configuring Squadcast alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;teams&lt;/code&gt;. &lt;em&gt;(Deprecated)&lt;/em&gt; &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-teams-alerts-deprecated"&gt;Configuring Teams alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;teams-workflows&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-teams-workflow-alerts"&gt;Configuring Teams Workflow alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;telegram&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-telegram-alerts"&gt;Configuring Telegram alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Settings for alerts of type &lt;code&gt;twilio&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-twilio-alerts"&gt;Configuring Twilio alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;vonage&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-vonage-alerts"&gt;Configuring Vonage alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.webex&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;webex&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-webex-alerts"&gt;Configuring Webex alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zapier&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;zapier&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-zapier-alerts"&gt;Configuring Zapier alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;zulip&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-zulip-alerts"&gt;Configuring Zulip alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Configuring AWS SES alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Settings for alerts of type &lt;code&gt;aws-ses&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.access-key-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;AWS Access Key ID&lt;/td&gt; 
   &lt;td align="left"&gt;Optional &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.secret-access-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;AWS Secret Access Key&lt;/td&gt; 
   &lt;td align="left"&gt;Optional &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.region&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;AWS Region&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.from&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The Email address to send the emails from (should be registered in SES)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.to&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Comma separated list of email address to notify&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  aws-ses:
    access-key-id: "..."
    secret-access-key: "..."
    region: "us-east-1"
    from: "status@example.com"
    to: "user@example.com"

endpoints:
  - name: website
    interval: 30s
    url: "https://twin.sh/health"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: aws-ses
        failure-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the &lt;code&gt;access-key-id&lt;/code&gt; and &lt;code&gt;secret-access-key&lt;/code&gt; are not defined Gatus will fall back to IAM authentication.&lt;/p&gt; 
&lt;p&gt;Make sure you have the ability to use &lt;code&gt;ses:SendEmail&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Configuring Datadog alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;datadog&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog.api-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Datadog API key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog.site&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Datadog site (e.g., datadoghq.com, datadoghq.eu)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"datadoghq.com"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog.tags&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Additional tags to include&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.datadog.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  datadog:
    api-key: "YOUR_API_KEY"
    site: "datadoghq.com"  # or datadoghq.eu for EU region
    tags:
      - "environment:production"
      - "team:platform"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: datadog
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Discord alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;discord&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Discord Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Title of the notification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;":helmet_with_white_cross: Gatus"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.message-content&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Message content to send before the embed (useful for pinging users/roles, e.g. &lt;code&gt;&amp;lt;@123&amp;gt;&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.discord.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  discord:
    webhook-url: "https://discord.com/api/webhooks/**********/**********"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: discord
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Email alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;email&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.from&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Email used to send the alert&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.username&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Username of the SMTP server used to send the alert. If empty, uses &lt;code&gt;alerting.email.from&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.password&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Password of the SMTP server used to send the alert. If empty, no authentication is performed.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.host&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Host of the mail server (e.g. &lt;code&gt;smtp.gmail.com&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.port&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Port the mail server is listening to (e.g. &lt;code&gt;587&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.to&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Email(s) to send the alerts to&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.client.insecure&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to skip TLS verification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.email.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  email:
    from: "from@example.com"
    username: "from@example.com"
    password: "hunter2"
    host: "mail.example.com"
    port: 587
    to: "recipient1@example.com,recipient2@example.com"
    client:
      insecure: false
    # You can also add group-specific to keys, which will
    # override the to key above for the specified groups
    overrides:
      - group: "core"
        to: "recipient3@example.com,recipient4@example.com"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: email
        description: "healthcheck failed"
        send-on-resolved: true

  - name: back-end
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
    alerts:
      - type: email
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö† Some mail servers are painfully slow.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Configuring Gitea alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitea&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gitea&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitea.repository-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Gitea repository URL (e.g. &lt;code&gt;https://gitea.com/TwiN/example&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitea.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Personal access token to use for authentication. &lt;br /&gt;Must have at least RW on issues and RO on metadata.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitea.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The Gitea alerting provider creates an issue prefixed with &lt;code&gt;alert(gatus):&lt;/code&gt; and suffixed with the endpoint's display name for each alert. If &lt;code&gt;send-on-resolved&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; on the endpoint alert, the issue will be automatically closed when the alert is resolved.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  gitea:
    repository-url: "https://gitea.com/TwiN/test"
    token: "349d63f16......"

endpoints:
  - name: example
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 75"
    alerts:
      - type: gitea
        failure-threshold: 2
        success-threshold: 3
        send-on-resolved: true
        description: "Everything's burning AAAAAHHHHHHHHHHHHHHH"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/gitea-alerts.png" alt="Gitea alert" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring GitHub alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.github&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;github&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.github.repository-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;GitHub repository URL (e.g. &lt;code&gt;https://github.com/TwiN/example&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.github.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Personal access token to use for authentication. &lt;br /&gt;Must have at least RW on issues and RO on metadata.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.github.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The GitHub alerting provider creates an issue prefixed with &lt;code&gt;alert(gatus):&lt;/code&gt; and suffixed with the endpoint's display name for each alert. If &lt;code&gt;send-on-resolved&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; on the endpoint alert, the issue will be automatically closed when the alert is resolved.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  github:
    repository-url: "https://github.com/TwiN/test"
    token: "github_pat_12345..."

endpoints:
  - name: example
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 75"
    alerts:
      - type: github
        failure-threshold: 2
        success-threshold: 3
        send-on-resolved: true
        description: "Everything's burning AAAAAHHHHHHHHHHHHHHH"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/github-alerts.png" alt="GitHub alert" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring GitLab alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gitlab&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;GitLab alert webhook URL (e.g. &lt;code&gt;https://gitlab.com/yourusername/example/alerts/notify/gatus/xxxxxxxxxxxxxxxx.json&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.authorization-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;GitLab alert authorization key.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.severity&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Override default severity (critical), can be one of &lt;code&gt;critical, high, medium, low, info, unknown&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.monitoring-tool&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Override the monitoring tool name (gatus)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"gatus"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.environment-name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Set gitlab environment's name. Required to display alerts on a dashboard.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.service&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Override endpoint display name&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The GitLab alerting provider creates an alert prefixed with &lt;code&gt;alert(gatus):&lt;/code&gt; and suffixed with the endpoint's display name for each alert. If &lt;code&gt;send-on-resolved&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; on the endpoint alert, the alert will be automatically closed when the alert is resolved. See &lt;a href="https://docs.gitlab.com/ee/operations/incident_management/integrations.html#configuration"&gt;https://docs.gitlab.com/ee/operations/incident_management/integrations.html#configuration&lt;/a&gt; to configure the endpoint.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  gitlab:
    webhook-url: "https://gitlab.com/hlidotbe/example/alerts/notify/gatus/xxxxxxxxxxxxxxxx.json"
    authorization-key: "12345"

endpoints:
  - name: example
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 75"
    alerts:
      - type: gitlab
        failure-threshold: 2
        success-threshold: 3
        send-on-resolved: true
        description: "Everything's burning AAAAAHHHHHHHHHHHHHHH"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/gitlab-alerts.png" alt="GitLab alert" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Google Chat alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;googlechat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Google Chat Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.client&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.googlechat.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  googlechat:
    webhook-url: "https://chat.googleapis.com/v1/spaces/*******/messages?key=**********&amp;amp;token=********"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: googlechat
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Gotify alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gotify&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify.server-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Gotify server URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Token that is used for authentication.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify.priority&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Priority of the alert according to Gotify standards.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;5&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Title of the notification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"Gatus: &amp;lt;endpoint&amp;gt;"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  gotify:
    server-url: "https://gotify.example"
    token: "**************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: gotify
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/gotify-alerts.png" alt="Gotify notifications" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring HomeAssistant alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default Value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.homeassistant.url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;HomeAssistant instance URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.homeassistant.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Long-lived access token from HomeAssistant&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.homeassistant.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration to use for endpoints with an alert of the appropriate type&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.homeassistant.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.homeassistant.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.homeassistant.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.homeassistant.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  homeassistant:
    url: "http://homeassistant:8123"  # URL of your HomeAssistant instance
    token: "YOUR_LONG_LIVED_ACCESS_TOKEN"  # Long-lived access token from HomeAssistant

endpoints:
  - name: my-service
    url: "https://my-service.com"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: homeassistant
        enabled: true
        send-on-resolved: true
        description: "My service health check"
        failure-threshold: 3
        success-threshold: 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The alerts will be sent as events to HomeAssistant with the event type &lt;code&gt;gatus_alert&lt;/code&gt;. The event data includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;status&lt;/code&gt;: "triggered" or "resolved"&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;endpoint&lt;/code&gt;: The name of the monitored endpoint&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;description&lt;/code&gt;: The alert description if provided&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;conditions&lt;/code&gt;: List of conditions and their results&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;failure_count&lt;/code&gt;: Number of consecutive failures (when triggered)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;success_count&lt;/code&gt;: Number of consecutive successes (when resolved)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can use these events in HomeAssistant automations to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Send notifications&lt;/li&gt; 
 &lt;li&gt;Control devices&lt;/li&gt; 
 &lt;li&gt;Trigger scenes&lt;/li&gt; 
 &lt;li&gt;Log to history&lt;/li&gt; 
 &lt;li&gt;And more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example HomeAssistant automation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;automation:
  - alias: "Gatus Alert Handler"
    trigger:
      platform: event
      event_type: gatus_alert
    action:
      - service: notify.notify
        data_template:
          title: "Gatus Alert: {{ trigger.event.data.event_data.endpoint }}"
          message: &amp;gt;
            Status: {{ trigger.event.data.event_data.status }}
            {% if trigger.event.data.event_data.description %}
            Description: {{ trigger.event.data.event_data.description }}
            {% endif %}
            {% for condition in trigger.event.data.event_data.conditions %}
            {{ '‚úÖ' if condition.success else '‚ùå' }} {{ condition.condition }}
            {% endfor %}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get your HomeAssistant long-lived access token:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open HomeAssistant&lt;/li&gt; 
 &lt;li&gt;Click on your profile name (bottom left)&lt;/li&gt; 
 &lt;li&gt;Scroll down to "Long-Lived Access Tokens"&lt;/li&gt; 
 &lt;li&gt;Click "Create Token"&lt;/li&gt; 
 &lt;li&gt;Give it a name (e.g., "Gatus")&lt;/li&gt; 
 &lt;li&gt;Copy the token - you'll only see it once!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Configuring IFTTT alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ifttt&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;ifttt&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ifttt.webhook-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;IFTTT Webhook key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ifttt.event-name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;IFTTT event name&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ifttt.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ifttt.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ifttt.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ifttt.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.ifttt.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  ifttt:
    webhook-key: "YOUR_WEBHOOK_KEY"
    event-name: "gatus_alert"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: ifttt
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring ilert alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;ilert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert.integration-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;ilert Alert Source integration key&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.ilert.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;It is highly recommended to set &lt;code&gt;endpoints[].alerts[].send-on-resolved&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; for alerts of type &lt;code&gt;ilert&lt;/code&gt;, because unlike other alerts, the operation resulting from setting said parameter to &lt;code&gt;true&lt;/code&gt; will not create another alert but mark the alert as resolved on ilert instead.&lt;/p&gt; 
&lt;p&gt;Behavior:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;By default, &lt;code&gt;alerting.ilert.integration-key&lt;/code&gt; is used as the integration key&lt;/li&gt; 
 &lt;li&gt;If the endpoint being evaluated belongs to a group (&lt;code&gt;endpoints[].group&lt;/code&gt;) matching the value of &lt;code&gt;alerting.ilert.overrides[].group&lt;/code&gt;, the provider will use that override's integration key instead of &lt;code&gt;alerting.ilert.integration-key&lt;/code&gt;'s&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  ilert:
    integration-key: "********************************"
    # You can also add group-specific integration keys, which will
    # override the integration key above for the specified groups
    overrides:
      - group: "core"
        integration-key: "********************************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: ilert
        failure-threshold: 3
        success-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Incident.io alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;incident-io&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;url to trigger an alert event.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.auth-token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Token that is used for authentication.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.source-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Source URL&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.incident-io.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  incident-io:
    url: "*****************"
    auth-token: "********************************************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: incident-io
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In order to get the required alert source config id and authentication token, you must configure an HTTP alert source.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE:&lt;/em&gt;&lt;/strong&gt; the source config id is of the form &lt;code&gt;https://api.incident.io/v2/alert_events/http/$ID&lt;/code&gt; and the token is expected to be passed as a bearer token like so: &lt;code&gt;Authorization: Bearer $TOKEN&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Configuring Line alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.line&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;line&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.line.channel-access-token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Line Messaging API channel access token&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.line.user-ids&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of Line user IDs to send messages to (this can be user ids, room ids or group ids)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.line.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.line.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.line.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.line.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.line.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  line:
    channel-access-token: "YOUR_CHANNEL_ACCESS_TOKEN"
    user-ids:
      - "U1234567890abcdef" # This can be a group id, room id or user id
      - "U2345678901bcdefg"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: line
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Matrix alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;matrix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.server-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Homeserver URL&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;https://matrix-client.matrix.org&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.access-token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Bot user access token (see &lt;a href="https://webapps.stackexchange.com/q/131056"&gt;https://webapps.stackexchange.com/q/131056&lt;/a&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.internal-room-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Internal room ID of room to send alerts to (can be found in Room Settings &amp;gt; Advanced)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.matrix.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  matrix:
    server-url: "https://matrix-client.matrix.org"
    access-token: "123456"
    internal-room-id: "!example:matrix.org"

endpoints:
  - name: website
    interval: 5m
    url: "https://twin.sh/health"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: matrix
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Mattermost alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;mattermost&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Mattermost Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.channel&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Mattermost channel name override (optional)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.client&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.mattermost.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  mattermost:
    webhook-url: "http://**********/hooks/**********"
    client:
      insecure: true

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: mattermost
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/mattermost-alerts.png" alt="Mattermost notifications" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Messagebird alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;messagebird&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird.access-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Messagebird access key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird.originator&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The sender of the message&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird.recipients&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The recipients of the message&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Example of sending &lt;strong&gt;SMS&lt;/strong&gt; text message alert using Messagebird:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  messagebird:
    access-key: "..."
    originator: "31619191918"
    recipients: "31619191919,31619191920"

endpoints:
  - name: website
    interval: 5m
    url: "https://twin.sh/health"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: messagebird
        failure-threshold: 3
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring New Relic alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;newrelic&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic.api-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;New Relic API key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic.account-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;New Relic account ID&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic.region&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Region (US or EU)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"US"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.newrelic.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  newrelic:
    api-key: "YOUR_API_KEY"
    account-id: "1234567"
    region: "US"  # or "EU" for European region

endpoints:
  - name: example
    url: "https://example.org"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: newrelic
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring n8n alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.n8n&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;n8n&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.n8n.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;n8n webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.n8n.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Title of the alert sent to n8n&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.n8n.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.n8n.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.n8n.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.n8n.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.n8n.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;a href="https://n8n.io/"&gt;n8n&lt;/a&gt; is a workflow automation platform that allows you to automate tasks across different applications and services using webhooks.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://github.com/TwiN/n8n-nodes-gatus-trigger"&gt;n8n-nodes-gatus-trigger&lt;/a&gt; for a n8n community node that can be used as trigger.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  n8n:
    webhook-url: "https://your-n8n-instance.com/webhook/your-webhook-id"
    title: "Gatus Monitoring"
    default-alert:
      send-on-resolved: true

endpoints:
  - name: example
    url: "https://example.org"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: n8n
        description: "Health check alert"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The JSON payload sent to the n8n webhook will include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;title&lt;/code&gt;: The configured title&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;endpoint_name&lt;/code&gt;: Name of the endpoint&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;endpoint_group&lt;/code&gt;: Group of the endpoint (if any)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;endpoint_url&lt;/code&gt;: URL being monitored&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;alert_description&lt;/code&gt;: Custom alert description&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resolved&lt;/code&gt;: Boolean indicating if the alert is resolved&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;message&lt;/code&gt;: Human-readable alert message&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;condition_results&lt;/code&gt;: Array of condition results with their success status&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Configuring Ntfy alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;ntfy&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.topic&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Topic at which the alert will be sent&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The URL of the target server&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;https://ntfy.sh&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://docs.ntfy.sh/publish/#access-tokens"&gt;Access token&lt;/a&gt; for restricted topics&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.email&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;E-mail address for additional e-mail notifications&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.click&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Website opened when notification is clicked&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.priority&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The priority of the alert&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.disable-firebase&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether message push delivery via firebase should be disabled. &lt;a href="https://docs.ntfy.sh/publish/#disable-firebase"&gt;ntfy.sh defaults to enabled&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.disable-cache&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether server side message caching should be disabled. &lt;a href="https://docs.ntfy.sh/publish/#message-caching"&gt;ntfy.sh defaults to enabled&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.ntfy.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;a href="https://github.com/binwiederhier/ntfy"&gt;ntfy&lt;/a&gt; is an amazing project that allows you to subscribe to desktop and mobile notifications, making it an awesome addition to Gatus.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  ntfy:
    topic: "gatus-test-topic"
    priority: 2
    token: faketoken
    default-alert:
      failure-threshold: 3
      send-on-resolved: true
    # You can also add group-specific to keys, which will
    # override the to key above for the specified groups
    overrides:
      - group: "other"
        topic: "gatus-other-test-topic"
        priority: 4
        click: "https://example.com"

endpoints:
  - name: website
    interval: 5m
    url: "https://twin.sh/health"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: ntfy
  - name: other example
    group: other
    interval: 30m
    url: "https://example.com"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
    alerts:
      - type: ntfy
        description: example
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Opsgenie alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;opsgenie&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.api-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Opsgenie API Key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.priority&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Priority level of the alert.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;P1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.source&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Source field of the alert.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;gatus&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.entity-prefix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Entity field prefix.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;gatus-&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.alias-prefix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Alias field prefix.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;gatus-healthcheck-&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.tags&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Tags of alert.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Opsgenie provider will automatically open and close alerts.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  opsgenie:
    api-key: "00000000-0000-0000-0000-000000000000"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring PagerDuty alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;pagerduty&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty.integration-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;PagerDuty Events API v2 integration key&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.pagerduty.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;It is highly recommended to set &lt;code&gt;endpoints[].alerts[].send-on-resolved&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; for alerts of type &lt;code&gt;pagerduty&lt;/code&gt;, because unlike other alerts, the operation resulting from setting said parameter to &lt;code&gt;true&lt;/code&gt; will not create another incident but mark the incident as resolved on PagerDuty instead.&lt;/p&gt; 
&lt;p&gt;Behavior:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;By default, &lt;code&gt;alerting.pagerduty.integration-key&lt;/code&gt; is used as the integration key&lt;/li&gt; 
 &lt;li&gt;If the endpoint being evaluated belongs to a group (&lt;code&gt;endpoints[].group&lt;/code&gt;) matching the value of &lt;code&gt;alerting.pagerduty.overrides[].group&lt;/code&gt;, the provider will use that override's integration key instead of &lt;code&gt;alerting.pagerduty.integration-key&lt;/code&gt;'s&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  pagerduty:
    integration-key: "********************************"
    # You can also add group-specific integration keys, which will
    # override the integration key above for the specified groups
    overrides:
      - group: "core"
        integration-key: "********************************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: pagerduty
        failure-threshold: 3
        success-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"

  - name: back-end
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
    alerts:
      - type: pagerduty
        failure-threshold: 3
        success-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Plivo alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;plivo&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo.auth-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Plivo Auth ID&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo.auth-token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Plivo Auth Token&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo.from&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Phone number to send SMS from&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo.to&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of phone numbers to send SMS to&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.plivo.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  plivo:
    auth-id: "MAXXXXXXXXXXXXXXXXXX"
    auth-token: "your-auth-token"
    from: "+1234567890"
    to:
      - "+0987654321"
      - "+1122334455"

endpoints:
  - name: website
    interval: 30s
    url: "https://twin.sh/health"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: plivo
        failure-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Pushover alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;pushover&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.application-token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Pushover application token&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.user-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;User or group key&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Fixed title for all messages sent via Pushover&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"Gatus: &amp;lt;endpoint&amp;gt;"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.priority&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Priority of all messages, ranging from -2 (very low) to 2 (emergency)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.resolved-priority&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Override the priority of messages on resolved, ranging from -2 (very low) to 2 (emergency)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.sound&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Sound of all messages&lt;br /&gt;See &lt;a href="https://pushover.net/api#sounds"&gt;sounds&lt;/a&gt; for all valid choices.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.ttl&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Set the Time-to-live of the message to be automatically deleted from pushover notifications&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.device&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Device to send the message to (optional)&lt;br /&gt;See &lt;a href="https://pushover.net/api#identifiers"&gt;devices&lt;/a&gt; for details&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt; (all devices)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  pushover:
    application-token: "******************************"
    user-key: "******************************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: pushover
        failure-threshold: 3
        success-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Rocket.Chat alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.rocketchat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;rocketchat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.rocketchat.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Rocket.Chat incoming webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.rocketchat.channel&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Optional channel override&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.rocketchat.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.rocketchat.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.rocketchat.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.rocketchat.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.rocketchat.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  rocketchat:
    webhook-url: "https://your-rocketchat.com/hooks/YOUR_WEBHOOK_ID/YOUR_TOKEN"
    channel: "#alerts"  # Optional

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: rocketchat
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Signal alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;signal&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal.api-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Signal API URL (e.g., signal-cli-rest-api instance)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal.number&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Sender phone number&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal.recipients&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of recipient phone numbers&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.signal.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  signal:
    api-url: "http://localhost:8080"
    number: "+1234567890"
    recipients:
      - "+0987654321"
      - "+1122334455"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: signal
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring SIGNL4 alerts&lt;/h4&gt; 
&lt;p&gt;SIGNL4 is a mobile alerting and incident management service that sends critical alerts to team members via mobile push, SMS, voice calls, and email.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signl4&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;signl4&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signl4.team-secret&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SIGNL4 team secret (part of webhook URL)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signl4.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signl4.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signl4.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signl4.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.signl4.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  signl4:
    team-secret: "your-team-secret-here"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: signl4
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring SendGrid alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;sendgrid&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid.api-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SendGrid API key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid.from&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Email address to send from&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid.to&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Email address(es) to send alerts to (comma-separated for multiple recipients)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.sendgrid.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  sendgrid:
    api-key: "SG.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    from: "alerts@example.com"
    to: "admin@example.com,ops@example.com"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: sendgrid
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Slack alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;slack&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Slack Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Title of the notification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;":helmet_with_white_cross: Gatus"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.slack.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  slack:
    webhook-url: "https://hooks.slack.com/services/**********/**********/**********"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: slack
        description: "healthcheck failed 3 times in a row"
        send-on-resolved: true
      - type: slack
        failure-threshold: 5
        description: "healthcheck failed 5 times in a row"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/slack-alerts.png" alt="Slack notifications" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Splunk alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;splunk&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.hec-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Splunk HEC (HTTP Event Collector) URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.hec-token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Splunk HEC token&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.source&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Event source&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"gatus"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.sourcetype&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Event source type&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"gatus:alert"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.index&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Splunk index&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.splunk.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  splunk:
    hec-url: "https://splunk.example.com:8088"
    hec-token: "YOUR_HEC_TOKEN"
    index: "main"  # Optional

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: splunk
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Squadcast alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.squadcast&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;squadcast&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.squadcast.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Squadcast webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.squadcast.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.squadcast.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.squadcast.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.squadcast.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.squadcast.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  squadcast:
    webhook-url: "https://api.squadcast.com/v3/incidents/api/YOUR_API_KEY"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: squadcast
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Teams alerts &lt;em&gt;(Deprecated)&lt;/em&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] &lt;strong&gt;Deprecated:&lt;/strong&gt; Office 365 Connectors within Microsoft Teams are being retired (&lt;a href="https://devblogs.microsoft.com/microsoft365dev/retirement-of-office-365-connectors-within-microsoft-teams/"&gt;Source: Microsoft DevBlog&lt;/a&gt;). Existing connectors will continue to work until December 2025. The new &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-teams-workflow-alerts"&gt;Teams Workflow Alerts&lt;/a&gt; should be used with Microsoft Workflows instead of this legacy configuration.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;teams&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Teams Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Title of the notification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"&amp;amp;#x1F6A8; Gatus"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.client.insecure&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to skip TLS verification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.teams.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  teams:
    webhook-url: "https://********.webhook.office.com/webhookb2/************"
    client:
      insecure: false
    # You can also add group-specific to keys, which will
    # override the to key above for the specified groups
    overrides:
      - group: "core"
        webhook-url: "https://********.webhook.office.com/webhookb3/************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: teams
        description: "healthcheck failed"
        send-on-resolved: true

  - name: back-end
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
    alerts:
      - type: teams
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/teams-alerts.png" alt="Teams notifications" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Teams Workflow alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This alert is compatible with Workflows for Microsoft Teams. To setup the workflow and get the webhook URL, follow the &lt;a href="https://support.microsoft.com/en-us/office/create-incoming-webhooks-with-workflows-for-microsoft-teams-8ae491c7-0394-4861-ba59-055e33f75498"&gt;Microsoft Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;teams&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Teams Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Title of the notification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"&amp;amp;#x26D1; Gatus"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.teams-workflows.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  teams-workflows:
    webhook-url: "https://********.webhook.office.com/webhookb2/************"
    # You can also add group-specific to keys, which will
    # override the to key above for the specified groups
    overrides:
      - group: "core"
        webhook-url: "https://********.webhook.office.com/webhookb3/************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: teams-workflows
        description: "healthcheck failed"
        send-on-resolved: true

  - name: back-end
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
    alerts:
      - type: teams-workflows
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/teams-workflows-alerts.png" alt="Teams Workflow notifications" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Telegram alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;telegram&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Telegram Bot Token&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Telegram User ID&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.topic-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Telegram Topic ID in a group corresponds to &lt;code&gt;message_thread_id&lt;/code&gt; in the Telegram API&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.api-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Telegram API URL&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;https://api.telegram.org&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.client&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.telegram.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  telegram:
    token: "123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11"
    id: "0123456789"
    topic-id: "7"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
    alerts:
      - type: telegram
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/telegram-alerts.png" alt="Telegram notifications" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Twilio alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Settings for alerts of type &lt;code&gt;twilio&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.sid&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Twilio account SID&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Twilio auth token&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.from&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number to send Twilio alerts from&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.to&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number to send twilio alerts to&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Custom message templates are supported via the following additional parameters:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.text-twilio-triggered&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Custom message template for triggered alerts. Supports &lt;code&gt;[ENDPOINT]&lt;/code&gt;, &lt;code&gt;[ALERT_DESCRIPTION]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.text-twilio-resolved&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Custom message template for resolved alerts. Supports &lt;code&gt;[ENDPOINT]&lt;/code&gt;, &lt;code&gt;[ALERT_DESCRIPTION]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  twilio:
    sid: "..."
    token: "..."
    from: "+1-234-567-8901"
    to: "+1-234-567-8901"
    # Custom message templates using placeholders (optional)
    # Supports both old format {endpoint}/{description} and new format [ENDPOINT]/[ALERT_DESCRIPTION]
    text-twilio-triggered: "üö® ALERT: [ENDPOINT] is down! [ALERT_DESCRIPTION]"
    text-twilio-resolved: "‚úÖ RESOLVED: [ENDPOINT] is back up! [ALERT_DESCRIPTION]"

endpoints:
  - name: website
    interval: 30s
    url: "https://twin.sh/health"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: twilio
        failure-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Vonage alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;vonage&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage.api-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Vonage API key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage.api-secret&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Vonage API secret&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage.from&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Sender name or phone number&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage.to&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Recipient phone number&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.vonage.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  vonage:
    api-key: "YOUR_API_KEY"
    api-secret: "YOUR_API_SECRET"
    from: "Gatus"
    to: "+1234567890"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example of sending alerts to Vonage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: website
    url: "https://example.org"
    alerts:
      - type: vonage
        failure-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Webex alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.webex&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;webex&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.webex.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Webex Teams webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.webex.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.webex.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.webex.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.webex.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.webex.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  webex:
    webhook-url: "https://webexapis.com/v1/webhooks/incoming/YOUR_WEBHOOK_ID"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: webex
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Zapier alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zapier&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;zapier&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zapier.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Zapier webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zapier.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zapier.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zapier.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zapier.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.zapier.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  zapier:
    webhook-url: "https://hooks.zapier.com/hooks/catch/YOUR_WEBHOOK_ID/"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: zapier
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Zulip alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;zulip&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.bot-email&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Bot Email&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.bot-api-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Bot API key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.domain&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Full organization domain (e.g.: yourZulipDomain.zulipchat.com)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.channel-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The channel ID where Gatus will send the alerts&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.zulip.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  zulip:
    bot-email: gatus-bot@some.zulip.org
    bot-api-key: "********************************"
    domain: some.zulip.org
    channel-id: 123456

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: zulip
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring custom alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for custom actions on failure or alerts&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Custom alerting request url&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.method&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Request method&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.body&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Custom alerting request body.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.headers&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Custom alerting request headers&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.client&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;While they're called alerts, you can use this feature to call anything.&lt;/p&gt; 
&lt;p&gt;For instance, you could automate rollbacks by having an application that keeps tracks of new deployments, and by leveraging Gatus, you could have Gatus call that application endpoint when an endpoint starts failing. Your application would then check if the endpoint that started failing was part of the recently deployed application, and if it was, then automatically roll it back.&lt;/p&gt; 
&lt;p&gt;Furthermore, you may use the following placeholders in the body (&lt;code&gt;alerting.custom.body&lt;/code&gt;) and in the url (&lt;code&gt;alerting.custom.url&lt;/code&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;[ALERT_DESCRIPTION]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].alerts[].description&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_NAME]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].name&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_GROUP]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].group&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_URL]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].url&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[RESULT_ERRORS]&lt;/code&gt; (resolved from the health evaluation of a given health check)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[RESULT_CONDITIONS]&lt;/code&gt; (condition results from the health evaluation of a given health check)&lt;/li&gt; 
 &lt;li&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you have an alert using the &lt;code&gt;custom&lt;/code&gt; provider with &lt;code&gt;send-on-resolved&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;, you can use the &lt;code&gt;[ALERT_TRIGGERED_OR_RESOLVED]&lt;/code&gt; placeholder to differentiate the notifications. The aforementioned placeholder will be replaced by &lt;code&gt;TRIGGERED&lt;/code&gt; or &lt;code&gt;RESOLVED&lt;/code&gt; accordingly, though it can be modified (details at the end of this section).&lt;/p&gt; 
&lt;p&gt;For all intents and purposes, we'll configure the custom alert with a Slack webhook, but you can call anything you want.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  custom:
    url: "https://hooks.slack.com/services/**********/**********/**********"
    method: "POST"
    body: |
      {
        "text": "[ALERT_TRIGGERED_OR_RESOLVED]: [ENDPOINT_GROUP] - [ENDPOINT_NAME] - [ALERT_DESCRIPTION] - [RESULT_ERRORS]"
      }
endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: custom
        failure-threshold: 10
        success-threshold: 3
        send-on-resolved: true
        description: "health check failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that you can customize the resolved values for the &lt;code&gt;[ALERT_TRIGGERED_OR_RESOLVED]&lt;/code&gt; placeholder like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  custom:
    placeholders:
      ALERT_TRIGGERED_OR_RESOLVED:
        TRIGGERED: "partial_outage"
        RESOLVED: "operational"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As a result, the &lt;code&gt;[ALERT_TRIGGERED_OR_RESOLVED]&lt;/code&gt; in the body of first example of this section would be replaced by &lt;code&gt;partial_outage&lt;/code&gt; when an alert is triggered and &lt;code&gt;operational&lt;/code&gt; when an alert is resolved.&lt;/p&gt; 
&lt;h4&gt;Setting a default alert&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.*.default-alert.enabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to enable the alert&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.*.default-alert.failure-threshold&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number of failures in a row needed before triggering the alert&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.*.default-alert.success-threshold&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number of successes in a row before an ongoing incident is marked as resolved&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.*.default-alert.send-on-resolved&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to send a notification once a triggered alert is marked as resolved&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.*.default-alert.description&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Description of the alert. Will be included in the alert sent&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö† You must still specify the &lt;code&gt;type&lt;/code&gt; of the alert in the endpoint configuration even if you set the default alert of a provider.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;While you can specify the alert configuration directly in the endpoint definition, it's tedious and may lead to a very long configuration file.&lt;/p&gt; 
&lt;p&gt;To avoid such problem, you can use the &lt;code&gt;default-alert&lt;/code&gt; parameter present in each provider configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  slack:
    webhook-url: "https://hooks.slack.com/services/**********/**********/**********"
    default-alert:
      description: "health check failed"
      send-on-resolved: true
      failure-threshold: 5
      success-threshold: 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As a result, your Gatus configuration looks a lot tidier:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack

  - name: other-example
    url: "https://example.com"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It also allows you to do things like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
        failure-threshold: 5
      - type: slack
        failure-threshold: 10
      - type: slack
        failure-threshold: 15
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Of course, you can also mix alert types:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  slack:
    webhook-url: "https://hooks.slack.com/services/**********/**********/**********"
    default-alert:
      failure-threshold: 3
  pagerduty:
    integration-key: "********************************"
    default-alert:
      failure-threshold: 5

endpoints:
  - name: endpoint-1
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
      - type: pagerduty

  - name: endpoint-2
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
      - type: pagerduty
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Maintenance&lt;/h3&gt; 
&lt;p&gt;If you have maintenance windows, you may not want to be annoyed by alerts. To do that, you'll have to use the maintenance configuration:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance.enabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether the maintenance period is enabled&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance.start&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Time at which the maintenance window starts in &lt;code&gt;hh:mm&lt;/code&gt; format (e.g. &lt;code&gt;23:00&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance.duration&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Duration of the maintenance window (e.g. &lt;code&gt;1h&lt;/code&gt;, &lt;code&gt;30m&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance.timezone&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Timezone of the maintenance window format (e.g. &lt;code&gt;Europe/Amsterdam&lt;/code&gt;).&lt;br /&gt;See &lt;a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"&gt;List of tz database time zones&lt;/a&gt; for more info&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;UTC&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance.every&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Days on which the maintenance period applies (e.g. &lt;code&gt;[Monday, Thursday]&lt;/code&gt;).&lt;br /&gt;If left empty, the maintenance window applies every day&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Here's an example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;maintenance:
  start: 23:00
  duration: 1h
  timezone: "Europe/Amsterdam"
  every: [Monday, Thursday]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that you can also specify each day on separate lines:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;maintenance:
  start: 23:00
  duration: 1h
  timezone: "Europe/Amsterdam"
  every:
    - Monday
    - Thursday
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also specify maintenance windows on a per-endpoint basis:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: endpoint-1
    url: "https://example.org"
    maintenance-windows:
      - start: "07:30"
        duration: 40m
        timezone: "Europe/Berlin"
      - start: "14:30"
        duration: 1h
        timezone: "Europe/Berlin"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Security&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Security configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.basic&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;HTTP Basic configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;OpenID Connect configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Basic Authentication&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.basic&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;HTTP Basic configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.basic.username&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Username for Basic authentication.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.basic.password-bcrypt-base64&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Password hashed with Bcrypt and then encoded with base64 for Basic authentication.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The example below will require that you authenticate with the username &lt;code&gt;john.doe&lt;/code&gt; and the password &lt;code&gt;hunter2&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;security:
  basic:
    username: "john.doe"
    password-bcrypt-base64: "JDJhJDEwJHRiMnRFakxWazZLdXBzRERQazB1TE8vckRLY05Yb1hSdnoxWU0yQ1FaYXZRSW1McmladDYu"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö† Make sure to carefully select the cost of the bcrypt hash. The higher the cost, the longer it takes to compute the hash, and basic auth verifies the password against the hash on every request. As of 2023-01-06, I suggest a cost of 9.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;OIDC&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;OpenID Connect configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.issuer-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Issuer URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.redirect-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Redirect URL. Must end with &lt;code&gt;/authorization-code/callback&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.client-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client id&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.client-secret&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client secret&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.scopes&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Scopes to request. The only scope you need is &lt;code&gt;openid&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.allowed-subjects&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of subjects to allow. If empty, all subjects are allowed.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.session-ttl&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Session time-to-live (e.g. &lt;code&gt;8h&lt;/code&gt;, &lt;code&gt;1h30m&lt;/code&gt;, &lt;code&gt;2h&lt;/code&gt;).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;8h&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;security:
  oidc:
    issuer-url: "https://example.okta.com"
    redirect-url: "https://status.example.com/authorization-code/callback"
    client-id: "123456789"
    client-secret: "abcdefghijk"
    scopes: ["openid"]
    # You may optionally specify a list of allowed subjects. If this is not specified, all subjects will be allowed.
    #allowed-subjects: ["johndoe@example.com"]
    # You may optionally specify a session time-to-live. If this is not specified, defaults to 8 hours.
    #session-ttl: 8h
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Confused? Read &lt;a href="https://twin.sh/articles/56/securing-gatus-with-oidc-using-auth0"&gt;Securing Gatus with OIDC using Auth0&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;TLS Encryption&lt;/h3&gt; 
&lt;p&gt;Gatus supports basic encryption with TLS. To enable this, certificate files in PEM format have to be provided.&lt;/p&gt; 
&lt;p&gt;The example below shows an example configuration which makes gatus respond on port 4443 to HTTPS requests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;web:
  port: 4443
  tls:
    certificate-file: "certificate.crt"
    private-key-file: "private.key"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Metrics&lt;/h3&gt; 
&lt;p&gt;To enable metrics, you must set &lt;code&gt;metrics&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. Doing so will expose Prometheus-friendly metrics at the &lt;code&gt;/metrics&lt;/code&gt; endpoint on the same port your application is configured to run on (&lt;code&gt;web.port&lt;/code&gt;).&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Metric name&lt;/th&gt; 
   &lt;th align="left"&gt;Type&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Labels&lt;/th&gt; 
   &lt;th align="left"&gt;Relevant endpoint types&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_total&lt;/td&gt; 
   &lt;td align="left"&gt;counter&lt;/td&gt; 
   &lt;td align="left"&gt;Number of results per endpoint per success state&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type, success&lt;/td&gt; 
   &lt;td align="left"&gt;All&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_code_total&lt;/td&gt; 
   &lt;td align="left"&gt;counter&lt;/td&gt; 
   &lt;td align="left"&gt;Total number of results by code&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type, code&lt;/td&gt; 
   &lt;td align="left"&gt;DNS, HTTP&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_connected_total&lt;/td&gt; 
   &lt;td align="left"&gt;counter&lt;/td&gt; 
   &lt;td align="left"&gt;Total number of results in which a connection was successfully established&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type&lt;/td&gt; 
   &lt;td align="left"&gt;All&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_duration_seconds&lt;/td&gt; 
   &lt;td align="left"&gt;gauge&lt;/td&gt; 
   &lt;td align="left"&gt;Duration of the request in seconds&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type&lt;/td&gt; 
   &lt;td align="left"&gt;All&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_certificate_expiration_seconds&lt;/td&gt; 
   &lt;td align="left"&gt;gauge&lt;/td&gt; 
   &lt;td align="left"&gt;Number of seconds until the certificate expires&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type&lt;/td&gt; 
   &lt;td align="left"&gt;HTTP, STARTTLS&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_endpoint_success&lt;/td&gt; 
   &lt;td align="left"&gt;gauge&lt;/td&gt; 
   &lt;td align="left"&gt;Displays whether or not the endpoint was a success (0 failure, 1 success)&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type&lt;/td&gt; 
   &lt;td align="left"&gt;All&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples/docker-compose-grafana-prometheus"&gt;examples/docker-compose-grafana-prometheus&lt;/a&gt; for further documentation as well as an example.&lt;/p&gt; 
&lt;h4&gt;Custom Labels&lt;/h4&gt; 
&lt;p&gt;You can add custom labels to your endpoints‚Äô Prometheus metrics by defining key‚Äìvalue pairs under the &lt;code&gt;extra-labels&lt;/code&gt; field. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: front-end
    group: core
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 150"
    extra-labels:
      environment: staging
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Connectivity&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;connectivity&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Connectivity configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;connectivity.checker&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Connectivity checker configuration&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;connectivity.checker.target&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Host to use for validating connectivity&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;connectivity.checker.interval&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Interval at which to validate connectivity&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;1m&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;While Gatus is used to monitor other services, it is possible for Gatus itself to lose connectivity to the internet. In order to prevent Gatus from reporting endpoints as unhealthy when Gatus itself is unhealthy, you may configure Gatus to periodically check for internet connectivity.&lt;/p&gt; 
&lt;p&gt;All endpoint executions are skipped while the connectivity checker deems connectivity to be down.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;connectivity:
  checker:
    target: 1.1.1.1:53
    interval: 60s
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Remote instances (EXPERIMENTAL)&lt;/h3&gt; 
&lt;p&gt;This feature allows you to retrieve endpoint statuses from a remote Gatus instance.&lt;/p&gt; 
&lt;p&gt;There are two main use cases for this:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You have multiple Gatus instances running on different machines, and you wish to visually expose the statuses through a single dashboard&lt;/li&gt; 
 &lt;li&gt;You have one or more Gatus instances that are not publicly accessible (e.g. behind a firewall), and you wish to retrieve&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This is an experimental feature. It may be removed or updated in a breaking manner at any time. Furthermore, there are known issues with this feature. If you'd like to provide some feedback, please write a comment in &lt;a href="https://github.com/TwiN/gatus/issues/64"&gt;#64&lt;/a&gt;. Use at your own risk.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Remote configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;remote.instances&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of remote instances&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;remote.instances.endpoint-prefix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;String to prefix all endpoint names with&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;remote.instances.url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;URL from which to retrieve endpoint statuses&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;remote:
  instances:
    - endpoint-prefix: "status.example.org-"
      url: "https://status.example.org/api/v1/endpoints/statuses"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;Many examples can be found in the &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples"&gt;.examples&lt;/a&gt; folder, but this section will focus on the most popular ways of deploying Gatus.&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;To run Gatus locally with Docker:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --name gatus ghcr.io/twin/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Other than using one of the examples provided in the &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples"&gt;.examples&lt;/a&gt; folder, you can also try it out locally by creating a configuration file, we'll call it &lt;code&gt;config.yaml&lt;/code&gt; for this example, and running the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --mount type=bind,source="$(pwd)"/config.yaml,target=/config/config.yaml --name gatus ghcr.io/twin/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're on Windows, replace &lt;code&gt;"$(pwd)"&lt;/code&gt; by the absolute path to your current directory, e.g.:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --mount type=bind,source=C:/Users/Chris/Desktop/config.yaml,target=/config/config.yaml --name gatus ghcr.io/twin/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build the image locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker build . -t ghcr.io/twin/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Helm Chart&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://helm.sh"&gt;Helm&lt;/a&gt; must be installed to use the chart. Please refer to Helm's &lt;a href="https://helm.sh/docs/"&gt;documentation&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;Once Helm is set up properly, add the repository as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;helm repo add twin https://twin.github.io/helm-charts
helm repo update
helm install gatus twin/gatus
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get more details, please check &lt;a href="https://github.com/TwiN/helm-charts/raw/master/charts/gatus/README.md"&gt;chart's configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Terraform&lt;/h3&gt; 
&lt;p&gt;Gatus can be deployed on Terraform by using the following module: &lt;a href="https://github.com/TwiN/terraform-kubernetes-gatus"&gt;terraform-kubernetes-gatus&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Running the tests&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;go test -v ./...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using in Production&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#deployment"&gt;Deployment&lt;/a&gt; section.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;Sending a GraphQL request&lt;/h3&gt; 
&lt;p&gt;By setting &lt;code&gt;endpoints[].graphql&lt;/code&gt; to true, the body will automatically be wrapped by the standard GraphQL &lt;code&gt;query&lt;/code&gt; parameter.&lt;/p&gt; 
&lt;p&gt;For instance, the following configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: filter-users-by-gender
    url: http://localhost:8080/playground
    method: POST
    graphql: true
    body: |
      {
        users(gender: "female") {
          id
          name
          gender
          avatar
        }
      }
    conditions:
      - "[STATUS] == 200"
      - "[BODY].data.users[0].gender == female"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;will send a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;http://localhost:8080/playground&lt;/code&gt; with the following body:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{"query":"      {\n        users(gender: \"female\") {\n          id\n          name\n          gender\n          avatar\n        }\n      }"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Recommended interval&lt;/h3&gt; 
&lt;p&gt;To ensure that Gatus provides reliable and accurate results (i.e. response time), Gatus limits the number of endpoints/suites that can be evaluated at the same time. In other words, even if you have multiple endpoints with the same interval, they are not guaranteed to run at the same time.&lt;/p&gt; 
&lt;p&gt;The number of concurrent evaluations is determined by the &lt;code&gt;concurrency&lt;/code&gt; configuration parameter, which defaults to &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can test this yourself by running Gatus with several endpoints configured with a very short, unrealistic interval, such as 1ms. You'll notice that the response time does not fluctuate - that is because while endpoints are evaluated on different goroutines, there's a semaphore that controls how many endpoints/suites from running at the same time.&lt;/p&gt; 
&lt;p&gt;Unfortunately, there is a drawback. If you have a lot of endpoints, including some that are very slow or prone to timing out (the default timeout is 10s), those slow evaluations may prevent other endpoints/suites from being evaluated.&lt;/p&gt; 
&lt;p&gt;The interval does not include the duration of the request itself, which means that if an endpoint has an interval of 30s and the request takes 2s to complete, the timestamp between two evaluations will be 32s, not 30s.&lt;/p&gt; 
&lt;p&gt;While this does not prevent Gatus' from performing health checks on all other endpoints, it may cause Gatus to be unable to respect the configured interval, for instance, assuming &lt;code&gt;concurrency&lt;/code&gt; is set to &lt;code&gt;1&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Endpoint A has an interval of 5s, and times out after 10s to complete&lt;/li&gt; 
 &lt;li&gt;Endpoint B has an interval of 5s, and takes 1ms to complete&lt;/li&gt; 
 &lt;li&gt;Endpoint B will be unable to run every 5s, because endpoint A's health evaluation takes longer than its interval&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To sum it up, while Gatus can handle any interval you throw at it, you're better off having slow requests with higher interval.&lt;/p&gt; 
&lt;p&gt;As a rule of thumb, I personally set the interval for more complex health checks to &lt;code&gt;5m&lt;/code&gt; (5 minutes) and simple health checks used for alerting (PagerDuty/Twilio) to &lt;code&gt;30s&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Default timeouts&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Endpoint type&lt;/th&gt; 
   &lt;th align="left"&gt;Timeout&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;HTTP&lt;/td&gt; 
   &lt;td align="left"&gt;10s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;TCP&lt;/td&gt; 
   &lt;td align="left"&gt;10s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;ICMP&lt;/td&gt; 
   &lt;td align="left"&gt;10s&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;To modify the timeout, see &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Monitoring a TCP endpoint&lt;/h3&gt; 
&lt;p&gt;By prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;tcp://&lt;/code&gt;, you can monitor TCP endpoints at a very basic level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: redis
    url: "tcp://127.0.0.1:6379"
    interval: 30s
    conditions:
      - "[CONNECTED] == true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If &lt;code&gt;endpoints[].body&lt;/code&gt; is set then it is sent and the first 1024 bytes of the response will be in &lt;code&gt;[BODY]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Placeholder &lt;code&gt;[STATUS]&lt;/code&gt; as well as the fields &lt;code&gt;endpoints[].headers&lt;/code&gt;, &lt;code&gt;endpoints[].method&lt;/code&gt; and &lt;code&gt;endpoints[].graphql&lt;/code&gt; are not supported for TCP endpoints.&lt;/p&gt; 
&lt;p&gt;This works for applications such as databases (Postgres, MySQL, etc.) and caches (Redis, Memcached, etc.).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìù &lt;code&gt;[CONNECTED] == true&lt;/code&gt; does not guarantee that the endpoint itself is healthy - it only guarantees that there's something at the given address listening to the given port, and that a connection to that address was successfully established.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Monitoring a UDP endpoint&lt;/h3&gt; 
&lt;p&gt;By prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;udp://&lt;/code&gt;, you can monitor UDP endpoints at a very basic level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "udp://example.org:80"
    conditions:
      - "[CONNECTED] == true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If &lt;code&gt;endpoints[].body&lt;/code&gt; is set then it is sent and the first 1024 bytes of the response will be in &lt;code&gt;[BODY]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Placeholder &lt;code&gt;[STATUS]&lt;/code&gt; as well as the fields &lt;code&gt;endpoints[].headers&lt;/code&gt;, &lt;code&gt;endpoints[].method&lt;/code&gt; and &lt;code&gt;endpoints[].graphql&lt;/code&gt; are not supported for UDP endpoints.&lt;/p&gt; 
&lt;p&gt;This works for UDP based application.&lt;/p&gt; 
&lt;h3&gt;Monitoring a SCTP endpoint&lt;/h3&gt; 
&lt;p&gt;By prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;sctp://&lt;/code&gt;, you can monitor Stream Control Transmission Protocol (SCTP) endpoints at a very basic level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "sctp://127.0.0.1:38412"
    conditions:
      - "[CONNECTED] == true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Placeholders &lt;code&gt;[STATUS]&lt;/code&gt; and &lt;code&gt;[BODY]&lt;/code&gt; as well as the fields &lt;code&gt;endpoints[].body&lt;/code&gt;, &lt;code&gt;endpoints[].headers&lt;/code&gt;, &lt;code&gt;endpoints[].method&lt;/code&gt; and &lt;code&gt;endpoints[].graphql&lt;/code&gt; are not supported for SCTP endpoints.&lt;/p&gt; 
&lt;p&gt;This works for SCTP based application.&lt;/p&gt; 
&lt;h3&gt;Monitoring a WebSocket endpoint&lt;/h3&gt; 
&lt;p&gt;By prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;ws://&lt;/code&gt; or &lt;code&gt;wss://&lt;/code&gt;, you can monitor WebSocket endpoints:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "wss://echo.websocket.org/"
    body: "status"
    conditions:
      - "[CONNECTED] == true"
      - "[BODY] == pat(*served by*)"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;[BODY]&lt;/code&gt; placeholder contains the output of the query, and &lt;code&gt;[CONNECTED]&lt;/code&gt; shows whether the connection was successfully established. You can use Go template syntax.&lt;/p&gt; 
&lt;h3&gt;Monitoring an endpoint using ICMP&lt;/h3&gt; 
&lt;p&gt;By prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;icmp://&lt;/code&gt;, you can monitor endpoints at a very basic level using ICMP, or more commonly known as "ping" or "echo":&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: ping-example
    url: "icmp://example.com"
    conditions:
      - "[CONNECTED] == true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Only the placeholders &lt;code&gt;[CONNECTED]&lt;/code&gt;, &lt;code&gt;[IP]&lt;/code&gt; and &lt;code&gt;[RESPONSE_TIME]&lt;/code&gt; are supported for endpoints of type ICMP. You can specify a domain prefixed by &lt;code&gt;icmp://&lt;/code&gt;, or an IP address prefixed by &lt;code&gt;icmp://&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you run Gatus on Linux, please read the Linux section on &lt;a href="https://github.com/prometheus-community/pro-bing#linux"&gt;https://github.com/prometheus-community/pro-bing#linux&lt;/a&gt; if you encounter any problems.&lt;/p&gt; 
&lt;h3&gt;Monitoring an endpoint using DNS queries&lt;/h3&gt; 
&lt;p&gt;Defining a &lt;code&gt;dns&lt;/code&gt; configuration in an endpoint will automatically mark said endpoint as an endpoint of type DNS:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example-dns-query
    url: "8.8.8.8" # Address of the DNS server to use
    dns:
      query-name: "example.com"
      query-type: "A"
    conditions:
      - "[BODY] == 93.184.215.14"
      - "[DNS_RCODE] == NOERROR"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are two placeholders that can be used in the conditions for endpoints of type DNS:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The placeholder &lt;code&gt;[BODY]&lt;/code&gt; resolves to the output of the query. For instance, a query of type &lt;code&gt;A&lt;/code&gt; would return an IPv4.&lt;/li&gt; 
 &lt;li&gt;The placeholder &lt;code&gt;[DNS_RCODE]&lt;/code&gt; resolves to the name associated to the response code returned by the query, such as &lt;code&gt;NOERROR&lt;/code&gt;, &lt;code&gt;FORMERR&lt;/code&gt;, &lt;code&gt;SERVFAIL&lt;/code&gt;, &lt;code&gt;NXDOMAIN&lt;/code&gt;, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Monitoring an endpoint using SSH&lt;/h3&gt; 
&lt;p&gt;You can monitor endpoints using SSH by prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;ssh://&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: ssh-example
    url: "ssh://example.com:22" # port is optional. Default is 22.
    ssh:
      username: "username"
      password: "password"
    body: |
      {
        "command": "echo '{\"memory\": {\"used\": 512}}'"
      }
    interval: 1m
    conditions:
      - "[CONNECTED] == true"
      - "[STATUS] == 0"
      - "[BODY].memory.used &amp;gt; 500"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;you can also use no authentication to monitor the endpoint by not specifying the username and password fields.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: ssh-example
    url: "ssh://example.com:22" # port is optional. Default is 22.
    ssh:
      username: ""
      password: ""

    interval: 1m
    conditions:
      - "[CONNECTED] == true"
      - "[STATUS] == 0"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The following placeholders are supported for endpoints of type SSH:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;[CONNECTED]&lt;/code&gt; resolves to &lt;code&gt;true&lt;/code&gt; if the SSH connection was successful, &lt;code&gt;false&lt;/code&gt; otherwise&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[STATUS]&lt;/code&gt; resolves the exit code of the command executed on the remote server (e.g. &lt;code&gt;0&lt;/code&gt; for success)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[BODY]&lt;/code&gt; resolves to the stdout output of the command executed on the remote server&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[IP]&lt;/code&gt; resolves to the IP address of the server&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[RESPONSE_TIME]&lt;/code&gt; resolves to the time it took to establish the connection and execute the command&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Monitoring an endpoint using STARTTLS&lt;/h3&gt; 
&lt;p&gt;If you have an email server that you want to ensure there are no problems with, monitoring it through STARTTLS will serve as a good initial indicator:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: starttls-smtp-example
    url: "starttls://smtp.gmail.com:587"
    interval: 30m
    client:
      timeout: 5s
    conditions:
      - "[CONNECTED] == true"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Monitoring an endpoint using TLS&lt;/h3&gt; 
&lt;p&gt;Monitoring endpoints using SSL/TLS encryption, such as LDAP over TLS, can help detect certificate expiration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: tls-ldaps-example
    url: "tls://ldap.example.com:636"
    interval: 30m
    client:
      timeout: 5s
    conditions:
      - "[CONNECTED] == true"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If &lt;code&gt;endpoints[].body&lt;/code&gt; is set then it is sent and the first 1024 bytes of the response will be in &lt;code&gt;[BODY]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Placeholder &lt;code&gt;[STATUS]&lt;/code&gt; as well as the fields &lt;code&gt;endpoints[].headers&lt;/code&gt;, &lt;code&gt;endpoints[].method&lt;/code&gt; and &lt;code&gt;endpoints[].graphql&lt;/code&gt; are not supported for TLS endpoints.&lt;/p&gt; 
&lt;h3&gt;Monitoring domain expiration&lt;/h3&gt; 
&lt;p&gt;You can monitor the expiration of a domain with all endpoint types except for DNS by using the &lt;code&gt;[DOMAIN_EXPIRATION]&lt;/code&gt; placeholder:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: check-domain-and-certificate-expiration
    url: "https://example.org"
    interval: 1h
    conditions:
      - "[DOMAIN_EXPIRATION] &amp;gt; 720h"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 240h"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö† The usage of the &lt;code&gt;[DOMAIN_EXPIRATION]&lt;/code&gt; placeholder requires Gatus to use RDAP, or as a fallback, send a request to the official IANA WHOIS service &lt;a href="https://github.com/TwiN/whois"&gt;through a library&lt;/a&gt; and in some cases, a secondary request to a TLD-specific WHOIS server (e.g. &lt;code&gt;whois.nic.sh&lt;/code&gt;). To prevent the WHOIS service from throttling your IP address if you send too many requests, Gatus will prevent you from using the &lt;code&gt;[DOMAIN_EXPIRATION]&lt;/code&gt; placeholder on an endpoint with an interval of less than &lt;code&gt;5m&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Concurrency&lt;/h3&gt; 
&lt;p&gt;By default, Gatus allows up to 5 endpoints/suites to be monitored concurrently. This provides a balance between performance and resource usage while maintaining accurate response time measurements.&lt;/p&gt; 
&lt;p&gt;You can configure the concurrency level using the &lt;code&gt;concurrency&lt;/code&gt; parameter:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;# Allow 10 endpoints/suites to be monitored concurrently
concurrency: 10

# Allow unlimited concurrent monitoring
concurrency: 0

# Use default concurrency (3)
# concurrency: 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Important considerations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Higher concurrency can improve monitoring performance when you have many endpoints&lt;/li&gt; 
 &lt;li&gt;Conditions using the &lt;code&gt;[RESPONSE_TIME]&lt;/code&gt; placeholder may be less accurate with very high concurrency due to system resource contention&lt;/li&gt; 
 &lt;li&gt;Set to &lt;code&gt;0&lt;/code&gt; for unlimited concurrency (equivalent to the deprecated &lt;code&gt;disable-monitoring-lock: true&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Use cases for higher concurrency:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You have a large number of endpoints to monitor&lt;/li&gt; 
 &lt;li&gt;You want to monitor endpoints at very short intervals (&amp;lt; 5s)&lt;/li&gt; 
 &lt;li&gt;You're using Gatus for load testing scenarios&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Legacy configuration:&lt;/strong&gt; The &lt;code&gt;disable-monitoring-lock&lt;/code&gt; parameter is deprecated but still supported for backward compatibility. It's equivalent to setting &lt;code&gt;concurrency: 0&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Reloading configuration on the fly&lt;/h3&gt; 
&lt;p&gt;For the sake of convenience, Gatus automatically reloads the configuration on the fly if the loaded configuration file is updated while Gatus is running.&lt;/p&gt; 
&lt;p&gt;By default, the application will exit if the updating configuration is invalid, but you can configure Gatus to continue running if the configuration file is updated with an invalid configuration by setting &lt;code&gt;skip-invalid-config-update&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Keep in mind that it is in your best interest to ensure the validity of the configuration file after each update you apply to the configuration file while Gatus is running by looking at the log and making sure that you do not see the following message:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;The configuration file was updated, but it is not valid. The old configuration will continue being used.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Failure to do so may result in Gatus being unable to start if the application is restarted for whatever reason.&lt;/p&gt; 
&lt;p&gt;I recommend not setting &lt;code&gt;skip-invalid-config-update&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to avoid a situation like this, but the choice is yours to make.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;If you are not using a file storage&lt;/strong&gt;, updating the configuration while Gatus is running is effectively the same as restarting the application.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìù Updates may not be detected if the config file is bound instead of the config folder. See &lt;a href="https://github.com/TwiN/gatus/issues/151"&gt;#151&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Endpoint groups&lt;/h3&gt; 
&lt;p&gt;Endpoint groups are used for grouping multiple endpoints together on the dashboard.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: frontend
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"

  - name: backend
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"

  - name: monitoring
    group: internal
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"

  - name: nas
    group: internal
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"

  - name: random endpoint that is not part of a group
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The configuration above will result in a dashboard that looks like this when sorting by group:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/endpoint-groups.jpg" alt="Gatus Endpoint Groups" /&gt;&lt;/p&gt; 
&lt;h3&gt;How do I sort by group by default?&lt;/h3&gt; 
&lt;p&gt;Set &lt;code&gt;ui.default-sort-by&lt;/code&gt; to &lt;code&gt;group&lt;/code&gt; in the configuration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;ui:
  default-sort-by: group
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that if a user has already sorted the dashboard by a different field, the default sort will not be applied unless the user clears their browser's localstorage.&lt;/p&gt; 
&lt;h3&gt;Exposing Gatus on a custom path&lt;/h3&gt; 
&lt;p&gt;Currently, you can expose the Gatus UI using a fully qualified domain name (FQDN) such as &lt;code&gt;status.example.org&lt;/code&gt;. However, it does not support path-based routing, which means you cannot expose it through a URL like &lt;code&gt;example.org/status/&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For more information, see &lt;a href="https://github.com/TwiN/gatus/issues/88"&gt;https://github.com/TwiN/gatus/issues/88&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Exposing Gatus on a custom port&lt;/h3&gt; 
&lt;p&gt;By default, Gatus is exposed on port &lt;code&gt;8080&lt;/code&gt;, but you may specify a different port by setting the &lt;code&gt;web.port&lt;/code&gt; parameter:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;web:
  port: 8081
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're using a PaaS like Heroku that doesn't let you set a custom port and exposes it through an environment variable instead, you can use that environment variable directly in the configuration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;web:
  port: ${PORT}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configuring a startup delay&lt;/h3&gt; 
&lt;p&gt;If, for any reason, you need Gatus to wait for a given amount of time before monitoring the endpoints on application start, you can use the &lt;code&gt;GATUS_DELAY_START_SECONDS&lt;/code&gt; environment variable to make Gatus sleep on startup.&lt;/p&gt; 
&lt;h3&gt;Keeping your configuration small&lt;/h3&gt; 
&lt;p&gt;While not specific to Gatus, you can leverage YAML anchors to create a default configuration. If you have a large configuration file, this should help you keep things clean.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Example&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;default-endpoint: &amp;amp;defaults
  group: core
  interval: 5m
  client:
    insecure: true
    timeout: 30s
  conditions:
    - "[STATUS] == 200"

endpoints:
  - name: anchor-example-1
    &amp;lt;&amp;lt;: *defaults               # This will merge the configuration under &amp;amp;defaults with this endpoint
    url: "https://example.org"

  - name: anchor-example-2
    &amp;lt;&amp;lt;: *defaults
    group: example              # This will override the group defined in &amp;amp;defaults
    url: "https://example.com"

  - name: anchor-example-3
    &amp;lt;&amp;lt;: *defaults
    url: "https://twin.sh/health"
    conditions:                # This will override the conditions defined in &amp;amp;defaults
      - "[STATUS] == 200"
      - "[BODY].status == UP"
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Proxy client configuration&lt;/h3&gt; 
&lt;p&gt;You can configure a proxy for the client to use by setting the &lt;code&gt;proxy-url&lt;/code&gt; parameter in the client configuration.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: website
    url: "https://twin.sh/health"
    client:
      proxy-url: http://proxy.example.com:8080
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;How to fix 431 Request Header Fields Too Large error&lt;/h3&gt; 
&lt;p&gt;Depending on where your environment is deployed and what kind of middleware or reverse proxy sits in front of Gatus, you may run into this issue. This could be because the request headers are too large, e.g. big cookies.&lt;/p&gt; 
&lt;p&gt;By default, &lt;code&gt;web.read-buffer-size&lt;/code&gt; is set to &lt;code&gt;8192&lt;/code&gt;, but increasing this value like so will increase the read buffer size:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;web:
  read-buffer-size: 32768
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Badges&lt;/h3&gt; 
&lt;h4&gt;Uptime&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/1h/badge.svg?sanitize=true" alt="Uptime 1h" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/24h/badge.svg?sanitize=true" alt="Uptime 24h" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/7d/badge.svg?sanitize=true" alt="Uptime 7d" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/30d/badge.svg?sanitize=true" alt="Uptime 30d" /&gt;&lt;/p&gt; 
&lt;p&gt;Gatus can automatically generate an SVG badge for one of your monitored endpoints. This allows you to put badges in your individual applications' README or even create your own status page if you desire.&lt;/p&gt; 
&lt;p&gt;The path to generate a badge is the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/uptimes/{duration}/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; is &lt;code&gt;30d&lt;/code&gt;, &lt;code&gt;7d&lt;/code&gt;, &lt;code&gt;24h&lt;/code&gt; or &lt;code&gt;1h&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For instance, if you want the uptime during the last 24 hours from the endpoint &lt;code&gt;frontend&lt;/code&gt; in the group &lt;code&gt;core&lt;/code&gt;, the URL would look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/core_frontend/uptimes/7d/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to display an endpoint that is not part of a group, you must leave the group value empty:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/_frontend/uptimes/7d/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;![Uptime 24h](https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/24h/badge.svg)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you'd like to see a visual example of each badge available, you can simply navigate to the endpoint's detail page.&lt;/p&gt; 
&lt;h4&gt;Health&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/health/badge.svg?sanitize=true" alt="Health" /&gt;&lt;/p&gt; 
&lt;p&gt;The path to generate a badge is the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/health/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For instance, if you want the current status of the endpoint &lt;code&gt;frontend&lt;/code&gt; in the group &lt;code&gt;core&lt;/code&gt;, the URL would look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/core_frontend/health/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Health (Shields.io)&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fstatus.twin.sh%2Fapi%2Fv1%2Fendpoints%2Fcore_blog-external%2Fhealth%2Fbadge.shields" alt="Health" /&gt;&lt;/p&gt; 
&lt;p&gt;The path to generate a badge is the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/health/badge.shields
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For instance, if you want the current status of the endpoint &lt;code&gt;frontend&lt;/code&gt; in the group &lt;code&gt;core&lt;/code&gt;, the URL would look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/core_frontend/health/badge.shields
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See more information about the Shields.io badge endpoint &lt;a href="https://shields.io/badges/endpoint-badge"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Response time&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/1h/badge.svg?sanitize=true" alt="Response time 1h" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/24h/badge.svg?sanitize=true" alt="Response time 24h" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/7d/badge.svg?sanitize=true" alt="Response time 7d" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/30d/badge.svg?sanitize=true" alt="Response time 30d" /&gt;&lt;/p&gt; 
&lt;p&gt;The endpoint to generate a badge is the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/response-times/{duration}/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; is &lt;code&gt;30d&lt;/code&gt;, &lt;code&gt;7d&lt;/code&gt;, &lt;code&gt;24h&lt;/code&gt; or &lt;code&gt;1h&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Response time (chart)&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/24h/chart.svg?sanitize=true" alt="Response time 24h" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/7d/chart.svg?sanitize=true" alt="Response time 7d" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/30d/chart.svg?sanitize=true" alt="Response time 30d" /&gt;&lt;/p&gt; 
&lt;p&gt;The endpoint to generate a response time chart is the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/response-times/{duration}/chart.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; is &lt;code&gt;30d&lt;/code&gt;, &lt;code&gt;7d&lt;/code&gt;, or &lt;code&gt;24h&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;How to change the color thresholds of the response time badge&lt;/h5&gt; 
&lt;p&gt;To change the response time badges' threshold, a corresponding configuration can be added to an endpoint. The values in the array correspond to the levels [Awesome, Great, Good, Passable, Bad] All five values must be given in milliseconds (ms).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
- name: nas
  group: internal
  url: "https://example.org/"
  interval: 5m
  conditions:
    - "[STATUS] == 200"
  ui:
    badge:
      response-time:
        thresholds: [550, 850, 1350, 1650, 1750]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;API&lt;/h3&gt; 
&lt;p&gt;Gatus provides a simple read-only API that can be queried in order to programmatically determine endpoint status and history.&lt;/p&gt; 
&lt;p&gt;All endpoints are available via a GET request to the following endpoint:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/statuses
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: &lt;a href="https://status.twin.sh/api/v1/endpoints/statuses"&gt;https://status.twin.sh/api/v1/endpoints/statuses&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Specific endpoints can also be queried by using the following pattern:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{group}_{endpoint}/statuses
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: &lt;a href="https://status.twin.sh/api/v1/endpoints/core_blog-home/statuses"&gt;https://status.twin.sh/api/v1/endpoints/core_blog-home/statuses&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Gzip compression will be used if the &lt;code&gt;Accept-Encoding&lt;/code&gt; HTTP header contains &lt;code&gt;gzip&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The API will return a JSON payload with the &lt;code&gt;Content-Type&lt;/code&gt; response header set to &lt;code&gt;application/json&lt;/code&gt;. No such header is required to query the API.&lt;/p&gt; 
&lt;h4&gt;Interacting with the API programmatically&lt;/h4&gt; 
&lt;p&gt;See &lt;a href="https://github.com/TwiN/gatus-sdk"&gt;TwiN/gatus-sdk&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Raw Data&lt;/h4&gt; 
&lt;p&gt;Gatus exposes the raw data for one of your monitored endpoints. This allows you to track and aggregate data in your own applications for monitored endpoints. For instance if you want to track uptime for a period longer than 7 days.&lt;/p&gt; 
&lt;h5&gt;Uptime&lt;/h5&gt; 
&lt;p&gt;The path to get raw uptime data for an endpoint is:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/uptimes/{duration}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; is &lt;code&gt;30d&lt;/code&gt;, &lt;code&gt;7d&lt;/code&gt;, &lt;code&gt;24h&lt;/code&gt; or &lt;code&gt;1h&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For instance, if you want the raw uptime data for the last 24 hours from the endpoint &lt;code&gt;frontend&lt;/code&gt; in the group &lt;code&gt;core&lt;/code&gt;, the URL would look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/core_frontend/uptimes/24h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Response Time&lt;/h5&gt; 
&lt;p&gt;The path to get raw response time data for an endpoint is:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/response-times/{duration}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; is &lt;code&gt;30d&lt;/code&gt;, &lt;code&gt;7d&lt;/code&gt;, &lt;code&gt;24h&lt;/code&gt; or &lt;code&gt;1h&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For instance, if you want the raw response time data for the last 24 hours from the endpoint &lt;code&gt;frontend&lt;/code&gt; in the group &lt;code&gt;core&lt;/code&gt;, the URL would look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/core_frontend/response-times/24h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Installing as binary&lt;/h3&gt; 
&lt;p&gt;You can download Gatus as a binary using the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go install github.com/TwiN/gatus/v5@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;High level design overview&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/gatus-diagram.jpg" alt="Gatus diagram" /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>avelino/awesome-go</title>
      <link>https://github.com/avelino/awesome-go</link>
      <description>&lt;p&gt;A curated list of awesome Go frameworks, libraries and software&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome Go&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://awesome-go.com/"&gt;&lt;img align="right" src="https://github.com/avelino/awesome-go/raw/main/tmpl/assets/logo.png" alt="awesome-go" title="awesome-go" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/avelino/awesome-go/actions/workflows/tests.yaml?query=branch%3Amain"&gt;&lt;img src="https://github.com/avelino/awesome-go/actions/workflows/tests.yaml/badge.svg?branch=main" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sindresorhus/awesome"&gt;&lt;img src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true" alt="Awesome" /&gt;&lt;/a&gt; &lt;a href="https://gophers.slack.com/messages/awesome"&gt;&lt;img src="https://img.shields.io/badge/join-us%20on%20slack-gray.svg?longCache=true&amp;amp;logo=slack&amp;amp;colorB=red" alt="Slack Widget" /&gt;&lt;/a&gt; &lt;a href="https://app.netlify.com/sites/awesome-go/deploys"&gt;&lt;img src="https://api.netlify.com/api/v1/badges/83a6dcbe-0da6-433e-b586-f68109286bd5/deploy-status" alt="Netlify Status" /&gt;&lt;/a&gt; &lt;a href="https://www.trackawesomelist.com/avelino/awesome-go/"&gt;&lt;img src="https://www.trackawesomelist.com/badge.svg?sanitize=true" alt="Track Awesome List" /&gt;&lt;/a&gt; &lt;a href="https://github.com/avelino/awesome-go/commits/main"&gt;&lt;img src="https://img.shields.io/github/last-commit/avelino/awesome-go" alt="Last Commit" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We use the &lt;em&gt;&lt;a href="https://github.com/gobridge/about-us/raw/master/README.md"&gt;Golang Bridge&lt;/a&gt;&lt;/em&gt; community Slack for instant communication, follow the &lt;a href="https://invite.slack.golangbridge.org/"&gt;form here to join&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/awesome-go?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-awesome-go" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=291535&amp;amp;theme=light" alt="awesome-go - Curated list awesome Go frameworks, libraries and software | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Sponsorships:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Special thanks to&lt;/em&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;table cellpadding="5"&gt; 
  &lt;tbody align="center"&gt; 
   &lt;tr&gt; 
    &lt;td colspan="2"&gt; &lt;a href="https://bit.ly/awesome-go-workos"&gt; &lt;img src="https://avelino.run/sponsors/workos-logo-white-bg.svg?sanitize=true" width="200" alt="WorkOS" /&gt;&lt;br /&gt; &lt;b&gt;Your app, enterprise-ready.&lt;/b&gt;&lt;br /&gt; &lt;sub&gt;Start selling to enterprise customers with just a few lines of code.&lt;/sub&gt;&lt;br /&gt; &lt;sup&gt;Add Single Sign-On (and more) in minutes instead of months.&lt;/sup&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td colspan="2"&gt; &lt;a href="https://bit.ly/awesome-go-digitalocean"&gt; &lt;img src="https://avelino.run/sponsors/do_logo_horizontal_blue-210.png" width="200" alt="Digital Ocean" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;Awesome Go has no monthly fee&lt;/strong&gt;&lt;em&gt;, but we have employees who &lt;strong&gt;work hard&lt;/strong&gt; to keep it running. With money raised, we can repay the effort of each person involved! You can see how we calculate our billing and distribution as it is open to the entire community. Want to be a supporter of the project click &lt;a href="mailto:avelinorun+oss@gmail.com?subject=awesome-go%3A%20project%20support"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A curated list of awesome Go frameworks, libraries, and software. Inspired by &lt;a href="https://github.com/vinta/awesome-python"&gt;awesome-python&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Contributing:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Please take a quick gander at the &lt;a href="https://github.com/avelino/awesome-go/raw/main/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; first. Thanks to all &lt;a href="https://github.com/avelino/awesome-go/graphs/contributors"&gt;contributors&lt;/a&gt;; you rock!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;If you see a package or project here that is no longer maintained or is not a good fit, please submit a pull request to improve this file. Thank you!&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Expand contents&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#awesome-go"&gt;Awesome Go&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;Contents&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#actor-model"&gt;Actor Model&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#artificial-intelligence"&gt;Artificial Intelligence&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#audio-and-music"&gt;Audio and Music&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#authentication-and-authorization"&gt;Authentication and Authorization&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#blockchain"&gt;Blockchain&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#bot-building"&gt;Bot Building&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#build-automation"&gt;Build Automation&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#command-line"&gt;Command Line&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#advanced-console-uis"&gt;Advanced Console UIs&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#standard-cli"&gt;Standard CLI&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#continuous-integration"&gt;Continuous Integration&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#css-preprocessors"&gt;CSS Preprocessors&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#data-integration-frameworks"&gt;Data Integration Frameworks&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#data-structures-and-algorithms"&gt;Data Structures and Algorithms&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#bit-packing-and-compression"&gt;Bit-packing and Compression&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#bit-sets"&gt;Bit Sets&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#bloom-and-cuckoo-filters"&gt;Bloom and Cuckoo Filters&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#data-structure-and-algorithm-collections"&gt;Data Structure and Algorithm Collections&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#iterators"&gt;Iterators&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#maps"&gt;Maps&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#miscellaneous-data-structures-and-algorithms"&gt;Miscellaneous Data Structures and Algorithms&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#nullable-types"&gt;Nullable Types&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#queues"&gt;Queues&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#sets"&gt;Sets&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#text-analysis"&gt;Text Analysis&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#trees"&gt;Trees&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#pipes"&gt;Pipes&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#database"&gt;Database&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#caches"&gt;Caches&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#databases-implemented-in-go"&gt;Databases Implemented in Go&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#database-schema-migration"&gt;Database Schema Migration&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#database-tools"&gt;Database Tools&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#sql-query-builders"&gt;SQL Query Builders&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#database-drivers"&gt;Database Drivers&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#interfaces-to-multiple-backends"&gt;Interfaces to Multiple Backends&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#relational-database-drivers"&gt;Relational Database Drivers&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#nosql-database-drivers"&gt;NoSQL Database Drivers&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#search-and-analytic-databases"&gt;Search and Analytic Databases&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#date-and-time"&gt;Date and Time&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#distributed-systems"&gt;Distributed Systems&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#dynamic-dns"&gt;Dynamic DNS&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#email"&gt;Email&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#embeddable-scripting-languages"&gt;Embeddable Scripting Languages&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#error-handling"&gt;Error Handling&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#file-handling"&gt;File Handling&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#financial"&gt;Financial&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#forms"&gt;Forms&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#functional"&gt;Functional&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#game-development"&gt;Game Development&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#generators"&gt;Generators&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#geographic"&gt;Geographic&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#go-compilers"&gt;Go Compilers&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#goroutines"&gt;Goroutines&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#gui"&gt;GUI&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#hardware"&gt;Hardware&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#images"&gt;Images&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#iot-internet-of-things"&gt;IoT (Internet of Things)&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#job-scheduler"&gt;Job Scheduler&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#json"&gt;JSON&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#logging"&gt;Logging&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#machine-learning"&gt;Machine Learning&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#messaging"&gt;Messaging&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#microsoft-office"&gt;Microsoft Office&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#microsoft-excel"&gt;Microsoft Excel&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#microsoft-word"&gt;Microsoft Word&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#miscellaneous"&gt;Miscellaneous&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#dependency-injection"&gt;Dependency Injection&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#project-layout"&gt;Project Layout&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#strings"&gt;Strings&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#uncategorized"&gt;Uncategorized&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#natural-language-processing"&gt;Natural Language Processing&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#language-detection"&gt;Language Detection&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#morphological-analyzers"&gt;Morphological Analyzers&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#slugifiers"&gt;Slugifiers&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#tokenizers"&gt;Tokenizers&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#translation"&gt;Translation&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#transliteration"&gt;Transliteration&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#networking"&gt;Networking&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#http-clients"&gt;HTTP Clients&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#opengl"&gt;OpenGL&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#orm"&gt;ORM&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#package-management"&gt;Package Management&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#performance"&gt;Performance&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#query-language"&gt;Query Language&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#reflection"&gt;Reflection&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#resource-embedding"&gt;Resource Embedding&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#science-and-data-analysis"&gt;Science and Data Analysis&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#security"&gt;Security&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#serialization"&gt;Serialization&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#server-applications"&gt;Server Applications&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#stream-processing"&gt;Stream Processing&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#template-engines"&gt;Template Engines&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#testing"&gt;Testing&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#testing-frameworks"&gt;Testing Frameworks&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#mock"&gt;Mock&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#fuzzing-and-delta-debuggingreducingshrinking"&gt;Fuzzing and delta-debugging/reducing/shrinking&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#selenium-and-browser-control-tools"&gt;Selenium and browser control tools&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#fail-injection"&gt;Fail injection&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#text-processing"&gt;Text Processing&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#formatters"&gt;Formatters&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#markup-languages"&gt;Markup Languages&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#parsersencodersdecoders"&gt;Parsers/Encoders/Decoders&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#regular-expressions"&gt;Regular Expressions&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#sanitation"&gt;Sanitation&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#scrapers"&gt;Scrapers&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#rss"&gt;RSS&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#utilitymiscellaneous"&gt;Utility/Miscellaneous&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#third-party-apis"&gt;Third-party APIs&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#utilities"&gt;Utilities&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#uuid"&gt;UUID&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#validation"&gt;Validation&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#version-control"&gt;Version Control&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#video"&gt;Video&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#web-frameworks"&gt;Web Frameworks&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#middlewares"&gt;Middlewares&lt;/a&gt; 
       &lt;ul&gt; 
        &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#actual-middlewares"&gt;Actual middlewares&lt;/a&gt;&lt;/li&gt; 
        &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#libraries-for-creating-http-middlewares"&gt;Libraries for creating HTTP middlewares&lt;/a&gt;&lt;/li&gt; 
       &lt;/ul&gt; &lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#routers"&gt;Routers&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#webassembly"&gt;WebAssembly&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#webhooks-server"&gt;Webhooks Server&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#windows"&gt;Windows&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#workflow-frameworks"&gt;Workflow Frameworks&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#xml"&gt;XML&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#zero-trust"&gt;Zero Trust&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#code-analysis"&gt;Code Analysis&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#editor-plugins"&gt;Editor Plugins&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#go-generate-tools"&gt;Go Generate Tools&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#go-tools"&gt;Go Tools&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#software-packages"&gt;Software Packages&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#devops-tools"&gt;DevOps Tools&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#other-software"&gt;Other Software&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#resources"&gt;Resources&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#benchmarks"&gt;Benchmarks&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#conferences"&gt;Conferences&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#e-books"&gt;E-Books&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#e-books-for-purchase"&gt;E-books for purchase&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#free-e-books"&gt;Free e-books&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#gophers"&gt;Gophers&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#meetups"&gt;Meetups&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#style-guides"&gt;Style Guides&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#social-media"&gt;Social Media&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#twitter"&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#reddit"&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#websites"&gt;Websites&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#tutorials"&gt;Tutorials&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#guided-learning"&gt;Guided Learning&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h2&gt;Actor Model&lt;/h2&gt; 
 &lt;p&gt;&lt;em&gt;Libraries for building actor-based programs.&lt;/em&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pancsta/asyncmachine-go/tree/main/pkg/machine"&gt;asyncmachine-go/pkg/machine&lt;/a&gt; - Graph control flow library (AOP, actor, state-machine).&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ergo-services/ergo"&gt;Ergo&lt;/a&gt; - An actor-based Framework with network transparency for creating event-driven architecture in Golang. Inspired by Erlang.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Tochemey/goakt"&gt;Goakt&lt;/a&gt; - Fast and Distributed Actor framework using protocol buffers as message for Golang.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/anthdm/hollywood"&gt;Hollywood&lt;/a&gt; - Blazingly fast and light-weight Actor engine written in Golang.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/asynkron/protoactor-go"&gt;ProtoActor&lt;/a&gt; - Proto Actor - Ultra fast distributed actors for Go, C# and Java/Kotlin.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h2&gt;Artificial Intelligence&lt;/h2&gt; 
 &lt;p&gt;&lt;em&gt;Libraries for building programs that leverage AI.&lt;/em&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/philippgille/chromem-go"&gt;chromem-go&lt;/a&gt; - Embeddable vector database for Go with Chroma-like interface and zero third-party dependencies. In-memory with optional persistence.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://gitlab.com/tozd/go/fun"&gt;fun&lt;/a&gt; - The simplest but powerful way to use large language models (LLMs) in Go.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tmc/langchaingo"&gt;langchaingo&lt;/a&gt; - LangChainGo is a framework for developing applications powered by language models.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mudler/LocalAI"&gt;LocalAI&lt;/a&gt; - Open Source OpenAI alternative, self-host AI models.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jmorganca/ollama"&gt;Ollama&lt;/a&gt; - Run large language models locally.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/presbrey/ollamafarm"&gt;OllamaFarm&lt;/a&gt; - Manage, load-balance, and failover packs of Ollamas.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Audio and Music&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for manipulating audio.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/faiface/beep"&gt;beep&lt;/a&gt; - A simple library for playback and audio manipulation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mewkiz/flac"&gt;flac&lt;/a&gt; - Native Go FLAC encoder/decoder with support for FLAC streams.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Comcast/gaad"&gt;gaad&lt;/a&gt; - Native Go AAC bitstream parser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leberKleber/go-mpris"&gt;go-mpris&lt;/a&gt; - Client for mpris dbus interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DylanMeeus/GoAudio"&gt;GoAudio&lt;/a&gt; - Native Go Audio Processing Library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dh1tw/gosamplerate"&gt;gosamplerate&lt;/a&gt; - libsamplerate bindings for go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bogem/id3v2"&gt;id3v2&lt;/a&gt; - ID3 decoding and encoding library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gen2brain/malgo"&gt;malgo&lt;/a&gt; - Mini audio library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tosone/minimp3"&gt;minimp3&lt;/a&gt; - Lightweight MP3 decoder library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hajimehoshi/oto"&gt;Oto&lt;/a&gt; - A low-level library to play sound on multiple platforms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gordonklaus/portaudio"&gt;PortAudio&lt;/a&gt; - Go bindings for the PortAudio audio I/O library.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Authentication and Authorization&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for implementing authentication and authorization.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/volatiletech/authboss"&gt;authboss&lt;/a&gt; - Modular authentication system for the web. It tries to remove as much boilerplate and "hard things" as possible so that each time you start a new web project in Go, you can plug it in, configure it, and start building your app without having to build an authentication system each time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/essentialkaos/branca"&gt;branca&lt;/a&gt; - branca token &lt;a href="https://github.com/tuupola/branca-spec"&gt;specification implementation&lt;/a&gt; for Golang 1.15+.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hsluoyz/casbin"&gt;casbin&lt;/a&gt; - Authorization library that supports access control models like ACL, RBAC, and ABAC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mengzhuo/cookiestxt"&gt;cookiestxt&lt;/a&gt; - provides a parser of cookies.txt file format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jferrl/go-githubauth"&gt;go-githubauth&lt;/a&gt; - Utilities for GitHub authentication: generate and use GitHub application and installation tokens.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/melvinodsa/go-iam"&gt;go-iam&lt;/a&gt; - Developer-first Identity and Access Management system with a simple UI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-jose/go-jose"&gt;go-jose&lt;/a&gt; - Fairly complete implementation of the JOSE working group's JSON Web Token, JSON Web Signatures, and JSON Web Encryption specs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leodip/goiabada"&gt;goiabada&lt;/a&gt; - An open-source authentication and authorization server supporting OAuth2 and OpenID Connect.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dghubble/gologin"&gt;gologin&lt;/a&gt; - chainable handlers for login with OAuth1 and OAuth2 authentication providers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mikespook/gorbac"&gt;gorbac&lt;/a&gt; - provides a lightweight role-based access control (RBAC) implementation in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Kwynto/gosession"&gt;gosession&lt;/a&gt; - This is quick session for net/http in GoLang. This package is perhaps the best implementation of the session mechanism, or at least it tries to become one.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/markbates/goth"&gt;goth&lt;/a&gt; - provides a simple, clean, and idiomatic way to use OAuth and OAuth2. Handles multiple providers out of the box.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abraithwaite/jeff"&gt;jeff&lt;/a&gt; - Simple, flexible, secure, and idiomatic web session management with pluggable backends.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pascaldekloe/jwt"&gt;jwt&lt;/a&gt; - Lightweight JSON Web Token (JWT) library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cristalhq/jwt"&gt;jwt&lt;/a&gt; - Safe, simple, and fast JSON Web Tokens for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adam-hanna/jwt-auth"&gt;jwt-auth&lt;/a&gt; - JWT middleware for Golang http servers with many configuration options.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang-jwt/jwt"&gt;jwt-go&lt;/a&gt; - A full featured implementation of JSON Web Tokens (JWT). This library supports the parsing and verification as well as the generation and signing of JWTs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lestrrat-go/jwx"&gt;jwx&lt;/a&gt; - Go module implementing various JWx (JWA/JWE/JWK/JWS/JWT, otherwise known as JOSE) technologies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ory/keto"&gt;keto&lt;/a&gt; - Open Source (Go) implementation of "Zanzibar: Google's Consistent, Global Authorization System". Ships gRPC, REST APIs, newSQL, and an easy and granular permission language. Supports ACL, RBAC, and other access models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tarent/loginsrv"&gt;loginsrv&lt;/a&gt; - JWT login microservice with pluggable backends such as OAuth2 (Github), htpasswd, osiam.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang/oauth2"&gt;oauth2&lt;/a&gt; - Successor of goauth2. Generic OAuth 2.0 package that comes with JWT, Google APIs, Compute Engine, and App Engine support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zitadel/oidc"&gt;oidc&lt;/a&gt; - Easy to use OpenID Connect client and server library written for Go and certified by the OpenID Foundation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openfga/openfga"&gt;openfga&lt;/a&gt; - Implementation of fine-grained authorization based on the "Zanzibar: Google's Consistent, Global Authorization System" paper. Backed by &lt;a href="https://www.cncf.io/"&gt;CNCF&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openshift/osin"&gt;osin&lt;/a&gt; - Golang OAuth2 server library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/grijul/otpgen"&gt;otpgen&lt;/a&gt; - Library to generate TOTP/HOTP codes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jltorresm/otpgo"&gt;otpgo&lt;/a&gt; - Time-Based One-Time Password (TOTP) and HMAC-Based One-Time Password (HOTP) library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/o1egl/paseto"&gt;paseto&lt;/a&gt; - Golang implementation of Platform-Agnostic Security Tokens (PASETO).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xyproto/permissions"&gt;permissions&lt;/a&gt; - Library for keeping track of users, login states, and permissions. Uses secure cookies and bcrypt.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SonicRoshan/scope"&gt;scope&lt;/a&gt; - Easily Manage OAuth2 Scopes In Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexedwards/scs"&gt;scs&lt;/a&gt; - Session Manager for HTTP servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chmike/securecookie"&gt;securecookie&lt;/a&gt; - Efficient secure cookie encoding/decoding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/icza/session"&gt;session&lt;/a&gt; - Go session management for web servers (including support for Google App Engine - GAE).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adam-hanna/sessions"&gt;sessions&lt;/a&gt; - Dead simple, highly performant, highly customizable sessions service for go http servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/swithek/sessionup"&gt;sessionup&lt;/a&gt; - Simple, yet effective HTTP session management and identification package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brianvoe/sjwt"&gt;sjwt&lt;/a&gt; - Simple jwt generator and parser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/authzed/spicedb"&gt;spicedb&lt;/a&gt; - A Zanzibar-inspired database that enables fine-grained authorization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vkuznet/x509proxy"&gt;x509proxy&lt;/a&gt; - Library to handle X509 proxy certificates.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Blockchain&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools for building blockchains.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cometbft/cometbft"&gt;cometbft&lt;/a&gt; - A distributed, Byzantine fault-tolerant, deterministic state machine replication engine. It is a fork of Tendermint Core and implements the Tendermint consensus algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cosmos/cosmos-sdk"&gt;cosmos-sdk&lt;/a&gt; - A Framework for Building Public Blockchains in the Cosmos Ecosystem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gnolang/gno"&gt;gno&lt;/a&gt; - A comprehensive smart contract suite built with Golang and Gnolang, a deterministic, purpose-built Go variant for blockchains.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ethereum/go-ethereum"&gt;go-ethereum&lt;/a&gt; - Official Go implementation of the Ethereum protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LimeChain/gosemble"&gt;gosemble&lt;/a&gt; - A Go-based framework for building Polkadot/Substrate-compatible runtimes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChainSafe/gossamer"&gt;gossamer&lt;/a&gt; - A Go implementation of the Polkadot Host.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ipfs/kubo"&gt;kubo&lt;/a&gt; - An IPFS implementation in Go. It provides content-addressable storage which can be used for decentralized storage in DApps. It is based on the IPFS protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lightningnetwork/lnd"&gt;lnd&lt;/a&gt; - A complete implementation of a Lightning Network node.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gagliardetto/solana-go"&gt;solana-go&lt;/a&gt; - Go library to interface with Solana JSON RPC and WebSocket interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tendermint/tendermint"&gt;tendermint&lt;/a&gt; - High-performance middleware for transforming a state machine written in any programming language into a Byzantine Fault Tolerant replicated state machine using the Tendermint consensus and blockchain protocols.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Bot Building&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for building and working with bots.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/diamondburned/arikawa"&gt;arikawa&lt;/a&gt; - A library and framework for the Discord API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-telegram/bot"&gt;bot&lt;/a&gt; - Zero-dependencies Telegram Bot library with additional UI components.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NicoNex/echotron"&gt;echotron&lt;/a&gt; - An elegant and concurrent library for Telegram Bots in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://joe-bot.net"&gt;go-joe&lt;/a&gt; - A general-purpose bot library inspired by Hubot but written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oklahomer/go-sarah"&gt;go-sarah&lt;/a&gt; - Framework to build a bot for desired chat services including LINE, Slack, Gitter, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mr-linch/go-tg"&gt;go-tg&lt;/a&gt; - Generated from official docs Go client library for accessing Telegram Bot API, with batteries for building complex bots included.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gempir/go-twitch-irc"&gt;go-twitch-irc&lt;/a&gt; - Library to write bots for twitch.tv chat&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/onrik/micha"&gt;micha&lt;/a&gt; - Go Library for Telegram bot api.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/innogames/slack-bot"&gt;slack-bot&lt;/a&gt; - Ready to use Slack Bot for lazy developers: Custom commands, Jenkins, Jira, Bitbucket, Github...&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/slack-io/slacker"&gt;slacker&lt;/a&gt; - Easy to use framework to create Slack bots.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tucnak/telebot"&gt;telebot&lt;/a&gt; - Telegram bot framework is written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mymmrac/telego"&gt;telego&lt;/a&gt; - Telegram Bot API library for Golang with full one-to-one API implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-telegram-bot-api/telegram-bot-api"&gt;telegram-bot-api&lt;/a&gt; - Simple and clean Telegram bot client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wabarc/wayback"&gt;wayback&lt;/a&gt; - A bot for Telegram, Mastodon, Slack, and other messaging platforms archives webpages.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Build Automation&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries and tools help with build automation.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gopinath-langote/1build"&gt;1build&lt;/a&gt; - Command line tool to frictionlessly manage project-specific commands.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cosmtrek/air"&gt;air&lt;/a&gt; - Air - Live reload for Go apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GuilhermeCaruso/anko"&gt;anko&lt;/a&gt; - Simple application watcher for multiple programming languages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maxclaus/gaper"&gt;gaper&lt;/a&gt; - Builds and restarts a Go project when it crashes or some watched file changes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://go-gilbert.github.io"&gt;gilbert&lt;/a&gt; - Build system and task runner for Go projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kcmvp/gob"&gt;gob&lt;/a&gt; - &lt;a href="https://docs.gradle.org/"&gt;Gradle&lt;/a&gt;/&lt;a href="https://maven.apache.org/"&gt;Maven&lt;/a&gt; like build tool for Go projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goyek/goyek"&gt;goyek&lt;/a&gt; - Create build pipelines in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/magefile/mage"&gt;mage&lt;/a&gt; - Mage is a make/rake-like build tool using Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tj/mmake"&gt;mmake&lt;/a&gt; - Modern Make.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tockins/realize"&gt;realize&lt;/a&gt; - Go build a system with file watchers and live to reload. Run, build and watch file changes with custom paths.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-task/task"&gt;Task&lt;/a&gt; - simple "Make" alternative.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/taskctl/taskctl"&gt;taskctl&lt;/a&gt; - Concurrent task runner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joerdav/xc"&gt;xc&lt;/a&gt; - Task runner with README.md defined tasks, executable markdown.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Command Line&lt;/h2&gt; 
&lt;h3&gt;Advanced Console UIs&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Libraries for building Console Applications and Console User Interfaces.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/guptarohit/asciigraph"&gt;asciigraph&lt;/a&gt; - Go package to make lightweight ASCII line graph ‚ï≠‚îà‚ïØ in command line apps with no other dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/logrusorgru/aurora"&gt;aurora&lt;/a&gt; - ANSI terminal colors that support fmt.Printf/Sprintf.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Delta456/box-cli-maker"&gt;box-cli-maker&lt;/a&gt; - Make Highly Customized Boxes for your CLI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Evertras/bubble-table"&gt;bubble-table&lt;/a&gt; - An interactive table component for bubbletea.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/bubbles"&gt;bubbles&lt;/a&gt; - TUI components for bubbletea.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/bubbletea"&gt;bubbletea&lt;/a&gt; - Go framework to build terminal apps, based on The Elm Architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mingrammer/cfmt"&gt;cfmt&lt;/a&gt; - Contextual fmt inspired by bootstrap color classes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/i582/cfmt"&gt;cfmt&lt;/a&gt; - Simple and convenient formatted stylized output fully compatible with fmt library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ttacon/chalk"&gt;chalk&lt;/a&gt; - Intuitive package for prettifying terminal/console output.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alfiankan/crab-config-files-templating"&gt;crab-config-files-templating&lt;/a&gt; - Dynamic configuration file templating tool for kubernetes manifest or general configuration files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wzshiming/ctc"&gt;ctc&lt;/a&gt; - The non-invasive cross-platform terminal color library does not need to modify the Print method.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antonmedv/fx"&gt;fx&lt;/a&gt; - Terminal JSON viewer &amp;amp; processor.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/workanator/go-ataman"&gt;go-ataman&lt;/a&gt; - Go library for rendering ANSI colored text templates in terminals.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/go-colorable"&gt;go-colorable&lt;/a&gt; - Colorable writer for windows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daviddengcn/go-colortext"&gt;go-colortext&lt;/a&gt; - Go library for color output in terminals.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/go-isatty"&gt;go-isatty&lt;/a&gt; - isatty for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abusomani/go-palette"&gt;go-palette&lt;/a&gt; - Go library that provides elegant and convenient style definitions using ANSI colors. Fully compatible &amp;amp; wraps the &lt;a href="https://pkg.go.dev/fmt"&gt;fmt library&lt;/a&gt; for nice terminal layouts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/c-bata/go-prompt"&gt;go-prompt&lt;/a&gt; - Library for building a powerful interactive prompt, inspired by &lt;a href="https://github.com/jonathanslenders/python-prompt-toolkit"&gt;python-prompt-toolkit&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jroimartin/gocui"&gt;gocui&lt;/a&gt; - Minimalist Go library aimed at creating Console User Interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/labstack/gommon/tree/master/color"&gt;gommon/color&lt;/a&gt; - Style terminal text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gookit/color"&gt;gookit/color&lt;/a&gt; - Terminal color rendering tool library, support 16 colors, 256 colors, RGB color rendering output, compatible with Windows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/lipgloss"&gt;lipgloss&lt;/a&gt; - Declaratively define styles for color, format and layout in the terminal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cyucelen/marker"&gt;marker&lt;/a&gt; - Easiest way to match and mark strings for colorful terminal outputs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vbauerster/mpb"&gt;mpb&lt;/a&gt; - Multi progress bar for terminal applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/schollz/progressbar"&gt;progressbar&lt;/a&gt; - Basic thread-safe progress bar that works in every OS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pterm/pterm"&gt;pterm&lt;/a&gt; - A library to beautify console output on every platform with many combinable components.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexeyco/simpletable"&gt;simpletable&lt;/a&gt; - Simple tables in a terminal with Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/briandowns/spinner"&gt;spinner&lt;/a&gt; - Go package to easily provide a terminal spinner with options.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cheynewallace/tabby"&gt;tabby&lt;/a&gt; - A tiny library for super simple Golang tables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tomlazar/table"&gt;table&lt;/a&gt; - Small library for terminal color based tables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nsf/termbox-go"&gt;termbox-go&lt;/a&gt; - Termbox is a library for creating cross-platform text-based interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mum4k/termdash"&gt;termdash&lt;/a&gt; - Go terminal dashboard based on &lt;strong&gt;termbox-go&lt;/strong&gt; and inspired by &lt;a href="https://github.com/gizak/termui"&gt;termui&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muesli/termenv"&gt;termenv&lt;/a&gt; - Advanced ANSI style &amp;amp; color support for your terminal applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gizak/termui"&gt;termui&lt;/a&gt; - Go terminal dashboard based on &lt;strong&gt;termbox-go&lt;/strong&gt; and inspired by &lt;a href="https://github.com/yaronn/blessed-contrib"&gt;blessed-contrib&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gosuri/uilive"&gt;uilive&lt;/a&gt; - Library for updating terminal output in real time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gosuri/uiprogress"&gt;uiprogress&lt;/a&gt; - Flexible library to render progress bars in terminal applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gosuri/uitable"&gt;uitable&lt;/a&gt; - Library to improve readability in terminal apps using tabular data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/theckman/yacspin"&gt;yacspin&lt;/a&gt; - Yet Another CLi Spinner package, for working with terminal spinners.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Standard CLI&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Libraries for building standard or basic Command Line applications.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cristalhq/acmd"&gt;acmd&lt;/a&gt; - Simple, useful, and opinionated CLI package in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/akamensky/argparse"&gt;argparse&lt;/a&gt; - Command line argument parser inspired by Python's argparse module.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cosiner/argv"&gt;argv&lt;/a&gt; - Go library to split command line string as arguments array using the bash syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rsteube/carapace"&gt;carapace&lt;/a&gt; - Command argument completion generator for spf13/cobra.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rsteube/carapace-bin"&gt;carapace-bin&lt;/a&gt; - Multi-shell multi-command argument completer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rsteube/carapace-spec"&gt;carapace-spec&lt;/a&gt; - Define simple completions using a spec file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tucnak/climax"&gt;climax&lt;/a&gt; - Alternative CLI with "human face", in spirit of Go command.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leaanthony/clir"&gt;cl√Ær&lt;/a&gt; - A Simple and Clear CLI library. Dependency free.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/posener/cmd"&gt;cmd&lt;/a&gt; - Extends the standard &lt;code&gt;flag&lt;/code&gt; package to support sub commands and more in idiomatic way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hedzr/cmdr"&gt;cmdr&lt;/a&gt; - A POSIX/GNU style, getopt-like command-line UI Go library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spf13/cobra"&gt;cobra&lt;/a&gt; - Commander for modern Go CLI interactions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rainu/go-command-chain"&gt;command-chain&lt;/a&gt; - A go library for configure and run command chains - such as pipelining in unix shells.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jaffee/commandeer"&gt;commandeer&lt;/a&gt; - Dev-friendly CLI apps: sets up flags, defaults, and usage based on struct fields and tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/posener/complete"&gt;complete&lt;/a&gt; - Write bash completions in Go + Go command bash completion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reeflective/console"&gt;console&lt;/a&gt; Closed-loop application library for Cobra commands, with oh-my-posh prompts, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dnote/dnote"&gt;Dnote&lt;/a&gt; - A simple command line notebook with multi-device sync.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elves/elvish"&gt;elvish&lt;/a&gt; - An expressive programming language and a versatile interactive shell.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codingconcepts/env"&gt;env&lt;/a&gt; - Tag-based environment configuration for structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/integrii/flaggy"&gt;flaggy&lt;/a&gt; - A robust and idiomatic flags package with excellent subcommand support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sgreben/flagvar"&gt;flagvar&lt;/a&gt; - A collection of flag argument types for Go's standard &lt;code&gt;flag&lt;/code&gt; package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agilira/flash-flags"&gt;flash-flags&lt;/a&gt; - Ultra-fast, zero-dependency, POSIX-compliant flag parsing library that can be used as drop-in stdlib replacement with security hardening.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jon-codes/getopt"&gt;getopt&lt;/a&gt; - An accurate Go &lt;code&gt;getopt&lt;/code&gt;, validated against the GNU libc implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexflint/go-arg"&gt;go-arg&lt;/a&gt; - Struct-based argument parsing in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jessevdk/go-flags"&gt;go-flags&lt;/a&gt; - go command line option parser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DavidGamba/go-getoptions"&gt;go-getoptions&lt;/a&gt; - Go option parser inspired by the flexibility of Perl‚Äôs GetOpt::Long.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nyaosorg/go-readline-ny"&gt;go-readline-ny&lt;/a&gt; - A customizable line-editing library with Emacs keybindings, Unicode support, completion, and syntax highlighting. Used in NYAGOS shell.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/devfacet/gocmd"&gt;gocmd&lt;/a&gt; - Go library for building command line applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/napalu/goopt"&gt;goopt&lt;/a&gt; - A declarative, struct-tag based CLI framework for Go, with a broad feature set such as hierarchical commands/flags, i18n, shell completion, and validation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/cli"&gt;hashicorp/cli&lt;/a&gt; - Go library for implementing command-line interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hidevopsio/hiboot/tree/master/pkg/app/cli"&gt;hiboot cli&lt;/a&gt; - cli application framework with auto configuration and dependency injection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/liujianping/job"&gt;job&lt;/a&gt; - JOB, make your short-term command as a long-term job.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alecthomas/kingpin"&gt;kingpin&lt;/a&gt; - Command line and flag parser supporting sub commands (superseded by &lt;code&gt;kong&lt;/code&gt;; see below).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/peterh/liner"&gt;liner&lt;/a&gt; - Go readline-like library for command-line interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jxskiss/mcli"&gt;mcli&lt;/a&gt; - A minimal but very powerful cli library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mkideal/cli"&gt;mkideal/cli&lt;/a&gt; - Feature-rich and easy to use command-line package based on golang struct tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jawher/mow.cli"&gt;mow.cli&lt;/a&gt; - Go library for building CLI applications with sophisticated flag and argument parsing and validation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nanovms/ops"&gt;ops&lt;/a&gt; - Unikernel Builder/Orchestrator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agilira/orpheus"&gt;orpheus&lt;/a&gt; - CLI framework with security hardening, plugin storage system, and production observability features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spf13/pflag"&gt;pflag&lt;/a&gt; - Drop-in replacement for Go's flag package, implementing POSIX/GNU-style --flags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reeflective/readline"&gt;readline&lt;/a&gt; - Shell library with modern and easy to use UI features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Zaba505/sand"&gt;sand&lt;/a&gt; - Simple API for creating interpreters and so much more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/octago/sflags"&gt;sflags&lt;/a&gt; - Struct based flags generator for flag, urfave/cli, pflag, cobra, kingpin, and other libraries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leodido/structcli"&gt;structcli&lt;/a&gt; - Eliminate Cobra boilerplate: build powerful, feature-rich CLIs declaratively from Go structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antham/strumt"&gt;strumt&lt;/a&gt; - Library to create prompt chain.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/subcmd"&gt;subcmd&lt;/a&gt; - Another approach to parsing and running subcommands. Works alongside the standard &lt;code&gt;flag&lt;/code&gt; package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/teris-io/cli"&gt;teris-io/cli&lt;/a&gt; - Simple and complete API for building command line interfaces in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/liujianping/ts"&gt;ts&lt;/a&gt; - Timestamp convert &amp;amp; compare tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ukautz/clif"&gt;ukautz/clif&lt;/a&gt; - Small command line interface framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/urfave/cli"&gt;urfave/cli&lt;/a&gt; - Simple, fast, and fun package for building command line apps in Go (formerly codegangsta/cli).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mszostok/version"&gt;version&lt;/a&gt; - Collects and displays CLI version information in multiple formats along with upgrade notice.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dixonwille/wlog"&gt;wlog&lt;/a&gt; - Simple logging interface that supports cross-platform color and concurrency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dixonwille/wmenu"&gt;wmenu&lt;/a&gt; - Easy to use menu structure for cli applications that prompt users to make choices.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for configuration parsing.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cristalhq/aconfig"&gt;aconfig&lt;/a&gt; - Simple, useful and opinionated config loader.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Azure/AppConfiguration-GoProvider"&gt;azureappconfiguration&lt;/a&gt; - The configuration provider for consuming data in Azure App Configuration from Go applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wkhere/bcl"&gt;bcl&lt;/a&gt; - BCL is a configuration language similar to HCL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ilyakaznacheev/cleanenv"&gt;cleanenv&lt;/a&gt; - Minimalistic configuration reader (from files, ENV, and wherever you want).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JeremyLoy/config"&gt;config&lt;/a&gt; - Cloud native application configuration. Bind ENV to structs in only two lines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/num30/config"&gt;config&lt;/a&gt; - configure your app using file, environment variables, or flags in two lines of code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BoRuDar/configuration"&gt;configuration&lt;/a&gt; - Library for initializing configuration structs from env variables, files, flags and 'default' tag.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paked/configure"&gt;configure&lt;/a&gt; - Provides configuration through multiple sources, including JSON, flags and environment variables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sherifabdlnaby/configuro"&gt;configuro&lt;/a&gt; - opinionated configuration loading &amp;amp; validation framework from ENV and Files focused towards 12-Factor compliant applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/greencoda/confiq"&gt;confiq&lt;/a&gt; - Structured data format to config struct decoder library for Go - supporting multiple data formats.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/heetch/confita"&gt;confita&lt;/a&gt; - Load configuration in cascade from multiple backends into a struct.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/the4thamigo-uk/conflate"&gt;conflate&lt;/a&gt; - Library/tool to merge multiple JSON/YAML/TOML files from arbitrary URLs, validation against a JSON schema, and application of default values defined in the schema.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atelpis/enflag"&gt;enflag&lt;/a&gt; - Container-oriented, zero-dependency configuration library that unifies Env variable and Flag parsing. Uses generics for type safety, without reflection or struct tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/caarlos0/env"&gt;env&lt;/a&gt; - Parse environment variables to Go structs (with defaults).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/junk1tm/env"&gt;env&lt;/a&gt; - A lightweight package for loading environment variables into structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/syntaqx/env"&gt;env&lt;/a&gt; - An environment utility package with support for unmarshaling into structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vrischmann/envconfig"&gt;envconfig&lt;/a&gt; - Read your configuration from environment variables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antham/envh"&gt;envh&lt;/a&gt; - Helpers to manage environment variables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuseferi/envyaml"&gt;envyaml&lt;/a&gt; - Yaml with environment variables reader. it helps to have secrets as environment variable but load them configs as structured Yaml.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kkyr/fig"&gt;fig&lt;/a&gt; - Tiny library for reading configuration from a file and from environment variables (with validation &amp;amp; defaults).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sakirsensoy/genv"&gt;genv&lt;/a&gt; - Read environment variables easily with dotenv support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deatil/go-array"&gt;go-array&lt;/a&gt; - A Go package that read or set data from map, slice or json.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PaddleHQ/go-aws-ssm"&gt;go-aws-ssm&lt;/a&gt; - Go package that fetches parameters from AWS System Manager - Parameter Store.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dsbasko/go-cfg"&gt;go-cfg&lt;/a&gt; - The library provides a unified way to read configuration data into a structure from various sources, such as env, flags, and configuration files (.json, .yaml, .toml, .env).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ThomasObenaus/go-conf"&gt;go-conf&lt;/a&gt; - Simple library for application configuration based on annotated structs. It supports reading the configuration from environment variables, config files and command line parameters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MordaTeam/go-config"&gt;go-config&lt;/a&gt; - Simple and convenient library for working with app configurations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/subpop/go-ini"&gt;go-ini&lt;/a&gt; - A Go package that marshals and unmarshals INI-files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ianlopshire/go-ssm-config"&gt;go-ssm-config&lt;/a&gt; - Go utility for loading configuration parameters from AWS SSM (Parameter Store).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ufoscout/go-up"&gt;go-up&lt;/a&gt; - A simple configuration library with recursive placeholders resolution and no magic.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jagerente/gocfg"&gt;GoCfg&lt;/a&gt; - Config manager with Struct Tags based contracts, custom value providers, parsers, and documentation generation. Customizable yet simple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joho/godotenv"&gt;godotenv&lt;/a&gt; - Go port of Ruby's dotenv library (Loads environment variables from &lt;code&gt;.env&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ian-kent/gofigure"&gt;gofigure&lt;/a&gt; - Go application configuration made easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golobby/config"&gt;GoLobby/Config&lt;/a&gt; - GoLobby Config is a lightweight yet powerful configuration manager for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/One-com/gone/tree/master/jconf"&gt;gone/jconf&lt;/a&gt; - Modular JSON configuration. Keep your config structs along with the code they configure and delegate parsing to submodules without sacrificing full config serialization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/milad-abbasi/gonfig"&gt;gonfig&lt;/a&gt; - Tag-based configuration parser which loads values from different providers into typesafe struct.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gookit/config"&gt;gookit/config&lt;/a&gt; - application config manage(load,get,set). support JSON, YAML, TOML, INI, HCL. multi file load, data override merge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/beatlabs/harvester"&gt;harvester&lt;/a&gt; - Harvester, a easy to use static and dynamic configuration package supporting seeding, env vars and Consul integration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hedzr/store"&gt;hedzr/store&lt;/a&gt; - Extensible, high-performance configuration management library, optimized for hierarchical data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hjson/hjson-go"&gt;hjson&lt;/a&gt; - Human JSON, a configuration file format for humans. Relaxed syntax, fewer mistakes, more comments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gurkankaymak/hocon"&gt;hocon&lt;/a&gt; - Configuration library for working with the HOCON(a human-friendly JSON superset) format, supports features like environment variables, referencing other values, comments and multiple files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/schachmat/ingo"&gt;ingo&lt;/a&gt; - Flags persisted in an ini-like config file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-ini/ini"&gt;ini&lt;/a&gt; - Go package to read and write INI files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wlevene/ini"&gt;ini&lt;/a&gt; - INI Parser &amp;amp; Write Library, Unmarshal to Struct, Marshal to Json, Write File, watch file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joshbetz/config"&gt;joshbetz/config&lt;/a&gt; - Small configuration library for Go that parses environment variables, JSON files, and reloads automatically on SIGHUP.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kelseyhightower/envconfig"&gt;kelseyhightower/envconfig&lt;/a&gt; - Go library for managing configuration data from environment variables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/knadh/koanf"&gt;koanf&lt;/a&gt; - Light weight, extensible library for reading config in Go applications. Built in support for JSON, TOML, YAML, env, command line.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nil-go/konf"&gt;konf&lt;/a&gt; - The simplest API for reading/watching config from file, env, flag and clouds (e.g. AWS, Azure, GCP).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lalamove/konfig"&gt;konfig&lt;/a&gt; - Composable, observable and performant config handling for Go for the distributed processing era.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alecthomas/kong"&gt;kong&lt;/a&gt; - Command-line parser with support for arbitrarily complex command-line structures and additional sources of configuration such as YAML, JSON, TOML, etc (successor to &lt;code&gt;kingpin&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sasbury/mini"&gt;mini&lt;/a&gt; - Golang package for parsing ini-style configuration files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nasermirzaei89/env"&gt;nasermirzaei89/env&lt;/a&gt; - Simple useful package for read environment variables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muir/nfigure"&gt;nfigure&lt;/a&gt; - Per-library struct-tag based configuration from command lines (Posix &amp;amp; Go-style); environment, JSON, YAML&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goraz/onion"&gt;onion&lt;/a&gt; - Layer based configuration for Go, Supports JSON, TOML, YAML, properties, etcd, env, and encryption using PGP.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Yiling-J/piper"&gt;piper&lt;/a&gt; - Viper wrapper with config inheritance and key generation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bytedance/sonic"&gt;sonic&lt;/a&gt; - A blazingly fast JSON serializing &amp;amp; deserializing library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tucnak/store"&gt;store&lt;/a&gt; - Lightweight configuration manager for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oblq/swap"&gt;swap&lt;/a&gt; - Instantiate/configure structs recursively, based on build environment. (YAML, TOML, JSON and env).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/diegomarangoni/typenv"&gt;typenv&lt;/a&gt; - Minimalistic, zero dependency, typed environment variables library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/omeid/uconfig"&gt;uConfig&lt;/a&gt; - Lightweight, zero-dependency, and extendable configuration management.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spf13/viper"&gt;viper&lt;/a&gt; - Go configuration with fangs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adrg/xdg"&gt;xdg&lt;/a&gt; - Go implementation of the &lt;a href="https://specifications.freedesktop.org/basedir-spec/latest/"&gt;XDG Base Directory Specification&lt;/a&gt; and &lt;a href="https://wiki.archlinux.org/index.php/XDG_user_directories"&gt;XDG user directories&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/romshark/yamagiconf"&gt;yamagiconf&lt;/a&gt; - The "safe subset" of YAML for Go configs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chaindead/zerocfg"&gt;zerocfg&lt;/a&gt; - Zero-effort, concise configuration management that avoids boilerplate and repetitive code, supports multiple sources with priority overrides.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Continuous Integration&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools for help with continuous integration.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bleenco/abstruse"&gt;abstruse&lt;/a&gt; - Abstruse is a distributed CI platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bencher.dev/"&gt;Bencher&lt;/a&gt; - A suite of continuous benchmarking tools designed to catch performance regressions in CI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ovh/cds"&gt;CDS&lt;/a&gt; - Enterprise-Grade CI/CD and DevOps Automation Open Source Platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/opnlabs/dot"&gt;dot&lt;/a&gt; - A minimal, local first continuous integration system that uses Docker to run jobs concurrently in stages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/drone/drone"&gt;drone&lt;/a&gt; - Drone is a Continuous Integration platform built on Docker, written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gha-common/go-beautiful-html-coverage"&gt;go-beautiful-html-coverage&lt;/a&gt; - A GitHub Action to track code coverage in your pull requests, with a beautiful HTML preview, for free.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jidicula/go-fuzz-action"&gt;go-fuzz-action&lt;/a&gt; - Use Go 1.18's built-in fuzz testing in GitHub Actions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s0ders/go-semver-release"&gt;go-semver-release&lt;/a&gt; - Automate the semantic versioning of Git repositories.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marketplace/actions/go-test-coverage"&gt;go-test-coverage&lt;/a&gt; - A GitHub Action which reports issues when test coverage is below set threshold.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikogura/gomason"&gt;gomason&lt;/a&gt; - Test, Build, Sign, and Publish your go binaries from a clean workspace.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GoTestTools/gotestfmt"&gt;gotestfmt&lt;/a&gt; - go test output for humans.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/goveralls"&gt;goveralls&lt;/a&gt; - Go integration for Coveralls.io continuous code coverage tracking system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/raviqqe/muffet"&gt;muffet&lt;/a&gt; - Fast website link checker in Go, see &lt;a href="https://github.com/lycheeverse/lychee#features"&gt;alternatives&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/overalls"&gt;overalls&lt;/a&gt; - Multi-Package go project coverprofile for tools like goveralls.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LawrenceWoodman/roveralls"&gt;roveralls&lt;/a&gt; - Recursive coverage testing tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/woodpecker-ci/woodpecker"&gt;woodpecker&lt;/a&gt; - Woodpecker is a community fork of the Drone CI system.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;CSS Preprocessors&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for preprocessing CSS files.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/napsy/go-css"&gt;go-css&lt;/a&gt; - A very simple CSS parser, written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wellington/go-libsass"&gt;go-libsass&lt;/a&gt; - Go wrapper to the 100% Sass compatible libsass project.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Data Integration Frameworks&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Frameworks for performing ELT / ETL&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benthosdev/benthos"&gt;Benthos&lt;/a&gt; - A message streaming bridge between a range of protocols.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://github.com/cloudquery/cloudquery"&gt;CloudQuery&lt;/a&gt; - A high-performance ELT data integration framework with pluggable architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jf-tech/omniparser"&gt;omniparser&lt;/a&gt; - A versatile ETL library that parses text input (CSV/txt/JSON/XML/EDI/X12/EDIFACT/etc) in streaming fashion and transforms data into JSON output using data-driven schema.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Data Structures and Algorithms&lt;/h2&gt; 
&lt;h3&gt;Bit-packing and Compression&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iancmcc/bingo"&gt;bingo&lt;/a&gt; - Fast, zero-allocation, lexicographical-order-preserving packing of native types to bytes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zhuangsirui/binpacker"&gt;binpacker&lt;/a&gt; - Binary packer and unpacker helps user build custom binary stream.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yourbasic/bit"&gt;bit&lt;/a&gt; - Golang set data structure with bonus bit-twiddling functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/superwhiskers/crunch"&gt;crunch&lt;/a&gt; - Go package implementing buffers for handling various datatypes easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amallia/go-ef"&gt;go-ef&lt;/a&gt; - A Go implementation of the Elias-Fano encoding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RoaringBitmap/roaring"&gt;roaring&lt;/a&gt; - Go package implementing compressed bitsets.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bit Sets&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kelindar/bitmap"&gt;bitmap&lt;/a&gt; - Dense, zero-allocation, SIMD-enabled bitmap/bitset in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bits-and-blooms/bitset"&gt;bitset&lt;/a&gt; - Go package implementing bitsets.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bloom and Cuckoo Filters&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bits-and-blooms/bloom"&gt;bloom&lt;/a&gt; - Go package implementing Bloom filters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zhenjl/bloom"&gt;bloom&lt;/a&gt; - Bloom filters implemented in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yourbasic/bloom"&gt;bloom&lt;/a&gt; - Golang Bloom filter implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OldPanda/bloomfilter"&gt;bloomfilter&lt;/a&gt; - Yet another Bloomfilter implementation in Go, compatible with Java's Guava library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tylertreat/BoomFilters"&gt;boomfilters&lt;/a&gt; - Probabilistic data structures for processing continuous, unbounded streams.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linvon/cuckoo-filter"&gt;cuckoo-filter&lt;/a&gt; - Cuckoo filter: a comprehensive cuckoo filter, which is configurable and space optimized compared with other implements, and all features mentioned in original paper are available.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seiflotfy/cuckoofilter"&gt;cuckoofilter&lt;/a&gt; - Cuckoo filter: a good alternative to a counting bloom filter implemented in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TheTannerRyan/ring"&gt;ring&lt;/a&gt; - Go implementation of a high performance, thread safe bloom filter.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Data Structure and Algorithm Collections&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shady831213/algorithms"&gt;algorithms&lt;/a&gt; - Algorithms and data structures.CLRS study.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Workiva/go-datastructures"&gt;go-datastructures&lt;/a&gt; - Collection of useful, performant, and thread-safe data structures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emirpasic/gods"&gt;gods&lt;/a&gt; - Go Data Structures. Containers, Sets, Lists, Stacks, Maps, BidiMaps, Trees, HashSet etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/liyue201/gostl"&gt;gostl&lt;/a&gt; - Data structure and algorithm library for go, designed to provide functions similar to C++ STL.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Iterators&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alvii147/gloop"&gt;gloop&lt;/a&gt; - Convenient looping using Go's range-over-func feature.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yaa110/goterator"&gt;goterator&lt;/a&gt; - Iterator implementation to provide map and reduce functionalities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/disksing/iter"&gt;iter&lt;/a&gt; - Go implementation of C++ STL iterators and algorithms.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Maps&lt;/h3&gt; 
&lt;p&gt;See also &lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#database"&gt;Database&lt;/a&gt; for more complex key-value stores, and &lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#trees"&gt;Trees&lt;/a&gt; for additional ordered map implementations.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lrita/cmap"&gt;cmap&lt;/a&gt; - a thread-safe concurrent map for go, support using &lt;code&gt;interface{}&lt;/code&gt; as key and auto scale up shards.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mhmtszr/concurrent-swiss-map"&gt;concurrent-swiss-map&lt;/a&gt; - A high-performance, thread-safe generic concurrent hash map implementation with Swiss Map.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/srfrog/dict"&gt;dict&lt;/a&gt; - Python-like dictionaries (dict) for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lucmq/go-shelve"&gt;go-shelve&lt;/a&gt; - A persistent, map-like object for the Go programming language. Supports multiple embedded key-value stores.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goradd/maps"&gt;goradd/maps&lt;/a&gt; - Go 1.18+ generic map interface for maps; safe maps; ordered maps; ordered, safe maps; etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lyonnee/hmap"&gt;hmap&lt;/a&gt; - HMap is a concurrent and secure, generic support Map implementation designed to provide an easy-to-use API.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Miscellaneous Data Structures and Algorithms&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/free/concurrent-writer"&gt;concurrent-writer&lt;/a&gt; - Highly concurrent drop-in replacement for &lt;code&gt;bufio.Writer&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seiflotfy/count-min-log"&gt;count-min-log&lt;/a&gt; - Go implementation Count-Min-Log sketch: Approximately counting with approximate counters (Like Count-Min sketch but using less memory).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cocoonspace/fsm"&gt;fsm&lt;/a&gt; - Finite-State Machine package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nwillc/genfuncs"&gt;genfuncs&lt;/a&gt; - Go 1.18+ generics package inspired by Kotlin's Sequence and Map.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/go-generics"&gt;go-generics&lt;/a&gt; - Generic slice, map, set, iterator, and goroutine utilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hailocab/go-geoindex"&gt;go-geoindex&lt;/a&gt; - In-memory geo index.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/francesconi/go-rampart"&gt;go-rampart&lt;/a&gt; - Determine how intervals relate to each other.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aurelien-rainone/go-rquad"&gt;go-rquad&lt;/a&gt; - Region quadtrees with efficient point location and neighbour finding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/barweiss/go-tuple"&gt;go-tuple&lt;/a&gt; - Generic tuple implementation for Go 1.18+.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daichi-m/go18ds"&gt;go18ds&lt;/a&gt; - Go Data Structures using Go 1.18 generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xxjwxc/gofal"&gt;gofal&lt;/a&gt; - fractional api for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/esimov/gogu"&gt;gogu&lt;/a&gt; - A comprehensive, reusable and efficient concurrent-safe generics utility functions and data structures library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kniren/gota"&gt;gota&lt;/a&gt; - Implementation of dataframes, series, and data wrangling methods for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emvi/hide"&gt;hide&lt;/a&gt; - ID type with marshalling to/from hash to prevent sending IDs to clients.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/axiomhq/hyperloglog"&gt;hyperloglog&lt;/a&gt; - HyperLogLog implementation with Sparse, LogLog-Beta bias correction and TailCut space reduction.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s0rg/quadtree"&gt;quadtree&lt;/a&gt; - Generic, zero-alloc, 100%-test covered quadtree.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twharmon/slices"&gt;slices&lt;/a&gt; - Pure, generic functions for slices.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Nullable Types&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kak-tus/nan"&gt;nan&lt;/a&gt; - Zero allocation Nullable structures in one library with handy conversion functions, marshallers and unmarshallers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emvi/null"&gt;null&lt;/a&gt; - Nullable Go types that can be marshalled/unmarshalled to/from JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gurukami/typ"&gt;typ&lt;/a&gt; - Null Types, Safe primitive type conversion and fetching value from complex structures.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Queues&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/edwingeng/deque"&gt;deque&lt;/a&gt; - A highly optimized double-ended queue.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gammazero/deque"&gt;deque&lt;/a&gt; - Fast ring-buffer deque (double-ended queue).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vodolaz095/dqueue"&gt;dqueue&lt;/a&gt; - Simple, in memory, zero dependency and battle tested, thread-safe deferred queue.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/enriquebris/goconcurrentqueue"&gt;goconcurrentqueue&lt;/a&gt; - Concurrent FIFO queue.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hatchet-dev/hatchet"&gt;hatchet&lt;/a&gt; - Distributed, Fault-tolerant task queue.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/koss-null/list"&gt;list&lt;/a&gt; - A generic, thread-safe doubly linked list with full iterator support and an intrusive singly linked list for embedded use; a feature-rich replacement for container/list.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/embano1/memlog"&gt;memlog&lt;/a&gt; - An easy to use, lightweight, thread-safe and append-only in-memory data structure inspired by Apache Kafka.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adrianbrad/queue"&gt;queue&lt;/a&gt; - Multiple thread-safe, generic queue implementations for Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Sets&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ihebu/dsu"&gt;dsu&lt;/a&gt; - Disjoint Set data structure implementation in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deckarep/golang-set"&gt;golang-set&lt;/a&gt; - Thread-Safe and Non-Thread-Safe high-performance sets for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zoumo/goset"&gt;goset&lt;/a&gt; - A useful Set collection implementation for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/StudioSol/set"&gt;set&lt;/a&gt; - Simple set data structure implementation in Go using LinkedHashMap.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Text Analysis&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blevesearch/bleve"&gt;bleve&lt;/a&gt; - Modern text indexing library for go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/plar/go-adaptive-radix-tree"&gt;go-adaptive-radix-tree&lt;/a&gt; - Go implementation of Adaptive Radix Tree.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hbollon/go-edlib"&gt;go-edlib&lt;/a&gt; - Go string comparison and edit distance algorithms library (Levenshtein, LCS, Hamming, Damerau levenshtein, Jaro-Winkler, etc.) compatible with Unicode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agext/levenshtein"&gt;levenshtein&lt;/a&gt; - Levenshtein distance and similarity metrics with customizable edit costs and Winkler-like bonus for common prefix.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agnivade/levenshtein"&gt;levenshtein&lt;/a&gt; - Implementation to calculate levenshtein distance in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BlackRabbitt/mspm"&gt;mspm&lt;/a&gt; - Multi-String Pattern Matching Algorithm for information retrieval.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MonaxGT/parsefields"&gt;parsefields&lt;/a&gt; - Tools for parse JSON-like logs for collecting unique fields and events.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viant/ptrie"&gt;ptrie&lt;/a&gt; - An implementation of prefix tree.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/derekparker/trie"&gt;trie&lt;/a&gt; - Trie implementation in Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Trees&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aio-arch/graphlib"&gt;graphlib&lt;/a&gt; - Topological sort lib,Sorting and pruning of DAG graphs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://github.com/bobg/hashsplit"&gt;hashsplit&lt;/a&gt; - Split byte streams into chunks, and arrange chunks into trees, with boundaries determined by content, not position.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/merkle"&gt;merkle&lt;/a&gt; - Space-efficient computation of Merkle root hashes and inclusion proofs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MauriceGit/skiplist"&gt;skiplist&lt;/a&gt; - Very fast Go Skiplist implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gansidui/skiplist"&gt;skiplist&lt;/a&gt; - Skiplist implementation in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/igrmk/treemap"&gt;treemap&lt;/a&gt; - Generic key-sorted map using a red-black tree under the hood.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Pipes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tejzpr/ordered-concurrently"&gt;ordered-concurrently&lt;/a&gt; - Go module that processes work concurrently and returns output in a channel in the order of input.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nazar256/parapipe"&gt;parapipe&lt;/a&gt; - FIFO Pipeline which parallels execution on each stage while maintaining the order of messages and results.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hyfather/pipeline"&gt;pipeline&lt;/a&gt; - An implementation of pipelines with fan-in and fan-out.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nxdir-s/pipelines"&gt;pipelines&lt;/a&gt; - Generic pipeline functions for concurrent processing.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Database&lt;/h2&gt; 
&lt;h3&gt;Caches&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Data stores with expiring records, in-memory distributed data stores, or in-memory subsets of file-based databases.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/floatdrop/2q"&gt;2q&lt;/a&gt; - 2Q in-memory cache implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iwanbk/bcache"&gt;bcache&lt;/a&gt; - Eventually consistent distributed in-memory cache Go library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/allegro/bigcache"&gt;BigCache&lt;/a&gt; - Efficient key/value cache for gigabytes of data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muesli/cache2go"&gt;cache2go&lt;/a&gt; - In-memory key:value cache which supports automatic invalidation based on timeouts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/faabiosr/cachego"&gt;cachego&lt;/a&gt; - Golang Cache component for multiple drivers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oaStuff/clusteredBigCache"&gt;clusteredBigCache&lt;/a&gt; - BigCache with clustering support and individual item expiration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oracle/coherence-go-client"&gt;coherence-go-client&lt;/a&gt; - Full implementation of Oracle Coherence cache API for Go applications using gRPC as network transport.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codingsince1985/couchcache"&gt;couchcache&lt;/a&gt; - RESTful caching micro-service backed by Couchbase server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/EchoVault/EchoVault"&gt;EchoVault&lt;/a&gt; - Embeddable Distributed in-memory data store compatible with Redis clients.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VictoriaMetrics/fastcache"&gt;fastcache&lt;/a&gt; - fast thread-safe inmemory cache for big number of entries. Minimizes GC overhead.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bluele/gcache"&gt;GCache&lt;/a&gt; - Cache library with support for expirable Cache, LFU, LRU and ARC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ulovecode/gdcache"&gt;gdcache&lt;/a&gt; - A pure non-intrusive cache library implemented by golang, you can use it to implement your own distributed cache.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viney-shih/go-cache"&gt;go-cache&lt;/a&gt; - A flexible multi-layer Go caching library to deal with in-memory and shared cache by adopting Cache-Aside pattern.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elastic/go-freelru"&gt;go-freelru&lt;/a&gt; A GC-less, fast and generic LRU hashmap library with optional locking, sharding, eviction and expiration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/szyhf/go-gcache"&gt;go-gcache&lt;/a&gt; - The generic version of &lt;code&gt;GCache&lt;/code&gt;, cache support for expirable Cache, LFU, LRU and ARC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OrlovEvgeny/go-mcache"&gt;go-mcache&lt;/a&gt; - Fast in-memory key:value store/cache library. Pointer caches.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eko/gocache"&gt;gocache&lt;/a&gt; - A complete Go cache library with multiple stores (memory, memcache, redis, ...), chainable, loadable, metrics cache and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuseferi/gocache"&gt;gocache&lt;/a&gt; - A data race free Go ache library with high performance and auto pruge functionality&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang/groupcache"&gt;groupcache&lt;/a&gt; - Groupcache is a caching and cache-filling library, intended as a replacement for memcached in many cases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mdaliyan/icache"&gt;icache&lt;/a&gt; - A High Performance, Generic, thread-safe, zero-dependency cache package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/erni27/imcache"&gt;imcache&lt;/a&gt; - A generic in-memory cache Go library. It supports expiration, sliding expiration, max entries limit, eviction callbacks and sharding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mgtv-tech/jetcache-go"&gt;jetcache-go&lt;/a&gt; - Unified Go cache library supporting multi-level caching.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/no-src/nscache"&gt;nscache&lt;/a&gt; - A Go caching framework that supports multiple data source drivers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maypok86/otter"&gt;otter&lt;/a&gt; - A high performance lockless cache for Go. Many times faster than Ristretto and friends.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/naughtygopher/pocache"&gt;pocache&lt;/a&gt; - Pocache is a minimal cache package which focuses on a preemptive optimistic caching strategy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dgraph-io/ristretto"&gt;ristretto&lt;/a&gt; - A high performance memory-bound Go cache.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viccon/sturdyc"&gt;sturdyc&lt;/a&gt; - A caching library with advanced concurrency features designed to make I/O heavy applications robust and highly performant.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Yiling-J/theine-go"&gt;theine&lt;/a&gt; - High performance, near optimal in-memory cache with proactive TTL expiration and generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zekroTJA/timedmap"&gt;timedmap&lt;/a&gt; - Map with expiring key-value pairs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jellydator/ttlcache"&gt;ttlcache&lt;/a&gt; - An in-memory cache with item expiration and generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cheshir/ttlcache"&gt;ttlcache&lt;/a&gt; - In-memory key value storage with TTL for each record.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Databases Implemented in Go&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dgraph-io/badger"&gt;badger&lt;/a&gt; - Fast key-value store in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/etcd-io/bbolt"&gt;bbolt&lt;/a&gt; - An embedded key/value database for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://git.mills.io/prologic/bitcask"&gt;Bitcask&lt;/a&gt; - Bitcask is an embeddable, persistent and fast key-value (KV) database written in pure Go with predictable read/write performance, low latency and high throughput thanks to the bitcask on-disk layout (LSM+WAL).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tidwall/buntdb"&gt;buntdb&lt;/a&gt; - Fast, embeddable, in-memory key/value database for Go with custom indexing and spatial support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ostafen/clover"&gt;clover&lt;/a&gt; - A lightweight document-oriented NoSQL database written in pure Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cockroachdb/cockroach"&gt;cockroach&lt;/a&gt; - Scalable, Geo-Replicated, Transactional Datastore.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/claygod/coffer"&gt;Coffer&lt;/a&gt; - Simple ACID key-value database that supports transactions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kelindar/column"&gt;column&lt;/a&gt; - High-performance, columnar, embeddable in-memory store with bitmap indexing and transactions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CovenantSQL/CovenantSQL"&gt;CovenantSQL&lt;/a&gt; - CovenantSQL is a SQL database on blockchain.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paranoidguy/databunker"&gt;Databunker&lt;/a&gt; - Personally identifiable information (PII) storage service built to comply with GDPR and CCPA.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dgraph-io/dgraph"&gt;dgraph&lt;/a&gt; - Scalable, Distributed, Low Latency, High Throughput Graph Database.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DiceDB/dice"&gt;DiceDB&lt;/a&gt; - An open-source, fast, reactive, in-memory database optimized for modern hardware. Higher throughput and lower median latencies, making it ideal for modern workloads.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/peterbourgon/diskv"&gt;diskv&lt;/a&gt; - Home-grown disk-backed key-value store.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dolthub/dolt"&gt;dolt&lt;/a&gt; - Dolt ‚Äì It's Git for Data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/krotik/eliasdb"&gt;eliasdb&lt;/a&gt; - Dependency-free, transactional graph database with REST API, phrase search and SQL-like query language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hdt3213/godis"&gt;godis&lt;/a&gt; - A Golang implemented high-performance Redis server and cluster.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/syndtr/goleveldb"&gt;goleveldb&lt;/a&gt; - Implementation of the &lt;a href="https://github.com/google/leveldb"&gt;LevelDB&lt;/a&gt; key/value database in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jameycribbs/hare"&gt;hare&lt;/a&gt; - A simple database management system that stores each table as a text file of line-delimited JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codenotary/immudb"&gt;immudb&lt;/a&gt; - immudb is a lightweight, high-speed immutable database for systems and applications written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/influxdb/influxdb"&gt;influxdb&lt;/a&gt; - Scalable datastore for metrics, events, and real-time analytics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/siddontang/ledisdb"&gt;ledisdb&lt;/a&gt; - Ledisdb is a high performance NoSQL like Redis based on LevelDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmhodges/levigo"&gt;levigo&lt;/a&gt; - Levigo is a Go wrapper for LevelDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amit-davidson/LibraDB"&gt;libradb&lt;/a&gt; - LibraDB is a simple database with less than 1000 lines of code for learning.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lindb/lindb"&gt;LinDB&lt;/a&gt; - LinDB is a scalable, high performance, high availability distributed time series database.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/flower-corp/lotusdb"&gt;lotusdb&lt;/a&gt; - Fast k/v database compatible with lsm and b+tree.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/milvus-io/milvus"&gt;Milvus&lt;/a&gt; - Milvus is a vector database for embedding management, analytics and search.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/couchbase/moss"&gt;moss&lt;/a&gt; - Moss is a simple LSM key-value storage engine written in 100% Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xujiajun/nutsdb"&gt;nutsdb&lt;/a&gt; - Nutsdb is a simple, fast, embeddable, persistent key/value store written in pure Go. It supports fully serializable transactions and many data structures such as list, set, sorted set.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/objectbox/objectbox-go"&gt;objectbox-go&lt;/a&gt; - High-performance embedded Object Database (NoSQL) with Go API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cockroachdb/pebble"&gt;pebble&lt;/a&gt; - RocksDB/LevelDB inspired key-value database in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fern4lvarez/piladb"&gt;piladb&lt;/a&gt; - Lightweight RESTful database engine based on stack data structures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/akrylysov/pogreb"&gt;pogreb&lt;/a&gt; - Embedded key-value store for read-heavy workloads.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prometheus/prometheus"&gt;prometheus&lt;/a&gt; - Monitoring system and time series database.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/recoilme/pudge"&gt;pudge&lt;/a&gt; - Fast and simple key/value store written using Go's standard library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nalgeon/redka"&gt;redka&lt;/a&gt; - Redis re-implemented with SQLite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/roseduan/rosedb"&gt;rosedb&lt;/a&gt; - An embedded k-v database based on LSM+WAL, supports string, list, hash, set, zset.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xgzlucario/rotom"&gt;rotom&lt;/a&gt; - A tiny Redis server built with Golang, compatible with RESP protocols.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rqlite/rqlite"&gt;rqlite&lt;/a&gt; - The lightweight, distributed, relational database built on SQLite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafaeljesus/tempdb"&gt;tempdb&lt;/a&gt; - Key-value store for temporary items.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pingcap/tidb"&gt;tidb&lt;/a&gt; - TiDB is a distributed SQL database. Inspired by the design of Google F1.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HouzuoGuo/tiedot"&gt;tiedot&lt;/a&gt; - Your NoSQL database powered by Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unit-io/unitdb"&gt;unitdb&lt;/a&gt; - Fast timeseries database for IoT, realtime messaging applications. Access unitdb with pubsub over tcp or websocket using github.com/unit-io/unitd application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chrislusf/vasto"&gt;Vasto&lt;/a&gt; - A distributed high-performance key-value store. On Disk. Eventual consistent. HA. Able to grow or shrink without service interruption.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics"&gt;VictoriaMetrics&lt;/a&gt; - fast, resource-effective and scalable open source time series database. May be used as long-term remote storage for Prometheus. Supports PromQL.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Database Schema Migration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ariga/atlas"&gt;atlas&lt;/a&gt; - A Database Toolkit. A CLI designed to help companies better work with their data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/khezen/avro"&gt;avro&lt;/a&gt; - Discover SQL schemas and convert them to AVRO schemas. Query SQL records into AVRO bytes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bytebase/bytebase"&gt;bytebase&lt;/a&gt; - Safe database schema change and version control for DevOps teams.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GuiaBolso/darwin"&gt;darwin&lt;/a&gt; - Database schema evolution library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amacneil/dbmate"&gt;dbmate&lt;/a&gt; - A lightweight, framework-agnostic database migration tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RichardKnop/go-fixtures"&gt;go-fixtures&lt;/a&gt; - Django style fixtures for Golang's excellent built-in database/sql library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lawzava/go-pg-migrate"&gt;go-pg-migrate&lt;/a&gt; - CLI-friendly package for go-pg migrations management.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/robinjoseph08/go-pg-migrations"&gt;go-pg-migrations&lt;/a&gt; - A Go package to help write migrations with go-pg/pg.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linkedin/goavro"&gt;goavro&lt;/a&gt; - A Go package that encodes and decodes Avro data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafaelespinoza/godfish"&gt;godfish&lt;/a&gt; - Database migration manager, works with native query language. Support for cassandra, mysql, postgres, sqlite3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pressly/goose"&gt;goose&lt;/a&gt; - Database migration tool. You can manage your database's evolution by creating incremental SQL or Go scripts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Kachit/gorm-seeder"&gt;gorm-seeder&lt;/a&gt; - Simple database seeder for Gorm ORM.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-gormigrate/gormigrate"&gt;gormigrate&lt;/a&gt; - Database schema migration helper for Gorm ORM.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muir/libschema"&gt;libschema&lt;/a&gt; - Define your migrations separately in each library. Migrations for open source libraries. MySQL &amp;amp; PostgreSQL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang-migrate/migrate"&gt;migrate&lt;/a&gt; - Database migrations. CLI and Golang library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lopezator/migrator"&gt;migrator&lt;/a&gt; - Dead simple Go database migration library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/larapulse/migrator"&gt;migrator&lt;/a&gt; - MySQL database migrator designed to run migrations to your features and manage database schema update with intuitive go code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adlio/schema"&gt;schema&lt;/a&gt; - Library to embed schema migrations for database/sql-compatible databases inside your Go binaries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skeema/skeema"&gt;skeema&lt;/a&gt; - Pure-SQL schema management system for MySQL, with support for sharding and external online schema change tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gobuffalo/pop/tree/master/soda"&gt;soda&lt;/a&gt; - Database migration, creation, ORM, etc... for MySQL, PostgreSQL, and SQLite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rubenv/sql-migrate"&gt;sql-migrate&lt;/a&gt; - Database migration tool. Allows embedding migrations into the application using go-bindata.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sunary/sqlize"&gt;sqlize&lt;/a&gt; - Database migration generator. Allows generate sql migration from model and existing sql by differ them.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Database Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Vertamedia/chproxy"&gt;chproxy&lt;/a&gt; - HTTP proxy for ClickHouse database.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikepan/clickhouse-bulk"&gt;clickhouse-bulk&lt;/a&gt; - Collects small inserts and sends big requests to ClickHouse servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kazhuravlev/database-gateway"&gt;database-gateway&lt;/a&gt; - Running SQL in production with ACLs, logs, and shared links.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sj14/dbbench"&gt;dbbench&lt;/a&gt; - Database benchmarking tool with support for several databases and scripts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codingconcepts/dg"&gt;dg&lt;/a&gt; - A fast data generator that produces CSV files from generated relational data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gatewayd-io/gatewayd"&gt;gatewayd&lt;/a&gt; - Cloud-native database gateway and framework for building data-driven applications. Like API gateways, for databases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/siddontang/go-mysql"&gt;go-mysql&lt;/a&gt; - Go toolset to handle MySQL protocol and replication.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bartventer/gorm-multitenancy"&gt;gorm-multitenancy&lt;/a&gt; - Multi-tenancy support for GORM managed databases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://golang.yandex/hasql"&gt;hasql&lt;/a&gt; - Library for accessing multi-host SQL database installations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/knocknote/octillery"&gt;octillery&lt;/a&gt; - Go package for sharding databases ( Supports every ORM or raw SQL ).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/liweiyi88/onedump"&gt;onedump&lt;/a&gt; - Database backup from different drivers to different destinations with one command and configuration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cybertec-postgresql/pg_timetable"&gt;pg_timetable&lt;/a&gt; - Advanced scheduling for PostgreSQL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sosedoff/pgweb"&gt;pgweb&lt;/a&gt; - Web-based PostgreSQL database browser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hexdigest/prep"&gt;prep&lt;/a&gt; - Use prepared SQL statements without changing your code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prest/prest"&gt;pREST&lt;/a&gt; - Simplify and accelerate development, ‚ö° instant, realtime, high-performance on any Postgres application, existing or new.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HDT3213/rdb"&gt;rdb&lt;/a&gt; - Redis RDB file parser for secondary development and memory analysis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andizzle/rwdb"&gt;rwdb&lt;/a&gt; - rwdb provides read replica capability for multiple database servers setup.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/youtube/vitess"&gt;vitess&lt;/a&gt; - vitess provides servers and tools which facilitate scaling of MySQL databases for large scale web services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wesql/wescale"&gt;wescale&lt;/a&gt; - WeScale is a database proxy designed to enhance the scalability, performance, security, and resilience of your applications.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;SQL Query Builders&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Libraries for building and using SQL.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nullism/bqb"&gt;bqb&lt;/a&gt; - Lightweight and easy to learn query builder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arthurkushman/buildsqlx"&gt;buildsqlx&lt;/a&gt; - Go database query builder library for PostgreSQL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cristalhq/builq"&gt;builq&lt;/a&gt; - Easily build SQL queries in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rocketlaunchr/dbq"&gt;dbq&lt;/a&gt; - Zero boilerplate database operations for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gchaincl/dotsql"&gt;Dotsql&lt;/a&gt; - Go library that helps you keep sql files in one place and use them with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/didi/gendry"&gt;gendry&lt;/a&gt; - Non-invasive SQL builder and powerful data binder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xujiajun/godbal"&gt;godbal&lt;/a&gt; - Database Abstraction Layer (dbal) for go. Support SQL builder and get result easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/doug-martin/goqu"&gt;goqu&lt;/a&gt; - Idiomatic SQL builder and query library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twharmon/gosql"&gt;gosql&lt;/a&gt; - SQL Query builder with better null values support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/motrboat/hotcoal"&gt;Hotcoal&lt;/a&gt; - Secure your handcrafted SQL against injection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/galeone/igor"&gt;igor&lt;/a&gt; - Abstraction layer for PostgreSQL that supports advanced functionality and uses gorm-like syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-jet/jet"&gt;jet&lt;/a&gt; - Framework for writing type-safe SQL queries in Go, with ability to easily convert database query result into desired arbitrary object structure.&lt;/li&gt; 
 &lt;li&gt;[obreron] - Fast and cheap SQL builder which does only one thing, SQL building.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pupizoid/ormlite"&gt;ormlite&lt;/a&gt; - Lightweight package containing some ORM-like features and helpers for sqlite databases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-ozzo/ozzo-dbx"&gt;ozzo-dbx&lt;/a&gt; - Powerful data retrieval methods as well as DB-agnostic query building capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jacobbrewer1/patcher"&gt;patcher&lt;/a&gt; - Powerful SQL Query builder that automatically generates SQL queries from structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HnH/qry"&gt;qry&lt;/a&gt; - Tool that generates constants from files with raw SQL queries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-the-way/sg"&gt;sg&lt;/a&gt; - A SQL Gen for generating standard SQLs(supports: CRUD) written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bokwoon95/go-structured-query"&gt;sq&lt;/a&gt; - Type-safe SQL builder and struct mapper for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kyleconroy/sqlc"&gt;sqlc&lt;/a&gt; - Generate type-safe code from SQL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leporo/sqlf"&gt;sqlf&lt;/a&gt; - Fast SQL query builder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lqs/sqlingo"&gt;sqlingo&lt;/a&gt; - A lightweight DSL to build SQL in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elgris/sqrl"&gt;sqrl&lt;/a&gt; - SQL query builder, fork of Squirrel with improved performance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/qosenergy/squalus"&gt;Squalus&lt;/a&gt; - Thin layer over the Go SQL package that makes it easier to perform queries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Masterminds/squirrel"&gt;Squirrel&lt;/a&gt; - Go library that helps you build SQL queries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/knq/xo"&gt;xo&lt;/a&gt; - Generate idiomatic Go code for databases based on existing schema definitions or custom queries supporting PostgreSQL, MySQL, SQLite, Oracle, and Microsoft SQL Server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Database Drivers&lt;/h2&gt; 
&lt;h3&gt;Interfaces to Multiple Backends&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/cayley"&gt;cayley&lt;/a&gt; - Graph database with support for multiple backends.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viant/dsc"&gt;dsc&lt;/a&gt; - Datastore connectivity for SQL, NoSQL, structured files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fogfish/dynamo"&gt;dynamo&lt;/a&gt; - A simple key-value abstraction to store algebraic and linked-data data types at AWS storage services: AWS DynamoDB and AWS S3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/avito-tech/go-transaction-manager"&gt;go-transaction-manager&lt;/a&gt; - Transaction manager with multiple adapters (sql, sqlx, gorm, mongo, ...) controls transaction boundaries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philippgille/gokv"&gt;gokv&lt;/a&gt; - Simple key-value store abstraction and implementations for Go (Redis, Consul, etcd, bbolt, BadgerDB, LevelDB, Memcached, DynamoDB, S3, PostgreSQL, MongoDB, CockroachDB and many more).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Relational Database Drivers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apache/calcite-avatica-go"&gt;avatica&lt;/a&gt; - Apache Avatica/Phoenix SQL driver for database/sql.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viant/bgc"&gt;bgc&lt;/a&gt; - Datastore Connectivity for BigQuery for go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nakagami/firebirdsql"&gt;firebirdsql&lt;/a&gt; - Firebird RDBMS SQL driver for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/go-adodb"&gt;go-adodb&lt;/a&gt; - Microsoft ActiveX Object DataBase driver for go that uses database/sql.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/denisenkom/go-mssqldb"&gt;go-mssqldb&lt;/a&gt; - Microsoft MSSQL driver for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/go-oci8"&gt;go-oci8&lt;/a&gt; - Oracle driver for go that uses database/sql.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rqlite/gorqlite"&gt;go-rqlite&lt;/a&gt; - A Go client for rqlite, providing easy-to-use abstractions for working with the rqlite API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-sql-driver/mysql"&gt;go-sql-driver/mysql&lt;/a&gt; - MySQL driver for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/go-sqlite3"&gt;go-sqlite3&lt;/a&gt; - SQLite3 driver for go that uses database/sql.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ncruces/go-sqlite3"&gt;go-sqlite3&lt;/a&gt; - This Go module is compatible with the database/sql driver. It allows embedding SQLite into your application, provides direct access to its C API, supports SQLite VFS, and also includes a GORM driver.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/godror/godror"&gt;godror&lt;/a&gt; - Oracle driver for Go, using the ODPI-C driver.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/minus5/gofreetds"&gt;gofreetds&lt;/a&gt; - Microsoft MSSQL driver. Go wrapper over &lt;a href="https://www.freetds.org"&gt;FreeTDS&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VinGarcia/ksql"&gt;KSQL&lt;/a&gt; - A Simple and Powerful Golang SQL Library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx"&gt;pgx&lt;/a&gt; - PostgreSQL driver supporting features beyond those exposed by database/sql.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexeyco/pig"&gt;pig&lt;/a&gt; - Simple &lt;a href="https://github.com/jackc/pgx"&gt;pgx&lt;/a&gt; wrapper to execute and &lt;a href="https://github.com/georgysavva/scany"&gt;scan&lt;/a&gt; query results easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lib/pq"&gt;pq&lt;/a&gt; - Pure Go Postgres driver for database/sql.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cvilsmeier/sqinn-go"&gt;Sqinn-Go&lt;/a&gt; - SQLite with pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qustavo/sqlhooks"&gt;sqlhooks&lt;/a&gt; - Attach hooks to any database/sql driver.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/modernc.org/sqlite"&gt;sqlite&lt;/a&gt; - Package sqlite is a sql/database driver using a CGo-free port of the C SQLite3 library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/surrealdb/surrealdb.go"&gt;surrealdb.go&lt;/a&gt; - SurrealDB Driver for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ydb-platform/ydb-go-sdk"&gt;ydb-go-sdk&lt;/a&gt; - native and database/sql driver YDB (Yandex Database).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;NoSQL Database Drivers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aerospike/aerospike-client-go"&gt;aerospike-client-go&lt;/a&gt; - Aerospike client in Go language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/solher/arangolite"&gt;arangolite&lt;/a&gt; - Lightweight golang driver for ArangoDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viant/asc"&gt;asc&lt;/a&gt; - Datastore Connectivity for Aerospike for go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/couchbase/goforestdb"&gt;forestdb&lt;/a&gt; - Go bindings for ForestDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/couchbase/go-couchbase"&gt;go-couchbase&lt;/a&gt; - Couchbase client in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chenmingyong0423/go-mongox"&gt;go-mongox&lt;/a&gt; - A Go Mongo library based on the official driver, featuring streamlined document operations, generic binding of structs to collections, built-in CRUD, aggregation, automated field updates, struct validation, hooks, and plugin-based programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pilosa/go-pilosa"&gt;go-pilosa&lt;/a&gt; - Go client library for Pilosa.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nitishm/go-rejson"&gt;go-rejson&lt;/a&gt; - Golang client for redislabs' ReJSON module using Redigo golang client. Store and manipulate structs as JSON objects in redis with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/couchbase/gocb"&gt;gocb&lt;/a&gt; - Official Couchbase Go SDK.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/btnguyen2k/gocosmos"&gt;gocosmos&lt;/a&gt; - REST client and standard &lt;code&gt;database/sql&lt;/code&gt; driver for Azure Cosmos DB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gocql.github.io"&gt;gocql&lt;/a&gt; - Go language driver for Apache Cassandra.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/piaohao/godis"&gt;godis&lt;/a&gt; - redis client implement by golang, inspired by jedis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/defcronyke/godscache"&gt;godscache&lt;/a&gt; - A wrapper for the Google Cloud Platform Go Datastore package that adds caching using memcached.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bradfitz/gomemcache/"&gt;gomemcache&lt;/a&gt; - memcache client library for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aliexpressru/gomemcached"&gt;gomemcached&lt;/a&gt; - A binary Memcached client for Go with support for sharding using consistent hashing, along with SASL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dancannon/gorethink"&gt;gorethink&lt;/a&gt; - Go language driver for RethinkDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zegl/goriak"&gt;goriak&lt;/a&gt; - Go language driver for Riak KV.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-kivik/kivik"&gt;Kivik&lt;/a&gt; - Kivik provides a common Go and GopherJS client library for CouchDB, PouchDB, and similar databases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kamva/mgm"&gt;mgm&lt;/a&gt; - MongoDB model-based ODM for Go (based on official MongoDB driver).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/globalsign/mgo"&gt;mgo&lt;/a&gt; - (unmaintained) MongoDB driver for the Go language that implements a rich and well tested selection of features under a very simple API following standard Go idioms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mongodb/mongo-go-driver"&gt;mongo-go-driver&lt;/a&gt; - Official MongoDB driver for the Go language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cihangir/neo4j"&gt;neo4j&lt;/a&gt; - Neo4j Rest API Bindings for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmcvetta/neoism"&gt;neoism&lt;/a&gt; - Neo4j client for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qiniu/qmgo"&gt;qmgo&lt;/a&gt; - The MongoDB driver for Go. It‚Äòs based on official MongoDB driver but easier to use like Mgo.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bsm/redeo"&gt;redeo&lt;/a&gt; - Redis-protocol compatible TCP servers/services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gomodule/redigo"&gt;redigo&lt;/a&gt; - Redigo is a Go client for the Redis database.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/redis/go-redis"&gt;redis&lt;/a&gt; - Redis client for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://github.com/rueian/rueidis"&gt;rueidis&lt;/a&gt; - Fast Redis RESP3 client with auto pipelining and server-assisted client side caching.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shomali11/xredis"&gt;xredis&lt;/a&gt; - Typesafe, customizable, clean &amp;amp; easy to use Redis client.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Search and Analytic Databases&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ClickHouse/clickhouse-go/"&gt;clickhouse-go&lt;/a&gt; - ClickHouse SQL client for Go with a &lt;code&gt;database/sql&lt;/code&gt; compatibility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sdqri/effdsl"&gt;effdsl&lt;/a&gt; - Elasticsearch query builder for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/olivere/elastic"&gt;elastic&lt;/a&gt; - Elasticsearch client for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cch123/elasticsql"&gt;elasticsql&lt;/a&gt; - Convert sql to elasticsearch dsl in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattbaird/elastigo"&gt;elastigo&lt;/a&gt; - Elasticsearch client library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elastic/go-elasticsearch"&gt;go-elasticsearch&lt;/a&gt; - Official Elasticsearch client for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OwnLocal/goes"&gt;goes&lt;/a&gt; - Library to interact with Elasticsearch.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seiflotfy/skizze"&gt;skizze&lt;/a&gt; - probabilistic data-structures service and storage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sourcegraph/zoekt"&gt;zoekt&lt;/a&gt; - Fast trigram based code search.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Date and Time&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with dates and times.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goschtalt/approx"&gt;approx&lt;/a&gt; - A Duration extension supporting parsing/printing durations in days, weeks and years.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dromara/carbon"&gt;carbon&lt;/a&gt; - A simple, semantic and developer-friendly time package for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uniplaces/carbon"&gt;carbon&lt;/a&gt; - Simple Time extension with a lot of util methods, ported from PHP Carbon library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1set/cronrange"&gt;cronrange&lt;/a&gt; - Parses Cron-style time range expressions, checks if the given time is within any ranges.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rickb777/date"&gt;date&lt;/a&gt; - Augments Time for working with dates, date ranges, time spans, periods, and time-of-day.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/araddon/dateparse"&gt;dateparse&lt;/a&gt; - Parse date's without knowing format in advance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hako/durafmt"&gt;durafmt&lt;/a&gt; - Time duration formatting library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wlbr/feiertage"&gt;feiertage&lt;/a&gt; - Set of functions to calculate public holidays in Germany, incl. specialization on the states of Germany (Bundesl√§nder). Things like Easter, Pentecost, Thanksgiving...&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ijt/go-anytime"&gt;go-anytime&lt;/a&gt; - Parse dates/times like "next dec 22nd at 3pm" and ranges like "from today until next thursday" without knowing the format in advance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deatil/go-datebin"&gt;go-datebin&lt;/a&gt; - A simple datetime parse pkg.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/harkaitz/go-faketime"&gt;go-faketime&lt;/a&gt; - A simple &lt;code&gt;time.Now()&lt;/code&gt; that honors the faketime(1) utility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yaa110/go-persian-calendar"&gt;go-persian-calendar&lt;/a&gt; - The implementation of the Persian (Solar Hijri) Calendar in Go (golang).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xhit/go-str2duration"&gt;go-str2duration&lt;/a&gt; - Convert string to duration. Support time.Duration returned string and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nathan-osman/go-sunrise"&gt;go-sunrise&lt;/a&gt; - Calculate the sunrise and sunset times for a given location.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stoewer/go-week"&gt;go-week&lt;/a&gt; - An efficient package to work with ISO8601 week dates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bykof/gostradamus"&gt;gostradamus&lt;/a&gt; - A Go package for working with dates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/relvacode/iso8601"&gt;iso8601&lt;/a&gt; - Efficiently parse ISO8601 date-times without regex.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GuilhermeCaruso/kair"&gt;kair&lt;/a&gt; - Date and Time - Golang Formatting Library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jinzhu/now"&gt;now&lt;/a&gt; - Now is a time toolkit for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/awoodbeck/strftime"&gt;strftime&lt;/a&gt; - C99-compatible strftime formatter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SaidinWoT/timespan"&gt;timespan&lt;/a&gt; - For interacting with intervals of time, defined as a start time and a duration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leekchan/timeutil"&gt;timeutil&lt;/a&gt; - Useful extensions (Timedelta, Strftime, ...) to the golang's time package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osteele/tuesday"&gt;tuesday&lt;/a&gt; - Ruby-compatible Strftime function.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Distributed Systems&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Packages that help with building Distributed Systems.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lesismal/arpc"&gt;arpc&lt;/a&gt; - More effective network communication, support two-way-calling, notify, broadcast.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/z5labs/bedrock"&gt;bedrock&lt;/a&gt; - Provides a minimal, modular and composable foundation for quickly developing services and more use case specific frameworks in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/capillariesio/capillaries"&gt;capillaries&lt;/a&gt; - distributed batch data processing framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/svcavallar/celeriac.v1"&gt;celeriac&lt;/a&gt; - Library for adding support for interacting and monitoring Celery workers, tasks and events in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vadiminshakov/committer"&gt;committer&lt;/a&gt; - A distributed transactions management system (2PC/3PC implementation).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/buraksezer/consistent"&gt;consistent&lt;/a&gt; - Consistent hashing with bounded loads.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mbrostami/consistenthash"&gt;consistenthash&lt;/a&gt; - Consistent hashing with configurable replicas.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anacrolix/dht"&gt;dht&lt;/a&gt; - BitTorrent Kademlia DHT implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/digota/digota"&gt;digota&lt;/a&gt; - grpc ecommerce microservice.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dotchain/dot/"&gt;dot&lt;/a&gt; - distributed sync using operational transformation/OT.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/edwingeng/doublejump"&gt;doublejump&lt;/a&gt; - A revamped Google's jump consistent hash.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lni/dragonboat"&gt;dragonboat&lt;/a&gt; - A feature complete and high performance multi-group Raft library in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dragonflyoss/Dragonfly2"&gt;Dragonfly&lt;/a&gt; - Provide efficient, stable and secure file distribution and image acceleration based on p2p technology to be the best practice and standard solution in cloud native architectures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dgruber/drmaa"&gt;drmaa&lt;/a&gt; - Job submission library for cluster schedulers based on the DRMAA standard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cirello.io/dynamolock"&gt;dynamolock&lt;/a&gt; - DynamoDB-backed distributed locking implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tylfin/dynatomic"&gt;dynatomic&lt;/a&gt; - A library for using DynamoDB as an atomic counter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emitter-io/emitter"&gt;emitter-io&lt;/a&gt; - High performance, distributed, secure and low latency publish-subscribe platform built with MQTT, Websockets and love.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ktr0731/evans"&gt;evans&lt;/a&gt; - Evans: more expressive universal gRPC client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andy2046/failured"&gt;failured&lt;/a&gt; - adaptive accrual failure detector for distributed systems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vectaport/flowgraph"&gt;flowgraph&lt;/a&gt; - flow-based programming package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chrislusf/gleam"&gt;gleam&lt;/a&gt; - Fast and scalable distributed map/reduce system written in pure Go and Luajit, combining Go's high concurrency with Luajit's high performance, runs standalone or distributed.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chrislusf/glow"&gt;glow&lt;/a&gt; - Easy-to-Use scalable distributed big data processing, Map-Reduce, DAG execution, all in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gmsec/micro"&gt;gmsec&lt;/a&gt; - A Go distributed systems development framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unionj-cloud/go-doudou"&gt;go-doudou&lt;/a&gt; - A gossip protocol and OpenAPI 3.0 spec based decentralized microservice framework. Built-in go-doudou cli focusing on low-code and rapid dev can power up your productivity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-eagle/eagle"&gt;go-eagle&lt;/a&gt; - A Go framework for the API or Microservice with handy scaffolding tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dgryski/go-jump"&gt;go-jump&lt;/a&gt; - Port of Google's "Jump" Consistent Hash function.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-kit/kit"&gt;go-kit&lt;/a&gt; - Microservice toolkit with support for service discovery, load balancing, pluggable transports, request tracking, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/micro/go-micro"&gt;go-micro&lt;/a&gt; - A distributed systems development framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sanketplus/go-mysql-lock"&gt;go-mysql-lock&lt;/a&gt; - MySQL based distributed lock.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pdupub/go-pdu"&gt;go-pdu&lt;/a&gt; - A decentralized identity-based social network.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AppsFlyer/go-sundheit"&gt;go-sundheit&lt;/a&gt; - A library built to provide support for defining async service health checks for golang services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tal-tech/go-zero"&gt;go-zero&lt;/a&gt; - A web and rpc framework. It's born to ensure the stability of the busy sites with resilient design. Builtin goctl greatly improves the development productivity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/valyala/gorpc"&gt;gorpc&lt;/a&gt; - Simple, fast and scalable RPC library for high load.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/grpc/grpc-go"&gt;grpc-go&lt;/a&gt; - The Go language implementation of gRPC. HTTP/2 based RPC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hprose/hprose-golang"&gt;hprose&lt;/a&gt; - Very newbility RPC Library, support 25+ languages now.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osamingo/jsonrpc"&gt;jsonrpc&lt;/a&gt; - The jsonrpc package helps implement of JSON-RPC 2.0.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ybbus/jsonrpc"&gt;jsonrpc&lt;/a&gt; - JSON-RPC 2.0 HTTP client implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/k8gb-io/k8gb"&gt;K8gb&lt;/a&gt; - A cloud native Kubernetes Global Balancer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudwego/kitex"&gt;Kitex&lt;/a&gt; - A high-performance and strong-extensibility Golang RPC framework that helps developers build microservices. If the performance and extensibility are the main concerns when you develop microservices, Kitex can be a good choice.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-kratos/kratos"&gt;Kratos&lt;/a&gt; - A modular-designed and easy-to-use microservices framework in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/liftbridge-io/liftbridge"&gt;liftbridge&lt;/a&gt; - Lightweight, fault-tolerant message streams for NATS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/luraproject/lura"&gt;lura&lt;/a&gt; - Ultra performant API Gateway framework with middlewares.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/micro/micro"&gt;micro&lt;/a&gt; - A distributed systems runtime for the cloud and beyond.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mochi-co/mqtt"&gt;mochi mqtt&lt;/a&gt; - Fully spec compliant, embeddable high-performance MQTT v5/v3 broker for IoT, smarthome, and pubsub.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nats-io/nats-server"&gt;NATS&lt;/a&gt; - NATS is a simple, secure, and performant communications system for digital systems, services, and devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alibaba/opentelemetry-go-auto-instrumentation"&gt;opentelemetry-go-auto-instrumentation&lt;/a&gt; - OpenTelemetry Compile-Time Instrumentation for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oagudo/outbox"&gt;outbox&lt;/a&gt; - Lightweight library for the transactional outbox pattern in Go, not tied to any specific relational database or broker.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/italolelis/outboxer"&gt;outboxer&lt;/a&gt; - Outboxer is a go library that implements the outbox pattern.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cirello.io/pglock"&gt;pglock&lt;/a&gt; - PostgreSQL-backed distributed locking implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/pjrpc/pjrpc"&gt;pjrpc&lt;/a&gt; - Golang JSON-RPC Server-Client with Protobuf spec.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/raft"&gt;raft&lt;/a&gt; - Golang implementation of the Raft consensus protocol, by HashiCorp.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/etcd-io/raft"&gt;raft&lt;/a&gt; - Go implementation of the Raft consensus protocol, by CoreOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cenkalti/rain"&gt;rain&lt;/a&gt; - BitTorrent client and library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bsm/redislock"&gt;redis-lock&lt;/a&gt; - Simplified distributed locking implementation using Redis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://resgate.io/"&gt;resgate&lt;/a&gt; - Realtime API Gateway for building REST, real time, and RPC APIs, where all clients are synchronized seamlessly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber/ringpop-go"&gt;ringpop-go&lt;/a&gt; - Scalable, fault-tolerant application-layer sharding for Go applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/smallnest/rpcx"&gt;rpcx&lt;/a&gt; - Distributed pluggable RPC service framework like alibaba Dubbo.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jexia/semaphore"&gt;Semaphore&lt;/a&gt; - A straightforward (micro) service orchestrator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ursiform/sleuth"&gt;sleuth&lt;/a&gt; - Library for master-less p2p auto-discovery and RPC between HTTP services (using &lt;a href="https://github.com/zeromq/libzmq"&gt;ZeroMQ&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zhufuyi/sponge"&gt;sponge&lt;/a&gt; - A distributed development framework that integrates automatic code generation, gin and grpc frameworks, base development frameworks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tarmac-project/tarmac"&gt;Tarmac&lt;/a&gt; - Framework for writing functions, microservices, or monoliths with WebAssembly&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/temporalio/sdk-go"&gt;Temporal&lt;/a&gt; - Durable execution system for making code fault-tolerant and simple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anacrolix/torrent"&gt;torrent&lt;/a&gt; - BitTorrent client package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trpc-group/trpc-go"&gt;trpc-go&lt;/a&gt; - The Go language implementation of tRPC, which is a pluggable, high-performance RPC framework.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Dynamic DNS&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools for updating dynamic DNS records.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skibish/ddns"&gt;DDNS&lt;/a&gt; - Personal DDNS client with Digital Ocean Networking DNS as backend.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/alcastle/dyndns"&gt;dyndns&lt;/a&gt; - Background Go process to regularly and automatically check your IP Address and make updates to (one or many) Dynamic DNS records for Google domains whenever your address changes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/timothyye/godns"&gt;GoDNS&lt;/a&gt; - A dynamic DNS client tool, supports DNSPod &amp;amp; HE.net, written in Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Email&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries and tools that implement email creation and sending.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blitiri.com.ar/p/chasquid"&gt;chasquid&lt;/a&gt; - SMTP server written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aymerick/douceur"&gt;douceur&lt;/a&gt; - CSS inliner for your HTML emails.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jordan-wright/email"&gt;email&lt;/a&gt; - A robust and flexible email library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AfterShip/email-verifier"&gt;email-verifier&lt;/a&gt; - A Go library for email verification without sending any emails.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/toorop/go-dkim"&gt;go-dkim&lt;/a&gt; - DKIM library, to sign &amp;amp; verify email.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dimuska139/go-email-normalizer"&gt;go-email-normalizer&lt;/a&gt; - Golang library for providing a canonical representation of email address.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emersion/go-imap"&gt;go-imap&lt;/a&gt; - IMAP library for clients and servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wneessen/go-mail"&gt;go-mail&lt;/a&gt; - A simple Go library for sending mails in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emersion/go-message"&gt;go-message&lt;/a&gt; - Streaming library for the Internet Message Format and mail messages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vanng822/go-premailer"&gt;go-premailer&lt;/a&gt; - Inline styling for HTML mail in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xhit/go-simple-mail"&gt;go-simple-mail&lt;/a&gt; - Very simple package to send emails with SMTP Keep Alive and two timeouts: Connect and Send.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hectane/hectane"&gt;Hectane&lt;/a&gt; - Lightweight SMTP client providing an HTTP API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/matcornic/hermes"&gt;hermes&lt;/a&gt; - Golang package that generates clean, responsive HTML e-mails.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/foxcpp/maddy"&gt;Maddy&lt;/a&gt; - All-in-one (SMTP, IMAP, DKIM, DMARC, MTA-STS, DANE) email server&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mailchain/mailchain"&gt;mailchain&lt;/a&gt; - Send encrypted emails to blockchain addresses written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mailgun/mailgun-go"&gt;mailgun-go&lt;/a&gt; - Go library for sending mail with the Mailgun API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mailhog/MailHog"&gt;MailHog&lt;/a&gt; - Email and SMTP testing with web and API interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/axllent/mailpit"&gt;Mailpit&lt;/a&gt; - Email and SMTP testing tool for developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/valord577/mailx"&gt;mailx&lt;/a&gt; - Mailx is a library that makes it easier to send email via SMTP. It is an enhancement of the golang standard library &lt;code&gt;net/smtp&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mjl-/mox"&gt;mox&lt;/a&gt; - Modern full-featured secure mail server for low-maintenance, self-hosted email.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sendgrid/sendgrid-go"&gt;SendGrid&lt;/a&gt; - SendGrid's Go library for sending email.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mailhog/smtp"&gt;smtp&lt;/a&gt; - SMTP server protocol state machine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mocktools/go-smtp-mock"&gt;smtpmock&lt;/a&gt; - Lightweight configurable multithreaded fake SMTP server. Mimic any SMTP behaviour for your test environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/truemail-rb/truemail-go"&gt;truemail-go&lt;/a&gt; - Configurable Golang email validator/verifier. Verify email via Regex, DNS, SMTP and even more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Embeddable Scripting Languages&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Embedding other languages inside your go code.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/anko"&gt;anko&lt;/a&gt; - Scriptable interpreter written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexeyco/binder"&gt;binder&lt;/a&gt; - Go to Lua binding library, based on &lt;a href="https://github.com/yuin/gopher-lua"&gt;gopher-lua&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/cel-go"&gt;cel-go&lt;/a&gt; - Fast, portable, non-Turing complete expression evaluation with gradual typing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/krotik/ecal"&gt;ecal&lt;/a&gt; - A simple embeddable scripting language which supports concurrent event processing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antonmedv/expr"&gt;expr&lt;/a&gt; - Expression evaluation engine for Go: fast, non-Turing complete, dynamic typing, static typing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dunglas/frankenphp"&gt;FrankenPHP&lt;/a&gt; - PHP embedded in Go, with a &lt;code&gt;net/http&lt;/code&gt; handler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gentee/gentee"&gt;gentee&lt;/a&gt; - Embeddable scripting programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jcla1/gisp"&gt;gisp&lt;/a&gt; - Simple LISP in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Shopify/go-lua"&gt;go-lua&lt;/a&gt; - Port of the Lua 5.2 VM to pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deuill/go-php"&gt;go-php&lt;/a&gt; - PHP bindings for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeberg.org/anaseto/goal"&gt;goal&lt;/a&gt; - An embeddable scripting array language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dop251/goja"&gt;goja&lt;/a&gt; - ECMAScript 5.1(+) implementation in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aarzilli/golua"&gt;golua&lt;/a&gt; - Go bindings for Lua C API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuin/gopher-lua"&gt;gopher-lua&lt;/a&gt; - Lua 5.1 VM and compiler written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PaesslerAG/gval"&gt;gval&lt;/a&gt; - A highly customizable expression language written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/metacall/core"&gt;metacall&lt;/a&gt; - Cross-platform Polyglot Runtime which supports NodeJS, JavaScript, TypeScript, Python, Ruby, C#, WebAssembly, Java, Cobol and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/db47h/ngaro"&gt;ngaro&lt;/a&gt; - Embeddable Ngaro VM implementation enabling scripting in Retro.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ichiban/prolog"&gt;prolog&lt;/a&gt; - Embeddable Prolog.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ian-kent/purl"&gt;purl&lt;/a&gt; - Perl 5.18.2 embedded in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/starlark-go"&gt;starlark-go&lt;/a&gt; - Go implementation of Starlark: Python-like language with deterministic evaluation and hermetic execution.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1set/starlet"&gt;starlet&lt;/a&gt; - Go wrapper for &lt;a href="https://github.com/google/starlark-go"&gt;starlark-go&lt;/a&gt; that simplifies script execution, offers data conversion, and useful Starlark libraries and extensions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/d5/tengo"&gt;tengo&lt;/a&gt; - Bytecode compiled script language for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wa-lang/wa"&gt;Wa/ÂáπËØ≠Ë®Ä&lt;/a&gt; - The Wa Programming Language embedded in Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Error Handling&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for handling errors.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emperror/emperror"&gt;emperror&lt;/a&gt; - Error handling tools and best practices for Go libraries and applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rotisserie/eris"&gt;eris&lt;/a&gt; - A better way to handle, trace, and log errors in Go. Compatible with the standard error library and github.com/pkg/errors.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/snwfdhmp/errlog"&gt;errlog&lt;/a&gt; - Hackable package that determines responsible source code for an error (and some other fast-debugging features). Pluggable to any logger in-place.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emperror/errors"&gt;errors&lt;/a&gt; - Drop-in replacement for the standard library errors package and github.com/pkg/errors. Provides various error handling primitives.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neuronlabs/errors"&gt;errors&lt;/a&gt; - Simple golang error handling with classification primitives.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PumpkinSeed/errors"&gt;errors&lt;/a&gt; - The most simple error wrapper with awesome performance and minimal memory overhead.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/tozd/go/errors"&gt;errors&lt;/a&gt; - Providing errors with a stack trace and optional structured details. Compatible with github.com/pkg/errors API but does not use it internally.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/naughtygopher/errors"&gt;errors&lt;/a&gt; - Drop-in replacement for builtin Go errors. This is a minimal error handling package with custom error types, user friendly messages, Unwrap &amp;amp; Is. With very easy to use and straightforward helper functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cockroachdb/errors"&gt;errors&lt;/a&gt; - Go error library with error portability over the network.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joomcode/errorx"&gt;errorx&lt;/a&gt; - A feature rich error package with stack traces, composition of errors and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rbrahul/exception"&gt;exception&lt;/a&gt; - A simple utility package for exception handling with try-catch in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SonicRoshan/falcon"&gt;Falcon&lt;/a&gt; - A Simple Yet Highly Powerful Package For Error Handling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Southclaws/fault"&gt;Fault&lt;/a&gt; - An ergonomic mechanism for wrapping errors in order to facilitate structured metadata and context for error values.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/go-multierror"&gt;go-multierror&lt;/a&gt; - Go (golang) package for representing a list of errors as a single error.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/quantumcycle/metaerr"&gt;metaerr&lt;/a&gt; - A library to create your custom error builders producing structured errors with metadata from different sources and optional stacktraces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber-go/multierr"&gt;multierr&lt;/a&gt; - Package for representing a list of errors as a single error.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/oops"&gt;oops&lt;/a&gt; - Error handling with context, stack trace and source fragments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ztrue/tracerr"&gt;tracerr&lt;/a&gt; - Golang errors with stack trace and source fragments.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;File Handling&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for handling files and file systems.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spf13/afero"&gt;afero&lt;/a&gt; - FileSystem Abstraction System for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viant/afs"&gt;afs&lt;/a&gt; - Abstract File Storage (mem, scp, zip, tar, cloud: s3, gs) for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xis/baraka"&gt;baraka&lt;/a&gt; - A library to process http file uploads easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codingsince1985/checksum"&gt;checksum&lt;/a&gt; - Compute message digest, like MD5, SHA256, SHA1, CRC or BLAKE2s, for large files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/otiai10/copy"&gt;copy&lt;/a&gt; - Copy directory recursively.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charlievieth/fastwalk"&gt;fastwalk&lt;/a&gt; - Fast parallel directory traversal library (used by &lt;a href="https://github.com/junegunn/fzf"&gt;fzf&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/homedepot/flop"&gt;flop&lt;/a&gt; - File operations library which aims to mirror feature parity with &lt;a href="https://www.gnu.org/software/coreutils/manual/html_node/cp-invocation.html"&gt;GNU cp&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dundee/gdu"&gt;gdu&lt;/a&gt; - Disk usage analyzer with console interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/artonge/go-csv-tag"&gt;go-csv-tag&lt;/a&gt; - Load csv file using tag.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hugocarreira/go-decent-copy"&gt;go-decent-copy&lt;/a&gt; - Copy files for humans.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/barasher/go-exiftool"&gt;go-exiftool&lt;/a&gt; - Go bindings for ExifTool, the well-known library used to extract as much metadata as possible (EXIF, IPTC, ...) from files (pictures, PDF, office, ...).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/artonge/go-gtfs"&gt;go-gtfs&lt;/a&gt; - Load gtfs files in go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SebastiaanKlippert/go-wkhtmltopdf"&gt;go-wkhtmltopdf&lt;/a&gt; - A package to convert an HTML template to a PDF file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/no-src/gofs"&gt;gofs&lt;/a&gt; - A cross-platform real-time file synchronization tool out of the box.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adelowo/gulter"&gt;gulter&lt;/a&gt; - A simple HTTP middleware to automatically handle all your file upload needs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1set/gut"&gt;gut/yos&lt;/a&gt; - Simple and reliable package for file operations like copy/move/diff/list on files, directories and symbolic links.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dastoori/higgs"&gt;higgs&lt;/a&gt; - A tiny cross-platform Go library to hide/unhide files and directories.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kdomanski/iso9660"&gt;iso9660&lt;/a&gt; - A package for reading and creating ISO9660 disk images&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rjeczalik/notify"&gt;notify&lt;/a&gt; - File system event notification library with simple API, similar to os/signal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qmuntal/opc"&gt;opc&lt;/a&gt; - Load Open Packaging Conventions (OPC) files for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/parsyl/parquet"&gt;parquet&lt;/a&gt; - Read and write &lt;a href="https://parquet.apache.org"&gt;parquet&lt;/a&gt; files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonchun/pathtype"&gt;pathtype&lt;/a&gt; - Treat paths as their own type instead of using strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pdfcpu/pdfcpu"&gt;pdfcpu&lt;/a&gt; - PDF processor.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dixonwille/skywalker"&gt;skywalker&lt;/a&gt; - Package to allow one to concurrently go through a filesystem with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1set/todotxt"&gt;todotxt&lt;/a&gt; - Go library for Gina Trapani's &lt;a href="http://todotxt.org/"&gt;&lt;em&gt;todo.txt&lt;/em&gt;&lt;/a&gt; files, supports parsing and manipulating of task lists in the &lt;a href="https://github.com/todotxt/todo.txt"&gt;&lt;em&gt;todo.txt&lt;/em&gt; format&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/C2FO/vfs"&gt;vfs&lt;/a&gt; - A pluggable, extensible, and opinionated set of filesystem functionality for Go across a number of filesystem types such as os, S3, and GCS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Financial&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Packages for accounting and finance.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leekchan/accounting"&gt;accounting&lt;/a&gt; - money and currency formatting for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moov-io/ach"&gt;ach&lt;/a&gt; - A reader, writer, and validator for Automated Clearing House (ACH) files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/c9s/bbgo"&gt;bbgo&lt;/a&gt; - A crypto trading bot framework written in Go. Including common crypto exchange API, standard indicators, back-testing and many built-in strategies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bojanz/currency"&gt;currency&lt;/a&gt; - Handles currency amounts, provides currency information and formatting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/naughtygopher/currency"&gt;currency&lt;/a&gt; - High performant &amp;amp; accurate currency computation package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jokruger/dec128"&gt;dec128&lt;/a&gt; - High performance 128-bit fixed-point decimal numbers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shopspring/decimal"&gt;decimal&lt;/a&gt; - Arbitrary-precision fixed-point decimal numbers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/govalues/decimal"&gt;decimal&lt;/a&gt; - Immutable decimal numbers with panic-free arithmetic.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/fpdecimal"&gt;fpdecimal&lt;/a&gt; - Fast and precise serialization and arithmetic for small fixed-point decimals&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/fpmoney"&gt;fpmoney&lt;/a&gt; - Fast and simple ISO4217 fixed-point decimal money.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alpeb/go-finance"&gt;go-finance&lt;/a&gt; - Library of financial functions for time value of money (annuities), cash flow, interest rate conversions, bonds and depreciation calculations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pieterclaerhout/go-finance"&gt;go-finance&lt;/a&gt; - Module to fetch exchange rates, check VAT numbers via VIES and check IBAN bank account numbers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rhymond/go-money"&gt;go-money&lt;/a&gt; - Implementation of Fowler's Money pattern.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/matm/go-nowpayments"&gt;go-nowpayments&lt;/a&gt; - Library for the crypto NOWPayments API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/invopop/gobl"&gt;gobl&lt;/a&gt; - Invoice and billing document framework. JSON Schema based. Automates tax calculations and validation, with tooling to convert into global formats.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/formancehq/ledger"&gt;ledger&lt;/a&gt; - A programmable financial ledger that provides a foundation for money-moving applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/govalues/money"&gt;money&lt;/a&gt; - Immutable monetary amounts and exchange rates with panic-free arithmetic.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aclindsa/ofxgo"&gt;ofxgo&lt;/a&gt; - Query OFX servers and/or parse the responses (with example command-line client).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/i25959341/orderbook"&gt;orderbook&lt;/a&gt; - Matching Engine for Limit Order Book in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jovandeginste/payme"&gt;payme&lt;/a&gt; - QR code generator (ASCII &amp;amp; PNG) for SEPA payments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.pfad.fr/swift/"&gt;swift&lt;/a&gt; - Offline validity check of IBAN (International Bank Account Number) and retrieval of BIC (for some countries).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sdcoffey/techan"&gt;techan&lt;/a&gt; - Technical analysis library with advanced market analysis and trading strategies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/achannarasappa/ticker"&gt;ticker&lt;/a&gt; - Terminal stock watcher and stock position tracker.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/claygod/transaction"&gt;transaction&lt;/a&gt; - Embedded transactional database of accounts, running in multithreaded mode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/quagmt/udecimal"&gt;udecimal&lt;/a&gt; - High performance, high precision, zero allocation fixed-point decimal library for financial applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dannyvankooten/vat"&gt;vat&lt;/a&gt; - VAT number validation &amp;amp; EU VAT rates.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Forms&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with forms.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/robfig/bind"&gt;bind&lt;/a&gt; - Bind form data to any Go values.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cinar/checker"&gt;checker&lt;/a&gt; - Checker helps validating user input through rules defined in struct tags or directly through functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leebenson/conform"&gt;conform&lt;/a&gt; - Keeps user input in check. Trims, sanitizes &amp;amp; scrubs data based on struct tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/form"&gt;form&lt;/a&gt; - Decodes url.Values into Go value(s) and Encodes Go value(s) into url.Values. Dual Array and Full map support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/monoculum/formam"&gt;formam&lt;/a&gt; - decode form's values into a struct.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/albrow/forms"&gt;forms&lt;/a&gt; - Framework-agnostic library for parsing and validating form/JSON data which supports multipart forms and files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bdjimmy/gbind"&gt;gbind&lt;/a&gt; - Bind data to any Go value. Can use built-in and custom expression binding capabilities; supports data validation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gorilla/csrf"&gt;gorilla/csrf&lt;/a&gt; - CSRF protection for Go web applications &amp;amp; services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggicci/httpin"&gt;httpin&lt;/a&gt; - Decode an HTTP request into a custom struct, including querystring, forms, HTTP headers, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/justinas/nosurf"&gt;nosurf&lt;/a&gt; - CSRF protection middleware for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sonh/qs"&gt;qs&lt;/a&gt; - Go module for encoding structs into URL query parameters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tomwright/queryparam"&gt;queryparam&lt;/a&gt; - Decode &lt;code&gt;url.Values&lt;/code&gt; into usable struct values of standard or custom types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/slipros/roamer"&gt;roamer&lt;/a&gt; - Eliminates boilerplate code for parsing HTTP requests by binding cookies, headers, query params, path params, body to structs and more by using simple tags.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Functional&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Packages to support functional programming in Go.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/repeale/fp-go"&gt;fp-go&lt;/a&gt; - Collection of Functional Programming helpers powered by Golang 1.18+ generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TeaEntityLab/fpGo"&gt;fpGo&lt;/a&gt; - Monad, Functional Programming features for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seborama/fuego"&gt;fuego&lt;/a&gt; - Functional Experiment in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/koss-null/FuncFrog"&gt;FuncFrog&lt;/a&gt; - Functional helpers library providing Map, Filter, Reduce and other stream operations on generic slices Go1.18+ with lazy evaluation and error handling mechanisms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BooleanCat/go-functional"&gt;go-functional&lt;/a&gt; - Functional programming in Go using generics&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tobyhede/go-underscore"&gt;go-underscore&lt;/a&gt; - Useful collection of helpfully functional Go collection utilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rbrahul/gofp"&gt;gofp&lt;/a&gt; - A lodash like powerful utility library for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/mo"&gt;mo&lt;/a&gt; - Monads and popular FP abstractions, based on Go 1.18+ Generics (Option, Result, Either...).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rjNemo/underscore"&gt;underscore&lt;/a&gt; - Functional programming helpers for Go 1.18 and beyond.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/phelmkamp/valor"&gt;valor&lt;/a&gt; - Generic option and result types that optionally contain a value.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Game Development&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Awesome game development libraries.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mlange-42/ark"&gt;Ark&lt;/a&gt; - Archetype-based Entity Component System (ECS) for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hajimehoshi/ebiten"&gt;Ebitengine&lt;/a&gt; - dead simple 2D game engine in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygeiss/ecs"&gt;ecs&lt;/a&gt; - Build your own Game-Engine based on the Entity Component System concept in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/EngoEngine/engo"&gt;engo&lt;/a&gt; - Engo is an open-source 2D game engine written in Go. It follows the Entity-Component-System paradigm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s0rg/fantasyname"&gt;fantasyname&lt;/a&gt; - Fantasy names generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/g3n/engine"&gt;g3n&lt;/a&gt; - Go 3D Game Engine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/beefsack/go-astar"&gt;go-astar&lt;/a&gt; - Go implementation of the A* path finding algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/veandco/go-sdl2"&gt;go-sdl2&lt;/a&gt; - Go bindings for the &lt;a href="https://www.libsdl.org/"&gt;Simple DirectMedia Layer&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ungerik/go3d"&gt;go3d&lt;/a&gt; - Performance oriented 2D/3D math package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xtaci/gonet"&gt;gonet&lt;/a&gt; - Game server skeleton implemented with golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xiaonanln/goworld"&gt;goworld&lt;/a&gt; - Scalable game server engine, featuring space-entity framework and hot-swapping.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s0rg/grid"&gt;grid&lt;/a&gt; - Generic 2D grid with ray-casting, shadow-casting and path finding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/name5566/leaf"&gt;Leaf&lt;/a&gt; - Lightweight game server framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lonng/nano"&gt;nano&lt;/a&gt; - Lightweight, facility, high performance golang based game server framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oakmound/oak"&gt;Oak&lt;/a&gt; - Pure Go game engine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elgopher/pi"&gt;Pi&lt;/a&gt; - Game engine for creating retro games for modern computers. Inspired by Pico-8 and powered by Ebitengine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/topfreegames/pitaya"&gt;Pitaya&lt;/a&gt; - Scalable game server framework with clustering support and client libraries for iOS, Android, Unity and others through the C SDK.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gopxl/pixel"&gt;Pixel&lt;/a&gt; - Hand-crafted 2D game library in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gonutz/prototype"&gt;prototype&lt;/a&gt; - Cross-platform (Windows/Linux/Mac) library for creating desktop games using a minimal API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gen2brain/raylib-go"&gt;raylib-go&lt;/a&gt; - Go bindings for &lt;a href="https://www.raylib.com/"&gt;raylib&lt;/a&gt;, a simple and easy-to-use library to learn videogames programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JoelOtter/termloop"&gt;termloop&lt;/a&gt; - Terminal-based game engine for Go, built on top of Termbox.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kelindar/tile"&gt;tile&lt;/a&gt; - Data-oriented and cache-friendly 2D Grid library (TileMap), includes pathfinding, observers and import/export.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Generators&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools that generate Go code.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reedom/convergen"&gt;convergen&lt;/a&gt; - Feature rich type-to-type copy code generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/switchupcb/copygen"&gt;copygen&lt;/a&gt; - Generate any code based on Go types, including type-to-type converters (copy code) without reflection by default.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/senselogic/GENERIS"&gt;generis&lt;/a&gt; - Code generation tool providing generics, free-form macros, conditional compilation and HTML templating.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abice/go-enum"&gt;go-enum&lt;/a&gt; - Code generation for enums from code comments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/go-enum-encoding"&gt;go-enum-encoding&lt;/a&gt; - Code generation for enum encoding from code comments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ahmetalpbalkan/go-linq"&gt;go-linq&lt;/a&gt; - .NET LINQ-like query methods for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/awalterschulze/goderive"&gt;goderive&lt;/a&gt; - Derives functions from input types&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmattheis/goverter"&gt;goverter&lt;/a&gt; - Generate converters by defining an interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hexdigest/gowrap"&gt;GoWrap&lt;/a&gt; - Generate decorators for Go interfaces using simple templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rjeczalik/interfaces"&gt;interfaces&lt;/a&gt; - Command line tool for generating interface definitions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dave/jennifer"&gt;jennifer&lt;/a&gt; - Generate arbitrary Go code without templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deepmap/oapi-codegen"&gt;oapi-codegen&lt;/a&gt; - This package contains a set of utilities for generating Go boilerplate code for services based on OpenAPI 3.0 API definitions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xiaoxin01/typeregistry"&gt;typeregistry&lt;/a&gt; - A library to create type dynamically.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Geographic&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Geographic tools and servers&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kpfaulkner/borders"&gt;borders&lt;/a&gt; - Detects image borders and converts to GeoJSON for GIS operations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spatial-go/geoos"&gt;geoos&lt;/a&gt; - A library provides spatial data and geometric algorithms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hishamkaram/geoserver"&gt;geoserver&lt;/a&gt; - geoserver Is a Go Package For Manipulating a GeoServer Instance via the GeoServer REST API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hishamkaram/gismanager"&gt;gismanager&lt;/a&gt; - Publish Your GIS Data(Vector Data) to PostGIS and Geoserver.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/airbusgeo/godal"&gt;godal&lt;/a&gt; - Go wrapper for GDAL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber/h3-go"&gt;H3&lt;/a&gt; - Go bindings for H3, a hierarchical hexagonal geospatial indexing system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mmadfox/go-geojson2h3"&gt;H3 GeoJSON&lt;/a&gt; - Conversion utilities between H3 indexes and GeoJSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mmadfox/go-h3geo-dist"&gt;H3GeoDist&lt;/a&gt; - Distribution of Uber H3geo cells by virtual nodes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/consbio/mbtileserver"&gt;mbtileserver&lt;/a&gt; - A simple Go-based server for map tiles stored in mbtiles format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paulmach/osm"&gt;osm&lt;/a&gt; - Library for reading, writing and working with OpenStreetMap data and APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maguro/pbf"&gt;pbf&lt;/a&gt; - OpenStreetMap PBF golang encoder/decoder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pantrif/s2-geojson"&gt;S2 geojson&lt;/a&gt; - Convert geojson to s2 cells &amp;amp; demonstrating some S2 geometry features on map.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang/geo"&gt;S2 geometry&lt;/a&gt; - S2 geometry library in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/peterstace/simplefeatures"&gt;simplefeatures&lt;/a&gt; - simplesfeatures is a 2D geometry library that provides Go types that model geometries, as well as algorithms that operate on them.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tidwall/tile38"&gt;Tile38&lt;/a&gt; - Geolocation DB with spatial index and realtime geofencing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jorelosorio/web-mercator-projection"&gt;Web-Mercator-Projection&lt;/a&gt; A project to easily use and convert LonLat, Point and Tile to display info, markers, etc, in a map using the Web Mercator Projection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wroge/wgs84"&gt;WGS84&lt;/a&gt; - Library for Coordinate Conversion and Transformation (ETRS89, OSGB36, NAD83, RGF93, Web Mercator, UTM).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Go Compilers&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools for compiling Go to other languages and vice-versa.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yassinebenaid/bunster"&gt;bunster&lt;/a&gt; - Compile shell scripts to Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Konstantin8105/c4go"&gt;c4go&lt;/a&gt; - Transpile C code to Go code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gotranspile/cxgo"&gt;cxgo&lt;/a&gt; - Transpile C code to Go code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygeiss/esp32-transpiler"&gt;esp32&lt;/a&gt; - Transpile Go into Arduino code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Konstantin8105/f4go"&gt;f4go&lt;/a&gt; - Transpile FORTRAN 77 code to Go code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go2hx/go2hx"&gt;go2hx&lt;/a&gt; - Compiler from Go to Haxe to Javascript/C++/Java/C#.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gopherjs/gopherjs"&gt;gopherjs&lt;/a&gt; - Compiler from Go to JavaScript.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Goroutines&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools for managing and working with Goroutines.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kyuff/anchor"&gt;anchor&lt;/a&gt; - Library to manage component lifecycle in microservice architectures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/panjf2000/ants"&gt;ants&lt;/a&gt; - A high-performance and low-cost goroutine pool in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/borderstech/artifex"&gt;artifex&lt;/a&gt; - Simple in-memory job queue for Golang using worker-based dispatching.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yaitoo/async"&gt;async&lt;/a&gt; - An asynchronous task package with async/await style for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reugn/async"&gt;async&lt;/a&gt; - An alternative sync library for Go (Future, Promise, Locks).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/studiosol/async"&gt;async&lt;/a&gt; - A safe way to execute functions asynchronously, recovering them in case of panic.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lab210-dev/async-job"&gt;async-job&lt;/a&gt; - AsyncJob is an asynchronous queue job manager with light code, clear and speed.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kamilsk/breaker"&gt;breaker&lt;/a&gt; - Flexible mechanism to make execution flow interruptible.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ddelizia/channelify"&gt;channelify&lt;/a&gt; - Transform your function to return channels for easy and powerful parallel processing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sourcegraph/conc"&gt;conc&lt;/a&gt; - &lt;code&gt;conc&lt;/code&gt; is your toolbelt for structured concurrency in go, making common tasks easier and safer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vivek-ng/concurrency-limiter"&gt;concurrency-limiter&lt;/a&gt; - Concurrency limiter with support for timeouts, dynamic priority and context cancellation of goroutines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ITcathyh/conexec"&gt;conexec&lt;/a&gt; - A concurrent toolkit to help execute funcs concurrently in an efficient and safe way. It supports specifying the overall timeout to avoid blocking and uses goroutine pool to improve efficiency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marusama/cyclicbarrier"&gt;cyclicbarrier&lt;/a&gt; - CyclicBarrier for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hexdigest/execpool"&gt;execpool&lt;/a&gt; - A pool built around exec.Cmd that spins up a given number of processes in advance and attaches stdin and stdout to them when needed. Very similar to FastCGI or Apache Prefork MPM but works for any command.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carlmjohnson/flowmatic"&gt;flowmatic&lt;/a&gt; - Structured concurrency made easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nar10z/go-accumulator"&gt;go-accumulator&lt;/a&gt; - Solution for accumulation of events and their subsequent processing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vladopajic/go-actor"&gt;go-actor&lt;/a&gt; - A tiny library for writing concurrent programs using actor model.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/workanator/go-floc"&gt;go-floc&lt;/a&gt; - Orchestrate goroutines with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kamildrazkiewicz/go-flow"&gt;go-flow&lt;/a&gt; - Control goroutines execution order.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikhilsaraf/go-tools"&gt;go-tools/multithreading&lt;/a&gt; - Manage a pool of goroutines using this lightweight library with a simple API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/subchen/go-trylock"&gt;go-trylock&lt;/a&gt; - TryLock support on read-write lock for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pieterclaerhout/go-waitgroup"&gt;go-waitgroup&lt;/a&gt; - Like &lt;code&gt;sync.WaitGroup&lt;/code&gt; with error handling and concurrency control.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zenthangplus/go-workerpool"&gt;go-workerpool&lt;/a&gt; - Inspired from Java Thread Pool, Go WorkerPool aims to control heavy Go Routines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zenthangplus/goccm"&gt;goccm&lt;/a&gt; - Go Concurrency Manager package limits the number of goroutines that allowed to run concurrently.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/loveleshsharma/gohive"&gt;gohive&lt;/a&gt; - A highly performant and easy to use Goroutine pool for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vardius/gollback"&gt;gollback&lt;/a&gt; - asynchronous simple function utilities, for managing execution of closures and callbacks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hamed-yousefi/gowl"&gt;gowl&lt;/a&gt; - Gowl is a process management and process monitoring tool at once. An infinite worker pool gives you the ability to control the pool and processes and monitor their status.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benmanns/goworker"&gt;goworker&lt;/a&gt; - goworker is a Go-based background worker.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xxjwxc/gowp"&gt;gowp&lt;/a&gt; - gowp is concurrency limiting goroutine pool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Sherifabdlnaby/gpool"&gt;gpool&lt;/a&gt; - manages a resizeable pool of context-aware goroutines to bound concurrency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ivpusic/grpool"&gt;grpool&lt;/a&gt; - Lightweight Goroutine pool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/duanckham/hands"&gt;hands&lt;/a&gt; - A process controller used to control the execution and return strategies of multiple goroutines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AaronJan/Hunch"&gt;Hunch&lt;/a&gt; - Hunch provides functions like: &lt;code&gt;All&lt;/code&gt;, &lt;code&gt;First&lt;/code&gt;, &lt;code&gt;Retry&lt;/code&gt;, &lt;code&gt;Waterfall&lt;/code&gt; etc., that makes asynchronous flow control more intuitive.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dirkaholic/kyoo"&gt;kyoo&lt;/a&gt; - Provides an unlimited job queue and concurrent worker pools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neilotoole/errgroup"&gt;neilotoole/errgroup&lt;/a&gt; - Drop-in alternative to &lt;code&gt;sync/errgroup&lt;/code&gt;, limited to a pool of N worker goroutines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arunsworld/nursery"&gt;nursery&lt;/a&gt; - Structured concurrency in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/cirello.io/oversight"&gt;oversight&lt;/a&gt; - Oversight is a complete implementation of the Erlang supervision trees.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafaeljesus/parallel-fn"&gt;parallel-fn&lt;/a&gt; - Run functions in parallel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alitto/pond"&gt;pond&lt;/a&gt; - Minimalistic and High-performance goroutine worker pool written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/pool"&gt;pool&lt;/a&gt; - Limited consumer goroutine or unlimited goroutine pool for easier goroutine handling and cancellation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/destel/rill"&gt;rill&lt;/a&gt; - Go toolkit for clean, composable, channel-based concurrency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/timandy/routine"&gt;routine&lt;/a&gt; - &lt;code&gt;routine&lt;/code&gt; is a &lt;code&gt;ThreadLocal&lt;/code&gt; for go library. It encapsulates and provides some easy-to-use, non-competitive, high-performance &lt;code&gt;goroutine&lt;/code&gt; context access interfaces, which can help you access coroutine context information more gracefully.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/x-mod/routine"&gt;routine&lt;/a&gt; - go routine control with context, support: Main, Go, Pool and some useful Executors.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kamilsk/semaphore"&gt;semaphore&lt;/a&gt; - Semaphore pattern implementation with timeout of lock/unlock operations based on channel and context.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marusama/semaphore"&gt;semaphore&lt;/a&gt; - Fast resizable semaphore implementation based on CAS (faster than channel-based semaphore implementations).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ssgreg/stl"&gt;stl&lt;/a&gt; - Software transactional locks based on Software Transactional Memory (STM) concurrency control mechanism.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shettyh/threadpool"&gt;threadpool&lt;/a&gt; - Golang threadpool implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jeffail/tunny"&gt;tunny&lt;/a&gt; - Goroutine pool for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vardius/worker-pool"&gt;worker-pool&lt;/a&gt; - goworker is a Go simple async worker pool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gammazero/workerpool"&gt;workerpool&lt;/a&gt; - Goroutine pool that limits the concurrency of task execution, not the number of tasks queued.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;GUI&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for building GUI Applications.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Toolkits&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/murlokswarm/app"&gt;app&lt;/a&gt; - Package to create apps with GO, HTML and CSS. Supports: MacOS, Windows in progress.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AllenDang/cimgui-go"&gt;cimgui-go&lt;/a&gt; - Auto generated Go wrapper for &lt;a href="https://github.com/ocornut/imgui"&gt;Dear ImGui&lt;/a&gt; via &lt;a href="https://github.com/cimgui/cimgui"&gt;cimgui&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cogentcore/core"&gt;Cogent Core&lt;/a&gt; - A framework for building 2D and 3D apps that run on macOS, Windows, Linux, iOS, Android, and the web.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/progrium/darwinkit"&gt;DarwinKit&lt;/a&gt; - Build native macOS applications using Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/energye/energy"&gt;energy&lt;/a&gt; - Cross-platform based on LCL(Native System UI Control Library) and CEF(Chromium Embedded Framework) (Windows/ macOS / Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fyne-io/fyne"&gt;fyne&lt;/a&gt; - Cross platform native GUIs designed for Go based on Material Design. Supports: Linux, macOS, Windows, BSD, iOS and Android.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gioui.org"&gt;gio&lt;/a&gt; - Gio is a library for writing cross-platform immediate mode GUI-s in Go. Gio supports all the major platforms: Linux, macOS, Windows, Android, iOS, FreeBSD, OpenBSD and WebAssembly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mattn.github.io/go-gtk/"&gt;go-gtk&lt;/a&gt; - Go bindings for GTK.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sciter-sdk/go-sciter"&gt;go-sciter&lt;/a&gt; - Go bindings for Sciter: the Embeddable HTML/CSS/script engine for modern desktop UI development. Cross platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitbucket.org/rj/goey/src/master/"&gt;Goey&lt;/a&gt; - Cross platform UI toolkit aggregator for Windows / Linux / Mac. GTK, Cocoa, Windows API&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goradd/html5tag"&gt;goradd/html5tag&lt;/a&gt; - Library for outputting HTML5 tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gotk3/gotk3"&gt;gotk3&lt;/a&gt; - Go bindings for GTK3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dtylman/gowd"&gt;gowd&lt;/a&gt; - Rapid and simple desktop UI development with GO, HTML, CSS and NW.js. Cross platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/therecipe/qt"&gt;qt&lt;/a&gt; - Qt binding for Go (support for Windows / macOS / Linux / Android / iOS / Sailfish OS / Raspberry Pi).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/roblillack/spot"&gt;Spot&lt;/a&gt; - Reactive, cross-platform desktop GUI toolkit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andlabs/ui"&gt;ui&lt;/a&gt; - Platform-native GUI library for Go. Cross platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/richardwilkes/unison"&gt;unison&lt;/a&gt; - A unified graphical user experience toolkit for Go desktop applications. macOS, Windows, and Linux are supported.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wails.io"&gt;Wails&lt;/a&gt; - Mac, Windows, Linux desktop apps with HTML UI using built-in OS HTML renderer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lxn/walk"&gt;walk&lt;/a&gt; - Windows application library kit for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zserge/webview"&gt;webview&lt;/a&gt; - Cross-platform webview window with simple two-way JavaScript bindings (Windows / macOS / Linux).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Interaction&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gopherlibs/appindicator"&gt;AppIndicator Go&lt;/a&gt; - Go bindings for libappindicator3 C library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deckarep/gosx-notifier"&gt;gosx-notifier&lt;/a&gt; - OSX Desktop Notifications library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prashantgupta24/activity-tracker"&gt;mac-activity-tracker&lt;/a&gt; - OSX library to notify about any (pluggable) activity on your machine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prashantgupta24/mac-sleep-notifier"&gt;mac-sleep-notifier&lt;/a&gt; - OSX Sleep/Wake notifications in golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-vgo/robotgo"&gt;robotgo&lt;/a&gt; - Go Native cross-platform GUI system automation. Control the mouse, keyboard and other.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getlantern/systray"&gt;systray&lt;/a&gt; - Cross platform Go library to place an icon and menu in the notification area.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shurcooL/trayhost"&gt;trayhost&lt;/a&gt; - Cross-platform Go library to place an icon in the host operating system's taskbar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ncruces/zenity"&gt;zenity&lt;/a&gt; - Cross-platform Go library and CLI to create simple dialogs that interact graphically with the user.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Hardware&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries, tools, and tutorials for interacting with hardware.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arduino/arduino-cli"&gt;arduino-cli&lt;/a&gt; - Official Arduino CLI and library. Can run standalone, or be incorporated into larger Go projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ziutek/emgo"&gt;emgo&lt;/a&gt; - Go-like language for programming embedded systems (e.g. STM32 MCU).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jaypipes/ghw"&gt;ghw&lt;/a&gt; - Golang hardware discovery/inspection library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hypebeast/go-osc"&gt;go-osc&lt;/a&gt; - Open Sound Control (OSC) bindings for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stianeikeland/go-rpio"&gt;go-rpio&lt;/a&gt; - GPIO for Go, doesn't require cgo.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aler9/goroslib"&gt;goroslib&lt;/a&gt; - Robot Operating System (ROS) library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/0xcafed00d/joystick"&gt;joystick&lt;/a&gt; - a polled API to read the state of an attached joystick.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zcalusic/sysinfo"&gt;sysinfo&lt;/a&gt; - A pure Go library providing Linux OS / kernel / hardware system information.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Images&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for manipulating images.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anthonynsimon/bild"&gt;bild&lt;/a&gt; - Collection of image processing algorithms in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/h2non/bimg"&gt;bimg&lt;/a&gt; - Small package for fast and efficient image processing using libvips.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aofei/cameron"&gt;cameron&lt;/a&gt; - An avatar generator for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tdewolff/canvas"&gt;canvas&lt;/a&gt; - Vector graphics to PDF, SVG or rasterized image.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marekm4/color-extractor"&gt;color-extractor&lt;/a&gt; - Dominant color extractor with no external dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gojek/darkroom"&gt;darkroom&lt;/a&gt; - An image proxy with changeable storage backends and image processing engines with focus on speed and resiliency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pravj/geopattern"&gt;geopattern&lt;/a&gt; - Create beautiful generative image patterns from a string.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fogleman/gg"&gt;gg&lt;/a&gt; - 2D rendering in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/disintegration/gift"&gt;gift&lt;/a&gt; - Package of image processing filters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qmuntal/gltf"&gt;gltf&lt;/a&gt; - Efficient and robust glTF 2.0 reader, writer and validator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ungerik/go-cairo"&gt;go-cairo&lt;/a&gt; - Go binding for the cairo graphics library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bolknote/go-gd"&gt;go-gd&lt;/a&gt; - Go binding for GD library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/koyachi/go-nude"&gt;go-nude&lt;/a&gt; - Nudity detection with Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yeqown/go-qrcode"&gt;go-qrcode&lt;/a&gt; - Generate QR codes with personalized styles, allowing adjustments to color, block size, shape, and icons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jyotiska/go-webcolors"&gt;go-webcolors&lt;/a&gt; - Port of webcolors library from Python to Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kolesa-team/go-webp"&gt;go-webp&lt;/a&gt; - Library for encode and decode webp pictures, using libwebp.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hybridgroup/gocv"&gt;gocv&lt;/a&gt; - Go package for computer vision using OpenCV 3.3+.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/corona10/goimagehash"&gt;goimagehash&lt;/a&gt; - Go Perceptual image hashing package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/corona10/goimghdr"&gt;goimghdr&lt;/a&gt; - The imghdr module determines the type of image contained in a file for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/o1egl/govatar"&gt;govatar&lt;/a&gt; - Library and CMD tool for generating funny avatars.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/davidbyttow/govips"&gt;govips&lt;/a&gt; - A lightning fast image processing and resizing library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sensepost/gowitness"&gt;gowitness&lt;/a&gt; - Screenshoting webpages using go and headless chrome on command line.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shomali11/gridder"&gt;gridder&lt;/a&gt; - A Grid based 2D Graphics library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qeesung/image2ascii"&gt;image2ascii&lt;/a&gt; - Convert image to ASCII.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gographics/imagick"&gt;imagick&lt;/a&gt; - Go binding to ImageMagick's MagickWand C API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/h2non/imaginary"&gt;imaginary&lt;/a&gt; - Fast and simple HTTP microservice for image resizing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/disintegration/imaging"&gt;imaging&lt;/a&gt; - Simple Go image processing package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cshum/imagor"&gt;imagor&lt;/a&gt; - Fast, secure image processing server and Go library, using libvips.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hawx/img"&gt;img&lt;/a&gt; - Selection of image manipulation tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fogleman/ln"&gt;ln&lt;/a&gt; - 3D line art rendering in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/noelyahan/mergi"&gt;mergi&lt;/a&gt; - Tool &amp;amp; Go library for image manipulation (Merge, Crop, Resize, Watermark, Animate).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aldor007/mort"&gt;mort&lt;/a&gt; - Storage and image processing server written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/donatj/mpo"&gt;mpo&lt;/a&gt; - Decoder and conversion tool for MPO 3D Photos.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HugoSmits86/nativewebp"&gt;nativewebp&lt;/a&gt; - Go native WebP encoder with zero external dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thoas/picfit"&gt;picfit&lt;/a&gt; - An image resizing server written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fogleman/pt"&gt;pt&lt;/a&gt; - Path tracing engine written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonoton/scout"&gt;scout&lt;/a&gt; - Scout is a standalone open source software solution for DIY video security.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muesli/smartcrop"&gt;smartcrop&lt;/a&gt; - Finds good crops for arbitrary images and crop sizes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/auyer/steganography"&gt;steganography&lt;/a&gt; - Pure Go Library for LSB steganography.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DimitarPetrov/stegify"&gt;stegify&lt;/a&gt; - Go tool for LSB steganography, capable of hiding any file within an image.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ajstarks/svgo"&gt;svgo&lt;/a&gt; - Go Language Library for SVG generation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Pixboost/transformimgs"&gt;transformimgs&lt;/a&gt; - Transformimgs resizes and optimises images for Web using next-generation formats.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mehdipourfar/webp-server"&gt;webp-server&lt;/a&gt; - Simple and minimal image server capable of storing, resizing, converting and caching images.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;IoT (Internet of Things)&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for programming devices of the IoT.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/connectordb/connectordb"&gt;connectordb&lt;/a&gt; - Open-Source Platform for Quantified Self &amp;amp; IoT.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goiot/devices"&gt;devices&lt;/a&gt; - Suite of libraries for IoT devices, experimental for x/exp/io.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lf-edge/ekuiper"&gt;ekuiper&lt;/a&gt; - Lightweight data stream processing engine for IoT edge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xcodersun/eywa"&gt;eywa&lt;/a&gt; - Project Eywa is essentially a connection manager that keeps track of connected devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tibcosoftware/flogo"&gt;flogo&lt;/a&gt; - Project Flogo is an Open Source Framework for IoT Edge Apps &amp;amp; Integration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paypal/gatt"&gt;gatt&lt;/a&gt; - Gatt is a Go package for building Bluetooth Low Energy peripherals.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hybridgroup/gobot/"&gt;gobot&lt;/a&gt; - Gobot is a framework for robotics, physical computing, and the Internet of Things.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amimof/huego"&gt;huego&lt;/a&gt; - An extensive Philips Hue client library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vaelen/iot/"&gt;iot&lt;/a&gt; - IoT is a simple framework for implementing a Google IoT Core device.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://periph.io/"&gt;periph&lt;/a&gt; - Peripherals I/O to interface with low-level board facilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rulego/rulego"&gt;rulego&lt;/a&gt; - RuleGo is a lightweight, high-performance, embedded, orchestrable component-based rule engine for IoT edge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sensorbee/sensorbee"&gt;sensorbee&lt;/a&gt; - Lightweight stream processing engine for IoT.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Edgenesis/shifu"&gt;shifu&lt;/a&gt; - Kubernetes native IoT development framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/e154/smart-home"&gt;smart-home&lt;/a&gt; - Software package for IoT automation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Job Scheduler&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for scheduling jobs.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deepaksinghvi/cdule"&gt;cdule&lt;/a&gt; - Job scheduler library with database support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bart6114/cheek"&gt;cheek&lt;/a&gt; - A simple crontab like scheduler that aims to offer a KISS approach to job scheduling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/onatm/clockwerk"&gt;clockwerk&lt;/a&gt; - Go package to schedule periodic jobs using a simple, fluent syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/krayzpipes/cronticker"&gt;cronticker&lt;/a&gt; - A ticker implementation to support cron schedules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rk/go-cron"&gt;go-cron&lt;/a&gt; - Simple Cron library for go that can execute closures or functions at varying intervals, from once a second to once a year on a specific date and time. Primarily for web applications and long running daemons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cybergarage/go-job"&gt;go-job&lt;/a&gt; - A flexible and extensible job scheduling and execution library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reugn/go-quartz"&gt;go-quartz&lt;/a&gt; - Simple, zero-dependency scheduling library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pardnchiu/go-scheduler"&gt;go-scheduler&lt;/a&gt; - Job scheduler supporting standard cron expressions, custom descriptors, intervals, and task dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-co-op/gocron"&gt;gocron&lt;/a&gt; - Easy and fluent Go job scheduling. This is an actively maintained fork of &lt;a href="https://github.com/jasonlvhit/gocron"&gt;jasonlvhit/gocron&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fieldryand/goflow"&gt;goflow&lt;/a&gt; - A simple but powerful DAG scheduler and dashboard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/roylee0704/gron"&gt;gron&lt;/a&gt; - Define time-based tasks using a simple Go API and Gron‚Äôs scheduler will run them accordingly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adhocore/gronx"&gt;gronx&lt;/a&gt; - Cron expression parser, task runner and daemon consuming crontab like task list.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bamzi/jobrunner"&gt;JobRunner&lt;/a&gt; - Smart and featureful cron job scheduler with job queuing and live monitoring built in.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kilgaloon/leprechaun"&gt;leprechaun&lt;/a&gt; - Job scheduler that supports webhooks, crons and classic scheduling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/romshark/sched"&gt;sched&lt;/a&gt; - A job scheduler with the ability to fast-forward time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carlescere/scheduler"&gt;scheduler&lt;/a&gt; - Cronjobs scheduling made easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/madflojo/tasks"&gt;tasks&lt;/a&gt; - An easy to use in-process scheduler for recurring tasks in Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;JSON&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with JSON.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spyzhov/ajson"&gt;ajson&lt;/a&gt; - Abstract JSON for golang with JSONPath support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/simonnilsson/ask"&gt;ask&lt;/a&gt; - Easy access to nested values in maps and slices. Works in combination with encoding/json and other packages that "Unmarshal" arbitrary data into Go data-types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cocoonspace/dynjson"&gt;dynjson&lt;/a&gt; - Client-customizable JSON formats for dynamic APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lucassscaravelli/ej"&gt;ej&lt;/a&gt; - Write and read JSON from different sources succinctly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vtopc/epoch"&gt;epoch&lt;/a&gt; - Contains primitives for marshaling/unmarshalling Unix timestamp/epoch to/from build-in time.Time type in JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/valyala/fastjson"&gt;fastjson&lt;/a&gt; - Fast JSON parser and validator for Go. No custom structs, no code generation, no reflection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jeffail/gabs"&gt;gabs&lt;/a&gt; - For parsing, creating and editing unknown or dynamic JSON in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skanehira/gjo"&gt;gjo&lt;/a&gt; - Small utility to create JSON objects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tidwall/gjson"&gt;GJSON&lt;/a&gt; - Get a JSON value with one line of code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ddymko/go-jsonerror"&gt;go-jsonerror&lt;/a&gt; - Go-JsonError is meant to allow us to easily create json response errors that follow the JsonApi spec.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nicklaw5/go-respond"&gt;go-respond&lt;/a&gt; - Go package for handling common HTTP JSON responses.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/limiu82214/gojmapr"&gt;gojmapr&lt;/a&gt; - Get simple struct from complex json by json path.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elgs/gojq"&gt;gojq&lt;/a&gt; - JSON query in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChimeraCoder/gojson"&gt;gojson&lt;/a&gt; - Automatically generate Go (golang) struct definitions from example JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/htmljson"&gt;htmljson&lt;/a&gt; - Rich rendering of JSON as HTML in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yazgazan/jaydiff"&gt;JayDiff&lt;/a&gt; - JSON diff utility written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wI2L/jettison"&gt;jettison&lt;/a&gt; - Fast and flexible JSON encoder for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/romshark/jscan"&gt;jscan&lt;/a&gt; - High performance zero-allocation JSON iterator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mholt.github.io/json-to-go/"&gt;JSON-to-Go&lt;/a&gt; - Convert JSON to Go struct.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://json-to-proto.github.io/"&gt;JSON-to-Proto&lt;/a&gt; - Convert JSON to Protobuf online.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/m-zajac/json2go"&gt;json2go&lt;/a&gt; - Advanced JSON to Go struct conversion. Provides package that can parse multiple JSON documents and create struct to fit them all.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AmuzaTkts/jsonapi-errors"&gt;jsonapi-errors&lt;/a&gt; - Go bindings based on the JSON API errors reference.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neilotoole/jsoncolor"&gt;jsoncolor&lt;/a&gt; - Drop-in replacement for &lt;code&gt;encoding/json&lt;/code&gt; that outputs colorized JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wI2L/jsondiff"&gt;jsondiff&lt;/a&gt; - JSON diff library for Go based on RFC6902 (JSON Patch).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miolini/jsonf"&gt;jsonf&lt;/a&gt; - Console tool for highlighted formatting and struct query fetching JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ricardolonga/jsongo"&gt;jsongo&lt;/a&gt; - Fluent API to make it easier to create Json objects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RichardKnop/jsonhal"&gt;jsonhal&lt;/a&gt; - Simple Go package to make custom structs marshal into HAL compatible JSON responses.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abusomani/jsonhandlers"&gt;jsonhandlers&lt;/a&gt; - JSON library to expose simple handlers that lets you easily read and write json from various sources.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sinhashubham95/jsonic"&gt;jsonic&lt;/a&gt; - Utilities to handle and query JSON without defining structs in a type safe manner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Andrew-M-C/go.jsonvalue"&gt;jsonvalue&lt;/a&gt; - A fast and convenient library for unstructured JSON data, replacing &lt;code&gt;encoding/json&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zerosnake0/jzon"&gt;jzon&lt;/a&gt; - JSON library with standard compatible API/behavior.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Qntfy/kazaam"&gt;kazaam&lt;/a&gt; - API for arbitrary transformation of JSON documents.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mickep76/mapslice-json"&gt;mapslice-json&lt;/a&gt; - Go MapSlice for ordered marshal/ unmarshal of maps in JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PerimeterX/marshmallow"&gt;marshmallow&lt;/a&gt; - Performant JSON unmarshalling for flexible use cases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sanbornm/mp"&gt;mp&lt;/a&gt; - Simple cli email parser. It currently takes stdin and outputs JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ohler55/ojg"&gt;OjG&lt;/a&gt; - Optimized JSON for Go is a high performance parser with a variety of additional JSON tools including JSONPath.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dedalqq/omg.jsonparser"&gt;omg.jsonparser&lt;/a&gt; - Simple JSON parser with validation by condition via golang struct fields tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/olvrng/ujson"&gt;ujson&lt;/a&gt; - Fast and minimal JSON parser and transformer that works on unstructured JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miladibra10/vjson"&gt;vjson&lt;/a&gt; - Go package for validating JSON objects with declaring a JSON schema with fluent API.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Logging&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for generating and working with log files.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amoghe/distillog"&gt;distillog&lt;/a&gt; - distilled levelled logging (think of it as stdlib + log levels).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kpango/glg"&gt;glg&lt;/a&gt; - glg is simple and fast leveled logging library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lajosbencz/glo"&gt;glo&lt;/a&gt; - PHP Monolog inspired logging facility with identical severity levels.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang/glog"&gt;glog&lt;/a&gt; - Leveled execution logs for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/utahta/go-cronowriter"&gt;go-cronowriter&lt;/a&gt; - Simple writer that rotate log files automatically based on current date and time, like cronolog.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pieterclaerhout/go-log"&gt;go-log&lt;/a&gt; - A logging library with stack traces, object dumping and optional timestamps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/subchen/go-log"&gt;go-log&lt;/a&gt; - Simple and configurable Logging in Go, with level, formatters and writers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/siddontang/go-log"&gt;go-log&lt;/a&gt; - Log lib supports level and multi handlers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ian-kent/go-log"&gt;go-log&lt;/a&gt; - Log4j implementation in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apsdehal/go-logger"&gt;go-logger&lt;/a&gt; - Simple logger of Go Programs, with level handlers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/One-com/gone/tree/master/log"&gt;gone/log&lt;/a&gt; - Fast, extendable, full-featured, std-lib source compatible log library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/henvic/httpretty"&gt;httpretty&lt;/a&gt; - Pretty-prints your regular HTTP requests on your terminal for debugging (similar to http.DumpRequest).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ssgreg/journald"&gt;journald&lt;/a&gt; - Go implementation of systemd Journal's native API for logging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/clok/kemba"&gt;kemba&lt;/a&gt; - A tiny debug logging tool inspired by &lt;a href="https://github.com/visionmedia/debug"&gt;debug&lt;/a&gt;, great for CLI tools and applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Lifailon/lazyjournal"&gt;lazyjournal&lt;/a&gt; - A TUI for reading and filtering logs from journalctl, file system, Docker and Podman containers, as well Kubernetes pods.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aerogo/log"&gt;log&lt;/a&gt; - An O(1) logging system that allows you to connect one log to multiple writers (e.g. stdout, a file and a TCP connection).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apex/log"&gt;log&lt;/a&gt; - Structured logging package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/log"&gt;log&lt;/a&gt; - Simple, configurable and scalable Structured Logging for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/teris-io/log"&gt;log&lt;/a&gt; - Structured log interface for Go cleanly separates logging facade from its implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/heartwilltell/log"&gt;log&lt;/a&gt; - Simple leveled logging wrapper around standard log package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/no-src/log"&gt;log&lt;/a&gt; - A simple logging framework out of the box.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/inconshreveable/log15"&gt;log15&lt;/a&gt; - Simple, powerful logging for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ewwwwwqm/logdump"&gt;logdump&lt;/a&gt; - Package for multi-level logging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chzyer/logex"&gt;logex&lt;/a&gt; - Golang log lib, supports tracking and level, wrap by standard log lib.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/azer/logger"&gt;logger&lt;/a&gt; - Minimalistic logging library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mbndr/logo"&gt;logo&lt;/a&gt; - Golang logger to different configurable writers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Sirupsen/logrus"&gt;logrus&lt;/a&gt; - Structured logger for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cabify/logrusiowriter"&gt;logrusiowriter&lt;/a&gt; - &lt;code&gt;io.Writer&lt;/code&gt; implementation using &lt;a href="https://github.com/sirupsen/logrus"&gt;logrus&lt;/a&gt; logger.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sebest/logrusly"&gt;logrusly&lt;/a&gt; - &lt;a href="https://github.com/sirupsen/logrus"&gt;logrus&lt;/a&gt; plug-in to send errors to a &lt;a href="https://www.loggly.com/"&gt;Loggly&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/logutils"&gt;logutils&lt;/a&gt; - Utilities for slightly better logging in Go (Golang) extending the standard logger.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mgutz/logxi"&gt;logxi&lt;/a&gt; - 12-factor app logger that is fast and makes you happy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/natefinch/lumberjack"&gt;lumberjack&lt;/a&gt; - Simple rolling logger, implements io.WriteCloser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jbrodriguez/mlog"&gt;mlog&lt;/a&gt; - Simple logging module for go, with 5 levels, an optional rotating logfile feature and stdout/stderr output.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gyozatech/noodlog"&gt;noodlog&lt;/a&gt; - Parametrized JSON logging library which lets you obfuscate sensitive data and marshal any kind of content. No more printed pointers instead of values, nor escape chars for the JSON strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/francoispqt/onelog"&gt;onelog&lt;/a&gt; - Onelog is a dead simple but very efficient JSON logger. It is the fastest JSON logger out there in all scenarios. Also, it is one of the logger with the lowest allocation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-ozzo/ozzo-log"&gt;ozzo-log&lt;/a&gt; - High performance logging supporting log severity, categorization, and filtering. Can send filtered log messages to various targets (e.g. console, network, mail).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/phuslu/log"&gt;phuslu/log&lt;/a&gt; - High performance structured logging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/k0kubun/pp"&gt;pp&lt;/a&gt; - Colored pretty printer for Go language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arthurkiller/rollingWriter"&gt;rollingwriter&lt;/a&gt; - RollingWriter is an auto-rotate &lt;code&gt;io.Writer&lt;/code&gt; implementation with multi policies to provide log file rotation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cihub/seelog"&gt;seelog&lt;/a&gt; - Logging functionality with flexible dispatching, filtering, and formatting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getsentry/sentry-go"&gt;sentry-go&lt;/a&gt; - Sentry SDK for Go. Helps monitor and track errors with real-time alerts and performance monitoring.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/echocat/slf4g"&gt;slf4g&lt;/a&gt; - Simple Logging Facade for Golang: Simple structured logging; but powerful, extendable and customizable, with huge amount of learnings from decades of past logging frameworks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gookit/slog"&gt;slog&lt;/a&gt; - Lightweight, configurable, extensible logger for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/slog-formatter"&gt;slog-formatter&lt;/a&gt; - Common formatters for slog and helpers to build your own.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/slog-multi"&gt;slog-multi&lt;/a&gt; - Chain of slog.Handler (pipeline, fanout...).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/greyxor/slogor"&gt;slogor&lt;/a&gt; - A colorful slog handler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/davecgh/go-spew"&gt;spew&lt;/a&gt; - Implements a deep pretty printer for Go data structures to aid in debugging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/simukti/sqldb-logger"&gt;sqldb-logger&lt;/a&gt; - A logger for Go SQL database driver without modify existing *sql.DB stdlib usage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexcesaro/log"&gt;stdlog&lt;/a&gt; - Stdlog is an object-oriented library providing leveled logging. It is very useful for cron jobs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/structy/log"&gt;structy/log&lt;/a&gt; - A simple to use log system, minimalist but with features for debugging and differentiation of messages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hpcloud/tail"&gt;tail&lt;/a&gt; - Go package striving to emulate the features of the BSD tail program.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DeRuina/timberjack"&gt;timberjack&lt;/a&gt; - Rolling logger with size-based, time-based, and scheduled clock-based rotation, supporting compression and cleanup.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lmittmann/tint"&gt;tint&lt;/a&gt; - A slog.Handler that writes tinted logs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xfxdev/xlog"&gt;xlog&lt;/a&gt; - Plugin architecture and flexible log system for Go, with level ctrl, multiple log target and custom log format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rs/xlog"&gt;xlog&lt;/a&gt; - Structured logger for &lt;code&gt;net/context&lt;/code&gt; aware HTTP handlers with flexible dispatching.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xybor-x/xylog"&gt;xylog&lt;/a&gt; - Leveled and structured logging, dynamic fields, high performance, zone management, simple configuration, and readable syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jfcg/yell"&gt;yell&lt;/a&gt; - Yet another minimalistic logging library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber-go/zap"&gt;zap&lt;/a&gt; - Fast, structured, leveled logging in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuseferi/zax"&gt;zax&lt;/a&gt; - Integrate Context with Zap logger, which leads to more flexibility in Go logging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rs/zerolog"&gt;zerolog&lt;/a&gt; - Zero-allocation JSON logger.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/edoger/zkits-logger"&gt;zkits-logger&lt;/a&gt; - A powerful zero-dependency JSON logger.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nkmr-jp/zl"&gt;zl&lt;/a&gt; - High Developer Experience, zap based logger. It offers rich functionality but is easy to configure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Machine Learning&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for Machine Learning.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jbrukh/bayesian"&gt;bayesian&lt;/a&gt; - Naive Bayesian Classification for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mirecl/catboost-cgo"&gt;catboost-cgo&lt;/a&gt; - Fast, scalable, high performance Gradient Boosting on Decision Trees library. Golang using Cgo for blazing fast inference CatBoost Model.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ryanbressler/CloudForest"&gt;CloudForest&lt;/a&gt; - Fast, flexible, multi-threaded ensembles of decision trees for machine learning in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sgrodriguez/ddt"&gt;ddt&lt;/a&gt; - Dynamic decision tree, create trees defining customizable rules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MaxHalford/eaopt"&gt;eaopt&lt;/a&gt; - An evolutionary optimization library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/khezen/evoli"&gt;evoli&lt;/a&gt; - Genetic Algorithm and Particle Swarm Optimization library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Fontinalis/fonet"&gt;fonet&lt;/a&gt; - A Deep Neural Network library written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/e-XpertSolutions/go-cluster"&gt;go-cluster&lt;/a&gt; - Go implementation of the k-modes and k-prototypes clustering algorithms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/patrikeh/go-deep"&gt;go-deep&lt;/a&gt; - A feature-rich neural network library in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/white-pony/go-fann"&gt;go-fann&lt;/a&gt; - Go bindings for Fast Artificial Neural Networks(FANN) library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thoj/go-galib"&gt;go-galib&lt;/a&gt; - Genetic Algorithms library written in Go / golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daviddengcn/go-pr"&gt;go-pr&lt;/a&gt; - Pattern recognition package in Go lang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goml/gobrain"&gt;gobrain&lt;/a&gt; - Neural Networks written in go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/e-dard/godist"&gt;godist&lt;/a&gt; - Various probability distributions, and associated methods.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tomcraven/goga"&gt;goga&lt;/a&gt; - Genetic algorithm library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sjwhitworth/golearn"&gt;GoLearn&lt;/a&gt; - General Machine Learning library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/surenderthakran/gomind"&gt;GoMind&lt;/a&gt; - A simplistic Neural Network Library in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cdipaolo/goml"&gt;goml&lt;/a&gt; - On-line Machine Learning in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gomlx/gomlx"&gt;GoMLX&lt;/a&gt; - An accelerated Machine Learning framework for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dathoangnd/gonet"&gt;gonet&lt;/a&gt; - Neural Network for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/c-bata/goptuna"&gt;Goptuna&lt;/a&gt; - Bayesian optimization framework for black-box functions written in Go. Everything will be optimized.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/timkaye11/goRecommend"&gt;goRecommend&lt;/a&gt; - Recommendation Algorithms library written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gorgonia/gorgonia"&gt;gorgonia&lt;/a&gt; - graph-based computational library like Theano for Go that provides primitives for building various machine learning and neural network algorithms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zhenghaoz/gorse"&gt;gorse&lt;/a&gt; - An offline recommender system backend based on collaborative filtering written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asafschers/goscore"&gt;goscore&lt;/a&gt; - Go Scoring API for PMML.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/otiai10/gosseract"&gt;gosseract&lt;/a&gt; - Go package for OCR (Optical Character Recognition), by using Tesseract C++ library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/knights-analytics/hugot"&gt;hugot&lt;/a&gt; - Huggingface transformer pipelines for golang with onnxruntime.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/datastream/libsvm"&gt;libsvm&lt;/a&gt; - libsvm golang version derived work based on LIBSVM 3.14.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BayesWitnesses/m2cgen"&gt;m2cgen&lt;/a&gt; - A CLI tool to transpile trained classic ML models into a native Go code with zero dependencies, written in Python with Go language support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/schuyler/neural-go"&gt;neural-go&lt;/a&gt; - Multilayer perceptron network implemented in Go, with training via backpropagation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/otiai10/ocrserver"&gt;ocrserver&lt;/a&gt; - A simple OCR API server, seriously easy to be deployed by Docker and Heroku.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/owulveryck/onnx-go"&gt;onnx-go&lt;/a&gt; - Go Interface to Open Neural Network Exchange (ONNX).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ThePaw/probab"&gt;probab&lt;/a&gt; - Probability distribution functions. Bayesian inference. Written in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/malaschitz/randomForest"&gt;randomforest&lt;/a&gt; - Easy to use Random Forest library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muesli/regommend"&gt;regommend&lt;/a&gt; - Recommendation &amp;amp; collaborative filtering engine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eaigner/shield"&gt;shield&lt;/a&gt; - Bayesian text classifier with flexible tokenizers and storage backends for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/galeone/tfgo"&gt;tfgo&lt;/a&gt; - Easy to use Tensorflow bindings: simplifies the usage of the official Tensorflow Go bindings. Define computational graphs in Go, load and execute models trained in Python.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Xamber/Varis"&gt;Varis&lt;/a&gt; - Golang Neural Network.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Messaging&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries that implement messaging systems.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kak-tus/ami"&gt;ami&lt;/a&gt; - Go client to reliable queues based on Redis Cluster Streams.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rabbitmq/amqp091-go"&gt;amqp&lt;/a&gt; - Go RabbitMQ Client Library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sideshow/apns2"&gt;APNs2&lt;/a&gt; - HTTP/2 Apple Push Notification provider for Go - Send push notifications to iOS, tvOS, Safari and OSX apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hibiken/asynq"&gt;Asynq&lt;/a&gt; - A simple, reliable, and efficient distributed task queue for Go built on top of Redis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mikestefanello/backlite"&gt;backlite&lt;/a&gt; - Type-safe, persistent, embedded task queues and background job runner w/ SQLite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Clivern/Beaver"&gt;Beaver&lt;/a&gt; - A real time messaging server to build a scalable in-app notifications, multiplayer games, chat apps in web and mobile apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mustafaturan/bus"&gt;Bus&lt;/a&gt; - Minimalist message bus implementation for internal communication.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/centrifugal/centrifugo"&gt;Centrifugo&lt;/a&gt; - Real-time messaging (Websockets or SockJS) server in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chanify/chanify"&gt;Chanify&lt;/a&gt; - A push notification server send message to your iOS devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jeroenrinzema/commander"&gt;Commander&lt;/a&gt; - A high-level event driven consumer/producer supporting various "dialects" such as Apache Kafka.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/confluentinc/confluent-kafka-go"&gt;Confluent Kafka Golang Client&lt;/a&gt; - confluent-kafka-go is Confluent's Golang client for Apache Kafka and the Confluent Platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/godbus/dbus"&gt;dbus&lt;/a&gt; - Native Go bindings for D-Bus.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/appleboy/drone-line"&gt;drone-line&lt;/a&gt; - Sending &lt;a href="https://at.line.me/en"&gt;Line&lt;/a&gt; notifications using a binary, docker or Drone CI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/olebedev/emitter"&gt;emitter&lt;/a&gt; - Emits events using Go way, with wildcard, predicates, cancellation possibilities and many other good wins.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agoalofalife/event"&gt;event&lt;/a&gt; - Implementation of the pattern observer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asaskevich/EventBus"&gt;EventBus&lt;/a&gt; - The lightweight event bus with async compatibility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osamingo/gaurun-client"&gt;gaurun-client&lt;/a&gt; - Gaurun Client written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/desertbit/glue"&gt;Glue&lt;/a&gt; - Robust Go and Javascript Socket Library (Alternative to Socket.io).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stanipetrosyan/go-eventbus"&gt;go-eventbus&lt;/a&gt; - Simple Event Bus package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mehdihadeli/Go-MediatR"&gt;Go-MediatR&lt;/a&gt; - A library for handling mediator patterns and simplified CQRS patterns within an event-driven architecture, inspired by csharp MediatR library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cheshir/go-mq"&gt;go-mq&lt;/a&gt; - RabbitMQ client with declarative configuration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TheCreeper/go-notify"&gt;go-notify&lt;/a&gt; - Native implementation of the freedesktop notification spec.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nsqio/go-nsq"&gt;go-nsq&lt;/a&gt; - the official Go package for NSQ.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jirenius/go-res"&gt;go-res&lt;/a&gt; - Package for building REST/real-time services where clients are synchronized seamlessly, using NATS and Resgate.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maxatome/go-vitotrol"&gt;go-vitotrol&lt;/a&gt; - Client library to Viessmann Vitotrol web service.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Raezil/GoEventBus"&gt;GoEventBus&lt;/a&gt; - A blazing‚Äëfast, in‚Äëmemory, lock‚Äëfree event bus library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trivago/gollum"&gt;Gollum&lt;/a&gt; - A n:m multiplexer that gathers messages from different sources and broadcasts them to a set of destinations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jcuga/golongpoll"&gt;golongpoll&lt;/a&gt; - HTTP longpoll server library that makes web pub-sub simple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Terry-Mao/gopush-cluster"&gt;gopush-cluster&lt;/a&gt; - gopush-cluster is a go push server cluster.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/appleboy/gorush"&gt;gorush&lt;/a&gt; - Push notification server using &lt;a href="https://github.com/sideshow/apns2"&gt;APNs2&lt;/a&gt; and google &lt;a href="https://github.com/google/go-gcm"&gt;GCM&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexsniffin/gosd"&gt;gosd&lt;/a&gt; - A library for scheduling when to dispatch a message to a channel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/smancke/guble"&gt;guble&lt;/a&gt; - Messaging server using push notifications (Google Firebase Cloud Messaging, Apple Push Notification services, SMS) as well as websockets, a REST API, featuring distributed operation and message-persistence.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leozz37/hare"&gt;hare&lt;/a&gt; - A user friendly library for sending messages and listening to TCP sockets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leandro-lugaresi/hub"&gt;hub&lt;/a&gt; - A Message/Event Hub for Go applications, using publish/subscribe pattern with support for alias like rabbitMQ exchanges.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SchwarzIT/hypermatch"&gt;hypermatch&lt;/a&gt; - A very fast and efficient Go library for matching events to a large set of rules&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/socifi/jazz"&gt;jazz&lt;/a&gt; - A simple RabbitMQ abstraction layer for queue administration and publishing and consuming of messages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RichardKnop/machinery"&gt;machinery&lt;/a&gt; - Asynchronous task queue/job queue based on distributed message passing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nanomsg/mangos"&gt;mangos&lt;/a&gt; - Pure go implementation of the Nanomsg ("Scalability Protocols") with transport interoperability.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/olahol/melody"&gt;melody&lt;/a&gt; - Minimalist framework for dealing with websocket sessions, includes broadcasting and automatic ping/pong handling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dunglas/mercure"&gt;Mercure&lt;/a&gt; - Server and library to dispatch server-sent updates using the Mercure protocol (built on top of Server-Sent Events).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vardius/message-bus"&gt;messagebus&lt;/a&gt; - messagebus is a Go simple async message bus, perfect for using as event bus when doing event sourcing, CQRS, DDD.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nats-io/nats.go"&gt;NATS Go Client&lt;/a&gt; - Go client for the NATS messaging system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafaeljesus/nsq-event-bus"&gt;nsq-event-bus&lt;/a&gt; - A tiny wrapper around NSQ topic and channel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dailymotion/oplog"&gt;oplog&lt;/a&gt; - Generic oplog/replication system for REST APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tuxychandru/pubsub"&gt;pubsub&lt;/a&gt; - Simple pubsub package for go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/timbray/quamina"&gt;Quamina&lt;/a&gt; - Fast pattern-matching for filtering messages and events.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/furdarius/rabbitroutine"&gt;rabbitroutine&lt;/a&gt; - Lightweight library that handles RabbitMQ auto-reconnect and publishing retries. The library takes into account the need to re-declare entities in RabbitMQ after reconnection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafaeljesus/rabbus"&gt;rabbus&lt;/a&gt; - A tiny wrapper over amqp exchanges and queues.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jandelgado/rabtap"&gt;rabtap&lt;/a&gt; - RabbitMQ swiss army knife cli app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sybrexsys/RapidMQ"&gt;RapidMQ&lt;/a&gt; - RapidMQ is a lightweight and reliable library for managing of the local messages queue.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hyperonym/ratus"&gt;Ratus&lt;/a&gt; - Ratus is a RESTful asynchronous task queue server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/robinjoseph08/redisqueue"&gt;redisqueue&lt;/a&gt; - redisqueue provides a producer and consumer of a queue that uses Redis streams.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sbabiv/rmqconn"&gt;rmqconn&lt;/a&gt; - RabbitMQ Reconnection. Wrapper over amqp.Connection and amqp.Dial. Allowing to do a reconnection when the connection is broken before forcing the call to the Close () method to be closed.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Shopify/sarama"&gt;sarama&lt;/a&gt; - Go library for Apache Kafka.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uniqush/uniqush-push"&gt;Uniqush-Push&lt;/a&gt; - Redis backed unified push service for server-side notifications to mobile devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goptics/varmq"&gt;varmq&lt;/a&gt; - A storage-agnostic message queue and worker pool for concurrent Go programs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ThreeDotsLabs/watermill"&gt;Watermill&lt;/a&gt; - Working efficiently with message streams. Building event driven applications, enabling event sourcing, RPC over messages, sagas. Can use conventional pub/sub implementations like Kafka or RabbitMQ, but also HTTP or MySQL binlog.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pebbe/zmq4"&gt;zmq4&lt;/a&gt; - Go interface to ZeroMQ version 4. Also available for &lt;a href="https://github.com/pebbe/zmq3"&gt;version 3&lt;/a&gt; and &lt;a href="https://github.com/pebbe/zmq2"&gt;version 2&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Microsoft Office&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unidoc/unioffice"&gt;unioffice&lt;/a&gt; - Pure go library for creating and processing Office Word (.docx), Excel (.xlsx) and Powerpoint (.pptx) documents.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Microsoft Excel&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with Microsoft Excel.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chonla/cellwalker"&gt;cellwalker&lt;/a&gt; - Virtually traverse Excel cell by cell's name.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xuri/excelize"&gt;excelize&lt;/a&gt; - Golang library for reading and writing Microsoft Excel‚Ñ¢ (XLSX) files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-the-way/exl"&gt;exl&lt;/a&gt; - Excel binding to struct written in Go.(Only supports Go1.18+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/szyhf/go-excel"&gt;go-excel&lt;/a&gt; - A simple and light reader to read a relate-db-like excel as a table.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tealeg/xlsx"&gt;xlsx&lt;/a&gt; - Library to simplify reading the XML format used by recent version of Microsoft Excel in Go programs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/plandem/xlsx"&gt;xlsx&lt;/a&gt; - Fast and safe way to read/update your existing Microsoft Excel files in Go programs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Microsoft Word&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with Microsoft Word.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gomutex/godocx"&gt;godocx&lt;/a&gt; - Library for reading and writing Microsoft Word (Docx) files.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Miscellaneous&lt;/h2&gt; 
&lt;h3&gt;Dependency Injection&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with dependency injection.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/magic003/alice"&gt;alice&lt;/a&gt; - Additive dependency injection container for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tiendc/autowire"&gt;autowire&lt;/a&gt; - Dependency injection using Generics and reflection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://github.com/boot-go/boot"&gt;boot-go&lt;/a&gt; - Component-based development with dependency injection using reflections for Go developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/componego/componego"&gt;componego&lt;/a&gt; - A dependency injection framework based on components, allowing dynamic dependency replacement without duplicating code in tests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/cosban/di"&gt;cosban/di&lt;/a&gt; - A code generation based dependency injection wiring tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goava/di"&gt;di&lt;/a&gt; - A dependency injection container for go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber-go/dig"&gt;dig&lt;/a&gt; - A reflection based dependency injection toolkit for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/i-love-flamingo/dingo"&gt;dingo&lt;/a&gt; - A dependency injection toolkit for Go, based on Guice.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/do"&gt;do&lt;/a&gt; - A dependency injection framework based on Generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber-go/fx"&gt;fx&lt;/a&gt; - A dependency injection based application framework for Go (built on top of dig).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-spring/spring-core"&gt;Go-Spring&lt;/a&gt; - A high-performance Go framework inspired by Spring Boot, offering DI, auto-configuration, and lifecycle management while maintaining Go's simplicity and efficiency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vardius/gocontainer"&gt;gocontainer&lt;/a&gt; - Simple Dependency Injection Container.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/junioryono/godi"&gt;godi&lt;/a&gt; - Microsoft-style dependency injection for Go with scoped lifetimes and generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goioc/di"&gt;goioc/di&lt;/a&gt; - Spring-inspired Dependency Injection Container.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golobby/container"&gt;GoLobby/Container&lt;/a&gt; - GoLobby Container is a lightweight yet powerful IoC dependency injection container for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NVIDIA/gontainer"&gt;gontainer&lt;/a&gt; - A dependency injection service container for Go projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gontainer/gontainer"&gt;gontainer/gontainer&lt;/a&gt; - A YAML-based Dependency Injection container for GO. It supports dependencies' scopes, and auto-detection of circular dependencies. Gontainer is concurrent-safe.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HnH/di"&gt;HnH/di&lt;/a&gt; - DI container library that is focused on clean API and flexibility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-kata/kinit"&gt;kinit&lt;/a&gt; - Customizable dependency injection container with the global mode, cascade initialization and panic-safe finalization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-kod/kod"&gt;kod&lt;/a&gt; - A generics based dependency injection framework for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/logrange/linker"&gt;linker&lt;/a&gt; - A reflection based dependency injection and inversion of control library with components lifecycle support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muir/nject"&gt;nject&lt;/a&gt; - A type safe, reflective framework for libraries, tests, http endpoints, and service startup.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/firasdarwish/ore"&gt;ore&lt;/a&gt; - Lightweight, generic &amp;amp; simple dependency injection (DI) container.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/matzefriedrich/parsley"&gt;parsley&lt;/a&gt; - A flexible and modular reflection-based DI library with advanced features like scoped contexts and proxy generation, designed for large-scale Go applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Fs02/wire"&gt;wire&lt;/a&gt; - Strict Runtime Dependency Injection for Golang.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Project Layout&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Unofficial&lt;/strong&gt; set of patterns for structuring projects.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ardanlabs/service"&gt;ardanlabs/service&lt;/a&gt; - A &lt;a href="https://github.com/ardanlabs/service/wiki"&gt;starter kit&lt;/a&gt; for building production grade scalable web service applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lacion/cookiecutter-golang"&gt;cookiecutter-golang&lt;/a&gt; - A Go application boilerplate template for quick starting projects following production best practices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Melkeydev/go-blueprint"&gt;go-blueprint&lt;/a&gt; - Allows users to spin up a quick Go project using a popular framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/octomation/go-module"&gt;go-module&lt;/a&gt; - Template for a typical module written on Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zitryss/go-sample"&gt;go-sample&lt;/a&gt; - A sample layout for Go application projects with the real code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/allaboutapps/go-starter"&gt;go-starter&lt;/a&gt; - An opinionated production-ready RESTful JSON backend template, highly integrated with VSCode DevContainers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Fs02/go-todo-backend"&gt;go-todo-backend&lt;/a&gt; - Go Todo Backend example using modular project layout for product microservice.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/naughtygopher/goapp"&gt;goapp&lt;/a&gt; - An opinionated guideline to structure &amp;amp; develop a Go web application/service.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wajox/gobase"&gt;gobase&lt;/a&gt; - A simple skeleton for golang application with basic setup for real golang application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang-standards/project-layout"&gt;golang-standards/project-layout&lt;/a&gt; - Set of common historical and emerging project layout patterns in the Go ecosystem. Note: despite the org-name they do not represent official golang standards, see &lt;a href="https://github.com/golang-standards/project-layout/issues/117"&gt;this issue&lt;/a&gt; for more information. Nonetheless, some may find the layout useful.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang-templates/seed"&gt;golang-templates/seed&lt;/a&gt; - Go application GitHub repository template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shpota/goxygen"&gt;goxygen&lt;/a&gt; - Generate a modern Web project with Go and Angular, React, or Vue in seconds.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/insidieux/inizio"&gt;insidieux/inizio&lt;/a&gt; - Golang project layout generator with plugins.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/raeperd/kickstart.go"&gt;kickstart.go&lt;/a&gt; - Minimalistic single-file Go HTTP server template without third-party dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sagikazarmark/modern-go-application"&gt;modern-go-application&lt;/a&gt; - Go application boilerplate and example applying modern practices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-nunu/nunu"&gt;nunu&lt;/a&gt; - Nunu is a scaffolding tool for building Go applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mikestefanello/pagoda"&gt;pagoda&lt;/a&gt; - Rapid, easy full-stack web development starter kit built in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/catchplay/scaffold"&gt;scaffold&lt;/a&gt; - Scaffold generates a starter Go project layout. Lets you focus on business logic implemented.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wangyoucao577/go-project-layout"&gt;wangyoucao577/go-project-layout&lt;/a&gt; - Set of practices and discussions on how to structure Go project layout.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Strings&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with strings.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/happy-sdk/happy/tree/main/pkg/strings/bexp"&gt;bexp&lt;/a&gt; - Go implementation of Brace Expansion mechanism to generate arbitrary strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chanced/caps"&gt;caps&lt;/a&gt; - A case conversion library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/tymonx/go-formatter"&gt;go-formatter&lt;/a&gt; - Implements &lt;strong&gt;replacement fields&lt;/strong&gt; surrounded by curly braces &lt;code&gt;{}&lt;/code&gt; format strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gobeam/Stringy"&gt;gobeam/Stringy&lt;/a&gt; - String manipulation library to convert string to camel case, snake case, kebab case / slugify etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charlievieth/strcase"&gt;strcase&lt;/a&gt; - Case-insensitive implementation of the standard library's strings/bytes packages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ozgio/strutil"&gt;strutil&lt;/a&gt; - String utilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abhimanyu003/sttr"&gt;sttr&lt;/a&gt; - cross-platform, cli app to perform various operations on string.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huandu/xstrings"&gt;xstrings&lt;/a&gt; - Collection of useful string functions ported from other languages.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Uncategorized&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;These libraries were placed here because none of the other categories seemed to fit.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mudler/anagent"&gt;anagent&lt;/a&gt; - Minimalistic, pluggable Golang evloop/timer handler with dependency-injection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antchfx/antch"&gt;antch&lt;/a&gt; - A fast, powerful and extensible web crawling &amp;amp; scraping framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mholt/archives"&gt;archives&lt;/a&gt; - a cross-platform, multi-format Go library for working with archives and compression formats with a unified API and as virtual file systems compatible with io/fs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/artyom/autoflags"&gt;autoflags&lt;/a&gt; - Go package to automatically define command line flags from struct fields.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kirillDanshin/avgRating"&gt;avgRating&lt;/a&gt; - Calculate average score and rating based on Wilson Score Equation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dimiro1/banner"&gt;banner&lt;/a&gt; - Add beautiful banners into your Go applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mojocn/base64Captcha"&gt;base64Captcha&lt;/a&gt; - Base64captch supports digit, number, alphabet, arithmetic, audio and digit-alphabet captcha.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/basexx"&gt;basexx&lt;/a&gt; - Convert to, from, and between digit strings in various number bases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/distatus/battery"&gt;battery&lt;/a&gt; - Cross-platform, normalized battery information library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/icza/bitio"&gt;bitio&lt;/a&gt; - Highly optimized bit-level Reader and Writer for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/digitalcrab/browscap_go"&gt;browscap_go&lt;/a&gt; - GoLang Library for &lt;a href="https://browscap.org/"&gt;Browser Capabilities Project&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/steambap/captcha"&gt;captcha&lt;/a&gt; - Package captcha provides an easy to use, unopinionated API for captcha generation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubeservice-stack/common"&gt;common&lt;/a&gt; - A library for server framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cstockton/go-conv"&gt;conv&lt;/a&gt; - Package conv provides fast and intuitive conversions across Go types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miolini/datacounter"&gt;datacounter&lt;/a&gt; - Go counters for readers/writer/http.ResponseWriter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lib4u/fake-useragent"&gt;fake-useragent&lt;/a&gt; - Up-to-date simple useragent faker with real world database in Golang&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pioz/faker"&gt;faker&lt;/a&gt; - Random fake data and struct generator for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-ffmt/ffmt"&gt;ffmt&lt;/a&gt; - Beautify data display for Humans.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TwinProduction/gatus"&gt;gatus&lt;/a&gt; - Automated service health dashboard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lana/go-commandbus"&gt;go-commandbus&lt;/a&gt; - A slight and pluggable command-bus for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jolestar/go-commons-pool"&gt;go-commons-pool&lt;/a&gt; - Generic object pool for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-openapi"&gt;go-openapi&lt;/a&gt; - Collection of packages to parse and utilize open-api schemas.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eapache/go-resiliency"&gt;go-resiliency&lt;/a&gt; - Resiliency patterns for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gen2brain/go-unarr"&gt;go-unarr&lt;/a&gt; - Decompression library for RAR, TAR, ZIP and 7z archives.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brianvoe/gofakeit"&gt;gofakeit&lt;/a&gt; - Random data generator written in go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antham/gommit"&gt;gommit&lt;/a&gt; - Analyze git commit messages to ensure they follow defined patterns.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shirou/gopsutil"&gt;gopsutil&lt;/a&gt; - Cross-platform library for retrieving process and system utilization(CPU, Memory, Disks, etc).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osamingo/gosh"&gt;gosh&lt;/a&gt; - Provide Go Statistics Handler, Struct, Measure Method.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/haxpax/gosms"&gt;gosms&lt;/a&gt; - Your own local SMS gateway in Go that can be used to send SMS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cabify/gotoprom"&gt;gotoprom&lt;/a&gt; - Type-safe metrics builder wrapper library for the official Prometheus client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pariz/gountries"&gt;gountries&lt;/a&gt; - Package that exposes country and subdivision data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ddddddO/gtree"&gt;gtree&lt;/a&gt; - Provide CLI, Package and Web for tree output and directories creation from Markdown or programmatically.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexliesenfeld/health"&gt;health&lt;/a&gt; - A simple and flexible health check library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dimiro1/health"&gt;health&lt;/a&gt; - Easy to use, extensible health check library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/etherlabsio/healthcheck"&gt;healthcheck&lt;/a&gt; - An opinionated and concurrent health-check HTTP handler for RESTful services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Wing924/hostutils"&gt;hostutils&lt;/a&gt; - A golang library for packing and unpacking FQDNs list.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osamingo/indigo"&gt;indigo&lt;/a&gt; - Distributed unique ID generator of using Sonyflake and encoded by Base58.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hyperboloide/lk"&gt;lk&lt;/a&gt; - A simple licensing library for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/llir/llvm"&gt;llvm&lt;/a&gt; - Library for interacting with LLVM IR in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pascaldekloe/metrics"&gt;metrics&lt;/a&gt; - Library for metrics instrumentation and Prometheus exposition.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alwindoss/morse"&gt;morse&lt;/a&gt; - Library to convert to and from morse code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lrita/numa"&gt;numa&lt;/a&gt; - NUMA is a utility library, which is written in go. It help us to write some NUMA-AWARED code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hyperboloide/pdfgen"&gt;pdfgen&lt;/a&gt; - HTTP service to generate PDF from Json requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mavihq/persian"&gt;persian&lt;/a&gt; - Some utilities for Persian language in go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ebitengine/purego"&gt;purego&lt;/a&gt; - A library for calling C functions from Go without Cgo.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aofei/sandid"&gt;sandid&lt;/a&gt; - Every grain of sand on earth has its own ID.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Wing924/shellwords"&gt;shellwords&lt;/a&gt; - A Golang library to manipulate strings according to the word parsing rules of the UNIX Bourne shell.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/teris-io/shortid"&gt;shortid&lt;/a&gt; - Distributed generation of super short, unique, non-sequential, URL friendly IDs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/containrrr/shoutrrr"&gt;shoutrrr&lt;/a&gt; - Notification library providing easy access to various messaging services like slack, mattermost, gotify and smtp among others.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mingard/sitemap-format"&gt;sitemap-format&lt;/a&gt; - A simple sitemap generator, with a little syntactic sugar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qmuntal/stateless"&gt;stateless&lt;/a&gt; - A fluent library for creating state machines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/stats"&gt;stats&lt;/a&gt; - Monitors Go MemStats + System stats such as Memory, Swap and CPU and sends via UDP anywhere you want for logging etc...&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hackebrot/turtle"&gt;turtle&lt;/a&gt; - Emojis for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pantrif/url-shortener"&gt;url-shortener&lt;/a&gt; - A modern, powerful, and robust URL shortener microservice with mysql support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/azr/generators/tree/master/varhandler"&gt;VarHandler&lt;/a&gt; - Generate boilerplate http input and output handling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chmike/varint"&gt;varint&lt;/a&gt; - A faster varying length integer encoder/decoder than the one provided in the standard library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rkoesters/xdg"&gt;xdg&lt;/a&gt; - FreeDesktop.org (xdg) Specs implemented in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-xkg/xkg"&gt;xkg&lt;/a&gt; - X Keyboard Grabber.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ulikunitz/xz"&gt;xz&lt;/a&gt; - Pure golang package for reading and writing xz-compressed files. &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Natural Language Processing&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with human languages.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;See also &lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#text-processing"&gt;Text Processing&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#text-analysis"&gt;Text Analysis&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Language Detection&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/detectlanguage/detectlanguage-go"&gt;detectlanguage&lt;/a&gt; - Language Detection API Go Client. Supports batch requests, short phrase or single word language detection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rylans/getlang"&gt;getlang&lt;/a&gt; - Fast natural language detection package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/endeveit/guesslanguage"&gt;guesslanguage&lt;/a&gt; - Functions to determine the natural language of a unicode text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pemistahl/lingua-go"&gt;lingua-go&lt;/a&gt; - An accurate natural language detection library, suitable for long and short text alike. Supports detecting multiple languages in mixed-language text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abadojack/whatlanggo"&gt;whatlanggo&lt;/a&gt; - Natural language detection package for Go. Supports 84 languages and 24 scripts (writing systems e.g. Latin, Cyrillic, etc).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Morphological Analyzers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agonopol/go-stem"&gt;go-stem&lt;/a&gt; - Implementation of the porter stemming algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/danieldk/go2vec"&gt;go2vec&lt;/a&gt; - Reader and utility functions for word2vec embeddings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rjohnsondev/golibstemmer"&gt;golibstemmer&lt;/a&gt; - Go bindings for the snowball libstemmer library including porter 2.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dinopuguh/gosentiwordnet"&gt;gosentiwordnet&lt;/a&gt; - Sentiment analyzer using sentiwordnet lexicon in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonreiter/govader"&gt;govader&lt;/a&gt; - Go implementation of &lt;a href="https://github.com/cjhutto/vaderSentiment"&gt;VADER Sentiment Analysis&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PIMPfiction/govader_backend"&gt;govader-backend&lt;/a&gt; - Microservice implementation of &lt;a href="https://github.com/jonreiter/govader"&gt;GoVader&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ikawaha/kagome"&gt;kagome&lt;/a&gt; - JP morphological analyzer written in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goodsign/libtextcat"&gt;libtextcat&lt;/a&gt; - Cgo binding for libtextcat C library. Guaranteed compatibility with version 2.2.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/james-bowman/nlp"&gt;nlp&lt;/a&gt; - Go Natural Language Processing library supporting LSA (Latent Semantic Analysis).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rookii/paicehusk"&gt;paicehusk&lt;/a&gt; - Golang implementation of the Paice/Husk Stemming Algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/a2800276/porter"&gt;porter&lt;/a&gt; - This is a fairly straightforward port of Martin Porter's C implementation of the Porter stemming algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zhenjl/porter2"&gt;porter2&lt;/a&gt; - Really fast Porter 2 stemmer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/afjoseph/RAKE.Go"&gt;RAKE.go&lt;/a&gt; - Go port of the Rapid Automatic Keyword Extraction Algorithm (RAKE).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goodsign/snowball"&gt;snowball&lt;/a&gt; - Snowball stemmer port (cgo wrapper) for Go. Provides word stem extraction functionality &lt;a href="http://snowball.tartarus.org/"&gt;Snowball native&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nlpodyssey/spago"&gt;spaGO&lt;/a&gt; - Self-contained Machine Learning and Natural Language Processing library in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jorelosorio/spellingcorrector"&gt;spelling-corrector&lt;/a&gt; - A spelling corrector for the Spanish language or create your own.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Slugifiers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mozillazg/go-slugify"&gt;go-slugify&lt;/a&gt; - Make pretty slug with multiple languages support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gosimple/slug"&gt;slug&lt;/a&gt; - URL-friendly slugify with multiple languages support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/avelino/slugify"&gt;Slugify&lt;/a&gt; - Go slugify application that handles string.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Tokenizers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yanyiwu/gojieba"&gt;gojieba&lt;/a&gt; - This is a Go implementation of &lt;a href="https://github.com/fxsjy/jieba"&gt;jieba&lt;/a&gt; which a Chinese word splitting algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xujiajun/gotokenizer"&gt;gotokenizer&lt;/a&gt; - A tokenizer based on the dictionary and Bigram language models for Golang. (Now only support chinese segmentation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-ego/gse"&gt;gse&lt;/a&gt; - Go efficient text segmentation; support english, chinese, japanese and other.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/awsong/MMSEGO"&gt;MMSEGO&lt;/a&gt; - This is a GO implementation of &lt;a href="http://technology.chtsai.org/mmseg/"&gt;MMSEG&lt;/a&gt; which a Chinese word splitting algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blevesearch/segment"&gt;segment&lt;/a&gt; - Go library for performing Unicode Text Segmentation as described in &lt;a href="https://www.unicode.org/reports/tr29/"&gt;Unicode Standard Annex #29&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neurosnap/sentences"&gt;sentences&lt;/a&gt; - Sentence tokenizer: converts text into a list of sentences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osamingo/shamoji"&gt;shamoji&lt;/a&gt; - The shamoji is word filtering package written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dchest/stemmer"&gt;stemmer&lt;/a&gt; - Stemmer packages for Go programming language. Includes English and German stemmers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pebbe/textcat"&gt;textcat&lt;/a&gt; - Go package for n-gram based text categorization, with support for utf-8 and raw text.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Translation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/invopop/ctxi18n/"&gt;ctxi18n&lt;/a&gt; - Context aware i18n with a short and consise API, pluralization, interpolation, and &lt;code&gt;fs.FS&lt;/code&gt; support. YAML locale definitions are based on &lt;a href="https://guides.rubyonrails.org/i18n.html"&gt;Rails i18n&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nicksnyder/go-i18n/"&gt;go-i18n&lt;/a&gt; - Package and an accompanying tool to work with localized text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dveselov/mystem"&gt;go-mystem&lt;/a&gt; - CGo bindings to Yandex.Mystem - russian morphology analyzer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mozillazg/go-pinyin"&gt;go-pinyin&lt;/a&gt; - CN Hanzi to Hanyu Pinyin converter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/saleh-rahimzadeh/go-words"&gt;go-words&lt;/a&gt; - A words table and text resource library for Golang projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leonelquinteros/gotext"&gt;gotext&lt;/a&gt; - GNU gettext utilities for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mehanizm/iuliia-go"&gt;iuliia-go&lt;/a&gt; - Transliterate Cyrillic ‚Üí Latin in every possible way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vorlif/spreak"&gt;spreak&lt;/a&gt; - Flexible translation and humanization library for Go, based on the concepts behind gettext.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/youthlin/t"&gt;t&lt;/a&gt; - Another i18n pkg for golang, which follows GNU gettext style and supports .po/.mo files: &lt;code&gt;t.T (gettext)&lt;/code&gt;, &lt;code&gt;t.N (ngettext)&lt;/code&gt;, etc. And it contains a cmd tool &lt;a href="https://github.com/youthlin/t/raw/main/cmd/xtemplate"&gt;xtemplate&lt;/a&gt;, which can extract messages as a pot file from text/html template.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Transliteration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/endeveit/enca"&gt;enca&lt;/a&gt; - Minimal cgo bindings for &lt;a href="https://cihar.com/software/enca/"&gt;libenca&lt;/a&gt;, which detects character encodings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mozillazg/go-unidecode"&gt;go-unidecode&lt;/a&gt; - ASCII transliterations of Unicode text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fiam/gounidecode"&gt;gounidecode&lt;/a&gt; - Unicode transliterator (also known as unidecode) for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexsergivan/transliterator"&gt;transliterator&lt;/a&gt; - Provides one-way string transliteration with supporting of language-specific transliteration rules.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Networking&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with various layers of the network.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mdlayher/arp"&gt;arp&lt;/a&gt; - Package arp implements the ARP protocol, as described in RFC 826.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gaissmai/bart"&gt;bart&lt;/a&gt; - Package bart provides a Balanced-Routing-Table (BART) for very fast IP to CIDR lookups and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stabbycutyou/buffstreams"&gt;buffstreams&lt;/a&gt; - Streaming protocolbuffer data over TCP made easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zubairhamed/canopus"&gt;canopus&lt;/a&gt; - CoAP Client/Server implementation (RFC 7252).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yl2chen/cidranger"&gt;cidranger&lt;/a&gt; - Fast IP to CIDR lookup for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudflare/cloudflared"&gt;cloudflared&lt;/a&gt; - Cloudflare Tunnel client (formerly Argo Tunnel).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mdlayher/dhcp6"&gt;dhcp6&lt;/a&gt; - Package dhcp6 implements a DHCPv6 server, as described in RFC 3315.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miekg/dns"&gt;dns&lt;/a&gt; - Go library for working with DNS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mosajjal/dnsmonster"&gt;dnsmonster&lt;/a&gt; - Passive DNS Capture/Monitoring Framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DarthPestilane/easytcp"&gt;easytcp&lt;/a&gt; - A light-weight TCP framework written in Go (Golang), built with message router. EasyTCP helps you build a TCP server easily fast and less painful.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/songgao/ether"&gt;ether&lt;/a&gt; - Cross-platform Go package for sending and receiving ethernet frames.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mdlayher/ethernet"&gt;ethernet&lt;/a&gt; - Package ethernet implements marshaling and unmarshalling of IEEE 802.3 Ethernet II frames and IEEE 802.1Q VLAN tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cheng-zhongliang/event"&gt;event&lt;/a&gt; - Simple I/O event notification library written in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/valyala/fasthttp"&gt;fasthttp&lt;/a&gt; - Package fasthttp is a fast HTTP implementation for Go, up to 10 times faster than net/http.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fortio/fortio"&gt;fortio&lt;/a&gt; - Load testing library and command line tool, advanced echo server and web UI. Allows to specify a set query-per-second load and record latency histograms and other useful stats and graph them. Tcp, Http, gRPC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jlaffaye/ftp"&gt;ftp&lt;/a&gt; - Package ftp implements a FTP client as described in &lt;a href="https://tools.ietf.org/html/rfc959"&gt;RFC 959&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fclairamb/ftpserverlib"&gt;ftpserverlib&lt;/a&gt; - Fully featured FTP server library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shoriwe/fullproxy"&gt;fullproxy&lt;/a&gt; - A fully featured scriptable and daemon configurable proxy and pivoting toolkit with SOCKS5, HTTP, raw ports and reverse proxy protocols.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alegrey91/fwdctl"&gt;fwdctl&lt;/a&gt; - A simple and intuitive CLI to manage IPTables forwards in your Linux server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xtaci/gaio"&gt;gaio&lt;/a&gt; - High performance async-io networking for Golang in proactor mode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Allenxuxu/gev"&gt;gev&lt;/a&gt; - gev is a lightweight, fast non-blocking TCP network library based on Reactor mode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jimlambrt/gldap"&gt;gldap&lt;/a&gt; - gldap provides an ldap server implementation and you provide handlers for its ldap operations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DrmagicE/gmqtt"&gt;gmqtt&lt;/a&gt; - Gmqtt is a flexible, high-performance MQTT broker library that fully implements the MQTT protocol V3.1.1.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/panjf2000/gnet"&gt;gnet&lt;/a&gt; - &lt;code&gt;gnet&lt;/code&gt; is a high-performance, lightweight, non-blocking, event-driven networking framework written in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fish-tennis/gnet"&gt;gnet&lt;/a&gt; - &lt;code&gt;gnet&lt;/code&gt; is a high-performance networking framework,especially for game servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/gnxi"&gt;gNxI&lt;/a&gt; - A collection of tools for Network Management that use the gNMI and gNOI protocols.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/go-getter"&gt;go-getter&lt;/a&gt; - Go library for downloading files or directories from various sources using a URL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/presbrey/go-multiproxy"&gt;go-multiproxy&lt;/a&gt; - Library for making HTTP requests through a pool of proxies offering fault tolerance, load balancing, automatic retries, cookie management, and more, via http.Get/Post replacement or http.Client RoundTripper drop-in&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexcfv/go-pcaplite"&gt;go-pcaplite&lt;/a&gt; - Lightweight live packet capture library with HTTPS SNI extraction.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joeig/go-powerdns"&gt;go-powerdns&lt;/a&gt; - PowerDNS API bindings for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lampctl/go-sse"&gt;go-sse&lt;/a&gt; - Go client and server implementation of HTML server-sent events.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ccding/go-stun"&gt;go-stun&lt;/a&gt; - Go implementation of the STUN client (RFC 3489 and RFC 5389).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osrg/gobgp"&gt;gobgp&lt;/a&gt; - BGP implemented in the Go Programming Language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/gopacket"&gt;gopacket&lt;/a&gt; - Go library for packet processing with libpcap bindings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/akrennmair/gopcap"&gt;gopcap&lt;/a&gt; - Go wrapper for libpcap.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elazarl/goproxy"&gt;GoProxy&lt;/a&gt; - A library to create a customized HTTP/HTTPS proxy server using Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sunwxg/goshark"&gt;goshark&lt;/a&gt; - Package goshark use tshark to decode IP packet and create data struct to analyse packet.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/soniah/gosnmp"&gt;gosnmp&lt;/a&gt; - Native Go library for performing SNMP actions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gansidui/gotcp"&gt;gotcp&lt;/a&gt; - Go package for quickly writing tcp applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cavaliercoder/grab"&gt;grab&lt;/a&gt; - Go package for managing file downloads.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/koofr/graval"&gt;graval&lt;/a&gt; - Experimental FTP server framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lxzan/gws"&gt;gws&lt;/a&gt; - High-Performance WebSocket Server &amp;amp; Client With AsyncIO Supporting .&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gchaincl/httplab"&gt;HTTPLab&lt;/a&gt; - HTTPLabs let you inspect HTTP requests and forge responses.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wzshiming/httpproxy"&gt;httpproxy&lt;/a&gt; - HTTP proxy handler and dialer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/c-robinson/iplib"&gt;iplib&lt;/a&gt; - Library for working with IP addresses (net.IP, net.IPNet), inspired by python &lt;a href="https://docs.python.org/3/library/ipaddress.html"&gt;ipaddress&lt;/a&gt; and ruby &lt;a href="https://ruby-doc.org/stdlib-2.5.1/libdoc/ipaddr/rdoc/IPAddr.html"&gt;ipaddr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/udhos/jazigo"&gt;jazigo&lt;/a&gt; - Jazigo is a tool written in Go for retrieving configuration for multiple network devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xtaci/kcp-go"&gt;kcp-go&lt;/a&gt; - KCP - Fast and Reliable ARQ Protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xtaci/kcptun"&gt;kcptun&lt;/a&gt; - Extremely simple &amp;amp; fast udp tunnel based on KCP protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fanux/lhttp"&gt;lhttp&lt;/a&gt; - Powerful websocket framework, build your IM server more easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ian-kent/linkio"&gt;linkio&lt;/a&gt; - Network link speed simulation for Reader/Writer interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kirillDanshin/llb"&gt;llb&lt;/a&gt; - It's a very simple but quick backend for proxy servers. Can be useful for fast redirection to predefined domain with zero memory allocation and fast response.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/mdns"&gt;mdns&lt;/a&gt; - Simple mDNS (Multicast DNS) client/server library in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://eclipse.org/paho/clients/golang/"&gt;mqttPaho&lt;/a&gt; - The Paho Go Client provides an MQTT client library for connection to MQTT brokers via TCP, TLS or WebSockets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/soypat/natiu-mqtt"&gt;natiu-mqtt&lt;/a&gt; - A dead-simple, non-allocating, low level implementation of MQTT well suited for embedded systems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lesismal/nbio"&gt;nbio&lt;/a&gt; - Pure Go 1000k+ connections solution, support tls/http1.x/websocket and basically compatible with net/http, with high-performance and low memory cost, non-blocking, event-driven, easy-to-use.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/x/net"&gt;net&lt;/a&gt; - This repository holds supplementary Go networking libraries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudwego/netpoll"&gt;netpoll&lt;/a&gt; - A high-performance non-blocking I/O networking framework, which focused on RPC scenarios, developed by ByteDance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/intel-go/nff-go"&gt;NFF-Go&lt;/a&gt; - Framework for rapid development of performant network functions for cloud and bare-metal (former YANFF).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yosebyte/nodepass"&gt;nodepass&lt;/a&gt; - A secure, efficient TCP/UDP tunneling solution that delivers fast, reliable access across network restrictions using pre-established TLS/TCP connections.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/schollz/peerdiscovery"&gt;peerdiscovery&lt;/a&gt; - Pure Go library for cross-platform local peer discovery using UDP multicast.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aybabtme/portproxy"&gt;portproxy&lt;/a&gt; - Simple TCP proxy which adds CORS support to API's which don't support it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jeroenrinzema/psql-wire"&gt;psql-wire&lt;/a&gt; - PostgreSQL server wire protocol. Build your own server and start serving connections..&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/polera/publicip"&gt;publicip&lt;/a&gt; - Package publicip returns your public facing IPv4 address (internet egress).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lucas-clemente/quic-go"&gt;quic-go&lt;/a&gt; - An implementation of the QUIC protocol in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/semihalev/sdns"&gt;sdns&lt;/a&gt; - A high-performance, recursive DNS resolver server with DNSSEC support, focused on preserving privacy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pkg/sftp"&gt;sftp&lt;/a&gt; - Package sftp implements the SSH File Transfer Protocol as described in &lt;a href="https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt"&gt;https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gliderlabs/ssh"&gt;ssh&lt;/a&gt; - Higher-level API for building SSH servers (wraps crypto/ssh).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eduardonunesp/sslb"&gt;sslb&lt;/a&gt; - It's a Super Simples Load Balancer, just a little project to achieve some kind of performance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-rtc/stun"&gt;stun&lt;/a&gt; - Go implementation of RFC 5389 STUN protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lim-yoona/tcpack"&gt;tcpack&lt;/a&gt; - tcpack is an application protocol based on TCP to Pack and Unpack bytes stream in go program.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/two/tspool"&gt;tspool&lt;/a&gt; - A TCP Library use worker pool to improve performance and protect your server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xjasonlyu/tun2socks"&gt;tun2socks&lt;/a&gt; - A pure go implementation of tun2socks powered by &lt;a href="https://gvisor.dev/"&gt;gVisor&lt;/a&gt; TCP/IP stack.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anacrolix/utp"&gt;utp&lt;/a&gt; - Go uTP micro transport protocol implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yahoo/vssh"&gt;vssh&lt;/a&gt; - Go library for building network and server automation over SSH protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/songgao/water"&gt;water&lt;/a&gt; - Simple TUN/TAP library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pions/webrtc"&gt;webrtc&lt;/a&gt; - A pure Go implementation of the WebRTC API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/masterzen/winrm"&gt;winrm&lt;/a&gt; - Go WinRM client to remotely execute commands on Windows machines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xfxdev/xtcp"&gt;xtcp&lt;/a&gt; - TCP Server Framework with simultaneous full duplex communication, graceful shutdown, and custom protocol.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;HTTP Clients&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Libraries for making HTTP requests.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rezmoss/axios4go"&gt;axios4go&lt;/a&gt; - A Go HTTP client library inspired by Axios, providing a simple and intuitive API for making HTTP requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Noooste/azuretls-client"&gt;azuretls-client&lt;/a&gt; - An easy-to-use HTTP client 100% in Go to spoof TLS/JA3 and HTTP2 fingerprint.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/opus-domini/fast-shot"&gt;fast-shot&lt;/a&gt; - Hit your API targets with rapid-fire precision using Go's fastest and simple HTTP Client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/h2non/gentleman"&gt;gentleman&lt;/a&gt; - Full-featured plugin-driven HTTP client library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/go-cleanhttp"&gt;go-cleanhttp&lt;/a&gt; - Get easily stdlib HTTP client, which does not share any state with other clients.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bozd4g/go-http-client"&gt;go-http-client&lt;/a&gt; - Make http calls simply and easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/optimus-hft/go-ipmux"&gt;go-ipmux&lt;/a&gt; - A library for Multiplexing HTTP requests based on multiple Source IPs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NdoleStudio/go-otelroundtripper"&gt;go-otelroundtripper&lt;/a&gt; - Go http.RoundTripper that emits open telemetry metrics for HTTP requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wenerme/go-req"&gt;go-req&lt;/a&gt; - Declarative golang HTTP client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/go-retryablehttp"&gt;go-retryablehttp&lt;/a&gt; - Retryable HTTP client in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-zoox/fetch"&gt;go-zoox/fetch&lt;/a&gt; - A Powerful, Lightweight, Easy Http Client, inspired by Web Fetch API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lib4u/grequest"&gt;Grequest&lt;/a&gt; - Simple and lightweight golang package for http requests. based on powerful net/http&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/levigross/grequests"&gt;grequests&lt;/a&gt; - A Go "clone" of the great and famous Requests library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gojektech/heimdall"&gt;heimdall&lt;/a&gt; - An enhanced http client with retry and hystrix capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ybbus/httpretry"&gt;httpretry&lt;/a&gt; - Enriches the default go HTTP client with retry functionality.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sethgrid/pester"&gt;pester&lt;/a&gt; - Go HTTP client calls with retries, backoff, and concurrency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/imroc/req"&gt;req&lt;/a&gt; - Simple Go HTTP client with Black Magic (Less code and More efficiency).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/monaco-io/request"&gt;request&lt;/a&gt; - HTTP client for golang. If you have experience about axios or requests, you will love it. No 3rd dependency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carlmjohnson/requests"&gt;requests&lt;/a&gt; - HTTP requests for Gophers. Uses context.Context and doesn't hide the underlying net/http.Client, making it compatible with standard Go APIs. Also includes testing tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-resty/resty"&gt;resty&lt;/a&gt; - Simple HTTP and REST client for Go inspired by Ruby rest-client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ddo/rq"&gt;rq&lt;/a&gt; - A nicer interface for golang stdlib HTTP client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dghubble/sling"&gt;sling&lt;/a&gt; - Sling is a Go HTTP client library for creating and sending API requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bogdanfinn/tls-client"&gt;tls-client&lt;/a&gt; - net/http.Client like HTTP Client with options to select specific client TLS Fingerprints to use for requests.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;OpenGL&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for using OpenGL in Go.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-gl/gl"&gt;gl&lt;/a&gt; - Go bindings for OpenGL (generated via glow).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-gl/glfw"&gt;glfw&lt;/a&gt; - Go bindings for GLFW 3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/technohippy/go-glmatrix"&gt;go-glmatrix&lt;/a&gt; - Go port of &lt;a href="https://glmatrix.net/"&gt;glMatrix&lt;/a&gt; library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goxjs/gl"&gt;goxjs/gl&lt;/a&gt; - Go cross-platform OpenGL bindings (OS X, Linux, Windows, browsers, iOS, Android).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goxjs/glfw"&gt;goxjs/glfw&lt;/a&gt; - Go cross-platform glfw library for creating an OpenGL context and receiving events.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-gl/mathgl"&gt;mathgl&lt;/a&gt; - Pure Go math package specialized for 3D math, with inspiration from GLM.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;ORM&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries that implement Object-Relational Mapping or datamapping techniques.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stephenafamo/bob"&gt;bob&lt;/a&gt; - SQL query builder and ORM/Factory generator for Go. Successor of SQLBoiler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uptrace/bun"&gt;bun&lt;/a&gt; - SQL-first Golang ORM. Successor of go-pg.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Yiling-J/cacheme-go"&gt;cacheme&lt;/a&gt; - Schema based, typed Redis caching/memoize framework for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/FrancoLiberali/cql"&gt;CQL&lt;/a&gt; - Built on top of GORM, adds compile-time verified queries based on auto-generated code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/facebook/ent"&gt;ent&lt;/a&gt; - An entity framework for Go. Simple, yet powerful ORM for modeling and querying data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/go-dbw"&gt;go-dbw&lt;/a&gt; - A simple package that encapsulates database operations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jschoedt/go-firestorm"&gt;go-firestorm&lt;/a&gt; - A simple ORM for Google/Firebase Cloud Firestore.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rushteam/gosql"&gt;go-sql&lt;/a&gt; - A easy ORM for mysql.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huandu/go-sqlbuilder"&gt;go-sqlbuilder&lt;/a&gt; - A flexible and powerful SQL string builder library plus a zero-config ORM.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gosuri/go-store"&gt;go-store&lt;/a&gt; - Simple and fast Redis backed key-value store library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golobby/orm"&gt;golobby/orm&lt;/a&gt; - Simple, fast, type-safe, generic orm for developer happiness.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-gorm/gorm"&gt;GORM&lt;/a&gt; - The fantastic ORM library for Golang, aims to be developer friendly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xxjwxc/gormt"&gt;gormt&lt;/a&gt; - Mysql database to golang gorm struct.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-gorp/gorp"&gt;gorp&lt;/a&gt; - Go Relational Persistence, ORM-ish library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Fs02/grimoire"&gt;grimoire&lt;/a&gt; - Grimoire is a database access layer and validation for golang. (Support: MySQL, PostgreSQL and SQLite3).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abrahambotros/lore"&gt;lore&lt;/a&gt; - Simple and lightweight pseudo-ORM/pseudo-struct-mapping environment for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marlow/marlow"&gt;marlow&lt;/a&gt; - Generated ORM from project structs for compile time safety assurances.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gobuffalo/pop"&gt;pop/soda&lt;/a&gt; - Database migration, creation, ORM, etc... for MySQL, PostgreSQL, and SQLite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prisma/prisma-client-go"&gt;Prisma&lt;/a&gt; - Prisma Client Go, Typesafe database access for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-reform/reform"&gt;reform&lt;/a&gt; - Better ORM for Go, based on non-empty interfaces and code generation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-rel/rel"&gt;rel&lt;/a&gt; - Modern Database Access Layer for Golang - Testable, Extendable and Crafted Into a Clean and Elegant API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/volatiletech/sqlboiler"&gt;SQLBoiler&lt;/a&gt; - ORM generator. Generate a featureful and blazing-fast ORM tailored to your database schema.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/upper/db"&gt;upper.io/db&lt;/a&gt; - Single interface for interacting with different data sources through the use of adapters that wrap mature database drivers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitea.com/xorm/xorm"&gt;XORM&lt;/a&gt; - Simple and powerful ORM for Go. (Support: MySQL, MyMysql, PostgreSQL, Tidb, SQLite3, MsSql and Oracle).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/albrow/zoom"&gt;Zoom&lt;/a&gt; - Blazing-fast datastore and querying engine built on Redis.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Package Management&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Official tooling for dependency and package management&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/cmd/go/#hdr-Modules__module_versions__and_more"&gt;go modules&lt;/a&gt; - Modules are the unit of source code interchange and versioning. The go command has direct support for working with modules, including recording and resolving dependencies on other modules.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Unofficial libraries for package and dependency management.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nao1215/gup"&gt;gup&lt;/a&gt; - Update binaries installed by "go install".&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chaindead/modup"&gt;modup&lt;/a&gt; - Terminal UI for Go dependency updates with outdated module detection and selective upgrading.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anchore/syft"&gt;syft&lt;/a&gt; - A CLI tool and Go library for generating a Software Bill of Materials (SBOM) from container images and filesystems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cilium/ebpf"&gt;ebpf-go&lt;/a&gt; - Provides utilities for loading, compiling, and debugging eBPF programs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/go-instrument"&gt;go-instrument&lt;/a&gt; - Automatically add spans to all methods and functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jaegertracing/jaeger"&gt;jaeger&lt;/a&gt; - A distributed tracing system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joetifa2003/mm-go"&gt;mm-go&lt;/a&gt; - Generic manual memory management for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pixie-labs/pixie"&gt;pixie&lt;/a&gt; - No instrumentation tracing for Golang applications via eBPF.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pkg/profile"&gt;profile&lt;/a&gt; - Simple profiling support package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arl/statsviz"&gt;statsviz&lt;/a&gt; - Live visualization of your Go application runtime statistics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kamilsk/tracer"&gt;tracer&lt;/a&gt; - Simple, lightweight tracing.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Query Language&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ccbrown/api-fu"&gt;api-fu&lt;/a&gt; - Comprehensive GraphQL implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tomwright/dasel"&gt;dasel&lt;/a&gt; - Query and update data structures using selectors from the command line. Comparable to jq/yq but supports JSON, YAML, TOML and XML with zero runtime dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thedevsaddam/gojsonq"&gt;gojsonq&lt;/a&gt; - A simple Go package to Query over JSON Data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SeldonIO/goven"&gt;goven&lt;/a&gt; - A drop-in query language for any database schema.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/99designs/gqlgen"&gt;gqlgen&lt;/a&gt; - go generate based graphql server library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reaganiwadha/grapher"&gt;grapher&lt;/a&gt; - A GraphQL field builder utilizing Go generics with extra utilities and features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neelance/graphql-go"&gt;graphql&lt;/a&gt; - GraphQL server with a focus on ease of use.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/graphql-go/graphql"&gt;graphql-go&lt;/a&gt; - Implementation of GraphQL for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Zaba505/gws"&gt;gws&lt;/a&gt; - Apollos' "GraphQL over Websocket" client and server implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AsaiYusuke/jsonpath"&gt;jsonpath&lt;/a&gt; - A query library for retrieving part of JSON based on JSONPath syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elgs/jsonql"&gt;jsonql&lt;/a&gt; - JSON query expression library in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bhmj/jsonslice"&gt;jsonslice&lt;/a&gt; - Jsonpath queries with advanced filters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/mql"&gt;mql&lt;/a&gt; - Model Query Language (mql) is a query language for your database models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/a8m/rql"&gt;rql&lt;/a&gt; - Resource Query Language for REST API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/timsolov/rest-query-parser"&gt;rqp&lt;/a&gt; - Query Parser for REST API. Filtering, validations, both &lt;code&gt;AND&lt;/code&gt;, &lt;code&gt;OR&lt;/code&gt; operations are supported directly in the query.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SonicRoshan/straf"&gt;straf&lt;/a&gt; - Easily Convert Golang structs to GraphQL objects.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Reflection&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gotidy/copy"&gt;copy&lt;/a&gt; - Package for fast copying structs of different types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ulule/deepcopier"&gt;Deepcopier&lt;/a&gt; - Simple struct copying for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tiendc/go-deepcopy"&gt;go-deepcopy&lt;/a&gt; - Fast deep copy library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lvyahui8/goenum"&gt;goenum&lt;/a&gt; - A common enumeration struct based on generics and reflection that allows you to quickly define enumerations and use a set of useful default methods.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wzshiming/gotype"&gt;gotype&lt;/a&gt; - Golang source code parsing, usage like reflect package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tenntenn/gpath"&gt;gpath&lt;/a&gt; - Library to simplify access struct fields with Go's expression in reflection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rekby/objwalker"&gt;objwalker&lt;/a&gt; - Walk by go objects with reflection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gontainer/reflectpro"&gt;reflectpro&lt;/a&gt; - Callers, copiers, getters and setters for go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muir/reflectutils"&gt;reflectutils&lt;/a&gt; - Helpers for working with reflection: struct tag parsing; recursive walking; fill value from string.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Resource Embedding&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leaanthony/debme"&gt;debme&lt;/a&gt; - Create an &lt;code&gt;embed.FS&lt;/code&gt; from an existing &lt;code&gt;embed.FS&lt;/code&gt; subdirectory.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/embed"&gt;embed&lt;/a&gt; - Package embed provides access to files embedded in the running Go program.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/soypat/rebed"&gt;rebed&lt;/a&gt; - Recreate folder structures and files from Go 1.16's &lt;code&gt;embed.FS&lt;/code&gt; type&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shurcooL/vfsgen"&gt;vfsgen&lt;/a&gt; - Generates a vfsdata.go file that statically implements the given virtual filesystem.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Science and Data Analysis&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for scientific computing and data analyzing.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ndabAP/assocentity"&gt;assocentity&lt;/a&gt; - Package assocentity returns the average distance from words to a given entity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seanhagen/bradleyterry"&gt;bradleyterry&lt;/a&gt; - Provides a Bradley-Terry Model for pairwise comparisons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/calendarheatmap"&gt;calendarheatmap&lt;/a&gt; - Calendar heatmap in plain Go inspired by Github contribution activity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vdobler/chart"&gt;chart&lt;/a&gt; - Simple Chart Plotting library for Go. Supports many graphs types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rocketlaunchr/dataframe-go"&gt;dataframe-go&lt;/a&gt; - Dataframes for machine-learning and statistics (similar to pandas).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/db47h/decimal"&gt;decimal&lt;/a&gt; - Package decimal implements arbitrary-precision decimal floating-point arithmetic.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/soniah/evaler"&gt;evaler&lt;/a&gt; - Simple floating point arithmetic expression evaluator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VividCortex/ewma"&gt;ewma&lt;/a&gt; - Exponentially-weighted moving averages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skelterjohn/geom"&gt;geom&lt;/a&gt; - 2D geometry for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mjibson/go-dsp"&gt;go-dsp&lt;/a&gt; - Digital Signal Processing for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/milosgajdos/go-estimate"&gt;go-estimate&lt;/a&gt; - State estimation and filtering algorithms in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ThePaw/go-gt"&gt;go-gt&lt;/a&gt; - Graph theory algorithms written in "Go" language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-hep/hep"&gt;go-hep&lt;/a&gt; - A set of libraries and tools for performing High Energy Physics analyses with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/soypat/godesim"&gt;godesim&lt;/a&gt; - Extended/multivariable ODE solver framework for event-based simulations with simple API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kzahedi/goent"&gt;goent&lt;/a&gt; - GO Implementation of Entropy Measures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hmdsefi/gograph"&gt;gograph&lt;/a&gt; - A golang generic graph library that provides mathematical graph-theory and algorithms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gonum/gonum"&gt;gonum&lt;/a&gt; - Gonum is a set of numeric libraries for the Go programming language. It contains libraries for matrices, statistics, optimization, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gonum/plot"&gt;gonum/plot&lt;/a&gt; - gonum/plot provides an API for building and drawing plots in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gyuho/goraph"&gt;goraph&lt;/a&gt; - Pure Go graph theory library(data structure, algorithm visualization).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cpmech/gosl"&gt;gosl&lt;/a&gt; - Go scientific library for linear algebra, FFT, geometry, NURBS, numerical methods, probabilities, optimisation, differential equations, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OGFris/GoStats"&gt;GoStats&lt;/a&gt; - GoStats is an Open Source GoLang library for math statistics mostly used in Machine Learning domains, it covers most of the Statistical measures functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yourbasic/graph"&gt;graph&lt;/a&gt; - Library of basic graph algorithms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/jsonl-graph"&gt;jsonl-graph&lt;/a&gt; - Tool to manipulate JSONL graphs with graphviz support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChristopherRabotin/ode"&gt;ode&lt;/a&gt; - Ordinary differential equation (ODE) solver which supports extended states and channel-based iteration stop conditions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paulmach/orb"&gt;orb&lt;/a&gt; - 2D geometry types with clipping, GeoJSON and Mapbox Vector Tile support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alixaxel/pagerank"&gt;pagerank&lt;/a&gt; - Weighted PageRank algorithm implemented in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sgreben/piecewiselinear"&gt;piecewiselinear&lt;/a&gt; - Tiny linear interpolation library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/claygod/PiHex"&gt;PiHex&lt;/a&gt; - Implementation of the "Bailey-Borwein-Plouffe" algorithm for the hexadecimal number Pi.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bebop/poly"&gt;Poly&lt;/a&gt; - A Go package for engineering organisms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/khezen/rootfinding"&gt;rootfinding&lt;/a&gt; - root-finding algorithms library for finding roots of quadratic functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/james-bowman/sparse"&gt;sparse&lt;/a&gt; - Go Sparse matrix formats for linear algebra supporting scientific and machine learning applications, compatible with gonum matrix libraries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/montanaflynn/stats"&gt;stats&lt;/a&gt; - Statistics package with common functions missing from the Golang standard library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nytlabs/streamtools"&gt;streamtools&lt;/a&gt; - general purpose, graphical tool for dealing with streams of data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DavidBelicza/TextRank"&gt;TextRank&lt;/a&gt; - TextRank implementation in Golang with extendable features (summarization, weighting, phrase extraction) and multithreading (goroutine) support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/keilerkonzept/topk"&gt;topk&lt;/a&gt; - Sliding-window and regular top-K sketches, based on the HeavyKeeper algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tchayen/triangolatte"&gt;triangolatte&lt;/a&gt; - 2D triangulation library. Allows translating lines and polygons (both based on points) to the language of GPUs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries that are used to help make your application more secure.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hlandau/acme"&gt;acmetool&lt;/a&gt; - ACME (Let's Encrypt) client tool with automatic renewal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sr.ht/~jamesponddotco/acopw-go/"&gt;acopw-go&lt;/a&gt; - Small cryptographically secure password generator package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cossacklabs/acra"&gt;acra&lt;/a&gt; - Network encryption proxy to protect database-based applications from data leaks: strong selective encryption, SQL injections prevention, intrusion detection system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/FiloSottile/age"&gt;age&lt;/a&gt; - A simple, modern and secure encryption tool (and Go library) with small explicit keys, no config options, and UNIX-style composability.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andskur/argon2-hashing"&gt;argon2-hashing&lt;/a&gt; - light wrapper around Go's argon2 package that closely mirrors with Go's standard library Bcrypt and simple-scrypt package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/golang.org/x/crypto/acme/autocert"&gt;autocert&lt;/a&gt; - Auto provision Let's Encrypt certificates and start a TLS server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jaredfolkins/badactor"&gt;BadActor&lt;/a&gt; - In-memory, application-driven jailer built in the spirit of fail2ban.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mariocandela/beelzebub"&gt;beelzebub&lt;/a&gt; - A secure low code honeypot framework, leveraging AI for System Virtualization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anatol/booster"&gt;booster&lt;/a&gt; - Fast initramfs generator with full-disk encryption support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ullaakut/cameradar"&gt;Cameradar&lt;/a&gt; - Tool and library to remotely hack RTSP streams from surveillance cameras.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mvmaasakkers/certificates"&gt;certificates&lt;/a&gt; - An opinionated tool for generating tls certificates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/caddyserver/certmagic"&gt;CertMagic&lt;/a&gt; - Mature, robust, and powerful ACME client integration for fully-managed TLS certificate issuance and renewal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/corazawaf/coraza"&gt;Coraza&lt;/a&gt; - Enterprise-ready, modsecurity and OWASP CRS compatible WAF library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang-module/dongle"&gt;dongle&lt;/a&gt; - A simple, semantic and developer-friendly golang package for encoding&amp;amp;decoding and encryption&amp;amp;decryption.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/encid"&gt;encid&lt;/a&gt; - Encode and decode encrypted integer IDs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andreimerlescu/entpassgen"&gt;entpassgen&lt;/a&gt; - Entropy Password Generator with extensive command line arguments to generate random strings securely including digits, passwords, and passwords built using obscure dictionary words mixed with symbols and digits.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prashantgupta24/firewalld-rest"&gt;firewalld-rest&lt;/a&gt; - A rest application to dynamically update firewalld rules on a linux server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/m1/go-generate-password"&gt;go-generate-password&lt;/a&gt; - Password generator that can be used on the cli or as a library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tg123/go-htpasswd"&gt;go-htpasswd&lt;/a&gt; - Apache htpasswd Parser for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lane-c-wagner/go-password-validator"&gt;go-password-validator&lt;/a&gt; - Password validator based on raw cryptographic entropy values.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/number571/go-peer"&gt;go-peer&lt;/a&gt; - A software library for creating secure and anonymous decentralized systems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hillu/go-yara"&gt;go-yara&lt;/a&gt; - Go Bindings for &lt;a href="https://github.com/plusvic/yara"&gt;YARA&lt;/a&gt;, the "pattern matching swiss knife for malware researchers (and everyone else)".&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dwin/goArgonPass"&gt;goArgonPass&lt;/a&gt; - Argon2 password hash and verification designed to be compatible with existing Python and PHP implementations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dwin/goSecretBoxPassword"&gt;goSecretBoxPassword&lt;/a&gt; - A probably paranoid package for securely hashing and encrypting passwords.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/avahidi/interpol"&gt;Interpol&lt;/a&gt; - Rule-based data generator for fuzzing and penetration testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-acme/lego"&gt;lego&lt;/a&gt; - Pure Go ACME client library and CLI tool (for use with Let's Encrypt).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anatol/luks.go"&gt;luks.go&lt;/a&gt; - Pure Golang library to manage LUKS partitions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/awnumar/memguard"&gt;memguard&lt;/a&gt; - A pure Go library for handling sensitive values in memory.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adrianosela/multikey"&gt;multikey&lt;/a&gt; - An n-out-of-N keys encryption/decryption framework based on Shamir's Secret Sharing algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kevinburke/nacl"&gt;nacl&lt;/a&gt; - Go implementation of the NaCL set of API's.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pjebs/optimus-go"&gt;optimus-go&lt;/a&gt; - ID hashing and Obfuscation using Knuth's Algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hlandau/passlib"&gt;passlib&lt;/a&gt; - Futureproof password hashing library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zitadel/passwap"&gt;passwap&lt;/a&gt; - Provides a unified implementation between different password hashing algorithms&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bitfield/qrand"&gt;qrand&lt;/a&gt; - Client for the ANU Quantum Numbers (AQN) API, providing quantum-mechanically secure random data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/safedep/vet"&gt;SafeDep/vet&lt;/a&gt; - Protect against malicious open source packages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rsjethani/secret"&gt;secret&lt;/a&gt; - Prevent your secrets from leaking into logs, std* etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unrolled/secure"&gt;secure&lt;/a&gt; - HTTP middleware for Go that facilitates some quick security wins.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xaionaro-go/secureio"&gt;secureio&lt;/a&gt; - An keyexchanging+authenticating+encrypting wrapper and multiplexer for &lt;code&gt;io.ReadWriteCloser&lt;/code&gt; based on XChaCha20-poly1305, ECDH and ED25519.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elithrar/simple-scrypt"&gt;simple-scrypt&lt;/a&gt; - Scrypt package with a simple, obvious API and automatic cost calibration built-in.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ssh-vault/ssh-vault"&gt;ssh-vault&lt;/a&gt; - encrypt/decrypt using ssh keys.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adrianosela/sslmgr"&gt;sslmgr&lt;/a&gt; - SSL certificates made easy with a high level wrapper around acme/autocert.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kitabisa/teler-waf"&gt;teler-waf&lt;/a&gt; - teler-waf is a Go HTTP middleware that provide teler IDS functionality to protect against web-based attacks and improve the security of Go-based web applications. It is highly configurable and easy to integrate into existing Go applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cossacklabs/themis"&gt;themis&lt;/a&gt; - high-level cryptographic library for solving typical data security tasks (secure data storage, secure messaging, zero-knowledge proof authentication), available for 14 languages, best fit for multi-platform apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/calpa/urusai"&gt;urusai&lt;/a&gt; - Urusai ("noisy" in Japanese) is a Go implementation of a random HTTP/DNS traffic noise generator that helps protect privacy by creating digital smokescreens while browsing.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Serialization&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries and tools for binary serialization.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/glycerine/bambam"&gt;bambam&lt;/a&gt; - generator for Cap'n Proto schemas from go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/32leaves/bel"&gt;bel&lt;/a&gt; - Generate TypeScript interfaces from Go structs/interfaces. Useful for JSON RPC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ghostiam/binstruct"&gt;binstruct&lt;/a&gt; - Golang binary decoder for mapping data into the structure.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fxamacker/cbor"&gt;cbor&lt;/a&gt; - Small, safe, and easy CBOR encoding and decoding library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pascaldekloe/colfer"&gt;colfer&lt;/a&gt; - Code generation for the Colfer binary format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jszwec/csvutil"&gt;csvutil&lt;/a&gt; - High Performance, idiomatic CSV record encoding and decoding to native Go structures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/epiclabs-io/elastic"&gt;elastic&lt;/a&gt; - Convert slices, maps or any other unknown value across different types at run-time, no matter what.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huydang284/fixedwidth"&gt;fixedwidth&lt;/a&gt; - Fixed-width text formatting (UTF-8 supported).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/o1egl/fwencoder"&gt;fwencoder&lt;/a&gt; - Fixed width file parser (encoding and decoding library) for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/glycerine/go-capnproto"&gt;go-capnproto&lt;/a&gt; - Cap'n Proto library and parser for go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ugorji/go"&gt;go-codec&lt;/a&gt; - High Performance, feature-Rich, idiomatic encode, decode and rpc library for msgpack, cbor and json, with runtime-based OR code-generation support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tiendc/go-csvlib"&gt;go-csvlib&lt;/a&gt; - High level and rich functionalities CSV serialization/deserialization library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gogo/protobuf"&gt;gogoprotobuf&lt;/a&gt; - Protocol Buffers for Go with Gadgets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang/protobuf"&gt;goprotobuf&lt;/a&gt; - Go support, in the form of a library and protocol compiler plugin, for Google's protocol buffers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/raszia/gotiny"&gt;gotiny&lt;/a&gt; - Efficient Go serialization library, gotiny is almost as fast as serialization libraries that generate code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/json-iterator/go"&gt;jsoniter&lt;/a&gt; - High-performance 100% compatible drop-in replacement of "encoding/json".&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yvasiyarov/php_session_decoder"&gt;php_session_decoder&lt;/a&gt; - GoLang library for working with PHP session format and PHP Serialize/Unserialize functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vimeda/pletter"&gt;pletter&lt;/a&gt; - A standard way to wrap a proto message for message brokers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tuvistavie/structomap"&gt;structomap&lt;/a&gt; - Library to easily and dynamically generate maps from static structures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/recolude/unitpacking"&gt;unitpacking&lt;/a&gt; - Library to pack unit vectors into as fewest bytes as possible.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Server Applications&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xyproto/algernon"&gt;algernon&lt;/a&gt; - HTTP/2 web server with built-in support for Lua, Markdown, GCSS and Amber.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/caddyserver/caddy"&gt;Caddy&lt;/a&gt; - Caddy is an alternative, HTTP/2 web server that's easy to configure and use.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.consul.io/"&gt;consul&lt;/a&gt; - Consul is a tool for service discovery, monitoring and configuration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blind-oracle/cortex-tenant"&gt;cortex-tenant&lt;/a&gt; - Prometheus remote write proxy that adds add Cortex tenant ID header based on metric labels.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cortesi/devd"&gt;devd&lt;/a&gt; - Local webserver for developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Bilibili/discovery"&gt;discovery&lt;/a&gt; - A registry for resilient mid-tier load balancing and failover.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/krotik/dudeldu"&gt;dudeldu&lt;/a&gt; - A simple SHOUTcast server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/megaease/easegress"&gt;Easegress&lt;/a&gt; - A cloud native high availability/performance traffic orchestration system with observability and extensibility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bifroest.engity.org/"&gt;Engity's Bifr√∂st&lt;/a&gt; - Highly customizable SSH server with several ways to authorize a user how to execute its session (local or in containers).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/etcd-io/etcd"&gt;etcd&lt;/a&gt; - Highly-available key value store for shared configuration and service discovery.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ironsmile/euterpe"&gt;Euterpe&lt;/a&gt; - Self-hosted music streaming server with built-in web UI and REST API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getfider/fider"&gt;Fider&lt;/a&gt; - Fider is an open platform to collect and organize customer feedback.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/checkr/flagr"&gt;Flagr&lt;/a&gt; - Flagr is an open-source feature flagging and A/B testing service.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/markphelps/flipt"&gt;flipt&lt;/a&gt; - A self contained feature flag solution written in Go and Vue.js&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thomaspoignant/go-feature-flag"&gt;go-feature-flag&lt;/a&gt; - A simple, complete and lightweight self-hosted feature flag solution 100% Open Source.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fabiocicerchia/go-proxy-cache"&gt;go-proxy-cache&lt;/a&gt; - Simple Reverse Proxy with Caching, written in Go, using Redis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bmf-san/gondola"&gt;gondola&lt;/a&gt; - A YAML based golang reverse proxy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rekby/lets-proxy2"&gt;lets-proxy2&lt;/a&gt; - Reverse proxy for handle https with issue certificates in fly from lets-encrypt.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/minio/minio"&gt;minio&lt;/a&gt; - Minio is a distributed object storage server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sinhashubham95/moxy"&gt;Moxy&lt;/a&gt; - Moxy is a simple mocker and proxy application server, you can create mock endpoints as well as proxy requests in case no mock exists for the endpoint.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blind-oracle/nginx-prometheus"&gt;nginx-prometheus&lt;/a&gt; - Nginx log parser and exporter to Prometheus.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nsq.io/"&gt;nsq&lt;/a&gt; - A realtime distributed messaging platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openrundev/openrun"&gt;OpenRun&lt;/a&gt; - Open-source alternative to Google Cloud Run and AWS App Runner. Easily deploy internal tools across a team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pocketbase/pocketbase"&gt;pocketbase&lt;/a&gt; - PocketBase is a realtime backend in 1 file consisting of embedded database (SQLite) with realtime subscriptions, built-in auth management and much more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/camgraff/protoxy"&gt;protoxy&lt;/a&gt; - A proxy server that converts JSON request bodies to Protocol Buffers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blind-oracle/psql-streamer"&gt;psql-streamer&lt;/a&gt; - Stream database events from PostgreSQL to Kafka.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blind-oracle/riemann-relay"&gt;riemann-relay&lt;/a&gt; - Relay to load-balance Riemann events and/or convert them to Carbon.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spiral/roadrunner"&gt;RoadRunner&lt;/a&gt; - High-performance PHP application server, load-balancer and process manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/drakkan/sftpgo"&gt;SFTPGo&lt;/a&gt; - Fully featured and highly configurable SFTP server with optional FTP/S and WebDAV support. It can serve local filesystem and Cloud Storage backends such as S3 and Google Cloud Storage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tricksterproxy/trickster"&gt;Trickster&lt;/a&gt; - HTTP reverse proxy cache and time series accelerator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/baalimago/wd-41"&gt;wd-41&lt;/a&gt; - A (w)eb (d)evelopment server with automatic live-reload on file changes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/wish"&gt;Wish&lt;/a&gt; - Make SSH apps, just like that!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Stream Processing&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries and tools for stream processing and reactive programming.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Breeze0806/go-etl"&gt;go-etl&lt;/a&gt; - A lightweight toolkit for data source extraction, transformation, and loading (ETL).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reugn/go-streams"&gt;go-streams&lt;/a&gt; - Go stream processing library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/primetalk/goio"&gt;goio&lt;/a&gt; - An implementation of IO, Stream, Fiber for Golang, inspired by awesome Scala libraries cats and fs2.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mariomac/gostream"&gt;gostream&lt;/a&gt; - Type-safe stream processing library inspired by the Java Streams API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/whitaker-io/machine"&gt;machine&lt;/a&gt; - Go library for writing and generating stream workers with built in metrics and traceability.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/naughtygopher/nibbler"&gt;nibbler&lt;/a&gt; - A lightweight package for micro batch processing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/ro"&gt;ro&lt;/a&gt; - Reactive Programming: declarative and composable API for event-driven applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/youthlin/stream"&gt;stream&lt;/a&gt; - Go Stream, like Java 8 Stream: Filter/Map/FlatMap/Peek/Sorted/ForEach/Reduce...&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rulego/streamsql"&gt;StreamSQL&lt;/a&gt; - A lightweight streaming SQL engine for real-time data processing.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Template Engines&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries and tools for templating and lexing.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benbjohnson/ego"&gt;ego&lt;/a&gt; - Lightweight templating language that lets you write templates in Go. Templates are translated into Go and compiled.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://git.sr.ht/~dvko/extemplate"&gt;extemplate&lt;/a&gt; - Tiny wrapper around html/template to allow for easy file-based template inheritance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/valyala/fasttemplate"&gt;fasttemplate&lt;/a&gt; - Simple and fast template engine. Substitutes template placeholders up to 10x faster than &lt;a href="https://golang.org/pkg/text/template/"&gt;text/template&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gomponents.com"&gt;gomponents&lt;/a&gt; - HTML 5 components in pure Go, that look something like this: &lt;code&gt;func(name string) g.Node { return Div(Class("headline"), g.Textf("Hi %v!", name)) }&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goradd/got"&gt;got&lt;/a&gt; - A Go code generator inspired by Hero and Fasttemplate. Has include files, custom tag definitions, injected Go code, language translation, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/foolin/goview"&gt;goview&lt;/a&gt; - Goview is a lightweight, minimalist and idiomatic template library based on golang html/template for building Go web application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://htmgo.dev"&gt;htmgo&lt;/a&gt; - build simple and scalable systems with go + htmx&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CloudyKit/jet"&gt;jet&lt;/a&gt; - Jet template engine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osteele/liquid"&gt;liquid&lt;/a&gt; - Go implementation of Shopify Liquid templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/johnfercher/maroto"&gt;maroto&lt;/a&gt; - A maroto way to create PDFs. Maroto is inspired in Bootstrap and uses gofpdf. Fast and simple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/flosch/pongo2"&gt;pongo2&lt;/a&gt; - Django-like template-engine for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/valyala/quicktemplate"&gt;quicktemplate&lt;/a&gt; - Fast, powerful, yet easy to use template engine. Converts templates into Go code and then compiles it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sipin/gorazor"&gt;Razor&lt;/a&gt; - Razor view engine for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/robfig/soy"&gt;Soy&lt;/a&gt; - Closure templates (aka Soy templates) for Go, following the &lt;a href="https://developers.google.com/closure/templates/"&gt;official spec&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-sprout/sprout"&gt;sprout&lt;/a&gt; - Useful template functions for Go templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lucasepe/tbd"&gt;tbd&lt;/a&gt; - A really simple way to create text templates with placeholders - exposes extra builtin Git repo metadata.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/a-h/templ"&gt;templ&lt;/a&gt; - A HTML templating language that has great developer tooling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alesr/templator"&gt;templator&lt;/a&gt; - A type-safe HTML template rendering engine for Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for testing codebases and generating test data.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Testing Frameworks&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://apitest.dev"&gt;apitest&lt;/a&gt; - Simple and extensible behavioural testing library for REST based services or HTTP handlers that supports mocking external http calls and rendering of sequence diagrams.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arch-go/arch-go"&gt;arch-go&lt;/a&gt; - Architecture testing tool for Go projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/assert"&gt;assert&lt;/a&gt; - Basic Assertion Library used along side native go testing, with building blocks for custom assertions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/h2non/baloo"&gt;baloo&lt;/a&gt; - Expressive and versatile end-to-end HTTP API testing made easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carlmjohnson/be"&gt;be&lt;/a&gt; - The minimalist generic test assertion library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fulldump/biff"&gt;biff&lt;/a&gt; - Bifurcation testing framework, BDD compatible.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/percolate/charlatan"&gt;charlatan&lt;/a&gt; - Tool to generate fake interface implementations for tests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SimonBaeumer/commander"&gt;commander&lt;/a&gt; - Tool for testing cli applications on windows, linux and osx.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bradleyjkemp/cupaloy"&gt;cupaloy&lt;/a&gt; - Simple snapshot testing addon for your test framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/khaiql/dbcleaner"&gt;dbcleaner&lt;/a&gt; - Clean database for testing purpose, inspired by &lt;code&gt;database_cleaner&lt;/code&gt; in Ruby.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abecodes/dft"&gt;dft&lt;/a&gt; - Lightweight, zero dependency docker containers for testing (or more).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viant/dsunit"&gt;dsunit&lt;/a&gt; - Datastore testing for SQL, NoSQL, structured files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fergusstrange/embedded-postgres"&gt;embedded-postgres&lt;/a&gt; - Run a real Postgres database locally on Linux, OSX or Windows as part of another Go application or test.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viant/endly"&gt;endly&lt;/a&gt; - Declarative end to end functional testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PerimeterX/envite"&gt;envite&lt;/a&gt; - Dev and testing environment management framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rekby/fixenv"&gt;fixenv&lt;/a&gt; - Fixture manage engine, inspired by pytest fixtures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/suzuki-shunsuke/flute"&gt;flute&lt;/a&gt; - HTTP client testing framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/verdverm/frisby"&gt;frisby&lt;/a&gt; - REST API testing framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hedhyw/gherkingen"&gt;gherkingen&lt;/a&gt; - BDD boilerplate generator and framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://onsi.github.io/ginkgo/"&gt;ginkgo&lt;/a&gt; - BDD Testing Framework for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orlangure/gnomock"&gt;gnomock&lt;/a&gt; - integration testing with real dependencies (database, cache, even Kubernetes or AWS) running in Docker, without mocks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/msoap/go-carpet"&gt;go-carpet&lt;/a&gt; - Tool for viewing test coverage in terminal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/go-cmp"&gt;go-cmp&lt;/a&gt; - Package for comparing Go values in tests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Eun/go-hit"&gt;go-hit&lt;/a&gt; - Hit is an http integration test framework written in golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mccutchen/go-httpbin"&gt;go-httpbin&lt;/a&gt; - HTTP testing and debugging tool with various endpoints for client testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zimmski/go-mutesting"&gt;go-mutesting&lt;/a&gt; - Mutation testing for Go source code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arikama/go-mysql-test-container"&gt;go-mysql-test-container&lt;/a&gt; - Golang MySQL testcontainer to help with MySQL integration testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://github.com/gkampitakis/go-snaps"&gt;go-snaps&lt;/a&gt; - Jest-like snapshot testing in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vladopajic/go-test-coverage"&gt;go-test-coverage&lt;/a&gt; - Tool that reports coverage of files below set threshold.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maxatome/go-testdeep"&gt;go-testdeep&lt;/a&gt; - Extremely flexible golang deep comparison, extends the go testing package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maargenton/go-testpredicate"&gt;go-testpredicate&lt;/a&gt; - Test predicate style assertions library with extensive diagnostics output.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dnaeon/go-vcr"&gt;go-vcr&lt;/a&gt; - Record and replay your HTTP interactions for fast, deterministic and accurate tests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/franela/goblin"&gt;goblin&lt;/a&gt; - Mocha like testing framework of Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qiniu/goc"&gt;goc&lt;/a&gt; - Goc is a comprehensive coverage testing system for The Go Programming Language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://labix.org/gocheck"&gt;gocheck&lt;/a&gt; - More advanced testing framework alternative to gotest.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/smartystreets/goconvey/"&gt;GoConvey&lt;/a&gt; - BDD-style framework with web UI and live reload.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/corbym/gocrest"&gt;gocrest&lt;/a&gt; - Composable hamcrest-like matchers for Go assertions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cucumber/godog"&gt;godog&lt;/a&gt; - Cucumber BDD framework for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/appleboy/gofight"&gt;gofight&lt;/a&gt; - API Handler Testing for Golang Router framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/corbym/gogiven"&gt;gogiven&lt;/a&gt; - YATSPEC-like BDD testing framework for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jfilipczyk/gomatch"&gt;gomatch&lt;/a&gt; - library created for testing JSON against patterns.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://onsi.github.io/gomega/"&gt;gomega&lt;/a&gt; - Rspec like matcher/assertion library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stv0g/gont"&gt;Gont&lt;/a&gt; - Go network testing toolkit for testing building complex network topologies using Linux namespaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stesla/gospecify"&gt;gospecify&lt;/a&gt; - This provides a BDD syntax for testing your Go code. It should be familiar to anybody who has used libraries such as rspec.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pavlo/gosuite"&gt;gosuite&lt;/a&gt; - Brings lightweight test suites with setup/teardown facilities to &lt;code&gt;testing&lt;/code&gt; by leveraging Go1.7's Subtests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ysmood/got"&gt;got&lt;/a&gt; - An enjoyable golang test framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gotestyourself/gotest.tools"&gt;gotest.tools&lt;/a&gt; - A collection of packages to augment the go testing package and support common patterns.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rdrdr/hamcrest"&gt;Hamcrest&lt;/a&gt; - fluent framework for declarative Matcher objects that, when applied to input values, produce self-describing results.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gavv/httpexpect"&gt;httpexpect&lt;/a&gt; - Concise, declarative, and easy to use end-to-end HTTP and REST API testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/matryer/is"&gt;is&lt;/a&gt; - Professional lightweight testing mini-framework for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kinbiko/jsonassert"&gt;jsonassert&lt;/a&gt; - Package for verifying that your JSON payloads are serialized correctly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/keploy/keploy"&gt;keploy&lt;/a&gt; - Generate Testcase and Data Mocks from API calls automatically.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dedalqq/omg.testingtools"&gt;omg.testingtools&lt;/a&gt; - The simple library for change a values of private fields for testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yookoala/restit"&gt;restit&lt;/a&gt; - Go micro framework to help writing RESTful API integration test.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jgroeneveld/schema"&gt;schema&lt;/a&gt; - Quick and easy expression matching for JSON schemas used in requests and responses.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elgohr/stop-and-go"&gt;stop-and-go&lt;/a&gt; - Testing helper for concurrency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adamluzsi/testcase"&gt;testcase&lt;/a&gt; - Idiomatic testing framework for Behavior Driven Development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/madflojo/testcerts"&gt;testcerts&lt;/a&gt; - Dynamically generate self-signed certificates and certificate authorities within your test functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/testcontainers/testcontainers-go"&gt;testcontainers-go&lt;/a&gt; - A Go package that makes it simple to create and clean up container-based dependencies for automated integration/smoke tests. The clean, easy-to-use API enables developers to programmatically define containers that should be run as part of a test and clean up those resources when the test is done.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-testfixtures/testfixtures"&gt;testfixtures&lt;/a&gt; - A helper for Rails' like test fixtures to test database applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stretchr/testify"&gt;Testify&lt;/a&gt; - Sacred extension to the standard go testing package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zhulongcheng/testsql"&gt;testsql&lt;/a&gt; - Generate test data from SQL files before testing and clear it after finished.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MarvinJWendt/testza"&gt;testza&lt;/a&gt; - Full-featured test framework with nice colorized output.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jgroeneveld/trial"&gt;trial&lt;/a&gt; - Quick and easy extendable assertions without introducing much boilerplate.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vcaesar/tt"&gt;Tt&lt;/a&gt; - Simple and colorful test tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/posener/wstest"&gt;wstest&lt;/a&gt; - Websocket client for unit-testing a websocket http.Handler.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mock&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cubahno/connexions"&gt;connexions&lt;/a&gt; - Combine multiple APIs with meaningful responses, configurable latency and error codes based on OpenAPI 3.0 specifications and files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maxbrunsfeld/counterfeiter"&gt;counterfeiter&lt;/a&gt; - Tool for generating self-contained mock objects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/so_literate/genmock"&gt;genmock&lt;/a&gt; - Go mocking system with code generator for building calls of the interface methods.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elgohr/go-localstack"&gt;go-localstack&lt;/a&gt; - Tool for using localstack in AWS testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DATA-DOG/go-sqlmock"&gt;go-sqlmock&lt;/a&gt; - Mock SQL driver for testing database interactions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DATA-DOG/go-txdb"&gt;go-txdb&lt;/a&gt; - Single transaction based database driver mainly for testing purposes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/h2non/gock"&gt;gock&lt;/a&gt; - Versatile HTTP mocking made easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber-go/mock"&gt;gomock&lt;/a&gt; - Mocking framework for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seborama/govcr"&gt;govcr&lt;/a&gt; - HTTP mock for Golang: record and replay HTTP interactions for offline testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SpectoLabs/hoverfly"&gt;hoverfly&lt;/a&gt; - HTTP(S) proxy for recording and simulating REST/SOAP APIs with extensible middleware and easy-to-use CLI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jarcoal/httpmock"&gt;httpmock&lt;/a&gt; - Easy mocking of HTTP responses from external resources.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gojuno/minimock"&gt;minimock&lt;/a&gt; - Mock generator for Go interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vektra/mockery"&gt;mockery&lt;/a&gt; - Tool to generate Go interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/balinomad/go-mockfs"&gt;mockfs&lt;/a&gt; - Mock filesystem for Go testing with error injection and latency simulation, built on &lt;code&gt;testing/fstest.MapFS&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tv42/mockhttp"&gt;mockhttp&lt;/a&gt; - Mock object for Go http.ResponseWriter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GuilhermeCaruso/mooncake"&gt;mooncake&lt;/a&gt; - A simple way to generate mocks for multiple purposes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/matryer/moq"&gt;moq&lt;/a&gt; - Utility that generates a struct from any interface. The struct can be used in test code as a mock of the interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lesiw.io/moxie"&gt;moxie&lt;/a&gt; - Generate mock methods on embedded structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pashagolub/pgxmock"&gt;pgxmock&lt;/a&gt; - A mock library implementing &lt;a href="https://github.com/jackc/pgx/"&gt;pgx - PostgreSQL Driver and Toolkit&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cabify/timex"&gt;timex&lt;/a&gt; - A test-friendly replacement for the native &lt;code&gt;time&lt;/code&gt; package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xhd2015/xgo"&gt;xgo&lt;/a&gt; - A general pureposed function mocking library.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Fuzzing and delta-debugging/reducing/shrinking&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dvyukov/go-fuzz"&gt;go-fuzz&lt;/a&gt; - Randomized testing system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zimmski/tavor"&gt;Tavor&lt;/a&gt; - Generic fuzzing and delta-debugging framework.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Selenium and browser control tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mafredri/cdp"&gt;cdp&lt;/a&gt; - Type-safe bindings for the Chrome Debugging Protocol that can be used with browsers or other debug targets that implement it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/knq/chromedp"&gt;chromedp&lt;/a&gt; - a way to drive/test Chrome, Safari, Edge, Android Webviews, and other browsers supporting the Chrome Debugging Protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mxschmitt/playwright-go"&gt;playwright-go&lt;/a&gt; - browser automation library to control Chromium, Firefox and WebKit with a single API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-rod/rod"&gt;rod&lt;/a&gt; - A Devtools driver to make web automation and scraping easy.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Fail injection&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pingcap/failpoint"&gt;failpoint&lt;/a&gt; - An implementation of &lt;a href="https://www.freebsd.org/cgi/man.cgi?query=fail"&gt;failpoints&lt;/a&gt; for Golang.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Text Processing&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for parsing and manipulating texts.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;See also &lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#natural-language-processing"&gt;Natural Language Processing&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#text-analysis"&gt;Text Analysis&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Formatters&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bojanz/address"&gt;address&lt;/a&gt; - Handles address representation, validation and formatting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Guitarbum722/align"&gt;align&lt;/a&gt; - A general purpose application that aligns text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/labstack/gommon/tree/master/bytes"&gt;bytes&lt;/a&gt; - Formats and parses numeric byte values (10K, 2M, 3G, etc.).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ianlopshire/go-fixedwidth"&gt;go-fixedwidth&lt;/a&gt; - Fixed-width text formatting (encoder/decoder with reflection).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dustin/go-humanize"&gt;go-humanize&lt;/a&gt; - Formatters for time, numbers, and memory size to human readable format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bndr/gotabulate"&gt;gotabulate&lt;/a&gt; - Easily pretty-print your tabular data with Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neilotoole/sq"&gt;sq&lt;/a&gt; - Convert data from SQL databases or document formats like CSV or Excel into formats such as JSON, Excel, CSV, HTML, Markdown, XML, and YAML.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/isbm/textwrap"&gt;textwrap&lt;/a&gt; - Wraps text at end of lines. Implementation of &lt;code&gt;textwrap&lt;/code&gt; module from Python.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Markup Languages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mmalcek/bafi"&gt;bafi&lt;/a&gt; - Universal JSON, BSON, YAML, XML translator to ANY format using templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CalebQ42/bbConvert"&gt;bbConvert&lt;/a&gt; - Converts bbCode to HTML that allows you to add support for custom bbCode tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/russross/blackfriday"&gt;blackfriday&lt;/a&gt; - Markdown processor in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/drewstinnett/go-output-format"&gt;go-output-format&lt;/a&gt; - Output go structures into multiple formats (YAML/JSON/etc) in your command line app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pelletier/go-toml"&gt;go-toml&lt;/a&gt; - Go library for the TOML format with query support and handy cli tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuin/goldmark"&gt;goldmark&lt;/a&gt; - A Markdown parser written in Go. Easy to extend, standard (CommonMark) compliant, well structured.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andrewstuart/goq"&gt;goq&lt;/a&gt; - Declarative unmarshalling of HTML using struct tags with jQuery syntax (uses GoQuery).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JohannesKaufmann/html-to-markdown"&gt;html-to-markdown&lt;/a&gt; - Convert HTML to Markdown. Even works with entire websites and can be extended through rules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antchfx/htmlquery"&gt;htmlquery&lt;/a&gt; - An XPath query package for HTML, lets you extract data or evaluate from HTML documents by an XPath expression.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/htmlyaml"&gt;htmlyaml&lt;/a&gt; - Rich rendering of YAML as HTML in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/htree"&gt;htree&lt;/a&gt; - Traverse, navigate, filter, and otherwise process trees of &lt;a href="https://pkg.go.dev/golang.org/x/net/html#Node"&gt;html.Node&lt;/a&gt; objects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/clbanning/mxj"&gt;mxj&lt;/a&gt; - Encode / decode XML as JSON or map[string]interface{}; extract values with dot-notation paths and wildcards. Replaces x2j and j2x packages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BurntSushi/toml"&gt;toml&lt;/a&gt; - TOML configuration format (encoder/decoder with reflection).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Parsers/Encoders/Decoders&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sbstjn/allot"&gt;allot&lt;/a&gt; - Placeholder and wildcard text parsing for CLI tools and bots.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aerogo/codetree"&gt;codetree&lt;/a&gt; - Parses indented code (python, pixy, scarlet, etc.) and returns a tree structure.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mingrammer/commonregex"&gt;commonregex&lt;/a&gt; - A collection of common regular expressions for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ockam-network/did"&gt;did&lt;/a&gt; - DID (Decentralized Identifiers) Parser and Stringer in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hscells/doi"&gt;doi&lt;/a&gt; - Document object identifier (doi) parser in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/editorconfig/editorconfig-core-go"&gt;editorconfig-core-go&lt;/a&gt; - Editorconfig file parser and manipulator for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mickep76/encdec"&gt;encdec&lt;/a&gt; - Package provides a generic interface to encoders and decoders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elliotwutingfeng/go-fasttld"&gt;go-fasttld&lt;/a&gt; - High performance effective top level domains (eTLD) extraction module.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adrianmo/go-nmea"&gt;go-nmea&lt;/a&gt; - NMEA parser library for the Go language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/go-querystring"&gt;go-querystring&lt;/a&gt; - Go library for encoding structs into URL query parameters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emersion/go-vcard"&gt;go-vcard&lt;/a&gt; - Parse and format vCard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yassinebenaid/godump"&gt;godump&lt;/a&gt; - Pretty print any GO variable with ease, an alternative to Go's &lt;code&gt;fmt.Printf("%#v")&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goforj/godump"&gt;godump (goforj)&lt;/a&gt; - Pretty-print Go structs with Laravel/Symfony-style dumps, full type info, colorized CLI output, cycle detection, and private field access.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mmcdole/gofeed"&gt;gofeed&lt;/a&gt; - Parse RSS and Atom feeds in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/awalterschulze/gographviz"&gt;gographviz&lt;/a&gt; - Parses the Graphviz DOT language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/polera/gonameparts"&gt;gonameparts&lt;/a&gt; - Parses human names into individual name parts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Wing924/ltsv"&gt;ltsv&lt;/a&gt; - High performance &lt;a href="http://ltsv.org/"&gt;LTSV (Labeled Tab Separated Value)&lt;/a&gt; reader for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/avito-tech/normalize"&gt;normalize&lt;/a&gt; - Sanitize, normalize and compare fuzzy text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nproc/parseargs-go"&gt;parseargs-go&lt;/a&gt; - string argument parser that understands quotes and backslashes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/askeladdk/prattle"&gt;prattle&lt;/a&gt; - Scan and parse LL(1) grammars simply and efficiently.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mvdan/sh"&gt;sh&lt;/a&gt; - Shell parser and formatter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bzick/tokenizer"&gt;tokenizer&lt;/a&gt; - Parse any string, slice or infinite buffer to any tokens.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygrunwald/vdf"&gt;vdf&lt;/a&gt; - A Lexer and Parser for Valves Data Format (known as vdf) written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/olebedev/when"&gt;when&lt;/a&gt; - Natural EN and RU language date/time parser with pluggable rules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stackerzzq/xj2go"&gt;xj2go&lt;/a&gt; - Convert xml or json to go struct.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Regular Expressions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alixaxel/genex"&gt;genex&lt;/a&gt; - Count and expand Regular Expressions into all matching Strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/IGLOU-EU/go-wildcard"&gt;go-wildcard&lt;/a&gt; - Simple and lightweight wildcard pattern matching.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zach-klippenstein/goregen"&gt;goregen&lt;/a&gt; - Library for generating random strings from regular expressions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oriser/regroup"&gt;regroup&lt;/a&gt; - Match regex expression named groups into go struct using struct tags and automatic parsing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hedhyw/rex"&gt;rex&lt;/a&gt; - Regular expressions builder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Sanitation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microcosm-cc/bluemonday"&gt;bluemonday&lt;/a&gt; - HTML Sanitizer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JoshuaDoes/gofuckyourself"&gt;gofuckyourself&lt;/a&gt; - A sanitization-based swear filter for Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Scrapers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asciimoo/colly"&gt;colly&lt;/a&gt; - Fast and Elegant Scraping Framework for Gophers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/slotix/dataflowkit"&gt;dataflowkit&lt;/a&gt; - Web scraping Framework to turn websites into structured data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kkyr/go-recipe"&gt;go-recipe&lt;/a&gt; - A package for scraping recipes from websites.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aafeher/go-sitemap-parser"&gt;go-sitemap-parser&lt;/a&gt; - Go language library for parsing Sitemaps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PuerkitoBio/goquery"&gt;GoQuery&lt;/a&gt; - GoQuery brings a syntax and a set of features similar to jQuery to the Go language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/foolin/pagser"&gt;pagser&lt;/a&gt; - Pagser is a simple, extensible, configurable parse and deserialize html page to struct based on goquery and struct tags for golang crawler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zoomio/tagify"&gt;Tagify&lt;/a&gt; - Produces a set of tags from given source.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cyucelen/walker"&gt;walker&lt;/a&gt; - Seamlessly fetch paginated data from any source. Simple and high performance API scraping included.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mvdan/xurls"&gt;xurls&lt;/a&gt; - Extract urls from text.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;RSS&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eduncan911/podcast"&gt;podcast&lt;/a&gt; - iTunes Compliant and RSS 2.0 Podcast Generator in Golang&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Utility/Miscellaneous&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/go-runewidth"&gt;go-runewidth&lt;/a&gt; - Functions to get fixed width of the character or string.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codemodus/kace"&gt;kace&lt;/a&gt; - Common case conversions covering common initialisms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/duke-git/lancet"&gt;lancet&lt;/a&gt; - A comprehensive, Lodash-like utility library for Go&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/striker2000/petrovich"&gt;petrovich&lt;/a&gt; - Petrovich is the library which inflects Russian names to given grammatical case.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yourbasic/radix"&gt;radix&lt;/a&gt; - Fast string sorting algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Dynom/TySug"&gt;TySug&lt;/a&gt; - Alternative suggestions with respect to keyboard layouts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arunsupe/semantic-grep"&gt;w2vgrep&lt;/a&gt; - A semantic grep tool using word embeddings to find semantically similar matches. For example, searching for "death" will find "dead", "killing", "murder".&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Third-party APIs&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for accessing third party APIs.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mehanizm/airtable"&gt;airtable&lt;/a&gt; - Go client library for the &lt;a href="https://airtable.com/api"&gt;Airtable API&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChimeraCoder/anaconda"&gt;anaconda&lt;/a&gt; - Go client library for the Twitter 1.1 API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Kachit/appstore-sdk-go"&gt;appstore-sdk-go&lt;/a&gt; - Unofficial Golang SDK for AppStore Connect API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chainifynet/aws-encryption-sdk-go"&gt;aws-encryption-sdk-go&lt;/a&gt; - Unofficial Go SDK implementation of the &lt;a href="https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/index.html"&gt;AWS Encryption SDK&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws/aws-sdk-go-v2"&gt;aws-sdk-go&lt;/a&gt; - The official AWS SDK for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OTA-Insight/bqwriter"&gt;bqwriter&lt;/a&gt; - High Level Go Library to write data into &lt;a href="https://cloud.google.com/bigquery"&gt;Google BigQuery&lt;/a&gt; at a high throughout.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/naegelejd/brewerydb"&gt;brewerydb&lt;/a&gt; - Go library for accessing the BreweryDB API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygrunwald/cachet"&gt;cachet&lt;/a&gt; - Go client library for &lt;a href="https://cachethq.io/"&gt;Cachet (open source status page system)&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jszwedko/go-circleci"&gt;circleci&lt;/a&gt; - Go client library for interacting with CircleCI's API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samuelcouch/clarifai"&gt;clarifai&lt;/a&gt; - Go client library for interfacing with the Clarifai API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codeship/codeship-go"&gt;codeship-go&lt;/a&gt; - Go client library for interacting with Codeship's API v2.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coinpaprika/coinpaprika-api-go-client"&gt;coinpaprika-go&lt;/a&gt; - Go client library for interacting with Coinpaprika's API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rinchsan/device-check-go"&gt;device-check-go&lt;/a&gt; - Go client library for interacting with &lt;a href="https://developer.apple.com/documentation/devicecheck"&gt;iOS DeviceCheck API&lt;/a&gt; v1.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bwmarrin/discordgo"&gt;discordgo&lt;/a&gt; - Go bindings for the Discord Chat API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/switchupcb/disgo"&gt;disgo&lt;/a&gt; - Go API Wrapper for the Discord API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Kachit/dusupay-sdk-go"&gt;dusupay-sdk-go&lt;/a&gt; - Unofficial Dusupay payment gateway API Client for Go&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/onrik/ethrpc"&gt;ethrpc&lt;/a&gt; - Go bindings for Ethereum JSON RPC API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huandu/facebook"&gt;facebook&lt;/a&gt; - Go Library that supports the Facebook Graph API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Kachit/fasapay-sdk-go"&gt;fasapay-sdk-go&lt;/a&gt; - Unofficial Fasapay payment gateway XML API Client for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maddevsio/fcm"&gt;fcm&lt;/a&gt; - Go library for Firebase Cloud Messaging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emiddleton/gads"&gt;gads&lt;/a&gt; - Google Adwords Unofficial API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aorioli/gcm"&gt;gcm&lt;/a&gt; - Go library for Google Cloud Messaging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codingsince1985/geo-golang"&gt;geo-golang&lt;/a&gt; - Go Library to access &lt;a href="https://developers.google.com/maps/documentation/geocoding/intro"&gt;Google Maps&lt;/a&gt;, &lt;a href="https://developer.mapquest.com/documentation/api/geocoding/"&gt;MapQuest&lt;/a&gt;, &lt;a href="https://nominatim.org/release-docs/latest/api/Overview/"&gt;Nominatim&lt;/a&gt;, &lt;a href="https://opencagedata.com/api"&gt;OpenCage&lt;/a&gt;, &lt;a href="https://msdn.microsoft.com/en-us/library/ff701715.aspx"&gt;Bing&lt;/a&gt;, &lt;a href="https://www.mapbox.com/developers/api/geocoding/"&gt;Mapbox&lt;/a&gt;, and &lt;a href="https://wiki.openstreetmap.org/wiki/Nominatim"&gt;OpenStreetMap&lt;/a&gt; geocoding / reverse geocoding APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/go-github"&gt;github&lt;/a&gt; - Go library for accessing the GitHub REST API v3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shurcooL/githubql"&gt;githubql&lt;/a&gt; - Go library for accessing the GitHub GraphQL API v4.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ctreminiom/go-atlassian"&gt;go-atlassian&lt;/a&gt; - Go library for accessing the &lt;a href="https://www.atlassian.com/enterprise/cloud"&gt;Atlassian Cloud&lt;/a&gt; services (Jira, Jira Service Management, Jira Agile, Confluence, Admin Cloud)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/circa10a/go-aws-news"&gt;go-aws-news&lt;/a&gt; - Go application and library to fetch what's new from AWS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/axelspringer/go-chronos"&gt;go-chronos&lt;/a&gt; - Go library for interacting with the &lt;a href="https://mesos.github.io/chronos/"&gt;Chronos&lt;/a&gt; Job Scheduler&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygrunwald/go-gerrit"&gt;go-gerrit&lt;/a&gt; - Go client library for &lt;a href="https://www.gerritcodereview.com/"&gt;Gerrit Code Review&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PaulRosset/go-hacknews"&gt;go-hacknews&lt;/a&gt; - Tiny Go client for HackerNews API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abdullahselek/go-here"&gt;go-here&lt;/a&gt; - Go client library around the HERE location based APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wneessen/go-hibp"&gt;go-hibp&lt;/a&gt; - Simple Go binding to the "Have I Been Pwned" APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/koffeinsource/go-imgur"&gt;go-imgur&lt;/a&gt; - Go client library for &lt;a href="https://imgur.com"&gt;imgur&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygrunwald/go-jira"&gt;go-jira&lt;/a&gt; - Go client library for &lt;a href="https://www.atlassian.com/software/jira"&gt;Atlassian JIRA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-lark/lark"&gt;go-lark&lt;/a&gt; - An easy-to-use unofficial SDK for &lt;a href="https://open.feishu.cn/"&gt;Feishu&lt;/a&gt; and &lt;a href="https://open.larksuite.com/"&gt;Lark&lt;/a&gt; Open Platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gambol99/go-marathon"&gt;go-marathon&lt;/a&gt; - Go library for interacting with Mesosphere's Marathon PAAS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nstratos/go-myanimelist"&gt;go-myanimelist&lt;/a&gt; - Go client library for accessing the &lt;a href="https://myanimelist.net/apiconfig/references/api/v2"&gt;MyAnimeList API&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sashabaranov/go-openai"&gt;go-openai&lt;/a&gt; - OpenAI ChatGPT, DALL¬∑E, Whisper API library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/manuelbcd/go-openproject"&gt;go-openproject&lt;/a&gt; - Go client library for interacting with &lt;a href="https://docs.openproject.org/api/"&gt;OpenProject&lt;/a&gt; API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rbretecher/go-postman-collection"&gt;go-postman-collection&lt;/a&gt; - Go module to work with &lt;a href="https://learning.getpostman.com/docs/postman/collections/creating-collections/"&gt;Postman Collections&lt;/a&gt; (compatible with Insomnia).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mvrilo/go-redoc"&gt;go-redoc&lt;/a&gt; - Embedded OpenAPI/Swagger documentation ui for Go using &lt;a href="https://redocly.com/"&gt;ReDoc&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chriscross0/go-restcountries"&gt;go-restcountries&lt;/a&gt; - Go library for the &lt;a href="https://countrylayer.com/"&gt;REST Countries API&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/k-capehart/go-salesforce"&gt;go-salesforce&lt;/a&gt; - Go client library for interacting with the &lt;a href="https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_list.htm"&gt;Salesforce REST API&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/esurdam/go-sophos"&gt;go-sophos&lt;/a&gt; - Go client library for the &lt;a href="https://www.sophos.com/en-us/medialibrary/PDFs/documentation/UTMonAWS/Sophos-UTM-RESTful-API.pdf?la=en"&gt;Sophos UTM REST API&lt;/a&gt; with zero dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/esurdam/go-swagger-ui"&gt;go-swagger-ui&lt;/a&gt; - Go library containing precompiled &lt;a href="https://swagger.io/tools/swagger-ui/"&gt;Swagger UI&lt;/a&gt; for serving swagger json.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/toby3d/telegraph"&gt;go-telegraph&lt;/a&gt; - Telegraph publishing platform API client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygrunwald/go-trending"&gt;go-trending&lt;/a&gt; - Go library for accessing &lt;a href="https://github.com/trending"&gt;trending repositories&lt;/a&gt; and &lt;a href="https://github.com/trending/developers"&gt;developers&lt;/a&gt; at Github.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hbagdi/go-unsplash"&gt;go-unsplash&lt;/a&gt; - Go client library for the &lt;a href="https://unsplash.com"&gt;Unsplash.com&lt;/a&gt; API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nishanths/go-xkcd"&gt;go-xkcd&lt;/a&gt; - Go client for the xkcd API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/adrienK/go-yapla"&gt;go-yapla&lt;/a&gt; - Go client library for the Yapla v2.0 API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/staskobzar/goagi"&gt;goagi&lt;/a&gt; - Go library to build Asterisk PBX agi/fastagi applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/staskobzar/goami2"&gt;goami2&lt;/a&gt; - AMI v2 library for Asterisk PBX.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/FreeLeh/GoFreeDB"&gt;GoFreeDB&lt;/a&gt; - Golang library providing common and simple database abstractions on top of Google Sheets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/groovili/gogtrends"&gt;gogtrends&lt;/a&gt; - Google Trends Unofficial API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cyruzin/golang-tmdb"&gt;golang-tmdb&lt;/a&gt; - Golang wrapper for The Movie Database API v3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mamal72/golyrics"&gt;golyrics&lt;/a&gt; - Golyrics is a Go library to fetch music lyrics data from the Wikia website.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MonaxGT/gomalshare"&gt;gomalshare&lt;/a&gt; - Go library MalShare API &lt;a href="https://www.malshare.com/"&gt;malshare.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/michiwend/gomusicbrainz"&gt;GoMusicBrainz&lt;/a&gt; - Go MusicBrainz WS2 client library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/google-api-go-client"&gt;google&lt;/a&gt; - Auto-generated Google APIs for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chonthu/go-google-analytics"&gt;google-analytics&lt;/a&gt; - Simple wrapper for easy google analytics reporting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GoogleCloudPlatform/gcloud-golang"&gt;google-cloud&lt;/a&gt; - Google Cloud APIs Go Client Library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/utekaravinash/gopaapi5"&gt;gopaapi5&lt;/a&gt; - Go Client Library for &lt;a href="https://webservices.amazon.com/paapi5/documentation/"&gt;Amazon Product Advertising API 5.0&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/navidys/gopensky"&gt;gopensky&lt;/a&gt; - Go client implementation for &lt;a href="https://opensky-network.org/"&gt;OpenSKY Network&lt;/a&gt; live's API (airspace ADS-B and Mode S data).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/koltyakov/gosip"&gt;gosip&lt;/a&gt; - Client library for SharePoint.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jsgilmore/gostorm"&gt;gostorm&lt;/a&gt; - GoStorm is a Go library that implements the communications protocol required to write Storm spouts and Bolts in Go that communicate with the Storm shells.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andybons/hipchat"&gt;hipchat&lt;/a&gt; - This project implements a golang client library for the Hipchat API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daneharrigan/hipchat"&gt;hipchat (xmpp)&lt;/a&gt; - A golang package to communicate with HipChat over XMPP.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Henry-Sarabia/igdb"&gt;igdb&lt;/a&gt; - Go client for the &lt;a href="https://api.igdb.com/"&gt;Internet Game Database API&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ip2location/ip2location-io-go"&gt;ip2location-io-go&lt;/a&gt; - Go wrapper for the IP2Location.io API &lt;a href="https://www.ip2location.io/"&gt;IP2Location.io&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/icelain/jokeapi"&gt;jokeapi-go&lt;/a&gt; - Go client for &lt;a href="https://sv443.net/jokeapi/v2/"&gt;JokeAPI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chyroc/lark"&gt;lark&lt;/a&gt; - &lt;a href="https://open.feishu.cn/"&gt;Feishu&lt;/a&gt;/&lt;a href="https://open.larksuite.com/"&gt;Lark&lt;/a&gt; Open API Go SDK, Support ALL Open API and Event Callback.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ansd/lastpass-go"&gt;lastpass-go&lt;/a&gt; - Go client library for the &lt;a href="https://www.lastpass.com/"&gt;LastPass&lt;/a&gt; API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/clevabit/libgoffi"&gt;libgoffi&lt;/a&gt; - Library adapter toolbox for native &lt;a href="https://sourceware.org/libffi/"&gt;libffi&lt;/a&gt; integration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Medium/medium-sdk-go"&gt;Medium&lt;/a&gt; - Golang SDK for Medium's OAuth2 API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygrunwald/megos"&gt;megos&lt;/a&gt; - Client library for accessing an &lt;a href="https://mesos.apache.org/"&gt;Apache Mesos&lt;/a&gt; cluster.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/minio/minio-go"&gt;minio-go&lt;/a&gt; - Minio Go Library for Amazon S3 compatible cloud storage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dukex/mixpanel"&gt;mixpanel&lt;/a&gt; - Mixpanel is a library for tracking events and sending Mixpanel profile updates to Mixpanel from your go applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jellydator/newsapi-go"&gt;newsapi-go&lt;/a&gt; - Go client for &lt;a href="https://newsapi.org/"&gt;NewsAPI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/otiai10/openaigo"&gt;openaigo&lt;/a&gt; - OpenAI GPT3/GPT3.5 ChatGPT API client library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mxpv/patreon-go"&gt;patreon-go&lt;/a&gt; - Go library for Patreon API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/logpacker/PayPal-Go-SDK"&gt;paypal&lt;/a&gt; - Wrapper for PayPal payment API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/playlyfe/playlyfe-go-sdk"&gt;playlyfe&lt;/a&gt; - The Playlyfe Rest API Go SDK.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gregdel/pushover"&gt;pushover&lt;/a&gt; - Go wrapper for the Pushover API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dimuska139/rawg-sdk-go"&gt;rawg-sdk-go&lt;/a&gt; - Go library for the &lt;a href="https://rawg.io/"&gt;RAWG Video Games Database&lt;/a&gt; API&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapito/go-shopify"&gt;shopify&lt;/a&gt; - Go Library to make CRUD request to the Shopify API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rhnvrm/simples3"&gt;simples3&lt;/a&gt; - Simple no frills AWS S3 Library using REST with V4 Signing written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/slack-go/slack"&gt;slack&lt;/a&gt; - Slack API in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sergiotapia/smitego"&gt;smite&lt;/a&gt; - Go package to wraps access to the Smite game API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapito/go-spotify"&gt;spotify&lt;/a&gt; - Go Library to access Spotify WEB API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sostronk/go-steam"&gt;steam&lt;/a&gt; - Go Library to interact with Steam game servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stripe/stripe-go"&gt;stripe&lt;/a&gt; - Go client for the Stripe API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zc2638/swag"&gt;swag&lt;/a&gt; - No comments, simple go wrapper to create swagger 2.0 compatible APIs. Support most routing frameworks, such as built-in, gin, chi, mux, echo, httprouter, fasthttp and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dietsche/textbelt"&gt;textbelt&lt;/a&gt; - Go client for the textbelt.com txt messaging API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adlio/trello"&gt;Trello&lt;/a&gt; - Go wrapper for the Trello API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mrbenosborne/tripadvisor-golang"&gt;TripAdvisor&lt;/a&gt; - Go wrapper for the TripAdvisor API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattcunningham/gumblr"&gt;tumblr&lt;/a&gt; - Go wrapper for the Tumblr v2 API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bitfield/uptimerobot"&gt;uptimerobot&lt;/a&gt; - Go wrapper and command-line client for the Uptime Robot v2 API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/verifid/vl-go"&gt;vl-go&lt;/a&gt; - Go client library around the VerifID identity verification layer API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/webhooks"&gt;webhooks&lt;/a&gt; - Webhook receiver for GitHub and Bitbucket.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wit-ai/wit-go"&gt;wit-go&lt;/a&gt; - Go client for wit.ai HTTP API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brunomvsouza/ynab.go"&gt;ynab&lt;/a&gt; - Go wrapper for the YNAB API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gojuno/go-zooz"&gt;zooz&lt;/a&gt; - Go client for the Zooz API.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Utilities&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;General utilities and tools to make your life easier.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maxbolgarin/abstract"&gt;abstract&lt;/a&gt; - Abstractions and utilities to get rid of boilerplate code in business logic.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/topfreegames/apm"&gt;apm&lt;/a&gt; - Process manager for Golang applications with an HTTP API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/icza/backscanner"&gt;backscanner&lt;/a&gt; - A scanner similar to bufio.Scanner, but it reads and returns lines in reverse order, starting at a given position and going backward.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/itchyny/bed"&gt;bed&lt;/a&gt; - A Vim-like binary editor written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Henry-Sarabia/blank"&gt;blank&lt;/a&gt; - Verify or remove blanks and whitespace from strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sinhashubham95/bleep"&gt;bleep&lt;/a&gt; - Perform any number of actions on any set of OS signals in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tmrts/boilr"&gt;boilr&lt;/a&gt; - Blazingly fast CLI tool for creating projects from boilerplate templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miniscruff/changie"&gt;changie&lt;/a&gt; - Automated changelog tool for preparing releases with lots of customization options.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antham/chyle"&gt;chyle&lt;/a&gt; - Changelog generator using a git repository with multiple configuration possibilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cep21/circuit"&gt;circuit&lt;/a&gt; - An efficient and feature complete Hystrix like Go implementation of the circuit breaker pattern.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rubyist/circuitbreaker"&gt;circuitbreaker&lt;/a&gt; - Circuit Breakers in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang-design/clipboard"&gt;clipboard&lt;/a&gt; - üìã cross-platform clipboard package in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonboulle/clockwork"&gt;clockwork&lt;/a&gt; - A simple fake clock for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SimonBaeumer/cmd"&gt;cmd&lt;/a&gt; - Library for executing shell commands on osx, windows and linux.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Boeing/config-file-validator"&gt;config-file-validator&lt;/a&gt; - Cross Platform tool to validate configuration files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maxbolgarin/contem"&gt;contem&lt;/a&gt; - Drop-in context.Context replacement for graceful shutdown Go applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/syntaqx/cookie"&gt;cookie&lt;/a&gt; - Cookie struct parsing and helper package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jutkko/copy-pasta"&gt;copy-pasta&lt;/a&gt; - Universal multi-workstation clipboard that uses S3 like backend for the storage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/biter777/countries"&gt;countries&lt;/a&gt; - Full implementation of ISO-3166-1, ISO-4217, ITU-T E.164, Unicode CLDR and IANA ccTLD standards.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pioz/countries"&gt;countries&lt;/a&gt; - All you need when you are working with countries in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/create-go-app/cli"&gt;create-go-app&lt;/a&gt; - A powerful CLI for create a new production-ready project with backend (Golang), frontend (JavaScript, TypeScript) &amp;amp; deploy automation (Ansible, Docker) by running one command.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Gituser143/cryptgo"&gt;cryptgo&lt;/a&gt; - Crytpgo is a TUI based application written purely in Go to monitor and observe cryptocurrency prices in real time!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bcicen/ctop"&gt;ctop&lt;/a&gt; - &lt;a href="https://ctop.sh"&gt;Top-like&lt;/a&gt; interface (e.g. htop) for container metrics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/posener/ctxutil"&gt;ctxutil&lt;/a&gt; - A collection of utility functions for contexts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shockerli/cvt"&gt;cvt&lt;/a&gt; - Easy and safe convert any value to another type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikogura/dbt"&gt;dbt&lt;/a&gt; - A framework for running self-updating signed binaries from a central, trusted repository.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vrecan/death"&gt;Death&lt;/a&gt; - Managing go application shutdown with signals.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/floatdrop/debounce"&gt;debounce&lt;/a&gt; - A zero-allocation debouncer written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/derekparker/delve"&gt;delve&lt;/a&gt; - Go debugger.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wagoodman/dive"&gt;dive&lt;/a&gt; - A tool for exploring each layer in a Docker image.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kirillDanshin/dlog"&gt;dlog&lt;/a&gt; - Compile-time controlled logger to make your release smaller without removing debug calls.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/megaease/easeprobe"&gt;EaseProbe&lt;/a&gt; - A simple, standalone, and lightWeight tool that can do health/status checking daemon, support HTTP/TCP/SSH/Shell/Client/... probes, and Slack/Discord/Telegram/SMS... notification.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reugn/equalizer"&gt;equalizer&lt;/a&gt; - Quota manager and rate limiter collection for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cristianoliveira/ergo"&gt;ergo&lt;/a&gt; - The management of multiple local services running over different ports made easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nullne/evaluator"&gt;evaluator&lt;/a&gt; - Evaluate an expression dynamically based on s-expression. It's simple and easy to extend.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/failsafe-go/failsafe-go"&gt;Failsafe-go&lt;/a&gt; - Fault tolerance and resilience patterns for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/h2non/filetype"&gt;filetype&lt;/a&gt; - Small package to infer the file type checking the magic numbers signature.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yaronsumel/filler"&gt;filler&lt;/a&gt; - small utility to fill structs using "fill" tag.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gookit/filter"&gt;filter&lt;/a&gt; - provide filtering, sanitizing, and conversion of Go data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/junegunn/fzf"&gt;fzf&lt;/a&gt; - Command-line fuzzy finder written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/generate"&gt;generate&lt;/a&gt; - runs go generate recursively on a specified path or environment variable and can filter by regex.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antham/ghokin"&gt;ghokin&lt;/a&gt; - Parallelized formatter with no external dependencies for gherkin (cucumber, behat...).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/git-time-metric/gtm"&gt;git-time-metric&lt;/a&gt; - Simple, seamless, lightweight time tracking for Git.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kazhuravlev/git-tools"&gt;git-tools&lt;/a&gt; - Tool to help manage git tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/isacikgoz/gitbatch"&gt;gitbatch&lt;/a&gt; - manage your git repositories in one place.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/knbr13/gitcs/"&gt;gitcs&lt;/a&gt; - Git Commits Visualizer, CLI tool to visualize your Git commits on your local machine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sinhashubham95/go-actuator"&gt;go-actuator&lt;/a&gt; - Production ready features for Go based web frameworks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asticode/go-astitodo"&gt;go-astitodo&lt;/a&gt; - Parse TODOs in your GO code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wendigo/go-bind-plugin"&gt;go-bind-plugin&lt;/a&gt; - go:generate tool for wrapping symbols exported by golang plugins (1.8 only).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gabstv/go-bsdiff"&gt;go-bsdiff&lt;/a&gt; - Pure Go bsdiff and bspatch libraries and CLI tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prashantgupta24/go-clip"&gt;go-clip&lt;/a&gt; - A minimalistic clipboard manager for Mac.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Eun/go-convert"&gt;go-convert&lt;/a&gt; - Package go-convert enables you to convert a value into another type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mikekonan/go-countries"&gt;go-countries&lt;/a&gt; - Lightweight lookup over ISO-3166 codes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ungerik/go-dry"&gt;go-dry&lt;/a&gt; - DRY (don't repeat yourself) package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deatil/go-events"&gt;go-events&lt;/a&gt; - A go event and event'subscribe package, like wordpress hook functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thoas/go-funk"&gt;go-funk&lt;/a&gt; - Modern Go utility library which provides helpers (map, find, contains, filter, chunk, reverse, ...).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Talento90/go-health"&gt;go-health&lt;/a&gt; - Health package simplifies the way you add health check to your services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mozillazg/go-httpheader"&gt;go-httpheader&lt;/a&gt; - Go library for encoding structs into Header fields.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/karl-cardenas-coding/go-lambda-cleanup"&gt;go-lambda-cleanup&lt;/a&gt; - A CLI for removing unused or previous versions of AWS Lambdas.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viney-shih/go-lock"&gt;go-lock&lt;/a&gt; - go-lock is a lock library implementing read-write mutex and read-write trylock without starvation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PhakornKiong/go-pattern-match"&gt;go-pattern-match&lt;/a&gt; - A Pattern matching library inspired by ts-pattern.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chenquan/go-pkg"&gt;go-pkg&lt;/a&gt; - A go toolkit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mvmaasakkers/go-problemdetails"&gt;go-problemdetails&lt;/a&gt; - Go package for working with Problem Details.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/piglig/go-qr"&gt;go-qr&lt;/a&gt; - A native, high-quality and minimalistic QR code generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/beefsack/go-rate"&gt;go-rate&lt;/a&gt; - Timed rate limiter for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ikeikeikeike/go-sitemap-generator"&gt;go-sitemap-generator&lt;/a&gt; - XML Sitemap generator written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sadlil/go-trigger"&gt;go-trigger&lt;/a&gt; - Go-lang global event triggerer, Register Events with an id and trigger the event from anywhere from your project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rajnandan1/go-tripper"&gt;go-tripper&lt;/a&gt; - Tripper is a circuit breaker package for Go that allows you to circuit and control the status of circuits.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mikekonan/go-types"&gt;go-type&lt;/a&gt; - Library providing Go types for store/validation and transfer of ISO-4217, ISO-3166, and other types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carlescere/goback"&gt;goback&lt;/a&gt; - Go simple exponential backoff package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zerosnake0/goctx"&gt;goctx&lt;/a&gt; - Get your context value with high performance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VividCortex/godaemon"&gt;godaemon&lt;/a&gt; - Utility to write daemons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dropbox/godropbox"&gt;godropbox&lt;/a&gt; - Common libraries for writing Go services/applications from Dropbox.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tiendc/gofn"&gt;gofn&lt;/a&gt; - High performance utility functions written using Generics for Go 1.18+.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/msempere/golarm"&gt;golarm&lt;/a&gt; - Fire alarms with system events.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mlimaloureiro/golog"&gt;golog&lt;/a&gt; - Easy and lightweight CLI tool to time track your tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bndr/gopencils"&gt;gopencils&lt;/a&gt; - Small and simple package to easily consume REST APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/michiwend/goplaceholder"&gt;goplaceholder&lt;/a&gt; - a small golang lib to generate placeholder images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philipjkim/goreadability"&gt;goreadability&lt;/a&gt; - Webpage summary extractor using Facebook Open Graph and arc90's readability.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goreleaser/goreleaser"&gt;goreleaser&lt;/a&gt; - Deliver Go binaries as fast and easily as possible.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wgliang/goreporter"&gt;goreporter&lt;/a&gt; - Golang tool that does static analysis, unit testing, code review and generate code quality report.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linxGnu/goseaweedfs"&gt;goseaweedfs&lt;/a&gt; - SeaweedFS client library with almost full features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ik5/gostrutils"&gt;gostrutils&lt;/a&gt; - Collections of string manipulation and conversion functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/subosito/gotenv"&gt;gotenv&lt;/a&gt; - Load environment variables from &lt;code&gt;.env&lt;/code&gt; or any &lt;code&gt;io.Reader&lt;/code&gt; in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maja42/goval"&gt;goval&lt;/a&gt; - Evaluate arbitrary expressions in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skovtunenko/graterm"&gt;graterm&lt;/a&gt; - Provides primitives to perform ordered (sequential/concurrent) GRAceful TERMination (aka shutdown) in Go application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pesos/grofer"&gt;grofer&lt;/a&gt; - A system and resource monitoring tool written in Golang!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/novalagung/gubrak"&gt;gubrak&lt;/a&gt; - Golang utility library with syntactic sugar. It's like lodash, but for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miguelpragier/handy"&gt;handy&lt;/a&gt; - Many utilities and helpers like string handlers/formatters and validators.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kazhuravlev/healthcheck"&gt;healthcheck&lt;/a&gt; - A simple yet powerful readiness test for Kubernetes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/guumaster/hostctl"&gt;hostctl&lt;/a&gt; - A CLI tool to manage /etc/hosts with easy commands.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/htcat/htcat"&gt;htcat&lt;/a&gt; - Parallel and Pipelined HTTP GET Utility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/github/hub"&gt;hub&lt;/a&gt; - wrap git commands with additional functionality to interact with github from the terminal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/immortal/immortal"&gt;immortal&lt;/a&gt; - *nix cross-platform (OS agnostic) supervisor.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NicoNex/jet"&gt;jet&lt;/a&gt; - Just Edit Text: a fast and powerful tool for finding and replacing file content and names using regular expressions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/clevergo/jsend"&gt;jsend&lt;/a&gt; - JSend's implementation written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hedhyw/json-log-viewer"&gt;json-log-viewer&lt;/a&gt; - Interactive viewer for JSON logs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gsamokovarov/jump"&gt;jump&lt;/a&gt; - Jump helps you navigate faster by learning your habits.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kazhuravlev/just"&gt;just&lt;/a&gt; - Just a collection of useful functions for working with generic data structures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wesovilabs/koazee"&gt;koazee&lt;/a&gt; - Library inspired in Lazy evaluation and functional programming that takes the hassle out of working with arrays.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maxbolgarin/lang"&gt;lang&lt;/a&gt; - Generic one-liners to work with variables, slices and maps without boilerplate code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aplescia-chwy/lets-go"&gt;lets-go&lt;/a&gt; - Go module that provides common utilities for Cloud Native REST API development. Also contains AWS Specific utilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mennanov/limiters"&gt;limiters&lt;/a&gt; - Rate limiters for distributed applications in Golang with configurable back-ends and distributed locks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/lo"&gt;lo&lt;/a&gt; - A Lodash like Go library based on Go 1.18+ Generics (map, filter, contains, find...)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kazu/loncha"&gt;loncha&lt;/a&gt; - A high-performance slice Utilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jaschaephraim/lrserver"&gt;lrserver&lt;/a&gt; - LiveReload server for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alajmo/mani"&gt;mani&lt;/a&gt; - CLI tool to help you manage multiple repositories.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/minio/mc"&gt;mc&lt;/a&gt; - Minio Client provides minimal tools to work with Amazon S3 compatible cloud storage and filesystems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/imdario/mergo"&gt;mergo&lt;/a&gt; - Helper to merge structs and maps in Golang. Useful for configuration default values, avoiding messy if-statements.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zRedShift/mimemagic"&gt;mimemagic&lt;/a&gt; - Pure Go ultra performant MIME sniffing library/utility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gabriel-vasile/mimetype"&gt;mimetype&lt;/a&gt; - Package for MIME type detection based on magic numbers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tdewolff/minify"&gt;minify&lt;/a&gt; - Fast minifiers for HTML, CSS, JS, XML, JSON and SVG file formats.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/icza/minquery"&gt;minquery&lt;/a&gt; - MongoDB / mgo.v2 query that supports efficient pagination (cursors to continue listing documents where we left off).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/StabbyCutyou/moldova"&gt;moldova&lt;/a&gt; - Utility for generating random data based on an input template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/davrodpin/mole"&gt;mole&lt;/a&gt; - cli app to easily create ssh tunnels.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gobeam/mongo-go-pagination"&gt;mongo-go-pagination&lt;/a&gt; - Mongodb Pagination for official mongodb/mongo-go-driver package which supports both normal queries and Aggregation pipelines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linxGnu/mssqlx"&gt;mssqlx&lt;/a&gt; - Database client library, proxy for any master slave, master master structures. Lightweight and auto balancing in mind.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VividCortex/multitick"&gt;multitick&lt;/a&gt; - Multiplexor for aligned tickers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/e-dard/netbug"&gt;netbug&lt;/a&gt; - Easy remote profiling of your services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chrispassas/nfdump"&gt;nfdump&lt;/a&gt; - Read nfdump netflow files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pokanop/nostromo"&gt;nostromo&lt;/a&gt; - CLI for building powerful aliases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xta/okrun"&gt;okrun&lt;/a&gt; - go run error steamroller.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/btnguyen2k/olaf"&gt;olaf&lt;/a&gt; - Twitter Snowflake implemented in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adelowo/onecache"&gt;onecache&lt;/a&gt; - Caching library with support for multiple backend stores (Redis, Memcached, filesystem etc).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kazhuravlev/optional"&gt;optional&lt;/a&gt; - Optional struct fields and vars.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maruel/panicparse"&gt;panicparse&lt;/a&gt; - Groups similar goroutines and colorizes stack dump.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexpantyukhin/go-pattern-match"&gt;pattern-match&lt;/a&gt; - Pattern matching library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/peco/peco"&gt;peco&lt;/a&gt; - Simplistic interactive filtering tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arthurkushman/pgo"&gt;pgo&lt;/a&gt; - Convenient functions for PHP community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VividCortex/pm"&gt;pm&lt;/a&gt; - Process (i.e. goroutine) manager with an HTTP API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xorcare/pointer"&gt;pointer&lt;/a&gt; - Package pointer contains helper routines for simplifying the creation of optional fields of basic type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gotidy/ptr"&gt;ptr&lt;/a&gt; - Package that provide functions for simplified creation of pointers from constants of basic types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/webriots/rate"&gt;rate&lt;/a&gt; - High-performance rate limiting library with token bucket and AIMD strategies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zpatrick/rclient"&gt;rclient&lt;/a&gt; - Readable, flexible, simple-to-use client for REST APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tomodian/release"&gt;release&lt;/a&gt; - CLI for Keep-a-changelog formatted changelogs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Unrud/remote-touchpad"&gt;remote-touchpad&lt;/a&gt; - Control mouse and keyboard from a smartphone.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ssgreg/repeat"&gt;repeat&lt;/a&gt; - Go implementation of different backoff strategies useful for retrying operations and heartbeating.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mozillazg/request"&gt;request&lt;/a&gt; - Go HTTP Requests for Humans‚Ñ¢.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ivpusic/rerun"&gt;rerun&lt;/a&gt; - Recompiling and rerunning go apps when source changes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/edermanoel94/rest-go"&gt;rest-go&lt;/a&gt; - A package that provide many helpful methods for working with rest api.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goioc/retro"&gt;retro&lt;/a&gt; - Handy retry-on-error library with extensive flexibility (backoff strategies, caps, etc).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kamilsk/retry"&gt;retry&lt;/a&gt; - The most advanced functional mechanism to perform actions repetitively until successful.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/percolate/retry"&gt;retry&lt;/a&gt; - A simple but highly configurable retry package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thedevsaddam/retry"&gt;retry&lt;/a&gt; - Simple and easy retry mechanism package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shafreeck/retry"&gt;retry&lt;/a&gt; - A pretty simple library to ensure your work to be done.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/avast/retry-go"&gt;retry-go&lt;/a&gt; - Simple library for retry mechanism.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafaeljesus/retry-go"&gt;retry-go&lt;/a&gt; - Retrying made simple and easy for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VividCortex/robustly"&gt;robustly&lt;/a&gt; - Runs functions resiliently, catching and restarting panics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ferama/rospo"&gt;rospo&lt;/a&gt; - Simple and reliable ssh tunnels with embedded ssh server in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blockloop/scan"&gt;scan&lt;/a&gt; - Scan golang &lt;code&gt;sql.Rows&lt;/code&gt; directly to structs, slices, or primitive types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wroge/scan"&gt;scan&lt;/a&gt; - Scan sql rows into any type powered by generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/georgysavva/scany"&gt;scany&lt;/a&gt; - Library for scanning data from a database into Go structs and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/syntaqx/serve"&gt;serve&lt;/a&gt; - A static http server anywhere you need.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joshmedeski/sesh"&gt;sesh&lt;/a&gt; - Sesh is a CLI that helps you create and manage tmux sessions quickly and easily using zoxide.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nofeaturesonlybugs/set"&gt;set&lt;/a&gt; - Performant and flexible struct mapping and loose type conversion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ztrue/shutdown"&gt;shutdown&lt;/a&gt; - App shutdown hooks for &lt;code&gt;os.Signal&lt;/code&gt; handling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chrispassas/silk"&gt;silk&lt;/a&gt; - Read silk netflow files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/psampaz/slice"&gt;slice&lt;/a&gt; - Type-safe functions for common Go slice operations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Henry-Sarabia/sliceconv"&gt;sliceconv&lt;/a&gt; - Slice conversion between primitive types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leaanthony/slicer"&gt;slicer&lt;/a&gt; - Makes working with slices easier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jfcg/sorty"&gt;sorty&lt;/a&gt; - Fast Concurrent / Parallel Sorting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmoiron/sqlx"&gt;sqlx&lt;/a&gt; - provides a set of extensions on top of the excellent built-in database/sql package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rfberaldo/sqlz"&gt;sqlz&lt;/a&gt; - Extension for the database/sql package, adding named queries, struct scanning, and batch operations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shoobyban/sshman"&gt;sshman&lt;/a&gt; - SSH Manager for authorized_keys files on multiple remote servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/janiltonmaciel/statiks"&gt;statiks&lt;/a&gt; - Fast, zero-configuration, static HTTP filer server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asdine/storm"&gt;Storm&lt;/a&gt; - Simple and powerful toolkit for BoltDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PumpkinSeed/structs"&gt;structs&lt;/a&gt; - Implement simple functions to manipulate structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yudppp/throttle"&gt;throttle&lt;/a&gt; - Throttle is an object that will perform exactly one action per duration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andy2046/tik"&gt;tik&lt;/a&gt; - Simple and easy timing wheel package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cyruzin/tome"&gt;tome&lt;/a&gt; - Tome was designed to paginate simple RESTful APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viant/toolbox"&gt;toolbox&lt;/a&gt; - Slice, map, multimap, struct, function, data conversion utilities. Service router, macro evaluator, tokenizer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/esemplastic/unis"&gt;UNIS&lt;/a&gt; - Common Architecture‚Ñ¢ for String Utilities in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/owenthereal/upterm"&gt;upterm&lt;/a&gt; - A tool for developers to share terminal/tmux sessions securely over the web. It‚Äôs perfect for remote pair programming, accessing computers behind NATs/firewalls, remote debugging, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/knq/usql"&gt;usql&lt;/a&gt; - usql is a universal command-line interface for SQL databases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shomali11/util"&gt;util&lt;/a&gt; - Collection of useful utility functions. (strings, concurrency, manipulations, ...).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/watchhttp"&gt;watchhttp&lt;/a&gt; - Run command periodically and expose latest STDOUT or its rich delta as HTTP endpoint.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reugn/wifiqr"&gt;wifiqr&lt;/a&gt; - Wi-Fi QR Code Generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asciimoo/wuzz"&gt;wuzz&lt;/a&gt; - Interactive cli tool for HTTP inspection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/monmohan/xferspdy"&gt;xferspdy&lt;/a&gt; - Xferspdy provides binary diff and patch library in golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/peczenyj/xpool"&gt;xpool&lt;/a&gt; - Yet another golang type safe object pool using generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antham/yogo"&gt;yogo&lt;/a&gt; - Check yopmail mails from command line.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;UUID&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with UUIDs.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rekby/fastuuid"&gt;fastuuid&lt;/a&gt; - Fast generate UUIDv4 as string or bytes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jakehl/goid"&gt;goid&lt;/a&gt; - Generate and Parse RFC4122 compliant V4 UUIDs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twharmon/gouid"&gt;gouid&lt;/a&gt; - Generate cryptographically secure random string IDs with just one allocation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sdrapkin/guid"&gt;guid&lt;/a&gt; - Fast cryptographically safe Guid generator for Go (~10x faster than &lt;code&gt;uuid&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aidarkhanov/nanoid"&gt;nanoid&lt;/a&gt; - A tiny and efficient Go unique string ID generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muyo/sno"&gt;sno&lt;/a&gt; - Compact, sortable and fast unique IDs with embedded metadata.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oklog/ulid"&gt;ulid&lt;/a&gt; - Go implementation of ULID (Universally Unique Lexicographically Sortable Identifier).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/skilstak/code/go/uniq"&gt;uniq&lt;/a&gt; - No hassle safe, fast unique identifiers with commands.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agext/uuid"&gt;uuid&lt;/a&gt; - Generate, encode, and decode UUIDs v1 with fast or cryptographic-quality random node identifier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofrs/uuid"&gt;uuid&lt;/a&gt; - Implementation of Universally Unique Identifier (UUID). Supports both creation and parsing of UUIDs. Actively maintained fork of satori uuid.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/uuid"&gt;uuid&lt;/a&gt; - Go package for UUIDs based on RFC 4122 and DCE 1.1: Authentication and Security Services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ashwingopalsamy/uuidcheck"&gt;uuidcheck&lt;/a&gt; - A tiny, dependency-free Go library that validates UUIDs against standard RFC 4122 formatting, converts UUIDv7() into UTC timestamps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/edwingeng/wuid"&gt;wuid&lt;/a&gt; - An extremely fast globally unique number generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rs/xid"&gt;xid&lt;/a&gt; - Xid is a globally unique id generator library, ready to be safely used directly in your server code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Validation&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for validation.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osamingo/checkdigit"&gt;checkdigit&lt;/a&gt; - Provide check digit algorithms (Luhn, Verhoeff, Damm) and calculators (ISBN, EAN, JAN, UPC, etc.).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tiendc/go-validator"&gt;go-validator&lt;/a&gt; - Validation library using Generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/guiferpa/gody"&gt;gody&lt;/a&gt; - &lt;span&gt;üéà&lt;/span&gt; A lightweight struct validator for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twharmon/govalid"&gt;govalid&lt;/a&gt; - Fast, tag-based validation for structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asaskevich/govalidator"&gt;govalidator&lt;/a&gt; - Validators and sanitizers for strings, numerics, slices and structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thedevsaddam/govalidator"&gt;govalidator&lt;/a&gt; - Validate Golang request data with simple rules. Highly inspired by Laravel's request validation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lyonnee/hvalid"&gt;hvalid&lt;/a&gt; hvalid is a lightweight validation library written in Go language. It provides a custom validator interface and a series of common validation functions to help developers quickly implement data validation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/faceair/jio"&gt;jio&lt;/a&gt; - jio is a json schema validator similar to &lt;a href="https://github.com/hapijs/joi"&gt;joi&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-ozzo/ozzo-validation"&gt;ozzo-validation&lt;/a&gt; - Supports validation of various data types (structs, strings, maps, slices, etc.) with configurable and extensible validation rules specified in usual code constructs instead of struct tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gookit/validate"&gt;validate&lt;/a&gt; - Go package for data validation and filtering. support validate Map, Struct, Request(Form, JSON, url.Values, Uploaded Files) data and more features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gobuffalo/validate"&gt;validate&lt;/a&gt; - This package provides a framework for writing validations for Go applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/validator"&gt;validator&lt;/a&gt; - Go Struct and Field validation, including Cross Field, Cross Struct, Map, Slice and Array diving.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-the-way/validator"&gt;Validator&lt;/a&gt; - A lightweight model validator written in Go.Contains VFs:Min, Max, MinLength, MaxLength, Length, Enum, Regex.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marrow16/valix"&gt;valix&lt;/a&gt; Go package for validating requests&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Oudwins/zog"&gt;Zog&lt;/a&gt; - A &lt;a href="https://github.com/colinhacks/zod"&gt;Zod&lt;/a&gt; inspired schema builder for runtime value parsing and validation. &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Version Control&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for version control.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/gitlab-org/cli"&gt;cli&lt;/a&gt; - An open-source GitLab command line tool bringing GitLab's cool features to your command line.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jfrog/froggit-go"&gt;froggit-go&lt;/a&gt; - Froggit-Go is a Go library, allowing to perform actions on VCS providers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/libgit2/git2go"&gt;git2go&lt;/a&gt; - Go bindings for libgit2.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gabyx/githooks"&gt;githooks&lt;/a&gt; - Per-repo and shared Git hooks with version control and auto update.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-git/go-git"&gt;go-git&lt;/a&gt; - highly extensible Git implementation in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sourcegraph/go-vcs"&gt;go-vcs&lt;/a&gt; - manipulate and inspect VCS repositories in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/src-d/hercules"&gt;hercules&lt;/a&gt; - gaining advanced insights from Git repository history.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/beyang/hgo"&gt;hgo&lt;/a&gt; - Hgo is a collection of Go packages providing read-access to local Mercurial repositories.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Video&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for manipulating video.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/3d0c/gmf"&gt;gmf&lt;/a&gt; - Go bindings for FFmpeg av* libraries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asticode/go-astiav"&gt;go-astiav&lt;/a&gt; - Better C bindings for ffmpeg in GO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asticode/go-astisub"&gt;go-astisub&lt;/a&gt; - Manipulate subtitles in GO (.srt, .stl, .ttml, .webvtt, .ssa/.ass, teletext, .smi, etc.).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asticode/go-astits"&gt;go-astits&lt;/a&gt; - Parse and demux MPEG Transport Streams (.ts) natively in GO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unki2aut/go-mpd"&gt;go-mpd&lt;/a&gt; - Parser and generator library for MPEG-DASH manifest files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/giorgisio/goav"&gt;goav&lt;/a&gt; - Comprehensive Go bindings for FFmpeg.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aler9/gortsplib"&gt;gortsplib&lt;/a&gt; - Pure Go RTSP server and client library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Eyevinn/hls-m3u8"&gt;hls-m3u8&lt;/a&gt; - Parser and generator for HLS (M3U8) playlists; kept up to date with the spec.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adrg/libvlc-go"&gt;libvlc-go&lt;/a&gt; - Go bindings for libvlc 2.X/3.X/4.X (used by the VLC media player).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Eyevinn/mp4ff"&gt;mp4ff&lt;/a&gt; - Library and tools for working with MP4 files containing video, audio, subtitles, or metadata.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/korandiz/v4l"&gt;v4l&lt;/a&gt; - Video capture library for Linux, written in Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Web Frameworks&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Full stack web frameworks.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/savsgio/atreugo"&gt;Atreugo&lt;/a&gt; - High performance and extensible micro web framework with zero memory allocations in hot paths.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/opensaucerer/barf"&gt;Barf&lt;/a&gt; - Basically, A Remarkable Framework for building JSON-based web APIs. It is entirely unobtrusive and re-invents no wheel. It is crafted such that getting started is easy and quick while being flexible enough for more complex use cases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/beego/beego"&gt;Beego&lt;/a&gt; - beego is an open-source, high-performance web framework for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://confetti-framework.github.io/docs/"&gt;Confetti Framework&lt;/a&gt; - Confetti is a Go web application framework with an expressive, elegant syntax. Confetti combines the elegance of Laravel and the simplicity of Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abemedia/go-don"&gt;Don&lt;/a&gt; - A highly performant and simple to use API framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/labstack/echo"&gt;Echo&lt;/a&gt; - High performance, minimalist Go web framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fastschema/fastschema"&gt;Fastschema&lt;/a&gt; - A flexible Go web framework and Headless CMS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofiber/fiber"&gt;Fiber&lt;/a&gt; - An Express.js inspired web framework build on Fasthttp.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/i-love-flamingo/flamingo"&gt;Flamingo&lt;/a&gt; - Framework for pluggable web projects. Including a concept for modules and offering features for DI, Configareas, i18n, template engines, graphql, observability, security, events, routing &amp;amp; reverse routing etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/i-love-flamingo/flamingo-commerce"&gt;Flamingo Commerce&lt;/a&gt; - Providing e-commerce features using clean architecture like DDD and ports and adapters, that you can use to build flexible e-commerce applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-fuego/fuego"&gt;Fuego&lt;/a&gt; - The framework for busy Go developers! Web framework generating OpenAPI 3 spec from source code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gin-gonic/gin"&gt;Gin&lt;/a&gt; - Gin is a web framework written in Go! It features a martini-like API with much better performance, up to 40 times faster. If you need performance and good productivity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xxjwxc/ginrpc"&gt;Ginrpc&lt;/a&gt; - Gin parameter automatic binding tool,gin rpc tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SaiNageswarS/go-api-boot"&gt;go-api-boot&lt;/a&gt; - A gRpc-first micro-service framework. Features include ODM support for Mongo, cloud resource support (AWS/Azure/Google), and a fluent dependency injection which is customized for gRpc. Additionally, grpc-web is supported directly, enabling browser access to all gRpc APIs without a proxy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goadesign/goa"&gt;Goa&lt;/a&gt; - Goa provides a holistic approach for developing remote APIs and microservices in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofr-dev/gofr"&gt;GoFr&lt;/a&gt; - Gofr is an opinionated microservice development framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gogf/gf"&gt;GoFrame&lt;/a&gt; - GoFrame is a modular, powerful, high-performance and enterprise-class application development framework of Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twharmon/golamb"&gt;golamb&lt;/a&gt; - Golamb makes it easier to write API endpoints for use with AWS Lambda and API Gateway.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gone-io/gone"&gt;Gone&lt;/a&gt; - A lightweight dependency injection and web framework inspired by Spring.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goravel/goravel"&gt;goravel&lt;/a&gt; - A Laravel-inspired web framework with ORM, authentication, queue, task scheduling, and more built-in features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-goyave/goyave"&gt;Goyave&lt;/a&gt; - Feature-complete REST API framework aimed at clean code and fast development, with powerful built-in functionalities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudwego/hertz"&gt;Hertz&lt;/a&gt; - A high-performance and strong-extensibility Go HTTP framework that helps developers build microservices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hidevopsio/hiboot"&gt;hiboot&lt;/a&gt; - hiboot is a high performance web application framework with auto configuration and dependency injection support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/danielgtaylor/huma/"&gt;Huma&lt;/a&gt; - Framework for modern REST/GraphQL APIs with built-in OpenAPI 3, generated documentation, and a CLI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/indeedeng/iwf"&gt;iWF&lt;/a&gt; - iWF is an all-in-one platform for developing long-running business processes. It offers a convenient abstraction for utilizing databases, ElasticSearch, message queues, durable timers, and more, with a clean, simple, and user-friendly interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jvcoutinho/lit"&gt;Lit&lt;/a&gt; - Highly performant declarative web framework for Golang, aiming for simplicity and quality of life.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/claygod/microservice"&gt;Microservice&lt;/a&gt; - The framework for the creation of microservices, written in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/beatlabs/patron"&gt;patron&lt;/a&gt; - Patron is a microservice framework following best cloud practices with a focus on productivity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/fruitygo/pnutmux"&gt;Pnutmux&lt;/a&gt; - Pnutmux is a powerful Go web framework that uses regex for matching and handling HTTP requests. It offers features such as CORS handling, structured logging, URL parameters extraction, middlewares, and concurrency limiting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/revel/revel"&gt;Revel&lt;/a&gt; - High-productivity web framework for the Go language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rookie-ninja/rk-boot"&gt;rk-boot&lt;/a&gt; - A bootstrapper library for building enterprise go microservice with Gin and gRPC quickly and easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/clubpay/ronykit"&gt;Ronykit&lt;/a&gt; - Web framework with pluggable architecture and very performant.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gookit/rux"&gt;rux&lt;/a&gt; - Simple and fast web framework for build golang HTTP applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/axzilla/templui"&gt;templui&lt;/a&gt; - Modern UI Components for Go &amp;amp; Templ.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uadmin/uadmin"&gt;uAdmin&lt;/a&gt; - Fully featured web framework for Golang, inspired by Django.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/naughtygopher/webgo"&gt;WebGo&lt;/a&gt; - A micro-framework to build web apps with handler chaining, middleware, and context injection. With standard library-compliant HTTP handlers (i.e., &lt;code&gt;http.HandlerFunc&lt;/code&gt;)..&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yaitoo/xun"&gt;Xun&lt;/a&gt; - Web framework built on Go's built-in html/template and net/http package‚Äôs router. It is designed to be lightweight, fast, and easy to use while providing a simple and intuitive API for building web applications with advanced features such as middleware, routing, and template rendering.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ankorstore/yokai"&gt;Yokai&lt;/a&gt; - Simple, modular, and observable Go framework for backend applications.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Middlewares&lt;/h3&gt; 
&lt;h4&gt;Actual middlewares&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/posener/client-timing"&gt;client-timing&lt;/a&gt; - An HTTP client for Server-Timing header.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rs/cors"&gt;CORS&lt;/a&gt; - Easily add CORS capabilities to your API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/faabiosr/echo-middleware"&gt;echo-middleware&lt;/a&gt; - Middleware for Echo framework with logging and metrics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rs/formjson"&gt;formjson&lt;/a&gt; - Transparently handle JSON input as a standard form POST.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/github/go-fault"&gt;go-fault&lt;/a&gt; - Fault injection middleware for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ulule/limiter"&gt;Limiter&lt;/a&gt; - Dead simple rate limit middleware for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philippgille/ln-paywall"&gt;ln-paywall&lt;/a&gt; - Go middleware for monetizing APIs on a per-request basis with the Lightning Network (Bitcoin).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/mid"&gt;mid&lt;/a&gt; - Miscellaneous HTTP middleware features: idiomatic error return from handlers; receive/respond with JSON data; request tracing; and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rookie-ninja/rk-gin"&gt;rk-gin&lt;/a&gt; - Middleware for Gin framework with logging, metrics, auth, tracing etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rookie-ninja/rk-grpc"&gt;rk-grpc&lt;/a&gt; - Middleware for gRPC with logging, metrics, auth, tracing etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/didip/tollbooth"&gt;Tollbooth&lt;/a&gt; - Rate limit HTTP request handler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sebest/xff"&gt;XFF&lt;/a&gt; - Handle &lt;code&gt;X-Forwarded-For&lt;/code&gt; header and friends.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Libraries for creating HTTP middlewares&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/justinas/alice"&gt;alice&lt;/a&gt; - Painless middleware chaining for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codemodus/catena"&gt;catena&lt;/a&gt; - http.Handler wrapper catenation (same API as "chain").&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codemodus/chain"&gt;chain&lt;/a&gt; - Handler wrapper chaining with scoped data (net/context-based "middleware").&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alioygur/gores"&gt;gores&lt;/a&gt; - Go package that handles HTML, JSON, XML and etc. responses. Useful for RESTful APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carbocation/interpose"&gt;interpose&lt;/a&gt; - Minimalist net/http middleware for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HereMobilityDevelopers/mediary"&gt;mediary&lt;/a&gt; - add interceptors to &lt;code&gt;http.Client&lt;/code&gt; to allow dumping/shaping/tracing/... of requests/responses.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stephens2424/muxchain"&gt;muxchain&lt;/a&gt; - Lightweight middleware for net/http.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/urfave/negroni"&gt;negroni&lt;/a&gt; - Idiomatic HTTP middleware for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unrolled/render"&gt;render&lt;/a&gt; - Go package for easily rendering JSON, XML, and HTML template responses.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thedevsaddam/renderer"&gt;renderer&lt;/a&gt; - Simple, lightweight and faster response (JSON, JSONP, XML, YAML, HTML, File) rendering package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thoas/stats"&gt;stats&lt;/a&gt; - Go middleware that stores various information about your web application.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Routers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gernest/alien"&gt;alien&lt;/a&gt; - Lightweight and fast http router from outer space.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GuilhermeCaruso/bellt"&gt;bellt&lt;/a&gt; - A simple Go HTTP router.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-zoo/bone"&gt;Bone&lt;/a&gt; - Lightning Fast HTTP Multiplexer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/claygod/Bxog"&gt;Bxog&lt;/a&gt; - Simple and fast HTTP router for Go. It works with routes of varying difficulty, length and nesting. And he knows how to create a URL from the received parameters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-chi/chi"&gt;chi&lt;/a&gt; - Small, fast and expressive HTTP router built on net/context.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/buaazp/fasthttprouter"&gt;fasthttprouter&lt;/a&gt; - High performance router forked from &lt;code&gt;httprouter&lt;/code&gt;. The first router fit for &lt;code&gt;fasthttp&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/razonyang/fastrouter"&gt;FastRouter&lt;/a&gt; - a fast, flexible HTTP router written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bmf-san/goblin"&gt;goblin&lt;/a&gt; - A golang http router based on trie tree.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gocraft/web"&gt;gocraft/web&lt;/a&gt; - Mux and middleware package in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goji/goji"&gt;Goji&lt;/a&gt; - Goji is a minimalistic and flexible HTTP request multiplexer with support for &lt;code&gt;net/context&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golobby/router"&gt;GoLobby/Router&lt;/a&gt; - GoLobby Router is a lightweight yet powerful HTTP router for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goroute/route"&gt;goroute&lt;/a&gt; - Simple yet powerful HTTP request multiplexer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vardius/gorouter"&gt;GoRouter&lt;/a&gt; - GoRouter is a Server/API micro framework, HTTP request router, multiplexer, mux that provides request router with middleware supporting &lt;code&gt;net/context&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gowww/router"&gt;gowww/router&lt;/a&gt; - Lightning fast HTTP router fully compatible with the net/http.Handler interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/julienschmidt/httprouter"&gt;httprouter&lt;/a&gt; - High performance router. Use this and the standard http handlers to form a very high performance web framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dimfeld/httptreemux"&gt;httptreemux&lt;/a&gt; - High-speed, flexible tree-based HTTP router for Go. Inspiration from httprouter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/lars"&gt;lars&lt;/a&gt; - Is a lightweight, fast and extensible zero allocation HTTP router for Go used to create customizable frameworks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gorilla/mux"&gt;mux&lt;/a&gt; - Powerful URL router and dispatcher for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muir/nchi"&gt;nchi&lt;/a&gt; - chi-like router built on httprouter with dependency injection based middleware wrappers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ngamux/ngamux"&gt;ngamux&lt;/a&gt; - Simple HTTP router for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-ozzo/ozzo-routing"&gt;ozzo-routing&lt;/a&gt; - An extremely fast Go (golang) HTTP router that supports regular expression route matching. Comes with full support for building RESTful APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/pure"&gt;pure&lt;/a&gt; - Is a lightweight HTTP router that sticks to the std "net/http" implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VividCortex/siesta"&gt;Siesta&lt;/a&gt; - Composable framework to write middleware and handlers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/husobee/vestigo"&gt;vestigo&lt;/a&gt; - Performant, stand-alone, HTTP compliant URL Router for go web applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nbari/violetear"&gt;violetear&lt;/a&gt; - Go HTTP router.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rs/xmux"&gt;xmux&lt;/a&gt; - High performance muxer based on &lt;code&gt;httprouter&lt;/code&gt; with &lt;code&gt;net/context&lt;/code&gt; support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xujiajun/gorouter"&gt;xujiajun/gorouter&lt;/a&gt; - A simple and fast HTTP router for Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;WebAssembly&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dennwc/dom"&gt;dom&lt;/a&gt; - DOM library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/extism/go-sdk"&gt;Extism Go SDK&lt;/a&gt; - Universal, cross-language WebAssembly framework for building plug-in systems and polyglot apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/markfarnan/go-canvas"&gt;go-canvas&lt;/a&gt; - Library to use HTML5 Canvas, with all drawing within go code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tinygo-org/tinygo"&gt;tinygo&lt;/a&gt; - Go compiler for small places. Microcontrollers, WebAssembly, and command-line tools. Based on LLVM.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/norunners/vert"&gt;vert&lt;/a&gt; - Interop between Go and JS values.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agnivade/wasmbrowsertest"&gt;wasmbrowsertest&lt;/a&gt; - Run Go WASM tests in your browser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gowebapi/webapi"&gt;webapi&lt;/a&gt; - Bindings for DOM and HTML generated from WebIDL.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Webhooks Server&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adnanh/webhook"&gt;webhook&lt;/a&gt; - Tool which allows user to create HTTP endpoints (hooks) that execute commands on the server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/42Atomys/webhooked"&gt;webhooked&lt;/a&gt; - A webhook receiver on steroids: handle, secure, format and store a Webhook payload has never been easier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/webhookx-io/webhookx"&gt;WebhookX&lt;/a&gt; - A webhooks gateway for message receiving, processing, and reliable delivering.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Windows&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gonutz/d3d9"&gt;d3d9&lt;/a&gt; - Go bindings for Direct3D9.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-ole/go-ole"&gt;go-ole&lt;/a&gt; - Win32 OLE implementation for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MonaxGT/gosddl"&gt;gosddl&lt;/a&gt; - Converter from SDDL-string to user-friendly JSON. SDDL consist of four part: Owner, Primary Group, DACL, SACL.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Workflow Frameworks&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for creating Workflows.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber-go/cadence-client"&gt;Cadence-client&lt;/a&gt; - A framework for authoring workflows and activities running on top of the Cadence orchestration engine made by Uber.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dagu-go/dagu"&gt;Dagu&lt;/a&gt; - No-code workflow executor. it executes DAGs defined in a simple YAML format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rhosocial/go-dag"&gt;go-dag&lt;/a&gt; - A framework developed in Go that manages the execution of workflows described by directed acyclic graphs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/noneback/go-taskflow"&gt;go-taskflow&lt;/a&gt; - A taskflow-like General-purpose Task-parallel Programming Framework with integrated visualizer and profiler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/luno/workflow"&gt;workflow&lt;/a&gt; - A tech stack agnostic Event Driven Workflow framework.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;XML&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries and tools for manipulating XML.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xml-comp/xml-comp"&gt;XML-Comp&lt;/a&gt; - Simple command line XML comparer that generates diffs of folders, files and tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sbabiv/xml2map"&gt;xml2map&lt;/a&gt; - XML to MAP converter written Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antchfx/xmlquery"&gt;xmlquery&lt;/a&gt; - xmlquery is Golang XPath package for XML query.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shabbyrobe/xmlwriter"&gt;xmlwriter&lt;/a&gt; - Procedural XML generation API based on libxml2's xmlwriter module.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antchfx/xpath"&gt;xpath&lt;/a&gt; - XPath package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miku/zek"&gt;zek&lt;/a&gt; - Generate a Go struct from XML.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Zero Trust&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries and tools to implement Zero Trust architectures.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sigstore/cosign"&gt;Cosign&lt;/a&gt; - Container Signing, Verification and Storage in an OCI registry.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/in-toto/in-toto-golang"&gt;in-toto&lt;/a&gt; - Go implementation of the in-toto (provides a framework to protect the integrity of the software supply chain) python reference implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openziti/ziti"&gt;OpenZiti&lt;/a&gt; - A full, open source zero trust overlay network. Including numerous SDKs for numerous languages such as &lt;a href="https://github.com/openziti/sdk-golang"&gt;golang&lt;/a&gt; allowing you to embed zero trust principles directly into your applications. The &lt;a href="https://github.com/openziti-test-kitchen"&gt;OpenZiti Test Kitchen&lt;/a&gt; has numerous examples to draw inspiration from including a &lt;a href="https://github.com/openziti-test-kitchen/zssh"&gt;zero trust ssh client - zssh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philips-labs/spiffe-vault"&gt;Spiffe-Vault&lt;/a&gt; - Utilizes Spiffe JWT authentication with Hashicorp Vault for secretless authentication.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spiffe/spire"&gt;Spire&lt;/a&gt; - SPIRE (the SPIFFE Runtime Environment) is a toolchain of APIs for establishing trust between software systems across a wide variety of hosting platforms.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Code Analysis&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Source code analysis tools, also known as Static Application Security Testing (SAST) Tools.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bradleyfalzon/apicompat"&gt;apicompat&lt;/a&gt; - Checks recent changes to a Go project for backwards incompatible changes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asty-org/asty"&gt;asty&lt;/a&gt; - Converts golang AST to JSON and JSON to AST.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/verygoodsoftwarenotvirus/blanket"&gt;blanket&lt;/a&gt; - blanket is a tool that helps you catch functions which don't have direct unit tests in your Go packages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Checkmarx/chainjacking"&gt;ChainJacking&lt;/a&gt; - Find which of your Go lang direct GitHub dependencies is susceptible to ChainJacking attack.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amit-davidson/Chronos"&gt;Chronos&lt;/a&gt; - Detects race conditions statically&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mibk/dupl"&gt;dupl&lt;/a&gt; - Tool for code clone detection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kisielk/errcheck"&gt;errcheck&lt;/a&gt; - Errcheck is a program for checking for unchecked errors in Go programs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Crocmagnon/fatcontext"&gt;fatcontext&lt;/a&gt; - Fatcontext detects nested contexts in loops or function literals.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qiniu/checkstyle"&gt;go-checkstyle&lt;/a&gt; - checkstyle is a style check tool like java checkstyle. This tool inspired by java checkstyle, golint. The style referred to some points in Go Code Review Comments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/roblaszczak/go-cleanarch"&gt;go-cleanarch&lt;/a&gt; - go-cleanarch was created to validate Clean Architecture rules, like a The Dependency Rule and interaction between packages in your Go projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-critic/go-critic"&gt;go-critic&lt;/a&gt; - source code linter that brings checks that are currently not implemented in other linters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/psampaz/go-mod-outdated"&gt;go-mod-outdated&lt;/a&gt; - An easy way to find outdated dependencies of your Go projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuroyoro/goast-viewer"&gt;goast-viewer&lt;/a&gt; - Web based Golang AST visualizer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/golang.org/x/tools/cmd/goimports"&gt;goimports&lt;/a&gt; - Tool to fix (add, remove) your Go imports automatically.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arxdsilva/golang-ifood-sdk"&gt;golang-ifood-sdk&lt;/a&gt; - iFood API SDK.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golangci/golangci-lint"&gt;golangci-lint&lt;/a&gt; ‚Äì A fast Go linters runner. It runs linters in parallel, uses caching, supports &lt;code&gt;yaml&lt;/code&gt; config, has integrations with all major IDE and has dozens of linters included.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/segmentio/golines"&gt;golines&lt;/a&gt; - Formatter that automatically shortens long lines in Go code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jfeliu007/goplantuml"&gt;GoPlantUML&lt;/a&gt; - Library and CLI that generates text plantump class diagram containing information about structures and interfaces with the relationship among them.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sqs/goreturns"&gt;goreturns&lt;/a&gt; - Adds zero-value return statements to match the func return types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shurcooL/gostatus"&gt;gostatus&lt;/a&gt; - Command line tool, shows the status of repositories that contain Go packages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/surullabs/lint"&gt;lint&lt;/a&gt; - Run linters as part of go test.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/z7zmey/php-parser"&gt;php-parser&lt;/a&gt; - A Parser for PHP written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mgechev/revive"&gt;revive&lt;/a&gt; ‚Äì ~6x faster, stricter, configurable, extensible, and beautiful drop-in replacement for &lt;code&gt;golint&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dominikh/go-tools/tree/master/cmd/staticcheck"&gt;staticcheck&lt;/a&gt; - staticcheck is &lt;code&gt;go vet&lt;/code&gt; on steroids, applying a ton of static analysis checks you might be used to from tools like ReSharper for C#.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Antonboom/testifylint"&gt;testifylint&lt;/a&gt; ‚Äì A linter that checks usage of &lt;a href="https://github.com/stretchr/testify"&gt;github.com/stretchr/testify&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/augmentable-dev/tickgit"&gt;tickgit&lt;/a&gt; - CLI and go package for surfacing code comment TODOs (in any language) and applying a &lt;code&gt;git blame&lt;/code&gt;to identify the author.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/preslavmihaylov/todocheck"&gt;todocheck&lt;/a&gt; - Static code analyser which links TODO comments in code with issues in your issue tracker.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mdempsky/unconvert"&gt;unconvert&lt;/a&gt; - Remove unnecessary type conversions from Go source.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sashamelentyev/usestdlibvars"&gt;usestdlibvars&lt;/a&gt; - A linter that detect the possibility to use variables/constants from the Go standard library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daveshanley/vacuum"&gt;vacuum&lt;/a&gt; - An ultra-super-fast, lightweight OpenAPI linter and quality checking tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mccoyst/validate"&gt;validate&lt;/a&gt; - Automatically validates struct fields with tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tomarrell/wrapcheck"&gt;wrapcheck&lt;/a&gt; - A linter to check that errors from external packages are wrapped.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Editor Plugins&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Plugin for text editors and IDEs.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/josa42/coc-go"&gt;coc-go language server extension for Vim/Neovim&lt;/a&gt; - This plugin adds &lt;a href="https://github.com/golang/tools/raw/master/gopls/README.md"&gt;gopls&lt;/a&gt; features to Vim/Neovim.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/msyrus/vscode-go-doc"&gt;Go Doc&lt;/a&gt; - A Visual Studio Code extension for showing definition in output and generating go doc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://plugins.jetbrains.com/plugin/9568-go"&gt;Go plugin for JetBrains IDEs&lt;/a&gt; - Go plugin for JetBrains IDEs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dominikh/go-mode.el"&gt;go-mode&lt;/a&gt; - Go mode for GNU/Emacs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nsf/gocode"&gt;gocode&lt;/a&gt; - Autocompletion daemon for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/incu6us/goimports-reviser"&gt;goimports-reviser&lt;/a&gt; - Formatting tool for imports.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=MaxMedia.go-prof"&gt;goprofiling&lt;/a&gt; - This extension adds benchmark profiling support for the Go language to VS Code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DisposaBoy/GoSublime"&gt;GoSublime&lt;/a&gt; - Golang plugin collection for the text editor SublimeText 3 providing code completion and other IDE-like features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hexdigest/gounit-vim"&gt;gounit-vim&lt;/a&gt; - Vim plugin for generating Go tests based on the function's or method's signature.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rjohnsondev/vim-compiler-go"&gt;vim-compiler-go&lt;/a&gt; - Vim plugin to highlight syntax errors on save.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fatih/vim-go"&gt;vim-go&lt;/a&gt; - Go development plugin for Vim.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang/vscode-go"&gt;vscode-go&lt;/a&gt; - Extension for Visual Studio Code (VS Code) which provides support for the Go language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eaburns/Watch"&gt;Watch&lt;/a&gt; - Runs a command in an acme win on file changes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Go Generate Tools&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/g4s8/envdoc"&gt;envdoc&lt;/a&gt; - generate documentation for environment variables from Go source files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/usk81/generic"&gt;generic&lt;/a&gt; - flexible data type for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Parquery/gocontracts"&gt;gocontracts&lt;/a&gt; - brings design-by-contract to Go by synchronizing the code with the documentation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mafulong/godal"&gt;godal&lt;/a&gt; - Generate orm models corresponding to golang by specifying sql ddl file, which can be used by gorm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bouk/gonerics"&gt;gonerics&lt;/a&gt; - Idiomatic Generics in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cweill/gotests"&gt;gotests&lt;/a&gt; - Generate Go tests from your source code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hexdigest/gounit"&gt;gounit&lt;/a&gt; - Generate Go tests using your own templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DylanMeeus/hasgo"&gt;hasgo&lt;/a&gt; - Generate Haskell inspired functions for your slices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kazhuravlev/options-gen"&gt;options-gen&lt;/a&gt; - Functional options described by Dave Cheney's post "Functional options for friendly APIs".&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/opennota/re2dfa"&gt;re2dfa&lt;/a&gt; - Transform regular expressions into finite state machines and output Go source code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anqiansong/sqlgen"&gt;sqlgen&lt;/a&gt; - Generate gorm, xorm, sqlx, bun, sql code from SQL file or DSN.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://xuri.me/toml-to-go"&gt;TOML-to-Go&lt;/a&gt; - Translates TOML into a Go type in the browser instantly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xuri/xgen"&gt;xgen&lt;/a&gt; - XSD (XML Schema Definition) parser and Go/C/Java/Rust/TypeScript code generator.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Go Tools&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/decouple"&gt;decouple&lt;/a&gt; - Find ‚Äúoverspecified‚Äù function parameters that could be generalized with interface types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-oas/docs"&gt;docs&lt;/a&gt; - Automatically generate RESTful API documentation for GO projects - aligned with Open API Specification standard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TrueFurby/go-callvis"&gt;go-callvis&lt;/a&gt; - Visualize call graph of your Go program using dot format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Zxilly/go-size-analyzer"&gt;go-size-analyzer&lt;/a&gt; - Analyze and visualize the size of dependencies in compiled Golang binaries, providing insight into their impact on the final build.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-swagger/go-swagger"&gt;go-swagger&lt;/a&gt; - Swagger 2.0 implementation for go. Swagger is a simple yet powerful representation of your RESTful API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bartventer.github.io/go-template-playground/"&gt;go-template-playground&lt;/a&gt; - An interactive environment to create and test Go templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tylerwince/godbg"&gt;godbg&lt;/a&gt; - Implementation of Rusts &lt;code&gt;dbg!&lt;/code&gt; macro for quick and easy debugging during development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dustinblackman/gomodrun/"&gt;gomodrun&lt;/a&gt; - Go tool that executes and caches binaries included in go.mod files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gotemplate.io/"&gt;gotemplate.io&lt;/a&gt; - Online tool to preview &lt;code&gt;text/template&lt;/code&gt; templates live.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bitfield/gotestdox"&gt;gotestdox&lt;/a&gt; - Show Go test results as readable sentences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/psampaz/gothanks"&gt;gothanks&lt;/a&gt; - GoThanks automatically stars your go.mod github dependencies, sending this way some love to their maintainers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ahmedakef/gotutor"&gt;gotutor&lt;/a&gt; - Online Go Debugger &amp;amp; Visualizer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rocketlaunchr/igo"&gt;igo&lt;/a&gt; - An igo to go transpiler (new language features for Go language!)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/modver"&gt;modver&lt;/a&gt; - Compare two versions of a Go module to check the version-number change required (major, minor, or patchlevel), according to &lt;a href="https://semver.org/"&gt;semver&lt;/a&gt; rules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iyashjayesh/monigo"&gt;MoniGO&lt;/a&gt; - A performance monitoring library for Go applications. It provides real-time insights into application performance! üöÄ&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OctoLinker/browser-extension"&gt;OctoLinker&lt;/a&gt; - Navigate through go files efficiently with the OctoLinker browser extension for GitHub.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kyoh86/richgo"&gt;richgo&lt;/a&gt; - Enrich &lt;code&gt;go test&lt;/code&gt; outputs with text decorations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/becheran/roumon"&gt;roumon&lt;/a&gt; - Monitor current state of all active goroutines via a command line interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/galeone/rts"&gt;rts&lt;/a&gt; - RTS: response to struct. Generates Go structs from server responses.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ravsii/textra"&gt;textra&lt;/a&gt; - Extract Go struct field names, types and tags for filtering and exporting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dtgorski/typex"&gt;typex&lt;/a&gt; - Examine Go types and their transitive dependencies, alternatively export results as TypeScript value objects (or types) declaration.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Software Packages&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Software written in Go.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;DevOps Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dnnrly/abbreviate"&gt;abbreviate&lt;/a&gt; - abbreviate is a tool turning long strings in to shorter ones with configurable separators, for example to embed branch names in to deployment stack IDs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ddosify/alaz"&gt;alaz&lt;/a&gt; - Effortless, Low-Overhead, eBPF-based Kubernetes Monitoring.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aptly-dev/aptly"&gt;aptly&lt;/a&gt; - aptly is a Debian repository management tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xuri/aurora"&gt;aurora&lt;/a&gt; - Cross-platform web-based Beanstalkd queue server console.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/soniah/awsenv"&gt;awsenv&lt;/a&gt; - Small binary that loads Amazon (AWS) environment variables for a profile.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/balerter/balerter"&gt;Balerter&lt;/a&gt; - A self-hosted script-based alerting manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dave/blast"&gt;Blast&lt;/a&gt; - A simple tool for API load testing and batch jobs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codesenberg/bombardier"&gt;bombardier&lt;/a&gt; - Fast cross-platform HTTP benchmarking tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rogerwelin/cassowary"&gt;cassowary&lt;/a&gt; - Modern cross-platform HTTP load-testing tool written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Netflix/chaosmonkey"&gt;chaosmonkey&lt;/a&gt; - A resiliency tool that helps applications tolerate random instance failures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ddosify/ddosify"&gt;Ddosify&lt;/a&gt; - High-performance load testing tool, written in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s0rg/decompose"&gt;decompose&lt;/a&gt; - tool to generate and process Docker containers connections graphs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/centerorbit/depcharge"&gt;DepCharge&lt;/a&gt; - Helps orchestrating the execution of commands across the many dependencies in larger projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thevxn/dish"&gt;dish&lt;/a&gt; - A lightweight, remotely configurable monitoring service.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; - Open platform for distributed applications for developers and sysadmins.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/x1unix/docker-go-mingw"&gt;docker-go-mingw&lt;/a&gt; - Docker image for building Go binaries for Windows with MinGW toolchain.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/offen/docker-volume-backup"&gt;docker-volume-backup&lt;/a&gt; - Backup Docker volumes locally or to any S3, WebDAV, Azure Blob Storage, Dropbox or SSH compatible storage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ozankasikci/dockerfile-generator"&gt;Dockerfile-Generator&lt;/a&gt; - A go library and an executable that produces valid Dockerfiles using various input channels.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/liudng/dogo"&gt;dogo&lt;/a&gt; - Monitoring changes in the source file and automatically compile and run (restart).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/appleboy/drone-jenkins"&gt;drone-jenkins&lt;/a&gt; - Trigger downstream Jenkins jobs using a binary, docker or Drone CI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/appleboy/drone-scp"&gt;drone-scp&lt;/a&gt; - Copy files and artifacts via SSH using a binary, docker or Drone CI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chrismckenzie/dropship"&gt;Dropship&lt;/a&gt; - Tool for deploying code via cdn.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/appleboy/easyssh-proxy"&gt;easyssh-proxy&lt;/a&gt; - Golang package for easy remote execution through SSH and SCP downloading via &lt;code&gt;ProxyCommand&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mkchoi212/fac"&gt;fac&lt;/a&gt; - Command-line user interface to fix git merge conflicts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/flannel-io/flannel"&gt;Flannel&lt;/a&gt; - Flannel is a network fabric for containers, designed for Kubernetes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fleetdm/fleet"&gt;Fleet device management&lt;/a&gt; - Lightweight, programmable telemetry for servers and workstations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gaia-pipeline/gaia"&gt;gaia&lt;/a&gt; - Build powerful pipelines in any programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gabrie30/ghorg"&gt;ghorg&lt;/a&gt; - Quickly clone an entire org/users repositories into one directory - Supports GitHub, GitLab, Gitea, and Bitbucket.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-gitea/gitea"&gt;Gitea&lt;/a&gt; - Fork of Gogs, entirely community driven.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://git.jonasfranz.software/JonasFranzDEV/gitea-github-migrator"&gt;gitea-github-migrator&lt;/a&gt; - Migrate all your GitHub repositories, issues, milestones and labels to your Gitea instance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-furnace/go-furnace"&gt;go-furnace&lt;/a&gt; - Hosting solution written in Go. Deploy your Application with ease on AWS, GCP or DigitalOcean.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mouuff/go-rocket-update"&gt;go-rocket-update&lt;/a&gt; - A simple way to make self updating Go applications - Supports Github and Gitlab.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sanbornm/go-selfupdate"&gt;go-selfupdate&lt;/a&gt; - Enable your Go applications to self update.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cryptojuice/gobrew"&gt;gobrew&lt;/a&gt; - gobrew lets you easily switch between multiple versions of go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kevincobain2000/gobrew"&gt;gobrew&lt;/a&gt; - Go version manager. Super simple tool to install and manage Go versions. Install go without root. Gobrew doesn't require shell rehash.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sirnewton01/godbg"&gt;godbg&lt;/a&gt; - Web-based gdb front-end application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gogs.io/"&gt;Gogs&lt;/a&gt; - A Self Hosted Git Service in the Go Programming Language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jkaninda/goma-gateway"&gt;goma-gateway&lt;/a&gt; - A Lightweight API Gateway and Reverse Proxy with declarative config, robust middleware, and support for REST, GraphQL, TCP, UDP, and gRPC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/inconshreveable/gonative"&gt;gonative&lt;/a&gt; - Tool which creates a build of Go that can cross compile to all platforms while still using the Cgo-enabled versions of the stdlib packages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ahmetalpbalkan/govvv"&gt;govvv&lt;/a&gt; - ‚Äúgo build‚Äù wrapper to easily add version information into Go binaries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yaronsumel/grapes"&gt;grapes&lt;/a&gt; - Lightweight tool designed to distribute commands over ssh with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moovweb/gvm"&gt;GVM&lt;/a&gt; - GVM provides an interface to manage Go versions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rakyll/hey"&gt;Hey&lt;/a&gt; - Hey is a tiny program that sends some load to a web application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dnnrly/httpref"&gt;httpref&lt;/a&gt; - httpref is a handy CLI reference for HTTP methods, status codes, headers, and TCP and UDP ports.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jenkins-zh/jenkins-cli"&gt;jcli&lt;/a&gt; - Jenkins CLI allows you manage your Jenkins as an easy way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/k0sproject/k0s"&gt;k0s&lt;/a&gt; - Zero Friction Kubernetes distribution.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/k3d-io/k3d"&gt;k3d&lt;/a&gt; - Little helper to run CNCF's k3s in Docker.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/k3s-io/k3s"&gt;k3s&lt;/a&gt; - Lightweight Kubernetes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/grafana/k6"&gt;k6&lt;/a&gt; - A modern load testing tool, using Go and JavaScript.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ajvb/kala"&gt;kala&lt;/a&gt; - Simplistic, modern, and performant job scheduler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cswank/kcli"&gt;kcli&lt;/a&gt; - Command line tool for inspecting kafka topics/partitions/messages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubernetes-sigs/kind"&gt;kind&lt;/a&gt; - Kubernetes IN Docker - local clusters for testing Kubernetes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/ko"&gt;ko&lt;/a&gt; - Command line tool for building and deploying Go applications on Kubernetes&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kool-dev/kool"&gt;kool&lt;/a&gt; - Command line tool for managing Docker environments as an easy way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apecloud/kubeblocks"&gt;kubeblocks&lt;/a&gt; - KubeBlocks is an open-source control plane that runs and manages databases, message queues and other data infrastructure on K8s.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubernetes/kubernetes"&gt;kubernetes&lt;/a&gt; - Container Cluster Manager from Google.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubeshark/kubeshark"&gt;kubeshark&lt;/a&gt; - API traffic analyzer for Kubernetes, inspired by Wireshark, purposely built for Kubernetes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubevela/kubevela"&gt;KubeVela&lt;/a&gt; - Cloud native application delivery.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubenetworks/kubevpn"&gt;KubeVPN&lt;/a&gt; - KubeVPN offers a Cloud-Native Dev Environment that seamlessly connects to your Kubernetes cluster network.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KusionStack/kusion"&gt;KusionStack&lt;/a&gt; - A unified programmable configuration techstack to deliver modern app in 'platform as code' and 'infra as code' approach.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abahmed/kwatch"&gt;kwatch&lt;/a&gt; - Monitor &amp;amp; detect crashes in your Kubernetes(K8s) cluster instantly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ivanilves/lstags"&gt;lstags&lt;/a&gt; - Tool and API to sync Docker images across different registries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/timdp/lwc"&gt;lwc&lt;/a&gt; - A live-updating version of the UNIX wc command.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xwjdsh/manssh"&gt;manssh&lt;/a&gt; - manssh is a command line tool for managing your ssh alias config easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mantil-io/mantil"&gt;Mantil&lt;/a&gt; - Go specific framework for building serverless applications on AWS that enables you to focus on pure Go code while Mantil takes care of the infrastructure.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubernetes/minikube"&gt;minikube&lt;/a&gt; - Run Kubernetes locally.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moby/moby"&gt;Moby&lt;/a&gt; - Collaborative project for the container ecosystem to assemble container-based systems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emicklei/mora"&gt;Mora&lt;/a&gt; - REST server for accessing MongoDB documents and meta data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ostrost/ostent"&gt;ostent&lt;/a&gt; - collects and displays system metrics and optionally relays to Graphite and/or InfluxDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mitchellh/packer"&gt;Packer&lt;/a&gt; - Packer is a tool for creating identical machine images for multiple platforms from a single source configuration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bengadbois/pewpew"&gt;Pewpew&lt;/a&gt; - Flexible HTTP command line stress tester.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pipe-cd/pipecd"&gt;PipeCD&lt;/a&gt; - A GitOps-style continuous delivery platform that provides consistent deployment and operations experience for any applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stefanprodan/podinfo"&gt;podinfo&lt;/a&gt; - Podinfo is a tiny web application made with Go that showcases best practices of running microservices in Kubernetes. Podinfo is used by CNCF projects like Flux and Flagger for end-to-end testing and workshops.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/containers/podman-tui"&gt;podman-tui&lt;/a&gt; - Terminal UI for Podman management.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pomerium/pomerium"&gt;Pomerium&lt;/a&gt; - Pomerium is an identity-aware access proxy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alouche/rodent"&gt;Rodent&lt;/a&gt; - Rodent helps you manage Go versions, projects and track dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oxyno-zeta/s3-proxy"&gt;s3-proxy&lt;/a&gt; - S3 Proxy with GET, PUT and DELETE methods and authentication (OpenID Connect and Basic Auth).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rlmcpherson/s3gof3r"&gt;s3gof3r&lt;/a&gt; - Small utility/library optimized for high speed transfer of large objects into and out of Amazon S3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/peak/s5cmd"&gt;s5cmd&lt;/a&gt; - Blazing fast S3 and local filesystem execution tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/scaleway/scaleway-cli"&gt;Scaleway-cli&lt;/a&gt; - Manage BareMetal Servers from Command Line (as easily as with Docker).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bitfield/script"&gt;script&lt;/a&gt; - Making it easy to write shell-like scripts in Go for DevOps and system administration tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChristopherRabotin/sg"&gt;sg&lt;/a&gt; - Benchmarks a set of HTTP endpoints (like ab), with possibility to use the response code and data between each call for specific server stress based on its previous response.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-sigma/sigma"&gt;sigma&lt;/a&gt; - OCI-native container image registry, support OCI-native artifact, scan artifact, image build etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TimothyYe/skm"&gt;skm&lt;/a&gt; - SKM is a simple and powerful SSH Keys Manager, it helps you to manage your multiple SSH keys easily!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sanathp/statusok"&gt;StatusOK&lt;/a&gt; - Monitor your Website and REST APIs.Get Notified through Slack, E-mail when your server is down or response time is more than expected.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/taubyte/tau"&gt;tau&lt;/a&gt; - Easily build Cloud Computing Platforms with features like Serverless WebAssembly Functions, Frontend Hosting, CI/CD, Object Storage, K/V Database, and Pub-Sub Messaging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dikhan/terraform-provider-openapi"&gt;terraform-provider-openapi&lt;/a&gt; - Terraform provider plugin that dynamically configures itself at runtime based on an OpenAPI document (formerly known as swagger file) containing the definitions of the APIs exposed.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/datarootsio/tf-profile"&gt;tf-profile&lt;/a&gt; - Profiler for Terraform runs. Generate global stats, resource-level stats or visualizations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yusufcanb/tlm"&gt;tlm&lt;/a&gt; - Local cli copilot, powered by CodeLLaMa&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/containous/traefik"&gt;traefik&lt;/a&gt; - Reverse proxy and load balancer with support for multiple backends.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xitonix/trubka"&gt;trubka&lt;/a&gt; - A CLI tool to manage and troubleshoot Apache Kafka clusters with the ability of generically publishing/consuming protocol buffer and plain text events to/from Kafka.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ovh/utask"&gt;uTask&lt;/a&gt; - Automation engine that models and executes business processes declared in yaml.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tsenart/vegeta"&gt;Vegeta&lt;/a&gt; - HTTP load testing tool and library. It's over 9000!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dnnrly/wait-for"&gt;wait-for&lt;/a&gt; - Wait for something to happen (from the command line) before continuing. Easy orchestration of Docker services and other things.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wide.b3log.org/login"&gt;Wide&lt;/a&gt; - Web-based IDE for Teams using Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/masterzen/winrm-cli"&gt;winrm-cli&lt;/a&gt; - Cli tool to remotely execute commands on Windows machines.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Other Software&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://goplay.tools"&gt;Better Go Playground&lt;/a&gt; - Go playground with syntax highlight, code completion and other features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/0xERR0R/blocky"&gt;blocky&lt;/a&gt; - Fast and lightweight DNS proxy as ad-blocker for local network with many features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/crufter/borg"&gt;borg&lt;/a&gt; - Terminal based search engine for bash snippets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tejo/boxed"&gt;boxed&lt;/a&gt; - Dropbox based blog engine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chapar-rest/chapar"&gt;Chapar&lt;/a&gt; - Chapar is a a cross-platform Postman alternative built with go, aims to help developers to test their api endpoints. it support http and grpc protocols.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafael-santiago/cherry"&gt;Cherry&lt;/a&gt; - Tiny webchat server in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gocircuit/circuit"&gt;Circuit&lt;/a&gt; - Circuit is a programmable platform-as-a-service (PaaS) and/or Infrastructure-as-a-Service (IaaS), for management, discovery, synchronization and orchestration of services and hosts comprising cloud applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tylertreat/Comcast"&gt;Comcast&lt;/a&gt; - Simulate bad network connections.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kelseyhightower/confd"&gt;confd&lt;/a&gt; - Manage local application configuration files using templates and data from etcd or consul.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s0rg/crawley"&gt;crawley&lt;/a&gt; - Web scraper/crawler for cli.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/schollz/croc"&gt;croc&lt;/a&gt; - Easily and securely send files or folders from one computer to another.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/documize/community"&gt;Documize&lt;/a&gt; - Modern wiki software that integrates data from SaaS tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/scryinfo/dp"&gt;dp&lt;/a&gt; - Through SDK for data exchange with blockchain, developers can get easy access to DAPP development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/odeke-em/drive"&gt;drive&lt;/a&gt; - Google Drive client for the commandline.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gilbertchen/duplicacy"&gt;Duplicacy&lt;/a&gt; - A cross-platform network and cloud backup tool based on the idea of lock-free deduplication.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mk-5/fjira"&gt;fjira&lt;/a&gt; - A fuzzy-search based terminal UI application for Attlasian Jira&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moshebe/gebug"&gt;Gebug&lt;/a&gt; - A tool that makes debugging of Dockerized Go applications super easy by enabling Debugger and Hot-Reload features, seamlessly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Antonito/gfile"&gt;gfile&lt;/a&gt; - Securely transfer files between two computers, without any third party, over WebRTC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shurcooL/Go-Package-Store"&gt;Go Package Store&lt;/a&gt; - App that displays updates for the Go packages in your GOPATH.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Sioro-Neoku/go-peerflix"&gt;go-peerflix&lt;/a&gt; - Video streaming torrent client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goblin.run"&gt;goblin&lt;/a&gt; - Cloud builder for CLI's written in go lang&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Humpheh/goboy"&gt;GoBoy&lt;/a&gt; - Nintendo Game Boy Color emulator written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goccmack/gocc"&gt;gocc&lt;/a&gt; - Gocc is a compiler kit for Go written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/diankong/GoDocTooltip"&gt;GoDocTooltip&lt;/a&gt; - Chrome extension for Go Doc sites, which shows function description as tooltip at function list.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Forceu/gokapi"&gt;Gokapi&lt;/a&gt; - Lightweight server to share files, which expire after a set amount of downloads or days. Similar to Firefox Send, but without public upload.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jetbrains.com/go"&gt;GoLand&lt;/a&gt; - Full featured cross-platform Go IDE.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/janpfeifer/gonb"&gt;GoNB&lt;/a&gt; - Interactive Go programming with Jupyter Notebooks (also works in VSCode, Binder and Google's Colab).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/buger/gor"&gt;Gor&lt;/a&gt; - Http traffic replication tool, for replaying traffic from production to stage/dev environments in real-time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/meloalright/guora"&gt;Guora&lt;/a&gt; - A self-hosted Quora like web application written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dnnrly/hoofli"&gt;hoofli&lt;/a&gt; - Generate PlantUML diagrams from Chrome or Firefox network inspections.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/edwingeng/hotswap"&gt;hotswap&lt;/a&gt; - A complete solution to reload your go code without restarting your server, interrupting or blocking any ongoing procedure.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/"&gt;hugo&lt;/a&gt; - Fast and Modern Static Website Engine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thestrukture/ide"&gt;ide&lt;/a&gt; - Browser accessible IDE. Designed for Go with Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/assafmo/joincap"&gt;joincap&lt;/a&gt; - Command-line utility for merging multiple pcap files together.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/juicedata/juicefs"&gt;JuiceFS&lt;/a&gt; - Distributed POSIX file system built on top of Redis and AWS S3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jujucharms.com/"&gt;Juju&lt;/a&gt; - Cloud-agnostic service deployment and orchestration - supports EC2, Azure, Openstack, MAAS and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://layli.app"&gt;Layli&lt;/a&gt; - Draw pretty layout diagrams as code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jeffail/leaps"&gt;Leaps&lt;/a&gt; - Pair programming service using Operational Transforms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yunabe/lgo"&gt;lgo&lt;/a&gt; - Interactive Go programming with Jupyter. It supports code completion, code inspection and 100% Go compatibility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://limetext.github.io"&gt;limetext&lt;/a&gt; - Lime Text is a powerful and elegant text editor primarily developed in Go that aims to be a Free and open-source software successor to Sublime Text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/visualfc/liteide"&gt;LiteIDE&lt;/a&gt; - LiteIDE is a simple, open source, cross-platform Go IDE.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/quii/mockingjay-server"&gt;mockingjay&lt;/a&gt; - Fake HTTP servers and consumer driven contracts from one configuration file. You can also make the server randomly misbehave to help do more realistic performance tests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mehrdadrad/mylg"&gt;myLG&lt;/a&gt; - Command Line Network Diagnostic tool written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unix4fun/naclpipe"&gt;naclpipe&lt;/a&gt; - Simple NaCL EC25519 based crypto pipe tool written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Code-Hex/Neo-cowsay"&gt;Neo-cowsay&lt;/a&gt; - üêÆ cowsay is reborn. for a New Era.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fogleman/nes"&gt;nes&lt;/a&gt; - Nintendo Entertainment System (NES) emulator written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gulien/orbit"&gt;Orbit&lt;/a&gt; - A simple tool for running commands and generating files from templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pointlander/peg"&gt;peg&lt;/a&gt; - Peg, Parsing Expression Grammar, is an implementation of a Packrat parser generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/root-gg/plik"&gt;Plik&lt;/a&gt; - Plik is a temporary file upload system (Wetransfer like) in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SpatiumPortae/portal"&gt;portal&lt;/a&gt; - Portal is a quick and easy command-line file transfer utility from any computer to another.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/restic/restic"&gt;restic&lt;/a&gt; - De-duplicating backup program.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alajmo/sake"&gt;sake&lt;/a&gt; - sake is a command runner for local and remote hosts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/boyter/scc"&gt;scc&lt;/a&gt; - Sloc Cloc and Code, a very fast accurate code counter with complexity calculations and COCOMO estimates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chrislusf/seaweedfs"&gt;Seaweed File System&lt;/a&gt; - Fast, Simple and Scalable Distributed File System with O(1) disk seek.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/msoap/shell2http"&gt;shell2http&lt;/a&gt; - Executing shell commands via http server (for prototyping or remote control).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lucasgomide/snitch"&gt;Snitch&lt;/a&gt; - Simple way to notify your team and many tools when someone has deployed any application via Tsuru.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-sonic/sonic"&gt;sonic&lt;/a&gt; - Sonic is a Go Blogging Platform. Simple and Powerful.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pressly/sup"&gt;Stack Up&lt;/a&gt; - Stack Up, a super simple deployment tool - just Unix - think of it like 'make' for a network of servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marwanhawari/stew"&gt;stew&lt;/a&gt; - An independent package manager for compiled binaries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://syncthing.net/"&gt;syncthing&lt;/a&gt; - Open, decentralized file synchronization tool and protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mehrdadrad/tcpdog"&gt;tcpdog&lt;/a&gt; - eBPF based TCP observability.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DMcP89/tinycare-tui"&gt;tinycare-tui&lt;/a&gt; - Small terminal app that shows git commits from the last 24 hours and week, current weather, some self care advice, a joke, and you current todo list tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shopify/toxiproxy"&gt;toxiproxy&lt;/a&gt; - Proxy to simulate network and system conditions for automated tests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tsuru.io/"&gt;tsuru&lt;/a&gt; - Extensible and open source Platform as a Service software.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lingrino/vaku"&gt;vaku&lt;/a&gt; - CLI &amp;amp; API for folder-based functions in Vault like copy, move, and search.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VerizonDigital/vflow"&gt;vFlow&lt;/a&gt; - High-performance, scalable and reliable IPFIX, sFlow and Netflow collector.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://waveterm.dev"&gt;Wave Terminal&lt;/a&gt; - Wave is an open-source, AI-native terminal built for seamless developer workflows with inline rendering, a modern UI, and persistent sessions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wellington/wellington"&gt;wellington&lt;/a&gt; - Sass project management tool, extends the language with sprite functions (like Compass).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/get-woke/woke"&gt;woke&lt;/a&gt; - Detect non-inclusive language in your source code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ekkinox/yai"&gt;yai&lt;/a&gt; - AI powered terminal assistant.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://git.mills.io/prologic/zs"&gt;zs&lt;/a&gt; - an extremely minimal static site generator.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Resources&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Where to discover new Go libraries.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Benchmarks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/davecheney/autobench"&gt;autobench&lt;/a&gt; - Framework to compare the performance between different Go versions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mrLSD/go-benchmark-app"&gt;go-benchmark-app&lt;/a&gt; - Powerful HTTP-benchmark tool mixed with –êb, Wrk, Siege tools. Gathering statistics and various parameters for benchmarks and comparison results.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tylertreat/go-benchmarks"&gt;go-benchmarks&lt;/a&gt; - Few miscellaneous Go microbenchmarks. Compare some language features to alternative approaches.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/julienschmidt/go-http-routing-benchmark"&gt;go-http-routing-benchmark&lt;/a&gt; - Go HTTP request router benchmark and comparison.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zerosnake0/go-json-benchmark"&gt;go-json-benchmark&lt;/a&gt; - Go JSON benchmark.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/go-ml-benchmarks"&gt;go-ml-benchmarks&lt;/a&gt; - benchmarks for machine learning inference in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/smallnest/go-web-framework-benchmark"&gt;go-web-framework-benchmark&lt;/a&gt; - Go web framework benchmark.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alecthomas/go_serialization_benchmarks"&gt;go_serialization_benchmarks&lt;/a&gt; - Benchmarks of Go serialization methods.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PuerkitoBio/gocostmodel"&gt;gocostmodel&lt;/a&gt; - Benchmarks of common basic operations for the Go language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SimonWaldherr/golang-benchmarks"&gt;golang-benchmarks&lt;/a&gt; - a collection of golang benchmarks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tyler-smith/golang-sql-benchmark"&gt;golang-sql-benchmark&lt;/a&gt; - Collection of benchmarks for popular Go database/SQL utilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/feyeleanor/GoSpeed"&gt;gospeed&lt;/a&gt; - Go micro-benchmarks for calculating the speed of language constructs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jimrobinson/kvbench"&gt;kvbench&lt;/a&gt; - Key/Value database benchmark.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atemerev/skynet"&gt;skynet&lt;/a&gt; - Skynet 1M threads microbenchmark.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fawick/speedtest-resize"&gt;speedtest-resize&lt;/a&gt; - Compare various Image resize algorithms for the Go language.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Conferences&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gocon.connpass.com/"&gt;GoCon&lt;/a&gt; - Tokyo, Japan.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.godays.io/"&gt;GoDays&lt;/a&gt; - Berlin, Germany.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://golab.io/"&gt;GoLab&lt;/a&gt; - Florence, Italy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gopherchina.org"&gt;GopherChina&lt;/a&gt; - Shanghai, China.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gophercon.com/"&gt;GopherCon&lt;/a&gt; - Varied Locations Each Year, USA.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gophercon.com.au/"&gt;GopherCon Australia&lt;/a&gt; - Sydney, Australia.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gopherconbr.org"&gt;GopherCon Brazil&lt;/a&gt; - Florian√≥polis, Brazil.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gophercon.eu/"&gt;GopherCon Europe&lt;/a&gt; - Berlin, Germany.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gopherconindia.org/"&gt;GopherCon India&lt;/a&gt; - Pune, India.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gophercon.org.il/"&gt;GopherCon Israel&lt;/a&gt; - Tel Aviv, Israel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gophercon-russia.ru"&gt;GopherCon Russia&lt;/a&gt; - Moscow, Russia.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gophercon.sg"&gt;GopherCon Singapore&lt;/a&gt; - Mapletree Business City, Singapore.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gophercon.co.uk/"&gt;GopherCon UK&lt;/a&gt; - London, UK.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gophercon.vn/"&gt;GopherCon Vietnam&lt;/a&gt; - Ho Chi Minh City, Vietnam.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gowestconf.com/"&gt;GoWest Conference&lt;/a&gt; - Lehi, USA.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;E-Books&lt;/h2&gt; 
&lt;h3&gt;E-books for purchase&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.manning.com/books/100-go-mistakes-how-to-avoid-them"&gt;100 Go Mistakes: How to Avoid Them&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nostarch.com/blackhatgo"&gt;Black Hat Go&lt;/a&gt; - Go programming for hackers and pentesters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.manning.com/books/build-an-orchestrator-in-go"&gt;Build an Orchestrator in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.manning.com/books/continuous-delivery-in-go"&gt;Continuous Delivery in Go&lt;/a&gt; - This practical guide to continuous delivery shows you how to rapidly establish an automated pipeline that will improve your testing, code quality, and final product.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.packtpub.com/product/creative-diy-microcontroller-projects-with-tinygo-and-webassembly/9781800560208"&gt;Creative DIY Microcontroller Project With TinyGo and WebAssembly&lt;/a&gt; - An introduction into the TinyGo compiler with projects involving Arduino and WebAssembly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.manning.com/books/effective-go"&gt;Effective Go: Elegant, efficient, and testable code&lt;/a&gt; - Unlock Go‚Äôs unique perspective on program design, and start writing simple, maintainable, and testable Go code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitfieldconsulting.com/books/love"&gt;For the Love of Go&lt;/a&gt; - An introductory book for Go beginners.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.manning.com/books/go-in-practice-second-edition"&gt;Go in Practice, Second Edition&lt;/a&gt; - Your practical guide on the ins-and-outs of Go development, covering the standard library and the most important tools from Go‚Äôs powerful ecosystem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitfieldconsulting.com/books/generics"&gt;Know Go: Generics&lt;/a&gt; - A guide to understanding and using generics in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lets-go.alexedwards.net"&gt;Lets-Go&lt;/a&gt; - A step-by-step guide to creating fast, secure and maintanable web applications with Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lets-go-further.alexedwards.net"&gt;Lets-Go-Further&lt;/a&gt; - Advanced patterns for building APIs and web applications in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitfieldconsulting.com/books/tests"&gt;The Power of Go: Tests&lt;/a&gt; - A guide to testing in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitfieldconsulting.com/books/tools"&gt;The Power of Go: Tools&lt;/a&gt; - A guide to writing command-line tools in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://compilerbook.com"&gt;Writing A Compiler In Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://interpreterbook.com"&gt;Writing An Interpreter In Go&lt;/a&gt; - Book that introduces dozens of techniques for writing idiomatic, expressive, and efficient Go code that avoids common pitfalls.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Free e-books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://leanpub.com/GoNotebook/read"&gt;A Go Developer's Notebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.golang-book.com/"&gt;An Introduction to Programming in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/volodymyrprokopyuk/go-blockchain"&gt;Build a blockchain from scratch in Go with gRPC&lt;/a&gt; - The foundational and practical guide for effectively learning and progressively building a blockchain from scratch in Go with gRPC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://astaxie.gitbooks.io/build-web-application-with-golang/content/en/"&gt;Build Web Application with Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codegangsta.gitbooks.io/building-web-apps-with-go/content/"&gt;Building Web Apps With Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://go101.org"&gt;Go 101&lt;/a&gt; - A book focusing on Go syntax/semantics and all kinds of details.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chai2010/go-ast-book"&gt;Go AST Book (Chinese)&lt;/a&gt; - A book focusing on Go &lt;code&gt;go/*&lt;/code&gt; packages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leanpub.com/gofaster"&gt;Go Faster&lt;/a&gt; - This book seeks to shorten your learning curve and help you become a proficient Go programmer, faster.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thedevsir/gosuccinctly"&gt;Go Succinctly&lt;/a&gt; - in Persian.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://threedots.tech/go-with-the-domain/"&gt;Go with the domain&lt;/a&gt; - A book showing how to apply DDD, Clean Architecture, and CQRS by practical refactoring.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dariubs/GoBooks"&gt;GoBooks&lt;/a&gt; - A curated list of Go books.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/books/how-to-code-in-go-ebook"&gt;How To Code in Go eBook&lt;/a&gt; - A 600 page introduction to Go aimed at first time developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.miek.nl/downloads/Go/Learning-Go-latest.pdf"&gt;Learning Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jan.newmarch.name/golang/"&gt;Network Programming With Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.practical-go-lessons.com/"&gt;Practical Go Lessons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blasrodri.github.io/spaceship-go-gh-pages/"&gt;Spaceship Go A Journey to the Standard Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gopl.io/"&gt;The Go Programming Language&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/polaris1119/The-Golang-Standard-Library-by-Example"&gt;The Golang Standard Library by Example (Chinese)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/karlseguin/the-little-go-book"&gt;The Little Go Book&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thewhitetulip/web-dev-golang-anti-textbook/"&gt;Web Application with Go the Anti-Textbook&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Gophers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MariaLetta/free-gophers-pack"&gt;Free Gophers Pack&lt;/a&gt; - Gopher graphics pack by Maria Letta with illustrations and emotional characters in vector and raster.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/keygx/Go-gopher-Vector"&gt;Go-gopher-Vector&lt;/a&gt; - Go gopher Vector Data [.ai, .svg].&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GolangUA/gopher-logos"&gt;gopher-logos&lt;/a&gt; - adorable gopher logos.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tenntenn/gopher-stickers"&gt;gopher-stickers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shalakhin/gophericons"&gt;gophericons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/matryer/gopherize.me"&gt;gopherize.me&lt;/a&gt; - Gopherize yourself.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ashleymcnamara/gophers"&gt;gophers&lt;/a&gt; - Gopher artworks by Ashley McNamara.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/egonelbre/gophers"&gt;gophers&lt;/a&gt; - Free gophers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rogeralsing/gophers"&gt;gophers&lt;/a&gt; - random gopher graphics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sillecelik/go-gopher"&gt;gophers&lt;/a&gt; - Gopher amigurumi toy pattern.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/scraly/gophers"&gt;gophers&lt;/a&gt; - Gophers by Aur√©lie Vache.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Meetups&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Basel-Go-Meetup/"&gt;Basel Go Meetup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Belfast-Gophers/"&gt;Belfast Gophers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-serbia/"&gt;Belgrade Golang Meetup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-users-berlin/"&gt;Berlin Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Brisbane-Golang-Meetup/"&gt;Brisbane Gophers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/berner-go-meetup/"&gt;B√§rner Go Meetup - Berne, Switzerland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/goireland/"&gt;Go Ireland - Dublin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golanguagenewyork/"&gt;Go Language NYC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Go-London-User-Group/"&gt;Go London User Group&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Go-Remote-Meetup/"&gt;Go Remote Meetup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/go-toronto/"&gt;Go Toronto&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Go-Users-Group-Atlanta/"&gt;Go User Group Atlanta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/GoBandung/"&gt;GoBandung&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/gobridge/"&gt;GoBridge, San Francisco, CA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/GoCracow/"&gt;GoCracow - Krakow, Poland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/GoJakarta/"&gt;GoJakarta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-amsterdam/"&gt;Golang Amsterdam&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Argentina/"&gt;Golang Argentina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Athens-Gophers/"&gt;Golang Athens&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/BaltimoreGolang/"&gt;Golang Baltimore, MD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Bangalore/"&gt;Golang Bangalore&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/go-belo-horizonte/"&gt;Golang Belo Horizonte - Brazil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/bostongo/"&gt;Golang Boston&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Bulgaria/"&gt;Golang Bulgaria&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Cardiff-Go-Meetup/"&gt;Golang Cardiff, UK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Go-Cph/"&gt;Golang Copenhagen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/GolangCWB/"&gt;Golang Curitiba - Brazil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-DC/"&gt;Golang DC, Arlington, VA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-dorset/"&gt;Golang Dorset, UK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Estonia/"&gt;Golang Estonia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Gurgaon-Go-Meetup/"&gt;Golang Gurgaon, India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Go-User-Group-Hamburg/"&gt;Golang Hamburg - Germany&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Go-Israel/"&gt;Golang Israel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Kathmandu/"&gt;Golang Kathmandu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Peru/"&gt;Golang Lima - Peru&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Lyon/"&gt;Golang Lyon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/fr-FR/Golang-Marseille/"&gt;Golang Marseille&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-mel/"&gt;Golang Melbourne&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-milano/"&gt;Golang Milano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/en-AU/Golang-North-East/"&gt;Golang North East&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Paris/"&gt;Golang Paris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Poland/"&gt;Golang Poland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Pune/"&gt;Golang Pune&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golangroma/"&gt;Golang Roma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-rotterdam/"&gt;Golang Rotterdam&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golangsg/"&gt;Golang Singapore&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Go-Stockholm/"&gt;Golang Stockholm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-syd/"&gt;Golang Sydney, AU&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golangbr/"&gt;Golang S√£o Paulo - Brazil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-taipei-meetup/"&gt;Golang Taipei&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/thessaloniki-golang-meetup/"&gt;Golang Thessaloniki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-torino/"&gt;Golang Torino&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kommunity.com/goturkiye"&gt;Golang Turkey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golangvan/"&gt;Golang Vancouver, BC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/viennago/"&gt;Golang Vienna, Austria&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Moscow/"&gt;Golang –ú–æ—Å–∫–≤–∞&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golangsf"&gt;GoSF - San Francisco, CA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Istanbul-Golang/"&gt;Istanbul Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/GolangNigeria/"&gt;Lagos Gophers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/nairobi-gophers/"&gt;Nairobi Gophers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang/"&gt;Seattle Go Programmers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/uagolang/"&gt;Ukrainian Golang User Groups&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/utahgophers/"&gt;Utah Go User Group&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Women-Who-Go/"&gt;Women Who Go - San Francisco, CA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/zurich-gophers/"&gt;Z√ºrich Gophers - Zurich, Switzerland&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Add the group of your city/country here (send &lt;strong&gt;PR&lt;/strong&gt;)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Style Guides&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bahlo/go-styleguide"&gt;bahlo/go-styleguide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cockroachdb/cockroach/raw/master/docs/style.md"&gt;CockroachDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.gitlab.com/ee/development/go_guide/"&gt;GitLab&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://google.github.io/styleguide/go/"&gt;Google&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/raw/release-1.4/docs/source/style-guides/go-style.rst"&gt;Hyperledger&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://thanos.io/tip/contributing/coding-style-guide.md/"&gt;Thanos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/betrybe/playbook-go/raw/main/README_EN.md"&gt;Trybe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber-go/guide/raw/master/style.md"&gt;Uber&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Social Media&lt;/h2&gt; 
&lt;h3&gt;Twitter&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/GoDiscussions"&gt;@GoDiscussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/golang"&gt;@golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/golang_news"&gt;@golang_news&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/golangch"&gt;@golangch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/golangweekly"&gt;@golangweekly&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Reddit&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.reddit.com/r/golang/"&gt;r/golang&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Websites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://go.libhunt.com"&gt;Awesome Go @LibHunt&lt;/a&gt; - Your go-to Go Toolbox.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amit-davidson/awesome-golang-workshops"&gt;Awesome Golang Workshops&lt;/a&gt; - A curated list of awesome golang workshops.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lukasz-madon/awesome-remote-job"&gt;Awesome Remote Job&lt;/a&gt; - Curated list of awesome remote jobs. A lot of them are looking for Go hackers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bayandin/awesome-awesomeness"&gt;awesome-awesomeness&lt;/a&gt; - List of other amazingly awesome lists.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xwjdsh/awesome-go-extra"&gt;awesome-go-extra&lt;/a&gt; - Parse awesome-go README file and generate a new README file with repo info.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codewithmukesh.com/categories/golang"&gt;Code with Mukesh&lt;/a&gt; - Software Engineer and Blogs @ codewithmukesh.com.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codingmystery.com"&gt;Coding Mystery&lt;/a&gt; - Solve exciting escape-room-inspired programming challenges using Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.codingame.com/"&gt;CodinGame&lt;/a&gt; - Learn Go by solving interactive tasks using small games as practical examples.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.golang.org"&gt;Go Blog&lt;/a&gt; - The official Go blog.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=nvoIPQYdx9g&amp;amp;list=PLEcwzBXTPUE_YQR7R0BRtHBYJ0LN3Y0i3"&gt;Go Code Club&lt;/a&gt; - A group of Gophers read and discuss a different Go project every week.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hashnode.com/n/go"&gt;Go Community on Hashnode&lt;/a&gt; - Community of Gophers on Hashnode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://forum.golangbridge.org"&gt;Go Forum&lt;/a&gt; - Forum to discuss Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang/go/wiki/Projects"&gt;Go Projects&lt;/a&gt; - List of projects on the Go community wiki.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://go-proverbs.github.io/"&gt;Go Proverbs&lt;/a&gt; - Go Proverbs by Rob Pike.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goreportcard.com"&gt;Go Report Card&lt;/a&gt; - A report card for your Go package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://go.dev/"&gt;go.dev&lt;/a&gt; - A hub for Go developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ninedraft/gocryforhelp"&gt;gocryforhelp&lt;/a&gt; - Collection of Go projects that needs help. Good place to start your open-source way in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://golangjob.xyz"&gt;Golang Developer Jobs&lt;/a&gt; - Developer Jobs exclusively for Golang related Roles.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://golangnews.com"&gt;Golang News&lt;/a&gt; - Links and news about Go programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://golangnugget.com"&gt;Golang Nugget&lt;/a&gt; - A weekly roundup of the best Go content, delivered to your inbox every Monday.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discu.eu/weekly/golang/"&gt;Golang Weekly&lt;/a&gt; - Each monday projects, tutorials and articles about Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/golang-nuts"&gt;golang-nuts&lt;/a&gt; - Go mailing list.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://plus.google.com/communities/114112804251407510571"&gt;Google Plus Community&lt;/a&gt; - The Google+ community for #golang enthusiasts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://invite.slack.golangbridge.org"&gt;Gopher Community Chat&lt;/a&gt; - Join Our New Slack Community For Gophers (&lt;a href="https://blog.gopheracademy.com/gophers-slack-community/"&gt;Understand how it came&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gophercises.com/"&gt;Gophercises&lt;/a&gt; - Free coding exercises for budding gophers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://m-zajac.github.io/json2go"&gt;json2go&lt;/a&gt; - Advanced JSON to Go struct conversion - online tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/c/justforfunc"&gt;justforfunc&lt;/a&gt; - Youtube channel dedicated to Go programming language tips and tricks, hosted by Francesc Campoy &lt;a href="https://twitter.com/francesc"&gt;@francesc&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.learngoprogramming.com"&gt;Learn Go Programming&lt;/a&gt; - Learn Go concepts with illustrations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://libs.tech/go"&gt;Libs.tech&lt;/a&gt; ‚Äì Awesome Go libraries and hidden gems&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://madewithgolang.com/?ref=awesome-go"&gt;Made with Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/"&gt;pkg.go.dev&lt;/a&gt; - Documentation for open source Go packages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://studygolang.com"&gt;studygolang&lt;/a&gt; - The community of studygolang in China.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trending?l=go"&gt;Trending Go repositories on GitHub today&lt;/a&gt; - Good place to find new Go libraries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tutorialedge.net/course/golang/"&gt;TutorialEdge - Golang&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Tutorials&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://devs.cloudimmunity.com/gotchas-and-common-mistakes-in-go-golang/"&gt;50 Shades of Go&lt;/a&gt; - Traps, Gotchas, and Common Mistakes for New Golang Devs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://betterstack.com/community/guides/logging/logging-in-go/"&gt;A Comprehensive Guide to Structured Logging in Go&lt;/a&gt; - Delve deep into the world of structured logging in Go with a specific focus on recently accepted slog proposal which aims to bring high performance structured logging with levels to the standard library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://snipcart.com/blog/golang-ecommerce-ponzu-cms-demo?utm_term=golang-ecommerce-ponzu-cms-demo"&gt;A Guide to Golang E-Commerce&lt;/a&gt; - Building a Golang site for e-commerce (demo included).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tour.golang.org/"&gt;A Tour of Go&lt;/a&gt; - Interactive tour of Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://link.medium.com/O9YQlx89Htb"&gt;Build a Database in 1000 lines of code&lt;/a&gt; - Build a NoSQL Database From Zero in 1000 Lines of Code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/astaxie/build-web-application-with-golang"&gt;Build web application with Golang&lt;/a&gt; - Golang ebook intro how to build a web app with golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://semaphoreci.com/community/tutorials/building-and-testing-a-rest-api-in-go-with-gorilla-mux-and-postgresql"&gt;Building and Testing a REST API in Go with Gorilla Mux and PostgreSQL&lt;/a&gt; - We‚Äôll write an API with the help of the powerful Gorilla Mux.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://semaphoreci.com/community/tutorials/building-go-web-applications-and-microservices-using-gin"&gt;Building Go Web Applications and Microservices Using Gin&lt;/a&gt; - Get familiar with Gin and find out how it can help you reduce boilerplate code and build a request handling pipeline.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@rocketlaunchr.cloud/caching-slow-database-queries-1085d308a0c9"&gt;Caching Slow Database Queries&lt;/a&gt; - How to cache slow database queries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@rocketlaunchr.cloud/canceling-mysql-in-go-827ed8f83b30"&gt;Canceling MySQL&lt;/a&gt; - How to cancel MySQL queries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://app.codecrafters.io/tracks/go"&gt;CodeCrafters Golang Track&lt;/a&gt; - Achieve mastery in advanced Go by building your own Redis, Docker, Git, and SQLite. Featuring goroutines, systems programming, file I/O, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shubhamzanwar/design-patterns"&gt;Design Patterns in Go&lt;/a&gt; - Collection of programming design patterns implemented in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9D4yH7e_ea8&amp;amp;list=PLDZujg-VgQlZUy1iCqBbe5faZLMkA3g2x"&gt;Games With Go&lt;/a&gt; - A video series teaching programming and game development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gobyexample.com/"&gt;Go By Example&lt;/a&gt; - Hands-on introduction to Go using annotated example programs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/a8m/go-lang-cheat-sheet"&gt;Go Cheat Sheet&lt;/a&gt; - Go's reference card.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://go-database-sql.org/"&gt;Go database/sql tutorial&lt;/a&gt; - Introduction to database/sql.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/harrytran103/7_days_of_go"&gt;Go in 7 days&lt;/a&gt; - Learn everything about Go in 7 days (from a Nodejs developer).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.javatpoint.com/go-tutorial"&gt;Go Language Tutorial&lt;/a&gt; - Learn Go language Tutorial.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tutorialspoint.com/go/index.htm"&gt;Go Tutorial&lt;/a&gt; - Learn Go programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tutorialedge.net/golang/go-webassembly-tutorial/"&gt;Go WebAssembly Tutorial - Building a Simple Calculator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/evrone/go-clean-template"&gt;go-clean-template&lt;/a&gt; - Clean Architecture template for Golang services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tmrts/go-patterns"&gt;go-patterns&lt;/a&gt; - Curated list of Go design patterns, recipes and idioms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miguelmota/golang-for-nodejs-developers"&gt;Golang for Node.js Developers&lt;/a&gt; - Examples of Golang compared to Node.js for learning.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/golang-tutorial-list-free-courses-learn-go-programming-language/"&gt;Golang Tutorial Guide&lt;/a&gt; - A List of Free Courses to Learn the Go Programming Language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SimonWaldherr/golang-examples"&gt;golang-examples&lt;/a&gt; - Many examples to learn Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://golangbot.com/learn-golang-series/"&gt;Golangbot&lt;/a&gt; - Tutorials to get started with programming in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gophercoding.com/"&gt;GopherCoding&lt;/a&gt; - Collection of code snippets and tutorials to help tackle every day issues.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gophersnippets.com/"&gt;GopherSnippets&lt;/a&gt; - Code snippets with tests and testable examples for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gosamples.dev/"&gt;Gosamples&lt;/a&gt; - Collection of code snippets that let you solve everyday code problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hasura.io/learn/graphql/backend-stack/languages/go/"&gt;GraphQL with Go&lt;/a&gt; - Learn how to create a Go GraphQL server and client with code generation. Also includes creating REST endpoints.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackr.io/tutorials/learn-golang"&gt;Hackr.io&lt;/a&gt; - Learn Go from the best online golang tutorials submitted &amp;amp; voted by the golang programming community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Haraj-backend/hex-monscape"&gt;Hex Monscape&lt;/a&gt; - Getting started guidelines in writing maintainable code using Hexagonal Architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@rocketlaunchr.cloud/how-to-benchmark-dbq-vs-sqlx-vs-gorm-e814caacecb5"&gt;How to Benchmark: dbq vs sqlx vs GORM&lt;/a&gt; - Learn how to benchmark in Go. As a case-study, we will benchmark dbq, sqlx and GORM.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://semaphoreci.com/community/tutorials/how-to-deploy-a-go-web-application-with-docker"&gt;How To Deploy a Go Web Application with Docker&lt;/a&gt; - Learn how to use Docker for Go development and how to build production Docker images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.permit.io/blog/role-based-access-control-rbac-authorization-in-golang"&gt;How to Implement Role-Based Access Control (RBAC) Authorization in Golang&lt;/a&gt; - A guide to implementing Role-Based Access Control (RBAC) in Golang, including code examples, covering various methods to secure app endpoints with role-based authorization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://semaphoreci.com/community/tutorials/how-to-use-godog-for-behavior-driven-development-in-go"&gt;How to Use Godog for Behavior-driven Development in Go&lt;/a&gt; - Get started with Godog - a Behavior-driven development framework for building and testing Go applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/inancgumus/learngo"&gt;Learn Go with 1000+ Exercises&lt;/a&gt; - Learn Go with thousands of examples, exercises, and quizzes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/quii/learn-go-with-tests"&gt;Learn Go with TDD&lt;/a&gt; - Learn Go with test-driven development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/aurelievache/learning-go-by-examples-introduction-448n"&gt;Learning Go by examples&lt;/a&gt; - Series of articles in order to learn Golang language by concrete applications as example.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLmD8u-IFdreyh6EUfevBcbiuCKzFk0EW_"&gt;Microservices with Go&lt;/a&gt; - Dive deep into building microservices using Go, including gRPC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/packagemain"&gt;package main&lt;/a&gt; - YouTube channel about Programming in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coursera.org/specializations/google-golang"&gt;Programming with Google Go&lt;/a&gt; - Coursera Specialization to learn about Go from scratch.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://betterstack.com/community/guides/scaling-go/"&gt;Scaling Go Applications&lt;/a&gt; - Everything about building, deploying and scaling Go applications in production.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@martinolsansky/webassembly-with-golang-is-fun-b243c0e34f02"&gt;The world‚Äôs easiest introduction to WebAssembly with Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/aurelievache/series/26234"&gt;Understanding Go in a visual way&lt;/a&gt; - Learn Go visually&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.w3basic.com/golang/"&gt;W3basic Go Tutorials&lt;/a&gt; - W3Basic provides an in-depth tutorial and well-organized content to learn Golang programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yourbasic.org/golang"&gt;Your basic Go&lt;/a&gt; - Huge collection of tutorials and how to's.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Guided Learning&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/golang"&gt;The Go Developer Roadmap&lt;/a&gt; - A visual roadmap that new Go developers can follow through to help them learn Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RezaSi/go-interview-practice"&gt;The Go Interview Practice&lt;/a&gt; - A GitHub repository offering coding challenges for Go technical interview preparation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tutorialedge.net/paths/golang/"&gt;The Go Learning Path&lt;/a&gt; - A guided learning path containing a mix of free and premium resources.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://labex.io/skilltrees/go"&gt;The Go Skill Tree&lt;/a&gt; - A structured learning path that combines both free and premium resources.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Please refer to our &lt;a href="https://github.com/avelino/awesome-go/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for guidelines.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://github.com/avelino/awesome-go/raw/main/LICENSE"&gt;MIT License&lt;/a&gt; - see the LICENSE file for details.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>