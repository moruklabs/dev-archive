<rss version="2.0">
  <channel>
    <title>GitHub Go Daily Trending</title>
    <description>Daily Trending of Go in GitHub</description>
    <pubDate>Sun, 19 Oct 2025 01:33:48 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>traefik/traefik</title>
      <link>https://github.com/traefik/traefik</link>
      <description>&lt;p&gt;The Cloud Native Application Proxy&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="docs/content/assets/img/traefik.logo-dark.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="docs/content/assets/img/traefik.logo.png" /&gt; 
  &lt;img alt="Traefik" title="Traefik" src="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/assets/img/traefik.logo.png" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://doc.traefik.io/traefik"&gt;&lt;img src="https://img.shields.io/badge/docs-current-brightgreen.svg?sanitize=true" alt="Docs" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/traefik/traefik"&gt;&lt;img src="https://goreportcard.com/badge/traefik/traefik" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/traefik/traefik/raw/master/LICENSE.md"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://community.traefik.io/"&gt;&lt;img src="https://img.shields.io/badge/style-register-green.svg?style=social&amp;amp;label=Discourse" alt="Join the community support forum at https://community.traefik.io/" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=traefik"&gt;&lt;img src="https://img.shields.io/twitter/follow/traefik.svg?style=social" alt="Twitter" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Traefik (pronounced &lt;em&gt;traffic&lt;/em&gt;) is a modern HTTP reverse proxy and load balancer that makes deploying microservices easy. Traefik integrates with your existing infrastructure components (&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;, &lt;a href="https://docs.docker.com/engine/swarm/"&gt;Swarm mode&lt;/a&gt;, &lt;a href="https://kubernetes.io"&gt;Kubernetes&lt;/a&gt;, &lt;a href="https://www.consul.io/"&gt;Consul&lt;/a&gt;, &lt;a href="https://coreos.com/etcd/"&gt;Etcd&lt;/a&gt;, &lt;a href="https://rancher.com"&gt;Rancher v2&lt;/a&gt;, &lt;a href="https://aws.amazon.com/ecs"&gt;Amazon ECS&lt;/a&gt;, ...) and configures itself automatically and dynamically. Pointing Traefik at your orchestrator should be the &lt;em&gt;only&lt;/em&gt; configuration step you need.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;. &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#overview"&gt;Overview&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#features"&gt;Features&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#supported-backends"&gt;Supported backends&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#quickstart"&gt;Quickstart&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#web-ui"&gt;Web UI&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#documentation"&gt;Documentation&lt;/a&gt;&lt;/strong&gt; .&lt;/p&gt; 
&lt;p&gt;. &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#support"&gt;Support&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#release-cycle"&gt;Release cycle&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#maintainers"&gt;Maintainers&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#credits"&gt;Credits&lt;/a&gt;&lt;/strong&gt; .&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; When migrating to a new major version of Traefik, please refer to the &lt;a href="https://doc.traefik.io/traefik/migrate/v2-to-v3/"&gt;migration guide&lt;/a&gt; to ensure a smooth transition and to be aware of any breaking changes.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Imagine that you have deployed a bunch of microservices with the help of an orchestrator (like Swarm or Kubernetes) or a service registry (like etcd or consul). Now you want users to access these microservices, and you need a reverse proxy.&lt;/p&gt; 
&lt;p&gt;Traditional reverse-proxies require that you configure &lt;em&gt;each&lt;/em&gt; route that will connect paths and subdomains to &lt;em&gt;each&lt;/em&gt; microservice. In an environment where you add, remove, kill, upgrade, or scale your services &lt;em&gt;many&lt;/em&gt; times a day, the task of keeping the routes up to date becomes tedious.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This is when Traefik can help you!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Traefik listens to your service registry/orchestrator API and instantly generates the routes so your microservices are connected to the outside world -- without further intervention from your part.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Run Traefik and let it do the work for you!&lt;/strong&gt; &lt;em&gt;(But if you'd rather configure some of your routes manually, Traefik supports that too!)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/assets/img/traefik-architecture.png" alt="Architecture" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Continuously updates its configuration (No restarts!)&lt;/li&gt; 
 &lt;li&gt;Supports multiple load balancing algorithms&lt;/li&gt; 
 &lt;li&gt;Provides HTTPS to your microservices by leveraging &lt;a href="https://letsencrypt.org"&gt;Let's Encrypt&lt;/a&gt; (wildcard certificates support)&lt;/li&gt; 
 &lt;li&gt;Circuit breakers, retry&lt;/li&gt; 
 &lt;li&gt;See the magic through its clean web UI&lt;/li&gt; 
 &lt;li&gt;WebSocket, HTTP/2, gRPC ready&lt;/li&gt; 
 &lt;li&gt;Provides metrics (Rest, Prometheus, Datadog, Statsd, InfluxDB 2.X)&lt;/li&gt; 
 &lt;li&gt;Keeps access logs (JSON, CLF)&lt;/li&gt; 
 &lt;li&gt;Fast&lt;/li&gt; 
 &lt;li&gt;Exposes a Rest API&lt;/li&gt; 
 &lt;li&gt;Packaged as a single binary file (made with &lt;span&gt;❤️&lt;/span&gt; with go) and available as an &lt;a href="https://hub.docker.com/r/_/traefik/"&gt;official&lt;/a&gt; docker image&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Backends&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/docker/"&gt;Docker&lt;/a&gt; / &lt;a href="https://doc.traefik.io/traefik/providers/docker/"&gt;Swarm mode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/kubernetes-crd/"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/ecs/"&gt;ECS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/file/"&gt;File&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;To get your hands on Traefik, you can use the &lt;a href="https://doc.traefik.io/traefik/getting-started/quick-start/"&gt;5-Minute Quickstart&lt;/a&gt; in our documentation (you will need Docker).&lt;/p&gt; 
&lt;h2&gt;Web UI&lt;/h2&gt; 
&lt;p&gt;You can access the simple HTML frontend of Traefik.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/assets/img/webui-dashboard.png" alt="Web UI Providers" /&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find the complete documentation of Traefik v3 at &lt;a href="https://doc.traefik.io/traefik/"&gt;https://doc.traefik.io/traefik/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;To get community support, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;join the Traefik community forum: &lt;a href="https://community.traefik.io/"&gt;&lt;img src="https://img.shields.io/badge/style-register-green.svg?style=social&amp;amp;label=Discourse" alt="Join the chat at https://community.traefik.io/" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you need commercial support, please contact &lt;a href="https://traefik.io"&gt;Traefik.io&lt;/a&gt; by mail: &lt;a href="mailto:support@traefik.io"&gt;mailto:support@traefik.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grab the latest binary from the &lt;a href="https://github.com/traefik/traefik/releases"&gt;releases&lt;/a&gt; page and run it with the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/traefik.sample.toml"&gt;sample configuration file&lt;/a&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;./traefik --configFile=traefik.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or use the official tiny Docker image and run it with the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/traefik.sample.toml"&gt;sample configuration file&lt;/a&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker run -d -p 8080:8080 -p 80:80 -v $PWD/traefik.toml:/etc/traefik/traefik.toml traefik
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or get the sources:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/traefik/traefik
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Introductory Videos&lt;/h2&gt; 
&lt;p&gt;You can find high level and deep dive videos on &lt;a href="https://videos.traefik.io"&gt;videos.traefik.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;p&gt;We are strongly promoting a philosophy of openness and sharing, and firmly standing against the elitist closed approach. Being part of the core team should be accessible to anyone who is motivated and want to be part of that journey! This &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/contributing/maintainers-guidelines.md"&gt;document&lt;/a&gt; describes how to be part of the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/contributing/maintainers.md"&gt;maintainers' team&lt;/a&gt; as well as various responsibilities and guidelines for Traefik maintainers. You can also find more information on our process to review pull requests and manage issues &lt;a href="https://github.com/traefik/contributors-guide/raw/master/issue_triage.md"&gt;in this document&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you'd like to contribute to the project, refer to the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/CONTRIBUTING.md"&gt;contributing documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please note that this project is released with a &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/CODE_OF_CONDUCT.md"&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project, you agree to abide by its terms.&lt;/p&gt; 
&lt;h2&gt;Release Cycle&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;We usually release 3/4 new versions (e.g. 1.1.0, 1.2.0, 1.3.0) per year.&lt;/li&gt; 
 &lt;li&gt;Release Candidates are available before the release (e.g. 1.1.0-rc1, 1.1.0-rc2, 1.1.0-rc3, 1.1.0-rc4, before 1.1.0).&lt;/li&gt; 
 &lt;li&gt;Bug-fixes (e.g. 1.1.1, 1.1.2, 1.2.1, 1.2.3) are released as needed (no additional features are delivered in those versions, bug-fixes only).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each version is supported until the next one is released (e.g. 1.1.x will be supported until 1.2.0 is out).&lt;/p&gt; 
&lt;p&gt;We use &lt;a href="https://semver.org/"&gt;Semantic Versioning&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Mailing Lists&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;General announcements, new releases: mail at &lt;a href="mailto:news+subscribe@traefik.io"&gt;news+subscribe@traefik.io&lt;/a&gt; or on &lt;a href="https://groups.google.com/a/traefik.io/forum/#!forum/news"&gt;the online viewer&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Security announcements: mail at &lt;a href="mailto:security+subscribe@traefik.io"&gt;security+subscribe@traefik.io&lt;/a&gt; or on &lt;a href="https://groups.google.com/a/traefik.io/forum/#!forum/security"&gt;the online viewer&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Kudos to &lt;a href="https://www.instagram.com/pierroks/"&gt;Peka&lt;/a&gt; for his awesome work on the gopher's logo!.&lt;/p&gt; 
&lt;p&gt;The gopher's logo of Traefik is licensed under the Creative Commons 3.0 Attributions license.&lt;/p&gt; 
&lt;p&gt;The gopher's logo of Traefik was inspired by the gopher stickers made by &lt;a href="https://twitter.com/tenntenn"&gt;Takuya Ueda&lt;/a&gt;. The original Go gopher was designed by &lt;a href="https://reneefrench.blogspot.com/"&gt;Renee French&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hashicorp/terraform</title>
      <link>https://github.com/hashicorp/terraform</link>
      <description>&lt;p&gt;Terraform enables you to safely and predictably create, change, and improve infrastructure. It is a source-available tool that codifies APIs into declarative configuration files that can be shared amongst team members, treated as code, edited, reviewed, and versioned.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Terraform&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href="https://developer.hashicorp.com/terraform"&gt;https://developer.hashicorp.com/terraform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Forums: &lt;a href="https://discuss.hashicorp.com/c/terraform-core"&gt;HashiCorp Discuss&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://developer.hashicorp.com/terraform/docs"&gt;https://developer.hashicorp.com/terraform/docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tutorials: &lt;a href="https://developer.hashicorp.com/terraform/tutorials"&gt;HashiCorp's Learn Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Certification Exam: &lt;a href="https://www.hashicorp.com/certification/#hashicorp-certified-terraform-associate"&gt;HashiCorp Certified: Terraform Associate&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img alt="Terraform" src="https://www.datocms-assets.com/2885/1731373310-terraform_white.svg?sanitize=true" width="600px" /&gt; 
&lt;p&gt;Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.&lt;/p&gt; 
&lt;p&gt;The key features of Terraform are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Infrastructure as Code&lt;/strong&gt;: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Execution Plans&lt;/strong&gt;: Terraform has a "planning" step where it generates an execution plan. The execution plan shows what Terraform will do when you call apply. This lets you avoid any surprises when Terraform manipulates infrastructure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Resource Graph&lt;/strong&gt;: Terraform builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, Terraform builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Change Automation&lt;/strong&gt;: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what Terraform will change and in what order, avoiding many possible human errors.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information, refer to the &lt;a href="https://www.terraform.io/intro"&gt;What is Terraform?&lt;/a&gt; page on the Terraform website.&lt;/p&gt; 
&lt;h2&gt;Getting Started &amp;amp; Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation is available on the &lt;a href="https://developer.hashicorp.com/terraform"&gt;Terraform website&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.hashicorp.com/terraform/intro"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.hashicorp.com/terraform/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you're new to Terraform and want to get started creating infrastructure, please check out our &lt;a href="https://learn.hashicorp.com/terraform#getting-started"&gt;Getting Started guides&lt;/a&gt; on HashiCorp's learning platform. There are also &lt;a href="https://learn.hashicorp.com/terraform#operations-and-development"&gt;additional guides&lt;/a&gt; to continue your learning.&lt;/p&gt; 
&lt;p&gt;Show off your Terraform knowledge by passing a certification exam. Visit the &lt;a href="https://www.hashicorp.com/certification/"&gt;certification page&lt;/a&gt; for information about exams and find &lt;a href="https://learn.hashicorp.com/terraform/certification/terraform-associate"&gt;study materials&lt;/a&gt; on HashiCorp's learning platform.&lt;/p&gt; 
&lt;h2&gt;Developing Terraform&lt;/h2&gt; 
&lt;p&gt;This repository contains only Terraform core, which includes the command line interface and the main graph engine. Providers are implemented as plugins, and Terraform can automatically download providers that are published on &lt;a href="https://registry.terraform.io"&gt;the Terraform Registry&lt;/a&gt;. HashiCorp develops some providers, and others are developed by other organizations. For more information, refer to &lt;a href="https://developer.hashicorp.com/terraform/plugin"&gt;Plugin development&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;To learn more about compiling Terraform and contributing suggested changes, refer to &lt;a href="https://raw.githubusercontent.com/hashicorp/terraform/main/.github/CONTRIBUTING.md"&gt;the contributing guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To learn more about how we handle bug reports, refer to the &lt;a href="https://raw.githubusercontent.com/hashicorp/terraform/main/BUGPROCESS.md"&gt;bug triage guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To learn how to contribute to the Terraform documentation, refer to the &lt;a href="https://github.com/hashicorp/web-unified-docs"&gt;Web Unified Docs repository&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/hashicorp/terraform/raw/main/LICENSE"&gt;Business Source License 1.1&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>charmbracelet/crush</title>
      <link>https://github.com/charmbracelet/crush</link>
      <description>&lt;p&gt;The glamourous AI coding agent for your favourite terminal 💘&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Crush&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://stuff.charm.sh/crush/charm-crush.png"&gt;&lt;img width="450" alt="Charm Crush Logo" src="https://github.com/user-attachments/assets/adc1a6f4-b284-4603-836c-59038caa2e8b" /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href="https://github.com/charmbracelet/crush/releases"&gt;&lt;img src="https://img.shields.io/github/release/charmbracelet/crush" alt="Latest Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/charmbracelet/crush/actions"&gt;&lt;img src="https://github.com/charmbracelet/crush/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;Your new coding bestie, now available in your favourite terminal.&lt;br /&gt;Your tools, your code, and your workflows, wired into your LLM of choice.&lt;/p&gt; 
&lt;p align="center"&gt;你的新编程伙伴，现在就在你最爱的终端中。&lt;br /&gt;你的工具、代码和工作流，都与您选择的 LLM 模型紧密相连。&lt;/p&gt; 
&lt;p align="center"&gt;&lt;img width="800" alt="Crush Demo" src="https://github.com/user-attachments/assets/58280caf-851b-470a-b6f7-d5c4ea8a1968" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Model:&lt;/strong&gt; choose from a wide range of LLMs or add your own via OpenAI- or Anthropic-compatible APIs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible:&lt;/strong&gt; switch LLMs mid-session while preserving context&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Session-Based:&lt;/strong&gt; maintain multiple work sessions and contexts per project&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LSP-Enhanced:&lt;/strong&gt; Crush uses LSPs for additional context, just like you do&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible:&lt;/strong&gt; add capabilities via MCPs (&lt;code&gt;http&lt;/code&gt;, &lt;code&gt;stdio&lt;/code&gt;, and &lt;code&gt;sse&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Works Everywhere:&lt;/strong&gt; first-class support in every terminal on macOS, Linux, Windows (PowerShell and WSL), FreeBSD, OpenBSD, and NetBSD&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Use a package manager:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Homebrew
brew install charmbracelet/tap/crush

# NPM
npm install -g @charmland/crush

# Arch Linux (btw)
yay -S crush-bin

# Nix
nix run github:numtide/nix-ai-tools#crush
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Windows users:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Winget
winget install charmbracelet.crush

# Scoop
scoop bucket add charm https://github.com/charmbracelet/scoop-bucket.git
scoop install crush
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Nix (NUR)&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Crush is available via &lt;a href="https://github.com/nix-community/NUR"&gt;NUR&lt;/a&gt; in &lt;code&gt;nur.repos.charmbracelet.crush&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;You can also try out Crush via &lt;code&gt;nix-shell&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Add the NUR channel.
nix-channel --add https://github.com/nix-community/NUR/archive/main.tar.gz nur
nix-channel --update

# Get Crush in a Nix shell.
nix-shell -p '(import &amp;lt;nur&amp;gt; { pkgs = import &amp;lt;nixpkgs&amp;gt; {}; }).repos.charmbracelet.crush'
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;NixOS &amp;amp; Home Manager Module Usage via NUR&lt;/h3&gt; 
 &lt;p&gt;Crush provides NixOS and Home Manager modules via NUR. You can use these modules directly in your flake by importing them from NUR. Since it auto detects whether its a home manager or nixos context you can use the import the exact same way :)&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-nix"&gt;{
  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
    nur.url = "github:nix-community/NUR";
  };

  outputs = { self, nixpkgs, nur, ... }: {
    nixosConfigurations.your-hostname = nixpkgs.lib.nixosSystem {
      system = "x86_64-linux";
      modules = [
        nur.modules.nixos.default
        nur.repos.charmbracelet.modules.crush
        {
          programs.crush = {
            enable = true;
            settings = {
              providers = {
                openai = {
                  id = "openai";
                  name = "OpenAI";
                  base_url = "https://api.openai.com/v1";
                  type = "openai";
                  api_key = "sk-fake123456789abcdef...";
                  models = [
                    {
                      id = "gpt-4";
                      name = "GPT-4";
                    }
                  ];
                };
              };
              lsp = {
                go = { command = "gopls"; enabled = true; };
                nix = { command = "nil"; enabled = true; };
              };
              options = {
                context_paths = [ "/etc/nixos/configuration.nix" ];
                tui = { compact_mode = true; };
                debug = false;
              };
            };
          };
        }
      ];
    };
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Debian/Ubuntu&lt;/strong&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg
echo "deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *" | sudo tee /etc/apt/sources.list.d/charm.list
sudo apt update &amp;amp;&amp;amp; sudo apt install crush
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Fedora/RHEL&lt;/strong&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;echo '[charm]
name=Charm
baseurl=https://repo.charm.sh/yum/
enabled=1
gpgcheck=1
gpgkey=https://repo.charm.sh/yum/gpg.key' | sudo tee /etc/yum.repos.d/charm.repo
sudo yum install crush
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Or, download it:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/crush/releases"&gt;Packages&lt;/a&gt; are available in Debian and RPM formats&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/crush/releases"&gt;Binaries&lt;/a&gt; are available for Linux, macOS, Windows, FreeBSD, OpenBSD, and NetBSD&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or just install it with Go:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go install github.com/charmbracelet/crush@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Productivity may increase when using Crush and you may find yourself nerd sniped when first using the application. If the symptoms persist, join the &lt;a href="https://charm.land/discord"&gt;Discord&lt;/a&gt; and nerd snipe the rest of us.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;The quickest way to get started is to grab an API key for your preferred provider such as Anthropic, OpenAI, Groq, or OpenRouter and just start Crush. You'll be prompted to enter your API key.&lt;/p&gt; 
&lt;p&gt;That said, you can also set environment variables for preferred providers.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Environment Variable&lt;/th&gt; 
   &lt;th&gt;Provider&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ANTHROPIC_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Anthropic&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;OpenAI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OPENROUTER_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;OpenRouter&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;GEMINI_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Google Gemini&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CEREBRAS_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Cerebras&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;HF_TOKEN&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Huggingface Inference&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;VERTEXAI_PROJECT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Google Cloud VertexAI (Gemini)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;VERTEXAI_LOCATION&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Google Cloud VertexAI (Gemini)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;GROQ_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Groq&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;AWS Bedrock (Claude)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;AWS Bedrock (Claude)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AWS_REGION&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;AWS Bedrock (Claude)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AWS_PROFILE&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Custom AWS Profile&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AWS_REGION&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;AWS Region&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AZURE_OPENAI_API_ENDPOINT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Azure OpenAI models&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AZURE_OPENAI_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Azure OpenAI models (optional when using Entra ID)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AZURE_OPENAI_API_VERSION&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Azure OpenAI models&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;By the Way&lt;/h3&gt; 
&lt;p&gt;Is there a provider you’d like to see in Crush? Is there an existing model that needs an update?&lt;/p&gt; 
&lt;p&gt;Crush’s default model listing is managed in &lt;a href="https://github.com/charmbracelet/catwalk"&gt;Catwalk&lt;/a&gt;, a community-supported, open source repository of Crush-compatible models, and you’re welcome to contribute.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/charmbracelet/catwalk"&gt;&lt;img width="174" height="174" alt="Catwalk Badge" src="https://github.com/user-attachments/assets/95b49515-fe82-4409-b10d-5beb0873787d" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Crush runs great with no configuration. That said, if you do need or want to customize Crush, configuration can be added either local to the project itself, or globally, with the following priority:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;.crush.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;crush.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$HOME/.config/crush/crush.json&lt;/code&gt; (Windows: &lt;code&gt;%USERPROFILE%\AppData\Local\crush\crush.json&lt;/code&gt;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Configuration itself is stored as a JSON object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "this-setting": { "this": "that" },
  "that-setting": ["ceci", "cela"]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As an additional note, Crush also stores ephemeral data, such as application state, in one additional location:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Unix
$HOME/.local/share/crush/crush.json

# Windows
%LOCALAPPDATA%\crush\crush.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LSPs&lt;/h3&gt; 
&lt;p&gt;Crush can use LSPs for additional context to help inform its decisions, just like you would. LSPs can be added manually like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "lsp": {
    "go": {
      "command": "gopls",
      "env": {
        "GOTOOLCHAIN": "go1.24.5"
      }
    },
    "typescript": {
      "command": "typescript-language-server",
      "args": ["--stdio"]
    },
    "nix": {
      "command": "nil"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MCPs&lt;/h3&gt; 
&lt;p&gt;Crush also supports Model Context Protocol (MCP) servers through three transport types: &lt;code&gt;stdio&lt;/code&gt; for command-line servers, &lt;code&gt;http&lt;/code&gt; for HTTP endpoints, and &lt;code&gt;sse&lt;/code&gt; for Server-Sent Events. Environment variable expansion is supported using &lt;code&gt;$(echo $VAR)&lt;/code&gt; syntax.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "mcp": {
    "filesystem": {
      "type": "stdio",
      "command": "node",
      "args": ["/path/to/mcp-server.js"],
      "timeout": 120,
      "disabled": false,
      "env": {
        "NODE_ENV": "production"
      }
    },
    "github": {
      "type": "http",
      "url": "https://example.com/mcp/",
      "timeout": 120,
      "disabled": false,
      "headers": {
        "Authorization": "$(echo Bearer $EXAMPLE_MCP_TOKEN)"
      }
    },
    "streaming-service": {
      "type": "sse",
      "url": "https://example.com/mcp/sse",
      "timeout": 120,
      "disabled": false,
      "headers": {
        "API-Key": "$(echo $API_KEY)"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Ignoring Files&lt;/h3&gt; 
&lt;p&gt;Crush respects &lt;code&gt;.gitignore&lt;/code&gt; files by default, but you can also create a &lt;code&gt;.crushignore&lt;/code&gt; file to specify additional files and directories that Crush should ignore. This is useful for excluding files that you want in version control but don't want Crush to consider when providing context.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;.crushignore&lt;/code&gt; file uses the same syntax as &lt;code&gt;.gitignore&lt;/code&gt; and can be placed in the root of your project or in subdirectories.&lt;/p&gt; 
&lt;h3&gt;Allowing Tools&lt;/h3&gt; 
&lt;p&gt;By default, Crush will ask you for permission before running tool calls. If you'd like, you can allow tools to be executed without prompting you for permissions. Use this with care.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "permissions": {
    "allowed_tools": [
      "view",
      "ls",
      "grep",
      "edit",
      "mcp_context7_get-library-doc"
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also skip all permission prompts entirely by running Crush with the &lt;code&gt;--yolo&lt;/code&gt; flag. Be very, very careful with this feature.&lt;/p&gt; 
&lt;h3&gt;Attribution Settings&lt;/h3&gt; 
&lt;p&gt;By default, Crush adds attribution information to Git commits and pull requests it creates. You can customize this behavior with the &lt;code&gt;attribution&lt;/code&gt; option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "options": {
    "attribution": {
      "co_authored_by": true,
      "generated_with": true
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;co_authored_by&lt;/code&gt;: When true (default), adds &lt;code&gt;Co-Authored-By: Crush &amp;lt;crush@charm.land&amp;gt;&lt;/code&gt; to commit messages&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;generated_with&lt;/code&gt;: When true (default), adds &lt;code&gt;💘 Generated with Crush&lt;/code&gt; line to commit messages and PR descriptions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Local Models&lt;/h3&gt; 
&lt;p&gt;Local models can also be configured via OpenAI-compatible API. Here are two common examples:&lt;/p&gt; 
&lt;h4&gt;Ollama&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "providers": {
    "ollama": {
      "name": "Ollama",
      "base_url": "http://localhost:11434/v1/",
      "type": "openai",
      "models": [
        {
          "name": "Qwen 3 30B",
          "id": "qwen3:30b",
          "context_window": 256000,
          "default_max_tokens": 20000
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;LM Studio&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "providers": {
    "lmstudio": {
      "name": "LM Studio",
      "base_url": "http://localhost:1234/v1/",
      "type": "openai",
      "models": [
        {
          "name": "Qwen 3 30B",
          "id": "qwen/qwen3-30b-a3b-2507",
          "context_window": 256000,
          "default_max_tokens": 20000
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Custom Providers&lt;/h3&gt; 
&lt;p&gt;Crush supports custom provider configurations for both OpenAI-compatible and Anthropic-compatible APIs.&lt;/p&gt; 
&lt;h4&gt;OpenAI-Compatible APIs&lt;/h4&gt; 
&lt;p&gt;Here’s an example configuration for Deepseek, which uses an OpenAI-compatible API. Don't forget to set &lt;code&gt;DEEPSEEK_API_KEY&lt;/code&gt; in your environment.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "providers": {
    "deepseek": {
      "type": "openai",
      "base_url": "https://api.deepseek.com/v1",
      "api_key": "$DEEPSEEK_API_KEY",
      "models": [
        {
          "id": "deepseek-chat",
          "name": "Deepseek V3",
          "cost_per_1m_in": 0.27,
          "cost_per_1m_out": 1.1,
          "cost_per_1m_in_cached": 0.07,
          "cost_per_1m_out_cached": 1.1,
          "context_window": 64000,
          "default_max_tokens": 5000
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Anthropic-Compatible APIs&lt;/h4&gt; 
&lt;p&gt;Custom Anthropic-compatible providers follow this format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "providers": {
    "custom-anthropic": {
      "type": "anthropic",
      "base_url": "https://api.anthropic.com/v1",
      "api_key": "$ANTHROPIC_API_KEY",
      "extra_headers": {
        "anthropic-version": "2023-06-01"
      },
      "models": [
        {
          "id": "claude-sonnet-4-20250514",
          "name": "Claude Sonnet 4",
          "cost_per_1m_in": 3,
          "cost_per_1m_out": 15,
          "cost_per_1m_in_cached": 3.75,
          "cost_per_1m_out_cached": 0.3,
          "context_window": 200000,
          "default_max_tokens": 50000,
          "can_reason": true,
          "supports_attachments": true
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Amazon Bedrock&lt;/h3&gt; 
&lt;p&gt;Crush currently supports running Anthropic models through Bedrock, with caching disabled.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A Bedrock provider will appear once you have AWS configured, i.e. &lt;code&gt;aws configure&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Crush also expects the &lt;code&gt;AWS_REGION&lt;/code&gt; or &lt;code&gt;AWS_DEFAULT_REGION&lt;/code&gt; to be set&lt;/li&gt; 
 &lt;li&gt;To use a specific AWS profile set &lt;code&gt;AWS_PROFILE&lt;/code&gt; in your environment, i.e. &lt;code&gt;AWS_PROFILE=myprofile crush&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Vertex AI Platform&lt;/h3&gt; 
&lt;p&gt;Vertex AI will appear in the list of available providers when &lt;code&gt;VERTEXAI_PROJECT&lt;/code&gt; and &lt;code&gt;VERTEXAI_LOCATION&lt;/code&gt; are set. You will also need to be authenticated:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gcloud auth application-default login
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To add specific models to the configuration, configure as such:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "providers": {
    "vertexai": {
      "models": [
        {
          "id": "claude-sonnet-4@20250514",
          "name": "VertexAI Sonnet 4",
          "cost_per_1m_in": 3,
          "cost_per_1m_out": 15,
          "cost_per_1m_in_cached": 3.75,
          "cost_per_1m_out_cached": 0.3,
          "context_window": 200000,
          "default_max_tokens": 50000,
          "can_reason": true,
          "supports_attachments": true
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Logging&lt;/h2&gt; 
&lt;p&gt;Sometimes you need to look at logs. Luckily, Crush logs all sorts of stuff. Logs are stored in &lt;code&gt;./.crush/logs/crush.log&lt;/code&gt; relative to the project.&lt;/p&gt; 
&lt;p&gt;The CLI also contains some helper commands to make perusing recent logs easier:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Print the last 1000 lines
crush logs

# Print the last 500 lines
crush logs --tail 500

# Follow logs in real time
crush logs --follow
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Want more logging? Run &lt;code&gt;crush&lt;/code&gt; with the &lt;code&gt;--debug&lt;/code&gt; flag, or enable it in the config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "options": {
    "debug": true,
    "debug_lsp": true
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Provider Auto-Updates&lt;/h2&gt; 
&lt;p&gt;By default, Crush automatically checks for the latest and greatest list of providers and models from &lt;a href="https://github.com/charmbracelet/catwalk"&gt;Catwalk&lt;/a&gt;, the open source Crush provider database. This means that when new providers and models are available, or when model metadata changes, Crush automatically updates your local configuration.&lt;/p&gt; 
&lt;h3&gt;Disabling automatic provider updates&lt;/h3&gt; 
&lt;p&gt;For those with restricted internet access, or those who prefer to work in air-gapped environments, this might not be want you want, and this feature can be disabled.&lt;/p&gt; 
&lt;p&gt;To disable automatic provider updates, set &lt;code&gt;disable_provider_auto_update&lt;/code&gt; into your &lt;code&gt;crush.json&lt;/code&gt; config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "options": {
    "disable_provider_auto_update": true
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or set the &lt;code&gt;CRUSH_DISABLE_PROVIDER_AUTO_UPDATE&lt;/code&gt; environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export CRUSH_DISABLE_PROVIDER_AUTO_UPDATE=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manually updating providers&lt;/h3&gt; 
&lt;p&gt;Manually updating providers is possible with the &lt;code&gt;crush update-providers&lt;/code&gt; command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Update providers remotely from Catwalk.
crush update-providers

# Update providers from a custom Catwalk base URL.
crush update-providers https://example.com/

# Update providers from a local file.
crush update-providers /path/to/local-providers.json

# Reset providers to the embedded version, embedded at crush at build time.
crush update-providers embedded

# For more info:
crush update-providers --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Metrics&lt;/h2&gt; 
&lt;p&gt;Crush records pseudonymous usage metrics (tied to a device-specific hash), which maintainers rely on to inform development and support priorities. The metrics include solely usage metadata; prompts and responses are NEVER collected.&lt;/p&gt; 
&lt;p&gt;Details on exactly what’s collected are in the source code (&lt;a href="https://github.com/charmbracelet/crush/tree/main/internal/event"&gt;here&lt;/a&gt; and &lt;a href="https://github.com/charmbracelet/crush/raw/main/internal/llm/agent/event.go"&gt;here&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;You can opt out of metrics collection at any time by setting the environment variable by setting the following in your environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export CRUSH_DISABLE_METRICS=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or by setting the following in your config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "options": {
    "disable_metrics": true
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Crush also respects the &lt;a href="https://consoledonottrack.com"&gt;&lt;code&gt;DO_NOT_TRACK&lt;/code&gt;&lt;/a&gt; convention which can be enabled via &lt;code&gt;export DO_NOT_TRACK=1&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;A Note on Claude Max and GitHub Copilot&lt;/h2&gt; 
&lt;p&gt;Crush only supports model providers through official, compliant APIs. We do not support or endorse any methods that rely on personal Claude Max and GitHub Copilot accounts or OAuth workarounds, which violate Anthropic and Microsoft’s Terms of Service.&lt;/p&gt; 
&lt;p&gt;We’re committed to building sustainable, trusted integrations with model providers. If you’re a provider interested in working with us, &lt;a href="mailto:vt100@charm.sh"&gt;reach out&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/charmbracelet/crush?tab=contributing-ov-file#contributing"&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Whatcha think?&lt;/h2&gt; 
&lt;p&gt;We’d love to hear your thoughts on this project. Need help? We gotchu. You can find us on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/charmcli"&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://charm.land/discord"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://charm.land/slack"&gt;Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mastodon.social/@charmcli"&gt;The Fediverse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bsky.app/profile/charm.land"&gt;Bluesky&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/charmbracelet/crush/raw/main/LICENSE.md"&gt;FSL-1.1-MIT&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Part of &lt;a href="https://charm.land"&gt;Charm&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://charm.land/"&gt;&lt;img alt="The Charm logo" width="400" src="https://stuff.charm.sh/charm-banner-next.jpg" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!--prettier-ignore--&gt; 
&lt;p&gt;Charm热爱开源 • Charm loves open source&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DataDog/datadog-agent</title>
      <link>https://github.com/DataDog/datadog-agent</link>
      <description>&lt;p&gt;Main repository for Datadog Agent&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Datadog Agent&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/v/release/DataDog/datadog-agent?style=flat&amp;amp;logo=datadog&amp;amp;logoColor=%23632CA6&amp;amp;labelColor=%23FFF&amp;amp;color=%23632CA6" alt="GitHub Release" /&gt; &lt;a href="https://codecov.io/github/DataDog/datadog-agent?branch=main"&gt;&lt;img src="https://codecov.io/github/DataDog/datadog-agent/coverage.svg?branch=main" alt="Coverage status" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/github.com/DataDog/datadog-agent"&gt;&lt;img src="https://godoc.org/github.com/DataDog/datadog-agent?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains the source code of the Datadog Agent version 7 and version 6. Please refer to the &lt;a href="https://docs.datadoghq.com/agent/"&gt;Agent user documentation&lt;/a&gt; for information about differences between Agent v5, Agent v6 and Agent v7. Additionally, we provide a list of prepackaged binaries for an easy install process &lt;a href="https://app.datadoghq.com/fleet/install-agent/latest?platform=overview"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://datadoghq.dev/datadog-agent/setup/"&gt;developer docs site&lt;/a&gt; contains information about how to develop the Datadog Agent itself.&lt;/p&gt; 
&lt;p&gt;The source of the content is located under &lt;a href="https://raw.githubusercontent.com/DataDog/datadog-agent/main/docs"&gt;the docs directory&lt;/a&gt; and may contain pages that are not yet published.&lt;/p&gt; 
&lt;h2&gt;Contributing code&lt;/h2&gt; 
&lt;p&gt;You'll find information and help on how to contribute code to this project under &lt;a href="https://raw.githubusercontent.com/DataDog/datadog-agent/main/docs/dev"&gt;the &lt;code&gt;docs/dev&lt;/code&gt; directory&lt;/a&gt; of the present repo.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The Datadog Agent user space components are licensed under the &lt;a href="https://raw.githubusercontent.com/DataDog/datadog-agent/main/LICENSE"&gt;Apache License, Version 2.0&lt;/a&gt;. The BPF code is licensed under the &lt;a href="https://raw.githubusercontent.com/DataDog/datadog-agent/main/pkg/ebpf/c/COPYING"&gt;General Public License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ZenPrivacy/zen-desktop</title>
      <link>https://github.com/ZenPrivacy/zen-desktop</link>
      <description>&lt;p&gt;Simple, free and efficient ad-blocker and privacy guard for Windows, macOS and Linux&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;img src="https://github.com/ZenPrivacy/zen-desktop/raw/master/assets/appicon.png?raw=true" alt="Zen's Blue Shield Logo" width="150" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt; Zen: Your Comprehensive Ad-Blocker and Privacy Guard &lt;/h3&gt; 
&lt;blockquote align="center"&gt;
  There is, simply, no way, to ignore privacy. Because a citizenry’s freedoms are interdependent, to surrender your own privacy is really to surrender everyone’s. 
 &lt;p&gt;Edward Snowden, Permanent Record&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/license/ZenPrivacy/zen-desktop" alt="GitHub License" /&gt; &lt;img src="https://img.shields.io/github/v/release/ZenPrivacy/zen-desktop" alt="GitHub release" /&gt; &lt;img src="https://img.shields.io/github/downloads/ZenPrivacy/zen-desktop/total" alt="GitHub download counter" /&gt; &lt;a href="https://discord.gg/jSzEwby7JY"&gt; &lt;img alt="Discord" src="https://dcbadge.limes.pink/api/server/https://discord.gg/jSzEwby7JY?style=flat" /&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Zen is an open-source system-wide ad-blocker and privacy guard for Windows, macOS, and Linux. It works by setting up a proxy that intercepts HTTP requests from all applications, and blocks those serving ads, tracking scripts that monitor your behavior, malware, and other unwanted content. By operating at the system level, Zen can protect against threats that browser extensions cannot, such as trackers embedded in desktop applications and operating system components. Zen comes with many pre-installed filters, but also allows you to easily add hosts files and EasyList-style filters, enabling you to tailor your protection to your specific needs.&lt;/p&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;p&gt;During the first run, Zen will prompt you to install a root certificate. This is required for Zen to be able to intercept and modify HTTPS requests. This certificate is generated locally and never leaves your device. For details on how this works and the steps we take to secure it, see our &lt;a href="https://raw.githubusercontent.com/ZenPrivacy/zen-desktop/master/docs/internal/security-architecture.md"&gt;security architecture&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;x64: &lt;a href="https://github.com/ZenPrivacy/zen-desktop/releases/latest/download/Zen-amd64-installer.exe"&gt;💾 Installer&lt;/a&gt; | &lt;a href="https://github.com/ZenPrivacy/zen-desktop/releases/latest/download/Zen_windows_amd64.zip"&gt;📦 Portable&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ARM64: &lt;a href="https://github.com/ZenPrivacy/zen-desktop/releases/latest/download/Zen-arm64-installer.exe"&gt;💾 Installer&lt;/a&gt; | &lt;a href="https://github.com/ZenPrivacy/zen-desktop/releases/latest/download/Zen_windows_arm64.zip"&gt;📦 Portable&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Unsure which version to download? Click on 'Start' and type 'View processor info'. The 'System type' field under 'Device specifications' will tell you which one you need.&lt;/p&gt; 
&lt;h4&gt;Winget&lt;/h4&gt; 
&lt;p&gt;Zen is available via &lt;a href="https://github.com/microsoft/winget-pkgs/tree/master/manifests/z/ZenPrivacy"&gt;Winget (Windows Package Manager)&lt;/a&gt;. To install, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;winget install ZenPrivacy.ZenDesktop
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;x64 (Intel): &lt;a href="https://github.com/ZenPrivacy/zen-desktop/releases/latest/download/Zen-amd64.dmg"&gt;💾 Installer&lt;/a&gt; | &lt;a href="https://github.com/ZenPrivacy/zen-desktop/releases/latest/download/Zen_darwin_amd64.tar.gz"&gt;📦 Portable&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ARM64 (Apple Silicon): &lt;a href="https://github.com/ZenPrivacy/zen-desktop/releases/latest/download/Zen-arm64.dmg"&gt;💾 Installer&lt;/a&gt; | &lt;a href="https://github.com/ZenPrivacy/zen-desktop/releases/latest/download/Zen_darwin_arm64.tar.gz"&gt;📦 Portable&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Unsure which version to download? Learn at &lt;a href="https://support.apple.com/en-us/HT211814"&gt;Apple's website&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;🍺 Homebrew&lt;/h4&gt; 
&lt;p&gt;Zen is available via &lt;a href="https://formulae.brew.sh/cask/zen-privacy"&gt;Homebrew&lt;/a&gt; for both Intel and Apple Silicon. To install it, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install --cask zen-privacy
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;AUR: &lt;a href="https://aur.archlinux.org/packages/zen-adblocker-bin"&gt;👾 zen-adblocker-bin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;x64: &lt;a href="https://github.com/ZenPrivacy/zen-desktop/releases/latest/download/Zen_linux_amd64.tar.gz"&gt;📦 Portable&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ARM64: &lt;a href="https://github.com/ZenPrivacy/zen-desktop/releases/latest/download/Zen_linux_arm64.tar.gz"&gt;📦 Portable&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;On Linux, automatic proxy configuration is currently only supported on GNOME-based desktop environments.&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Request history&lt;/th&gt; 
   &lt;th&gt;Filter list manager&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt; Request history shows all requests blocked by Zen. Each request can be inspected to see which filter and rule blocked it. &lt;/td&gt; 
   &lt;td&gt; Zen comes with many pre-installed filters. You can also add your own by providing a URL to a hosts file or an EasyList-style filter. &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top"&gt;&lt;img src="https://github.com/ZenPrivacy/zen-desktop/raw/master/assets/screenshots/main-window.png?raw=true" alt="Zen's main window" /&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top"&gt;&lt;img src="https://github.com/ZenPrivacy/zen-desktop/raw/master/assets/screenshots/filter-lists.png?raw=true" alt="Zen's filter list manager" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Follow the &lt;a href="https://raw.githubusercontent.com/ZenPrivacy/zen-desktop/master/docs/internal/index.md#getting-started"&gt;getting started guide&lt;/a&gt; to begin working on Zen development. If you have any questions, feel free to ask in the &lt;a href="https://github.com/ZenPrivacy/zen-desktop/discussions/categories/q-a"&gt;Discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Zen needs your help! You can report bugs, suggest and implement features, improve the codebase, or help translate Zen into your language. Please refer to the &lt;a href="https://raw.githubusercontent.com/ZenPrivacy/zen-desktop/master/CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Special Thanks&lt;/h2&gt; 
&lt;p&gt;Zen exists thanks to the support of many incredible people and organizations, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Our contributors &lt;a href="https://github.com/ZenPrivacy/zen-desktop/graphs/contributors"&gt; &lt;img src="https://opencollective.com/zen-privacy/contributors.svg?width=890&amp;amp;button=false" alt="Avatars of all GitHub contributors to Zen" /&gt; &lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Our sponsors &lt;a href="https://opencollective.com/zen-privacy#backers" target="_blank" rel="noreferrer noopener"&gt; &lt;img src="https://opencollective.com/zen-privacy/backers.svg?width=890&amp;amp;button=false" alt="Avatars of all backers of Zen on Open Collective" /&gt; &lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://signpath.io"&gt;SignPath&lt;/a&gt; and &lt;a href="https://signpath.org/"&gt;SignPath Foundation&lt;/a&gt;, who generously provide a free Windows certificate and code signing&lt;/p&gt; &lt;a href="https://signpath.io" target="_blank" rel="noreferrer noopener"&gt; &lt;img src="https://raw.githubusercontent.com/ZenPrivacy/zen-desktop/master/assets/signpath-logo.png" width="260" /&gt; &lt;/a&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://github.com/ZenPrivacy/zen-desktop/raw/master/LICENSE"&gt;MIT License&lt;/a&gt;. Some code and assets included with Zen are licensed under different terms. For more information, see the &lt;a href="https://github.com/ZenPrivacy/zen-desktop/raw/master/COPYING.md"&gt;COPYING&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>containerd/containerd</title>
      <link>https://github.com/containerd/containerd</link>
      <description>&lt;p&gt;An open and reliable container runtime&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cncf/artwork/master/projects/containerd/horizontal/color/containerd-horizontal-color.png#gh-light-mode-only" alt="containerd banner light mode" /&gt; &lt;img src="https://raw.githubusercontent.com/cncf/artwork/master/projects/containerd/horizontal/white/containerd-horizontal-white.png#gh-dark-mode-only" alt="containerd banner dark mode" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/containerd/containerd/v2"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/containerd/containerd/v2" alt="PkgGoDev" /&gt;&lt;/a&gt; &lt;a href="https://github.com/containerd/containerd/actions?query=workflow%3ACI+event%3Amerge_group"&gt;&lt;img src="https://github.com/containerd/containerd/actions/workflows/ci.yml/badge.svg?event=merge_group" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/containerd/containerd/actions?query=workflow%3ANightly"&gt;&lt;img src="https://github.com/containerd/containerd/workflows/Nightly/badge.svg?sanitize=true" alt="Nightlies" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/containerd/containerd/v2"&gt;&lt;img src="https://goreportcard.com/badge/github.com/containerd/containerd/v2" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/1271"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/1271/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/containerd/containerd"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/containerd/containerd/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://github.com/containerd/containerd/actions/workflows/links.yml"&gt;&lt;img src="https://github.com/containerd/containerd/actions/workflows/links.yml/badge.svg?sanitize=true" alt="Check Links" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;containerd is an industry-standard container runtime with an emphasis on simplicity, robustness, and portability. It is available as a daemon for Linux and Windows, which can manage the complete container lifecycle of its host system: image transfer and storage, container execution and supervision, low-level storage and network attachments, etc.&lt;/p&gt; 
&lt;p&gt;containerd is a member of CNCF with &lt;a href="https://landscape.cncf.io/?selected=containerd"&gt;'graduated'&lt;/a&gt; status.&lt;/p&gt; 
&lt;p&gt;containerd is designed to be embedded into a larger system, rather than being used directly by developers or end-users.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/containerd/containerd/main/docs/historical/design/architecture.png" alt="architecture" /&gt;&lt;/p&gt; 
&lt;h2&gt;Announcements&lt;/h2&gt; 
&lt;h3&gt;containerd v2.0 is now released!&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/containerd-2.0.md"&gt;&lt;code&gt;docs/containerd-2.0.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Now Recruiting&lt;/h3&gt; 
&lt;p&gt;We are a large inclusive OSS project that is welcoming help of any kind shape or form:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation help is needed to make the product easier to consume and extend.&lt;/li&gt; 
 &lt;li&gt;We need OSS community outreach/organizing help to get the word out; manage and create messaging and educational content; and help with social media, community forums/groups, and google groups.&lt;/li&gt; 
 &lt;li&gt;We are actively inviting new &lt;a href="https://github.com/containerd/project/raw/main/GOVERNANCE.md#security-advisors"&gt;security advisors&lt;/a&gt; to join the team.&lt;/li&gt; 
 &lt;li&gt;New subprojects are being created, core and non-core that could use additional development help.&lt;/li&gt; 
 &lt;li&gt;Each of the &lt;a href="https://github.com/containerd"&gt;containerd projects&lt;/a&gt; has a list of issues currently being worked on or that need help resolving. 
  &lt;ul&gt; 
   &lt;li&gt;If the issue has not already been assigned to someone or has not made recent progress, and you are interested, please inquire.&lt;/li&gt; 
   &lt;li&gt;If you are interested in starting with a smaller/beginner-level issue, look for issues with an &lt;code&gt;exp/beginner&lt;/code&gt; tag, for example &lt;a href="https://github.com/containerd/containerd/issues?q=is%3Aissue+is%3Aopen+label%3Aexp%2Fbeginner"&gt;containerd/containerd beginner issues.&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;See our documentation on &lt;a href="https://containerd.io"&gt;containerd.io&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/ops.md"&gt;for ops and admins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/namespaces.md"&gt;namespaces&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/client-opts.md"&gt;client options&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To get started contributing to containerd, see &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you are interested in trying out containerd see our example at &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/getting-started.md"&gt;Getting Started&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Nightly builds&lt;/h2&gt; 
&lt;p&gt;There are nightly builds available for download &lt;a href="https://github.com/containerd/containerd/actions?query=workflow%3ANightly"&gt;here&lt;/a&gt;. Binaries are generated from &lt;code&gt;main&lt;/code&gt; branch every night for &lt;code&gt;Linux&lt;/code&gt; and &lt;code&gt;Windows&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Please be aware: nightly builds might have critical bugs, it's not recommended for use in production and no support provided.&lt;/p&gt; 
&lt;h2&gt;Kubernetes (k8s) CI Dashboard Group&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://testgrid.k8s.io/containerd"&gt;k8s CI dashboard group for containerd&lt;/a&gt; contains test results regarding the health of kubernetes when run against main and a number of containerd release branches.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://testgrid.k8s.io/containerd-periodic"&gt;containerd-periodics&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Runtime Requirements&lt;/h2&gt; 
&lt;p&gt;Runtime requirements for containerd are very minimal. Most interactions with the Linux and Windows container feature sets are handled via &lt;a href="https://github.com/opencontainers/runc"&gt;runc&lt;/a&gt; and/or OS-specific libraries (e.g. &lt;a href="https://github.com/Microsoft/hcsshim"&gt;hcsshim&lt;/a&gt; for Microsoft). The current required version of &lt;code&gt;runc&lt;/code&gt; is described in &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/RUNC.md"&gt;RUNC.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There are specific features used by containerd core code and snapshotters that will require a minimum kernel version on Linux. With the understood caveat of distro kernel versioning, a reasonable starting point for Linux is a minimum 4.x kernel version.&lt;/p&gt; 
&lt;p&gt;The overlay filesystem snapshotter, used by default, uses features that were finalized in the 4.x kernel series. If you choose to use btrfs, there may be more flexibility in kernel version (minimum recommended is 3.18), but will require the btrfs kernel module and btrfs tools to be installed on your Linux distribution.&lt;/p&gt; 
&lt;p&gt;To use Linux checkpoint and restore features, you will need &lt;code&gt;criu&lt;/code&gt; installed on your system. See more details in &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/#checkpoint-and-restore"&gt;Checkpoint and Restore&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Build requirements for developers are listed in &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/BUILDING.md"&gt;BUILDING&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported Registries&lt;/h2&gt; 
&lt;p&gt;Any registry which is compliant with the &lt;a href="https://github.com/opencontainers/distribution-spec"&gt;OCI Distribution Specification&lt;/a&gt; is supported by containerd.&lt;/p&gt; 
&lt;p&gt;For configuring registries, see &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/hosts.md"&gt;registry host configuration documentation&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;For a detailed overview of containerd's core concepts and the features it supports, please refer to the &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/features.md"&gt;FEATURES.MD&lt;/a&gt; document.&lt;/p&gt; 
&lt;h3&gt;Releases and API Stability&lt;/h3&gt; 
&lt;p&gt;Please see &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/RELEASES.md"&gt;RELEASES.md&lt;/a&gt; for details on versioning and stability of containerd components.&lt;/p&gt; 
&lt;p&gt;Downloadable 64-bit Intel/AMD binaries of all official releases are available on our &lt;a href="https://github.com/containerd/containerd/releases"&gt;releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For other architectures and distribution support, you will find that many Linux distributions package their own containerd and provide it across several architectures, such as &lt;a href="https://launchpad.net/ubuntu/bionic/+package/containerd"&gt;Canonical's Ubuntu packaging&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Enabling command auto-completion&lt;/h4&gt; 
&lt;p&gt;Starting with containerd 1.4, the urfave client feature for auto-creation of bash and zsh autocompletion data is enabled. To use the autocomplete feature in a bash shell for example, source the autocomplete/ctr file in your &lt;code&gt;.bashrc&lt;/code&gt;, or manually like:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ source ./contrib/autocomplete/ctr
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Distribution of &lt;code&gt;ctr&lt;/code&gt; autocomplete for bash and zsh&lt;/h4&gt; 
&lt;p&gt;For bash, copy the &lt;code&gt;contrib/autocomplete/ctr&lt;/code&gt; script into &lt;code&gt;/etc/bash_completion.d/&lt;/code&gt; and rename it to &lt;code&gt;ctr&lt;/code&gt;. The &lt;code&gt;zsh_autocomplete&lt;/code&gt; file is also available and can be used similarly for zsh users.&lt;/p&gt; 
&lt;p&gt;Provide documentation to users to &lt;code&gt;source&lt;/code&gt; this file into their shell if you don't place the autocomplete file in a location where it is automatically loaded for the user's shell environment.&lt;/p&gt; 
&lt;h3&gt;CRI&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;cri&lt;/code&gt; is a &lt;a href="https://containerd.io/"&gt;containerd&lt;/a&gt; plugin implementation of the Kubernetes &lt;a href="https://github.com/kubernetes/cri-api/raw/master/pkg/apis/runtime/v1/api.proto"&gt;container runtime interface (CRI)&lt;/a&gt;. With it, you are able to use containerd as the container runtime for a Kubernetes cluster.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/containerd/containerd/main/docs/cri/cri.png" alt="cri" /&gt;&lt;/p&gt; 
&lt;h4&gt;CRI Status&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;cri&lt;/code&gt; is a native plugin of containerd. Since containerd 1.1, the cri plugin is built into the release binaries and enabled by default.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;cri&lt;/code&gt; plugin has reached GA status, representing that it is:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Feature complete&lt;/li&gt; 
 &lt;li&gt;Works with Kubernetes 1.10 and above&lt;/li&gt; 
 &lt;li&gt;Passes all &lt;a href="https://github.com/kubernetes/community/raw/master/contributors/devel/sig-node/cri-validation.md"&gt;CRI validation tests&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Passes all &lt;a href="https://github.com/kubernetes/community/raw/master/contributors/devel/sig-node/e2e-node-tests.md"&gt;node e2e tests&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Passes all &lt;a href="https://github.com/kubernetes/community/raw/master/contributors/devel/sig-testing/e2e-tests.md"&gt;e2e tests&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See results on the containerd k8s &lt;a href="https://testgrid.k8s.io/containerd"&gt;test dashboard&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Validating Your &lt;code&gt;cri&lt;/code&gt; Setup&lt;/h4&gt; 
&lt;p&gt;A Kubernetes incubator project, &lt;a href="https://github.com/kubernetes-sigs/cri-tools"&gt;cri-tools&lt;/a&gt;, includes programs for exercising CRI implementations. More importantly, cri-tools includes the program &lt;code&gt;critest&lt;/code&gt; which is used for running &lt;a href="https://github.com/kubernetes/community/raw/master/contributors/devel/sig-node/cri-validation.md"&gt;CRI Validation Testing&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;CRI Guides&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/contrib/ansible/README.md"&gt;Installing with Ansible and Kubeadm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/getting-started.md"&gt;For Non-Ansible Users, Preforming a Custom Installation Using the Release Tarball and Kubeadm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/cri/testing.md"&gt;CRI Plugin Testing Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/cri/crictl.md"&gt;Debugging Pods, Containers, and Images with &lt;code&gt;crictl&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/cri/config.md"&gt;Configuring &lt;code&gt;cri&lt;/code&gt; Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/containerd/containerd/raw/main/docs/man/containerd-config.8.md"&gt;Configuring containerd&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Communication&lt;/h3&gt; 
&lt;p&gt;For async communication and long-running discussions please use issues and pull requests on the GitHub repo. This will be the best place to discuss design and implementation.&lt;/p&gt; 
&lt;p&gt;For sync communication catch us in the &lt;code&gt;#containerd&lt;/code&gt; and &lt;code&gt;#containerd-dev&lt;/code&gt; Slack channels on Cloud Native Computing Foundation's (CNCF) Slack - &lt;code&gt;cloud-native.slack.com&lt;/code&gt;. Everyone is welcome to join and chat. &lt;a href="https://slack.cncf.io"&gt;Get Invite to CNCF Slack.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Join our next community meeting hosted on Zoom. The schedule is posted on the &lt;a href="https://www.cncf.io/calendar/"&gt;CNCF Calendar&lt;/a&gt; (search 'containerd' to filter).&lt;/p&gt; 
&lt;h3&gt;Security audit&lt;/h3&gt; 
&lt;p&gt;Security audits for the containerd project are hosted on our website. Please see the &lt;a href="https://containerd.io/security/"&gt;security page at containerd.io&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Reporting security issues&lt;/h3&gt; 
&lt;p&gt;Please follow the instructions at &lt;a href="https://github.com/containerd/project/raw/main/SECURITY.md#reporting-a-vulnerability"&gt;containerd/project&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Licenses&lt;/h2&gt; 
&lt;p&gt;The containerd codebase is released under the &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/LICENSE"&gt;Apache 2.0 license&lt;/a&gt;. The README.md file and files in the "docs" folder are licensed under the Creative Commons Attribution 4.0 International License. You may obtain a copy of the license, titled CC-BY-4.0, at &lt;a href="http://creativecommons.org/licenses/by/4.0/"&gt;http://creativecommons.org/licenses/by/4.0/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Project details&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;containerd&lt;/strong&gt; is the primary open source project within the broader containerd GitHub organization. However, all projects within the repo have common maintainership, governance, and contributing guidelines which are stored in a &lt;code&gt;project&lt;/code&gt; repository commonly for all containerd projects.&lt;/p&gt; 
&lt;p&gt;Please find all these core project documents, including the:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/containerd/project/raw/main/GOVERNANCE.md"&gt;Project governance&lt;/a&gt;,&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/containerd/project/raw/main/MAINTAINERS"&gt;Maintainers&lt;/a&gt;,&lt;/li&gt; 
 &lt;li&gt;and &lt;a href="https://github.com/containerd/project/raw/main/CONTRIBUTING.md"&gt;Contributing guidelines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;information in our &lt;a href="https://github.com/containerd/project"&gt;&lt;code&gt;containerd/project&lt;/code&gt;&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;Adoption&lt;/h2&gt; 
&lt;p&gt;Interested to see who is using containerd? Are you using containerd in a project? Please add yourself via pull request to our &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/ADOPTERS.md"&gt;ADOPTERS.md&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gtsteffaniak/filebrowser</title>
      <link>https://github.com/gtsteffaniak/filebrowser</link>
      <description>&lt;p&gt;📂 Web File Browser&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/gtsteffaniak/filebrowser/backend"&gt;&lt;img src="https://goreportcard.com/badge/github.com/gtsteffaniak/filebrowser/backend" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://www.codacy.com/gh/gtsteffaniak/filebrowser/dashboard"&gt;&lt;img src="https://app.codacy.com/project/badge/Grade/1c48cfb7646d4009aa8c6f71287670b8" alt="Codacy Badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gtsteffaniak/filebrowser/releases"&gt;&lt;img src="https://img.shields.io/github/release/gtsteffaniak/filebrowser/all.svg?sanitize=true" alt="latest version" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/gtstef/filebrowser"&gt;&lt;img src="https://img.shields.io/docker/pulls/gtstef/filebrowser?label=latest%20Docker%20pulls" alt="DockerHub Pulls" /&gt;&lt;/a&gt; &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true" alt="Apache-2.0 License" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Q&amp;amp;A#is-there-a-way-to-donate-or-support-this-project"&gt;&lt;img src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif" alt="Donate" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;img width="150" src="https://github.com/user-attachments/assets/59986a2a-f960-4536-aa35-4a9a7c98ad48" title="Logo" /&gt; 
 &lt;h3&gt;FileBrowser Quantum&lt;/h3&gt; The best free self-hosted web-based file manager. 
 &lt;br /&gt;
 &lt;br /&gt; 
 &lt;img width="800" src="https://github.com/user-attachments/assets/162d7a95-33b7-49bd-976c-dd6822c0d22b" /&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] There is no stable version -- &lt;span&gt;🚧&lt;/span&gt; coming very soon!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Pinned&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;📢&lt;/span&gt; &lt;a href="https://github.com/gtsteffaniak/filebrowser/discussions/1293"&gt;Stable Release &amp;amp; 0.9.0 Update&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;📌&lt;/span&gt; &lt;a href="https://filebrowserquantum.com/"&gt;Read The Official Docs&lt;/a&gt; (currently english-only)&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;FileBrowser Quantum provides an easy way to access and manage your files from the web. It has a modern responsive interface that has many advanced features to manage users, access, sharing, and file preview and editing.&lt;/p&gt; 
&lt;p&gt;This version is called "Quantum" because it packs tons of advanced features into a tiny easy to run file. Unlike the majority of alternative options, FileBrowser Quantum is simple to install and easy to configure.&lt;/p&gt; 
&lt;p&gt;The goal for this repo is to become the best open-source self-hosted file browsing application that exists -- &lt;strong&gt;all for free&lt;/strong&gt;. This repo will always be free and open-source.&lt;/p&gt; 
&lt;p&gt;Ready to try it out? See &lt;a href="https://filebrowserquantum.com/en/docs/getting-started/"&gt;Getting Started Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How its different&lt;/h2&gt; 
&lt;p&gt;FileBrowser Quantum is a massive fork of the file browser open-source project with the following changes:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;✅ Multiple sources support&lt;/li&gt; 
 &lt;li&gt;✅ Login support for OIDC, password + 2FA, and proxy.&lt;/li&gt; 
 &lt;li&gt;✅ Beautiful, Responsive, and Customizable user interface.&lt;/li&gt; 
 &lt;li&gt;✅ Simplified configuration via &lt;code&gt;config.yaml&lt;/code&gt; config file.&lt;/li&gt; 
 &lt;li&gt;✅ Ultra-efficient &lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Indexing"&gt;indexing&lt;/a&gt; and real-time updates 
  &lt;ul&gt; 
   &lt;li&gt;Real-time search results as you type.&lt;/li&gt; 
   &lt;li&gt;Real-time monitoring and updates in the UI.&lt;/li&gt; 
   &lt;li&gt;Search supports file and folder sizes, along with various filters.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;✅ Better listing browsing 
  &lt;ul&gt; 
   &lt;li&gt;More file type previews, such as &lt;strong&gt;office&lt;/strong&gt; and &lt;strong&gt;video&lt;/strong&gt; file previews&lt;/li&gt; 
   &lt;li&gt;Instantly switches view modes and sort order without reloading data.&lt;/li&gt; 
   &lt;li&gt;Folder sizes are displayed.&lt;/li&gt; 
   &lt;li&gt;Navigating remembers the last scroll position.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;✅ Highly configurable and customizable sharing options, incuding: 
  &lt;ul&gt; 
   &lt;li&gt;share expiration time&lt;/li&gt; 
   &lt;li&gt;users who can access share (including anonymous)&lt;/li&gt; 
   &lt;li&gt;styling and themes&lt;/li&gt; 
   &lt;li&gt;file viewing, editing, and uploading permissions&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;✅ Directory-level access control that can be scoped to user or group.&lt;/li&gt; 
 &lt;li&gt;✅ Developer API support 
  &lt;ul&gt; 
   &lt;li&gt;Ability to create long-lived API Tokens.&lt;/li&gt; 
   &lt;li&gt;A helpful Swagger page is available at &lt;code&gt;/swagger&lt;/code&gt; endpoint for API enabled users.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Notable features that this fork &lt;em&gt;does not&lt;/em&gt; have (removed):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;🚧&lt;/span&gt; jobs are not supported yet.&lt;/li&gt; 
 &lt;li&gt;❌ shell commands are completely removed and will not be returned.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;FileBrowser Quantum differs significantly from the original version. Many of these changes required a significant overhaul. Creating a fork was a necessary process to make the program better. There have been many growing pains, but a stable release is planned and coming soon.&lt;/p&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Every file and directory in the source gets indexed (by default). This enables powerful features such as instant search, but large source filesystems can increase your system requirements. &lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Indexing"&gt;See indexing wiki&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Memory&lt;/strong&gt;: depends on configured source complexity. See &lt;a href="https://github.com/gtsteffaniak/filebrowser/discussions/787"&gt;how much RAM does it require?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GPU&lt;/strong&gt;: Not currently used (planned)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The UI&lt;/h2&gt; 
&lt;p&gt;The UI has a simple three-component navigation system:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;(Left) Multi-action button with slide-out panel.&lt;/li&gt; 
 &lt;li&gt;(Middle) The powerful search bar.&lt;/li&gt; 
 &lt;li&gt;(Right) The view change toggle.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;All other functions are moved either into the action menu or pop-up menus. If the action does not depend on context, it will exist in the slide-out action panel. If the action is available based on context, it will show up as a pop-up menu.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img width="1000" src="https://github.com/user-attachments/assets/aa32b05c-f917-47bb-b07f-857edc5e47f7" title="Search GIF" /&gt; &lt;/p&gt; 
&lt;h2&gt;Official Docs&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://filebrowserquantum.com/"&gt;Official Docs&lt;/a&gt;. Contributions are welcome and encouraged! See &lt;a href="https://github.com/quantumx-apps/filebrowserDocs"&gt;FilebrowserDocs Github&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Comparison Chart&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Application Name&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://github.com/user-attachments/assets/59986a2a-f960-4536-aa35-4a9a7c98ad48" /&gt; Quantum&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://github.com/filebrowser/filebrowser/raw/master/frontend/public/img/logo.svg?sanitize=true" /&gt; Filebrowser&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://github.com/mickael-kerjean/filestash/raw/master/public/assets/logo/app_icon.png?raw=true" /&gt; Filestash&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://avatars.githubusercontent.com/u/19211038?s=200&amp;amp;v=4" /&gt; Nextcloud&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/da/Google_Drive_logo.png/480px-Google_Drive_logo.png" /&gt; Google_Drive&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://avatars.githubusercontent.com/u/6422152?v=4" /&gt; FileRun&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Filesystem support&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mac&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Self hostable&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Has Stable Release?&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;S3 support&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;webdav support&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FTP support&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Dedicated docs site?&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multiple sources at once&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Docker image size&lt;/td&gt; 
   &lt;td&gt;180 MB (with ffmpeg)&lt;/td&gt; 
   &lt;td&gt;31 MB&lt;/td&gt; 
   &lt;td&gt;240 MB (main image)&lt;/td&gt; 
   &lt;td&gt;250 MB&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;&amp;gt; 2 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Min. Memory Requirements&lt;/td&gt; 
   &lt;td&gt;256 MB&lt;/td&gt; 
   &lt;td&gt;128 MB&lt;/td&gt; 
   &lt;td&gt;128 MB (main image)&lt;/td&gt; 
   &lt;td&gt;512 MB&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;512 MB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;has standalone binary&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;price&lt;/td&gt; 
   &lt;td&gt;free&lt;/td&gt; 
   &lt;td&gt;free&lt;/td&gt; 
   &lt;td&gt;free&lt;/td&gt; 
   &lt;td&gt;free tier&lt;/td&gt; 
   &lt;td&gt;free tier&lt;/td&gt; 
   &lt;td&gt;$99+&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;rich media preview&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Upload files from the web?&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Advanced Search?&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;configurable&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Indexed Search?&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;configurable&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Content-aware search?&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;configurable&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Custom job support&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multiple users&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Single sign-on support&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LDAP sign-on support&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Long-live API key support&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;API documentation page&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mobile App&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;open source?&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;tags support&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;shareable web links?&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Event-based notifications&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Metrics&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;file space quotas&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;text-based files editor&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Office file support&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Office file previews&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Themes&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Branding support&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;activity log&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Comments support&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;trash support&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Starred/pinned files&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Chromecast support&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Share collections of files&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can archive selected files&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can browse archive files&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can convert documents&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can convert videos&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can convert photos&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>tailscale/tailscale</title>
      <link>https://github.com/tailscale/tailscale</link>
      <description>&lt;p&gt;The easiest, most secure way to use WireGuard and 2FA.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tailscale&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://tailscale.com"&gt;https://tailscale.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Private WireGuard® networks made easy&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;This repository contains the majority of Tailscale's open source code. Notably, it includes the &lt;code&gt;tailscaled&lt;/code&gt; daemon and the &lt;code&gt;tailscale&lt;/code&gt; CLI tool. The &lt;code&gt;tailscaled&lt;/code&gt; daemon runs on Linux, Windows, &lt;a href="https://tailscale.com/kb/1065/macos-variants/"&gt;macOS&lt;/a&gt;, and to varying degrees on FreeBSD and OpenBSD. The Tailscale iOS and Android apps use this repo's code, but this repo doesn't contain the mobile GUI code.&lt;/p&gt; 
&lt;p&gt;Other &lt;a href="https://github.com/orgs/tailscale/repositories"&gt;Tailscale repos&lt;/a&gt; of note:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;the Android app is at &lt;a href="https://github.com/tailscale/tailscale-android"&gt;https://github.com/tailscale/tailscale-android&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;the Synology package is at &lt;a href="https://github.com/tailscale/tailscale-synology"&gt;https://github.com/tailscale/tailscale-synology&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;the QNAP package is at &lt;a href="https://github.com/tailscale/tailscale-qpkg"&gt;https://github.com/tailscale/tailscale-qpkg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;the Chocolatey packaging is at &lt;a href="https://github.com/tailscale/tailscale-chocolatey"&gt;https://github.com/tailscale/tailscale-chocolatey&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For background on which parts of Tailscale are open source and why, see &lt;a href="https://tailscale.com/opensource/"&gt;https://tailscale.com/opensource/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Using&lt;/h2&gt; 
&lt;p&gt;We serve packages for a variety of distros and platforms at &lt;a href="https://pkgs.tailscale.com/"&gt;https://pkgs.tailscale.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Other clients&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://tailscale.com/download"&gt;macOS, iOS, and Windows clients&lt;/a&gt; use the code in this repository but additionally include small GUI wrappers. The GUI wrappers on non-open source platforms are themselves not open source.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;We always require the latest Go release, currently Go 1.25. (While we build releases with our &lt;a href="https://github.com/tailscale/go/"&gt;Go fork&lt;/a&gt;, its use is not required.)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go install tailscale.com/cmd/tailscale{,d}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're packaging Tailscale for distribution, use &lt;code&gt;build_dist.sh&lt;/code&gt; instead, to burn commit IDs and version info into the binaries:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./build_dist.sh tailscale.com/cmd/tailscale
./build_dist.sh tailscale.com/cmd/tailscaled
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your distro has conventions that preclude the use of &lt;code&gt;build_dist.sh&lt;/code&gt;, please do the equivalent of what it does in your distro's way, so that bug reports contain useful version information.&lt;/p&gt; 
&lt;h2&gt;Bugs&lt;/h2&gt; 
&lt;p&gt;Please file any issues about this code or the hosted service on &lt;a href="https://github.com/tailscale/tailscale/issues"&gt;the issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;PRs welcome! But please file bugs. Commit messages should &lt;a href="https://docs.github.com/en/github/writing-on-github/autolinked-references-and-urls"&gt;reference bugs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We require &lt;a href="https://en.wikipedia.org/wiki/Developer_Certificate_of_Origin"&gt;Developer Certificate of Origin&lt;/a&gt; &lt;code&gt;Signed-off-by&lt;/code&gt; lines in commits.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/tailscale/tailscale/main/docs/commit-messages.md"&gt;commit-messages.md&lt;/a&gt; (or skim &lt;code&gt;git log&lt;/code&gt;) for our commit message style.&lt;/p&gt; 
&lt;h2&gt;About Us&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://tailscale.com/"&gt;Tailscale&lt;/a&gt; is primarily developed by the people at &lt;a href="https://github.com/orgs/tailscale/people"&gt;https://github.com/orgs/tailscale/people&lt;/a&gt;. For other contributors, see:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tailscale/tailscale/graphs/contributors"&gt;https://github.com/tailscale/tailscale/graphs/contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tailscale/tailscale-android/graphs/contributors"&gt;https://github.com/tailscale/tailscale-android/graphs/contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Legal&lt;/h2&gt; 
&lt;p&gt;WireGuard is a registered trademark of Jason A. Donenfeld.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>wailsapp/wails</title>
      <link>https://github.com/wailsapp/wails</link>
      <description>&lt;p&gt;Create beautiful applications using Go&lt;/p&gt;&lt;hr&gt;&lt;p align="center" style="text-align: center"&gt; &lt;img src="https://raw.githubusercontent.com/wailsapp/wails/master/assets/images/logo-universal.png" width="55%" /&gt;&lt;br /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; Build desktop applications using Go &amp;amp; Web Technologies. &lt;br /&gt; &lt;br /&gt; &lt;a href="https://github.com/wailsapp/wails/raw/master/LICENSE"&gt; &lt;img alt="GitHub" src="https://img.shields.io/github/license/wailsapp/wails" /&gt; &lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/wailsapp/wails"&gt; &lt;img src="https://goreportcard.com/badge/github.com/wailsapp/wails" /&gt; &lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/wailsapp/wails"&gt; &lt;img src="https://pkg.go.dev/badge/github.com/wailsapp/wails.svg?sanitize=true" alt="Go Reference" /&gt; &lt;/a&gt; &lt;a href="https://github.com/wailsapp/wails/issues"&gt; &lt;img src="https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat" alt="CodeFactor" /&gt; &lt;/a&gt; &lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fwailsapp%2Fwails?ref=badge_shield" alt="FOSSA Status"&gt; &lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fwailsapp%2Fwails.svg?type=shield" /&gt; &lt;/a&gt; &lt;a href="https://github.com/avelino/awesome-go" rel="nofollow"&gt; &lt;img src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true" alt="Awesome" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/BrRSWTaxVK"&gt; &lt;img alt="Discord" src="https://dcbadge.vercel.app/api/server/BrRSWTaxVK?style=flat" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://github.com/wailsapp/wails/actions/workflows/build-and-test.yml" rel="nofollow"&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/wailsapp/wails/build-and-test.yml?branch=master&amp;amp;logo=Github" alt="Build" /&gt; &lt;/a&gt; &lt;a href="https://github.com/wailsapp/wails/tags" rel="nofollow"&gt; &lt;img alt="GitHub tag (latest SemVer pre-release)" src="https://img.shields.io/github/v/tag/wailsapp/wails?include_prereleases&amp;amp;label=version" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;strong&gt; &lt;samp&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.md"&gt;English&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.zh-Hans.md"&gt;简体中文&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.ja.md"&gt;日本語&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.ko.md"&gt;한국어&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.es.md"&gt;Español&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.pt-br.md"&gt;Português&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.ru.md"&gt;Русский&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.fr.md"&gt;Francais&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.uz.md"&gt;Uzbek&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.de.md"&gt;Deutsch&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.tr.md"&gt;Türkçe&lt;/a&gt;&lt;/p&gt; &lt;/samp&gt; &lt;/strong&gt; 
&lt;/div&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#features"&gt;Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#sponsors"&gt;Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#stargazers-over-time"&gt;Stargazers over time&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#inspiration"&gt;Inspiration&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;The traditional method of providing web interfaces to Go programs is via a built-in web server. Wails offers a different approach: it provides the ability to wrap both Go code and a web frontend into a single binary. Tools are provided to make this easy for you by handling project creation, compilation and bundling. All you have to do is get creative!&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use standard Go for the backend&lt;/li&gt; 
 &lt;li&gt;Use any frontend technology you are already familiar with to build your UI&lt;/li&gt; 
 &lt;li&gt;Quickly create rich frontends for your Go programs using pre-built templates&lt;/li&gt; 
 &lt;li&gt;Easily call Go methods from Javascript&lt;/li&gt; 
 &lt;li&gt;Auto-generated Typescript definitions for your Go structs and methods&lt;/li&gt; 
 &lt;li&gt;Native Dialogs &amp;amp; Menus&lt;/li&gt; 
 &lt;li&gt;Native Dark / Light mode support&lt;/li&gt; 
 &lt;li&gt;Supports modern translucency and "frosted window" effects&lt;/li&gt; 
 &lt;li&gt;Unified eventing system between Go and Javascript&lt;/li&gt; 
 &lt;li&gt;Powerful cli tool to quickly generate and build your projects&lt;/li&gt; 
 &lt;li&gt;Multiplatform&lt;/li&gt; 
 &lt;li&gt;Uses native rendering engines - &lt;em&gt;no embedded browser&lt;/em&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Roadmap&lt;/h3&gt; 
&lt;p&gt;The project roadmap may be found &lt;a href="https://github.com/wailsapp/wails/discussions/1484"&gt;here&lt;/a&gt;. Please consult it before creating an enhancement request.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;The installation instructions are on the &lt;a href="https://wails.io/docs/gettingstarted/installation"&gt;official website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;This project is supported by these kind people / companies: &lt;img src="https://raw.githubusercontent.com/wailsapp/wails/master/website/static/img/sponsors.svg?sanitize=true" style="width:100%;max-width:800px;" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://wails.io/img/sponsor/jetbrains-grayscale.webp" style="width: 100px" /&gt; &lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Is this an alternative to Electron?&lt;/p&gt; &lt;p&gt;Depends on your requirements. It's designed to make it easy for Go programmers to make lightweight desktop applications or add a frontend to their existing applications. Wails does offer native elements such as menus and dialogs, so it could be considered a lightweight electron alternative.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Who is this project aimed at?&lt;/p&gt; &lt;p&gt;Go programmers who want to bundle an HTML/JS/CSS frontend with their applications, without resorting to creating a server and opening a browser to view it.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;What's with the name?&lt;/p&gt; &lt;p&gt;When I saw WebView, I thought "What I really want is tooling around building a WebView app, a bit like Rails is to Ruby". So initially it was a play on words (Webview on Rails). It just so happened to also be a homophone of the English name for the &lt;a href="https://en.wikipedia.org/wiki/Wales"&gt;Country&lt;/a&gt; I am from. So it stuck.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;a href="https://star-history.com/#wailsapp/wails&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=wailsapp/wails&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=wailsapp/wails&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=wailsapp/wails&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;The contributors list is getting too big for the readme! All the amazing people who have contributed to this project have their own page &lt;a href="https://wails.io/credits#contributors"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fwailsapp%2Fwails?ref=badge_large"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fwailsapp%2Fwails.svg?type=large" alt="FOSSA Status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Inspiration&lt;/h2&gt; 
&lt;p&gt;This project was mainly coded to the following albums:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/1R2rsEUqXjIvAbzM0yHrxA"&gt;Manic Street Preachers - Resistance Is Futile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/4VzCL9kjhgGQeKCiojK1YN"&gt;Manic Street Preachers - This Is My Truth, Tell Me Yours&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/4Krg8zvprquh7TVn9OxZn8"&gt;The Midnight - Endless Summer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/3kMfsD07Q32HRWKRrpcexr"&gt;Gary Newman - Savage (Songs from a Broken World)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/0oL0OhrE2rYVns4IGj8h2m"&gt;Steve Vai - Passion &amp;amp; Warfare&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/1nJsbWm3Yy2DW1KIc1OKle"&gt;Ben Howard - Every Kingdom&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/6astw05cTiXEc2OvyByaPs"&gt;Ben Howard - Noonday Dream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/2vBE40Rp60tl7rNqIZjaXM"&gt;Adwaith - Melyn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/3v2hrfNGINPLuDP0YDTOjm"&gt;Gwidaith Hen Fran - Cedors Hen Wrach&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/2Kh43m04B1UkVcpcRa1Zug"&gt;Metallica - Metallica&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/6SsIdN05HQg2GwYLfXuzLB"&gt;Bloc Party - Silent Alarm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/3tklE2Fgw1hCIUstIwPBJF"&gt;Maxthor - Another World&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/0c32OywcLpdJCWWMC6vB8v"&gt;Alun Tan Lan - Y Distawrwydd&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>wavetermdev/waveterm</title>
      <link>https://github.com/wavetermdev/waveterm</link>
      <description>&lt;p&gt;An open-source, cross-platform terminal for seamless workflows&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://www.waveterm.dev"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/wave-dark.png" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="./assets/wave-light.png" /&gt; 
   &lt;img alt="Wave Terminal Logo" src="https://raw.githubusercontent.com/wavetermdev/waveterm/main/assets/wave-light.png" width="240" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;h1&gt;Wave Terminal&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fwavetermdev%2Fwaveterm?ref=badge_shield"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fwavetermdev%2Fwaveterm.svg?type=shield" alt="FOSSA Status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Wave is an open-source terminal that combines traditional terminal features with graphical capabilities like file previews, web browsing, and AI assistance. It runs on MacOS, Linux, and Windows.&lt;/p&gt; 
&lt;p&gt;Modern development involves constantly switching between terminals and browsers - checking documentation, previewing files, monitoring systems, and using AI tools. Wave brings these graphical tools directly into the terminal, letting you control them from the command line. This means you can stay in your terminal workflow while still having access to the visual interfaces you need.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/wavetermdev/waveterm/main/assets/wave-screenshot.webp" alt="WaveTerm Screenshot" /&gt;&lt;/p&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Flexible drag &amp;amp; drop interface to organize terminal blocks, editors, web browsers, and AI assistants&lt;/li&gt; 
 &lt;li&gt;Built-in editor for seamlessly editing remote files with syntax highlighting and modern editor features&lt;/li&gt; 
 &lt;li&gt;Rich file preview system for remote files (markdown, images, video, PDFs, CSVs, directories)&lt;/li&gt; 
 &lt;li&gt;Integrated AI chat with support for multiple models (OpenAI, Claude, Azure, Perplexity, Ollama)&lt;/li&gt; 
 &lt;li&gt;Command Blocks for isolating and monitoring individual commands with auto-close options&lt;/li&gt; 
 &lt;li&gt;One-click remote connections with full terminal and file system access&lt;/li&gt; 
 &lt;li&gt;Rich customization including tab themes, terminal styles, and background images&lt;/li&gt; 
 &lt;li&gt;Powerful &lt;code&gt;wsh&lt;/code&gt; command system for managing your workspace from the CLI and sharing data between terminal sessions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Wave Terminal works on macOS, Linux, and Windows.&lt;/p&gt; 
&lt;p&gt;Platform-specific installation instructions can be found &lt;a href="https://docs.waveterm.dev/gettingstarted"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also install Wave Terminal directly from: &lt;a href="https://www.waveterm.dev/download"&gt;www.waveterm.dev/download&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Minimum requirements&lt;/h3&gt; 
&lt;p&gt;Wave Terminal runs on the following platforms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;macOS 11 or later (arm64, x64)&lt;/li&gt; 
 &lt;li&gt;Windows 10 1809 or later (x64)&lt;/li&gt; 
 &lt;li&gt;Linux based on glibc-2.28 or later (Debian 10, RHEL 8, Ubuntu 20.04, etc.) (arm64, x64)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The WSH helper runs on the following platforms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;macOS 11 or later (arm64, x64)&lt;/li&gt; 
 &lt;li&gt;Windows 10 or later (arm64, x64)&lt;/li&gt; 
 &lt;li&gt;Linux Kernel 2.6.32 or later (x64), Linux Kernel 3.1 or later (arm64)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;Wave is constantly improving! Our roadmap will be continuously updated with our goals for each release. You can find it &lt;a href="https://raw.githubusercontent.com/wavetermdev/waveterm/main/ROADMAP.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Want to provide input to our future releases? Connect with us on &lt;a href="https://discord.gg/XfvZ334gwU"&gt;Discord&lt;/a&gt; or open a &lt;a href="https://github.com/wavetermdev/waveterm/issues/new/choose"&gt;Feature Request&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Homepage — &lt;a href="https://www.waveterm.dev"&gt;https://www.waveterm.dev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Download Page — &lt;a href="https://www.waveterm.dev/download"&gt;https://www.waveterm.dev/download&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation — &lt;a href="https://docs.waveterm.dev"&gt;https://docs.waveterm.dev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Legacy Documentation — &lt;a href="https://legacydocs.waveterm.dev"&gt;https://legacydocs.waveterm.dev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Blog — &lt;a href="https://blog.waveterm.dev"&gt;https://blog.waveterm.dev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;X — &lt;a href="https://x.com/wavetermdev"&gt;https://x.com/wavetermdev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Discord Community — &lt;a href="https://discord.gg/XfvZ334gwU"&gt;https://discord.gg/XfvZ334gwU&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building from Source&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/wavetermdev/waveterm/main/BUILD.md"&gt;Building Wave Terminal&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Wave uses GitHub Issues for issue tracking.&lt;/p&gt; 
&lt;p&gt;Find more information in our &lt;a href="https://raw.githubusercontent.com/wavetermdev/waveterm/main/CONTRIBUTING.md"&gt;Contributions Guide&lt;/a&gt;, which includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wavetermdev/waveterm/main/CONTRIBUTING.md#contributing-to-wave-terminal"&gt;Ways to contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wavetermdev/waveterm/main/CONTRIBUTING.md#before-you-start"&gt;Contribution guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.waveterm.dev/storybook"&gt;Storybook&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Wave Terminal is licensed under the Apache-2.0 License. For more information on our dependencies, see &lt;a href="https://raw.githubusercontent.com/wavetermdev/waveterm/main/ACKNOWLEDGEMENTS.md"&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hashicorp/nomad</title>
      <link>https://github.com/hashicorp/nomad</link>
      <description>&lt;p&gt;Nomad is an easy-to-use, flexible, and performant workload orchestrator that can deploy a mix of microservice, batch, containerized, and non-containerized applications. Nomad is easy to operate and scale and has native Consul and Vault integrations.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nomad &lt;a href="https://raw.githubusercontent.com/hashicorp/nomad/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-BUSL--1.1-yellow.svg?sanitize=true" alt="License: BUSL-1.1" /&gt;&lt;/a&gt; &lt;a href="https://discuss.hashicorp.com/c/nomad"&gt;&lt;img src="https://img.shields.io/badge/discuss-nomad-00BC7F?style=flat" alt="Discuss" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p align="center" style="text-align:center;"&gt; &lt;a href="https://developer.hashicorp.com/nomad"&gt; &lt;img alt="HashiCorp Nomad logo" src="https://raw.githubusercontent.com/hashicorp/nomad/main/website/public/img/logo-hashicorp.svg?sanitize=true" width="500" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Nomad is a simple and flexible workload orchestrator to deploy and manage containers (&lt;a href="https://developer.hashicorp.com/nomad/docs/deploy/task-driver/docker"&gt;docker&lt;/a&gt;, &lt;a href="https://developer.hashicorp.com/nomad/plugins/drivers/podman"&gt;podman&lt;/a&gt;), non-containerized applications (&lt;a href="https://developer.hashicorp.com/nomad/docs/deploy/task-driver/exec"&gt;executable&lt;/a&gt;, &lt;a href="https://developer.hashicorp.com/nomad/docs/deploy/task-driver/java"&gt;Java&lt;/a&gt;), and virtual machines (&lt;a href="https://developer.hashicorp.com/nomad/docs/deploy/task-driver/qemu"&gt;qemu&lt;/a&gt;) across on-prem and clouds at scale.&lt;/p&gt; 
&lt;p&gt;Nomad is supported on Linux, Windows, and macOS. A commercial version of Nomad, &lt;a href="https://developer.hashicorp.com/nomad/docs/enterprise"&gt;Nomad Enterprise&lt;/a&gt;, is also available.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href="https://developer.hashicorp.com/nomad"&gt;https://developer.hashicorp.com/nomad&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tutorials: &lt;a href="https://developer.hashicorp.com/nomad/tutorials"&gt;HashiCorp Developer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Forum: &lt;a href="https://discuss.hashicorp.com/c/nomad"&gt;Discuss&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Nomad provides several key features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Deploy Containers and Legacy Applications&lt;/strong&gt;: Nomad’s flexibility as an orchestrator enables an organization to run containers, legacy, and batch applications together on the same infrastructure. Nomad brings core orchestration benefits to legacy applications without needing to containerize via pluggable task drivers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Simple &amp;amp; Reliable&lt;/strong&gt;: Nomad runs as a single binary and is entirely self contained - combining resource management and scheduling into a single system. Nomad does not require any external services for storage or coordination. Nomad automatically handles application, node, and driver failures. Nomad is distributed and resilient, using leader election and state replication to provide high availability in the event of failures.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Device Plugins &amp;amp; GPU Support&lt;/strong&gt;: Nomad offers built-in support for GPU workloads such as machine learning (ML) and artificial intelligence (AI). Nomad uses device plugins to automatically detect and utilize resources from hardware devices such as GPU, FPGAs, and TPUs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Federation for Multi-Region, Multi-Cloud&lt;/strong&gt;: Nomad was designed to support infrastructure at a global scale. Nomad supports federation out-of-the-box and can deploy applications across multiple regions and clouds.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Proven Scalability&lt;/strong&gt;: Nomad is optimistically concurrent, which increases throughput and reduces latency for workloads. Nomad has been proven to scale to clusters of 10K+ nodes in real-world production environments.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;HashiCorp Ecosystem&lt;/strong&gt;: Nomad integrates seamlessly with Terraform, Consul, Vault for provisioning, service discovery, and secrets management.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h4&gt;Testing&lt;/h4&gt; 
&lt;p&gt;See &lt;a href="https://developer.hashicorp.com/nomad/tutorials/get-started"&gt;Developer: Getting Started&lt;/a&gt; for instructions on setting up a local Nomad cluster for non-production use.&lt;/p&gt; 
&lt;p&gt;Optionally, find Terraform manifests for bringing up a development Nomad cluster on a public cloud in the &lt;a href="https://raw.githubusercontent.com/hashicorp/nomad/main/terraform/"&gt;&lt;code&gt;terraform&lt;/code&gt;&lt;/a&gt; directory.&lt;/p&gt; 
&lt;h4&gt;Production&lt;/h4&gt; 
&lt;p&gt;See &lt;a href="https://developer.hashicorp.com/nomad/tutorials/enterprise/production-reference-architecture-vm-with-consul"&gt;Developer: Nomad Reference Architecture&lt;/a&gt; for recommended practices and a reference architecture for production deployments.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Full, comprehensive documentation is available on the Nomad website: &lt;a href="https://developer.hashicorp.com/nomad/docs"&gt;https://developer.hashicorp.com/nomad/docs&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Guides are available on &lt;a href="https://developer.hashicorp.com/nomad/tutorials"&gt;HashiCorp Developer&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;A timeline of major features expected for the next release or two can be found in the &lt;a href="https://github.com/orgs/hashicorp/projects/202/views/1"&gt;Public Roadmap&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This roadmap is a best guess at any given point, and both release dates and projects in each release are subject to change. Do not take any of these items as commitments, especially ones later than one major release away.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/hashicorp/nomad/main/contributing/"&gt;&lt;code&gt;contributing&lt;/code&gt;&lt;/a&gt; directory for more developer documentation.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ory/kratos</title>
      <link>https://github.com/ory/kratos</link>
      <description>&lt;p&gt;Headless cloud-native authentication and identity management written in Go. Scales to a billion+ users. Replace Homegrown, Auth0, Okta, Firebase with better UX and DX. Passkeys, Social Sign In, OIDC, Magic Link, Multi-Factor Auth, SMS, SAML, TOTP, and more. Runs everywhere, runs best on Ory Network.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;&lt;img src="https://raw.githubusercontent.com/ory/meta/master/static/banners/kratos.svg?sanitize=true" alt="Ory Kratos - Cloud native Identity and User Management" /&gt;&lt;/h1&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://www.ory.sh/chat"&gt;Chat&lt;/a&gt; | &lt;a href="https://github.com/ory/kratos/discussions"&gt;Discussions&lt;/a&gt; | &lt;a href="https://www.ory.sh/l/sign-up-newsletter"&gt;Newsletter&lt;/a&gt;&lt;br /&gt;&lt;br /&gt; &lt;a href="https://www.ory.sh/kratos/docs/"&gt;Guide&lt;/a&gt; | &lt;a href="https://www.ory.sh/kratos/docs/sdk/api"&gt;API Docs&lt;/a&gt; | &lt;a href="https://godoc.org/github.com/ory/kratos"&gt;Code Docs&lt;/a&gt;&lt;br /&gt;&lt;br /&gt; &lt;a href="https://console.ory.sh/"&gt;Support this project!&lt;/a&gt;&lt;br /&gt;&lt;br /&gt; &lt;a href="https://www.ory.sh/jobs/"&gt;Work in Open Source, Ory is hiring!&lt;/a&gt; &lt;/h4&gt; 
&lt;hr /&gt; 
&lt;p align="left"&gt; &lt;a href="https://github.com/ory/kratos/actions/workflows/ci.yaml"&gt;&lt;img src="https://github.com/ory/kratos/actions/workflows/ci.yaml/badge.svg?branch=master&amp;amp;event=push" alt="CI Tasks for Ory Kratos" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/ory/kratos"&gt;&lt;img src="https://codecov.io/gh/ory/kratos/branch/master/graph/badge.svg?token=6t0QqOdurR" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/4979"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/4979/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ory" alt="sponsors on Open Collective"&gt;&lt;img src="https://opencollective.com/ory/backers/badge.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ory" alt="Sponsors on Open Collective"&gt;&lt;img src="https://opencollective.com/ory/sponsors/badge.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ory/kratos/raw/master/CODE_OF_CONDUCT.md" alt="Ory Code of Conduct"&gt;&lt;img src="https://img.shields.io/badge/ory-code%20of%20conduct-green" /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Ory Kratos is &lt;em&gt;the&lt;/em&gt; developer-friendly, security-hardened and battle-tested Identity, User Management and Authentication system for the Cloud. Finally, it is no longer necessary to implement User Login for the umpteenth time!&lt;/p&gt; 
&lt;h2&gt;Ory Kratos on the Ory Network&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://www.ory.sh/cloud"&gt;Ory Network&lt;/a&gt; is the fastest, most secure and worry-free way to use Ory's Services. &lt;strong&gt;Ory Identities&lt;/strong&gt; is powered by the Ory Kratos open source identity server, and it's fully API-compatible.&lt;/p&gt; 
&lt;p&gt;The Ory Network provides the infrastructure for modern end-to-end security:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Identity &amp;amp; credential management scaling to billions of users and devices&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Registration, Login and Account management flows for passkey, biometric, social, SSO and multi-factor authentication&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pre-built login, registration and account management pages and components&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;OAuth2 and OpenID provider for single sign on, API access and machine-to-machine authorization&lt;/li&gt; 
 &lt;li&gt;Low-latency permission checks based on Google's Zanzibar model and with built-in support for the Ory Permission Language&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It's fully managed, highly available, developer &amp;amp; compliance-friendly!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GDPR-friendly secure storage with data locality&lt;/li&gt; 
 &lt;li&gt;Cloud-native APIs, compatible with Ory's Open Source servers&lt;/li&gt; 
 &lt;li&gt;Comprehensive admin tools with the web-based Ory Console and the Ory Command Line Interface (CLI)&lt;/li&gt; 
 &lt;li&gt;Extensive documentation, straightforward examples and easy-to-follow guides&lt;/li&gt; 
 &lt;li&gt;Fair, usage-based &lt;a href="https://www.ory.sh/pricing"&gt;pricing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Sign up for a &lt;a href="https://console.ory.sh/registration?utm_source=github&amp;amp;utm_medium=banner&amp;amp;utm_campaign=kratos-readme"&gt;&lt;strong&gt;free developer account&lt;/strong&gt;&lt;/a&gt; today!&lt;/p&gt; 
&lt;h2&gt;Ory Kratos On-premise support&lt;/h2&gt; 
&lt;p&gt;Are you running Ory Kratos in a mission-critical, commercial environment? The Ory Enterprise License (OEL) provides enhanced features, security, and expert support directly from the Ory core maintainers.&lt;/p&gt; 
&lt;p&gt;Organizations that require advanced features, enhanced security, and enterprise-grade support for Ory's identity and access management solutions benefit from the Ory Enterprise License (OEL) as a self-hosted, premium offering including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Additional features not available in the open-source version.&lt;/li&gt; 
 &lt;li&gt;Regular releases that address CVEs and security vulnerabilities, with strict SLAs for patching based on severity.&lt;/li&gt; 
 &lt;li&gt;Support for advanced scaling and multi-tenancy features.&lt;/li&gt; 
 &lt;li&gt;Premium support options, including SLAs, direct engineer access, and concierge onboarding.&lt;/li&gt; 
 &lt;li&gt;Access to private Docker registry for a faster, more reliable access to vetted enterprise builds.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A valid Ory Enterprise License and access to the Ory Enterprise Docker Registry are required to use these features. OEL is designed for mission-critical, production, and global applications where organizations need maximum control and flexibility over their identity infrastructure. Ory's offering is the only official program for qualified support from the maintainers. For more information book a meeting with the Ory team to &lt;strong&gt;&lt;a href="https://www.ory.sh/contact/"&gt;discuss your needs&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt; 
&lt;h3&gt;Quickstart&lt;/h3&gt; 
&lt;p&gt;Install the &lt;a href="https://www.ory.sh/docs/guides/cli/installation"&gt;Ory CLI&lt;/a&gt; and create a new project to get started with Ory Identities right away:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# If you don't have Ory CLI installed yet:
bash &amp;lt;(curl https://raw.githubusercontent.com/ory/meta/master/install.sh) -b . ory
sudo mv ./ory /usr/local/bin/

# Sign up
ory auth

# Create project
ory create project
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#ory-kratos-on-the-ory-network"&gt;Ory Kratos on the Ory Network&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#quickstart"&gt;Quickstart&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#what-is-ory-kratos"&gt;What is Ory Kratos?&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#who-is-using-it"&gt;Who is using it?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#getting-started"&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#ecosystem"&gt;Ecosystem&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#ory-kratos-identity-and-user-infrastructure-and-management"&gt;Ory Kratos: Identity and User Infrastructure and Management&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#ory-hydra-oauth2--openid-connect-server"&gt;Ory Hydra: OAuth2 &amp;amp; OpenID Connect Server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#ory-oathkeeper-identity--access-proxy"&gt;Ory Oathkeeper: Identity &amp;amp; Access Proxy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#ory-keto-access-control-policies-as-a-server"&gt;Ory Keto: Access Control Policies as a Server&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#security"&gt;Security&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#disclosing-vulnerabilities"&gt;Disclosing vulnerabilities&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#telemetry"&gt;Telemetry&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#documentation"&gt;Documentation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#guide"&gt;Guide&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#http-api-documentation"&gt;HTTP API documentation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#upgrading-and-changelog"&gt;Upgrading and Changelog&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#command-line-documentation"&gt;Command line documentation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#develop"&gt;Develop&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#dependencies"&gt;Dependencies&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#install-from-source"&gt;Install from source&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#formatting-code"&gt;Formatting Code&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#running-tests"&gt;Running Tests&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#short-tests"&gt;Short Tests&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#regular-tests"&gt;Regular Tests&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#updating-test-fixtures"&gt;Updating Test Fixtures&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#end-to-end-tests"&gt;End-to-End Tests&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#build-docker"&gt;Build Docker&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#documentation-tests"&gt;Documentation Tests&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ory/kratos/master/#preview-api-documentation"&gt;Preview API documentation&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;What is Ory Kratos?&lt;/h2&gt; 
&lt;p&gt;Ory Kratos is an API-first Identity and User Management system that is built according to &lt;a href="https://www.ory.sh/docs/ecosystem/software-architecture-philosophy"&gt;cloud architecture best practices&lt;/a&gt;. It implements core use cases that almost every software application needs to deal with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Self-service Login and Registration&lt;/strong&gt;: Allow end-users to create and sign into accounts (we call them &lt;strong&gt;identities&lt;/strong&gt;) using Username / Email and password combinations, Social Sign In ("Sign in with Google, GitHub"), Passwordless flows, and others.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Factor Authentication (MFA/2FA)&lt;/strong&gt;: Support protocols such as TOTP (&lt;a href="https://tools.ietf.org/html/rfc6238"&gt;RFC 6238&lt;/a&gt; and &lt;a href="https://tools.ietf.org/html/rfc4226"&gt;IETF RFC 4226&lt;/a&gt; - better known as &lt;a href="https://en.wikipedia.org/wiki/Google_Authenticator"&gt;Google Authenticator&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Account Verification&lt;/strong&gt;: Verify that an E-Mail address, phone number, or physical address actually belong to that identity.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Account Recovery&lt;/strong&gt;: Recover access using "Forgot Password" flows, Security Codes (in case of MFA device loss), and others.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Profile and Account Management&lt;/strong&gt;: Update passwords, personal details, email addresses, linked social profiles using secure flows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Admin APIs&lt;/strong&gt;: Import, update, delete identities.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We highly recommend reading the &lt;a href="https://www.ory.sh/kratos/docs/"&gt;Ory Kratos introduction docs&lt;/a&gt; to learn more about Ory Krato's background, feature set, and differentiation from other products.&lt;/p&gt; 
&lt;h3&gt;Who is using it?&lt;/h3&gt; 
&lt;!--BEGIN ADOPTERS--&gt; 
&lt;p&gt;The Ory community stands on the shoulders of individuals, companies, and maintainers. The Ory team thanks everyone involved - from submitting bug reports and feature requests, to contributing patches and documentation. The Ory community counts more than 50.000 members and is growing. The Ory stack protects 7.000.000.000+ API requests every day across thousands of companies. None of this would have been possible without each and everyone of you!&lt;/p&gt; 
&lt;p&gt;The following list represents companies that have accompanied us along the way and that have made outstanding contributions to our ecosystem. &lt;em&gt;If you think that your company deserves a spot here, reach out to &lt;a href="mailto:office@ory.sh"&gt;&lt;/a&gt;&lt;a href="mailto:office@ory.sh"&gt;office@ory.sh&lt;/a&gt; now&lt;/em&gt;!&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Logo&lt;/th&gt; 
   &lt;th&gt;Website&lt;/th&gt; 
   &lt;th&gt;Case Study&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenAI&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/openai.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/openai.svg?sanitize=true" alt="OpenAI" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://openai.com/"&gt;openai.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.ory.sh/case-studies/openai"&gt;OpenAI Case Study&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Fandom&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/fandom.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/fandom.svg?sanitize=true" alt="Fandom" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.fandom.com/"&gt;fandom.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.ory.sh/case-studies/fandom"&gt;Fandom Case Study&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Lumin&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/lumin.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/lumin.svg?sanitize=true" alt="Lumin" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.luminpdf.com/"&gt;luminpdf.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.ory.sh/case-studies/lumin"&gt;Lumin Case Study&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sencrop&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/sencrop.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/sencrop.svg?sanitize=true" alt="Sencrop" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://sencrop.com/"&gt;sencrop.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.ory.sh/case-studies/sencrop"&gt;Sencrop Case Study&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OSINT Industries&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/osint.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/osint.svg?sanitize=true" alt="OSINT Industries" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.osint.industries/"&gt;osint.industries&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.ory.sh/case-studies/osint"&gt;OSINT Industries Case Study&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;HGV&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/hgv.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/hgv.svg?sanitize=true" alt="HGV" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.hgv.it/"&gt;hgv.it&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.ory.sh/case-studies/hgv"&gt;HGV Case Study&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Maxroll&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/maxroll.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/maxroll.svg?sanitize=true" alt="Maxroll" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://maxroll.gg/"&gt;maxroll.gg&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.ory.sh/case-studies/maxroll"&gt;Maxroll Case Study&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Zezam&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/zezam.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/zezam.svg?sanitize=true" alt="Zezam" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.zezam.io/"&gt;zezam.io&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.ory.sh/case-studies/zezam"&gt;Zezam Case Study&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;T.RowePrice&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/troweprice.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/troweprice.svg?sanitize=true" alt="T.RowePrice" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.troweprice.com/"&gt;troweprice.com&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mistral&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/mistral.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/mistral.svg?sanitize=true" alt="Mistral" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.mistral.ai/"&gt;mistral.ai&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Axel Springer&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/axelspringer.svg" /&gt; 
     &lt;img height="22px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/axelspringer.svg?sanitize=true" alt="Axel Springer" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.axelspringer.com/"&gt;axelspringer.com&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hemnet&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/hemnet.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/hemnet.svg?sanitize=true" alt="Hemnet" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.hemnet.se/"&gt;hemnet.se&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Cisco&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/cisco.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/cisco.svg?sanitize=true" alt="Cisco" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.cisco.com/"&gt;cisco.com&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Presidencia de la República Dominicana&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/republica-dominicana.svg" /&gt; 
     &lt;img height="42px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/republica-dominicana.svg?sanitize=true" alt="Presidencia de la República Dominicana" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.presidencia.gob.do/"&gt;presidencia.gob.do&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Moonpig&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/moonpig.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/moonpig.svg?sanitize=true" alt="Moonpig" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.moonpig.com/"&gt;moonpig.com&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Booster&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/booster.svg" /&gt; 
     &lt;img height="18px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/booster.svg?sanitize=true" alt="Booster" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.choosebooster.com/"&gt;choosebooster.com&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Zaptec&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/zaptec.svg" /&gt; 
     &lt;img height="24px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/zaptec.svg?sanitize=true" alt="Zaptec" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.zaptec.com/"&gt;zaptec.com&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Klarna&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/klarna.svg" /&gt; 
     &lt;img height="24px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/klarna.svg?sanitize=true" alt="Klarna" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.klarna.com/"&gt;klarna.com&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Raspberry PI Foundation&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/raspi.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/raspi.svg?sanitize=true" alt="Raspberry PI Foundation" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.raspberrypi.org/"&gt;raspberrypi.org&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Tulip&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/tulip.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/tulip.svg?sanitize=true" alt="Tulip Retail" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://tulip.com/"&gt;tulip.com&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hootsuite&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/hootsuite.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/hootsuite.svg?sanitize=true" alt="Hootsuite" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://hootsuite.com/"&gt;hootsuite.com&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Segment&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/segment.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/segment.svg?sanitize=true" alt="Segment" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://segment.com/"&gt;segment.com&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Arduino&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/arduino.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/arduino.svg?sanitize=true" alt="Arduino" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.arduino.cc/"&gt;arduino.cc&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sainsbury's&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/sainsburys.svg" /&gt; 
     &lt;img height="24px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/sainsburys.svg?sanitize=true" alt="Sainsbury's" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.sainsburys.co.uk/"&gt;sainsburys.co.uk&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Contraste&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/contraste.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/contraste.svg?sanitize=true" alt="Contraste" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.contraste.com/en"&gt;contraste.com&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;inMusic&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/inmusic.svg" /&gt; 
     &lt;img height="24px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/inmusic.svg?sanitize=true" alt="InMusic" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://inmusicbrands.com/"&gt;inmusicbrands.com&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Buhta&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/buhta.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/buhta.svg?sanitize=true" alt="Buhta" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://buhta.com/"&gt;buhta.com&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt;  
  &lt;tr&gt; 
   &lt;td&gt;Amplitude&lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/amplitude.svg" /&gt; 
     &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/amplitude.svg?sanitize=true" alt="amplitude.com" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://amplitude.com/"&gt;amplitude.com&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://tier4.jp/en/"&gt;
     &lt;picture&gt;
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/tieriv.svg" /&gt;
      &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/tieriv.svg?sanitize=true" alt="TIER IV" /&gt;
     &lt;/picture&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://kyma-project.io"&gt;
     &lt;picture&gt;
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/kyma.svg" /&gt;
      &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/kyma.svg?sanitize=true" alt="Kyma Project" /&gt;
     &lt;/picture&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://serlo.org/"&gt;
     &lt;picture&gt;
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/serlo.svg" /&gt;
      &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/serlo.svg?sanitize=true" alt="Serlo" /&gt;
     &lt;/picture&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://padis.io/"&gt;
     &lt;picture&gt;
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/padis.svg" /&gt;
      &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/padis.svg?sanitize=true" alt="Padis" /&gt;
     &lt;/picture&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://cloudbear.eu/"&gt;
     &lt;picture&gt;
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/cloudbear.svg" /&gt;
      &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/cloudbear.svg?sanitize=true" alt="Cloudbear" /&gt;
     &lt;/picture&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://securityonionsolutions.com/"&gt;
     &lt;picture&gt;
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/securityonion.svg" /&gt;
      &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/securityonion.svg?sanitize=true" alt="Security Onion Solutions" /&gt;
     &lt;/picture&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://factlylabs.com/"&gt;
     &lt;picture&gt;
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/factly.svg" /&gt;
      &lt;img height="24px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/factly.svg?sanitize=true" alt="Factly" /&gt;
     &lt;/picture&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://cashdeck.com.au/"&gt;
     &lt;picture&gt;
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/allmyfunds.svg" /&gt;
      &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/allmyfunds.svg?sanitize=true" alt="All My Funds" /&gt;
     &lt;/picture&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://nortal.com/"&gt;
     &lt;picture&gt;
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/nortal.svg" /&gt;
      &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/nortal.svg?sanitize=true" alt="Nortal" /&gt;
     &lt;/picture&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.ordermygear.com/"&gt;
     &lt;picture&gt;
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/ordermygear.svg" /&gt;
      &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/ordermygear.svg?sanitize=true" alt="OrderMyGear" /&gt;
     &lt;/picture&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://r2devops.io/"&gt;
     &lt;picture&gt;
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/r2devops.svg" /&gt;
      &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/r2devops.svg?sanitize=true" alt="R2Devops" /&gt;
     &lt;/picture&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.paralus.io/"&gt;
     &lt;picture&gt;
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/paralus.svg" /&gt;
      &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/paralus.svg?sanitize=true" alt="Paralus" /&gt;
     &lt;/picture&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://dyrector.io/"&gt;
     &lt;picture&gt;
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/dyrector_io.svg" /&gt;
      &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/dyrector_io.svg?sanitize=true" alt="dyrector.io" /&gt;
     &lt;/picture&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://pinniped.dev/"&gt;
     &lt;picture&gt;
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/pinniped.svg" /&gt;
      &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/pinniped.svg?sanitize=true" alt="pinniped.dev" /&gt;
     &lt;/picture&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://pvotal.tech/"&gt;
     &lt;picture&gt;
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/ory/meta/master/static/adopters/light/pvotal.svg" /&gt;
      &lt;img height="32px" src="https://raw.githubusercontent.com/ory/meta/master/static/adopters/dark/pvotal.svg?sanitize=true" alt="pvotal.tech" /&gt;
     &lt;/picture&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Many thanks to all individual contributors&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/ory" target="_blank"&gt;&lt;img src="https://opencollective.com/ory/contributors.svg?width=890&amp;amp;limit=714&amp;amp;button=false" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!--END ADOPTERS--&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;To get started with some easy examples, head over to the &lt;a href="https://www.ory.sh/docs/guides/protect-page-login/"&gt;Get Started Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;Head over to the &lt;a href="https://www.ory.sh/kratos/docs/install"&gt;Ory Developer Documentation&lt;/a&gt; to learn how to install Ory Kratos on Linux, macOS, Windows, and Docker and how to build Ory Kratos from source.&lt;/p&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;!--BEGIN ECOSYSTEM--&gt; 
&lt;p&gt;We build Ory on several guiding principles when it comes to our architecture design:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Minimal dependencies&lt;/li&gt; 
 &lt;li&gt;Runs everywhere&lt;/li&gt; 
 &lt;li&gt;Scales without effort&lt;/li&gt; 
 &lt;li&gt;Minimize room for human and network errors&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Ory's architecture is designed to run best on a Container Orchestration system such as Kubernetes, CloudFoundry, OpenShift, and similar projects. Binaries are small (5-15MB) and available for all popular processor types (ARM, AMD64, i386) and operating systems (FreeBSD, Linux, macOS, Windows) without system dependencies (Java, Node, Ruby, libxml, ...).&lt;/p&gt; 
&lt;h3&gt;Ory Kratos: Identity and User Infrastructure and Management&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/ory/kratos"&gt;Ory Kratos&lt;/a&gt; is an API-first Identity and User Management system that is built according to &lt;a href="https://www.ory.sh/docs/next/ecosystem/software-architecture-philosophy"&gt;cloud architecture best practices&lt;/a&gt;. It implements core use cases that almost every software application needs to deal with: Self-service Login and Registration, Multi-Factor Authentication (MFA/2FA), Account Recovery and Verification, Profile, and Account Management.&lt;/p&gt; 
&lt;h3&gt;Ory Hydra: OAuth2 &amp;amp; OpenID Connect Server&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/ory/hydra"&gt;Ory Hydra&lt;/a&gt; is an OpenID Certified™ OAuth2 and OpenID Connect Provider which easily connects to any existing identity system by writing a tiny "bridge" application. It gives absolute control over the user interface and user experience flows.&lt;/p&gt; 
&lt;h3&gt;Ory Oathkeeper: Identity &amp;amp; Access Proxy&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/ory/oathkeeper"&gt;Ory Oathkeeper&lt;/a&gt; is a BeyondCorp/Zero Trust Identity &amp;amp; Access Proxy (IAP) with configurable authentication, authorization, and request mutation rules for your web services: Authenticate JWT, Access Tokens, API Keys, mTLS; Check if the contained subject is allowed to perform the request; Encode resulting content into custom headers (&lt;code&gt;X-User-ID&lt;/code&gt;), JSON Web Tokens and more!&lt;/p&gt; 
&lt;h3&gt;Ory Keto: Access Control Policies as a Server&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/ory/keto"&gt;Ory Keto&lt;/a&gt; is a policy decision point. It uses a set of access control policies, similar to AWS IAM Policies, in order to determine whether a subject (user, application, service, car, ...) is authorized to perform a certain action on a resource.&lt;/p&gt; 
&lt;!--END ECOSYSTEM--&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;Running identity infrastructure requires &lt;a href="https://www.ory.sh/kratos/docs/concepts/security"&gt;attention and knowledge of threat models&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Disclosing vulnerabilities&lt;/h3&gt; 
&lt;p&gt;If you think you found a security vulnerability, please refrain from posting it publicly on the forums, the chat, or GitHub. You can find all info for responsible disclosure in our &lt;a href="https://www.ory.sh/.well-known/security.txt"&gt;security.txt&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Telemetry&lt;/h2&gt; 
&lt;p&gt;Ory's services collect summarized, anonymized data that can optionally be turned off. Click &lt;a href="https://www.ory.sh/docs/ecosystem/sqa"&gt;here&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;h3&gt;Guide&lt;/h3&gt; 
&lt;p&gt;The Guide is available &lt;a href="https://www.ory.sh/kratos/docs"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;HTTP API documentation&lt;/h3&gt; 
&lt;p&gt;The HTTP API is documented &lt;a href="https://www.ory.sh/kratos/docs/sdk/api"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Upgrading and Changelog&lt;/h3&gt; 
&lt;p&gt;New releases might introduce breaking changes. To help you identify and incorporate those changes, we document these changes in the &lt;a href="https://raw.githubusercontent.com/ory/kratos/master/CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt;. For upgrading, please visit the &lt;a href="https://www.ory.sh/kratos/docs/guides/upgrade"&gt;upgrade guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Command line documentation&lt;/h3&gt; 
&lt;p&gt;Run &lt;code type="shell/command"&gt;kratos -h&lt;/code&gt; or &lt;code type="shell/command"&gt;kratos help&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Develop&lt;/h3&gt; 
&lt;p&gt;We encourage all contributions and encourage you to read our &lt;a href="https://raw.githubusercontent.com/ory/kratos/master/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Dependencies&lt;/h4&gt; 
&lt;p&gt;You need Go 1.16+ and (for the test suites):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker and Docker Compose&lt;/li&gt; 
 &lt;li&gt;Makefile&lt;/li&gt; 
 &lt;li&gt;NodeJS / npm&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It is possible to develop Ory Kratos on Windows, but please be aware that all guides assume a Unix shell like bash or zsh.&lt;/p&gt; 
&lt;h4&gt;Install from source&lt;/h4&gt; 
&lt;pre type="make/command"&gt;
make install
&lt;/pre&gt; 
&lt;h4&gt;Formatting Code&lt;/h4&gt; 
&lt;p&gt;You can format all code using &lt;code type="make/command"&gt;make format&lt;/code&gt;. Our CI checks if your code is properly formatted.&lt;/p&gt; 
&lt;h4&gt;Running Tests&lt;/h4&gt; 
&lt;p&gt;There are three types of tests you can run:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Short tests (do not require a SQL database like PostgreSQL)&lt;/li&gt; 
 &lt;li&gt;Regular tests (do require PostgreSQL, MySQL, CockroachDB)&lt;/li&gt; 
 &lt;li&gt;End to end tests (do require databases and will use a test browser)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Short Tests&lt;/h5&gt; 
&lt;p&gt;Short tests run fairly quickly. You can either test all of the code at once&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;go test -short -tags sqlite ./...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or test just a specific module:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cd client; go test -tags sqlite -short .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Regular Tests&lt;/h5&gt; 
&lt;p&gt;Regular tests require a database set up. Our test suite is able to work with docker directly (using &lt;a href="https://github.com/ory/dockertest"&gt;ory/dockertest&lt;/a&gt;) but we encourage to use the Makefile instead. Using dockertest can bloat the number of Docker Images on your system and are quite slow. Instead we recommend doing:&lt;/p&gt; 
&lt;pre type="make/command"&gt;
make test
&lt;/pre&gt; 
&lt;p&gt;Please be aware that &lt;code type="make/command"&gt;make test&lt;/code&gt; recreates the databases every time you run &lt;code type="make/command"&gt;make test&lt;/code&gt;. This can be annoying if you are trying to fix something very specific and need the database tests all the time. In that case we suggest that you initialize the databases with:&lt;/p&gt; 
&lt;a type="make/command"&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;make test-resetdb
export TEST_DATABASE_MYSQL='mysql://root:secret@(127.0.0.1:3444)/mysql?parseTime=true'
export TEST_DATABASE_POSTGRESQL='postgres://postgres:secret@127.0.0.1:3445/kratos?sslmode=disable'
export TEST_DATABASE_COCKROACHDB='cockroach://root@127.0.0.1:3446/defaultdb?sslmode=disable'
&lt;/code&gt;&lt;/pre&gt; &lt;/a&gt; 
&lt;p&gt;Then you can run &lt;code&gt;go test&lt;/code&gt; as often as you'd like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;go test -tags sqlite ./...

# or in a module:
cd client; go test  -tags sqlite  .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Updating Test Fixtures&lt;/h5&gt; 
&lt;p&gt;Some tests use fixtures. If payloads change, you can update them with:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make test-update-snapshots
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will only update the snapshots of the short tests. To update all snapshots, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;UPDATE_SNAPSHOTS=true go test -p 4 -tags sqlite ./...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also run this command from a sub folder.&lt;/p&gt; 
&lt;h5&gt;End-to-End Tests&lt;/h5&gt; 
&lt;p&gt;We use &lt;a href="https://www.cypress.io"&gt;Cypress&lt;/a&gt; to run our e2e tests.&lt;/p&gt; 
&lt;p&gt;⚠️ To run Cypress on ARM based Mac's, at the moment it is &lt;a href="https://www.cypress.io/blog/2021/01/20/running-cypress-on-the-apple-m1-silicon-arm-architecture-using-rosetta-2/"&gt;necessary to install Rosetta 2&lt;/a&gt;. To install, use the command - &lt;code&gt;softwareupdate --install-rosetta --agree-to-license&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The simplest way to develop e2e tests is:&lt;/p&gt; 
&lt;pre type="repo/executable"&gt;
./test/e2e/run.sh --dev sqlite
&lt;/pre&gt; 
&lt;p&gt;You can run all tests (with databases) using:&lt;/p&gt; 
&lt;pre type="make/command"&gt;
make test-e2e
&lt;/pre&gt; 
&lt;p&gt;For more details, run:&lt;/p&gt; 
&lt;pre type="repo/executable"&gt;
./test/e2e/run.sh
&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run only a singular test&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Add &lt;code&gt;.only&lt;/code&gt; to the test you would like to run.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;it.only('invalid remote recovery email template', () =&amp;gt; {
    ...
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run a subset of tests&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This will require editing the &lt;code&gt;cypress.json&lt;/code&gt; file located in the &lt;code&gt;test/e2e/&lt;/code&gt; folder.&lt;/p&gt; 
&lt;p&gt;Add the &lt;code&gt;testFiles&lt;/code&gt; option and specify the test to run inside the &lt;code&gt;cypress/integration&lt;/code&gt; folder. As an example we will add only the &lt;code&gt;network&lt;/code&gt; tests.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;"testFiles": ["profiles/network/*"],
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now start the tests again using the run script or makefile.&lt;/p&gt; 
&lt;h4&gt;Build Docker&lt;/h4&gt; 
&lt;p&gt;You can build a development Docker Image using:&lt;/p&gt; 
&lt;pre type="make/command"&gt;
make docker
&lt;/pre&gt; 
&lt;h4&gt;Preview API documentation&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;update the SDK including the OpenAPI specification: &lt;code type="make/command"&gt;make sdk&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;run preview server for API documentation: &lt;code type="make/command"&gt;make docs/api&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;run preview server for swagger documentation: &lt;code type="make/command"&gt;make docs/swagger&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Done-0/fuck-u-code</title>
      <link>https://github.com/Done-0/fuck-u-code</link>
      <description>&lt;p&gt;Legacy-Mess Detector – assess the “legacy-mess level” of your code and output a beautiful report | 屎山代码检测器，评估代码的“屎山等级”并输出美观的报告&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fuck-u-code &lt;a href="https://raw.githubusercontent.com/Done-0/fuck-u-code/main/README.md"&gt;&lt;img src="https://img.shields.io/badge/%E6%96%87%E6%A1%A3-%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-blue?style=flat-square" alt="中文" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/Done-0/fuck-u-code/main/README_EN.md"&gt;&lt;img src="https://img.shields.io/badge/Docs-English-red?style=flat-square" alt="English" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/Done-0/fuck-u-code/main/README_RU.md"&gt;&lt;img src="https://img.shields.io/badge/Docs-%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9-blue?style=flat-square" alt="Русский" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Important] 📢 记住这个命令：fuck-u-code - 让代码不再烂到发指！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;一款专门揭露屎山代码的质量分析工具，用犀利又搞笑的方式告诉你：&lt;strong&gt;你的代码到底有多烂&lt;/strong&gt;。&lt;/p&gt; 
&lt;h2&gt;特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;多语言支持&lt;/strong&gt;: Go、JS/TS、Python、Java、C/C++&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;屎山指数&lt;/strong&gt;: 0~100 分，越高越烂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;七维度检测&lt;/strong&gt;: 复杂度 / 函数长度 / 注释率 / 错误处理 / 命名 / 重复度 / 结构&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;彩色终端报告&lt;/strong&gt;: 批评也能笑着听&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Markdown 输出&lt;/strong&gt;: 方便 AI 分析与文档集成&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;灵活配置&lt;/strong&gt;: 摘要 / 详细模式，多语言报告&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Note]&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;分数越高越烂，欢迎“高分大佬”上榜&lt;/li&gt; 
  &lt;li&gt;全程本地运行，不上传代码，安全无忧&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;安装&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 方法一：Go 安装
go install github.com/Done-0/fuck-u-code/cmd/fuck-u-code@latest

# 方法二：源码构建
git clone https://github.com/Done-0/fuck-u-code.git
cd fuck-u-code &amp;amp;&amp;amp; go build -o fuck-u-code ./cmd/fuck-u-code

# 方法三：Docker 构建
docker build -t fuck-u-code .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;使用方法&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 基本分析 - 本地项目
fuck-u-code analyze /path/to/project
# 或
fuck-u-code /path/to/project

# 分析 Git 仓库（自动克隆）
fuck-u-code analyze https://github.com/user/repo.git
# 或
fuck-u-code https://github.com/user/repo

# Docker 运行
docker run --rm -v "/path/to/project:/build" fuck-u-code analyze

# 默认分析当前目录
fuck-u-code analyze
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Tip] &lt;strong&gt;支持直接分析 Git 仓库&lt;/strong&gt;：工具会自动克隆仓库到临时目录 &lt;code&gt;tmp_proj&lt;/code&gt; 并在分析后自动清理。支持 GitHub、GitLab、Gitee、Bitbucket 等平台。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;常用选项&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;选项&lt;/th&gt; 
   &lt;th&gt;简写&lt;/th&gt; 
   &lt;th&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--verbose&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-v&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;显示详细报告&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--top N&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-t&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;最烂的前 N 个文件&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--issues N&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;每文件显示 N 个问题&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--summary&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;只看总结，不看过程&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--markdown&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-m&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;输出 Markdown 格式报告&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--lang&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-l&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;报告语言 (zh-CN/en-US/ru-RU)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--exclude&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-e&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;排除指定目录或文件&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--skipindex&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-x&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;跳过 index.js/ts 文件&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;示例&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fuck-u-code analyze --verbose
fuck-u-code analyze --top 3
fuck-u-code analyze --lang en-US
fuck-u-code analyze --summary
fuck-u-code analyze --exclude "**/test/**"
fuck-u-code analyze --markdown &amp;gt; report.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;高级用法&lt;/h2&gt; 
&lt;h3&gt;Markdown 输出&lt;/h3&gt; 
&lt;p&gt;适合 &lt;strong&gt;AI 分析、文档集成、CI/CD、团队协作&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fuck-u-code analyze --markdown
fuck-u-code analyze --markdown &amp;gt; report.md
fuck-u-code analyze --markdown --top 10 --lang en-US &amp;gt; report.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Markdown 报告包含：总体评分 / 指标表格 / 问题文件 / 改进建议&lt;/p&gt; 
&lt;h3&gt;默认排除路径&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;前端: &lt;code&gt;node_modules&lt;/code&gt;、&lt;code&gt;dist&lt;/code&gt;、&lt;code&gt;build&lt;/code&gt;、&lt;code&gt;*.min.js&lt;/code&gt; 等&lt;/li&gt; 
 &lt;li&gt;后端: &lt;code&gt;vendor&lt;/code&gt;、&lt;code&gt;bin&lt;/code&gt;、&lt;code&gt;target&lt;/code&gt;、&lt;code&gt;logs&lt;/code&gt;、&lt;code&gt;migrations&lt;/code&gt; 等&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;疑难解答&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;command not found&lt;/code&gt; → 把 Go bin 路径加到 &lt;code&gt;PATH&lt;/code&gt;：&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;export PATH="$PATH:$(go env GOPATH)/bin"
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;并写入 &lt;code&gt;.bash_profile&lt;/code&gt; / &lt;code&gt;.zshrc&lt;/code&gt; 等&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;许可证&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt; 
&lt;h2&gt;贡献&lt;/h2&gt; 
&lt;p&gt;欢迎提 PR，一起优化“fuck-u-code” 🚀&lt;/p&gt; 
&lt;h2&gt;安利一下&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://bazi.site"&gt;玄学工坊&lt;/a&gt; — AI 赛博算命网站&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Done-0/Jank"&gt;Jank&lt;/a&gt; — Go 语言开源博客&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>qualifire-dev/rogue</title>
      <link>https://github.com/qualifire-dev/rogue</link>
      <description>&lt;p&gt;Agents testing framework made easy&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rogue - The AI Agent Evaluator&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://pixel.qualifire.ai/api/record/rogue" alt="" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;img src="https://github.com/qualifire-dev/rogue/actions/workflows/test.yml/badge.svg?branch=main" alt="Tests" /&gt;&lt;/p&gt; 
 &lt;img src="https://raw.githubusercontent.com/qualifire-dev/rogue/main/freddy-rogue.png" width="200" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Rogue is a powerful tool designed to evaluate the performance, compliance, and reliability of AI agents. It pits a dynamic &lt;code&gt;EvaluatorAgent&lt;/code&gt; against your agent using Google's A2A protocol, testing it with a range of scenarios to ensure it behaves exactly as intended.&lt;/p&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;Rogue operates on a &lt;strong&gt;client-server architecture&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Rogue Server&lt;/strong&gt;: Contains the core evaluation logic&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Client Interfaces&lt;/strong&gt;: Multiple interfaces that connect to the server: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;TUI (Terminal UI)&lt;/strong&gt;: Modern terminal interface built with Go and Bubble Tea&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Web UI&lt;/strong&gt;: Gradio-based web interface&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;CLI&lt;/strong&gt;: Command-line interface for automated evaluation and CI/CD&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This architecture allows for flexible deployment and usage patterns, where the server can run independently and multiple clients can connect to it simultaneously.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/b5c04772-6916-4aab-825b-6a7476d77787"&gt;https://github.com/user-attachments/assets/b5c04772-6916-4aab-825b-6a7476d77787&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🔥 Quick Start&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;uvx&lt;/code&gt; - If not installed, follow &lt;a href="https://docs.astral.sh/uv/getting-started/installation/"&gt;uv installation guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Python 3.10+&lt;/li&gt; 
 &lt;li&gt;An API key for an LLM provider (e.g., OpenAI, Google, Anthropic).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;h4&gt;Option 1: Quick Install (Recommended)&lt;/h4&gt; 
&lt;p&gt;Use our automated install script to get up and running quickly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# TUI
uvx rogue-ai

# Web UI
uvx rogue-ai ui

# CLI / CI/CD
uvx rogue-ai cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Option 2: Manual Installation&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/qualifire-dev/rogue.git
cd rogue
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;If you are using uv:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;uv sync
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or, if you are using pip:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install -e .
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;OPTIONALLY: Set up your environment variables:&lt;/strong&gt; Create a &lt;code&gt;.env&lt;/code&gt; file in the root directory and add your API keys. Rogue uses &lt;code&gt;LiteLLM&lt;/code&gt;, so you can set keys for various providers.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-env"&gt;OPENAI_API_KEY="sk-..."
ANTHROPIC_API_KEY="sk-..."
GOOGLE_API_KEY="..."
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Running Rogue&lt;/h3&gt; 
&lt;p&gt;Rogue operates on a client-server architecture where the core evaluation logic runs in a backend server, and various clients connect to it for different interfaces.&lt;/p&gt; 
&lt;h4&gt;Default Behavior&lt;/h4&gt; 
&lt;p&gt;When you run &lt;code&gt;uvx rogue-ai&lt;/code&gt; without any mode specified, it:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Starts the Rogue server in the background&lt;/li&gt; 
 &lt;li&gt;Launches the TUI (Terminal User Interface) client&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uvx rogue-ai
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Available Modes&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Default (Server + TUI)&lt;/strong&gt;: &lt;code&gt;uvx rogue-ai&lt;/code&gt; - Starts server in background + TUI client&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Server&lt;/strong&gt;: &lt;code&gt;uvx rogue-ai server&lt;/code&gt; - Runs only the backend server&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TUI&lt;/strong&gt;: &lt;code&gt;uvx rogue-ai tui&lt;/code&gt; - Runs only the TUI client (requires server running)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Web UI&lt;/strong&gt;: &lt;code&gt;uvx rogue-ai ui&lt;/code&gt; - Runs only the Gradio web interface client (requires server running)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CLI&lt;/strong&gt;: &lt;code&gt;uvx rogue-ai cli&lt;/code&gt; - Runs non-interactive command-line evaluation (requires server running, ideal for CI/CD)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Mode Arguments&lt;/h4&gt; 
&lt;h5&gt;Server Mode&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uvx rogue-ai server [OPTIONS]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Options:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--host HOST&lt;/code&gt; - Host to run the server on (default: 127.0.0.1 or HOST env var)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--port PORT&lt;/code&gt; - Port to run the server on (default: 8000 or PORT env var)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--debug&lt;/code&gt; - Enable debug logging&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;TUI Mode&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uvx rogue-ai tui [OPTIONS]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Web UI Mode&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uvx rogue-ai ui [OPTIONS]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Options:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--rogue-server-url URL&lt;/code&gt; - Rogue server URL (default: &lt;a href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--port PORT&lt;/code&gt; - Port to run the UI on&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--workdir WORKDIR&lt;/code&gt; - Working directory (default: ./.rogue)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--debug&lt;/code&gt; - Enable debug logging&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;CLI Mode&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uvx rogue-ai cli [OPTIONS]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Options:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--config-file FILE&lt;/code&gt; - Path to config file&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--rogue-server-url URL&lt;/code&gt; - Rogue server URL (default: &lt;a href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--evaluated-agent-url URL&lt;/code&gt; - URL of the agent to evaluate&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--evaluated-agent-auth-type TYPE&lt;/code&gt; - Auth method (no_auth, api_key, bearer_token, basic)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--evaluated-agent-credentials CREDS&lt;/code&gt; - Credentials for the agent&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--input-scenarios-file FILE&lt;/code&gt; - Path to scenarios file (default: 
  &lt;workdir&gt;
   /scenarios.json)
  &lt;/workdir&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--output-report-file FILE&lt;/code&gt; - Path to output report file&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--judge-llm MODEL&lt;/code&gt; - Model for evaluation and report generation&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--judge-llm-api-key KEY&lt;/code&gt; - API key for LLM provider&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--business-context TEXT&lt;/code&gt; - Business context description&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--business-context-file FILE&lt;/code&gt; - Path to business context file&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--deep-test-mode&lt;/code&gt; - Enable deep test mode&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--workdir WORKDIR&lt;/code&gt; - Working directory (default: ./.rogue)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--debug&lt;/code&gt; - Enable debug logging&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Web UI Mode&lt;/h4&gt; 
&lt;p&gt;To launch the Gradio web UI specifically:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uvx rogue-ai ui
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Navigate to the URL displayed in your terminal (usually &lt;code&gt;http://127.0.0.1:7860&lt;/code&gt;) to begin.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Example: Testing the T-Shirt Store Agent&lt;/h2&gt; 
&lt;p&gt;This repository includes a simple example agent that sells T-shirts. You can use it to see Rogue in action.&lt;/p&gt; 
&lt;h3&gt;Option 1: All-in-One (Recommended)&lt;/h3&gt; 
&lt;p&gt;The easiest way to try Rogue with the example agent is to use the &lt;code&gt;--example&lt;/code&gt; flag, which starts both Rogue and the example agent automatically:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uvx rogue-ai --example=tshirt_store
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Start the T-Shirt Store agent on &lt;code&gt;http://localhost:10001&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Launch Rogue with the TUI interface&lt;/li&gt; 
 &lt;li&gt;Automatically clean up when you exit&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can customize the host and port:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uvx rogue-ai --example=tshirt_store --example-host localhost --example-port 10001
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Option 2: Manual Setup&lt;/h3&gt; 
&lt;p&gt;If you prefer to run the example agent separately:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install example dependencies:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;If you are using uv:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;uv sync --group examples
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or, if you are using pip:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install -e .[examples]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start the example agent server&lt;/strong&gt; in a separate terminal:&lt;/p&gt; &lt;p&gt;If you are using uv:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;uv run python -m examples.tshirt_store_agent
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or using the script command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;uv run rogue-ai-example-tshirt
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or if installed:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;uvx rogue-ai-example-tshirt
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will start the agent on &lt;code&gt;http://localhost:10001&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Configure Rogue&lt;/strong&gt; in the UI to point to the example agent:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Agent URL&lt;/strong&gt;: &lt;code&gt;http://localhost:10001&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Authentication&lt;/strong&gt;: &lt;code&gt;no-auth&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the evaluation&lt;/strong&gt; and watch Rogue test the T-Shirt agent's policies!&lt;/p&gt; &lt;p&gt;You can use either the TUI (&lt;code&gt;uvx rogue-ai&lt;/code&gt;) or Web UI (&lt;code&gt;uvx rogue-ai ui&lt;/code&gt;) mode.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🔧 CLI Mode&lt;/h2&gt; 
&lt;p&gt;The CLI mode provides a &lt;strong&gt;non-interactive&lt;/strong&gt; command-line interface for evaluating AI agents against predefined scenarios. It connects to the Rogue server to perform evaluations and is &lt;strong&gt;ideal for CI/CD pipelines&lt;/strong&gt; and automated testing workflows.&lt;/p&gt; 
&lt;h3&gt;🚀 Usage&lt;/h3&gt; 
&lt;p&gt;The CLI mode requires the Rogue server to be running. You can either:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start server separately:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# Terminal 1: Start the server
uvx rogue-ai server

# Terminal 2: Run CLI evaluation
uvx rogue-ai cli [OPTIONS]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use the default mode (starts server + TUI, then use TUI for evaluation)&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For development or if you prefer to install locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/qualifire-dev/rogue.git
cd rogue
uv sync
uv run -m rogue cli [OPTIONS]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, if you are using pip:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/qualifire-dev/rogue.git
cd rogue
pip install -e .
uv run -m rogue cli [OPTIONS]
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h3&gt;📓 CLI Arguments&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: CLI mode is &lt;strong&gt;non-interactive&lt;/strong&gt; and designed for automated evaluation workflows, making it perfect for CI/CD pipelines.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Argument&lt;/th&gt; 
   &lt;th&gt;Required&lt;/th&gt; 
   &lt;th&gt;Default Value&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--workdir&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;./.rogue&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Directory to store outputs and defaults.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--config-file&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;workdir&amp;gt;/user_config.json&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Path to a config file generated by the UI. Values from this file are used unless overridden via CLI. If the file does not exist, only cli will be used.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--rogue-server-url&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;http://localhost:8000&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;URL of the Rogue server to connect to.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--evaluated-agent-url&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;The URL of the agent to evaluate.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--evaluated-agent-auth-type&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;no_auth&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Auth method. Can be one of: &lt;code&gt;no_auth&lt;/code&gt;, &lt;code&gt;api_key&lt;/code&gt;, &lt;code&gt;bearer_token&lt;/code&gt;, &lt;code&gt;basic&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--evaluated-agent-credentials&lt;/td&gt; 
   &lt;td&gt;Yes*&lt;br /&gt;if &lt;code&gt;auth_type&lt;/code&gt; is not &lt;code&gt;no_auth&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Credentials for the agent (if required).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--input-scenarios-file&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;workdir&amp;gt;/scenarios.json&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Path to scenarios file.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--output-report-file&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;workdir&amp;gt;/report.md&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Where to save the markdown report.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--judge-llm&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Model name for LLM evaluation (Litellm format).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--judge-llm-api-key&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;API key for LLM (see environment section).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--business-context&lt;/td&gt; 
   &lt;td&gt;Yes*&lt;br /&gt;Unless &lt;code&gt;--business-context-file&lt;/code&gt; is supplied&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Business context as a string.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--business-context-file&lt;/td&gt; 
   &lt;td&gt;Yes*&lt;br /&gt;Unless &lt;code&gt;--business-context&lt;/code&gt; is supplied&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;workdir&amp;gt;/business_context.md&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;OR path to file containing the business context.&lt;br /&gt;If both given, &lt;code&gt;--business-context&lt;/code&gt; has priority&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--deep-test-mode&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;False&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enables extended testing behavior.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--debug&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;False&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enable verbose logging.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;📊 Config file&lt;/h3&gt; 
&lt;p&gt;The config file is automatically generated when running the UI. &lt;br /&gt; We will check for a config file in &lt;code&gt;&amp;lt;workdir&amp;gt;/user_config.json&lt;/code&gt; and use it if it exists. &lt;br /&gt; The config file is a JSON object that can contain all or a subset of the fields from the CLI arguments, except for &lt;code&gt;--config-file&lt;/code&gt;. &lt;br /&gt; Other keys in the config file are ignored. &lt;br /&gt; Just remember to use snake_case keys. (e.g. &lt;code&gt;--evaluated-agent-url&lt;/code&gt; becomes &lt;code&gt;evaluated_agent_url&lt;/code&gt;).&lt;/p&gt; 
&lt;h3&gt;Notes&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;⚠️ Either &lt;code&gt;--business-context&lt;/code&gt; or &lt;code&gt;--business-context-file&lt;/code&gt; must be provided.&lt;/li&gt; 
 &lt;li&gt;⚠️ Fields marked as Required are required unless supplied via the config file.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Examples&lt;/h3&gt; 
&lt;h3&gt;With only a config file:&lt;/h3&gt; 
&lt;p&gt;with our business context located at &lt;code&gt;./.rogue/business_context.md&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;./.rogue/user_config.json&lt;/code&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "evaluated_agent_url": "http://localhost:10001",
  "judge_llm": "openai/o4-mini"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Execution&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uvx rogue-ai cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Same example without a config file:&lt;/h3&gt; 
&lt;h4&gt;Execution&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uvx rogue-ai cli \
    --evaluated-agent-url http://localhost:10001 \
    --judge-llm openai/o4-mini \
    --business-context-file './.rogue/business_context.md'
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🔄 Dynamic Scenario Generation&lt;/strong&gt;: Automatically creates a comprehensive test suite from your high-level business context.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;👀 Live Evaluation Monitoring&lt;/strong&gt;: Watch the interaction between the Evaluator and your agent in a real-time chat interface.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📊 Comprehensive Reporting&lt;/strong&gt;: Generates a detailed summary of the evaluation, including pass/fail rates, key findings, and recommendations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔍 Multi-Faceted Testing&lt;/strong&gt;: Natively supports testing for policy compliance, with a flexible framework to expand to other areas like prompt injection or safety.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🤖 Broad Model Support&lt;/strong&gt;: Compatible with a wide range of models from providers like OpenAI, Google (Gemini), and Anthropic.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎯 User-Friendly Interface&lt;/strong&gt;: A simple, step-by-step Gradio UI guides you through configuration, execution, and reporting.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;How It Works&lt;/h2&gt; 
&lt;p&gt;Rogue's workflow is designed to be simple and intuitive, managed entirely through its web interface.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Configure&lt;/strong&gt;: You provide the endpoint and authentication details for the agent you want to test, and select the LLMs you want Rogue to use for its services (scenario generation, judging).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generate Scenarios&lt;/strong&gt;: You input the "business context" or a high-level description of what your agent is supposed to do. Rogue's &lt;code&gt;LLM Service&lt;/code&gt; uses this context to generate a list of relevant test scenarios. You can review and edit these scenarios.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Run &amp;amp; Evaluate&lt;/strong&gt;: You start the evaluation. The &lt;code&gt;Scenario Evaluation Service&lt;/code&gt; spins up the &lt;code&gt;EvaluatorAgent&lt;/code&gt;, which begins a conversation with your agent for each scenario. You can watch this conversation happen live.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;View Report&lt;/strong&gt;: Once all scenarios are complete, the &lt;code&gt;LLM Service&lt;/code&gt; analyzes the results and generates a Markdown-formatted report, giving you a clear summary of your agent's performance.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! If you'd like to contribute, please follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository.&lt;/li&gt; 
 &lt;li&gt;Create a new branch (&lt;code&gt;git checkout -b feature/your-feature-name&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Make your changes and commit them (&lt;code&gt;git commit -m 'Add some feature'&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Push to the branch (&lt;code&gt;git push origin feature/your-feature-name&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Open a pull request.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Please make sure to update tests as appropriate.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under a License - see the &lt;a href="https://raw.githubusercontent.com/qualifire-dev/rogue/main/LICENSE.md"&gt;LICENSE&lt;/a&gt; file for details. This means that you can use this freely and forever but you are not allowed to host and sell this software.&lt;/p&gt; 
&lt;p&gt;If you have any queries about the license and commercial use for this project please email &lt;code&gt;admin@qualifire.ai&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker/compose</title>
      <link>https://github.com/docker/compose</link>
      <description>&lt;p&gt;Define and run multi-container applications with Docker&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/docker/compose/main/#docker-compose-v2"&gt;Docker Compose v2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/docker/compose/main/#where-to-get-docker-compose"&gt;Where to get Docker Compose&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/docker/compose/main/#windows-and-macos"&gt;Windows and macOS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/docker/compose/main/#linux"&gt;Linux&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/docker/compose/main/#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/docker/compose/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/docker/compose/main/#legacy"&gt;Legacy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Docker Compose v2&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/docker/compose/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/docker/compose.svg?style=flat-square" alt="GitHub release" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/docker/compose/v2"&gt;&lt;img src="https://img.shields.io/badge/go.dev-docs-007d9c?style=flat-square&amp;amp;logo=go&amp;amp;logoColor=white" alt="PkgGoDev" /&gt;&lt;/a&gt; &lt;a href="https://github.com/docker/compose/actions?query=workflow%3Aci"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/docker/compose/ci.yml?label=ci&amp;amp;logo=github&amp;amp;style=flat-square" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/docker/compose/v2"&gt;&lt;img src="https://goreportcard.com/badge/github.com/docker/compose/v2?style=flat-square" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/docker/compose"&gt;&lt;img src="https://codecov.io/gh/docker/compose/branch/main/graph/badge.svg?token=HP3K4Y4ctu" alt="Codecov" /&gt;&lt;/a&gt; &lt;a href="https://api.securityscorecards.dev/projects/github.com/docker/compose"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/docker/compose/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;img src="https://raw.githubusercontent.com/docker/compose/main/logo.png?raw=true" alt="Docker Compose" title="Docker Compose Logo" /&gt;&lt;/p&gt; 
&lt;p&gt;Docker Compose is a tool for running multi-container applications on Docker defined using the &lt;a href="https://compose-spec.io"&gt;Compose file format&lt;/a&gt;. A Compose file is used to define how one or more containers that make up your application are configured. Once you have a Compose file, you can create and start your application with a single command: &lt;code&gt;docker compose up&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: About Docker Swarm Docker Swarm used to rely on the legacy compose file format but did not adopted the compose specification so is missing some of the recent enhancements in the compose syntax. After &lt;a href="https://www.mirantis.com/software/swarm/"&gt;acquisition by Mirantis&lt;/a&gt; swarm isn't maintained by Docker Inc, and as such some Docker Compose features aren't accessible to swarm users.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Where to get Docker Compose&lt;/h1&gt; 
&lt;h3&gt;Windows and macOS&lt;/h3&gt; 
&lt;p&gt;Docker Compose is included in &lt;a href="https://www.docker.com/products/docker-desktop/"&gt;Docker Desktop&lt;/a&gt; for Windows and macOS.&lt;/p&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;p&gt;You can download Docker Compose binaries from the &lt;a href="https://github.com/docker/compose/releases"&gt;release page&lt;/a&gt; on this repository.&lt;/p&gt; 
&lt;p&gt;Rename the relevant binary for your OS to &lt;code&gt;docker-compose&lt;/code&gt; and copy it to &lt;code&gt;$HOME/.docker/cli-plugins&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Or copy it into one of these folders to install it system-wide:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;/usr/local/lib/docker/cli-plugins&lt;/code&gt; OR &lt;code&gt;/usr/local/libexec/docker/cli-plugins&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/usr/lib/docker/cli-plugins&lt;/code&gt; OR &lt;code&gt;/usr/libexec/docker/cli-plugins&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;(might require making the downloaded file executable with &lt;code&gt;chmod +x&lt;/code&gt;)&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Using Docker Compose is a three-step process:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Define your app's environment with a &lt;code&gt;Dockerfile&lt;/code&gt; so it can be reproduced anywhere.&lt;/li&gt; 
 &lt;li&gt;Define the services that make up your app in &lt;code&gt;compose.yaml&lt;/code&gt; so they can be run together in an isolated environment.&lt;/li&gt; 
 &lt;li&gt;Lastly, run &lt;code&gt;docker compose up&lt;/code&gt; and Compose will start and run your entire app.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;A Compose file looks like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  web:
    build: .
    ports:
      - "5000:5000"
    volumes:
      - .:/code
  redis:
    image: redis
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Want to help develop Docker Compose? Check out our &lt;a href="https://raw.githubusercontent.com/docker/compose/main/CONTRIBUTING.md"&gt;contributing documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you find an issue, please report it on the &lt;a href="https://github.com/docker/compose/issues/new/choose"&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Legacy&lt;/h2&gt; 
&lt;p&gt;The Python version of Compose is available under the &lt;code&gt;v1&lt;/code&gt; &lt;a href="https://github.com/docker/compose/tree/v1"&gt;branch&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>argoproj/argo-cd</title>
      <link>https://github.com/argoproj/argo-cd</link>
      <description>&lt;p&gt;Declarative Continuous Deployment for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Releases:&lt;/strong&gt; &lt;a href="https://github.com/argoproj/argo-cd/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/argoproj/argo-cd?label=argo-cd" alt="Release Version" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/argo/argo-cd"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/argo-cd" alt="Artifact HUB" /&gt;&lt;/a&gt; &lt;a href="https://slsa.dev"&gt;&lt;img src="https://slsa.dev/images/gh-badge-level3.svg?sanitize=true" alt="SLSA 3" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Code:&lt;/strong&gt; &lt;a href="https://github.com/argoproj/argo-cd/actions?query=workflow%3A%22Integration+tests%22"&gt;&lt;img src="https://github.com/argoproj/argo-cd/workflows/Integration%20tests/badge.svg?branch=master" alt="Integration tests" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/argoproj/argo-cd"&gt;&lt;img src="https://codecov.io/gh/argoproj/argo-cd/branch/master/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/4486"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/4486/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/argoproj/argo-cd"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/argoproj/argo-cd/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Social:&lt;/strong&gt; &lt;a href="https://twitter.com/argoproj"&gt;&lt;img src="https://img.shields.io/twitter/follow/argoproj?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://argoproj.github.io/community/join-slack"&gt;&lt;img src="https://img.shields.io/badge/slack-argoproj-brightgreen.svg?logo=slack" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/company/argoproj/"&gt;&lt;img src="https://img.shields.io/badge/LinkedIn-argoproj-blue.svg?logo=linkedin" alt="LinkedIn" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Argo CD - Declarative Continuous Delivery for Kubernetes&lt;/h1&gt; 
&lt;h2&gt;What is Argo CD?&lt;/h2&gt; 
&lt;p&gt;Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/argoproj/argo-cd/master/docs/assets/argocd-ui.gif" alt="Argo CD UI" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/0WAm0y2vLIo"&gt;&lt;img src="https://img.youtube.com/vi/0WAm0y2vLIo/0.jpg" alt="Argo CD Demo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Why Argo CD?&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Application definitions, configurations, and environments should be declarative and version controlled.&lt;/li&gt; 
 &lt;li&gt;Application deployment and lifecycle management should be automated, auditable, and easy to understand.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Who uses Argo CD?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/argoproj/argo-cd/master/USERS.md"&gt;Official Argo CD user list&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;To learn more about Argo CD &lt;a href="https://argo-cd.readthedocs.io/"&gt;go to the complete documentation&lt;/a&gt;. Check live demo at &lt;a href="https://cd.apps.argoproj.io/"&gt;https://cd.apps.argoproj.io/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;h3&gt;Contribution, Discussion and Support&lt;/h3&gt; 
&lt;p&gt;You can reach the Argo CD community and developers via the following channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Q &amp;amp; A : &lt;a href="https://github.com/argoproj/argo-cd/discussions"&gt;Github Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chat : &lt;a href="https://argoproj.github.io/community/join-slack"&gt;The #argo-cd Slack channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Contributors Office Hours: &lt;a href="https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com"&gt;Every Thursday&lt;/a&gt; | &lt;a href="https://docs.google.com/document/d/1xkoFkVviB70YBzSEa4bDnu-rUZ1sIFtwKKG1Uw8XsY8"&gt;Agenda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;User Community meeting: &lt;a href="https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com"&gt;First Wednesday of the month&lt;/a&gt; | &lt;a href="https://docs.google.com/document/d/1ttgw98MO45Dq7ZUHpIiOIEfbyeitKHNfMjbY5dLLMKQ"&gt;Agenda&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Participation in the Argo CD project is governed by the &lt;a href="https://github.com/cncf/foundation/raw/master/code-of-conduct.md"&gt;CNCF Code of Conduct&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Blogs and Presentations&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://github.com/terrytangyuan/awesome-argo"&gt;Awesome-Argo: A Curated List of Awesome Projects and Resources Related to Argo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://akuity.io/blog/secret-ingredients-of-continuous-delivery-at-enterprise-scale-with-argocd/"&gt;Unveil the Secret Ingredients of Continuous Delivery at Enterprise Scale with Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/avPUQin9kzU"&gt;GitOps Without Pipelines With ArgoCD Image Updater&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/eEcgn_gU3SM"&gt;Combining Argo CD (GitOps), Crossplane (Control Plane), And KubeVela (OAM)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/yrj4lmScKHQ"&gt;How to Apply GitOps to Everything - Combining Argo CD and Crossplane&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/nkPoPaVzExY"&gt;Couchbase - How To Run a Database Cluster in Kubernetes Using Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/XNXJtxkUKeY"&gt;Automation of Everything - How To Combine Argo Events, Workflows &amp;amp; Pipelines, CD, and Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/cpAaI8p4R60"&gt;Environments Based On Pull Requests (PRs): Using Argo CD To Apply GitOps Principles On Previews&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/vpWQeoaiRM4"&gt;Argo CD: Applying GitOps Principles To Manage Production Environment In Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/continuous-deployment/creating-temporary-preview-environments-based-pull-requests-argo-cd-codefresh/"&gt;Creating Temporary Preview Environments Based On Pull Requests With Argo CD And Codefresh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=r50tRQjisxw"&gt;Tutorial: Everything You Need To Become A GitOps Ninja&lt;/a&gt; 90m tutorial on GitOps and Argo CD.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.inovex.de/blog/spinnaker-vs-argo-cd-vs-tekton-vs-jenkins-x/"&gt;Comparison of Argo CD, Spinnaker, Jenkins X, and Tekton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ibm.com/cloud/blog/simplify-and-automate-deployments-using-gitops-with-ibm-multicloud-manager-3-1-2"&gt;Simplify and Automate Deployments Using GitOps with IBM Multicloud Manager 3.1.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://v0-6.kubeflow.org/docs/use-cases/gitops-for-kubeflow/"&gt;GitOps for Kubeflow using Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/webinar-series-gitops-tool-sets-on-kubernetes-with-circleci-and-argo-cd"&gt;GitOps Toolsets on Kubernetes with CircleCI and Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=OdzH82VpMwI&amp;amp;feature=youtu.be"&gt;CI/CD in Light Speed with K8s and Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=VXrGp5er1ZE&amp;amp;t=0s&amp;amp;index=135&amp;amp;list=PLj6h78yzYM2PZf9eA7bhWnIh_mK1vyOfU"&gt;Machine Learning as Code&lt;/a&gt;. Among other things, describes how Kubeflow uses Argo CD to implement GitOPs for ML&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aWDIQMbp1cc&amp;amp;feature=youtu.be&amp;amp;t=1m4s"&gt;Argo CD - GitOps Continuous Delivery for Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2WSJF7d8dUg&amp;amp;feature=youtu.be"&gt;Introduction to Argo CD : Kubernetes DevOps CI/CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/riskified-technology/gitops-deployment-and-kubernetes-f1ab289efa4b"&gt;GitOps Deployment and Kubernetes - using Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://itnext.io/deploy-argo-cd-with-ingress-and-tls-in-three-steps-no-yaml-yak-shaving-required-bc536d401491"&gt;Deploy Argo CD with Ingress and TLS in Three Steps: No YAML Yak Shaving Required&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/events/cncf-member-webinar-gitops-continuous-delivery-argo-codefresh/"&gt;GitOps Continuous Delivery with Argo and Codefresh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mjpitz.com/blog/2020/12/03/renovate-your-gitops/"&gt;Stay up to date with Argo CD and Renovate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.arthurkoziel.com/setting-up-argocd-with-helm/"&gt;Setting up Argo CD with Helm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://thenewstack.io/applied-gitops-with-argocd/"&gt;Applied GitOps with Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cncf.io/blog/2020/12/17/solving-configuration-drift-using-gitops-with-argo-cd/"&gt;Solving configuration drift using GitOps with Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blogs.sap.com/2021/05/06/decentralized-gitops-over-environments/"&gt;Decentralized GitOps over environments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/AvLuplh1skA"&gt;Getting Started with ArgoCD for GitOps Deployments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/17894DTru2Y"&gt;Using Argo CD &amp;amp; Datree for Stable Kubernetes CI/CD Deployments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://amralaayassen.medium.com/how-to-create-argocd-applications-automatically-using-applicationset-automation-of-the-gitops-59455eaf4f72"&gt;How to create Argo CD Applications Automatically using ApplicationSet? "Automation of GitOps"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cncf.io/blog/2022/12/16/progressive-delivery-with-service-mesh-argo-rollouts-with-istio/"&gt;Progressive Delivery with Service Mesh – Argo Rollouts with Istio&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>alibaba/higress</title>
      <link>https://github.com/alibaba/higress</link>
      <description>&lt;p&gt;🤖 AI Gateway | AI Native API Gateway&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name="readme-top"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1 align="center"&gt; &lt;img src="https://img.alicdn.com/imgextra/i2/O1CN01NwxLDd20nxfGBjxmZ_!!6000000006895-2-tps-960-290.png" alt="Higress" width="240" height="72.5" /&gt; &lt;br /&gt; AI Gateway &lt;/h1&gt; 
&lt;h4 align="center"&gt; AI Native API Gateway &lt;/h4&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/alibaba/higress/actions"&gt;&lt;img src="https://github.com/alibaba/higress/actions/workflows/build-and-test.yaml/badge.svg?branch=main" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://www.apache.org/licenses/LICENSE-2.0.html"&gt;&lt;img src="https://img.shields.io/github/license/alibaba/higress.svg?sanitize=true" alt="license" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/tSbww9VDaM"&gt;&lt;img src="https://img.shields.io/discord/1364956090566971515?color=5865F2&amp;amp;label=discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://trendshift.io/repositories/10918" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/10918" alt="alibaba%2Fhigress | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; &lt;a href="https://www.producthunt.com/posts/higress?embed=true&amp;amp;utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-higress" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=951287&amp;amp;theme=light&amp;amp;t=1745492822283" alt="Higress - Global APIs as MCP powered by AI Gateway | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://higress.ai/en/"&gt;&lt;strong&gt;Official Site&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://higress.cn/en/docs/latest/overview/what-is-higress/"&gt;&lt;strong&gt;Docs&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://higress.cn/en/blog/"&gt;&lt;strong&gt;Blog&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://higress.cn/en/ai/mcp-quick-start/"&gt;&lt;strong&gt;MCP Server QuickStart&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://higress.cn/en/docs/latest/dev/architecture/"&gt;&lt;strong&gt;Developer Guide&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://higress.cn/en/plugin/"&gt;&lt;strong&gt;Wasm Plugin Hub&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; |&lt;/p&gt; 
&lt;p&gt; English | &lt;a href="https://raw.githubusercontent.com/alibaba/higress/main/README_ZH.md"&gt;中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/alibaba/higress/main/README_JP.md"&gt;日本語&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;What is Higress?&lt;/h2&gt; 
&lt;p&gt;Higress is a cloud-native API gateway based on Istio and Envoy, which can be extended with Wasm plugins written in Go/Rust/JS. It provides dozens of ready-to-use general-purpose plugins and an out-of-the-box console (try the &lt;a href="http://demo.higress.io/"&gt;demo here&lt;/a&gt;).&lt;/p&gt; 
&lt;h3&gt;Core Use Cases&lt;/h3&gt; 
&lt;p&gt;Higress's AI gateway capabilities support all &lt;a href="https://github.com/alibaba/higress/tree/main/plugins/wasm-go/extensions/ai-proxy/provider"&gt;mainstream model providers&lt;/a&gt; both domestic and international. It also supports hosting MCP (Model Context Protocol) Servers through its plugin mechanism, enabling AI Agents to easily call various tools and services. With the &lt;a href="https://github.com/higress-group/openapi-to-mcpserver"&gt;openapi-to-mcp tool&lt;/a&gt;, you can quickly convert OpenAPI specifications into remote MCP servers for hosting. Higress provides unified management for both LLM API and MCP API.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🌟 Try it now at &lt;a href="https://mcp.higress.ai/"&gt;https://mcp.higress.ai/&lt;/a&gt;&lt;/strong&gt; to experience Higress-hosted Remote MCP Servers firsthand:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.alicdn.com/imgextra/i2/O1CN01nmVa0a1aChgpyyWOX_!!6000000003294-0-tps-3430-1742.jpg" alt="Higress MCP Server Platform" /&gt;&lt;/p&gt; 
&lt;h3&gt;Enterprise Adoption&lt;/h3&gt; 
&lt;p&gt;Higress was born within Alibaba to solve the issues of Tengine reload affecting long-connection services and insufficient load balancing capabilities for gRPC/Dubbo. Within Alibaba Cloud, Higress's AI gateway capabilities support core AI applications such as Tongyi Bailian model studio, machine learning PAI platform, and other critical AI services. Alibaba Cloud has built its cloud-native API gateway product based on Higress, providing 99.99% gateway high availability guarantee service capabilities for a large number of enterprise customers.&lt;/p&gt; 
&lt;h2&gt;Summary&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/alibaba/higress/main/#quick-start"&gt;&lt;strong&gt;Quick Start&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/alibaba/higress/main/#feature-showcase"&gt;&lt;strong&gt;Feature Showcase&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/alibaba/higress/main/#use-cases"&gt;&lt;strong&gt;Use Cases&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/alibaba/higress/main/#core-advantages"&gt;&lt;strong&gt;Core Advantages&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/alibaba/higress/main/#community"&gt;&lt;strong&gt;Community&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Higress can be started with just Docker, making it convenient for individual developers to set up locally for learning or for building simple sites:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Create a working directory
mkdir higress; cd higress
# Start higress, configuration files will be written to the working directory
docker run -d --rm --name higress-ai -v ${PWD}:/data \
        -p 8001:8001 -p 8080:8080 -p 8443:8443  \
        higress-registry.cn-hangzhou.cr.aliyuncs.com/higress/all-in-one:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Port descriptions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Port 8001: Higress UI console entry&lt;/li&gt; 
 &lt;li&gt;Port 8080: Gateway HTTP protocol entry&lt;/li&gt; 
 &lt;li&gt;Port 8443: Gateway HTTPS protocol entry&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;All Higress Docker images use Higress's own image repository and are not affected by Docker Hub rate limits. In addition, the submission and updates of the images are protected by a security scanning mechanism (powered by Alibaba Cloud ACR), making them very secure for use in production environments.&lt;/p&gt; 
 &lt;p&gt;If you experience a timeout when pulling image from &lt;code&gt;higress-registry.cn-hangzhou.cr.aliyuncs.com&lt;/code&gt;, you can try replacing it with the following docker registry mirror source:&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Southeast Asia&lt;/strong&gt;: &lt;code&gt;higress-registry.ap-southeast-7.cr.aliyuncs.com&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For other installation methods such as Helm deployment under K8s, please refer to the official &lt;a href="https://higress.io/en-us/docs/user/quickstart"&gt;Quick Start documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Use Cases&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;MCP Server Hosting&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Higress hosts MCP Servers through its plugin mechanism, enabling AI Agents to easily call various tools and services. With the &lt;a href="https://github.com/higress-group/openapi-to-mcpserver"&gt;openapi-to-mcp tool&lt;/a&gt;, you can quickly convert OpenAPI specifications into remote MCP servers.&lt;/p&gt; &lt;p&gt;&lt;img src="https://img.alicdn.com/imgextra/i1/O1CN01wv8H4g1mS4MUzC1QC_!!6000000004952-2-tps-1764-597.png" alt="" /&gt;&lt;/p&gt; &lt;p&gt;Key benefits of hosting MCP Servers with Higress:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Unified authentication and authorization mechanisms&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Fine-grained rate limiting to prevent abuse&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Comprehensive audit logs for all tool calls&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Rich observability for monitoring performance&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Simplified deployment through Higress's plugin mechanism&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Dynamic updates without disruption or connection drops&lt;/p&gt; &lt;p&gt;&lt;a href="https://higress.cn/en/ai/mcp-quick-start/?spm=36971b57.7beea2de.0.0.d85f20a94jsWGm"&gt;Learn more...&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI Gateway&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Higress connects to all LLM model providers using a unified protocol, with AI observability, multi-model load balancing, token rate limiting, and caching capabilities:&lt;/p&gt; &lt;p&gt;&lt;img src="https://img.alicdn.com/imgextra/i2/O1CN01izmBNX1jbHT7lP3Yr_!!6000000004566-0-tps-1920-1080.jpg" alt="" /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Kubernetes ingress controller&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Higress can function as a feature-rich ingress controller, which is compatible with many annotations of K8s' nginx ingress controller.&lt;/p&gt; &lt;p&gt;&lt;a href="https://gateway-api.sigs.k8s.io/"&gt;Gateway API&lt;/a&gt; support is coming soon and will support smooth migration from Ingress API to Gateway API.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Microservice gateway&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Higress can function as a microservice gateway, which can discovery microservices from various service registries, such as Nacos, ZooKeeper, Consul, Eureka, etc.&lt;/p&gt; &lt;p&gt;It deeply integrates with &lt;a href="https://github.com/apache/dubbo"&gt;Dubbo&lt;/a&gt;, &lt;a href="https://github.com/alibaba/nacos"&gt;Nacos&lt;/a&gt;, &lt;a href="https://github.com/alibaba/Sentinel"&gt;Sentinel&lt;/a&gt; and other microservice technology stacks.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Security gateway&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Higress can be used as a security gateway, supporting WAF and various authentication strategies, such as key-auth, hmac-auth, jwt-auth, basic-auth, oidc, etc.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Core Advantages&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Production Grade&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Born from Alibaba's internal product with over 2 years of production validation, supporting large-scale scenarios with hundreds of thousands of requests per second.&lt;/p&gt; &lt;p&gt;Completely eliminates traffic jitter caused by Nginx reload, configuration changes take effect in milliseconds and are transparent to business. Especially friendly to long-connection scenarios such as AI businesses.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Streaming Processing&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Supports true complete streaming processing of request/response bodies, Wasm plugins can easily customize the handling of streaming protocols such as SSE (Server-Sent Events).&lt;/p&gt; &lt;p&gt;In high-bandwidth scenarios such as AI businesses, it can significantly reduce memory overhead.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Easy to Extend&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Provides a rich official plugin library covering AI, traffic management, security protection and other common functions, meeting more than 90% of business scenario requirements.&lt;/p&gt; &lt;p&gt;Focuses on Wasm plugin extensions, ensuring memory safety through sandbox isolation, supporting multiple programming languages, allowing plugin versions to be upgraded independently, and achieving traffic-lossless hot updates of gateway logic.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Secure and Easy to Use&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Based on Ingress API and Gateway API standards, provides out-of-the-box UI console, WAF protection plugin, IP/Cookie CC protection plugin ready to use.&lt;/p&gt; &lt;p&gt;Supports connecting to Let's Encrypt for automatic issuance and renewal of free certificates, and can be deployed outside of K8s, started with a single Docker command, convenient for individual developers to use.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join our Discord community! This is where you can connect with developers and other enthusiastic users of Higress.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/tSbww9VDaM"&gt;&lt;img src="https://img.shields.io/discord/1364956090566971515?color=5865F2&amp;amp;label=discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=for-the-badge" alt="discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Thanks&lt;/h3&gt; 
&lt;p&gt;Higress would not be possible without the valuable open-source work of projects in the community. We would like to extend a special thank you to Envoy and Istio.&lt;/p&gt; 
&lt;h3&gt;Related Repositories&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Higress Console: &lt;a href="https://github.com/higress-group/higress-console"&gt;https://github.com/higress-group/higress-console&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Higress Standalone: &lt;a href="https://github.com/higress-group/higress-standalone"&gt;https://github.com/higress-group/higress-standalone&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;a href="https://github.com/alibaba/higress/graphs/contributors"&gt; &lt;img alt="contributors" src="https://contrib.rocks/image?repo=alibaba/higress" /&gt; &lt;/a&gt; 
&lt;h3&gt;Star History&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#alibaba/higress&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=alibaba/higress&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align="right" style="font-size: 14px; color: #555; margin-top: 20px;"&gt; &lt;a href="https://raw.githubusercontent.com/alibaba/higress/main/#readme-top" style="text-decoration: none; color: #007bff; font-weight: bold;"&gt; ↑ Back to Top ↑ &lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>binwiederhier/ntfy</title>
      <link>https://github.com/binwiederhier/ntfy</link>
      <description>&lt;p&gt;Send push notifications to your phone or desktop using PUT/POST&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/binwiederhier/ntfy/main/web/public/static/images/ntfy.png" alt="ntfy" /&gt;&lt;/p&gt; 
&lt;h1&gt;ntfy.sh | Send push notifications to your phone or desktop via PUT/POST&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/binwiederhier/ntfy/releases/latest"&gt;&lt;img src="https://img.shields.io/github/release/binwiederhier/ntfy.svg?color=success&amp;amp;style=flat-square" alt="Release" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/heckel.io/ntfy/v2"&gt;&lt;img src="https://pkg.go.dev/badge/heckel.io/ntfy.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://github.com/binwiederhier/ntfy/actions"&gt;&lt;img src="https://github.com/binwiederhier/ntfy/workflows/test/badge.svg?sanitize=true" alt="Tests" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/binwiederhier/ntfy"&gt;&lt;img src="https://goreportcard.com/badge/github.com/binwiederhier/ntfy" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/binwiederhier/ntfy"&gt;&lt;img src="https://codecov.io/gh/binwiederhier/ntfy/branch/main/graph/badge.svg?token=A597KQ463G" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/cT7ECsZj9w"&gt;&lt;img src="https://img.shields.io/discord/874398661709295626?label=Discord" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://matrix.to/#/#ntfy:matrix.org"&gt;&lt;img src="https://img.shields.io/matrix/ntfy:matrix.org?label=Matrix" alt="Matrix" /&gt;&lt;/a&gt; &lt;a href="https://matrix.to/#/#ntfy-space:matrix.org"&gt;&lt;img src="https://img.shields.io/matrix/ntfy-space:matrix.org?label=Matrix+space" alt="Matrix space" /&gt;&lt;/a&gt; &lt;a href="https://ntfy.statuspage.io/"&gt;&lt;img src="https://healthchecks.io/badge/68b65976-b3b0-4102-aec9-980921/kcoEgrLY.svg?sanitize=true" alt="Healthcheck" /&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/binwiederhier/ntfy"&gt;&lt;img src="https://img.shields.io/badge/Contribute%20with-Gitpod-908a85?logo=gitpod" alt="Gitpod" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ntfy&lt;/strong&gt; (pronounced "&lt;em&gt;notify&lt;/em&gt;") is a simple HTTP-based &lt;a href="https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern"&gt;pub-sub&lt;/a&gt; notification service. With ntfy, you can &lt;strong&gt;send notifications to your phone or desktop via scripts&lt;/strong&gt; from any computer, &lt;strong&gt;without having to sign up or pay any fees&lt;/strong&gt;. If you'd like to run your own instance of the service, you can easily do so since ntfy is open source.&lt;/p&gt; 
&lt;p&gt;You can access the free version of ntfy at &lt;strong&gt;&lt;a href="https://ntfy.sh"&gt;ntfy.sh&lt;/a&gt;&lt;/strong&gt;. There is also an &lt;a href="https://github.com/binwiederhier/ntfy-android"&gt;open-source Android app&lt;/a&gt; available on &lt;a href="https://play.google.com/store/apps/details?id=io.heckel.ntfy"&gt;Google Play&lt;/a&gt; or &lt;a href="https://f-droid.org/en/packages/io.heckel.ntfy/"&gt;F-Droid&lt;/a&gt;, as well as an &lt;a href="https://github.com/binwiederhier/ntfy-ios"&gt;open source iOS app&lt;/a&gt; available on the &lt;a href="https://apps.apple.com/us/app/ntfy/id1625396347"&gt;App Store&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt; &lt;img src="https://raw.githubusercontent.com/binwiederhier/ntfy/main/.github/images/screenshot-curl.png" height="180" /&gt; &lt;img src="https://raw.githubusercontent.com/binwiederhier/ntfy/main/.github/images/screenshot-web-detail.png" height="180" /&gt; &lt;img src="https://raw.githubusercontent.com/binwiederhier/ntfy/main/.github/images/screenshot-phone-main.jpg" height="180" /&gt; &lt;img src="https://raw.githubusercontent.com/binwiederhier/ntfy/main/.github/images/screenshot-phone-detail.jpg" height="180" /&gt; &lt;img src="https://raw.githubusercontent.com/binwiederhier/ntfy/main/.github/images/screenshot-phone-notification.jpg" height="180" /&gt; &lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://ntfy.sh/app"&gt;ntfy Pro&lt;/a&gt; 💸 🎉&lt;/h2&gt; 
&lt;p&gt;I now offer paid plans for &lt;a href="https://ntfy.sh/"&gt;ntfy.sh&lt;/a&gt; if you don't want to self-host, or you want to support the development of ntfy (→ &lt;a href="https://ntfy.sh/app"&gt;Purchase via web app&lt;/a&gt;). You can &lt;strong&gt;buy a plan for as low as $5/month&lt;/strong&gt;. You can also donate via &lt;a href="https://github.com/sponsors/binwiederhier"&gt;GitHub Sponsors&lt;/a&gt;, and &lt;a href="https://liberapay.com/ntfy"&gt;Liberapay&lt;/a&gt;. I would be very humbled by your sponsorship. ❤️&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;a href="https://ntfy.sh/docs/"&gt;Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://ntfy.sh/docs/"&gt;Getting started&lt;/a&gt; | &lt;a href="https://ntfy.sh/docs/subscribe/phone/"&gt;Android/iOS&lt;/a&gt; | &lt;a href="https://ntfy.sh/docs/publish/"&gt;API&lt;/a&gt; | &lt;a href="https://ntfy.sh/docs/install/"&gt;Install / Self-hosting&lt;/a&gt; | &lt;a href="https://ntfy.sh/docs/develop/"&gt;Building&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Chat/forum&lt;/h2&gt; 
&lt;p&gt;There are a few ways to get in touch with me and/or the rest of the community. Feel free to use any of these methods. Whatever works best for you:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/cT7ECsZj9w"&gt;Discord server&lt;/a&gt; - direct chat with the community&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://matrix.to/#/#ntfy:matrix.org"&gt;Matrix room #ntfy&lt;/a&gt; (+ &lt;a href="https://matrix.to/#/#ntfy-space:matrix.org"&gt;Matrix space&lt;/a&gt;) - same chat, bridged from Discord&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/binwiederhier/ntfy/issues"&gt;GitHub issues&lt;/a&gt; - questions, features, bugs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Announcements/beta testers&lt;/h2&gt; 
&lt;p&gt;For announcements of new releases and cutting-edge beta versions, please subscribe to the &lt;a href="https://ntfy.sh/announcements"&gt;ntfy.sh/announcements&lt;/a&gt; topic. If you'd like to test the iOS app, join &lt;a href="https://testflight.apple.com/join/P1fFnAm9"&gt;TestFlight&lt;/a&gt;. For Android betas, join Discord/Matrix (I'll eventually make a testing channel in Google Play).&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;If you'd like to support the ntfy maintainers, please consider donating to &lt;a href="https://github.com/sponsors/binwiederhier"&gt;GitHub Sponsors&lt;/a&gt; or and &lt;a href="https://liberapay.com/ntfy"&gt;Liberapay&lt;/a&gt;. We would be humbled if you helped carry the server and developer account costs. Even small donations are very much appreciated.&lt;/p&gt; 
&lt;p&gt;Thank you to our commercial sponsors, who help keep the service running and the development going:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://m.do.co/c/442b929528db"&gt;&lt;img src="https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/SVG/DO_Logo_horizontal_blue.svg?sanitize=true" width="201px" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.magicbell.com/?utm_source=ntfy"&gt;&lt;img src="https://raw.githubusercontent.com/binwiederhier/ntfy/main/assets/sponsors/magicbell.png" width="180px" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;And a big fat &lt;strong&gt;Thank You&lt;/strong&gt; to the individuals who have sponsored ntfy in the past, or are still sponsoring ntfy:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/neutralinsomniac"&gt;&lt;img src="https://github.com/neutralinsomniac.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aspyct"&gt;&lt;img src="https://github.com/aspyct.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nickexyz"&gt;&lt;img src="https://github.com/nickexyz.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qcasey"&gt;&lt;img src="https://github.com/qcasey.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mckay115"&gt;&lt;img src="https://github.com/mckay115.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Salamafet"&gt;&lt;img src="https://github.com/Salamafet.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/codinghipster"&gt;&lt;img src="https://github.com/codinghipster.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/HinFort"&gt;&lt;img src="https://github.com/HinFort.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Lexevolution"&gt;&lt;img src="https://github.com/Lexevolution.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/johnnyip"&gt;&lt;img src="https://github.com/johnnyip.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/JonDerThan"&gt;&lt;img src="https://github.com/JonDerThan.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/12nick12"&gt;&lt;img src="https://github.com/12nick12.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eanplatter"&gt;&lt;img src="https://github.com/eanplatter.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/fnoelscher"&gt;&lt;img src="https://github.com/fnoelscher.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bnorick"&gt;&lt;img src="https://github.com/bnorick.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/snh"&gt;&lt;img src="https://github.com/snh.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/hen-x"&gt;&lt;img src="https://github.com/hen-x.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/JamieGoodson"&gt;&lt;img src="https://github.com/JamieGoodson.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cremesk"&gt;&lt;img src="https://github.com/cremesk.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dangowans"&gt;&lt;img src="https://github.com/dangowans.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mnault"&gt;&lt;img src="https://github.com/mnault.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nwithan8"&gt;&lt;img src="https://github.com/nwithan8.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/peterleiser"&gt;&lt;img src="https://github.com/peterleiser.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/portothree"&gt;&lt;img src="https://github.com/portothree.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/finngreig"&gt;&lt;img src="https://github.com/finngreig.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/skrollme"&gt;&lt;img src="https://github.com/skrollme.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gergepalfi"&gt;&lt;img src="https://github.com/gergepalfi.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tonyakwei"&gt;&lt;img src="https://github.com/tonyakwei.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/crosbyh"&gt;&lt;img src="https://github.com/crosbyh.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mdlnr"&gt;&lt;img src="https://github.com/mdlnr.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/p-samuel"&gt;&lt;img src="https://github.com/p-samuel.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zugaldia"&gt;&lt;img src="https://github.com/zugaldia.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/NathanSweet"&gt;&lt;img src="https://github.com/NathanSweet.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/msdeibel"&gt;&lt;img src="https://github.com/msdeibel.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ksurl"&gt;&lt;img src="https://github.com/ksurl.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/CodingTimeDEV"&gt;&lt;img src="https://github.com/CodingTimeDEV.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Terrormixer3000"&gt;&lt;img src="https://github.com/Terrormixer3000.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/voroskoi"&gt;&lt;img src="https://github.com/voroskoi.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Nickwasused"&gt;&lt;img src="https://github.com/Nickwasused.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bahur142"&gt;&lt;img src="https://github.com/bahur142.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vinhdizzo"&gt;&lt;img src="https://github.com/vinhdizzo.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Ge0rg3"&gt;&lt;img src="https://github.com/Ge0rg3.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/biopsin"&gt;&lt;img src="https://github.com/biopsin.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/thebino"&gt;&lt;img src="https://github.com/thebino.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sky4055"&gt;&lt;img src="https://github.com/sky4055.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/julianlam"&gt;&lt;img src="https://github.com/julianlam.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/andreapx"&gt;&lt;img src="https://github.com/andreapx.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/billycao"&gt;&lt;img src="https://github.com/billycao.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zoic21"&gt;&lt;img src="https://github.com/zoic21.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/IanKulin"&gt;&lt;img src="https://github.com/IanKulin.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Joachim256"&gt;&lt;img src="https://github.com/Joachim256.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/overtone1000"&gt;&lt;img src="https://github.com/overtone1000.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/oakd"&gt;&lt;img src="https://github.com/oakd.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/KucharczykL"&gt;&lt;img src="https://github.com/KucharczykL.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/hansbickhofe"&gt;&lt;img src="https://github.com/hansbickhofe.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/caseodilla"&gt;&lt;img src="https://github.com/caseodilla.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/0xAF"&gt;&lt;img src="https://github.com/0xAF.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/soonoo"&gt;&lt;img src="https://github.com/soonoo.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nichu42"&gt;&lt;img src="https://github.com/nichu42.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/samliebow"&gt;&lt;img src="https://github.com/samliebow.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/johman10"&gt;&lt;img src="https://github.com/johman10.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/R-Gld"&gt;&lt;img src="https://github.com/R-Gld.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/FingerlessGlov3s"&gt;&lt;img src="https://github.com/FingerlessGlov3s.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Twisterado"&gt;&lt;img src="https://github.com/Twisterado.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ScrumpyJack"&gt;&lt;img src="https://github.com/ScrumpyJack.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/andrejarrell"&gt;&lt;img src="https://github.com/andrejarrell.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/oaustegard"&gt;&lt;img src="https://github.com/oaustegard.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/CreativeWarlock"&gt;&lt;img src="https://github.com/CreativeWarlock.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/darkdragon-001"&gt;&lt;img src="https://github.com/darkdragon-001.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jonathan-kosgei"&gt;&lt;img src="https://github.com/jonathan-kosgei.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/KevinWang15"&gt;&lt;img src="https://github.com/KevinWang15.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/darkmattercoder"&gt;&lt;img src="https://github.com/darkmattercoder.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bmcgonag"&gt;&lt;img src="https://github.com/bmcgonag.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/skorokithakis"&gt;&lt;img src="https://github.com/skorokithakis.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eenturk"&gt;&lt;img src="https://github.com/eenturk.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/spirossi"&gt;&lt;img src="https://github.com/spirossi.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/teomarcdhio"&gt;&lt;img src="https://github.com/teomarcdhio.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/MarcMichalsky"&gt;&lt;img src="https://github.com/MarcMichalsky.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/LuckVintage"&gt;&lt;img src="https://github.com/LuckVintage.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/spartan"&gt;&lt;img src="https://github.com/spartan.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/alexandzors"&gt;&lt;img src="https://github.com/alexandzors.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dkramer95"&gt;&lt;img src="https://github.com/dkramer95.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/YezGotIt"&gt;&lt;img src="https://github.com/YezGotIt.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/thomasskou"&gt;&lt;img src="https://github.com/thomasskou.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/surfernv"&gt;&lt;img src="https://github.com/surfernv.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/richardleach"&gt;&lt;img src="https://github.com/richardleach.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bear"&gt;&lt;img src="https://github.com/bear.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cminter"&gt;&lt;img src="https://github.com/cminter.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bahur142"&gt;&lt;img src="https://github.com/bahur142.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/pgwiebes"&gt;&lt;img src="https://github.com/pgwiebes.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ralhei"&gt;&lt;img src="https://github.com/ralhei.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TechMDW"&gt;&lt;img src="https://github.com/TechMDW.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ubipo"&gt;&lt;img src="https://github.com/ubipo.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tka85"&gt;&lt;img src="https://github.com/tka85.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/beekeeb"&gt;&lt;img src="https://github.com/beekeeb.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Emiliaaah"&gt;&lt;img src="https://github.com/Emiliaaah.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zark0s"&gt;&lt;img src="https://github.com/zark0s.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tomershvueli"&gt;&lt;img src="https://github.com/tomershvueli.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/CataIana"&gt;&lt;img src="https://github.com/CataIana.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ajay-actuary"&gt;&lt;img src="https://github.com/ajay-actuary.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mursec"&gt;&lt;img src="https://github.com/mursec.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/FrameXX"&gt;&lt;img src="https://github.com/FrameXX.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vovayartsev"&gt;&lt;img src="https://github.com/vovayartsev.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dwain-lab"&gt;&lt;img src="https://github.com/dwain-lab.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/brookmg"&gt;&lt;img src="https://github.com/brookmg.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/siebej"&gt;&lt;img src="https://github.com/siebej.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/rxsantos"&gt;&lt;img src="https://github.com/rxsantos.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/hermannx5"&gt;&lt;img src="https://github.com/hermannx5.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/rwxd"&gt;&lt;img src="https://github.com/rwxd.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Integral-Tech"&gt;&lt;img src="https://github.com/Integral-Tech.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TheTomik1"&gt;&lt;img src="https://github.com/TheTomik1.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dav23r"&gt;&lt;img src="https://github.com/dav23r.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/stannynuytkens"&gt;&lt;img src="https://github.com/stannynuytkens.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/danbartram"&gt;&lt;img src="https://github.com/danbartram.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/arthurgleckler"&gt;&lt;img src="https://github.com/arthurgleckler.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tomroth04"&gt;&lt;img src="https://github.com/tomroth04.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Circenn5130"&gt;&lt;img src="https://github.com/Circenn5130.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jceloria"&gt;&lt;img src="https://github.com/jceloria.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/afunworm"&gt;&lt;img src="https://github.com/afunworm.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/PTR-inc"&gt;&lt;img src="https://github.com/PTR-inc.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/spudooli"&gt;&lt;img src="https://github.com/spudooli.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/IMarkoMC"&gt;&lt;img src="https://github.com/IMarkoMC.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/rubund"&gt;&lt;img src="https://github.com/rubund.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Riolku"&gt;&lt;img src="https://github.com/Riolku.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/arnbrhm"&gt;&lt;img src="https://github.com/arnbrhm.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/herzkerl"&gt;&lt;img src="https://github.com/herzkerl.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/0x45796164"&gt;&lt;img src="https://github.com/0x45796164.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/madchr1st"&gt;&lt;img src="https://github.com/madchr1st.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/avalentic"&gt;&lt;img src="https://github.com/avalentic.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TheCraiggers"&gt;&lt;img src="https://github.com/TheCraiggers.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sheetd"&gt;&lt;img src="https://github.com/sheetd.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dlt-green"&gt;&lt;img src="https://github.com/dlt-green.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/suhlig"&gt;&lt;img src="https://github.com/suhlig.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Proximus888"&gt;&lt;img src="https://github.com/Proximus888.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/wielandp"&gt;&lt;img src="https://github.com/wielandp.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/chxseh"&gt;&lt;img src="https://github.com/chxseh.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/user8446"&gt;&lt;img src="https://github.com/user8446.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cdf-eagles"&gt;&lt;img src="https://github.com/cdf-eagles.png" width="40px" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;I welcome any contributions. Just create a PR or an issue. For larger features/ideas, please reach out on Discord/Matrix first to see if I'd accept them. To contribute code, check out the &lt;a href="https://ntfy.sh/docs/develop/"&gt;build instructions&lt;/a&gt; for the server and the Android app. Or, if you'd like to help translate 🇩🇪 🇺🇸 🇧🇬, you can start immediately in &lt;a href="https://hosted.weblate.org/projects/ntfy/"&gt;Hosted Weblate&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://hosted.weblate.org/engage/ntfy/"&gt; &lt;img src="https://hosted.weblate.org/widgets/ntfy/-/multi-blue.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Please be sure to read the complete &lt;a href="https://raw.githubusercontent.com/binwiederhier/ntfy/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Made with ❤️ by &lt;a href="https://heckel.io"&gt;Philipp C. Heckel&lt;/a&gt;.&lt;br /&gt; The project is dual licensed under the &lt;a href="https://raw.githubusercontent.com/binwiederhier/ntfy/main/LICENSE"&gt;Apache License 2.0&lt;/a&gt; and the &lt;a href="https://raw.githubusercontent.com/binwiederhier/ntfy/main/LICENSE.GPLv2"&gt;GPLv2 License&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Third-party libraries and resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/urfave/cli"&gt;github.com/urfave/cli&lt;/a&gt; (MIT) is used to drive the CLI&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mixkit.co/free-sound-effects/notification/"&gt;Mixkit sounds&lt;/a&gt; (Mixkit Free License) are used as notification sounds&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://notificationsounds.com"&gt;Sounds from notificationsounds.com&lt;/a&gt; (Creative Commons Attribution) are used as notification sounds&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Roboto"&gt;Roboto Font&lt;/a&gt; (Apache 2.0) is used as a font in everything web&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; (MIT) is used for the web app&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mui.com/"&gt;Material UI components&lt;/a&gt; (MIT) are used in the web app&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mui/material-ui/tree/master/docs/data/material/getting-started/templates/dashboard"&gt;MUI dashboard template&lt;/a&gt; (MIT) was used as a basis for the web app&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dexie/Dexie.js"&gt;Dexie.js&lt;/a&gt; (Apache 2.0) is used for web app persistence in IndexedDB&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goreleaser.com/"&gt;GoReleaser&lt;/a&gt; (MIT) is used to create releases&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emersion/go-smtp"&gt;go-smtp&lt;/a&gt; (MIT) is used to receive e-mails&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stretchr/testify"&gt;stretchr/testify&lt;/a&gt; (MIT) is used for unit and integration tests&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/go-sqlite3"&gt;github.com/mattn/go-sqlite3&lt;/a&gt; (MIT) is used to provide the persistent message cache&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/firebase/firebase-admin-go"&gt;Firebase Admin SDK&lt;/a&gt; (Apache 2.0) is used to send FCM messages&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/github/gemoji"&gt;github/gemoji&lt;/a&gt; (MIT) is used for emoji support (specifically the &lt;a href="https://raw.githubusercontent.com/github/gemoji/master/db/emoji.json"&gt;emoji.json&lt;/a&gt; file)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yossiabramov.com/blog/vanilla-js-lightbox"&gt;Lightbox with vanilla JS&lt;/a&gt; as a lightbox on the landing page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/CJEnright/bc2d8b8dc0c1389a9feeddb110f822d7"&gt;HTTP middleware for gzip compression&lt;/a&gt; (MIT) is used for serving static files&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bryanwoods/autolink-js"&gt;Regex for auto-linking&lt;/a&gt; (MIT) is used to highlight links (the library is not used)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.arp242.net/static-go.html"&gt;Statically linking go-sqlite3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://facelessuser.github.io/pymdown-extensions/extensions/tabbed/#linked-tabs"&gt;Linked tabs in mkdocs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SherClockHolmes/webpush-go"&gt;webpush-go&lt;/a&gt; (MIT) is used to send web push notifications&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Masterminds/sprig"&gt;Sprig&lt;/a&gt; (MIT) is used to add template parsing functions&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>NexaAI/nexa-sdk</title>
      <link>https://github.com/NexaAI/nexa-sdk</link>
      <description>&lt;p&gt;Run the latest LLMs and VLMs across GPU, NPU, and CPU with PC (Python/C++) &amp; mobile (Android &amp; iOS) support, running quickly with OpenAI gpt-oss, Granite4, Qwen3VL, Gemma 3n and more.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt; &lt;img width="100%" src="https://raw.githubusercontent.com/NexaAI/nexa-sdk/main/assets/banner.png" alt="Nexa AI Banner" /&gt; &lt;/p&gt; 
 &lt;p align="center"&gt; &lt;a href="https://docs.nexa.ai"&gt; &lt;img src="https://img.shields.io/badge/docs-website-brightgreen?logo=readthedocs" alt="Documentation" /&gt; &lt;/a&gt; &lt;a href="https://x.com/nexa_ai"&gt;&lt;img alt="X account" src="https://img.shields.io/twitter/url/https/twitter.com/diffuserslib.svg?style=social&amp;amp;label=Follow%20%40Nexa_AI" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/nexa-ai"&gt; &lt;img src="https://img.shields.io/discord/1192186167391682711?color=5865F2&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="Join us on Discord" /&gt; &lt;/a&gt; &lt;a href="https://join.slack.com/t/nexa-ai-community/shared_invite/zt-3837k9xpe-LEty0disTTUnTUQ4O3uuNw"&gt; &lt;img src="https://img.shields.io/badge/slack-join%20chat-4A154B?logo=slack&amp;amp;logoColor=white" alt="Join us on Slack" /&gt; &lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://img.shields.io/badge/os-linux%20%7C%20macOS%20%7C%20windows-purple" alt="OS" /&gt; &lt;img src="https://img.shields.io/badge/hardware-CPU%20%7C%20GPU%20%7C%20NPU-yellow" alt="Hardware" /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h1&gt;Nexa SDK&lt;/h1&gt; 
&lt;p&gt;Nexa SDK is an on-device inference framework that runs any model on any device, across any backend. It runs on CPUs, GPUs, NPUs with backend support for CUDA, Metal, Vulkan, and Qualcomm / Intel / AMD NPU. It handles multiple input modalities including text 📝, image 🖼️, and audio 🎧. The SDK includes an OpenAI-compatible API server with support for JSON schema-based function calling and streaming. It supports model formats such as GGUF, MLX, Nexa AI's own &lt;code&gt;.nexa&lt;/code&gt; format, enabling efficient quantized inference across diverse platforms.&lt;/p&gt; 
&lt;h2&gt;Qualcomm NPU PC Demos&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="50%"&gt; &lt;img width="100%" src="https://raw.githubusercontent.com/NexaAI/nexa-sdk/main/assets/PC_demo_2_image.gif" alt="Multi-Image Reasoning Demo" /&gt; &lt;p align="center"&gt;&lt;b&gt;🖼️ Multi-Image Reasoning&lt;/b&gt;&lt;br /&gt;Spot the difference across two images in multi-round dialogue.&lt;/p&gt; &lt;/td&gt; 
   &lt;td width="50%"&gt; &lt;img width="100%" src="https://raw.githubusercontent.com/NexaAI/nexa-sdk/main/assets/PC_Demo_Agent.gif" alt="Image + Audio Function Call Demo" /&gt; &lt;p align="center"&gt;&lt;b&gt;🎤 Image + Text → Function Call&lt;/b&gt;&lt;br /&gt;Snap a poster, add a voice note, and AI agent creates a calendar event.&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="2" align="center"&gt; &lt;img width="50%" src="https://raw.githubusercontent.com/NexaAI/nexa-sdk/main/assets/PC_Demo_Audio.gif" alt="Multi-Audio Comparison Demo" /&gt; &lt;p align="center"&gt;&lt;b&gt;🎶 Multi-Audio Comparison&lt;/b&gt;&lt;br /&gt;Tell the difference between two music clips locally.&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Recent updates&lt;/h2&gt; 
&lt;h4&gt;📣 &lt;strong&gt;2025.10.14: Day-0 Support : Qwen3-VL-4B-Instruct, Qwen3-VL-4B-Thinking, Qwen3-VL-8B-Instruct, Qwen3-VL-8B-Thinking&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;We support &lt;a href="https://huggingface.co/collections/NexaAI/qwen3vl-68d46de18fdc753a7295190a"&gt;Qwen3-VL-4B series models&lt;/a&gt; with Nexa SDK on Day-0!&lt;/li&gt; 
 &lt;li&gt;We support Qualcomm NPU/GPU/CPU, Apple GPU/CPU, Intel/AMD/MediaTek/Nvidia GPU/CPUs and more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📣 &lt;strong&gt;2025.10.04: Day-0 Support : Qwen3-VL-30B-A3B-Instruct&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;We support &lt;a href="https://huggingface.co/NexaAI/qwen3vl-30B-A3B-mlx"&gt;Qwen3-VL-30B-A3B-Instruct&lt;/a&gt; with Nexa SDK on Day-0!&lt;/li&gt; 
 &lt;li&gt;Try it on Apple GPU with &lt;code&gt;nexa infer NexaAI/qwen3vl-30B-A3B-mlx&lt;/code&gt; on MLX backend.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📣 &lt;strong&gt;2025.10.02: Day-0 Support on NPU/GPU/CPU : IBM Granite 4.0&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;We support &lt;a href="https://sdk.nexa.ai/model/Granite-4-Micro"&gt;IBM Granite 4.0&lt;/a&gt; with Nexa SDK on Day-0!&lt;/li&gt; 
 &lt;li&gt;Try it on AMD / Intel / Qualcomm / Apple GPU with &lt;code&gt;nexa infer NexaAI/granite-4.0-micro-GGUF&lt;/code&gt; and on Qualcomm NPU with &lt;code&gt;nexa infer NexaAI/Granite-4-Micro-NPU&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📣 &lt;strong&gt;2025.10.01: AMD NPU Support&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Image Generation with &lt;a href="https://huggingface.co/NexaAI/sdxl-turbo-amd-npu"&gt;SDXL&lt;/a&gt; on AMD NPU&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📣 &lt;strong&gt;2025.09.23: Intel NPU Support&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;LLM inference with &lt;a href="https://sdk.nexa.ai/model/DeepSeek-R1-Distill-Qwen-1.5B-Intel-NPU"&gt;DeepSeek-r1-distill-Qwen-1.5B&lt;/a&gt; and &lt;a href="https://sdk.nexa.ai/model/Llama3.2-3B-Intel-NPU"&gt;Llama3.2-3B&lt;/a&gt; on Intel NPU&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📣 &lt;strong&gt;2025.09.22: Apple Neural Engine (ANE) Support&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Real-time speech recognition with &lt;a href="https://sdk.nexa.ai/model/parakeet-v3-ane"&gt;Parakeet v3 model&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📣 &lt;strong&gt;2025.09.15: New Models Support&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;First-ever &lt;a href="https://sdk.nexa.ai/model/Gemma3n-E4B"&gt;Gemma-3n&lt;/a&gt; &lt;strong&gt;multimodal&lt;/strong&gt; inference for GPU &amp;amp; CPU, in GGUF format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sdk.nexa.ai/model/Prefect-illustrious-XL-v2.0p"&gt;SDXL image generation&lt;/a&gt; from Civitai for GPU&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sdk.nexa.ai/model/embeddinggemma-300m-npu"&gt;EmbeddingGemma&lt;/a&gt; for Qualcomm NPU&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sdk.nexa.ai/model/phi4-mini-npu-turbo"&gt;Phi4-mini turbo&lt;/a&gt; and &lt;a href="https://sdk.nexa.ai/model/phi3.5-mini-npu"&gt;Phi3.5-mini&lt;/a&gt; for Qualcomm NPU&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sdk.nexa.ai/model/parakeet-v3-npu"&gt;Parakeet V3 model&lt;/a&gt; for Qualcomm NPU&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📣 &lt;strong&gt;2025.09.05: Turbo Engine &amp;amp; Unified Interface&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nexa.ai/blogs/nexaml-turbo"&gt;Nexa ML Turbo engine&lt;/a&gt; for optimized NPU performance 
  &lt;ul&gt; 
   &lt;li&gt;Try &lt;a href="https://sdk.nexa.ai/model/phi4-mini-npu-turbo"&gt;Phi4-mini turbo&lt;/a&gt; and &lt;a href="https://sdk.nexa.ai/model/Llama3.2-3B-NPU-Turbo"&gt;Llama3.2-3B-NPU-Turbo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;80% faster at shorter contexts (&amp;lt;=2048), 33% faster at longer contexts (&amp;gt;2048) than current NPU solutions&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nexa.ai/blogs/sdk-unifiedarchitecture"&gt;Unified interface&lt;/a&gt; supporting NPU/GPU/CPU backends: 
  &lt;ul&gt; 
   &lt;li&gt;Single installer architecture eliminating dependency conflicts&lt;/li&gt; 
   &lt;li&gt;Lazy loading and plugin isolation for improved performance&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📣 &lt;strong&gt;2025.08.20: Qualcomm NPU Support with NexaML Turbo Engine&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;OmniNeural-4B: the &lt;strong&gt;first multimodal AI model built natively for NPUs&lt;/strong&gt; — handling text, images, and audio in one model&lt;/li&gt; 
 &lt;li&gt;Check the model and demos at &lt;a href="https://huggingface.co/NexaAI/OmniNeural-4B"&gt;Hugging Face repo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Check our &lt;a href="https://nexa.ai/blogs/omnineural-4b"&gt;OmniNeural-4B technical blog&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📣 &lt;strong&gt;2025.08.12: ASR &amp;amp; TTS Support in MLX format&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Parakeet and Kokoro models support in MLX format.&lt;/li&gt; 
 &lt;li&gt;new &lt;code&gt;/mic&lt;/code&gt; mode to transcribe live speech directly in your terminal.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://public-storage.nexa4ai.com/nexa_sdk/downloads/nexa-cli_macos_arm64.pkg"&gt;arm64 with Apple Neural Engine support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://public-storage.nexa4ai.com/nexa_sdk/downloads/nexa-cli_macos_x86_64.pkg"&gt;x86_64&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://public-storage.nexa4ai.com/nexa_sdk/downloads/nexa-cli_windows_arm64.exe"&gt;arm64 with Qualcomm NPU support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://public-storage.nexa4ai.com/nexa_sdk/downloads/nexa-cli_windows_x86_64.exe"&gt;x86_64 with Intel / AMD NPU support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsSL https://github.com/NexaAI/nexa-sdk/releases/latest/download/nexa-cli_linux_x86_64.sh -o install.sh &amp;amp;&amp;amp; chmod +x install.sh &amp;amp;&amp;amp; ./install.sh &amp;amp;&amp;amp; rm install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Supported Models&lt;/h2&gt; 
&lt;p&gt;You can run any compatible GGUF, MLX, or nexa model from 🤗 Hugging Face by using the &lt;code&gt;&amp;lt;full repo name&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Qualcomm NPU models&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] You need to download the &lt;a href="https://public-storage.nexa4ai.com/nexa_sdk/downloads/nexa-cli_windows_arm64.exe"&gt;arm64 with Qualcomm NPU support&lt;/a&gt; and make sure you have Snapdragon® X Elite chip on your laptop.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Quick Start (Windows arm64, Snapdragon X Elite)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Login &amp;amp; Get Access Token (required for Pro Models)&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create an account at &lt;a href="https://sdk.nexa.ai"&gt;sdk.nexa.ai&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Go to &lt;strong&gt;Deployment → Create Token&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;Run this once in your terminal (replace with your token): &lt;pre&gt;&lt;code class="language-bash"&gt;nexa config set license '&amp;lt;your_token_here&amp;gt;'
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run and chat with our multimodal model, OmniNeural-4B, or other models on NPU&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nexa infer omni-neural
nexa infer NexaAI/OmniNeural-4B
nexa infer NexaAI/qwen3-1.7B-npu
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;GGUF models&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] GGUF runs on macOS, Linux, and Windows.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;📝 Run and chat with LLMs, e.g. Qwen3:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nexa infer ggml-org/Qwen3-1.7B-GGUF
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🖼️ Run and chat with Multimodal models, e.g. Qwen2.5-Omni:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nexa infer NexaAI/Qwen2.5-Omni-3B-GGUF
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MLX models&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] MLX is macOS-only (Apple Silicon). Many MLX models in the Hugging Face mlx-community organization have quality issues and may not run reliably. We recommend starting with models from our curated &lt;a href="https://huggingface.co/NexaAI/collections"&gt;NexaAI Collection&lt;/a&gt; for best results. For example&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;📝 Run and chat with LLMs, e.g. Qwen3:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nexa infer NexaAI/Qwen3-4B-4bit-MLX
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🖼️ Run and chat with Multimodal models, e.g. Gemma3n:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nexa infer NexaAI/gemma-3n-E4B-it-4bit-MLX
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;CLI Reference&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Essential Command&lt;/th&gt; 
   &lt;th&gt;What it does&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa -h&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;show all CLI commands&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa pull &amp;lt;repo&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Interactive download &amp;amp; cache of a model&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa infer &amp;lt;repo&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Local inference&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa list&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Show all cached models with sizes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa remove &amp;lt;repo&amp;gt;&lt;/code&gt; / &lt;code&gt;nexa clean&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Delete one / all cached models&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa serve --host 127.0.0.1:8080&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Launch OpenAI‑compatible REST server&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa run &amp;lt;repo&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Chat with a model via an existing server&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;👉 To interact with multimodal models, you can drag photos or audio clips directly into the CLI — you can even drop multiple images at once!&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://nexaai.mintlify.app/nexa-sdk-go/NexaCLI"&gt;CLI Reference&lt;/a&gt; for full commands.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;We would like to thank the following projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggml-org/llama.cpp"&gt;llama.cpp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ml-explore/mlx-lm"&gt;mlx-lm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Blaizzy/mlx-vlm"&gt;mlx-vlm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Blaizzy/mlx-audio"&gt;mlx-audio&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>volcano-sh/volcano</title>
      <link>https://github.com/volcano-sh/volcano</link>
      <description>&lt;p&gt;A Cloud Native Batch System (Project under CNCF)&lt;/p&gt;&lt;hr&gt;&lt;a href="https://volcano.sh/"&gt; &lt;img src="https://raw.githubusercontent.com/volcano-sh/volcano/master/docs/images/volcano-horizontal-color.png" /&gt; &lt;/a&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://travis-ci.org/volcano-sh/volcano"&gt;&lt;img src="https://travis-ci.org/volcano-sh/volcano.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/volcano-sh/volcano"&gt;&lt;img src="https://goreportcard.com/badge/github.com/volcano-sh/volcano" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/volcano-sh/volcano"&gt;&lt;img src="https://img.shields.io/github/repo-size/volcano-sh/volcano.svg?sanitize=true" alt="RepoSize" /&gt;&lt;/a&gt; &lt;a href="https://github.com/volcano-sh/volcano/releases"&gt;&lt;img src="https://img.shields.io/github/release/volcano-sh/volcano.svg?sanitize=true" alt="Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/volcano-sh/volcano/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/volcano-sh/volcano.svg?sanitize=true" alt="LICENSE" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/3012"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/3012/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/volcano-sh/volcano"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/volcano-sh/volcano/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://gurubase.io/g/volcano"&gt;&lt;img src="https://img.shields.io/badge/Gurubase-Ask%20Volcano%20Guru-006BFF" alt="Gurubase" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://volcano.sh/"&gt;Volcano&lt;/a&gt; is a Kubernetes-native batch scheduling system, extending and enhancing the capabilities of the standard kube-scheduler. It provides a comprehensive set of features specifically designed to manage and optimize various batch and elastic workloads, including Artificial Intelligence (AI) / machine learning (ML) / deep learning (DL), bioinformatics / genomics, and other "Big Data" applications.&lt;/p&gt; 
&lt;p&gt;These workloads commonly leverage AI, Big Data, and HPC frameworks such as Spark, Flink, Ray, TensorFlow, PyTorch, Argo, MindSpore, PaddlePaddle, Kubeflow, MPI, Horovod, MXNet, KubeGene, and others, with which Volcano offers robust integration.&lt;/p&gt; 
&lt;p&gt;Volcano incorporates over fifteen years of collective experience in operating diverse high-performance workloads at scale across multiple systems and platforms. It combines proven best practices and innovative concepts from the open-source community to deliver a powerful and flexible scheduling solution.&lt;/p&gt; 
&lt;p&gt;As of 2025, Volcano has seen widespread adoption across numerous industries globally, including Internet/Cloud, Finance, Manufacturing, and Medical sectors. Many organizations and institutions are not only end-users but also active contributors to the project. Hundreds of contributors actively participate in code commits, pull request reviews, issue discussions, documentation updates, and design proposals. We encourage your participation in the ongoing development and growth of the Volcano project.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] the scheduler is built based on &lt;a href="https://github.com/kubernetes-sigs/kube-batch"&gt;kube-batch&lt;/a&gt;; refer to &lt;a href="https://github.com/volcano-sh/volcano/issues/241"&gt;#241&lt;/a&gt; and &lt;a href="https://github.com/volcano-sh/volcano/pull/288"&gt;#288&lt;/a&gt; for more detail.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/volcano-sh/volcano/master/docs/images/cncf-logo.png" alt="cncf_logo" /&gt;&lt;/p&gt; 
&lt;p&gt;Volcano is an incubating project of the &lt;a href="https://cncf.io/"&gt;Cloud Native Computing Foundation&lt;/a&gt; (CNCF). Please consider joining the CNCF if you are an organization that wants to take an active role in supporting the growth and evolution of the cloud native ecosystem.&lt;/p&gt; 
&lt;h2&gt;Overall Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/volcano-sh/volcano/master/docs/images/volcano-architecture.png" alt="volcano" /&gt;&lt;/p&gt; 
&lt;h2&gt;Talks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://sched.co/MPi7"&gt;Intro: Kubernetes Batch Scheduling @ KubeCon 2019 EU&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://archsummit.infoq.cn/2019/shenzhen/presentation/1817"&gt;Volcano 在 Kubernetes 中运行高性能作业实践 @ ArchSummit 2019&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://e.huawei.com/cn/material/event/HC/09099dce0070415e9f26ada51b2216d7"&gt;Volcano：基于云原生的高密计算解决方案 @ Huawei Connection 2019&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sched.co/UaZi"&gt;Improving Performance of Deep Learning Workloads With Volcano @ KubeCon 2019 NA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sched.co/Uajv"&gt;Batch Capability of Kubernetes Intro @ KubeCon 2019 NA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cDPGmhVcj7Y&amp;amp;t=143s"&gt;Optimizing Knowledge Distillation Training With Volcano @ KubeCon 2021 EU&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=daqkUlT5ReY"&gt;Exploration About Mixing Technology of Online Services and Offline Jobs Based On Volcano @ KubeCon 2021 China&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=wjy35HfIP_k"&gt;Volcano - Cloud Native Batch System for AI, Big Data and HPC @ KubeCon 2022 EU&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ujHDV5xteqU"&gt;How to Leverage Volcano to Improve the Resource Utilization of AI Pharmaceuticals, Autonomous Driving, and Smart Buildings @ KubeCon 2023 EU&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=OO7zpyf7fgs"&gt;Run Your AI Workloads and Microservices on Kubernetes More Easily and Efficiently @ KubeCon 2023 China&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=77Qn1-I-muQ"&gt;Optimize LLM Workflows with Smart Infrastructure Enhanced by Volcano @ KubeCon 2024 China&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=IzR7zJQ8vMw"&gt;How Volcano Enable Next Wave of Intelligent Applications @ KubeCon 2024 China&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=IB54LHQQ8lI"&gt;Leverage Topology Modeling and Topology-Aware Scheduling to Accelerate LLM Training @ KubeCon 2024 China&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.kubeflow.org/docs/components/spark-operator/user-guide/volcano-integration/"&gt;Spark Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://spark.apache.org/docs/3.5.0/running-on-kubernetes.html#using-volcano-as-customized-scheduler-for-spark-on-kubernetes"&gt;Native Spark&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GoogleCloudPlatform/flink-on-k8s-operator/raw/master/docs/volcano_integration.md"&gt;Flink&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.ray.io/en/master/cluster/kubernetes/k8s-ecosystem/volcano.html"&gt;KubeRay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/volcano-sh/volcano/raw/master/docs/user-guide/how_to_use_pytorch_plugin.md"&gt;PyTorch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/volcano-sh/volcano/tree/master/example/integrations/tensorflow"&gt;TensorFlow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.kubeflow.org/docs/components/training/user-guides/job-scheduling/"&gt;kubeflow/training-operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubeflow/arena/raw/master/docs/training/volcanojob/volcanojob.md"&gt;kubeflow/arena&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/volcano-sh/volcano/tree/master/example/integrations/mpi"&gt;MPI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/volcano-sh/volcano/raw/master/example/kubecon-2019-china/horovod-sample/lm-horovod-tf-mnist-v0.5.yaml"&gt;Horovod&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/volcano-sh/volcano/tree/master/example/integrations/paddlepaddle"&gt;PaddlePaddle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/broadinstitute/cromwell/raw/develop/docs/backends/Volcano.md"&gt;Cromwell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/volcano-sh/volcano/tree/master/example/MindSpore-example"&gt;MindSpore&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/volcano-sh/volcano/tree/master/example/integrations/mxnet/train"&gt;MXNet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/volcano-sh/volcano/tree/master/example/integrations/argo"&gt;Argo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/volcano-sh/kubegene"&gt;KubeGene&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Use Cases&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.cncf.io/blog/2022/06/30/why-spark-chooses-volcano-as-built-in-batch-scheduler-on-kubernetes/"&gt;Why Spark chooses Volcano as built-in batch scheduler on Kubernetes?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cncf.io/blog/2023/02/21/ing-bank-how-volcano-empowers-its-big-data-analytics-platform/"&gt;ING Bank: How Volcano empowers its big data analytics platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/tutorial-volcano.html"&gt;Using Volcano as a custom scheduler for Apache Spark on Amazon EMR on EKS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/azure/machine-learning/how-to-deploy-kubernetes-extension?view=azureml-api-2&amp;amp;tabs=deploy-extension-with-cli"&gt;Deploy Azure Machine Learning extension on AKS or Arc Kubernetes cluster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.nvidia.com/blog/practical-tips-for-preventing-gpu-fragmentation-for-volcano-scheduler/"&gt;Practical Tips for Preventing GPU Fragmentation for Volcano Scheduler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://volcano.sh/en/blog/ruitian2-en/"&gt;Using Volcano in Large-Scale, Distributed Offline Computing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://volcano.sh/en/blog/pengcheng-en/"&gt;OpenI-Octopus: How to Avoid Resource Preemption in Kubernetes Clusters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://volcano.sh/en/blog/xiaohongshu-en/"&gt;How Does Volcano Empower a Content Recommendation Engine in Xiaohongshu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://volcano.sh/en/blog/ruitian-en/"&gt;How Ruitian Used Volcano to Run Large-Scale Offline HPC Jobs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://volcano.sh/en/blog/leinao-en/"&gt;Integrating Volcano into the Leinao Cloud OS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://volcano.sh/en/blog/hpc-en/"&gt;HPC on Volcano: How Containers Support HPC Applications in the Meteorological Industry&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://volcano.sh/en/blog/aiqiyi-en/"&gt;iQIYI:Volcano-based Cloud Native Migration Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://volcano.sh/en/blog/paddlepaddle-en/"&gt;PaddlePaddle Distributed Training on Volcano&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start Guide&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Kubernetes 1.12+ with CRD support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can try Volcano by one of the following two ways.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;For Kubernetes v1.17 and above, use CRDs under config/crd/bases (recommended)&lt;/li&gt; 
  &lt;li&gt;For Kubernetes v1.16 and below, use CRDs under config/crd/v1beta1 (deprecated)&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Install with YAML files&lt;/h3&gt; 
&lt;p&gt;Install Volcano on an existing Kubernetes cluster. This way is both available for x86_64 and arm64 architecture.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;kubectl apply -f https://raw.githubusercontent.com/volcano-sh/volcano/master/installer/volcano-development.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Enjoy! Volcano will create the following resources in &lt;code&gt;volcano-system&lt;/code&gt; namespace.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;NAME                                       READY   STATUS      RESTARTS   AGE
pod/volcano-admission-5bd5756f79-dnr4l     1/1     Running     0          96s
pod/volcano-controllers-687948d9c8-nw4b4   1/1     Running     0          96s
pod/volcano-scheduler-94998fc64-4z8kh      1/1     Running     0          96s

NAME                                TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE
service/volcano-admission-service   ClusterIP   10.98.152.108   &amp;lt;none&amp;gt;        443/TCP   96s

NAME                                  READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/volcano-admission     1/1     1            1           96s
deployment.apps/volcano-controllers   1/1     1            1           96s
deployment.apps/volcano-scheduler     1/1     1            1           96s

NAME                                             DESIRED   CURRENT   READY   AGE
replicaset.apps/volcano-admission-5bd5756f79     1         1         1       96s
replicaset.apps/volcano-controllers-687948d9c8   1         1         1       96s
replicaset.apps/volcano-scheduler-94998fc64      1         1         1       96s

NAME                               COMPLETIONS   DURATION   AGE
job.batch/volcano-admission-init   1/1           48s        96s

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install via helm&lt;/h3&gt; 
&lt;p&gt;To install official release, please visit &lt;a href="https://github.com/volcano-sh/helm-charts"&gt;helm-charts&lt;/a&gt; for details.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;helm repo add volcano-sh https://volcano-sh.github.io/helm-charts
helm install volcano volcano-sh/volcano -n volcano-system --create-namespace
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install from source code for developers:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;helm install volcano installer/helm/chart/volcano --namespace volcano-system --create-namespace

# list helm release
helm list -n volcano-system
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install from code&lt;/h3&gt; 
&lt;p&gt;If you don't have a kubernetes cluster, try one-click install from code base:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./hack/local-up-volcano.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This way is only available for x86_64 temporarily.&lt;/p&gt; 
&lt;h3&gt;Install volcano agent&lt;/h3&gt; 
&lt;p&gt;Please follow the guide &lt;a href="https://volcano.sh/en/docs/colocation"&gt;Volcano Agent&lt;/a&gt; to install volcano agent.&lt;/p&gt; 
&lt;h3&gt;Install monitoring system&lt;/h3&gt; 
&lt;p&gt;If you want to get prometheus and grafana volcano dashboard after volcano installed, try following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;kubectl create -f installer/volcano-monitoring.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install dashboard&lt;/h3&gt; 
&lt;p&gt;Please follow the guide &lt;a href="https://github.com/volcano-sh/dashboard#volcano-dashboard"&gt;Volcano Dashboard&lt;/a&gt; to install volcano dashboard.&lt;/p&gt; 
&lt;h2&gt;Kubernetes compatibility&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Kubernetes 1.17&lt;/th&gt; 
   &lt;th&gt;Kubernetes 1.18&lt;/th&gt; 
   &lt;th&gt;Kubernetes 1.19&lt;/th&gt; 
   &lt;th&gt;Kubernetes 1.20&lt;/th&gt; 
   &lt;th&gt;Kubernetes 1.21&lt;/th&gt; 
   &lt;th&gt;Kubernetes 1.22&lt;/th&gt; 
   &lt;th&gt;Kubernetes 1.23&lt;/th&gt; 
   &lt;th&gt;Kubernetes 1.24&lt;/th&gt; 
   &lt;th&gt;Kubernetes 1.25&lt;/th&gt; 
   &lt;th&gt;Kubernetes 1.26&lt;/th&gt; 
   &lt;th&gt;Kubernetes 1.27&lt;/th&gt; 
   &lt;th&gt;Kubernetes 1.28&lt;/th&gt; 
   &lt;th&gt;Kubernetes 1.29&lt;/th&gt; 
   &lt;th&gt;Kubernetes 1.30&lt;/th&gt; 
   &lt;th&gt;Kubernetes 1.31&lt;/th&gt; 
   &lt;th&gt;Kubernetes 1.32&lt;/th&gt; 
   &lt;th&gt;Kubernetes 1.33&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Volcano v1.6&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Volcano v1.7&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Volcano v1.8&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Volcano v1.9&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Volcano v1.10&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Volcano v1.11&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Volcano v1.12&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Volcano HEAD (master)&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Key:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;✓&lt;/code&gt; Volcano and the Kubernetes version are exactly compatible.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;+&lt;/code&gt; Volcano has features or API objects that may not be present in the Kubernetes version.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-&lt;/code&gt; The Kubernetes version has features or API objects that Volcano can't use.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Citing Volcano&lt;/h2&gt; 
&lt;p&gt;If Volcano helps your research, we appreciate your citations. Here is the BibTeX entry:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@misc{volcano2025,
  title={Volcano: A Cloud Native Batch System},
  author={Klaus Ma and Kevin Wang and others},
  year={2025},
  howpublished={\url{https://github.com/volcano-sh/volcano}},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Meeting&lt;/h2&gt; 
&lt;p&gt;Community weekly meeting for Asia: 15:00 - 16:00 (UTC+8) Friday. (&lt;a href="https://www.thetimezoneconverter.com/?t=10%3A00&amp;amp;tz=GMT%2B8&amp;amp;"&gt;Convert to your timezone.&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;Community biweekly meeting for America: 08:30 - 09:30 (UTC-8) Thursday. (&lt;a href="https://www.thetimezoneconverter.com/?t=10%3A00&amp;amp;tz=GMT%2B8&amp;amp;"&gt;Convert to your timezone.&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;Community meeting for Europe is ongoing on demand now. If you have some ideas or topics to discuss, please leave message in the &lt;a href="https://cloud-native.slack.com/archives/C011GJDQS0N"&gt;slack&lt;/a&gt;. Maintainers will contact with you and book an open meeting for that.&lt;/p&gt; 
&lt;p&gt;Resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.google.com/document/d/1YLbF8zjZBiR9PbXQPB22iuc_L0Oui5A1lddVfRnZrqs/edit"&gt;Meeting notes and agenda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zoom.us/j/91804791393"&gt;Meeting link&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://calendar.google.com/calendar/b/1/embed?src=volcano.sh.bot@gmail.com"&gt;Meeting Calendar&lt;/a&gt; | &lt;a href="https://calendar.google.com/calendar/b/1?cid=dm9sY2Fuby5zaC5ib3RAZ21haWwuY29t"&gt;Subscribe&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;If you have any question, feel free to reach out to us in the following ways:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://cloud-native.slack.com/archives/C011GJDQS0N"&gt;Volcano Slack Channel&lt;/a&gt; | &lt;a href="https://slack.cncf.io/"&gt;Join&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://groups.google.com/forum/#!forum/volcano-sh"&gt;Mailing List&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;WeChat: Please add WeChat account &lt;code&gt;k8s2222&lt;/code&gt; and request an invitation to the group chat.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cert-manager/cert-manager</title>
      <link>https://github.com/cert-manager/cert-manager</link>
      <description>&lt;p&gt;Automatically provision and manage TLS certificates in Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/cert-manager/cert-manager/master/logo/logo-small.png" height="256" width="256" alt="cert-manager project logo" /&gt; &lt;/p&gt; 
&lt;!-- note that the cert-manager logo in this repo is referred to in other README files in the cert-manager org
     as well as in Helm charts, etc.
     if you change its location or name, you'll need to update several other repos too! --&gt; 
&lt;p align="center"&gt;&lt;a href="https://prow.infra.cert-manager.io/?job=ci-cert-manager-master-make-test"&gt; 
  &lt;!-- prow build badge, godoc, and go report card--&gt; &lt;img alt="Build Status" src="https://prow.infra.cert-manager.io/badge.svg?jobs=ci-cert-manager-master-make-test" /&gt; &lt;/a&gt; &lt;a href="https://godoc.org/github.com/cert-manager/cert-manager"&gt;&lt;img src="https://godoc.org/github.com/cert-manager/cert-manager?status.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/cert-manager/cert-manager"&gt;&lt;img alt="Go Report Card" src="https://goreportcard.com/badge/github.com/cert-manager/cert-manager" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://artifacthub.io/packages/search?repo=cert-manager"&gt;&lt;img alt="Artifact Hub" src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/cert-manager" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/cert-manager/cert-manager"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/cert-manager/cert-manager/badge" alt="Scorecard score" /&gt;&lt;/a&gt; &lt;a href="https://clomonitor.io/projects/cncf/cert-manager"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://clomonitor.io/api/projects/cncf/cert-manager/badge" alt="CLOMonitor" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://www.bestpractices.dev/projects/8079"&gt;&lt;img src="https://www.bestpractices.dev/projects/8079/badge" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;cert-manager&lt;/h1&gt; 
&lt;p&gt;cert-manager adds certificates and certificate issuers as resource types in Kubernetes clusters, and simplifies the process of obtaining, renewing and using those certificates.&lt;/p&gt; 
&lt;p&gt;It supports issuing certificates from a variety of sources, including Let's Encrypt (ACME), HashiCorp Vault, and Venafi TPP / TLS Protect Cloud, as well as local in-cluster issuance.&lt;/p&gt; 
&lt;p&gt;cert-manager also ensures certificates remain valid and up to date, attempting to renew certificates at an appropriate time before expiry to reduce the risk of outages and remove toil.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://cert-manager.io/images/high-level-overview.svg?sanitize=true" alt="cert-manager high level overview diagram" /&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation for cert-manager can be found at &lt;a href="https://cert-manager.io/docs/"&gt;cert-manager.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For the common use-case of automatically issuing TLS certificates for Ingress resources, see the &lt;a href="https://cert-manager.io/docs/tutorials/acme/nginx-ingress/"&gt;cert-manager nginx-ingress quick start guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For a more comprehensive guide to issuing your first certificate, see our &lt;a href="https://cert-manager.io/docs/getting-started/"&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://cert-manager.io/docs/installation/"&gt;Installation&lt;/a&gt; is documented on the website, with a variety of supported methods.&lt;/p&gt; 
&lt;h2&gt;Developing cert-manager&lt;/h2&gt; 
&lt;p&gt;We actively welcome contributions and we support both Linux and macOS environments for development.&lt;/p&gt; 
&lt;p&gt;Different platforms have different requirements; we document everything on our &lt;a href="https://cert-manager.io/docs/contributing/building/"&gt;Building cert-manager&lt;/a&gt; website page.&lt;/p&gt; 
&lt;p&gt;Note in particular that macOS has several extra requirements, to ensure that modern tools are installed and available. Read the page before getting started!&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you encounter any issues whilst using cert-manager, we have a number of ways to get help:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A &lt;a href="https://cert-manager.io/docs/faq/troubleshooting/"&gt;troubleshooting guide&lt;/a&gt; on our website.&lt;/li&gt; 
 &lt;li&gt;Our official &lt;a href="https://cert-manager.io/docs/contributing/#slack"&gt;Kubernetes Slack channel&lt;/a&gt; - the quickest way to ask! (&lt;a href="https://kubernetes.slack.com/messages/cert-manager"&gt;#cert-manager&lt;/a&gt; and &lt;a href="https://kubernetes.slack.com/messages/cert-manager-dev"&gt;#cert-manager-dev&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cert-manager/cert-manager/issues"&gt;Searching for an existing issue&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you believe you've found a bug and cannot find an existing issue, feel free to &lt;a href="https://github.com/cert-manager/cert-manager/issues"&gt;open a new issue&lt;/a&gt;! Be sure to include as much information as you can about your environment.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://groups.google.com/forum/#!forum/cert-manager-dev"&gt;&lt;code&gt;cert-manager-dev&lt;/code&gt; Google Group&lt;/a&gt; is used for project wide announcements and development coordination. Anybody with a Google account can join the group by visiting the group and clicking "Join Group".&lt;/p&gt; 
&lt;h3&gt;Meetings&lt;/h3&gt; 
&lt;p&gt;We have several public meetings which any member of our Google Group is more than welcome to join!&lt;/p&gt; 
&lt;p&gt;Check out the details on &lt;a href="https://cert-manager.io/docs/contributing/#meetings"&gt;our website&lt;/a&gt;. Feel free to drop in and ask questions, chat with us or just to say hi!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome pull requests with open arms! There's a lot of work to do here, and we're especially concerned with ensuring the longevity and reliability of the project. The &lt;a href="https://cert-manager.io/docs/contributing/"&gt;contributing guide&lt;/a&gt; will help you get started.&lt;/p&gt; 
&lt;h2&gt;Coding Conventions&lt;/h2&gt; 
&lt;p&gt;Code style guidelines are documented on the &lt;a href="https://cert-manager.io/docs/contributing/coding-conventions/"&gt;coding conventions&lt;/a&gt; page of the cert-manager website. Please try to follow those guidelines if you're submitting a pull request for cert-manager.&lt;/p&gt; 
&lt;h2&gt;Importing cert-manager as a Module&lt;/h2&gt; 
&lt;p&gt;⚠️ Please note that cert-manager &lt;strong&gt;does not&lt;/strong&gt; currently provide a Go module compatibility guarantee. That means that &lt;strong&gt;most code under &lt;code&gt;pkg/&lt;/code&gt; is subject to change in a breaking way&lt;/strong&gt;, even between minor or patch releases and even if the code is currently publicly exported.&lt;/p&gt; 
&lt;p&gt;The lack of a Go module compatibility guarantee does not affect API version guarantees under the &lt;a href="https://kubernetes.io/docs/reference/using-api/deprecation-policy/"&gt;Kubernetes Deprecation Policy&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For more details see &lt;a href="https://cert-manager.io/docs/contributing/importing/"&gt;Importing cert-manager in Go&lt;/a&gt; on the cert-manager website.&lt;/p&gt; 
&lt;p&gt;The import path for cert-manager versions 1.8 and later is &lt;code&gt;github.com/cert-manager/cert-manager&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For all versions of cert-manager before 1.8, including minor and patch releases, the import path is &lt;code&gt;github.com/jetstack/cert-manager&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Security Reporting&lt;/h2&gt; 
&lt;p&gt;Security is the number one priority for cert-manager. If you think you've found a security vulnerability, we'd love to hear from you.&lt;/p&gt; 
&lt;p&gt;Follow the instructions in &lt;a href="https://raw.githubusercontent.com/cert-manager/cert-manager/master/SECURITY.md"&gt;SECURITY.md&lt;/a&gt; to make a report.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/cert-manager/cert-manager/releases"&gt;Every release&lt;/a&gt; on GitHub has a changelog, and we also publish release notes on &lt;a href="https://cert-manager.io/docs/release-notes/"&gt;the website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;History&lt;/h2&gt; 
&lt;p&gt;cert-manager is loosely based upon the work of &lt;a href="https://github.com/jetstack/kube-lego"&gt;kube-lego&lt;/a&gt; and has borrowed some wisdom from other similar projects such as &lt;a href="https://github.com/PalmStoneGames/kube-cert-manager"&gt;kube-cert-manager&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;sub&gt;&lt;sup&gt;Logo design by &lt;a href="https://zoepatersonmedia.com"&gt;Zoe Paterson&lt;/a&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>getlago/lago</title>
      <link>https://github.com/getlago/lago</link>
      <description>&lt;p&gt;Open Source Metering and Usage Based Billing API ⭐️ Consumption tracking, Subscription management, Pricing iterations, Payment orchestration &amp; Revenue analytics&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://github.com/getlago/lago"&gt; &lt;img src="https://uploads-ssl.webflow.com/635119506e36baf5c267fecd/635b6df0ee8effaa54c1fa42_banner-open-graph.jpg" alt="Lago" /&gt; &lt;/a&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;Lago&lt;/h1&gt; 
&lt;p align="center"&gt; Open Source Metering &amp;amp; Usage-Based Billing &lt;br /&gt; &lt;br /&gt; The best alternative to Chargebee, Recurly or Stripe Billing. &lt;br /&gt; For usage-based, subscription-based, and all the nuances of pricing in between. &lt;br /&gt; &lt;br /&gt; &lt;a href="https://www.getlago.com/slack"&gt;Slack&lt;/a&gt; · &lt;a href="https://getlago.com"&gt;Website&lt;/a&gt; · &lt;a href="https://github.com/getlago/lago/issues"&gt;Issues&lt;/a&gt; · &lt;a href="https://getlago.canny.io/"&gt;Roadmap&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.producthunt.com/posts/lago?utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-lago" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=386328&amp;amp;theme=light&amp;amp;period=monthly" alt="Lago - Open-source alternative to Stripe Billing and Chargebee | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.producthunt.com/posts/lago?utm_source=badge-top-post-topic-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-lago" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-topic-badge.svg?post_id=386328&amp;amp;theme=light&amp;amp;period=monthly&amp;amp;topic_id=267" alt="Lago - Open-source alternative to Stripe Billing and Chargebee | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.getlago.com/slack"&gt;&lt;img src="https://img.shields.io/badge/Lago%20Slack%20Community-lago.slack.com-%234A154B" alt="Join Lago on Slack" /&gt;&lt;/a&gt; &lt;a href="https://github.com/getlago/lago/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/getlago/lago" alt="Github Stars" /&gt;&lt;/a&gt; &lt;a href="https://news.ycombinator.com/item?id=31424450"&gt;&lt;img src="https://img.shields.io/badge/Hacker%20News-777-%23FF6600" alt="Hacker News" /&gt;&lt;/a&gt; &lt;a href="https://github.com/getlago/lago/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-AGPLv3-purple" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/getlago"&gt;&lt;img src="https://img.shields.io/twitter/follow/getlago?style=flat" /&gt;&lt;/a&gt; &lt;a href="https://www.ycombinator.com"&gt;&lt;img src="https://img.shields.io/badge/Backed%20by-Y%20Combinator-%23f26625" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;!-- ABOUT THE PROJECT --&gt; 
&lt;h2&gt;The programmable API for usage-based billing&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=dXnoMRetsr4"&gt;&lt;img src="https://img.youtube.com/vi/dXnoMRetsr4/0.jpg" alt="Lago Billing System Presentation" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;The problem: Billing systems are still a nightmare for engineers&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://uploads-ssl.webflow.com/6244531a40ad7ef5475ad9b3/62827b2f6fa52239b0db0fa4_Blog%20Post%20Image%20Standalone.png" alt="Billing nightmare" /&gt; Engineers be like…&lt;/p&gt; 
&lt;p&gt;Read more first-hand experiences from Qonto, Algolia, Pleo, Segment, or the 350+. Hackernews comments &lt;a href="https://news.ycombinator.com/item?id=31424450"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The Solution:&lt;/strong&gt; Lago, the open-source billing API for product-led SaaS&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Event-based: if you can track it, you can charge for it;&lt;/li&gt; 
 &lt;li&gt;Built for product-led growth companies;&lt;/li&gt; 
 &lt;li&gt;Hybrid pricing: subscription and usage;&lt;/li&gt; 
 &lt;li&gt;Hybrid go-to-market motion: self-serve and sales-led.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Open-source, open architecture:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Composable: connect Lago to any of your internal systems or tools (i.e. any payment gateway, CRM, CPQ, accounting software);&lt;/li&gt; 
 &lt;li&gt;Pricing: we’re not rent seekers, we’re not asking for a % of your revenue. Our self-hosted version is free. Our cloud version is priced like a SaaS;&lt;/li&gt; 
 &lt;li&gt;Privacy: your data never has to leave your infrastructure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.getlago.com/products/metering"&gt;Usage metering&lt;/a&gt;&lt;/strong&gt;: Lago's event-based architecture provides a solid foundation for building a fair pricing model that scales with your business.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.getlago.com/products/plans"&gt;Price plans&lt;/a&gt;&lt;/strong&gt;: Lago supports all pricing models. Create pay-as-you-go and hybrid plans in no time with our intuitive user interface or API.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.getlago.com/products/coupons"&gt;Coupons&lt;/a&gt;&lt;/strong&gt;: Create engaging marketing campaigns and increase conversion with coupons that customers can redeem to get a discount.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.getlago.com/products/add-on"&gt;Add-ons&lt;/a&gt;&lt;/strong&gt;: Why wait until the end of the billing cycle to get paid? Lago allows you to create one-time charges that are invoiced on the fly.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.getlago.com/products/invoicing"&gt;Invoicing&lt;/a&gt;&lt;/strong&gt;: Depending on the configuration of your plans, Lago automatically calculates what each customer owes you and generates invoices.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.getlago.com/products/prepaid-credits"&gt;Prepaid credits&lt;/a&gt;&lt;/strong&gt;: Unlock recurring revenue opportunities for pay-as-you-go pricing models with Lago's prepaid credit features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/getlago/lago/main/docs/development.md"&gt;Development Environment&lt;/a&gt;&lt;/strong&gt;: Learn how to set up and run Lago locally for development&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/getlago/lago/main/docs/architecture.md"&gt;Architecture&lt;/a&gt;&lt;/strong&gt;: Understand Lago's technical architecture and flows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔔 Stay up to date&lt;/h2&gt; 
&lt;p&gt;Lago launched its v0.1 on June 2nd, 2022. Lots of new features are coming, and are generally released on a bi-weekly basis. Watch updates of this repository to be notified of future updates.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://getlago.canny.io/"&gt;Check out our public roadmap&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🔖 License&lt;/h2&gt; 
&lt;p&gt;Distributed under the AGPLv3 License. Read more &lt;a href="https://www.getlago.com/blog/open-source-licensing-and-why-lago-chose-agplv3"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Current Releases&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Project&lt;/th&gt; 
   &lt;th&gt;Release Badge&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Lago&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago" alt="Lago Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Lago API&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago-api/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago-api" alt="Lago API Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Lago front&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago-front/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago-front" alt="Lago front Testing Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Lago Go Client&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago-go-client/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago-go-client" alt="Lago Go Client Testing Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;lago-gotenberg&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago-gotenberg/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago-gotenberg" alt="lago-gotenberg Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Lago JavaScript Client&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago-javascript-client/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago-javascript-client" alt="Lago JavaScript Client Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Lago OpenAPI&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago-openapi/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago-openapi" alt="Lago OpenAPI Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Lago Python Client&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago-python-client/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago-python-client" alt="Lago Python Client Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Lago Ruby Client&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago-ruby-client/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago-ruby-client" alt="Lago Ruby Client Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;💻 Deploy locally&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Docker on your machine;&lt;/li&gt; 
 &lt;li&gt;Make sure Docker Compose is installed and available (it should be the case if you have chosen to install Docker via Docker Desktop); and&lt;/li&gt; 
 &lt;li&gt;Make sure Git is installed on your machine.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Run the app&lt;/h3&gt; 
&lt;p&gt;To start using Lago, run the following commands in a shell:&lt;/p&gt; 
&lt;h4&gt;On a fresh install&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Get the code
git clone --depth 1 https://github.com/getlago/lago.git

# Go to Lago folder
cd lago

# Set up environment configuration
echo "LAGO_RSA_PRIVATE_KEY=\"`openssl genrsa 2048 | openssl base64 -A`\"" &amp;gt;&amp;gt; .env
source .env

# Start all the components
docker compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;After an update&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can now open your browser and go to &lt;a href="http://localhost"&gt;http://localhost&lt;/a&gt; to connect to the application. Lago's API is exposed at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Note that if our docker server is not at &lt;a href="http://localhost"&gt;http://localhost&lt;/a&gt;, the following env variables must be set: &lt;code&gt;LAGO_API_URL&lt;/code&gt;. This may be on the command line or in your .env file. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;LAGO_API_URL="http://192.168.122.71:3000"
LAGO_FRONT_URL="http://192.168.122.71"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Find your API key&lt;/h3&gt; 
&lt;p&gt;Your API Key can be found directly in the UI:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Access the &lt;strong&gt;Developer&lt;/strong&gt; section from the sidebar;&lt;/li&gt; 
 &lt;li&gt;The first tab of this section is related to your &lt;strong&gt;API keys&lt;/strong&gt;; and&lt;/li&gt; 
 &lt;li&gt;Click the &lt;strong&gt;Copy&lt;/strong&gt; button to copy it to clipboard.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Analytics and tracking&lt;/h3&gt; 
&lt;p&gt;Please note that Lago, by default, tracks basic actions performed on your self-hosted instance. If you do not disable tracking, you may receive specific communications or product updates. However, rest assured that Lago will not collect any personal information about your customers or financial information about your invoices.&lt;/p&gt; 
&lt;p&gt;If you would like to know more about Lago's analytics or remove the entire tracking, please refer to &lt;a href="https://doc.getlago.com/guide/self-hosted/tracking-analytics"&gt;this page&lt;/a&gt; for comprehensive information.&lt;/p&gt; 
&lt;h3&gt;Version, environment variables and components&lt;/h3&gt; 
&lt;p&gt;Docker images are always updated to the last stable version in the docker-compose.yml file. You can use a different tag if needed by checking the releases list.&lt;/p&gt; 
&lt;p&gt;Lago uses the following environment variables to configure the components of the application. You can override them to customise your setup. Take a closer look are our &lt;a href="https://doc.getlago.com/docs/guide/self-hosting/docker#configuration"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;☁️ Use our cloud-based product&lt;/h2&gt; 
&lt;p&gt;Contact our team at &lt;a href="mailto:hello@getlago.com"&gt;hello@getlago.com&lt;/a&gt; to get started with Lago Cloud. More information on &lt;a href="https://www.getlago.com/pricing"&gt;our website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🚀 Getting the most out of Lago&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;See the &lt;a href="https://doc.getlago.com"&gt;documentation&lt;/a&gt; to learn more about all the features;&lt;/li&gt; 
 &lt;li&gt;Use our &lt;a href="https://getlago.com/docs/templates/introduction"&gt;templates&lt;/a&gt; to get inspiration and learn how to reproduce Algolia’s, Segment’s and Klaviyo’s pricing models;&lt;/li&gt; 
 &lt;li&gt;Join our &lt;a href="https://www.getlago.com/slack"&gt;Slack community&lt;/a&gt; if you need help, or want to chat, we’re here to help;&lt;/li&gt; 
 &lt;li&gt;Contribute on GitHub: read our &lt;a href="https://github.com/getlago/lago/raw/main/CONTRIBUTING.md"&gt;guidelines&lt;/a&gt;;&lt;/li&gt; 
 &lt;li&gt;Follow us on &lt;a href="https://twitter.com/GetLago"&gt;Twitter&lt;/a&gt; for the latest news;&lt;/li&gt; 
 &lt;li&gt;You can email us as well: &lt;a href="mailto:hello@getlago.com"&gt;hello@getlago.com&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🧑‍💻 Contributions and development environment&lt;/h2&gt; 
&lt;p&gt;You can follow this &lt;a href="https://raw.githubusercontent.com/getlago/lago/main/docs/dev_environment.md"&gt;guide&lt;/a&gt; to set up a Lago development environment on your machine. This guide is intended for people willing to contribute to Lago. If you want to try Lago on your local system, we recommend that you take a look at Lago's public documentation.&lt;/p&gt; 
&lt;p&gt;You can contribute by following our &lt;a href="https://github.com/getlago/lago/raw/main/CONTRIBUTING.md"&gt;guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💡 Philosophy&lt;/h2&gt; 
&lt;p&gt;B2B SaaS has evolved, but billing has not yet.&lt;/p&gt; 
&lt;h3&gt;1- We’re not in the “subscription economy” anymore. And we won’t go “full usage-based pricing” quite yet&lt;/h3&gt; 
&lt;p&gt;Pricings are now mostly hybrid: they include a usage-based component (i.e. “if you use more you pay more”) and a subscription component (i.e. a recurring fee for basic usage).&lt;/p&gt; 
&lt;p&gt;Not all software companies will go full “usage-based” like Snowflake for instance. This model is the new standard for cloud infrastructure products. However, in other areas of SaaS, users want to know beforehand how much they will pay to control their spending and software companies want to be able to predict recurring revenues.&lt;/p&gt; 
&lt;h3&gt;2- Go-to-market is not either bottom-up or top-down anymore&lt;/h3&gt; 
&lt;p&gt;SaaS used to be either self-service (SMBs) or sales-led (Enterprises). Go-to-market now mixes the self-service (all customers access the same price plans) and sales-led (customers get a custom quote from a sales representative) motions. A typical journey involves an individual contributor in a company who tests a new tool, puts their corporate credit card in, and starts spreading the use of the tool within the organization. At that point, the VP or head of department might want to upgrade to a custom plan tailored to the needs of the whole organization. As a result, billing needs to be flexible, automated, and transparent enough to embrace this hybrid go-to-market motion as well.&lt;/p&gt; 
&lt;h3&gt;3- The “rent seeker” pricing of current billing solutions needs to stop&lt;/h3&gt; 
&lt;p&gt;Why do payment companies take a cut on revenues? Because the higher the amount, the higher the risk for them (e.g. fraud, disputes, etc.).&lt;/p&gt; 
&lt;p&gt;Why did billing companies adopt the same pricing structure? We’re not able to provide an answer that makes sense. It’s been said on the internet that they did this because they could (read more &lt;a href="https://news.ycombinator.com/item?id=16766846"&gt;here&lt;/a&gt;).&lt;/p&gt; 
&lt;h3&gt;One last thing…&lt;/h3&gt; 
&lt;p&gt;Lago is agnostic and we aim at being as transparent as possible, so we won’t nudge or lock you into using a specific tool in exchange for using our billing API (&lt;a href="https://www.gmass.co/blog/negotiating-stripe-fees/"&gt;learn more&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>anchore/syft</title>
      <link>https://github.com/anchore/syft</link>
      <description>&lt;p&gt;CLI tool and library for generating a Software Bill of Materials from container images and filesystems&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://user-images.githubusercontent.com/5199289/136844524-1527b09f-c5cb-4aa9-be54-5aa92a6086c1.png" width="271" alt="Cute pink owl syft logo" /&gt; &lt;/p&gt; 
&lt;h1&gt;Syft&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;A CLI tool and Go library for generating a Software Bill of Materials (SBOM) from container images and filesystems. Exceptional for vulnerability detection when used with a scanner like &lt;a href="https://github.com/anchore/grype"&gt;Grype&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &amp;nbsp;&lt;a href="https://github.com/anchore/syft/actions/workflows/validations.yaml" target="_blank"&gt;&lt;img alt="Validations" src="https://github.com/anchore/syft/actions/workflows/validations.yaml/badge.svg?sanitize=true" /&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp;&lt;a href="https://goreportcard.com/report/github.com/anchore/syft" target="_blank"&gt;&lt;img alt="Go Report Card" src="https://goreportcard.com/badge/github.com/anchore/syft" /&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp;&lt;a href="https://github.com/anchore/syft/releases/latest" target="_blank"&gt;&lt;img alt="GitHub release" src="https://img.shields.io/github/release/anchore/syft.svg?sanitize=true" /&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp;&lt;a href="https://github.com/anchore/syft" target="_blank"&gt;&lt;img alt="GitHub go.mod Go version" src="https://img.shields.io/github/go-mod/go-version/anchore/syft.svg?sanitize=true" /&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp;&lt;a href="" target="_blank"&gt;&lt;img alt="License: Apache-2.0" src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" /&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp;&lt;a href="https://anchore.com/discourse" target="_blank"&gt;&lt;img alt="Join our Discourse" src="https://img.shields.io/badge/Discourse-Join-blue?logo=discourse" /&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp;&lt;a rel="me" href="https://fosstodon.org/@syft"&gt;&lt;img alt="Follow on Mastodon" src="https://img.shields.io/badge/Mastodon-Follow-blue?logoColor=white&amp;amp;logo=mastodon" /&gt;&lt;/a&gt;&amp;nbsp; &lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/590471/90277200-2a253000-de33-11ea-893f-32c219eea11a.gif" alt="syft-demo" /&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Syft is a powerful and easy-to-use open-source tool for generating Software Bill of Materials (SBOMs) for container images and filesystems. It provides detailed visibility into the packages and dependencies in your software, helping you manage vulnerabilities, license compliance, and software supply chain security.&lt;/p&gt; 
&lt;p&gt;Syft development is sponsored by &lt;a href="https://anchore.com/"&gt;Anchore&lt;/a&gt;, and is released under the &lt;a href="https://github.com/anchore/syft?tab=Apache-2.0-1-ov-file"&gt;Apache-2.0 License&lt;/a&gt;. For commercial support options with Syft or Grype, please &lt;a href="https://get.anchore.com/contact/"&gt;contact Anchore&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Generates SBOMs for container images, filesystems, archives, and more to discover packages and libraries&lt;/li&gt; 
 &lt;li&gt;Supports OCI, Docker and &lt;a href="https://github.com/sylabs/singularity"&gt;Singularity&lt;/a&gt; image formats&lt;/li&gt; 
 &lt;li&gt;Linux distribution identification&lt;/li&gt; 
 &lt;li&gt;Works seamlessly with &lt;a href="https://github.com/anchore/grype"&gt;Grype&lt;/a&gt; (a fast, modern vulnerability scanner)&lt;/li&gt; 
 &lt;li&gt;Able to create signed SBOM attestations using the &lt;a href="https://github.com/in-toto/attestation/raw/main/spec/README.md"&gt;in-toto specification&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Convert between SBOM formats, such as CycloneDX, SPDX, and Syft's own format.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Syft binaries are provided for Linux, macOS and Windows.&lt;/p&gt; 
&lt;h3&gt;Recommended&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSfL https://get.anchore.io/syft | sudo sh -s -- -b /usr/local/bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Install script options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-b&lt;/code&gt;: Specify a custom installation directory (defaults to &lt;code&gt;./bin&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: More verbose logging levels (&lt;code&gt;-d&lt;/code&gt; for debug, &lt;code&gt;-dd&lt;/code&gt; for trace)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: Verify the signature of the downloaded artifact before installation (requires &lt;a href="https://github.com/sigstore/cosign"&gt;&lt;code&gt;cosign&lt;/code&gt;&lt;/a&gt; to be installed)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Homebrew&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install syft
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Scoop&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;scoop install syft
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Chocolatey&lt;/h3&gt; 
&lt;p&gt;The chocolatey distribution of Syft is community-maintained and not distributed by the Anchore team&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;choco install syft -y
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Nix&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Nix packaging of Syft is &lt;a href="https://github.com/NixOS/nixpkgs/raw/master/pkgs/by-name/sy/syft/package.nix"&gt;community maintained&lt;/a&gt;. Syft is available in the &lt;a href="https://wiki.nixos.org/wiki/Nix_channels#The_official_channels"&gt;stable channel&lt;/a&gt; since NixOS &lt;code&gt;22.05&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nix-env -i syft
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;... or, just try it out in an ephemeral nix shell:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nix-shell -p syft
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;SBOM&lt;/h3&gt; 
&lt;p&gt;To generate an SBOM for a container image:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;syft &amp;lt;image&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The above output includes only software that is visible in the container (i.e., the squashed representation of the image). To include software from all image layers in the SBOM, regardless of its presence in the final image, provide &lt;code&gt;--scope all-layers&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;syft &amp;lt;image&amp;gt; --scope all-layers
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Output formats&lt;/h3&gt; 
&lt;p&gt;The output format for Syft is configurable as well using the &lt;code&gt;-o&lt;/code&gt; (or &lt;code&gt;--output&lt;/code&gt;) option:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;syft &amp;lt;image&amp;gt; -o &amp;lt;format&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where the &lt;code&gt;formats&lt;/code&gt; available are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;syft-json&lt;/code&gt;: Use this to get as much information out of Syft as possible!&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;syft-text&lt;/code&gt;: A row-oriented, human-and-machine-friendly output.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cyclonedx-xml&lt;/code&gt;: A XML report conforming to the &lt;a href="https://cyclonedx.org/specification/overview/"&gt;CycloneDX 1.6 specification&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cyclonedx-xml@1.5&lt;/code&gt;: A XML report conforming to the &lt;a href="https://cyclonedx.org/specification/overview/"&gt;CycloneDX 1.5 specification&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cyclonedx-json&lt;/code&gt;: A JSON report conforming to the &lt;a href="https://cyclonedx.org/specification/overview/"&gt;CycloneDX 1.6 specification&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cyclonedx-json@1.5&lt;/code&gt;: A JSON report conforming to the &lt;a href="https://cyclonedx.org/specification/overview/"&gt;CycloneDX 1.5 specification&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;spdx-tag-value&lt;/code&gt;: A tag-value formatted report conforming to the &lt;a href="https://spdx.github.io/spdx-spec/v2.3/"&gt;SPDX 2.3 specification&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;spdx-tag-value@2.2&lt;/code&gt;: A tag-value formatted report conforming to the &lt;a href="https://spdx.github.io/spdx-spec/v2.2.2/"&gt;SPDX 2.2 specification&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;spdx-json&lt;/code&gt;: A JSON report conforming to the &lt;a href="https://github.com/spdx/spdx-spec/raw/v2.3/schemas/spdx-schema.json"&gt;SPDX 2.3 JSON Schema&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;spdx-json@2.2&lt;/code&gt;: A JSON report conforming to the &lt;a href="https://github.com/spdx/spdx-spec/raw/v2.2/schemas/spdx-schema.json"&gt;SPDX 2.2 JSON Schema&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;github-json&lt;/code&gt;: A JSON report conforming to GitHub's dependency snapshot format.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;syft-table&lt;/code&gt;: A columnar summary (default).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;template&lt;/code&gt;: Lets the user specify the output format. See &lt;a href="https://raw.githubusercontent.com/anchore/syft/main/#using-templates"&gt;"Using templates"&lt;/a&gt; below.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that flags using the @
 &lt;version&gt;
   can be used for earlier versions of each specification as well.
 &lt;/version&gt;&lt;/p&gt; 
&lt;h3&gt;Supported Ecosystems&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Alpine (apk)&lt;/li&gt; 
 &lt;li&gt;Bitnami packages&lt;/li&gt; 
 &lt;li&gt;C (conan)&lt;/li&gt; 
 &lt;li&gt;C++ (conan)&lt;/li&gt; 
 &lt;li&gt;Dart (pubs)&lt;/li&gt; 
 &lt;li&gt;Debian (dpkg)&lt;/li&gt; 
 &lt;li&gt;Dotnet (deps.json)&lt;/li&gt; 
 &lt;li&gt;Objective-C (cocoapods)&lt;/li&gt; 
 &lt;li&gt;Elixir (mix)&lt;/li&gt; 
 &lt;li&gt;Erlang (rebar3)&lt;/li&gt; 
 &lt;li&gt;Go (go.mod, Go binaries)&lt;/li&gt; 
 &lt;li&gt;GitHub (workflows, actions)&lt;/li&gt; 
 &lt;li&gt;Haskell (cabal, stack)&lt;/li&gt; 
 &lt;li&gt;Java (jar, ear, war, par, sar, nar, native-image)&lt;/li&gt; 
 &lt;li&gt;JavaScript (npm, yarn)&lt;/li&gt; 
 &lt;li&gt;Jenkins Plugins (jpi, hpi)&lt;/li&gt; 
 &lt;li&gt;Linux kernel archives (vmlinz)&lt;/li&gt; 
 &lt;li&gt;Linux kernel modules (ko)&lt;/li&gt; 
 &lt;li&gt;Nix (outputs in /nix/store)&lt;/li&gt; 
 &lt;li&gt;PHP (composer, PECL, Pear)&lt;/li&gt; 
 &lt;li&gt;Python (wheel, egg, poetry, requirements.txt, uv)&lt;/li&gt; 
 &lt;li&gt;Red Hat (rpm)&lt;/li&gt; 
 &lt;li&gt;Ruby (gem)&lt;/li&gt; 
 &lt;li&gt;Rust (cargo.lock, auditable binary)&lt;/li&gt; 
 &lt;li&gt;Swift (cocoapods, swift-package-manager)&lt;/li&gt; 
 &lt;li&gt;Wordpress plugins&lt;/li&gt; 
 &lt;li&gt;Terraform providers (.terraform.lock.hcl)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Our &lt;a href="https://github.com/anchore/syft/wiki"&gt;wiki&lt;/a&gt; contains further details on the following topics:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anchore/syft/wiki/supported-sources"&gt;Supported Sources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anchore/syft/wiki/file-selection"&gt;File Selection&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anchore/syft/wiki/excluding-file-paths"&gt;Excluding file paths&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anchore/syft/wiki/output-formats"&gt;Output formats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anchore/syft/wiki/package-cataloger-selection"&gt;Package Cataloger Selection&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/anchore/syft/wiki/package-cataloger-selection#concepts"&gt;Concepts&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/anchore/syft/wiki/package-cataloger-selection#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anchore/syft/wiki/using-templates"&gt;Using templates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anchore/syft/wiki/multiple-outputs"&gt;Multiple outputs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anchore/syft/wiki/private-registry-authentication"&gt;Private Registry Authentication&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/anchore/syft/wiki/private-registry-authentication#local-docker"&gt;Local Docker Credentials&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/anchore/syft/wiki/private-registry-authentication#docker-credentials-in-kubernetes"&gt;Docker Credentials in Kubernetes&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anchore/syft/wiki/attestation"&gt;Attestation (experimental)&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/anchore/syft/wiki/attestation#keyless-support"&gt;Keyless Support&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/anchore/syft/wiki/attestation#local-private-key-support"&gt;Local private key support&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/anchore/syft/wiki/attestation#adding-an-sbom-to-an-image-as-an-attestation-using-syft"&gt;Adding an SBOM to an image as an attestation using Syft&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anchore/syft/wiki/configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Check out our &lt;a href="https://raw.githubusercontent.com/anchore/syft/main/CONTRIBUTING.md"&gt;contributing&lt;/a&gt; guide and &lt;a href="https://raw.githubusercontent.com/anchore/syft/main/DEVELOPING.md"&gt;developer&lt;/a&gt; docs.&lt;/p&gt; 
&lt;h2&gt;Syft Team Meetings&lt;/h2&gt; 
&lt;p&gt;The Syft Team hold regular community meetings online. All are welcome to join to bring topics for discussion.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check the &lt;a href="https://calendar.google.com/calendar/u/0/r?cid=Y182OTM4dGt0MjRtajI0NnNzOThiaGtnM29qNEBncm91cC5jYWxlbmRhci5nb29nbGUuY29t"&gt;calendar&lt;/a&gt; for the next meeting date.&lt;/li&gt; 
 &lt;li&gt;Add items to the &lt;a href="https://docs.google.com/document/d/1ZtSAa6fj2a6KRWviTn3WoJm09edvrNUp4Iz_dOjjyY8/edit?usp=sharing"&gt;agenda&lt;/a&gt; (join &lt;a href="https://groups.google.com/g/anchore-oss-community"&gt;this group&lt;/a&gt; for write access to the &lt;a href="https://docs.google.com/document/d/1ZtSAa6fj2a6KRWviTn3WoJm09edvrNUp4Iz_dOjjyY8/edit?usp=sharing"&gt;agenda&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;See you there!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Syft Logo&lt;/h2&gt; 
&lt;p xmlns:cc="http://creativecommons.org/ns#" xmlns:dct="http://purl.org/dc/terms/"&gt;&lt;a property="dct:title" rel="cc:attributionURL" href="https://anchore.com/wp-content/uploads/2024/11/syft-logo.svg"&gt;Syft Logo&lt;/a&gt; by &lt;a rel="cc:attributionURL dct:creator" property="cc:attributionName" href="https://anchore.com/"&gt;Anchore&lt;/a&gt; is licensed under &lt;a href="https://creativecommons.org/licenses/by/4.0/" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"&gt;CC BY 4.0&lt;img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/cc.svg?sanitize=true" alt="" /&gt;&lt;img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/by.svg?sanitize=true" alt="" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TwiN/gatus</title>
      <link>https://github.com/TwiN/gatus</link>
      <description>&lt;p&gt;⛑ Automated developer-oriented status page&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://gatus.io"&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/logo-with-dark-text.png" alt="Gatus" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/TwiN/gatus/actions/workflows/test.yml/badge.svg?sanitize=true" alt="test" /&gt; &lt;a href="https://goreportcard.com/report/github.com/TwiN/gatus"&gt;&lt;img src="https://goreportcard.com/badge/github.com/TwiN/gatus?" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/TwiN/gatus"&gt;&lt;img src="https://codecov.io/gh/TwiN/gatus/branch/master/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TwiN/gatus"&gt;&lt;img src="https://img.shields.io/github/go-mod/go-version/TwiN/gatus.svg?sanitize=true" alt="Go version" /&gt;&lt;/a&gt; &lt;a href="https://cloud.docker.com/repository/docker/twinproduction/gatus"&gt;&lt;img src="https://img.shields.io/docker/pulls/twinproduction/gatus.svg?sanitize=true" alt="Docker pulls" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TwiN"&gt;&lt;img src="https://img.shields.io/github/followers/TwiN?label=Follow&amp;amp;style=social" alt="Follow TwiN" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Gatus is a developer-oriented health dashboard that gives you the ability to monitor your services using HTTP, ICMP, TCP, and even DNS queries as well as evaluate the result of said queries by using a list of conditions on values like the status code, the response time, the certificate expiration, the body and many others. The icing on top is that each of these health checks can be paired with alerting via Slack, Teams, PagerDuty, Discord, Twilio and many more.&lt;/p&gt; 
&lt;p&gt;I personally deploy it in my Kubernetes cluster and let it monitor the status of my core applications: &lt;a href="https://status.twin.sh/"&gt;https://status.twin.sh/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Looking for a managed solution? Check out &lt;a href="https://gatus.io"&gt;Gatus.io&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Quick start&lt;/b&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --name gatus ghcr.io/twin/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;You can also use Docker Hub if you prefer:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --name gatus twinproduction/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;For more details, see &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#usage"&gt;Usage&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;❤ Like this project? Please consider &lt;a href="https://github.com/sponsors/TwiN"&gt;sponsoring me&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/dashboard-dark.jpg" alt="Gatus dashboard" /&gt;&lt;/p&gt; 
&lt;p&gt;Have any feedback or questions? &lt;a href="https://github.com/TwiN/gatus/discussions/new"&gt;Create a discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#why-gatus"&gt;Why Gatus?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuration"&gt;Configuration&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#endpoints"&gt;Endpoints&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#external-endpoints"&gt;External Endpoints&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#suites-alpha"&gt;Suites (ALPHA)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#conditions"&gt;Conditions&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#placeholders"&gt;Placeholders&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#functions"&gt;Functions&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#storage"&gt;Storage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#tunneling"&gt;Tunneling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#alerting"&gt;Alerting&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-aws-ses-alerts"&gt;Configuring AWS SES alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-datadog-alerts"&gt;Configuring Datadog alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-discord-alerts"&gt;Configuring Discord alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-email-alerts"&gt;Configuring Email alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gitea-alerts"&gt;Configuring Gitea alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-github-alerts"&gt;Configuring GitHub alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gitlab-alerts"&gt;Configuring GitLab alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-google-chat-alerts"&gt;Configuring Google Chat alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gotify-alerts"&gt;Configuring Gotify alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-homeassistant-alerts"&gt;Configuring HomeAssistant alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-ifttt-alerts"&gt;Configuring IFTTT alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-ilert-alerts"&gt;Configuring Ilert alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-incidentio-alerts"&gt;Configuring Incident.io alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-line-alerts"&gt;Configuring Line alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-matrix-alerts"&gt;Configuring Matrix alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-mattermost-alerts"&gt;Configuring Mattermost alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-messagebird-alerts"&gt;Configuring Messagebird alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-n8n-alerts"&gt;Configuring n8n alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-new-relic-alerts"&gt;Configuring New Relic alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-ntfy-alerts"&gt;Configuring Ntfy alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-opsgenie-alerts"&gt;Configuring Opsgenie alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-pagerduty-alerts"&gt;Configuring PagerDuty alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-plivo-alerts"&gt;Configuring Plivo alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-pushover-alerts"&gt;Configuring Pushover alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-rocketchat-alerts"&gt;Configuring Rocket.Chat alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-sendgrid-alerts"&gt;Configuring SendGrid alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-signal-alerts"&gt;Configuring Signal alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-signl4-alerts"&gt;Configuring SIGNL4 alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-slack-alerts"&gt;Configuring Slack alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-splunk-alerts"&gt;Configuring Splunk alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-squadcast-alerts"&gt;Configuring Squadcast alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-teams-alerts-deprecated"&gt;Configuring Teams alerts &lt;em&gt;(Deprecated)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-teams-workflow-alerts"&gt;Configuring Teams Workflow alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-telegram-alerts"&gt;Configuring Telegram alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-twilio-alerts"&gt;Configuring Twilio alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-vonage-alerts"&gt;Configuring Vonage alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-webex-alerts"&gt;Configuring Webex alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-zapier-alerts"&gt;Configuring Zapier alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-zulip-alerts"&gt;Configuring Zulip alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-custom-alerts"&gt;Configuring custom alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#announcements"&gt;Announcements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#maintenance"&gt;Maintenance&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#security"&gt;Security&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#basic-authentication"&gt;Basic Authentication&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#oidc"&gt;OIDC&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#tls-encryption"&gt;TLS Encryption&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#metrics"&gt;Metrics&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#custom-labels"&gt;Custom Labels&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#connectivity"&gt;Connectivity&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#remote-instances-experimental"&gt;Remote instances (EXPERIMENTAL)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#deployment"&gt;Deployment&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#docker"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#helm-chart"&gt;Helm Chart&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#terraform"&gt;Terraform&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#running-the-tests"&gt;Running the tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#using-in-production"&gt;Using in Production&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#faq"&gt;FAQ&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#sending-a-graphql-request"&gt;Sending a GraphQL request&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#recommended-interval"&gt;Recommended interval&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#default-timeouts"&gt;Default timeouts&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-a-tcp-endpoint"&gt;Monitoring a TCP endpoint&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-a-udp-endpoint"&gt;Monitoring a UDP endpoint&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-a-sctp-endpoint"&gt;Monitoring a SCTP endpoint&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-a-websocket-endpoint"&gt;Monitoring a WebSocket endpoint&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-icmp"&gt;Monitoring an endpoint using ICMP&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-dns-queries"&gt;Monitoring an endpoint using DNS queries&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-ssh"&gt;Monitoring an endpoint using SSH&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-starttls"&gt;Monitoring an endpoint using STARTTLS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-tls"&gt;Monitoring an endpoint using TLS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-domain-expiration"&gt;Monitoring domain expiration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#concurrency"&gt;Concurrency&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#reloading-configuration-on-the-fly"&gt;Reloading configuration on the fly&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#endpoint-groups"&gt;Endpoint groups&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#how-do-i-sort-by-group-by-default"&gt;How do I sort by group by default?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#exposing-gatus-on-a-custom-path"&gt;Exposing Gatus on a custom path&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#exposing-gatus-on-a-custom-port"&gt;Exposing Gatus on a custom port&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-a-startup-delay"&gt;Configuring a startup delay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#keeping-your-configuration-small"&gt;Keeping your configuration small&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#proxy-client-configuration"&gt;Proxy client configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#how-to-fix-431-request-header-fields-too-large-error"&gt;How to fix 431 Request Header Fields Too Large error&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#badges"&gt;Badges&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#uptime"&gt;Uptime&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#health"&gt;Health&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#health-shieldsio"&gt;Health (Shields.io)&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#response-time"&gt;Response time&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#response-time-chart"&gt;Response time (chart)&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#how-to-change-the-color-thresholds-of-the-response-time-badge"&gt;How to change the color thresholds of the response time badge&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#api"&gt;API&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#interacting-with-the-api-programmatically"&gt;Interacting with the API programmatically&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#raw-data"&gt;Raw Data&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#uptime-1"&gt;Uptime&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#response-time-1"&gt;Response Time&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#installing-as-binary"&gt;Installing as binary&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#high-level-design-overview"&gt;High level design overview&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why Gatus?&lt;/h2&gt; 
&lt;p&gt;Before getting into the specifics, I want to address the most common question:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Why would I use Gatus when I can just use Prometheus’ Alertmanager, Cloudwatch or even Splunk?&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Neither of these can tell you that there’s a problem if there are no clients actively calling the endpoint. In other words, it's because monitoring metrics mostly rely on existing traffic, which effectively means that unless your clients are already experiencing a problem, you won't be notified.&lt;/p&gt; 
&lt;p&gt;Gatus, on the other hand, allows you to configure health checks for each of your features, which in turn allows it to monitor these features and potentially alert you before any clients are impacted.&lt;/p&gt; 
&lt;p&gt;A sign you may want to look into Gatus is by simply asking yourself whether you'd receive an alert if your load balancer was to go down right now. Will any of your existing alerts be triggered? Your metrics won’t report an increase in errors if no traffic makes it to your applications. This puts you in a situation where your clients are the ones that will notify you about the degradation of your services rather than you reassuring them that you're working on fixing the issue before they even know about it.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;The main features of Gatus are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Highly flexible health check conditions&lt;/strong&gt;: While checking the response status may be enough for some use cases, Gatus goes much further and allows you to add conditions on the response time, the response body and even the IP address.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ability to use Gatus for user acceptance tests&lt;/strong&gt;: Thanks to the point above, you can leverage this application to create automated user acceptance tests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Very easy to configure&lt;/strong&gt;: Not only is the configuration designed to be as readable as possible, it's also extremely easy to add a new service or a new endpoint to monitor.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Alerting&lt;/strong&gt;: While having a pretty visual dashboard is useful to keep track of the state of your application(s), you probably don't want to stare at it all day. Thus, notifications via Slack, Mattermost, Messagebird, PagerDuty, Twilio, Google chat and Teams are supported out of the box with the ability to configure a custom alerting provider for any needs you might have, whether it be a different provider or a custom application that manages automated rollbacks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Metrics&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Low resource consumption&lt;/strong&gt;: As with most Go applications, the resource footprint that this application requires is negligibly small.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#badges"&gt;Badges&lt;/a&gt;&lt;/strong&gt;: &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/7d/badge.svg?sanitize=true" alt="Uptime 7d" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/24h/badge.svg?sanitize=true" alt="Response time 24h" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dark mode&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/dashboard-conditions.jpg" alt="Gatus dashboard conditions" /&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --name gatus ghcr.io/twin/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use Docker Hub if you prefer:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --name gatus twinproduction/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to create your own configuration, see &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#docker"&gt;Docker&lt;/a&gt; for information on how to mount a configuration file.&lt;/p&gt; 
&lt;p&gt;Here's a simple example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: website                 # Name of your endpoint, can be anything
    url: "https://twin.sh/health"
    interval: 5m                  # Duration to wait between every status check (default: 60s)
    conditions:
      - "[STATUS] == 200"         # Status must be 200
      - "[BODY].status == UP"     # The json path "$.status" must be equal to UP
      - "[RESPONSE_TIME] &amp;lt; 300"   # Response time must be under 300ms

  - name: make-sure-header-is-rendered
    url: "https://example.org/"
    interval: 60s
    conditions:
      - "[STATUS] == 200"                          # Status must be 200
      - "[BODY] == pat(*&amp;lt;h1&amp;gt;Example Domain&amp;lt;/h1&amp;gt;*)" # Body must contain the specified header
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example would look similar to this:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/example.jpg" alt="Simple example" /&gt;&lt;/p&gt; 
&lt;p&gt;By default, the configuration file is expected to be at &lt;code&gt;config/config.yaml&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can specify a custom path by setting the &lt;code&gt;GATUS_CONFIG_PATH&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;p&gt;If &lt;code&gt;GATUS_CONFIG_PATH&lt;/code&gt; points to a directory, all &lt;code&gt;*.yaml&lt;/code&gt; and &lt;code&gt;*.yml&lt;/code&gt; files inside said directory and its subdirectories are merged like so:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All maps/objects are deep merged (i.e. you could define &lt;code&gt;alerting.slack&lt;/code&gt; in one file and &lt;code&gt;alerting.pagerduty&lt;/code&gt; in another file)&lt;/li&gt; 
 &lt;li&gt;All slices/arrays are appended (i.e. you can define &lt;code&gt;endpoints&lt;/code&gt; in multiple files and each endpoint will be added to the final list of endpoints)&lt;/li&gt; 
 &lt;li&gt;Parameters with a primitive value (e.g. &lt;code&gt;metrics&lt;/code&gt;, &lt;code&gt;alerting.slack.webhook-url&lt;/code&gt;, etc.) may only be defined once to forcefully avoid any ambiguity 
  &lt;ul&gt; 
   &lt;li&gt;To clarify, this also means that you could not define &lt;code&gt;alerting.slack.webhook-url&lt;/code&gt; in two files with different values. All files are merged into one before they are processed. This is by design.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 You can also use environment variables in the configuration file (e.g. &lt;code&gt;$DOMAIN&lt;/code&gt;, &lt;code&gt;${DOMAIN}&lt;/code&gt;)&lt;/p&gt; 
 &lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples/docker-compose-postgres-storage/config/config.yaml"&gt;examples/docker-compose-postgres-storage/config/config.yaml&lt;/a&gt; for an example.&lt;/p&gt; 
 &lt;p&gt;When your configuration parameter contains a &lt;code&gt;$&lt;/code&gt; symbol, you have to escape &lt;code&gt;$&lt;/code&gt; with &lt;code&gt;$$&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to test it locally, see &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#docker"&gt;Docker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;metrics&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to expose metrics at &lt;code&gt;/metrics&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#storage"&gt;Storage configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#alerting"&gt;Alerting configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;announcements&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#announcements"&gt;Announcements configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#endpoints"&gt;Endpoints configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#external-endpoints"&gt;External Endpoints configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#security"&gt;Security configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;concurrency&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Maximum number of endpoints/suites to monitor concurrently. Set to &lt;code&gt;0&lt;/code&gt; for unlimited. See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#concurrency"&gt;Concurrency&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;disable-monitoring-lock&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#disable-monitoring-lock"&gt;disable the monitoring lock&lt;/a&gt;. &lt;strong&gt;Deprecated&lt;/strong&gt;: Use &lt;code&gt;concurrency: 0&lt;/code&gt; instead.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;skip-invalid-config-update&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to ignore invalid configuration update. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#reloading-configuration-on-the-fly"&gt;Reloading configuration on the fly&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Web configuration.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web.address&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Address to listen on.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;0.0.0.0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web.port&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Port to listen on.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;8080&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web.read-buffer-size&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Buffer size for reading requests from a connection. Also limit for the maximum header size.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;8192&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web.tls.certificate-file&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Optional public certificate file for TLS in PEM format.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web.tls.private-key-file&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Optional private key file for TLS in PEM format.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;UI configuration.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title"&gt;Title of the document&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;Health Dashboard ǀ Gatus&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.description&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Meta description for the page.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;Gatus is an advanced...&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.header&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Header at the top of the dashboard.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;Gatus&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.logo&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;URL to the logo to display.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.link&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Link to open when the logo is clicked.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.buttons&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of buttons to display below the header.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.buttons[].name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Text to display on the button.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.buttons[].link&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Link to open when the button is clicked.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.custom-css&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Custom CSS&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.dark-mode&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to enable dark mode by default. Note that this is superseded by the user's operating system theme preferences.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.default-sort-by&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default sorting option for endpoints in the dashboard. Can be &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;, or &lt;code&gt;health&lt;/code&gt;. Note that user preferences override this.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.default-filter-by&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default filter option for endpoints in the dashboard. Can be &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;failing&lt;/code&gt;, or &lt;code&gt;unstable&lt;/code&gt;. Note that user preferences override this.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;none&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#maintenance"&gt;Maintenance configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you want more verbose logging, you may set the &lt;code&gt;GATUS_LOG_LEVEL&lt;/code&gt; environment variable to &lt;code&gt;DEBUG&lt;/code&gt;. Conversely, if you want less verbose logging, you can set the aforementioned environment variable to &lt;code&gt;WARN&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt; or &lt;code&gt;FATAL&lt;/code&gt;. The default value for &lt;code&gt;GATUS_LOG_LEVEL&lt;/code&gt; is &lt;code&gt;INFO&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Endpoints&lt;/h3&gt; 
&lt;p&gt;Endpoints are URLs, applications, or services that you want to monitor. Each endpoint has a list of conditions that are evaluated on an interval that you define. If any condition fails, the endpoint is considered as unhealthy. You can then configure alerts to be triggered when an endpoint is unhealthy once a certain threshold is reached.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of endpoints to monitor.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].enabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to monitor the endpoint.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Name of the endpoint. Can be anything.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Group name. Used to group multiple endpoints together on the dashboard. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#endpoint-groups"&gt;Endpoint groups&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;URL to send the request to.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].method&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Request method.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].conditions&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Conditions used to determine the health of the endpoint. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#conditions"&gt;Conditions&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].interval&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Duration to wait between every status check.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;60s&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].graphql&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to wrap the body in a query param (&lt;code&gt;{"query":"$body"}&lt;/code&gt;).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].body&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Request body.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].headers&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Request headers.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].dns&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for an endpoint of type DNS. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-dns-queries"&gt;Monitoring an endpoint using DNS queries&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].dns.query-type&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Query type (e.g. MX).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].dns.query-name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Query name (e.g. example.com).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ssh&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for an endpoint of type SSH. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-ssh"&gt;Monitoring an endpoint using SSH&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ssh.username&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH username (e.g. example).&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ssh.password&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH password (e.g. password).&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].alerts&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of all alerts for a given endpoint. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#alerting"&gt;Alerting&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].maintenance-windows&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of all maintenance windows for a given endpoint. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#maintenance"&gt;Maintenance&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].client&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;UI configuration at the endpoint level.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.hide-conditions&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to hide conditions from the results. Note that this only hides conditions from results evaluated from the moment this was enabled.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.hide-hostname&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to hide the hostname from the results.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.hide-port&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to hide the port from the results.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.hide-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to hide the URL from the results. Useful if the URL contains a token.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.dont-resolve-failed-conditions&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to resolve failed conditions for the UI.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.badge.response-time&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of response time thresholds. Each time a threshold is reached, the badge has a different color.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[50, 200, 300, 500, 750]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].extra-labels&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Extra labels to add to the metrics. Useful for grouping endpoints together.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].always-run&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;(SUITES ONLY) Whether to execute this endpoint even if previous endpoints in the suite failed.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].store&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;(SUITES ONLY) Map of values to extract from the response and store in the suite context (stored even on failure).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;You may use the following placeholders in the body (&lt;code&gt;endpoints[].body&lt;/code&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_NAME]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].name&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_GROUP]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].group&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_URL]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].url&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[LOCAL_ADDRESS]&lt;/code&gt; (resolves to the local IP and port like &lt;code&gt;192.0.2.1:25&lt;/code&gt; or &lt;code&gt;[2001:db8::1]:80&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[RANDOM_STRING_N]&lt;/code&gt; (resolves to a random string of numbers and letters of length N (max: 8192))&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;External Endpoints&lt;/h3&gt; 
&lt;p&gt;Unlike regular endpoints, external endpoints are not monitored by Gatus, but they are instead pushed programmatically. This allows you to monitor anything you want, even when what you want to check lives in an environment that would not normally be accessible by Gatus.&lt;/p&gt; 
&lt;p&gt;For instance:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can create your own agent that lives in a private network and pushes the status of your services to a publicly-exposed Gatus instance&lt;/li&gt; 
 &lt;li&gt;You can monitor services that are not supported by Gatus&lt;/li&gt; 
 &lt;li&gt;You can implement your own monitoring system while using Gatus as the dashboard&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of endpoints to monitor.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].enabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to monitor the endpoint.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Name of the endpoint. Can be anything.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Group name. Used to group multiple endpoints together on the dashboard. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#endpoint-groups"&gt;Endpoint groups&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Bearer token required to push status to.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].alerts&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of all alerts for a given endpoint. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#alerting"&gt;Alerting&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].heartbeat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Heartbeat configuration for monitoring when the external endpoint stops sending updates.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].heartbeat.interval&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Expected interval between updates. If no update is received within this interval, alerts will be triggered. Must be at least 10s.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;0&lt;/code&gt; (disabled)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;external-endpoints:
  - name: ext-ep-test
    group: core
    token: "potato"
    heartbeat:
      interval: 30m  # Automatically create a failure if no update is received within 30 minutes
    alerts:
      - type: discord
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To push the status of an external endpoint, you can use &lt;a href="https://github.com/TwiN/gatus-cli"&gt;gatus-cli&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;gatus-cli external-endpoint push --url https://status.example.org --key "core_ext-ep-test" --token "potato" --success
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or send an HTTP request:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;POST /api/v1/endpoints/{key}/external?success={success}&amp;amp;error={error}&amp;amp;duration={duration}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;Using the example configuration above, the key would be &lt;code&gt;core_ext-ep-test&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{success}&lt;/code&gt; is a boolean (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;) value indicating whether the health check was successful or not.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{error}&lt;/code&gt; (optional): a string describing the reason for a failed health check. If {success} is false, this should contain the error message; if the check is successful.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; (optional): the time that the request took as a duration string (e.g. 10s).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You must also pass the token as a &lt;code&gt;Bearer&lt;/code&gt; token in the &lt;code&gt;Authorization&lt;/code&gt; header.&lt;/p&gt; 
&lt;h3&gt;Suites (ALPHA)&lt;/h3&gt; 
&lt;p&gt;Suites are collections of endpoints that are executed sequentially with a shared context. This allows you to create complex monitoring scenarios where the result from one endpoint can be used in subsequent endpoints, enabling workflow-style monitoring.&lt;/p&gt; 
&lt;p&gt;Here are a few cases in which suites could be useful:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Testing multi-step authentication flows (login -&amp;gt; access protected resource -&amp;gt; logout)&lt;/li&gt; 
 &lt;li&gt;API workflows where you need to chain requests (create resource -&amp;gt; update -&amp;gt; verify -&amp;gt; delete)&lt;/li&gt; 
 &lt;li&gt;Monitoring business processes that span multiple services&lt;/li&gt; 
 &lt;li&gt;Validating data consistency across multiple endpoints&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of suites to monitor.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].enabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to monitor the suite.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Name of the suite. Must be unique.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Group name. Used to group multiple suites together on the dashboard.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].interval&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Duration to wait between suite executions.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;10m&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].timeout&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Maximum duration for the entire suite execution.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;5m&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].context&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Initial context values that can be referenced by endpoints.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].endpoints&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of endpoints to execute sequentially.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].endpoints[].store&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Map of values to extract from the response and store in the suite context (stored even on failure).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;suites[].endpoints[].always-run&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to execute this endpoint even if previous endpoints in the suite failed.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Suite-level alerts are not supported yet. Configure alerts on individual endpoints within the suite instead.&lt;/p&gt; 
&lt;h4&gt;Using Context in Endpoints&lt;/h4&gt; 
&lt;p&gt;Once values are stored in the context, they can be referenced in subsequent endpoints:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In the URL: &lt;code&gt;https://api.example.com/users/[CONTEXT].user_id&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;In headers: &lt;code&gt;Authorization: Bearer [CONTEXT].auth_token&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;In the body: &lt;code&gt;{"user_id": "[CONTEXT].user_id"}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;In conditions: &lt;code&gt;[BODY].server_ip == [CONTEXT].server_ip&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that context/store keys are limited to A-Z, a-z, 0-9, underscores (&lt;code&gt;_&lt;/code&gt;), and hyphens (&lt;code&gt;-&lt;/code&gt;).&lt;/p&gt; 
&lt;h4&gt;Example Suite Configuration&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;suites:
  - name: item-crud-workflow
    group: api-tests
    interval: 5m
    context:
      price: "19.99"  # Initial static value in context
    endpoints:
      # Step 1: Create an item and store the item ID 
      - name: create-item
        url: https://api.example.com/items
        method: POST
        body: '{"name": "Test Item", "price": "[CONTEXT].price"}'
        conditions:
          - "[STATUS] == 201"
          - "len([BODY].id) &amp;gt; 0"
          - "[BODY].price == [CONTEXT].price"
        store:
          itemId: "[BODY].id"
        alerts:
          - type: slack
            description: "Failed to create item"
            
      # Step 2: Update the item using the stored item ID
      - name: update-item
        url: https://api.example.com/items/[CONTEXT].itemId
        method: PUT
        body: '{"price": "24.99"}'
        conditions:
          - "[STATUS] == 200"
        alerts:
          - type: slack
            description: "Failed to update item"
        
      # Step 3: Fetch the item and validate the price
      - name: get-item
        url: https://api.example.com/items/[CONTEXT].itemId
        method: GET
        conditions:
          - "[STATUS] == 200"
          - "[BODY].price == 24.99"
        alerts:
          - type: slack
            description: "Item price did not update correctly"
            
      # Step 4: Delete the item (always-run: true to ensure cleanup even if step 2 or 3 fails)
      - name: delete-item
        url: https://api.example.com/items/[CONTEXT].itemId
        method: DELETE
        always-run: true
        conditions:
          - "[STATUS] == 204"
        alerts:
          - type: slack
            description: "Failed to delete item"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The suite will be considered successful only if all required endpoints pass their conditions.&lt;/p&gt; 
&lt;h3&gt;Conditions&lt;/h3&gt; 
&lt;p&gt;Here are some examples of conditions you can use:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Condition&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Passing values&lt;/th&gt; 
   &lt;th&gt;Failing values&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS] == 200&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Status must be equal to 200&lt;/td&gt; 
   &lt;td align="left"&gt;200&lt;/td&gt; 
   &lt;td&gt;201, 404, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS] &amp;lt; 300&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Status must lower than 300&lt;/td&gt; 
   &lt;td align="left"&gt;200, 201, 299&lt;/td&gt; 
   &lt;td&gt;301, 302, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS] &amp;lt;= 299&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Status must be less than or equal to 299&lt;/td&gt; 
   &lt;td align="left"&gt;200, 201, 299&lt;/td&gt; 
   &lt;td&gt;301, 302, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS] &amp;gt; 400&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Status must be greater than 400&lt;/td&gt; 
   &lt;td align="left"&gt;401, 402, 403, 404&lt;/td&gt; 
   &lt;td&gt;400, 200, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS] == any(200, 429)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Status must be either 200 or 429&lt;/td&gt; 
   &lt;td align="left"&gt;200, 429&lt;/td&gt; 
   &lt;td&gt;201, 400, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[CONNECTED] == true&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Connection to host must've been successful&lt;/td&gt; 
   &lt;td align="left"&gt;true&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[RESPONSE_TIME] &amp;lt; 500&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Response time must be below 500ms&lt;/td&gt; 
   &lt;td align="left"&gt;100ms, 200ms, 300ms&lt;/td&gt; 
   &lt;td&gt;500ms, 501ms&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[IP] == 127.0.0.1&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Target IP must be 127.0.0.1&lt;/td&gt; 
   &lt;td align="left"&gt;127.0.0.1&lt;/td&gt; 
   &lt;td&gt;0.0.0.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY] == 1&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The body must be equal to 1&lt;/td&gt; 
   &lt;td align="left"&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{}&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].user.name == john&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;JSONPath value of &lt;code&gt;$.user.name&lt;/code&gt; is equal to &lt;code&gt;john&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"user":{"name":"john"}}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].data[0].id == 1&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;JSONPath value of &lt;code&gt;$.data[0].id&lt;/code&gt; is equal to 1&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"data":[{"id":1}]}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].age == [BODY].id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;JSONPath value of &lt;code&gt;$.age&lt;/code&gt; is equal JSONPath &lt;code&gt;$.id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"age":1,"id":1}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;len([BODY].data) &amp;lt; 5&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Array at JSONPath &lt;code&gt;$.data&lt;/code&gt; has less than 5 elements&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"data":[{"id":1}]}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;len([BODY].name) == 8&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;String at JSONPath &lt;code&gt;$.name&lt;/code&gt; has a length of 8&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"name":"john.doe"}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{"name":"bob"}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;has([BODY].errors) == false&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;JSONPath &lt;code&gt;$.errors&lt;/code&gt; does not exist&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"name":"john.doe"}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{"errors":[]}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;has([BODY].users) == true&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;JSONPath &lt;code&gt;$.users&lt;/code&gt; exists&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"users":[]}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].name == pat(john*)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;String at JSONPath &lt;code&gt;$.name&lt;/code&gt; matches pattern &lt;code&gt;john*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"name":"john.doe"}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{"name":"bob"}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].id == any(1, 2)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Value at JSONPath &lt;code&gt;$.id&lt;/code&gt; is equal to &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;1, 2&lt;/td&gt; 
   &lt;td&gt;3, 4, 5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[CERTIFICATE_EXPIRATION] &amp;gt; 48h&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Certificate expiration is more than 48h away&lt;/td&gt; 
   &lt;td align="left"&gt;49h, 50h, 123h&lt;/td&gt; 
   &lt;td&gt;1h, 24h, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[DOMAIN_EXPIRATION] &amp;gt; 720h&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The domain must expire in more than 720h&lt;/td&gt; 
   &lt;td align="left"&gt;4000h&lt;/td&gt; 
   &lt;td&gt;1h, 24h, ...&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Placeholders&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Placeholder&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Example of resolved value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the HTTP status of the request&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;404&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[RESPONSE_TIME]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the response time the request took, in ms&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[IP]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the IP of the target host&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;192.168.0.232&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the response body. Supports JSONPath.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"name":"john.doe"}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[CONNECTED]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into whether a connection could be established&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[CERTIFICATE_EXPIRATION]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the duration before certificate expiration (valid units are "s", "m", "h".)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;24h&lt;/code&gt;, &lt;code&gt;48h&lt;/code&gt;, 0 (if not protocol with certs)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[DOMAIN_EXPIRATION]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the duration before the domain expires (valid units are "s", "m", "h".)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;24h&lt;/code&gt;, &lt;code&gt;48h&lt;/code&gt;, &lt;code&gt;1234h56m78s&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[DNS_RCODE]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the DNS status of the response&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;NOERROR&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Functions&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Function&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;len&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;If the given path leads to an array, returns its length. Otherwise, the JSON at the given path is minified and converted to a string, and the resulting number of characters is returned. Works only with the &lt;code&gt;[BODY]&lt;/code&gt; placeholder.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;len([BODY].username) &amp;gt; 8&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;has&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; based on whether a given path is valid. Works only with the &lt;code&gt;[BODY]&lt;/code&gt; placeholder.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;has([BODY].errors) == false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;pat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Specifies that the string passed as parameter should be evaluated as a pattern. Works only with &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[IP] == pat(192.168.*)&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;any&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Specifies that any one of the values passed as parameters is a valid value. Works only with &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].ip == any(127.0.0.1, ::1)&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 Use &lt;code&gt;pat&lt;/code&gt; only when you need to. &lt;code&gt;[STATUS] == pat(2*)&lt;/code&gt; is a lot more expensive than &lt;code&gt;[STATUS] &amp;lt; 300&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Announcements&lt;/h3&gt; 
&lt;p&gt;System-wide announcements allow you to display important messages at the top of the status page. These can be used to inform users about planned maintenance, ongoing issues, or general information.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;announcements&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of announcements to display&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;announcements[].timestamp&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;UTC timestamp when the announcement was made (RFC3339 format)&lt;/td&gt; 
   &lt;td align="left"&gt;Required&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;announcements[].type&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Type of announcement. Valid values: &lt;code&gt;outage&lt;/code&gt;, &lt;code&gt;warning&lt;/code&gt;, &lt;code&gt;information&lt;/code&gt;, &lt;code&gt;operational&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"none"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;announcements[].message&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The message to display to users&lt;/td&gt; 
   &lt;td align="left"&gt;Required&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Types:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;outage&lt;/strong&gt;: Indicates service disruptions or critical issues (red theme)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;warning&lt;/strong&gt;: Indicates potential issues or important notices (yellow theme)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;information&lt;/strong&gt;: General information or updates (blue theme)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;operational&lt;/strong&gt;: Indicates resolved issues or normal operations (green theme)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;none&lt;/strong&gt;: Neutral announcements with no specific severity (gray theme, default if none are specified)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example Configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;announcements:
  - timestamp: 2025-08-15T14:00:00Z
    type: outage
    message: "Scheduled maintenance on database servers from 14:00 to 16:00 UTC"
  - timestamp: 2025-08-15T16:15:00Z
    type: operational  
    message: "Database maintenance completed successfully. All systems operational."
  - timestamp: 2025-08-15T12:00:00Z
    type: information
    message: "New monitoring dashboard features will be deployed next week"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Storage&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Storage configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage.path&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Path to persist the data in. Only supported for types &lt;code&gt;sqlite&lt;/code&gt; and &lt;code&gt;postgres&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage.type&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Type of storage. Valid types: &lt;code&gt;memory&lt;/code&gt;, &lt;code&gt;sqlite&lt;/code&gt;, &lt;code&gt;postgres&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"memory"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage.caching&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to use write-through caching. Improves loading time for large dashboards. &lt;br /&gt;Only supported if &lt;code&gt;storage.type&lt;/code&gt; is &lt;code&gt;sqlite&lt;/code&gt; or &lt;code&gt;postgres&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage.maximum-number-of-results&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The maximum number of results that an endpoint can have&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;100&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage.maximum-number-of-events&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The maximum number of events that an endpoint can have&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;50&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The results for each endpoint health check as well as the data for uptime and the past events must be persisted so that they can be displayed on the dashboard. These parameters allow you to configure the storage in question.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If &lt;code&gt;storage.type&lt;/code&gt; is &lt;code&gt;memory&lt;/code&gt; (default):&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;# Note that this is the default value, and you can omit the storage configuration altogether to achieve the same result.
# Because the data is stored in memory, the data will not survive a restart.
storage:
  type: memory
  maximum-number-of-results: 200
  maximum-number-of-events: 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;If &lt;code&gt;storage.type&lt;/code&gt; is &lt;code&gt;sqlite&lt;/code&gt;, &lt;code&gt;storage.path&lt;/code&gt; must not be blank:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;storage:
  type: sqlite
  path: data.db
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples/docker-compose-sqlite-storage"&gt;examples/docker-compose-sqlite-storage&lt;/a&gt; for an example.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If &lt;code&gt;storage.type&lt;/code&gt; is &lt;code&gt;postgres&lt;/code&gt;, &lt;code&gt;storage.path&lt;/code&gt; must be the connection URL:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;storage:
  type: postgres
  path: "postgres://user:password@127.0.0.1:5432/gatus?sslmode=disable"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples/docker-compose-postgres-storage"&gt;examples/docker-compose-postgres-storage&lt;/a&gt; for an example.&lt;/p&gt; 
&lt;h3&gt;Client configuration&lt;/h3&gt; 
&lt;p&gt;In order to support a wide range of environments, each monitored endpoint has a unique configuration for the client used to send the request.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.insecure&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to skip verifying the server's certificate chain and host name.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.ignore-redirect&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to ignore redirects (true) or follow them (false, default).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.timeout&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Duration before timing out.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;10s&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.dns-resolver&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Override the DNS resolver using the format &lt;code&gt;{proto}://{host}:{port}&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.oauth2&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;OAuth2 client configuration.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.oauth2.token-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The token endpoint URL&lt;/td&gt; 
   &lt;td align="left"&gt;required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.oauth2.client-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The client id which should be used for the &lt;code&gt;Client credentials flow&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.oauth2.client-secret&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The client secret which should be used for the &lt;code&gt;Client credentials flow&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.oauth2.scopes[]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;A list of &lt;code&gt;scopes&lt;/code&gt; which should be used for the &lt;code&gt;Client credentials flow&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;required &lt;code&gt;[""]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.proxy-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The URL of the proxy to use for the client&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.identity-aware-proxy&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Google Identity-Aware-Proxy client configuration.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.identity-aware-proxy.audience&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The Identity-Aware-Proxy audience. (client-id of the IAP oauth2 credential)&lt;/td&gt; 
   &lt;td align="left"&gt;required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.tls.certificate-file&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Path to a client certificate (in PEM format) for mTLS configurations.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.tls.private-key-file&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Path to a client private key (in PEM format) for mTLS configurations.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.tls.renegotiation&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Type of renegotiation support to provide. (&lt;code&gt;never&lt;/code&gt;, &lt;code&gt;freely&lt;/code&gt;, &lt;code&gt;once&lt;/code&gt;).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"never"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.network&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The network to use for ICMP endpoint client (&lt;code&gt;ip&lt;/code&gt;, &lt;code&gt;ip4&lt;/code&gt; or &lt;code&gt;ip6&lt;/code&gt;).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"ip"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.tunnel&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Name of the SSH tunnel to use for this endpoint. See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#tunneling"&gt;Tunneling&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📝 Some of these parameters are ignored based on the type of endpoint. For instance, there's no certificate involved in ICMP requests (ping), therefore, setting &lt;code&gt;client.insecure&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; for an endpoint of that type will not do anything.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This default configuration is as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;client:
  insecure: false
  ignore-redirect: false
  timeout: 10s
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that this configuration is only available under &lt;code&gt;endpoints[]&lt;/code&gt;, &lt;code&gt;alerting.mattermost&lt;/code&gt; and &lt;code&gt;alerting.custom&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Here's an example with the client configuration under &lt;code&gt;endpoints[]&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: website
    url: "https://twin.sh/health"
    client:
      insecure: false
      ignore-redirect: false
      timeout: 10s
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example shows how you can specify a custom DNS resolver:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: with-custom-dns-resolver
    url: "https://your.health.api/health"
    client:
      dns-resolver: "tcp://8.8.8.8:53"
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example shows how you can use the &lt;code&gt;client.oauth2&lt;/code&gt; configuration to query a backend API with &lt;code&gt;Bearer token&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: with-custom-oauth2
    url: "https://your.health.api/health"
    client:
      oauth2:
        token-url: https://your-token-server/token
        client-id: 00000000-0000-0000-0000-000000000000
        client-secret: your-client-secret
        scopes: ['https://your.health.api/.default']
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example shows how you can use the &lt;code&gt;client.identity-aware-proxy&lt;/code&gt; configuration to query a backend API with &lt;code&gt;Bearer token&lt;/code&gt; using Google Identity-Aware-Proxy:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: with-custom-iap
    url: "https://my.iap.protected.app/health"
    client:
      identity-aware-proxy:
        audience: "XXXXXXXX-XXXXXXXXXXXX.apps.googleusercontent.com"
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📝 Note that Gatus will use the &lt;a href="https://cloud.google.com/docs/authentication/application-default-credentials"&gt;gcloud default credentials&lt;/a&gt; within its environment to generate the token.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This example shows you how you can use the &lt;code&gt;client.tls&lt;/code&gt; configuration to perform an mTLS query to a backend API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: website
    url: "https://your.mtls.protected.app/health"
    client:
      tls:
        certificate-file: /path/to/user_cert.pem
        private-key-file: /path/to/user_key.pem
        renegotiation: once
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📝 Note that if running in a container, you must volume mount the certificate and key into the container.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Tunneling&lt;/h3&gt; 
&lt;p&gt;Gatus supports SSH tunneling to monitor internal services through jump hosts or bastion servers. This is particularly useful for monitoring services that are not directly accessible from where Gatus is deployed.&lt;/p&gt; 
&lt;p&gt;SSH tunnels are defined globally in the &lt;code&gt;tunneling&lt;/code&gt; section and then referenced by name in endpoint client configurations.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;tunneling&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH tunnel configurations&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;tunneling.&amp;lt;tunnel-name&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for a named SSH tunnel&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;tunneling.&amp;lt;tunnel-name&amp;gt;.type&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Type of tunnel (currently only &lt;code&gt;SSH&lt;/code&gt; is supported)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;tunneling.&amp;lt;tunnel-name&amp;gt;.host&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH server hostname or IP address&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;tunneling.&amp;lt;tunnel-name&amp;gt;.port&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH server port&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;22&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;tunneling.&amp;lt;tunnel-name&amp;gt;.username&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH username&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;tunneling.&amp;lt;tunnel-name&amp;gt;.password&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH password (use either this or private-key)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;tunneling.&amp;lt;tunnel-name&amp;gt;.private-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH private key in PEM format (use either this or password)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.tunnel&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Name of the tunnel to use for this endpoint&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;tunneling:
  production:
    type: SSH
    host: "jumphost.example.com"
    username: "monitoring"
    private-key: |
      -----BEGIN RSA PRIVATE KEY-----
      MIIEpAIBAAKCAQEA...
      -----END RSA PRIVATE KEY-----

endpoints:
  - name: "internal-api"
    url: "http://internal-api.example.com:8080/health"
    client:
      tunnel: "production"
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;WARNING&lt;/strong&gt;:: Tunneling may introduce additional latency, especially if the connection to the tunnel is retried frequently. This may lead to inaccurate response time measurements.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Alerting&lt;/h3&gt; 
&lt;p&gt;Gatus supports multiple alerting providers, such as Slack and PagerDuty, and supports different alerts for each individual endpoints with configurable descriptions and thresholds.&lt;/p&gt; 
&lt;p&gt;Alerts are configured at the endpoint level like so:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of all alerts for a given endpoint.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].type&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Type of alert. &lt;br /&gt;See table below for all valid types.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].enabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to enable the alert.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].failure-threshold&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number of failures in a row needed before triggering the alert.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].success-threshold&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number of successes in a row before an ongoing incident is marked as resolved.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].minimum-reminder-interval&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Minimum time interval between alert reminders. E.g. &lt;code&gt;"30m"&lt;/code&gt;, &lt;code&gt;"1h45m30s"&lt;/code&gt; or &lt;code&gt;"24h"&lt;/code&gt;. If empty or &lt;code&gt;0&lt;/code&gt;, reminders are disabled. Cannot be lower than &lt;code&gt;5m&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].send-on-resolved&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to send a notification once a triggered alert is marked as resolved.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].description&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Description of the alert. Will be included in the alert sent.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].provider-override&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Alerting provider configuration override for the given alert type&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Here's an example of what an alert configuration might look like at the endpoint level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also override global provider configuration by using &lt;code&gt;alerts[].provider-override&lt;/code&gt;, like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
        provider-override:
          webhook-url: "https://hooks.slack.com/services/**********/**********/**********"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📝 If an alerting provider is not properly configured, all alerts configured with the provider's type will be ignored.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.awsses&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;awsses&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-aws-ses-alerts"&gt;Configuring AWS SES alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for custom actions on failure or alerts. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-custom-alerts"&gt;Configuring Custom alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;datadog&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-datadog-alerts"&gt;Configuring Datadog alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;discord&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-discord-alerts"&gt;Configuring Discord alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;email&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-email-alerts"&gt;Configuring Email alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitea&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gitea&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gitea-alerts"&gt;Configuring Gitea alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.github&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;github&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-github-alerts"&gt;Configuring GitHub alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gitlab&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gitlab-alerts"&gt;Configuring GitLab alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;googlechat&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-google-chat-alerts"&gt;Configuring Google Chat alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gotify&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gotify-alerts"&gt;Configuring Gotify alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.homeassistant&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;homeassistant&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-homeassistant-alerts"&gt;Configuring HomeAssistant alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ifttt&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;ifttt&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-ifttt-alerts"&gt;Configuring IFTTT alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;ilert&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-ilert-alerts"&gt;Configuring ilert alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;incident-io&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-incidentio-alerts"&gt;Configuring Incident.io alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.line&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;line&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-line-alerts"&gt;Configuring Line alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;matrix&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-matrix-alerts"&gt;Configuring Matrix alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;mattermost&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-mattermost-alerts"&gt;Configuring Mattermost alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;messagebird&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-messagebird-alerts"&gt;Configuring Messagebird alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.n8n&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;n8n&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-n8n-alerts"&gt;Configuring n8n alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;newrelic&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-new-relic-alerts"&gt;Configuring New Relic alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;ntfy&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-ntfy-alerts"&gt;Configuring Ntfy alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;opsgenie&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-opsgenie-alerts"&gt;Configuring Opsgenie alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;pagerduty&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-pagerduty-alerts"&gt;Configuring PagerDuty alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;plivo&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-plivo-alerts"&gt;Configuring Plivo alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;pushover&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-pushover-alerts"&gt;Configuring Pushover alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.rocketchat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;rocketchat&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-rocketchat-alerts"&gt;Configuring Rocket.Chat alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;sendgrid&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-sendgrid-alerts"&gt;Configuring SendGrid alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;signal&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-signal-alerts"&gt;Configuring Signal alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signl4&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;signl4&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-signl4-alerts"&gt;Configuring SIGNL4 alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;slack&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-slack-alerts"&gt;Configuring Slack alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;splunk&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-splunk-alerts"&gt;Configuring Splunk alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.squadcast&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;squadcast&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-squadcast-alerts"&gt;Configuring Squadcast alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;teams&lt;/code&gt;. &lt;em&gt;(Deprecated)&lt;/em&gt; &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-teams-alerts-deprecated"&gt;Configuring Teams alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;teams-workflows&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-teams-workflow-alerts"&gt;Configuring Teams Workflow alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;telegram&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-telegram-alerts"&gt;Configuring Telegram alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Settings for alerts of type &lt;code&gt;twilio&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-twilio-alerts"&gt;Configuring Twilio alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;vonage&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-vonage-alerts"&gt;Configuring Vonage alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.webex&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;webex&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-webex-alerts"&gt;Configuring Webex alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zapier&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;zapier&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-zapier-alerts"&gt;Configuring Zapier alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;zulip&lt;/code&gt;. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-zulip-alerts"&gt;Configuring Zulip alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Configuring AWS SES alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Settings for alerts of type &lt;code&gt;aws-ses&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.access-key-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;AWS Access Key ID&lt;/td&gt; 
   &lt;td align="left"&gt;Optional &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.secret-access-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;AWS Secret Access Key&lt;/td&gt; 
   &lt;td align="left"&gt;Optional &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.region&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;AWS Region&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.from&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The Email address to send the emails from (should be registered in SES)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.to&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Comma separated list of email address to notify&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  aws-ses:
    access-key-id: "..."
    secret-access-key: "..."
    region: "us-east-1"
    from: "status@example.com"
    to: "user@example.com"

endpoints:
  - name: website
    interval: 30s
    url: "https://twin.sh/health"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: aws-ses
        failure-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the &lt;code&gt;access-key-id&lt;/code&gt; and &lt;code&gt;secret-access-key&lt;/code&gt; are not defined Gatus will fall back to IAM authentication.&lt;/p&gt; 
&lt;p&gt;Make sure you have the ability to use &lt;code&gt;ses:SendEmail&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Configuring Datadog alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;datadog&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog.api-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Datadog API key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog.site&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Datadog site (e.g., datadoghq.com, datadoghq.eu)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"datadoghq.com"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog.tags&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Additional tags to include&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.datadog.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.datadog.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  datadog:
    api-key: "YOUR_API_KEY"
    site: "datadoghq.com"  # or datadoghq.eu for EU region
    tags:
      - "environment:production"
      - "team:platform"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: datadog
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Discord alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;discord&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Discord Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Title of the notification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;":helmet_with_white_cross: Gatus"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.message-content&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Message content to send before the embed (useful for pinging users/roles, e.g. &lt;code&gt;&amp;lt;@123&amp;gt;&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.discord.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  discord:
    webhook-url: "https://discord.com/api/webhooks/**********/**********"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: discord
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Email alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;email&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.from&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Email used to send the alert&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.username&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Username of the SMTP server used to send the alert. If empty, uses &lt;code&gt;alerting.email.from&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.password&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Password of the SMTP server used to send the alert. If empty, no authentication is performed.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.host&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Host of the mail server (e.g. &lt;code&gt;smtp.gmail.com&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.port&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Port the mail server is listening to (e.g. &lt;code&gt;587&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.to&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Email(s) to send the alerts to&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.client.insecure&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to skip TLS verification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.email.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  email:
    from: "from@example.com"
    username: "from@example.com"
    password: "hunter2"
    host: "mail.example.com"
    port: 587
    to: "recipient1@example.com,recipient2@example.com"
    client:
      insecure: false
    # You can also add group-specific to keys, which will
    # override the to key above for the specified groups
    overrides:
      - group: "core"
        to: "recipient3@example.com,recipient4@example.com"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: email
        description: "healthcheck failed"
        send-on-resolved: true

  - name: back-end
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
    alerts:
      - type: email
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠ Some mail servers are painfully slow.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Configuring Gitea alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitea&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gitea&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitea.repository-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Gitea repository URL (e.g. &lt;code&gt;https://gitea.com/TwiN/example&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitea.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Personal access token to use for authentication. &lt;br /&gt;Must have at least RW on issues and RO on metadata.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitea.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The Gitea alerting provider creates an issue prefixed with &lt;code&gt;alert(gatus):&lt;/code&gt; and suffixed with the endpoint's display name for each alert. If &lt;code&gt;send-on-resolved&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; on the endpoint alert, the issue will be automatically closed when the alert is resolved.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  gitea:
    repository-url: "https://gitea.com/TwiN/test"
    token: "349d63f16......"

endpoints:
  - name: example
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 75"
    alerts:
      - type: gitea
        failure-threshold: 2
        success-threshold: 3
        send-on-resolved: true
        description: "Everything's burning AAAAAHHHHHHHHHHHHHHH"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/gitea-alerts.png" alt="Gitea alert" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring GitHub alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.github&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;github&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.github.repository-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;GitHub repository URL (e.g. &lt;code&gt;https://github.com/TwiN/example&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.github.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Personal access token to use for authentication. &lt;br /&gt;Must have at least RW on issues and RO on metadata.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.github.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The GitHub alerting provider creates an issue prefixed with &lt;code&gt;alert(gatus):&lt;/code&gt; and suffixed with the endpoint's display name for each alert. If &lt;code&gt;send-on-resolved&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; on the endpoint alert, the issue will be automatically closed when the alert is resolved.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  github:
    repository-url: "https://github.com/TwiN/test"
    token: "github_pat_12345..."

endpoints:
  - name: example
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 75"
    alerts:
      - type: github
        failure-threshold: 2
        success-threshold: 3
        send-on-resolved: true
        description: "Everything's burning AAAAAHHHHHHHHHHHHHHH"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/github-alerts.png" alt="GitHub alert" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring GitLab alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gitlab&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;GitLab alert webhook URL (e.g. &lt;code&gt;https://gitlab.com/yourusername/example/alerts/notify/gatus/xxxxxxxxxxxxxxxx.json&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.authorization-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;GitLab alert authorization key.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.severity&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Override default severity (critical), can be one of &lt;code&gt;critical, high, medium, low, info, unknown&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.monitoring-tool&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Override the monitoring tool name (gatus)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"gatus"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.environment-name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Set gitlab environment's name. Required to display alerts on a dashboard.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.service&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Override endpoint display name&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The GitLab alerting provider creates an alert prefixed with &lt;code&gt;alert(gatus):&lt;/code&gt; and suffixed with the endpoint's display name for each alert. If &lt;code&gt;send-on-resolved&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; on the endpoint alert, the alert will be automatically closed when the alert is resolved. See &lt;a href="https://docs.gitlab.com/ee/operations/incident_management/integrations.html#configuration"&gt;https://docs.gitlab.com/ee/operations/incident_management/integrations.html#configuration&lt;/a&gt; to configure the endpoint.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  gitlab:
    webhook-url: "https://gitlab.com/hlidotbe/example/alerts/notify/gatus/xxxxxxxxxxxxxxxx.json"
    authorization-key: "12345"

endpoints:
  - name: example
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 75"
    alerts:
      - type: gitlab
        failure-threshold: 2
        success-threshold: 3
        send-on-resolved: true
        description: "Everything's burning AAAAAHHHHHHHHHHHHHHH"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/gitlab-alerts.png" alt="GitLab alert" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Google Chat alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;googlechat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Google Chat Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.client&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.googlechat.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  googlechat:
    webhook-url: "https://chat.googleapis.com/v1/spaces/*******/messages?key=**********&amp;amp;token=********"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: googlechat
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Gotify alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gotify&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify.server-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Gotify server URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Token that is used for authentication.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify.priority&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Priority of the alert according to Gotify standards.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;5&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Title of the notification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"Gatus: &amp;lt;endpoint&amp;gt;"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  gotify:
    server-url: "https://gotify.example"
    token: "**************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: gotify
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/gotify-alerts.png" alt="Gotify notifications" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring HomeAssistant alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default Value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.homeassistant.url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;HomeAssistant instance URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.homeassistant.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Long-lived access token from HomeAssistant&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.homeassistant.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration to use for endpoints with an alert of the appropriate type&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.homeassistant.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.homeassistant.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.homeassistant.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.homeassistant.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  homeassistant:
    url: "http://homeassistant:8123"  # URL of your HomeAssistant instance
    token: "YOUR_LONG_LIVED_ACCESS_TOKEN"  # Long-lived access token from HomeAssistant

endpoints:
  - name: my-service
    url: "https://my-service.com"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: homeassistant
        enabled: true
        send-on-resolved: true
        description: "My service health check"
        failure-threshold: 3
        success-threshold: 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The alerts will be sent as events to HomeAssistant with the event type &lt;code&gt;gatus_alert&lt;/code&gt;. The event data includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;status&lt;/code&gt;: "triggered" or "resolved"&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;endpoint&lt;/code&gt;: The name of the monitored endpoint&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;description&lt;/code&gt;: The alert description if provided&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;conditions&lt;/code&gt;: List of conditions and their results&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;failure_count&lt;/code&gt;: Number of consecutive failures (when triggered)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;success_count&lt;/code&gt;: Number of consecutive successes (when resolved)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can use these events in HomeAssistant automations to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Send notifications&lt;/li&gt; 
 &lt;li&gt;Control devices&lt;/li&gt; 
 &lt;li&gt;Trigger scenes&lt;/li&gt; 
 &lt;li&gt;Log to history&lt;/li&gt; 
 &lt;li&gt;And more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example HomeAssistant automation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;automation:
  - alias: "Gatus Alert Handler"
    trigger:
      platform: event
      event_type: gatus_alert
    action:
      - service: notify.notify
        data_template:
          title: "Gatus Alert: {{ trigger.event.data.event_data.endpoint }}"
          message: &amp;gt;
            Status: {{ trigger.event.data.event_data.status }}
            {% if trigger.event.data.event_data.description %}
            Description: {{ trigger.event.data.event_data.description }}
            {% endif %}
            {% for condition in trigger.event.data.event_data.conditions %}
            {{ '✅' if condition.success else '❌' }} {{ condition.condition }}
            {% endfor %}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get your HomeAssistant long-lived access token:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open HomeAssistant&lt;/li&gt; 
 &lt;li&gt;Click on your profile name (bottom left)&lt;/li&gt; 
 &lt;li&gt;Scroll down to "Long-Lived Access Tokens"&lt;/li&gt; 
 &lt;li&gt;Click "Create Token"&lt;/li&gt; 
 &lt;li&gt;Give it a name (e.g., "Gatus")&lt;/li&gt; 
 &lt;li&gt;Copy the token - you'll only see it once!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Configuring IFTTT alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ifttt&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;ifttt&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ifttt.webhook-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;IFTTT Webhook key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ifttt.event-name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;IFTTT event name&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ifttt.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ifttt.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ifttt.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ifttt.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.ifttt.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  ifttt:
    webhook-key: "YOUR_WEBHOOK_KEY"
    event-name: "gatus_alert"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: ifttt
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring ilert alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;ilert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert.integration-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;ilert Alert Source integration key&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.ilert.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;It is highly recommended to set &lt;code&gt;endpoints[].alerts[].send-on-resolved&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; for alerts of type &lt;code&gt;ilert&lt;/code&gt;, because unlike other alerts, the operation resulting from setting said parameter to &lt;code&gt;true&lt;/code&gt; will not create another alert but mark the alert as resolved on ilert instead.&lt;/p&gt; 
&lt;p&gt;Behavior:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;By default, &lt;code&gt;alerting.ilert.integration-key&lt;/code&gt; is used as the integration key&lt;/li&gt; 
 &lt;li&gt;If the endpoint being evaluated belongs to a group (&lt;code&gt;endpoints[].group&lt;/code&gt;) matching the value of &lt;code&gt;alerting.ilert.overrides[].group&lt;/code&gt;, the provider will use that override's integration key instead of &lt;code&gt;alerting.ilert.integration-key&lt;/code&gt;'s&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  ilert:
    integration-key: "********************************"
    # You can also add group-specific integration keys, which will
    # override the integration key above for the specified groups
    overrides:
      - group: "core"
        integration-key: "********************************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: ilert
        failure-threshold: 3
        success-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Incident.io alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;incident-io&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;url to trigger an alert event.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.auth-token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Token that is used for authentication.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.source-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Source URL&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.incident-io.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  incident-io:
    url: "*****************"
    auth-token: "********************************************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: incident-io
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In order to get the required alert source config id and authentication token, you must configure an HTTP alert source.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE:&lt;/em&gt;&lt;/strong&gt; the source config id is of the form &lt;code&gt;https://api.incident.io/v2/alert_events/http/$ID&lt;/code&gt; and the token is expected to be passed as a bearer token like so: &lt;code&gt;Authorization: Bearer $TOKEN&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Configuring Line alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.line&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;line&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.line.channel-access-token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Line Messaging API channel access token&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.line.user-ids&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of Line user IDs to send messages to (this can be user ids, room ids or group ids)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.line.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.line.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.line.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.line.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.line.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  line:
    channel-access-token: "YOUR_CHANNEL_ACCESS_TOKEN"
    user-ids:
      - "U1234567890abcdef" # This can be a group id, room id or user id
      - "U2345678901bcdefg"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: line
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Matrix alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;matrix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.server-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Homeserver URL&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;https://matrix-client.matrix.org&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.access-token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Bot user access token (see &lt;a href="https://webapps.stackexchange.com/q/131056"&gt;https://webapps.stackexchange.com/q/131056&lt;/a&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.internal-room-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Internal room ID of room to send alerts to (can be found in Room Settings &amp;gt; Advanced)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.matrix.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  matrix:
    server-url: "https://matrix-client.matrix.org"
    access-token: "123456"
    internal-room-id: "!example:matrix.org"

endpoints:
  - name: website
    interval: 5m
    url: "https://twin.sh/health"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: matrix
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Mattermost alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;mattermost&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Mattermost Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.channel&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Mattermost channel name override (optional)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.client&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.mattermost.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  mattermost:
    webhook-url: "http://**********/hooks/**********"
    client:
      insecure: true

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: mattermost
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/mattermost-alerts.png" alt="Mattermost notifications" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Messagebird alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;messagebird&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird.access-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Messagebird access key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird.originator&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The sender of the message&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird.recipients&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The recipients of the message&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Example of sending &lt;strong&gt;SMS&lt;/strong&gt; text message alert using Messagebird:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  messagebird:
    access-key: "..."
    originator: "31619191918"
    recipients: "31619191919,31619191920"

endpoints:
  - name: website
    interval: 5m
    url: "https://twin.sh/health"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: messagebird
        failure-threshold: 3
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring New Relic alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;newrelic&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic.api-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;New Relic API key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic.account-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;New Relic account ID&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic.region&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Region (US or EU)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"US"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.newrelic.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.newrelic.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  newrelic:
    api-key: "YOUR_API_KEY"
    account-id: "1234567"
    region: "US"  # or "EU" for European region

endpoints:
  - name: example
    url: "https://example.org"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: newrelic
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring n8n alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.n8n&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;n8n&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.n8n.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;n8n webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.n8n.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Title of the alert sent to n8n&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.n8n.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.n8n.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.n8n.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.n8n.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.n8n.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;a href="https://n8n.io/"&gt;n8n&lt;/a&gt; is a workflow automation platform that allows you to automate tasks across different applications and services using webhooks.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://github.com/TwiN/n8n-nodes-gatus-trigger"&gt;n8n-nodes-gatus-trigger&lt;/a&gt; for a n8n community node that can be used as trigger.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  n8n:
    webhook-url: "https://your-n8n-instance.com/webhook/your-webhook-id"
    title: "Gatus Monitoring"
    default-alert:
      send-on-resolved: true

endpoints:
  - name: example
    url: "https://example.org"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: n8n
        description: "Health check alert"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The JSON payload sent to the n8n webhook will include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;title&lt;/code&gt;: The configured title&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;endpoint_name&lt;/code&gt;: Name of the endpoint&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;endpoint_group&lt;/code&gt;: Group of the endpoint (if any)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;endpoint_url&lt;/code&gt;: URL being monitored&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;alert_description&lt;/code&gt;: Custom alert description&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resolved&lt;/code&gt;: Boolean indicating if the alert is resolved&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;message&lt;/code&gt;: Human-readable alert message&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;condition_results&lt;/code&gt;: Array of condition results with their success status&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Configuring Ntfy alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;ntfy&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.topic&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Topic at which the alert will be sent&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The URL of the target server&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;https://ntfy.sh&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://docs.ntfy.sh/publish/#access-tokens"&gt;Access token&lt;/a&gt; for restricted topics&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.email&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;E-mail address for additional e-mail notifications&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.click&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Website opened when notification is clicked&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.priority&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The priority of the alert&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.disable-firebase&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether message push delivery via firebase should be disabled. &lt;a href="https://docs.ntfy.sh/publish/#disable-firebase"&gt;ntfy.sh defaults to enabled&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.disable-cache&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether server side message caching should be disabled. &lt;a href="https://docs.ntfy.sh/publish/#message-caching"&gt;ntfy.sh defaults to enabled&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.ntfy.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;a href="https://github.com/binwiederhier/ntfy"&gt;ntfy&lt;/a&gt; is an amazing project that allows you to subscribe to desktop and mobile notifications, making it an awesome addition to Gatus.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  ntfy:
    topic: "gatus-test-topic"
    priority: 2
    token: faketoken
    default-alert:
      failure-threshold: 3
      send-on-resolved: true
    # You can also add group-specific to keys, which will
    # override the to key above for the specified groups
    overrides:
      - group: "other"
        topic: "gatus-other-test-topic"
        priority: 4
        click: "https://example.com"

endpoints:
  - name: website
    interval: 5m
    url: "https://twin.sh/health"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: ntfy
  - name: other example
    group: other
    interval: 30m
    url: "https://example.com"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
    alerts:
      - type: ntfy
        description: example
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Opsgenie alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;opsgenie&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.api-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Opsgenie API Key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.priority&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Priority level of the alert.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;P1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.source&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Source field of the alert.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;gatus&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.entity-prefix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Entity field prefix.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;gatus-&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.alias-prefix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Alias field prefix.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;gatus-healthcheck-&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.tags&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Tags of alert.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Opsgenie provider will automatically open and close alerts.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  opsgenie:
    api-key: "00000000-0000-0000-0000-000000000000"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring PagerDuty alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;pagerduty&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty.integration-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;PagerDuty Events API v2 integration key&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.pagerduty.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;It is highly recommended to set &lt;code&gt;endpoints[].alerts[].send-on-resolved&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; for alerts of type &lt;code&gt;pagerduty&lt;/code&gt;, because unlike other alerts, the operation resulting from setting said parameter to &lt;code&gt;true&lt;/code&gt; will not create another incident but mark the incident as resolved on PagerDuty instead.&lt;/p&gt; 
&lt;p&gt;Behavior:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;By default, &lt;code&gt;alerting.pagerduty.integration-key&lt;/code&gt; is used as the integration key&lt;/li&gt; 
 &lt;li&gt;If the endpoint being evaluated belongs to a group (&lt;code&gt;endpoints[].group&lt;/code&gt;) matching the value of &lt;code&gt;alerting.pagerduty.overrides[].group&lt;/code&gt;, the provider will use that override's integration key instead of &lt;code&gt;alerting.pagerduty.integration-key&lt;/code&gt;'s&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  pagerduty:
    integration-key: "********************************"
    # You can also add group-specific integration keys, which will
    # override the integration key above for the specified groups
    overrides:
      - group: "core"
        integration-key: "********************************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: pagerduty
        failure-threshold: 3
        success-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"

  - name: back-end
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
    alerts:
      - type: pagerduty
        failure-threshold: 3
        success-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Plivo alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;plivo&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo.auth-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Plivo Auth ID&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo.auth-token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Plivo Auth Token&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo.from&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Phone number to send SMS from&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo.to&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of phone numbers to send SMS to&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.plivo.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.plivo.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  plivo:
    auth-id: "MAXXXXXXXXXXXXXXXXXX"
    auth-token: "your-auth-token"
    from: "+1234567890"
    to:
      - "+0987654321"
      - "+1122334455"

endpoints:
  - name: website
    interval: 30s
    url: "https://twin.sh/health"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: plivo
        failure-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Pushover alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;pushover&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.application-token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Pushover application token&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.user-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;User or group key&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Fixed title for all messages sent via Pushover&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"Gatus: &amp;lt;endpoint&amp;gt;"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.priority&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Priority of all messages, ranging from -2 (very low) to 2 (emergency)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.resolved-priority&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Override the priority of messages on resolved, ranging from -2 (very low) to 2 (emergency)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.sound&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Sound of all messages&lt;br /&gt;See &lt;a href="https://pushover.net/api#sounds"&gt;sounds&lt;/a&gt; for all valid choices.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.ttl&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Set the Time-to-live of the message to be automatically deleted from pushover notifications&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.device&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Device to send the message to (optional)&lt;br /&gt;See &lt;a href="https://pushover.net/api#identifiers"&gt;devices&lt;/a&gt; for details&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt; (all devices)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  pushover:
    application-token: "******************************"
    user-key: "******************************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: pushover
        failure-threshold: 3
        success-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Rocket.Chat alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.rocketchat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;rocketchat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.rocketchat.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Rocket.Chat incoming webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.rocketchat.channel&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Optional channel override&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.rocketchat.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.rocketchat.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.rocketchat.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.rocketchat.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.rocketchat.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  rocketchat:
    webhook-url: "https://your-rocketchat.com/hooks/YOUR_WEBHOOK_ID/YOUR_TOKEN"
    channel: "#alerts"  # Optional

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: rocketchat
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Signal alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;signal&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal.api-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Signal API URL (e.g., signal-cli-rest-api instance)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal.number&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Sender phone number&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal.recipients&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of recipient phone numbers&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signal.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.signal.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  signal:
    api-url: "http://localhost:8080"
    number: "+1234567890"
    recipients:
      - "+0987654321"
      - "+1122334455"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: signal
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring SIGNL4 alerts&lt;/h4&gt; 
&lt;p&gt;SIGNL4 is a mobile alerting and incident management service that sends critical alerts to team members via mobile push, SMS, voice calls, and email.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signl4&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;signl4&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signl4.team-secret&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SIGNL4 team secret (part of webhook URL)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signl4.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signl4.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signl4.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.signl4.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.signl4.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  signl4:
    team-secret: "your-team-secret-here"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: signl4
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring SendGrid alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;sendgrid&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid.api-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SendGrid API key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid.from&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Email address to send from&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid.to&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Email address(es) to send alerts to (comma-separated for multiple recipients)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.sendgrid.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.sendgrid.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  sendgrid:
    api-key: "SG.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    from: "alerts@example.com"
    to: "admin@example.com,ops@example.com"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: sendgrid
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Slack alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;slack&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Slack Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Title of the notification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;":helmet_with_white_cross: Gatus"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.slack.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  slack:
    webhook-url: "https://hooks.slack.com/services/**********/**********/**********"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: slack
        description: "healthcheck failed 3 times in a row"
        send-on-resolved: true
      - type: slack
        failure-threshold: 5
        description: "healthcheck failed 5 times in a row"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/slack-alerts.png" alt="Slack notifications" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Splunk alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;splunk&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.hec-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Splunk HEC (HTTP Event Collector) URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.hec-token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Splunk HEC token&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.source&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Event source&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"gatus"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.sourcetype&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Event source type&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"gatus:alert"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.index&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Splunk index&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.splunk.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.splunk.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  splunk:
    hec-url: "https://splunk.example.com:8088"
    hec-token: "YOUR_HEC_TOKEN"
    index: "main"  # Optional

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: splunk
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Squadcast alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.squadcast&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;squadcast&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.squadcast.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Squadcast webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.squadcast.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.squadcast.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.squadcast.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.squadcast.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.squadcast.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  squadcast:
    webhook-url: "https://api.squadcast.com/v3/incidents/api/YOUR_API_KEY"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: squadcast
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Teams alerts &lt;em&gt;(Deprecated)&lt;/em&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] &lt;strong&gt;Deprecated:&lt;/strong&gt; Office 365 Connectors within Microsoft Teams are being retired (&lt;a href="https://devblogs.microsoft.com/microsoft365dev/retirement-of-office-365-connectors-within-microsoft-teams/"&gt;Source: Microsoft DevBlog&lt;/a&gt;). Existing connectors will continue to work until December 2025. The new &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-teams-workflow-alerts"&gt;Teams Workflow Alerts&lt;/a&gt; should be used with Microsoft Workflows instead of this legacy configuration.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;teams&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Teams Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Title of the notification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"&amp;amp;#x1F6A8; Gatus"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.client.insecure&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to skip TLS verification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.teams.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  teams:
    webhook-url: "https://********.webhook.office.com/webhookb2/************"
    client:
      insecure: false
    # You can also add group-specific to keys, which will
    # override the to key above for the specified groups
    overrides:
      - group: "core"
        webhook-url: "https://********.webhook.office.com/webhookb3/************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: teams
        description: "healthcheck failed"
        send-on-resolved: true

  - name: back-end
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
    alerts:
      - type: teams
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/teams-alerts.png" alt="Teams notifications" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Teams Workflow alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This alert is compatible with Workflows for Microsoft Teams. To setup the workflow and get the webhook URL, follow the &lt;a href="https://support.microsoft.com/en-us/office/create-incoming-webhooks-with-workflows-for-microsoft-teams-8ae491c7-0394-4861-ba59-055e33f75498"&gt;Microsoft Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;teams&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Teams Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Title of the notification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"&amp;amp;#x26D1; Gatus"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.teams-workflows.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  teams-workflows:
    webhook-url: "https://********.webhook.office.com/webhookb2/************"
    # You can also add group-specific to keys, which will
    # override the to key above for the specified groups
    overrides:
      - group: "core"
        webhook-url: "https://********.webhook.office.com/webhookb3/************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: teams-workflows
        description: "healthcheck failed"
        send-on-resolved: true

  - name: back-end
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
    alerts:
      - type: teams-workflows
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/teams-workflows-alerts.png" alt="Teams Workflow notifications" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Telegram alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;telegram&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Telegram Bot Token&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Telegram User ID&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.topic-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Telegram Topic ID in a group corresponds to &lt;code&gt;message_thread_id&lt;/code&gt; in the Telegram API&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.api-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Telegram API URL&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;https://api.telegram.org&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.client&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.telegram.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  telegram:
    token: "123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11"
    id: "0123456789"
    topic-id: "7"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
    alerts:
      - type: telegram
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/telegram-alerts.png" alt="Telegram notifications" /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Twilio alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Settings for alerts of type &lt;code&gt;twilio&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.sid&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Twilio account SID&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Twilio auth token&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.from&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number to send Twilio alerts from&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.to&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number to send twilio alerts to&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Custom message templates are supported via the following additional parameters:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.text-twilio-triggered&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Custom message template for triggered alerts. Supports &lt;code&gt;[ENDPOINT]&lt;/code&gt;, &lt;code&gt;[ALERT_DESCRIPTION]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.text-twilio-resolved&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Custom message template for resolved alerts. Supports &lt;code&gt;[ENDPOINT]&lt;/code&gt;, &lt;code&gt;[ALERT_DESCRIPTION]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  twilio:
    sid: "..."
    token: "..."
    from: "+1-234-567-8901"
    to: "+1-234-567-8901"
    # Custom message templates using placeholders (optional)
    # Supports both old format {endpoint}/{description} and new format [ENDPOINT]/[ALERT_DESCRIPTION]
    text-twilio-triggered: "🚨 ALERT: [ENDPOINT] is down! [ALERT_DESCRIPTION]"
    text-twilio-resolved: "✅ RESOLVED: [ENDPOINT] is back up! [ALERT_DESCRIPTION]"

endpoints:
  - name: website
    interval: 30s
    url: "https://twin.sh/health"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: twilio
        failure-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Vonage alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;vonage&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage.api-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Vonage API key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage.api-secret&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Vonage API secret&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage.from&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Sender name or phone number&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage.to&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Recipient phone number&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.vonage.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.vonage.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  vonage:
    api-key: "YOUR_API_KEY"
    api-secret: "YOUR_API_SECRET"
    from: "Gatus"
    to: "+1234567890"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example of sending alerts to Vonage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: website
    url: "https://example.org"
    alerts:
      - type: vonage
        failure-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Webex alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.webex&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;webex&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.webex.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Webex Teams webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.webex.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.webex.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.webex.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.webex.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.webex.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  webex:
    webhook-url: "https://webexapis.com/v1/webhooks/incoming/YOUR_WEBHOOK_ID"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: webex
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Zapier alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;WARNING&lt;/strong&gt;: This alerting provider has not been tested yet. If you've tested it and confirmed that it works, please remove this warning and create a pull request, or comment on &lt;a href="https://github.com/TwiN/gatus/discussions/1223"&gt;#1223&lt;/a&gt; with whether the provider works as intended. Thank you for your cooperation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zapier&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;zapier&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zapier.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Zapier webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zapier.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zapier.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zapier.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zapier.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.zapier.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  zapier:
    webhook-url: "https://hooks.zapier.com/hooks/catch/YOUR_WEBHOOK_ID/"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: zapier
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Zulip alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;zulip&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.bot-email&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Bot Email&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.bot-api-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Bot API key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.domain&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Full organization domain (e.g.: yourZulipDomain.zulipchat.com)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.channel-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The channel ID where Gatus will send the alerts&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.zulip.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  zulip:
    bot-email: gatus-bot@some.zulip.org
    bot-api-key: "********************************"
    domain: some.zulip.org
    channel-id: 123456

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: zulip
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring custom alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for custom actions on failure or alerts&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Custom alerting request url&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.method&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Request method&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.body&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Custom alerting request body.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.headers&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Custom alerting request headers&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.client&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br /&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;While they're called alerts, you can use this feature to call anything.&lt;/p&gt; 
&lt;p&gt;For instance, you could automate rollbacks by having an application that keeps tracks of new deployments, and by leveraging Gatus, you could have Gatus call that application endpoint when an endpoint starts failing. Your application would then check if the endpoint that started failing was part of the recently deployed application, and if it was, then automatically roll it back.&lt;/p&gt; 
&lt;p&gt;Furthermore, you may use the following placeholders in the body (&lt;code&gt;alerting.custom.body&lt;/code&gt;) and in the url (&lt;code&gt;alerting.custom.url&lt;/code&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;[ALERT_DESCRIPTION]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].alerts[].description&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_NAME]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].name&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_GROUP]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].group&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_URL]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].url&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[RESULT_ERRORS]&lt;/code&gt; (resolved from the health evaluation of a given health check)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[RESULT_CONDITIONS]&lt;/code&gt; (condition results from the health evaluation of a given health check)&lt;/li&gt; 
 &lt;li&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you have an alert using the &lt;code&gt;custom&lt;/code&gt; provider with &lt;code&gt;send-on-resolved&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;, you can use the &lt;code&gt;[ALERT_TRIGGERED_OR_RESOLVED]&lt;/code&gt; placeholder to differentiate the notifications. The aforementioned placeholder will be replaced by &lt;code&gt;TRIGGERED&lt;/code&gt; or &lt;code&gt;RESOLVED&lt;/code&gt; accordingly, though it can be modified (details at the end of this section).&lt;/p&gt; 
&lt;p&gt;For all intents and purposes, we'll configure the custom alert with a Slack webhook, but you can call anything you want.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  custom:
    url: "https://hooks.slack.com/services/**********/**********/**********"
    method: "POST"
    body: |
      {
        "text": "[ALERT_TRIGGERED_OR_RESOLVED]: [ENDPOINT_GROUP] - [ENDPOINT_NAME] - [ALERT_DESCRIPTION] - [RESULT_ERRORS]"
      }
endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: custom
        failure-threshold: 10
        success-threshold: 3
        send-on-resolved: true
        description: "health check failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that you can customize the resolved values for the &lt;code&gt;[ALERT_TRIGGERED_OR_RESOLVED]&lt;/code&gt; placeholder like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  custom:
    placeholders:
      ALERT_TRIGGERED_OR_RESOLVED:
        TRIGGERED: "partial_outage"
        RESOLVED: "operational"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As a result, the &lt;code&gt;[ALERT_TRIGGERED_OR_RESOLVED]&lt;/code&gt; in the body of first example of this section would be replaced by &lt;code&gt;partial_outage&lt;/code&gt; when an alert is triggered and &lt;code&gt;operational&lt;/code&gt; when an alert is resolved.&lt;/p&gt; 
&lt;h4&gt;Setting a default alert&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.*.default-alert.enabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to enable the alert&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.*.default-alert.failure-threshold&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number of failures in a row needed before triggering the alert&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.*.default-alert.success-threshold&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number of successes in a row before an ongoing incident is marked as resolved&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.*.default-alert.send-on-resolved&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to send a notification once a triggered alert is marked as resolved&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.*.default-alert.description&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Description of the alert. Will be included in the alert sent&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠ You must still specify the &lt;code&gt;type&lt;/code&gt; of the alert in the endpoint configuration even if you set the default alert of a provider.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;While you can specify the alert configuration directly in the endpoint definition, it's tedious and may lead to a very long configuration file.&lt;/p&gt; 
&lt;p&gt;To avoid such problem, you can use the &lt;code&gt;default-alert&lt;/code&gt; parameter present in each provider configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  slack:
    webhook-url: "https://hooks.slack.com/services/**********/**********/**********"
    default-alert:
      description: "health check failed"
      send-on-resolved: true
      failure-threshold: 5
      success-threshold: 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As a result, your Gatus configuration looks a lot tidier:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack

  - name: other-example
    url: "https://example.com"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It also allows you to do things like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
        failure-threshold: 5
      - type: slack
        failure-threshold: 10
      - type: slack
        failure-threshold: 15
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Of course, you can also mix alert types:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  slack:
    webhook-url: "https://hooks.slack.com/services/**********/**********/**********"
    default-alert:
      failure-threshold: 3
  pagerduty:
    integration-key: "********************************"
    default-alert:
      failure-threshold: 5

endpoints:
  - name: endpoint-1
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
      - type: pagerduty

  - name: endpoint-2
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
      - type: pagerduty
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Maintenance&lt;/h3&gt; 
&lt;p&gt;If you have maintenance windows, you may not want to be annoyed by alerts. To do that, you'll have to use the maintenance configuration:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance.enabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether the maintenance period is enabled&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance.start&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Time at which the maintenance window starts in &lt;code&gt;hh:mm&lt;/code&gt; format (e.g. &lt;code&gt;23:00&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance.duration&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Duration of the maintenance window (e.g. &lt;code&gt;1h&lt;/code&gt;, &lt;code&gt;30m&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance.timezone&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Timezone of the maintenance window format (e.g. &lt;code&gt;Europe/Amsterdam&lt;/code&gt;).&lt;br /&gt;See &lt;a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"&gt;List of tz database time zones&lt;/a&gt; for more info&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;UTC&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance.every&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Days on which the maintenance period applies (e.g. &lt;code&gt;[Monday, Thursday]&lt;/code&gt;).&lt;br /&gt;If left empty, the maintenance window applies every day&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Here's an example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;maintenance:
  start: 23:00
  duration: 1h
  timezone: "Europe/Amsterdam"
  every: [Monday, Thursday]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that you can also specify each day on separate lines:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;maintenance:
  start: 23:00
  duration: 1h
  timezone: "Europe/Amsterdam"
  every:
    - Monday
    - Thursday
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also specify maintenance windows on a per-endpoint basis:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: endpoint-1
    url: "https://example.org"
    maintenance-windows:
      - start: "07:30"
        duration: 40m
        timezone: "Europe/Berlin"
      - start: "14:30"
        duration: 1h
        timezone: "Europe/Berlin"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Security&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Security configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.basic&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;HTTP Basic configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;OpenID Connect configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Basic Authentication&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.basic&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;HTTP Basic configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.basic.username&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Username for Basic authentication.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.basic.password-bcrypt-base64&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Password hashed with Bcrypt and then encoded with base64 for Basic authentication.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The example below will require that you authenticate with the username &lt;code&gt;john.doe&lt;/code&gt; and the password &lt;code&gt;hunter2&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;security:
  basic:
    username: "john.doe"
    password-bcrypt-base64: "JDJhJDEwJHRiMnRFakxWazZLdXBzRERQazB1TE8vckRLY05Yb1hSdnoxWU0yQ1FaYXZRSW1McmladDYu"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠ Make sure to carefully select the cost of the bcrypt hash. The higher the cost, the longer it takes to compute the hash, and basic auth verifies the password against the hash on every request. As of 2023-01-06, I suggest a cost of 9.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;OIDC&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;OpenID Connect configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.issuer-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Issuer URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.redirect-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Redirect URL. Must end with &lt;code&gt;/authorization-code/callback&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.client-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client id&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.client-secret&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client secret&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.scopes&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Scopes to request. The only scope you need is &lt;code&gt;openid&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.allowed-subjects&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of subjects to allow. If empty, all subjects are allowed.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.session-ttl&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Session time-to-live (e.g. &lt;code&gt;8h&lt;/code&gt;, &lt;code&gt;1h30m&lt;/code&gt;, &lt;code&gt;2h&lt;/code&gt;).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;8h&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;security:
  oidc:
    issuer-url: "https://example.okta.com"
    redirect-url: "https://status.example.com/authorization-code/callback"
    client-id: "123456789"
    client-secret: "abcdefghijk"
    scopes: ["openid"]
    # You may optionally specify a list of allowed subjects. If this is not specified, all subjects will be allowed.
    #allowed-subjects: ["johndoe@example.com"]
    # You may optionally specify a session time-to-live. If this is not specified, defaults to 8 hours.
    #session-ttl: 8h
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Confused? Read &lt;a href="https://twin.sh/articles/56/securing-gatus-with-oidc-using-auth0"&gt;Securing Gatus with OIDC using Auth0&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;TLS Encryption&lt;/h3&gt; 
&lt;p&gt;Gatus supports basic encryption with TLS. To enable this, certificate files in PEM format have to be provided.&lt;/p&gt; 
&lt;p&gt;The example below shows an example configuration which makes gatus respond on port 4443 to HTTPS requests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;web:
  port: 4443
  tls:
    certificate-file: "certificate.crt"
    private-key-file: "private.key"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Metrics&lt;/h3&gt; 
&lt;p&gt;To enable metrics, you must set &lt;code&gt;metrics&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. Doing so will expose Prometheus-friendly metrics at the &lt;code&gt;/metrics&lt;/code&gt; endpoint on the same port your application is configured to run on (&lt;code&gt;web.port&lt;/code&gt;).&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Metric name&lt;/th&gt; 
   &lt;th align="left"&gt;Type&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Labels&lt;/th&gt; 
   &lt;th align="left"&gt;Relevant endpoint types&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_total&lt;/td&gt; 
   &lt;td align="left"&gt;counter&lt;/td&gt; 
   &lt;td align="left"&gt;Number of results per endpoint per success state&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type, success&lt;/td&gt; 
   &lt;td align="left"&gt;All&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_code_total&lt;/td&gt; 
   &lt;td align="left"&gt;counter&lt;/td&gt; 
   &lt;td align="left"&gt;Total number of results by code&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type, code&lt;/td&gt; 
   &lt;td align="left"&gt;DNS, HTTP&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_connected_total&lt;/td&gt; 
   &lt;td align="left"&gt;counter&lt;/td&gt; 
   &lt;td align="left"&gt;Total number of results in which a connection was successfully established&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type&lt;/td&gt; 
   &lt;td align="left"&gt;All&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_duration_seconds&lt;/td&gt; 
   &lt;td align="left"&gt;gauge&lt;/td&gt; 
   &lt;td align="left"&gt;Duration of the request in seconds&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type&lt;/td&gt; 
   &lt;td align="left"&gt;All&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_certificate_expiration_seconds&lt;/td&gt; 
   &lt;td align="left"&gt;gauge&lt;/td&gt; 
   &lt;td align="left"&gt;Number of seconds until the certificate expires&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type&lt;/td&gt; 
   &lt;td align="left"&gt;HTTP, STARTTLS&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_endpoint_success&lt;/td&gt; 
   &lt;td align="left"&gt;gauge&lt;/td&gt; 
   &lt;td align="left"&gt;Displays whether or not the endpoint was a success (0 failure, 1 success)&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type&lt;/td&gt; 
   &lt;td align="left"&gt;All&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples/docker-compose-grafana-prometheus"&gt;examples/docker-compose-grafana-prometheus&lt;/a&gt; for further documentation as well as an example.&lt;/p&gt; 
&lt;h4&gt;Custom Labels&lt;/h4&gt; 
&lt;p&gt;You can add custom labels to your endpoints’ Prometheus metrics by defining key–value pairs under the &lt;code&gt;extra-labels&lt;/code&gt; field. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: front-end
    group: core
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 150"
    extra-labels:
      environment: staging
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Connectivity&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;connectivity&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Connectivity configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;connectivity.checker&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Connectivity checker configuration&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;connectivity.checker.target&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Host to use for validating connectivity&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;connectivity.checker.interval&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Interval at which to validate connectivity&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;1m&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;While Gatus is used to monitor other services, it is possible for Gatus itself to lose connectivity to the internet. In order to prevent Gatus from reporting endpoints as unhealthy when Gatus itself is unhealthy, you may configure Gatus to periodically check for internet connectivity.&lt;/p&gt; 
&lt;p&gt;All endpoint executions are skipped while the connectivity checker deems connectivity to be down.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;connectivity:
  checker:
    target: 1.1.1.1:53
    interval: 60s
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Remote instances (EXPERIMENTAL)&lt;/h3&gt; 
&lt;p&gt;This feature allows you to retrieve endpoint statuses from a remote Gatus instance.&lt;/p&gt; 
&lt;p&gt;There are two main use cases for this:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You have multiple Gatus instances running on different machines, and you wish to visually expose the statuses through a single dashboard&lt;/li&gt; 
 &lt;li&gt;You have one or more Gatus instances that are not publicly accessible (e.g. behind a firewall), and you wish to retrieve&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This is an experimental feature. It may be removed or updated in a breaking manner at any time. Furthermore, there are known issues with this feature. If you'd like to provide some feedback, please write a comment in &lt;a href="https://github.com/TwiN/gatus/issues/64"&gt;#64&lt;/a&gt;. Use at your own risk.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Remote configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;remote.instances&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of remote instances&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;remote.instances.endpoint-prefix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;String to prefix all endpoint names with&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;remote.instances.url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;URL from which to retrieve endpoint statuses&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;remote:
  instances:
    - endpoint-prefix: "status.example.org-"
      url: "https://status.example.org/api/v1/endpoints/statuses"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;Many examples can be found in the &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples"&gt;.examples&lt;/a&gt; folder, but this section will focus on the most popular ways of deploying Gatus.&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;To run Gatus locally with Docker:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --name gatus ghcr.io/twin/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Other than using one of the examples provided in the &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples"&gt;.examples&lt;/a&gt; folder, you can also try it out locally by creating a configuration file, we'll call it &lt;code&gt;config.yaml&lt;/code&gt; for this example, and running the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --mount type=bind,source="$(pwd)"/config.yaml,target=/config/config.yaml --name gatus ghcr.io/twin/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're on Windows, replace &lt;code&gt;"$(pwd)"&lt;/code&gt; by the absolute path to your current directory, e.g.:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --mount type=bind,source=C:/Users/Chris/Desktop/config.yaml,target=/config/config.yaml --name gatus ghcr.io/twin/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build the image locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker build . -t ghcr.io/twin/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Helm Chart&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://helm.sh"&gt;Helm&lt;/a&gt; must be installed to use the chart. Please refer to Helm's &lt;a href="https://helm.sh/docs/"&gt;documentation&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;Once Helm is set up properly, add the repository as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;helm repo add twin https://twin.github.io/helm-charts
helm repo update
helm install gatus twin/gatus
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get more details, please check &lt;a href="https://github.com/TwiN/helm-charts/raw/master/charts/gatus/README.md"&gt;chart's configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Terraform&lt;/h3&gt; 
&lt;p&gt;Gatus can be deployed on Terraform by using the following module: &lt;a href="https://github.com/TwiN/terraform-kubernetes-gatus"&gt;terraform-kubernetes-gatus&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Running the tests&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;go test -v ./...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using in Production&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#deployment"&gt;Deployment&lt;/a&gt; section.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;Sending a GraphQL request&lt;/h3&gt; 
&lt;p&gt;By setting &lt;code&gt;endpoints[].graphql&lt;/code&gt; to true, the body will automatically be wrapped by the standard GraphQL &lt;code&gt;query&lt;/code&gt; parameter.&lt;/p&gt; 
&lt;p&gt;For instance, the following configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: filter-users-by-gender
    url: http://localhost:8080/playground
    method: POST
    graphql: true
    body: |
      {
        users(gender: "female") {
          id
          name
          gender
          avatar
        }
      }
    conditions:
      - "[STATUS] == 200"
      - "[BODY].data.users[0].gender == female"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;will send a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;http://localhost:8080/playground&lt;/code&gt; with the following body:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{"query":"      {\n        users(gender: \"female\") {\n          id\n          name\n          gender\n          avatar\n        }\n      }"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Recommended interval&lt;/h3&gt; 
&lt;p&gt;To ensure that Gatus provides reliable and accurate results (i.e. response time), Gatus limits the number of endpoints/suites that can be evaluated at the same time. In other words, even if you have multiple endpoints with the same interval, they are not guaranteed to run at the same time.&lt;/p&gt; 
&lt;p&gt;The number of concurrent evaluations is determined by the &lt;code&gt;concurrency&lt;/code&gt; configuration parameter, which defaults to &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can test this yourself by running Gatus with several endpoints configured with a very short, unrealistic interval, such as 1ms. You'll notice that the response time does not fluctuate - that is because while endpoints are evaluated on different goroutines, there's a semaphore that controls how many endpoints/suites from running at the same time.&lt;/p&gt; 
&lt;p&gt;Unfortunately, there is a drawback. If you have a lot of endpoints, including some that are very slow or prone to timing out (the default timeout is 10s), those slow evaluations may prevent other endpoints/suites from being evaluated.&lt;/p&gt; 
&lt;p&gt;The interval does not include the duration of the request itself, which means that if an endpoint has an interval of 30s and the request takes 2s to complete, the timestamp between two evaluations will be 32s, not 30s.&lt;/p&gt; 
&lt;p&gt;While this does not prevent Gatus' from performing health checks on all other endpoints, it may cause Gatus to be unable to respect the configured interval, for instance, assuming &lt;code&gt;concurrency&lt;/code&gt; is set to &lt;code&gt;1&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Endpoint A has an interval of 5s, and times out after 10s to complete&lt;/li&gt; 
 &lt;li&gt;Endpoint B has an interval of 5s, and takes 1ms to complete&lt;/li&gt; 
 &lt;li&gt;Endpoint B will be unable to run every 5s, because endpoint A's health evaluation takes longer than its interval&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To sum it up, while Gatus can handle any interval you throw at it, you're better off having slow requests with higher interval.&lt;/p&gt; 
&lt;p&gt;As a rule of thumb, I personally set the interval for more complex health checks to &lt;code&gt;5m&lt;/code&gt; (5 minutes) and simple health checks used for alerting (PagerDuty/Twilio) to &lt;code&gt;30s&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Default timeouts&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Endpoint type&lt;/th&gt; 
   &lt;th align="left"&gt;Timeout&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;HTTP&lt;/td&gt; 
   &lt;td align="left"&gt;10s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;TCP&lt;/td&gt; 
   &lt;td align="left"&gt;10s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;ICMP&lt;/td&gt; 
   &lt;td align="left"&gt;10s&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;To modify the timeout, see &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Monitoring a TCP endpoint&lt;/h3&gt; 
&lt;p&gt;By prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;tcp://&lt;/code&gt;, you can monitor TCP endpoints at a very basic level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: redis
    url: "tcp://127.0.0.1:6379"
    interval: 30s
    conditions:
      - "[CONNECTED] == true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If &lt;code&gt;endpoints[].body&lt;/code&gt; is set then it is sent and the first 1024 bytes of the response will be in &lt;code&gt;[BODY]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Placeholder &lt;code&gt;[STATUS]&lt;/code&gt; as well as the fields &lt;code&gt;endpoints[].headers&lt;/code&gt;, &lt;code&gt;endpoints[].method&lt;/code&gt; and &lt;code&gt;endpoints[].graphql&lt;/code&gt; are not supported for TCP endpoints.&lt;/p&gt; 
&lt;p&gt;This works for applications such as databases (Postgres, MySQL, etc.) and caches (Redis, Memcached, etc.).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📝 &lt;code&gt;[CONNECTED] == true&lt;/code&gt; does not guarantee that the endpoint itself is healthy - it only guarantees that there's something at the given address listening to the given port, and that a connection to that address was successfully established.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Monitoring a UDP endpoint&lt;/h3&gt; 
&lt;p&gt;By prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;udp://&lt;/code&gt;, you can monitor UDP endpoints at a very basic level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "udp://example.org:80"
    conditions:
      - "[CONNECTED] == true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If &lt;code&gt;endpoints[].body&lt;/code&gt; is set then it is sent and the first 1024 bytes of the response will be in &lt;code&gt;[BODY]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Placeholder &lt;code&gt;[STATUS]&lt;/code&gt; as well as the fields &lt;code&gt;endpoints[].headers&lt;/code&gt;, &lt;code&gt;endpoints[].method&lt;/code&gt; and &lt;code&gt;endpoints[].graphql&lt;/code&gt; are not supported for UDP endpoints.&lt;/p&gt; 
&lt;p&gt;This works for UDP based application.&lt;/p&gt; 
&lt;h3&gt;Monitoring a SCTP endpoint&lt;/h3&gt; 
&lt;p&gt;By prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;sctp://&lt;/code&gt;, you can monitor Stream Control Transmission Protocol (SCTP) endpoints at a very basic level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "sctp://127.0.0.1:38412"
    conditions:
      - "[CONNECTED] == true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Placeholders &lt;code&gt;[STATUS]&lt;/code&gt; and &lt;code&gt;[BODY]&lt;/code&gt; as well as the fields &lt;code&gt;endpoints[].body&lt;/code&gt;, &lt;code&gt;endpoints[].headers&lt;/code&gt;, &lt;code&gt;endpoints[].method&lt;/code&gt; and &lt;code&gt;endpoints[].graphql&lt;/code&gt; are not supported for SCTP endpoints.&lt;/p&gt; 
&lt;p&gt;This works for SCTP based application.&lt;/p&gt; 
&lt;h3&gt;Monitoring a WebSocket endpoint&lt;/h3&gt; 
&lt;p&gt;By prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;ws://&lt;/code&gt; or &lt;code&gt;wss://&lt;/code&gt;, you can monitor WebSocket endpoints:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "wss://echo.websocket.org/"
    body: "status"
    conditions:
      - "[CONNECTED] == true"
      - "[BODY] == pat(*served by*)"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;[BODY]&lt;/code&gt; placeholder contains the output of the query, and &lt;code&gt;[CONNECTED]&lt;/code&gt; shows whether the connection was successfully established. You can use Go template syntax.&lt;/p&gt; 
&lt;h3&gt;Monitoring an endpoint using ICMP&lt;/h3&gt; 
&lt;p&gt;By prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;icmp://&lt;/code&gt;, you can monitor endpoints at a very basic level using ICMP, or more commonly known as "ping" or "echo":&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: ping-example
    url: "icmp://example.com"
    conditions:
      - "[CONNECTED] == true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Only the placeholders &lt;code&gt;[CONNECTED]&lt;/code&gt;, &lt;code&gt;[IP]&lt;/code&gt; and &lt;code&gt;[RESPONSE_TIME]&lt;/code&gt; are supported for endpoints of type ICMP. You can specify a domain prefixed by &lt;code&gt;icmp://&lt;/code&gt;, or an IP address prefixed by &lt;code&gt;icmp://&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you run Gatus on Linux, please read the Linux section on &lt;a href="https://github.com/prometheus-community/pro-bing#linux"&gt;https://github.com/prometheus-community/pro-bing#linux&lt;/a&gt; if you encounter any problems.&lt;/p&gt; 
&lt;h3&gt;Monitoring an endpoint using DNS queries&lt;/h3&gt; 
&lt;p&gt;Defining a &lt;code&gt;dns&lt;/code&gt; configuration in an endpoint will automatically mark said endpoint as an endpoint of type DNS:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example-dns-query
    url: "8.8.8.8" # Address of the DNS server to use
    dns:
      query-name: "example.com"
      query-type: "A"
    conditions:
      - "[BODY] == 93.184.215.14"
      - "[DNS_RCODE] == NOERROR"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are two placeholders that can be used in the conditions for endpoints of type DNS:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The placeholder &lt;code&gt;[BODY]&lt;/code&gt; resolves to the output of the query. For instance, a query of type &lt;code&gt;A&lt;/code&gt; would return an IPv4.&lt;/li&gt; 
 &lt;li&gt;The placeholder &lt;code&gt;[DNS_RCODE]&lt;/code&gt; resolves to the name associated to the response code returned by the query, such as &lt;code&gt;NOERROR&lt;/code&gt;, &lt;code&gt;FORMERR&lt;/code&gt;, &lt;code&gt;SERVFAIL&lt;/code&gt;, &lt;code&gt;NXDOMAIN&lt;/code&gt;, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Monitoring an endpoint using SSH&lt;/h3&gt; 
&lt;p&gt;You can monitor endpoints using SSH by prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;ssh://&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: ssh-example
    url: "ssh://example.com:22" # port is optional. Default is 22.
    ssh:
      username: "username"
      password: "password"
    body: |
      {
        "command": "echo '{\"memory\": {\"used\": 512}}'"
      }
    interval: 1m
    conditions:
      - "[CONNECTED] == true"
      - "[STATUS] == 0"
      - "[BODY].memory.used &amp;gt; 500"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;you can also use no authentication to monitor the endpoint by not specifying the username and password fields.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: ssh-example
    url: "ssh://example.com:22" # port is optional. Default is 22.
    ssh:
      username: ""
      password: ""

    interval: 1m
    conditions:
      - "[CONNECTED] == true"
      - "[STATUS] == 0"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The following placeholders are supported for endpoints of type SSH:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;[CONNECTED]&lt;/code&gt; resolves to &lt;code&gt;true&lt;/code&gt; if the SSH connection was successful, &lt;code&gt;false&lt;/code&gt; otherwise&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[STATUS]&lt;/code&gt; resolves the exit code of the command executed on the remote server (e.g. &lt;code&gt;0&lt;/code&gt; for success)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[BODY]&lt;/code&gt; resolves to the stdout output of the command executed on the remote server&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[IP]&lt;/code&gt; resolves to the IP address of the server&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[RESPONSE_TIME]&lt;/code&gt; resolves to the time it took to establish the connection and execute the command&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Monitoring an endpoint using STARTTLS&lt;/h3&gt; 
&lt;p&gt;If you have an email server that you want to ensure there are no problems with, monitoring it through STARTTLS will serve as a good initial indicator:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: starttls-smtp-example
    url: "starttls://smtp.gmail.com:587"
    interval: 30m
    client:
      timeout: 5s
    conditions:
      - "[CONNECTED] == true"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Monitoring an endpoint using TLS&lt;/h3&gt; 
&lt;p&gt;Monitoring endpoints using SSL/TLS encryption, such as LDAP over TLS, can help detect certificate expiration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: tls-ldaps-example
    url: "tls://ldap.example.com:636"
    interval: 30m
    client:
      timeout: 5s
    conditions:
      - "[CONNECTED] == true"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If &lt;code&gt;endpoints[].body&lt;/code&gt; is set then it is sent and the first 1024 bytes of the response will be in &lt;code&gt;[BODY]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Placeholder &lt;code&gt;[STATUS]&lt;/code&gt; as well as the fields &lt;code&gt;endpoints[].headers&lt;/code&gt;, &lt;code&gt;endpoints[].method&lt;/code&gt; and &lt;code&gt;endpoints[].graphql&lt;/code&gt; are not supported for TLS endpoints.&lt;/p&gt; 
&lt;h3&gt;Monitoring domain expiration&lt;/h3&gt; 
&lt;p&gt;You can monitor the expiration of a domain with all endpoint types except for DNS by using the &lt;code&gt;[DOMAIN_EXPIRATION]&lt;/code&gt; placeholder:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: check-domain-and-certificate-expiration
    url: "https://example.org"
    interval: 1h
    conditions:
      - "[DOMAIN_EXPIRATION] &amp;gt; 720h"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 240h"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠ The usage of the &lt;code&gt;[DOMAIN_EXPIRATION]&lt;/code&gt; placeholder requires Gatus to use RDAP, or as a fallback, send a request to the official IANA WHOIS service &lt;a href="https://github.com/TwiN/whois"&gt;through a library&lt;/a&gt; and in some cases, a secondary request to a TLD-specific WHOIS server (e.g. &lt;code&gt;whois.nic.sh&lt;/code&gt;). To prevent the WHOIS service from throttling your IP address if you send too many requests, Gatus will prevent you from using the &lt;code&gt;[DOMAIN_EXPIRATION]&lt;/code&gt; placeholder on an endpoint with an interval of less than &lt;code&gt;5m&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Concurrency&lt;/h3&gt; 
&lt;p&gt;By default, Gatus allows up to 5 endpoints/suites to be monitored concurrently. This provides a balance between performance and resource usage while maintaining accurate response time measurements.&lt;/p&gt; 
&lt;p&gt;You can configure the concurrency level using the &lt;code&gt;concurrency&lt;/code&gt; parameter:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;# Allow 10 endpoints/suites to be monitored concurrently
concurrency: 10

# Allow unlimited concurrent monitoring
concurrency: 0

# Use default concurrency (3)
# concurrency: 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Important considerations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Higher concurrency can improve monitoring performance when you have many endpoints&lt;/li&gt; 
 &lt;li&gt;Conditions using the &lt;code&gt;[RESPONSE_TIME]&lt;/code&gt; placeholder may be less accurate with very high concurrency due to system resource contention&lt;/li&gt; 
 &lt;li&gt;Set to &lt;code&gt;0&lt;/code&gt; for unlimited concurrency (equivalent to the deprecated &lt;code&gt;disable-monitoring-lock: true&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Use cases for higher concurrency:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You have a large number of endpoints to monitor&lt;/li&gt; 
 &lt;li&gt;You want to monitor endpoints at very short intervals (&amp;lt; 5s)&lt;/li&gt; 
 &lt;li&gt;You're using Gatus for load testing scenarios&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Legacy configuration:&lt;/strong&gt; The &lt;code&gt;disable-monitoring-lock&lt;/code&gt; parameter is deprecated but still supported for backward compatibility. It's equivalent to setting &lt;code&gt;concurrency: 0&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Reloading configuration on the fly&lt;/h3&gt; 
&lt;p&gt;For the sake of convenience, Gatus automatically reloads the configuration on the fly if the loaded configuration file is updated while Gatus is running.&lt;/p&gt; 
&lt;p&gt;By default, the application will exit if the updating configuration is invalid, but you can configure Gatus to continue running if the configuration file is updated with an invalid configuration by setting &lt;code&gt;skip-invalid-config-update&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Keep in mind that it is in your best interest to ensure the validity of the configuration file after each update you apply to the configuration file while Gatus is running by looking at the log and making sure that you do not see the following message:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;The configuration file was updated, but it is not valid. The old configuration will continue being used.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Failure to do so may result in Gatus being unable to start if the application is restarted for whatever reason.&lt;/p&gt; 
&lt;p&gt;I recommend not setting &lt;code&gt;skip-invalid-config-update&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to avoid a situation like this, but the choice is yours to make.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;If you are not using a file storage&lt;/strong&gt;, updating the configuration while Gatus is running is effectively the same as restarting the application.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📝 Updates may not be detected if the config file is bound instead of the config folder. See &lt;a href="https://github.com/TwiN/gatus/issues/151"&gt;#151&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Endpoint groups&lt;/h3&gt; 
&lt;p&gt;Endpoint groups are used for grouping multiple endpoints together on the dashboard.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: frontend
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"

  - name: backend
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"

  - name: monitoring
    group: internal
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"

  - name: nas
    group: internal
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"

  - name: random endpoint that is not part of a group
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The configuration above will result in a dashboard that looks like this when sorting by group:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/endpoint-groups.jpg" alt="Gatus Endpoint Groups" /&gt;&lt;/p&gt; 
&lt;h3&gt;How do I sort by group by default?&lt;/h3&gt; 
&lt;p&gt;Set &lt;code&gt;ui.default-sort-by&lt;/code&gt; to &lt;code&gt;group&lt;/code&gt; in the configuration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;ui:
  default-sort-by: group
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that if a user has already sorted the dashboard by a different field, the default sort will not be applied unless the user clears their browser's localstorage.&lt;/p&gt; 
&lt;h3&gt;Exposing Gatus on a custom path&lt;/h3&gt; 
&lt;p&gt;Currently, you can expose the Gatus UI using a fully qualified domain name (FQDN) such as &lt;code&gt;status.example.org&lt;/code&gt;. However, it does not support path-based routing, which means you cannot expose it through a URL like &lt;code&gt;example.org/status/&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For more information, see &lt;a href="https://github.com/TwiN/gatus/issues/88"&gt;https://github.com/TwiN/gatus/issues/88&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Exposing Gatus on a custom port&lt;/h3&gt; 
&lt;p&gt;By default, Gatus is exposed on port &lt;code&gt;8080&lt;/code&gt;, but you may specify a different port by setting the &lt;code&gt;web.port&lt;/code&gt; parameter:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;web:
  port: 8081
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're using a PaaS like Heroku that doesn't let you set a custom port and exposes it through an environment variable instead, you can use that environment variable directly in the configuration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;web:
  port: ${PORT}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configuring a startup delay&lt;/h3&gt; 
&lt;p&gt;If, for any reason, you need Gatus to wait for a given amount of time before monitoring the endpoints on application start, you can use the &lt;code&gt;GATUS_DELAY_START_SECONDS&lt;/code&gt; environment variable to make Gatus sleep on startup.&lt;/p&gt; 
&lt;h3&gt;Keeping your configuration small&lt;/h3&gt; 
&lt;p&gt;While not specific to Gatus, you can leverage YAML anchors to create a default configuration. If you have a large configuration file, this should help you keep things clean.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Example&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;default-endpoint: &amp;amp;defaults
  group: core
  interval: 5m
  client:
    insecure: true
    timeout: 30s
  conditions:
    - "[STATUS] == 200"

endpoints:
  - name: anchor-example-1
    &amp;lt;&amp;lt;: *defaults               # This will merge the configuration under &amp;amp;defaults with this endpoint
    url: "https://example.org"

  - name: anchor-example-2
    &amp;lt;&amp;lt;: *defaults
    group: example              # This will override the group defined in &amp;amp;defaults
    url: "https://example.com"

  - name: anchor-example-3
    &amp;lt;&amp;lt;: *defaults
    url: "https://twin.sh/health"
    conditions:                # This will override the conditions defined in &amp;amp;defaults
      - "[STATUS] == 200"
      - "[BODY].status == UP"
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Proxy client configuration&lt;/h3&gt; 
&lt;p&gt;You can configure a proxy for the client to use by setting the &lt;code&gt;proxy-url&lt;/code&gt; parameter in the client configuration.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: website
    url: "https://twin.sh/health"
    client:
      proxy-url: http://proxy.example.com:8080
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;How to fix 431 Request Header Fields Too Large error&lt;/h3&gt; 
&lt;p&gt;Depending on where your environment is deployed and what kind of middleware or reverse proxy sits in front of Gatus, you may run into this issue. This could be because the request headers are too large, e.g. big cookies.&lt;/p&gt; 
&lt;p&gt;By default, &lt;code&gt;web.read-buffer-size&lt;/code&gt; is set to &lt;code&gt;8192&lt;/code&gt;, but increasing this value like so will increase the read buffer size:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;web:
  read-buffer-size: 32768
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Badges&lt;/h3&gt; 
&lt;h4&gt;Uptime&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/1h/badge.svg?sanitize=true" alt="Uptime 1h" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/24h/badge.svg?sanitize=true" alt="Uptime 24h" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/7d/badge.svg?sanitize=true" alt="Uptime 7d" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/30d/badge.svg?sanitize=true" alt="Uptime 30d" /&gt;&lt;/p&gt; 
&lt;p&gt;Gatus can automatically generate an SVG badge for one of your monitored endpoints. This allows you to put badges in your individual applications' README or even create your own status page if you desire.&lt;/p&gt; 
&lt;p&gt;The path to generate a badge is the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/uptimes/{duration}/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; is &lt;code&gt;30d&lt;/code&gt;, &lt;code&gt;7d&lt;/code&gt;, &lt;code&gt;24h&lt;/code&gt; or &lt;code&gt;1h&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For instance, if you want the uptime during the last 24 hours from the endpoint &lt;code&gt;frontend&lt;/code&gt; in the group &lt;code&gt;core&lt;/code&gt;, the URL would look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/core_frontend/uptimes/7d/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to display an endpoint that is not part of a group, you must leave the group value empty:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/_frontend/uptimes/7d/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;![Uptime 24h](https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/24h/badge.svg)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you'd like to see a visual example of each badge available, you can simply navigate to the endpoint's detail page.&lt;/p&gt; 
&lt;h4&gt;Health&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/health/badge.svg?sanitize=true" alt="Health" /&gt;&lt;/p&gt; 
&lt;p&gt;The path to generate a badge is the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/health/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For instance, if you want the current status of the endpoint &lt;code&gt;frontend&lt;/code&gt; in the group &lt;code&gt;core&lt;/code&gt;, the URL would look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/core_frontend/health/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Health (Shields.io)&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fstatus.twin.sh%2Fapi%2Fv1%2Fendpoints%2Fcore_blog-external%2Fhealth%2Fbadge.shields" alt="Health" /&gt;&lt;/p&gt; 
&lt;p&gt;The path to generate a badge is the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/health/badge.shields
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For instance, if you want the current status of the endpoint &lt;code&gt;frontend&lt;/code&gt; in the group &lt;code&gt;core&lt;/code&gt;, the URL would look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/core_frontend/health/badge.shields
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See more information about the Shields.io badge endpoint &lt;a href="https://shields.io/badges/endpoint-badge"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Response time&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/1h/badge.svg?sanitize=true" alt="Response time 1h" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/24h/badge.svg?sanitize=true" alt="Response time 24h" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/7d/badge.svg?sanitize=true" alt="Response time 7d" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/30d/badge.svg?sanitize=true" alt="Response time 30d" /&gt;&lt;/p&gt; 
&lt;p&gt;The endpoint to generate a badge is the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/response-times/{duration}/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; is &lt;code&gt;30d&lt;/code&gt;, &lt;code&gt;7d&lt;/code&gt;, &lt;code&gt;24h&lt;/code&gt; or &lt;code&gt;1h&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Response time (chart)&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/24h/chart.svg?sanitize=true" alt="Response time 24h" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/7d/chart.svg?sanitize=true" alt="Response time 7d" /&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/30d/chart.svg?sanitize=true" alt="Response time 30d" /&gt;&lt;/p&gt; 
&lt;p&gt;The endpoint to generate a response time chart is the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/response-times/{duration}/chart.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; is &lt;code&gt;30d&lt;/code&gt;, &lt;code&gt;7d&lt;/code&gt;, or &lt;code&gt;24h&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;How to change the color thresholds of the response time badge&lt;/h5&gt; 
&lt;p&gt;To change the response time badges' threshold, a corresponding configuration can be added to an endpoint. The values in the array correspond to the levels [Awesome, Great, Good, Passable, Bad] All five values must be given in milliseconds (ms).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
- name: nas
  group: internal
  url: "https://example.org/"
  interval: 5m
  conditions:
    - "[STATUS] == 200"
  ui:
    badge:
      response-time:
        thresholds: [550, 850, 1350, 1650, 1750]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;API&lt;/h3&gt; 
&lt;p&gt;Gatus provides a simple read-only API that can be queried in order to programmatically determine endpoint status and history.&lt;/p&gt; 
&lt;p&gt;All endpoints are available via a GET request to the following endpoint:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/statuses
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: &lt;a href="https://status.twin.sh/api/v1/endpoints/statuses"&gt;https://status.twin.sh/api/v1/endpoints/statuses&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Specific endpoints can also be queried by using the following pattern:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{group}_{endpoint}/statuses
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: &lt;a href="https://status.twin.sh/api/v1/endpoints/core_blog-home/statuses"&gt;https://status.twin.sh/api/v1/endpoints/core_blog-home/statuses&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Gzip compression will be used if the &lt;code&gt;Accept-Encoding&lt;/code&gt; HTTP header contains &lt;code&gt;gzip&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The API will return a JSON payload with the &lt;code&gt;Content-Type&lt;/code&gt; response header set to &lt;code&gt;application/json&lt;/code&gt;. No such header is required to query the API.&lt;/p&gt; 
&lt;h4&gt;Interacting with the API programmatically&lt;/h4&gt; 
&lt;p&gt;See &lt;a href="https://github.com/TwiN/gatus-sdk"&gt;TwiN/gatus-sdk&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Raw Data&lt;/h4&gt; 
&lt;p&gt;Gatus exposes the raw data for one of your monitored endpoints. This allows you to track and aggregate data in your own applications for monitored endpoints. For instance if you want to track uptime for a period longer than 7 days.&lt;/p&gt; 
&lt;h5&gt;Uptime&lt;/h5&gt; 
&lt;p&gt;The path to get raw uptime data for an endpoint is:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/uptimes/{duration}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; is &lt;code&gt;30d&lt;/code&gt;, &lt;code&gt;7d&lt;/code&gt;, &lt;code&gt;24h&lt;/code&gt; or &lt;code&gt;1h&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For instance, if you want the raw uptime data for the last 24 hours from the endpoint &lt;code&gt;frontend&lt;/code&gt; in the group &lt;code&gt;core&lt;/code&gt;, the URL would look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/core_frontend/uptimes/24h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Response Time&lt;/h5&gt; 
&lt;p&gt;The path to get raw response time data for an endpoint is:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/response-times/{duration}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; is &lt;code&gt;30d&lt;/code&gt;, &lt;code&gt;7d&lt;/code&gt;, &lt;code&gt;24h&lt;/code&gt; or &lt;code&gt;1h&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For instance, if you want the raw response time data for the last 24 hours from the endpoint &lt;code&gt;frontend&lt;/code&gt; in the group &lt;code&gt;core&lt;/code&gt;, the URL would look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/core_frontend/response-times/24h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Installing as binary&lt;/h3&gt; 
&lt;p&gt;You can download Gatus as a binary using the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go install github.com/TwiN/gatus/v5@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;High level design overview&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/gatus-diagram.jpg" alt="Gatus diagram" /&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>