<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Monthly Trending</title>
    <description>Monthly Trending of JavaScript in GitHub</description>
    <pubDate>Sun, 19 Oct 2025 01:52:26 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>JannisX11/blockbench</title>
      <link>https://github.com/JannisX11/blockbench</link>
      <description>&lt;p&gt;Blockbench - A low poly 3D model editor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Blockbench&lt;/h1&gt; 
&lt;p&gt;Blockbench is a free and open source model editor for low-poly models with pixel art textures. Models can be exported into standardized formats, to be shared, rendered, 3D-printed, or used in game engines. There are also multiple dedicated formats for Minecraft Java and Bedrock Edition with format-specific features.&lt;/p&gt; 
&lt;p&gt;Blockbench features a modern and beginner friendly interface, but also offers lots of customization and advanced features for experienced 3D artists. Plugins can extend the functionality of the program even further.&lt;/p&gt; 
&lt;p&gt;Website and download: &lt;a href="https://www.blockbench.net"&gt;blockbench.net&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://web.blockbench.net/content/front_page_app.png" alt="Interface" /&gt;&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/JannisX11/blockbench/master/CODE_OF_CONDUCT.MD"&gt;&lt;img src="https://img.shields.io/badge/Contributor%20Covenant-2.0-4baaaa.svg?sanitize=true" alt="Contributor Covenant" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href="https://raw.githubusercontent.com/JannisX11/blockbench/master/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Launching Blockbench&lt;/h2&gt; 
&lt;p&gt;To launch Blockbench from source, you can clone the repository, navigate to the correct branch and launch the program in development mode using the instructions below. If you just want to use the latest version, please download the app from the website.&lt;/p&gt; 
&lt;h3&gt;Setup Repository&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href="https://nodejs.org/en/"&gt;NodeJS&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Then install all dependencies via &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run in Electron&lt;/h3&gt; 
&lt;p&gt;Use this command or press Ctrl + Shift + B to launch Blockbench in Electron:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm run dev&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;To enable debugging in VS Code, switch to the &lt;strong&gt;Run &amp;amp; Debug&lt;/strong&gt; tab, select the &lt;strong&gt;"Debug Renderer"&lt;/strong&gt; configuration, and press the green arrow button to launch. Now you can set breakpoints and debug inside VSCode.&lt;/p&gt; 
&lt;h3&gt;Run the web app&lt;/h3&gt; 
&lt;p&gt;Use this command to launch the web app locally:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm run serve&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Now you can open the web app in your browser under &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;p&gt;Blockbench supports Javascript-based plugins. Learn more about creating plugins on &lt;a href="https://www.blockbench.net/wiki/docs/plugin"&gt;https://www.blockbench.net/wiki/docs/plugin&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;The Blockbench source-code is licensed under the GPL license version 3. See &lt;code&gt;LICENSE.MD&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Modifications to the source code can be made under the terms of that license.&lt;/li&gt; 
 &lt;li&gt;Blockbench plugins (external scripts) and themes (theme files to customize the design) that interact with the Blockbench API are an exception. Plugins and themes can be created and/or published as open source, proprietary or paid software.&lt;/li&gt; 
 &lt;li&gt;All assets created with Blockbench (models, textures, animations, screenshots etc.) are your own!&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>FreeTubeApp/FreeTube</title>
      <link>https://github.com/FreeTubeApp/FreeTube</link>
      <description>&lt;p&gt;An Open Source YouTube app for privacy&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img alt="" src="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/_icons/logoColor.svg?sanitize=true" width="500" align="center" /&gt; &lt;/p&gt; 
&lt;p&gt;FreeTube is an open source desktop YouTube player built with privacy in mind. Use YouTube without advertisements and prevent Google from tracking you with their cookies and JavaScript. Available for Windows (10 and later), Mac (macOS 12 and later) &amp;amp; Linux thanks to Electron.&lt;/p&gt; 
&lt;p align="center"&gt;&lt;a href="https://github.com/FreeTubeApp/FreeTube/releases"&gt;Download FreeTube&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/FreeTubeApp/FreeTube/actions/workflows/build.yml"&gt; &lt;img alt="Build status" src="https://github.com/FreeTubeApp/FreeTube/actions/workflows/build.yml/badge.svg?branch=development" /&gt; &lt;/a&gt; &lt;a href="https://hosted.weblate.org/engage/free-tube/"&gt; &lt;img src="https://hosted.weblate.org/widgets/free-tube/-/svg-badge.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt;&lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#screenshots"&gt;Screenshots&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#how-does-it-work"&gt;How does it work?&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#features"&gt;Features&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#download-links"&gt;Download Links&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#contributing"&gt;Contributing&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#localization"&gt;Localization&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#contact"&gt;Contact&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#donate"&gt;Donate&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#license"&gt;License&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt;&lt;a href="https://freetubeapp.io/"&gt;Website&lt;/a&gt; • &lt;a href="https://blog.freetubeapp.io/"&gt;Blog&lt;/a&gt; • &lt;a href="https://docs.freetubeapp.io/"&gt;Documentation&lt;/a&gt; • &lt;a href="https://docs.freetubeapp.io/faq/"&gt;FAQ&lt;/a&gt; • &lt;a href="https://github.com/FreeTubeApp/FreeTube/discussions"&gt;Discussions&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] FreeTube is currently in Beta. While it should work well for most users, there are still bugs and missing features that need to be addressed.&lt;/p&gt; 
 &lt;p&gt;If you have an idea or if you found a bug, please submit a &lt;a href="https://github.com/FreeTubeApp/FreeTube/issues/new/choose"&gt;GitHub issue&lt;/a&gt; so that we can track it. Please &lt;a href="https://github.com/FreeTubeApp/FreeTube/issues?q=is%3Aissue+sort%3Arelevance-desc"&gt;search the existing issues&lt;/a&gt; before submitting to prevent duplicates!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;The main FreeTube window&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/FreeTubeApp/FreeTubeApp.io/master/src/images/FreeTube1.png" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Watching a video&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/FreeTubeApp/FreeTubeApp.io/master/src/images/FreeTube2.png" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Settings&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/FreeTubeApp/FreeTubeApp.io/master/src/images/FreeTube3.png" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;How does it work?&lt;/h2&gt; 
&lt;p&gt;FreeTube uses a built in extractor to grab and serve data / videos. The &lt;a href="https://github.com/iv-org/invidious"&gt;Invidious API&lt;/a&gt; can also optionally be used. FreeTube does not use any official APIs to obtain data. While YouTube can still see your video requests, it can no longer track you using cookies or JavaScript. Your subscriptions, playlists and history are stored locally on your computer and never sent out.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; Using a VPN or Tor is highly recommended to hide your IP while using FreeTube.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Watch videos without ads&lt;/li&gt; 
 &lt;li&gt;Use YouTube without Google tracking you using cookies and JavaScript&lt;/li&gt; 
 &lt;li&gt;Two extractor APIs to choose from (Built in or Invidious)&lt;/li&gt; 
 &lt;li&gt;Subscribe to channels without an account&lt;/li&gt; 
 &lt;li&gt;Connect to an externally setup proxy such as Tor&lt;/li&gt; 
 &lt;li&gt;View and search your local subscriptions, playlists and history&lt;/li&gt; 
 &lt;li&gt;Organize your subscriptions into "Profiles" to create a more focused feed&lt;/li&gt; 
 &lt;li&gt;Export &amp;amp; import subscriptions&lt;/li&gt; 
 &lt;li&gt;Youtube Trending&lt;/li&gt; 
 &lt;li&gt;Youtube Chapters&lt;/li&gt; 
 &lt;li&gt;Most popular videos page based on the set Invidious instance&lt;/li&gt; 
 &lt;li&gt;SponsorBlock&lt;/li&gt; 
 &lt;li&gt;DeArrow&lt;/li&gt; 
 &lt;li&gt;Open videos from your browser directly into FreeTube (with extension)&lt;/li&gt; 
 &lt;li&gt;Watch videos using an external player&lt;/li&gt; 
 &lt;li&gt;Full Theme support&lt;/li&gt; 
 &lt;li&gt;Make a screenshot of a video&lt;/li&gt; 
 &lt;li&gt;Multiple windows&lt;/li&gt; 
 &lt;li&gt;Mini Player (Picture-in-Picture)&lt;/li&gt; 
 &lt;li&gt;Keyboard shortcuts&lt;/li&gt; 
 &lt;li&gt;Option to show only family friendly content&lt;/li&gt; 
 &lt;li&gt;Show/hide functionality or elements within the app using the distraction free settings&lt;/li&gt; 
 &lt;li&gt;View channel posts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Browser Extensions&lt;/h3&gt; 
&lt;p&gt;The following extensions open YouTube links directly in FreeTube:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://libredirect.github.io/"&gt;LibRedirect&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MStankiewiczOfficial/RedirectTube"&gt;RedirectTube&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;LibRedirect automatically redirect YouTube links to FreeTube.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] To ensure proper functionality, select FreeTube as Frontend in the Services settings of the extension.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;RedirectTube, doesn’t automatically open YouTube links in FreeTube. Instead, it adds buttons to the toolbar and context menu, which you can click to open videos in FreeTube manually.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Download LibRedirect from &lt;a href="https://addons.mozilla.org/firefox/addon/libredirect/"&gt;Mozilla Add-ons&lt;/a&gt; (for Firefox based-browsers) or &lt;a href="https://libredirect.github.io/download_chromium.html"&gt;developer's website&lt;/a&gt; (for Chrome and Chromium-based browsers).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Download RedirectTube from &lt;a href="https://addons.mozilla.org/firefox/addon/redirecttube/"&gt;Mozilla Add-ons&lt;/a&gt; (for Firefox based-browsers).&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] These extensions do not work on Linux portable builds!&lt;/p&gt; 
 &lt;p&gt;If you have issues with the extension working with FreeTube, please create an issue in this repository instead of the extension repository.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Download Links&lt;/h2&gt; 
&lt;h3&gt;Official Downloads&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] FreeTube is only supported on Windows 10 and later, macOS 12 and above, and various Linux distributions. Installing it on unsupported systems may result in unexpected issues.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/FreeTubeApp/FreeTube/releases"&gt;GitHub Releases&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://freetubeapp.io/#download"&gt;FreeTube Website&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Flatpak on Flathub: &lt;a href="https://flathub.org/apps/details/io.freetubeapp.FreeTube"&gt;Download&lt;/a&gt; and &lt;a href="https://github.com/flathub/io.freetubeapp.FreeTube"&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Automated Builds (Nightly / Weekly)&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Use these builds at your own risk. These are pre-release versions and are only intended for people that want to test changes early and are willing to accept that things could break from one build to another.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Builds are automatically created from changes to our development branch via &lt;a href="https://github.com/FreeTubeApp/FreeTube/actions?query=workflow%3ABuild"&gt;GitHub Actions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The first build with a green check mark is the latest build.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] You will need to have a GitHub account to download these builds.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Unofficial Downloads&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] These builds are maintained by the community. While they should be safe, download at your own risk. There may be issues with using these versus the official builds. Any issues specific with these builds should be sent to their respective maintainer. Make sure u always try an &lt;a href="https://github.com/freetubeapp/freetube/#official-downloads"&gt;official download&lt;/a&gt; before reporting your issue to us!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Arch User Repository (AUR): &lt;a href="https://aur.archlinux.org/packages/freetube-bin/"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Chocolatey: &lt;a href="https://chocolatey.org/packages/freetube/"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;FreeTubeAndroid (FreeTube port for Android and PWA): &lt;a href="https://github.com/MarmadileManteater/FreeTubeAndroid/releases"&gt;Download&lt;/a&gt; and &lt;a href="https://github.com/MarmadileManteater/FreeTubeAndroid"&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Homebrew Formulae (Mac only): &lt;a href="https://github.com/PikachuEXE/homebrew-FreeTube"&gt;Download for Apple Silicon&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;makedeb Package Repository (MPR): &lt;a href="https://mpr.makedeb.org/packages/freetube-bin"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Nix Packages: &lt;a href="https://search.nixos.org/packages?query=freetube"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;PortableApps (Windows Only): &lt;a href="https://github.com/rddim/FreeTubePortable/releases"&gt;Download&lt;/a&gt; and &lt;a href="https://github.com/rddim/FreeTubePortable"&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Scoop (Windows Only): &lt;a href="https://github.com/ScoopInstaller/Scoop"&gt;Usage&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Snap: &lt;a href="https://snapcraft.io/freetube"&gt;Download&lt;/a&gt; and &lt;a href="https://git.launchpad.net/freetube"&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;WAPT: &lt;a href="https://wapt.tranquil.it/store/tis-freetube"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Windows Package Manager (winget): &lt;a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/"&gt;Usage&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Thank you very much to the &lt;a href="https://docs.freetubeapp.io/credits/"&gt;People and Projects&lt;/a&gt; that make FreeTube possible!&lt;/p&gt; 
&lt;p&gt;If you like to get your hands dirty and want to contribute, we would love to have your help. Send a pull request and someone will review your code.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Please follow the &lt;a href="https://github.com/FreeTubeApp/FreeTube/raw/development/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; before sending your pull request.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Localization&lt;/h2&gt; 
&lt;a href="https://hosted.weblate.org/engage/free-tube/"&gt; &lt;img src="https://hosted.weblate.org/widgets/free-tube/-/287x66-grey.png" alt="Translation status" /&gt; &lt;/a&gt; 
&lt;p&gt;We are actively looking for translations! We use &lt;a href="https://hosted.weblate.org/engage/free-tube/"&gt;Weblate&lt;/a&gt; to make it easy for translators to get involved. Click on the badge above to learn how to get involved.&lt;/p&gt; 
&lt;p&gt;For the Linux Flatpak, the desktop entry comment string can be translated at our &lt;a href="https://github.com/flathub/io.freetubeapp.FreeTube/raw/master/io.freetubeapp.FreeTube.desktop"&gt;Flatpak repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;If you ever have any questions, feel free to ask it on our &lt;a href="https://github.com/FreeTubeApp/FreeTube/discussions"&gt;Discussions&lt;/a&gt; page. Alternatively, you can email us at &lt;a href="mailto:FreeTubeApp@protonmail.com"&gt;FreeTubeApp@protonmail.com&lt;/a&gt; or you can join our &lt;a href="https://matrix.to/#/#freetube:matrix.org"&gt;Matrix Room&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Don't forget to check out the &lt;a href="https://docs.freetubeapp.io/community/matrix/"&gt;rules&lt;/a&gt; before joining.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;If you enjoy using FreeTube, you're welcome to leave a donation using the following method.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bitcoin Address: &lt;code&gt;1Lih7Ho5gnxb1CwPD4o59ss78pwo2T91eS&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;While your donations are much appreciated, only donate if you really want to. Donations are used for keeping the website up and running and eventual code signing costs.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] If you are using the Invidious API then we recommend that you donate to the instance that you use. You can also donate to the &lt;a href="https://invidious.io/donate/"&gt;Invidious team&lt;/a&gt; or the &lt;a href="https://github.com/sponsors/LuanRT"&gt;Local API developer&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.gnu.org/licenses/agpl-3.0.html"&gt;&lt;img src="https://www.gnu.org/graphics/agplv3-155x51.png" alt="GNU AGPLv3 Image" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;FreeTube is Free Software: You can use, study share and improve it at your will. Specifically you can redistribute and/or modify it under the terms of the &lt;a href="https://www.gnu.org/licenses/agpl-3.0.html"&gt;GNU Affero General Public License&lt;/a&gt; as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>npm/cli</title>
      <link>https://github.com/npm/cli</link>
      <description>&lt;p&gt;the package manager for JavaScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;npm - a JavaScript package manager&lt;/h1&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;p&gt;You should be running a currently supported version of &lt;a href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt; to run &lt;strong&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/strong&gt;. For a list of which versions of Node.js are currently supported, please see the &lt;a href="https://nodejs.org/en/about/previous-releases"&gt;Node.js releases&lt;/a&gt; page.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/strong&gt; comes bundled with &lt;a href="https://nodejs.org/"&gt;&lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;, &amp;amp; most third-party distributions, by default. Officially supported downloads/distributions can be found at: &lt;a href="https://nodejs.org/en/download"&gt;nodejs.org/en/download&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Direct Download&lt;/h4&gt; 
&lt;p&gt;You can download &amp;amp; install &lt;strong&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/strong&gt; directly from &lt;a href="https://npmjs.com/"&gt;&lt;strong&gt;npmjs&lt;/strong&gt;.com&lt;/a&gt; using our custom &lt;code&gt;install.sh&lt;/code&gt; script:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -qL https://www.npmjs.com/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Node Version Managers&lt;/h4&gt; 
&lt;p&gt;If you're looking to manage multiple versions of &lt;strong&gt;&lt;code&gt;Node.js&lt;/code&gt;&lt;/strong&gt; &amp;amp;/or &lt;strong&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/strong&gt;, consider using a &lt;a href="https://github.com/search?q=node+version+manager+archived%3Afalse&amp;amp;type=repositories&amp;amp;ref=advsearch"&gt;node version manager&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm &amp;lt;command&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Links &amp;amp; Resources&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.npmjs.com/"&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/a&gt; - Official docs &amp;amp; how-tos for all things &lt;strong&gt;npm&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Note: you can also search docs locally with &lt;code&gt;npm help-search &amp;lt;query&amp;gt;&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/npm/cli/issues"&gt;&lt;strong&gt;Bug Tracker&lt;/strong&gt;&lt;/a&gt; - Search or submit bugs against the CLI&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orgs/github/projects/4247/views/1?filterQuery=npm"&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;&lt;/a&gt; - Track &amp;amp; follow along with our public roadmap&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orgs/community/discussions/categories/npm"&gt;&lt;strong&gt;Community Feedback and Discussions&lt;/strong&gt;&lt;/a&gt; - Contribute ideas &amp;amp; discussion around the npm registry, website &amp;amp; CLI&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/npm/rfcs"&gt;&lt;strong&gt;RFCs&lt;/strong&gt;&lt;/a&gt; - Contribute ideas &amp;amp; specifications for the API/design of the npm CLI&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://status.npmjs.org/"&gt;&lt;strong&gt;Service Status&lt;/strong&gt;&lt;/a&gt; - Monitor the current status &amp;amp; see incident reports for the website &amp;amp; registry&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://npm.github.io/statusboard/"&gt;&lt;strong&gt;Project Status&lt;/strong&gt;&lt;/a&gt; - See the health of all our maintained OSS projects in one view&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/support"&gt;&lt;strong&gt;Support&lt;/strong&gt;&lt;/a&gt; - Experiencing problems with the &lt;strong&gt;npm&lt;/strong&gt; &lt;a href="https://npmjs.com"&gt;website&lt;/a&gt; or &lt;a href="https://registry.npmjs.org"&gt;registry&lt;/a&gt;? &lt;a href="https://www.npmjs.com/support"&gt;File a ticket&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Acknowledgments&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;npm&lt;/code&gt; is configured to use the &lt;strong&gt;npm Public Registry&lt;/strong&gt; at &lt;a href="https://registry.npmjs.org"&gt;https://registry.npmjs.org&lt;/a&gt; by default; Usage of this registry is subject to &lt;strong&gt;Terms of Use&lt;/strong&gt; available at &lt;a href="https://npmjs.com/policies/terms"&gt;https://npmjs.com/policies/terms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;You can configure &lt;code&gt;npm&lt;/code&gt; to use any other compatible registry you prefer. You can read more about &lt;a href="https://docs.npmjs.com/cli/v7/using-npm/registry"&gt;configuring third-party registries&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;FAQ on Branding&lt;/h3&gt; 
&lt;h4&gt;Is it "npm" or "NPM" or "Npm"?&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/strong&gt; should never be capitalized unless it is being displayed in a location that is customarily all-capitals (ex. titles on &lt;code&gt;man&lt;/code&gt; pages).&lt;/p&gt; 
&lt;h4&gt;Is "npm" an acronym for "Node Package Manager"?&lt;/h4&gt; 
&lt;p&gt;Contrary to popular belief, &lt;strong&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;is not&lt;/strong&gt; in fact an acronym for "Node Package Manager"; It is a recursive bacronymic abbreviation for &lt;strong&gt;"npm is not an acronym"&lt;/strong&gt; (if the project was named "ninaa", then it would be an acronym). The precursor to &lt;strong&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/strong&gt; was actually a bash utility named &lt;strong&gt;"pm"&lt;/strong&gt;, which was the shortform name of &lt;strong&gt;"pkgmakeinst"&lt;/strong&gt; - a bash function that installed various things on various platforms. If &lt;strong&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/strong&gt; were to ever have been considered an acronym, it would be as "node pm" or, potentially "new pm".&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>juliangarnier/anime</title>
      <link>https://github.com/juliangarnier/anime</link>
      <description>&lt;p&gt;JavaScript animation engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Anime.js&lt;/h1&gt; 
&lt;p align="center"&gt; 
 &lt;picture align="center"&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/images/animejs-v4-logo-animation-dark.gif" /&gt; 
  &lt;img align="center" alt="Anime.js V4 logo animation" src="https://raw.githubusercontent.com/juliangarnier/anime/master/assets/images/animejs-v4-logo-animation.gif" width="560" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;strong&gt; &lt;em&gt;Anime.js&lt;/em&gt; is a fast, multipurpose and lightweight JavaScript animation library with a simple, yet powerful API.&lt;br /&gt; It works with CSS properties, SVG, DOM attributes and JavaScript Objects. &lt;/strong&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img alt="NPM Downloads" src="https://img.shields.io/npm/dm/animejs?style=flat-square&amp;amp;logo=npm" /&gt; &lt;img alt="jsDelivr hits (npm)" src="https://img.shields.io/jsdelivr/npm/hm/animejs?style=flat-square&amp;amp;logo=jsdeliver" /&gt; &lt;img alt="GitHub Sponsors" src="https://img.shields.io/github/sponsors/juliangarnier?style=flat-square&amp;amp;logo=github" /&gt; &lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Anime.js is 100% free and is only made possible with the help of our sponsors. Help the project become sustainable by sponsoring us on &lt;a target="_blank" href="https://github.com/sponsors/juliangarnier"&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Platinum sponsors&lt;/h3&gt; 
&lt;p&gt; &lt;a target="_blank" href="https://ice.io/?ref=animejs"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/sponsors/ice-open-network-logomark.png" /&gt; 
   &lt;img align="center" src="https://raw.githubusercontent.com/juliangarnier/anime/master/assets/sponsors/ice-open-network-logomark-dark.png" width="250" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a target="_blank" href="https://go.warp.dev/anime"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/sponsors/warp-logomark.png" /&gt; 
   &lt;img align="center" src="https://raw.githubusercontent.com/juliangarnier/anime/master/assets/sponsors/warp-logomark-dark.png" width="250" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3&gt;Silver sponsors&lt;/h3&gt; 
&lt;p&gt; &lt;a target="_blank" href="https://www.lambdatest.com?utm_source=animeJS&amp;amp;utm_medium=organic&amp;amp;utm_campaign=july_08&amp;amp;utm_term=sk&amp;amp;utm_content=opensource"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/sponsors/lambdatest-logomark.png" /&gt; 
   &lt;img align="center" src="https://raw.githubusercontent.com/juliangarnier/anime/master/assets/sponsors/lambdatest-logomark-dark.png" width="150" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a target="_blank" href="https://inspatialapp.com/?ref=animejs"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/sponsors/inspatial-logomark.png" /&gt; 
   &lt;img align="center" src="https://raw.githubusercontent.com/juliangarnier/anime/master/assets/sponsors/inspatial-logomark-dark.png" width="150" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Anime.js V4 works by importing ES modules like so:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import {
  animate,
  stagger,
} from 'animejs';

animate('.square', {
  x: 320,
  rotate: { from: -180 },
  duration: 1250,
  delay: stagger(65, { from: 'center' }),
  ease: 'inOutQuint',
  loop: true,
  alternate: true
});
&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img align="center" alt="Anime.js code example" src="https://raw.githubusercontent.com/juliangarnier/anime/master/assets/images/usage-example-result.gif" /&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;V4 Documentation&lt;/h2&gt; 
&lt;p&gt;The full documentation is available &lt;a href="https://animejs.com/documentation"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;V3 Migration guide&lt;/h2&gt; 
&lt;p&gt;You can find the v3 to v4 migration guide &lt;a href="https://github.com/juliangarnier/anime/wiki/Migrating-from-v3-to-v4"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;NPM development scripts&lt;/h2&gt; 
&lt;p&gt;First, run &lt;code&gt;npm i&lt;/code&gt; to install all the necessary packages. Then, execute the following scripts with &lt;code&gt;npm run &amp;lt;script&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;script&lt;/th&gt; 
   &lt;th&gt;action&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Watches for changes in &lt;code&gt;src/**/*.js&lt;/code&gt;, bundles the ESM version to &lt;code&gt;lib/&lt;/code&gt; and creates type declarations in &lt;code&gt;types/&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;dev:test&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Runs &lt;code&gt;dev&lt;/code&gt; and &lt;code&gt;test:browser&lt;/code&gt; concurrently&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;build&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Bundles ESM / UMD / CJS / IIFE versions to &lt;code&gt;lib/&lt;/code&gt; and creates type declarations in &lt;code&gt;types/&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;test:browser&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Starts a local server and runs all browser-related tests&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;test:node&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Starts Node-related tests&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;open:examples&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Starts a local server to browse the examples locally&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;© &lt;a href="http://juliangarnier.com"&gt;Julian Garnier&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/juliangarnier/anime/master/LICENSE.md"&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>expressjs/express</title>
      <link>https://github.com/expressjs/express</link>
      <description>&lt;p&gt;Fast, unopinionated, minimalist web framework for node.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://expressjs.com/"&gt;&lt;img src="https://i.cloudup.com/zfY6lL7eFa-3000x3000.png" alt="Express Logo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Fast, unopinionated, minimalist web framework for &lt;a href="https://nodejs.org"&gt;Node.js&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This project has a &lt;a href="https://github.com/expressjs/.github/raw/HEAD/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#table-of-contents"&gt;Table of contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#docs--community"&gt;Docs &amp;amp; Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#philosophy"&gt;Philosophy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#contributing"&gt;Contributing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#security-issues"&gt;Security Issues&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#running-tests"&gt;Running Tests&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#current-project-team-members"&gt;Current project team members&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#tc-technical-committee"&gt;TC (Technical Committee)&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#tc-emeriti-members"&gt;TC emeriti members&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#triagers"&gt;Triagers&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#emeritus-triagers"&gt;Emeritus Triagers&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://npmjs.org/package/express"&gt;&lt;img src="https://badgen.net/npm/v/express" alt="NPM Version" /&gt;&lt;/a&gt; &lt;a href="https://npmcharts.com/compare/express?minimal=true"&gt;&lt;img src="https://badgen.net/npm/dm/express" alt="NPM Downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/expressjs/express/actions/workflows/ci.yml"&gt;&lt;img src="https://badgen.net/github/checks/expressjs/express/master?label=CI" alt="Linux Build" /&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/expressjs/express?branch=master"&gt;&lt;img src="https://badgen.net/coveralls/c/github/expressjs/express/master" alt="Test Coverage" /&gt;&lt;/a&gt; &lt;a href="https://ossf.github.io/scorecard-visualizer/#/projects/github.com/expressjs/express"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/expressjs/express/badge" alt="OpenSSF Scorecard Badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import express from 'express'

const app = express()

app.get('/', (req, res) =&amp;gt; {
  res.send('Hello World')
})

app.listen(3000, () =&amp;gt; {
  console.log('Server is running on http://localhost:3000')
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;This is a &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt; module available through the &lt;a href="https://www.npmjs.com/"&gt;npm registry&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Before installing, &lt;a href="https://nodejs.org/en/download/"&gt;download and install Node.js&lt;/a&gt;. Node.js 18 or higher is required.&lt;/p&gt; 
&lt;p&gt;If this is a brand new project, make sure to create a &lt;code&gt;package.json&lt;/code&gt; first with the &lt;a href="https://docs.npmjs.com/creating-a-package-json-file"&gt;&lt;code&gt;npm init&lt;/code&gt; command&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Installation is done using the &lt;a href="https://docs.npmjs.com/getting-started/installing-npm-packages-locally"&gt;&lt;code&gt;npm install&lt;/code&gt; command&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install express
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Follow &lt;a href="https://expressjs.com/en/starter/installing.html"&gt;our installing guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Robust routing&lt;/li&gt; 
 &lt;li&gt;Focus on high performance&lt;/li&gt; 
 &lt;li&gt;Super-high test coverage&lt;/li&gt; 
 &lt;li&gt;HTTP helpers (redirection, caching, etc)&lt;/li&gt; 
 &lt;li&gt;View system supporting 14+ template engines&lt;/li&gt; 
 &lt;li&gt;Content negotiation&lt;/li&gt; 
 &lt;li&gt;Executable for generating applications quickly&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Docs &amp;amp; Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://expressjs.com/"&gt;Website and Documentation&lt;/a&gt; - [&lt;a href="https://github.com/expressjs/expressjs.com"&gt;website repo&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/expressjs"&gt;GitHub Organization&lt;/a&gt; for Official Middleware &amp;amp; Modules&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/expressjs/discussions"&gt;Github Discussions&lt;/a&gt; for discussion on the development and usage of Express&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;PROTIP&lt;/strong&gt; Be sure to read the &lt;a href="https://expressjs.com/en/guide/migrating-5"&gt;migration guide to v5&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;The quickest way to get started with express is to utilize the executable &lt;a href="https://github.com/expressjs/generator"&gt;&lt;code&gt;express(1)&lt;/code&gt;&lt;/a&gt; to generate an application as shown below:&lt;/p&gt; 
&lt;p&gt;Install the executable. The executable's major version will match Express's:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g express-generator@4
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create the app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;express /tmp/foo &amp;amp;&amp;amp; cd /tmp/foo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;View the website at: &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;The Express philosophy is to provide small, robust tooling for HTTP servers, making it a great solution for single page applications, websites, hybrids, or public HTTP APIs.&lt;/p&gt; 
&lt;p&gt;Express does not force you to use any specific ORM or template engine. With support for over 14 template engines via &lt;a href="https://github.com/ladjs/consolidate"&gt;@ladjs/consolidate&lt;/a&gt;, you can quickly craft your perfect framework.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;To view the examples, clone the Express repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/expressjs/express.git --depth 1 &amp;amp;&amp;amp; cd express
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then install the dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then run whichever example you want:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;node examples/content-negotiation
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The Express.js project welcomes all constructive contributions. Contributions take many forms, from code for bug fixes and enhancements, to additions and fixes to documentation, additional tests, triaging incoming pull requests and issues, and more!&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/expressjs/.github/raw/HEAD/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for more technical details on contributing.&lt;/p&gt; 
&lt;h3&gt;Security Issues&lt;/h3&gt; 
&lt;p&gt;If you discover a security vulnerability in Express, please see &lt;a href="https://raw.githubusercontent.com/expressjs/express/master/SECURITY.md"&gt;Security Policies and Procedures&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Running Tests&lt;/h3&gt; 
&lt;p&gt;To run the test suite, first install the dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then run &lt;code&gt;npm test&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Current project team members&lt;/h2&gt; 
&lt;p&gt;For information about the governance of the express.js project, see &lt;a href="https://github.com/expressjs/discussions/raw/HEAD/docs/GOVERNANCE.md"&gt;GOVERNANCE.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The original author of Express is &lt;a href="https://github.com/tj"&gt;TJ Holowaychuk&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/expressjs/express/graphs/contributors"&gt;List of all contributors&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;TC (Technical Committee)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/UlisesGascon"&gt;UlisesGascon&lt;/a&gt; - &lt;strong&gt;Ulises Gascón&lt;/strong&gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonchurch"&gt;jonchurch&lt;/a&gt; - &lt;strong&gt;Jon Church&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wesleytodd"&gt;wesleytodd&lt;/a&gt; - &lt;strong&gt;Wes Todd&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LinusU"&gt;LinusU&lt;/a&gt; - &lt;strong&gt;Linus Unnebäck&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blakeembrey"&gt;blakeembrey&lt;/a&gt; - &lt;strong&gt;Blake Embrey&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sheplu"&gt;sheplu&lt;/a&gt; - &lt;strong&gt;Jean Burellier&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/crandmck"&gt;crandmck&lt;/a&gt; - &lt;strong&gt;Rand McKinney&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ctcpip"&gt;ctcpip&lt;/a&gt; - &lt;strong&gt;Chris de Almeida&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;TC emeriti members&lt;/summary&gt; 
 &lt;h4&gt;TC emeriti members&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dougwilson"&gt;dougwilson&lt;/a&gt; - &lt;strong&gt;Douglas Wilson&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hacksparrow"&gt;hacksparrow&lt;/a&gt; - &lt;strong&gt;Hage Yaapa&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jonathanong"&gt;jonathanong&lt;/a&gt; - &lt;strong&gt;jongleberry&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/niftylettuce"&gt;niftylettuce&lt;/a&gt; - &lt;strong&gt;niftylettuce&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/troygoode"&gt;troygoode&lt;/a&gt; - &lt;strong&gt;Troy Goode&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aravindvnair99"&gt;aravindvnair99&lt;/a&gt; - &lt;strong&gt;Aravind Nair&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bjohansebas"&gt;bjohansebas&lt;/a&gt; - &lt;strong&gt;Sebastian Beltran&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carpasse"&gt;carpasse&lt;/a&gt; - &lt;strong&gt;Carlos Serrano&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CBID2"&gt;CBID2&lt;/a&gt; - &lt;strong&gt;Christine Belzie&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dpopp07"&gt;dpopp07&lt;/a&gt; - &lt;strong&gt;Dustin Popp&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/UlisesGascon"&gt;UlisesGascon&lt;/a&gt; - &lt;strong&gt;Ulises Gascón&lt;/strong&gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/3imed-jaberi"&gt;3imed-jaberi&lt;/a&gt; - &lt;strong&gt;Imed Jaberi&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/IamLizu"&gt;IamLizu&lt;/a&gt; - &lt;strong&gt;S M Mahmudul Hasan&lt;/strong&gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Phillip9587"&gt;Phillip9587&lt;/a&gt; - &lt;strong&gt;Phillip Barta&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Sushmeet"&gt;Sushmeet&lt;/a&gt; - &lt;strong&gt;Sushmeet Sunger&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rxmarbles"&gt;rxmarbles&lt;/a&gt; &lt;strong&gt;Rick Markins&lt;/strong&gt; (He/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Triagers emeriti members&lt;/summary&gt; 
 &lt;h4&gt;Emeritus Triagers&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AuggieH"&gt;AuggieH&lt;/a&gt; - &lt;strong&gt;Auggie Hudak&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/G-Rath"&gt;G-Rath&lt;/a&gt; - &lt;strong&gt;Gareth Jones&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MohammadXroid"&gt;MohammadXroid&lt;/a&gt; - &lt;strong&gt;Mohammad Ayashi&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/NawafSwe"&gt;NawafSwe&lt;/a&gt; - &lt;strong&gt;Nawaf Alsharqi&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/NotMoni"&gt;NotMoni&lt;/a&gt; - &lt;strong&gt;Moni&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/VigneshMurugan"&gt;VigneshMurugan&lt;/a&gt; - &lt;strong&gt;Vignesh Murugan&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/davidmashe"&gt;davidmashe&lt;/a&gt; - &lt;strong&gt;David Ashe&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/digitaIfabric"&gt;digitaIfabric&lt;/a&gt; - &lt;strong&gt;David&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/e-l-i-s-e"&gt;e-l-i-s-e&lt;/a&gt; - &lt;strong&gt;Elise Bonner&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/fed135"&gt;fed135&lt;/a&gt; - &lt;strong&gt;Frederic Charette&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/firmanJS"&gt;firmanJS&lt;/a&gt; - &lt;strong&gt;Firman Abdul Hakim&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/getspooky"&gt;getspooky&lt;/a&gt; - &lt;strong&gt;Yasser Ameur&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ghinks"&gt;ghinks&lt;/a&gt; - &lt;strong&gt;Glenn&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ghousemohamed"&gt;ghousemohamed&lt;/a&gt; - &lt;strong&gt;Ghouse Mohamed&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gireeshpunathil"&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jake32321"&gt;jake32321&lt;/a&gt; - &lt;strong&gt;Jake Reed&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jonchurch"&gt;jonchurch&lt;/a&gt; - &lt;strong&gt;Jon Church&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lekanikotun"&gt;lekanikotun&lt;/a&gt; - &lt;strong&gt;Troy Goode&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/marsonya"&gt;marsonya&lt;/a&gt; - &lt;strong&gt;Lekan Ikotun&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mastermatt"&gt;mastermatt&lt;/a&gt; - &lt;strong&gt;Matt R. Wilson&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/maxakuru"&gt;maxakuru&lt;/a&gt; - &lt;strong&gt;Max Edell&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mlrawlings"&gt;mlrawlings&lt;/a&gt; - &lt;strong&gt;Michael Rawlings&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rodion-arr"&gt;rodion-arr&lt;/a&gt; - &lt;strong&gt;Rodion Abdurakhimov&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sheplu"&gt;sheplu&lt;/a&gt; - &lt;strong&gt;Jean Burellier&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tarunyadav1"&gt;tarunyadav1&lt;/a&gt; - &lt;strong&gt;Tarun yadav&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tunniclm"&gt;tunniclm&lt;/a&gt; - &lt;strong&gt;Mike Tunnicliffe&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/enyoghasim"&gt;enyoghasim&lt;/a&gt; - &lt;strong&gt;David Enyoghasim&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/0ss"&gt;0ss&lt;/a&gt; - &lt;strong&gt;Salah&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/import-brain"&gt;import-brain&lt;/a&gt; - &lt;strong&gt;Eric Cheng&lt;/strong&gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dakshkhetan"&gt;dakshkhetan&lt;/a&gt; - &lt;strong&gt;Daksh Khetan&lt;/strong&gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lucasraziel"&gt;lucasraziel&lt;/a&gt; - &lt;strong&gt;Lucas Soares Do Rego&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mertcanaltin"&gt;mertcanaltin&lt;/a&gt; - &lt;strong&gt;Mert Can Altin&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Stremio/stremio-web</title>
      <link>https://github.com/Stremio/stremio-web</link>
      <description>&lt;p&gt;Stremio - Freedom to Stream&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stremio - Freedom to Stream&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/Stremio/stremio-web/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/Stremio/stremio-web/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build" /&gt;&lt;/a&gt; &lt;a href="https://stremio.github.io/stremio-web/development"&gt;&lt;img src="https://img.shields.io/website?label=Page&amp;amp;logo=github&amp;amp;up_message=online&amp;amp;down_message=offline&amp;amp;url=https%3A%2F%2Fstremio.github.io%2Fstremio-web%2F" alt="Github Page" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Stremio is a modern media center that's a one-stop solution for your video entertainment. You discover, watch and organize video content from easy to install addons.&lt;/p&gt; 
&lt;h2&gt;Build&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js 12 or higher&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pnpm.io/installation"&gt;pnpm&lt;/a&gt; 10 or higher&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Install dependencies&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Start development server&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Production build&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run with Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker build -t stremio-web .
docker run -p 8080:8080 stremio-web
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;h3&gt;Board&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Stremio/stremio-web/development/screenshots/board.png" alt="Board" /&gt;&lt;/p&gt; 
&lt;h3&gt;Discover&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Stremio/stremio-web/development/screenshots/discover.png" alt="Discover" /&gt;&lt;/p&gt; 
&lt;h3&gt;Meta Details&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Stremio/stremio-web/development/screenshots/metadetails.png" alt="Meta Details" /&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Stremio is copyright 2017-2023 Smart code and available under GPLv2 license. See the &lt;a href="https://raw.githubusercontent.com/Stremio/stremio-web/development/LICENSE.md"&gt;LICENSE&lt;/a&gt; file in the project for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>therealgliz/blooket-hacks</title>
      <link>https://github.com/therealgliz/blooket-hacks</link>
      <description>&lt;p&gt;Multiple game hacks to use so the game become easier to play!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;blooket-hack&lt;/h1&gt; 
&lt;p&gt;Hell i'm actually gliz who created the blooket hacks. I got the repo from the guy who was impersonating me.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This repo will not be updated at all. If you have any questions join the discord server below I'll be answering them.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;discord server: &lt;a href="https://discord.gg/Nj9Zs5VtFp"&gt;https://discord.gg/Nj9Zs5VtFp&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Proof thats it me: &lt;img src="https://user-images.githubusercontent.com/108590774/177013795-80b0e338-fa58-4eba-837f-340bab0c4e9a.png" alt="image" /&gt;&lt;/p&gt; 
&lt;h1&gt;Contact&lt;/h1&gt; 
&lt;p&gt;if you want to contact me just dm me on twitter &lt;a href="https://twitter.com/glizuwu"&gt;https://twitter.com/glizuwu&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mindcraft-bots/mindcraft</title>
      <link>https://github.com/mindcraft-bots/mindcraft</link>
      <description>&lt;p&gt;Minecraft AI with LLMs+Mineflayer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mindcraft 🧠⛏️&lt;/h1&gt; 
&lt;p&gt;Crafting minds for Minecraft with LLMs and &lt;a href="https://prismarinejs.github.io/mineflayer/#/"&gt;Mineflayer!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/mindcraft-bots/mindcraft/raw/main/FAQ.md"&gt;FAQ&lt;/a&gt; | &lt;a href="https://discord.gg/mp73p35dzC"&gt;Discord Support&lt;/a&gt; | &lt;a href="https://www.youtube.com/watch?v=gRotoL8P8D8"&gt;Video Tutorial&lt;/a&gt; | &lt;a href="https://kolbynottingham.com/mindcraft/"&gt;Blog Post&lt;/a&gt; | &lt;a href="https://github.com/users/kolbytn/projects/1"&gt;Contributor TODO&lt;/a&gt; | &lt;a href="https://mindcraft-minecollab.github.io/index.html"&gt;Paper Website&lt;/a&gt; | &lt;a href="https://github.com/mindcraft-bots/mindcraft/raw/main/minecollab.md"&gt;MineCollab&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Caution] Do not connect this bot to public servers with coding enabled. This project allows an LLM to write/execute code on your computer. The code is sandboxed, but still vulnerable to injection attacks. Code writing is disabled by default, you can enable it by setting &lt;code&gt;allow_insecure_coding&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in &lt;code&gt;settings.js&lt;/code&gt;. Ye be warned.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.minecraft.net/en-us/store/minecraft-java-bedrock-edition-pc"&gt;Minecraft Java Edition&lt;/a&gt; (up to v1.21.6, recommend v1.21.6)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/"&gt;Node.js Installed&lt;/a&gt; (at least v18)&lt;/li&gt; 
 &lt;li&gt;One of these: &lt;a href="https://openai.com/blog/openai-api"&gt;OpenAI API Key&lt;/a&gt; | &lt;a href="https://aistudio.google.com/app/apikey"&gt;Gemini API Key&lt;/a&gt; | &lt;a href="https://docs.anthropic.com/claude/docs/getting-access-to-claude"&gt;Anthropic API Key&lt;/a&gt; | &lt;a href="https://replicate.com/"&gt;Replicate API Key&lt;/a&gt; | &lt;a href="https://huggingface.co/"&gt;Hugging Face API Key&lt;/a&gt; | &lt;a href="https://console.groq.com/keys"&gt;Groq API Key&lt;/a&gt; | &lt;a href="https://ollama.com/download"&gt;Ollama Installed&lt;/a&gt;. | &lt;a href="https://docs.mistral.ai/getting-started/models/models_overview/"&gt;Mistral API Key&lt;/a&gt; | &lt;a href="https://www.alibabacloud.com/help/en/model-studio/developer-reference/get-api-key"&gt;Qwen API Key [Intl.]&lt;/a&gt;/&lt;a href="https://help.aliyun.com/zh/model-studio/getting-started/first-api-call-to-qwen?"&gt;[cn]&lt;/a&gt; | &lt;a href="https://novita.ai/settings?utm_source=github_mindcraft&amp;amp;utm_medium=github_readme&amp;amp;utm_campaign=link#key-management"&gt;Novita AI API Key&lt;/a&gt; | &lt;a href="https://cloud.cerebras.ai"&gt;Cerebras API Key&lt;/a&gt; | &lt;a href="https://platform.inceptionlabs.ai/docs"&gt;Mercury API&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install and Run&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Make sure you have the requirements above.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone or download this repository (big green button) 'git clone &lt;a href="https://github.com/mindcraft-bots/mindcraft.git"&gt;https://github.com/mindcraft-bots/mindcraft.git&lt;/a&gt;'&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Rename &lt;code&gt;keys.example.json&lt;/code&gt; to &lt;code&gt;keys.json&lt;/code&gt; and fill in your API keys (you only need one). The desired model is set in &lt;code&gt;andy.json&lt;/code&gt; or other profiles. For other models refer to the table below.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In terminal/command prompt, run &lt;code&gt;npm install&lt;/code&gt; from the installed directory&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start a minecraft world and open it to LAN on localhost port &lt;code&gt;55916&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;node main.js&lt;/code&gt; from the installed directory&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;If you encounter issues, check the &lt;a href="https://github.com/mindcraft-bots/mindcraft/raw/main/FAQ.md"&gt;FAQ&lt;/a&gt; or find support on &lt;a href="https://discord.gg/mp73p35dzC"&gt;discord&lt;/a&gt;. We are currently not very responsive to github issues. To run tasks please refer to &lt;a href="https://raw.githubusercontent.com/mindcraft-bots/mindcraft/develop/minecollab.md#installation"&gt;Minecollab Instructions&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Tasks&lt;/h2&gt; 
&lt;p&gt;Bot performance can be roughly evaluated with Tasks. Tasks automatically intialize bots with a goal to acquire specific items or construct predefined buildings, and remove the bot once the goal is achieved.&lt;/p&gt; 
&lt;p&gt;To run tasks, you need python, pip, and optionally conda. You can then install dependencies with &lt;code&gt;pip install -r requirements.txt&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Tasks are defined in json files in the &lt;code&gt;tasks&lt;/code&gt; folder, and can be run with: &lt;code&gt;python tasks/run_task_file.py --task_path=tasks/example_tasks.json&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For full evaluations, you will need to &lt;a href="https://raw.githubusercontent.com/mindcraft-bots/mindcraft/develop/minecollab.md#installation"&gt;download and install the task suite. Full instructions.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Model Customization&lt;/h2&gt; 
&lt;p&gt;You can configure project details in &lt;code&gt;settings.js&lt;/code&gt;. &lt;a href="https://raw.githubusercontent.com/mindcraft-bots/mindcraft/develop/settings.js"&gt;See file.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can configure the agent's name, model, and prompts in their profile like &lt;code&gt;andy.json&lt;/code&gt; with the &lt;code&gt;model&lt;/code&gt; field. For comprehensive details, see &lt;a href="https://raw.githubusercontent.com/mindcraft-bots/mindcraft/develop/#model-specifications"&gt;Model Specifications&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;API&lt;/th&gt; 
   &lt;th&gt;Config Variable&lt;/th&gt; 
   &lt;th&gt;Example Model name&lt;/th&gt; 
   &lt;th&gt;Docs&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;openai&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;gpt-4o-mini&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://platform.openai.com/docs/models"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;google&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;GEMINI_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;gemini-2.0-flash&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ai.google.dev/gemini-api/docs/models/gemini"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;anthropic&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ANTHROPIC_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;claude-3-haiku-20240307&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://docs.anthropic.com/claude/docs/models-overview"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;xai&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;XAI_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;grok-2-1212&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://docs.x.ai/docs"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;deepseek&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;DEEPSEEK_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;deepseek-chat&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://api-docs.deepseek.com/"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ollama&lt;/code&gt; (local)&lt;/td&gt; 
   &lt;td&gt;n/a&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama/sweaterdog/andy-4:micro-q8_0&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ollama.com/library"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;qwen&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;QWEN_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;qwen-max&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.alibabacloud.com/help/en/model-studio/developer-reference/use-qwen-by-calling-api"&gt;Intl.&lt;/a&gt;/&lt;a href="https://help.aliyun.com/zh/model-studio/getting-started/models"&gt;cn&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;mistral&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;MISTRAL_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;mistral-large-latest&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://docs.mistral.ai/getting-started/models/models_overview/"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;replicate&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;REPLICATE_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;replicate/meta/meta-llama-3-70b-instruct&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://replicate.com/collections/language-models"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;groq&lt;/code&gt; (not grok)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;GROQCLOUD_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;groq/mixtral-8x7b-32768&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://console.groq.com/docs/models"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;huggingface&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;HUGGINGFACE_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;huggingface/mistralai/Mistral-Nemo-Instruct-2407&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://huggingface.co/models"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;novita&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;NOVITA_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;novita/deepseek/deepseek-r1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://novita.ai/model-api/product/llm-api?utm_source=github_mindcraft&amp;amp;utm_medium=github_readme&amp;amp;utm_campaign=link"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;openrouter&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OPENROUTER_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;openrouter/anthropic/claude-3.5-sonnet&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://openrouter.ai/models"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;glhf.chat&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;GHLF_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;glhf/hf:meta-llama/Llama-3.1-405B-Instruct&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://glhf.chat/user-settings/api"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hyperbolic&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;HYPERBOLIC_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;hyperbolic/deepseek-ai/DeepSeek-V3&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://docs.hyperbolic.xyz/docs/getting-started"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;vllm&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;n/a&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;vllm/llama3&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;n/a&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;cerebras&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CEREBRAS_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;cerebras/llama-3.3-70b&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://inference-docs.cerebras.ai/introduction"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;mercury&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;MERCURY_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;mercury-coder-small&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.inceptionlabs.ai/"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you use Ollama, to install the models used by default (generation and embedding), execute the following terminal command: &lt;code&gt;ollama pull sweaterdog/andy-4:micro-q8_0 &amp;amp;&amp;amp; ollama pull embeddinggemma&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;To use Azure, you can reuse the &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; environment variable. You can get the key from the Azure portal. See &lt;a href="https://raw.githubusercontent.com/mindcraft-bots/mindcraft/develop/profiles/azure.json"&gt;azure.json&lt;/a&gt; for an example.&lt;/p&gt; 
&lt;h3&gt;Online Servers&lt;/h3&gt; 
&lt;p&gt;To connect to online servers your bot will need an official Microsoft/Minecraft account. You can use your own personal one, but will need another account if you want to connect too and play with it. To connect, change these lines in &lt;code&gt;settings.js&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;"host": "111.222.333.444",
"port": 55920,
"auth": "microsoft",

// rest is same...
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Important] The bot's name in the profile.json must exactly match the Minecraft profile name! Otherwise the bot will spam talk to itself.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To use different accounts, Mindcraft will connect with the account that the Minecraft launcher is currently using. You can switch accounts in the launcer, then run &lt;code&gt;node main.js&lt;/code&gt;, then switch to your main account after the bot has connected.&lt;/p&gt; 
&lt;h3&gt;Docker Container&lt;/h3&gt; 
&lt;p&gt;If you intend to &lt;code&gt;allow_insecure_coding&lt;/code&gt;, it is a good idea to run the app in a docker container to reduce risks of running unknown code. This is strongly recommended before connecting to remote servers.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -i -t --rm -v $(pwd):/app -w /app -p 3000-3003:3000-3003 node:18 node main.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or simply&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When running in docker, if you want the bot to join your local minecraft server, you have to use a special host address &lt;code&gt;host.docker.internal&lt;/code&gt; to call your localhost from inside your docker container. Put this into your &lt;a href="https://raw.githubusercontent.com/mindcraft-bots/mindcraft/develop/settings.js"&gt;settings.js&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;"host": "host.docker.internal", // instead of "localhost", to join your local minecraft from inside the docker container
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To connect to an unsupported minecraft version, you can try to use &lt;a href="https://raw.githubusercontent.com/mindcraft-bots/mindcraft/develop/services/viaproxy/README.md"&gt;viaproxy&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Bot Profiles&lt;/h1&gt; 
&lt;p&gt;Bot profiles are json files (such as &lt;code&gt;andy.json&lt;/code&gt;) that define:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Bot backend LLMs to use for talking, coding, and embedding.&lt;/li&gt; 
 &lt;li&gt;Prompts used to influence the bot's behavior.&lt;/li&gt; 
 &lt;li&gt;Examples help the bot perform tasks.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Model Specifications&lt;/h2&gt; 
&lt;p&gt;LLM models can be specified simply as &lt;code&gt;"model": "gpt-4o"&lt;/code&gt;. However, you can use different models for chat, coding, and embeddings. You can pass a string or an object for these fields. A model object must specify an &lt;code&gt;api&lt;/code&gt;, and optionally a &lt;code&gt;model&lt;/code&gt;, &lt;code&gt;url&lt;/code&gt;, and additional &lt;code&gt;params&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;"model": {
  "api": "openai",
  "model": "gpt-4o",
  "url": "https://api.openai.com/v1/",
  "params": {
    "max_tokens": 1000,
    "temperature": 1
  }
},
"code_model": {
  "api": "openai",
  "model": "gpt-4",
  "url": "https://api.openai.com/v1/"
},
"vision_model": {
  "api": "openai",
  "model": "gpt-4o",
  "url": "https://api.openai.com/v1/"
},
"embedding": {
  "api": "openai",
  "url": "https://api.openai.com/v1/",
  "model": "text-embedding-ada-002"
},
"speak_model": {
  "api": "openai",
  "url": "https://api.openai.com/v1/",
  "model": "tts-1",
  "voice": "echo"
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;model&lt;/code&gt; is used for chat, &lt;code&gt;code_model&lt;/code&gt; is used for newAction coding, &lt;code&gt;vision_model&lt;/code&gt; is used for image interpretation, and &lt;code&gt;embedding&lt;/code&gt; is used to embed text for example selection. If &lt;code&gt;code_model&lt;/code&gt; or &lt;code&gt;vision_model&lt;/code&gt; is not specified, &lt;code&gt;model&lt;/code&gt; will be used by default. Not all APIs support embeddings or vision.&lt;/p&gt; 
&lt;p&gt;All apis have default models and urls, so those fields are optional. The &lt;code&gt;params&lt;/code&gt; field is optional and can be used to specify additional parameters for the model. It accepts any key-value pairs supported by the api. Is not supported for embedding models.&lt;/p&gt; 
&lt;h2&gt;Embedding Models&lt;/h2&gt; 
&lt;p&gt;Embedding models are used to embed and efficiently select relevant examples for conversation and coding.&lt;/p&gt; 
&lt;p&gt;Supported Embedding APIs: &lt;code&gt;openai&lt;/code&gt;, &lt;code&gt;google&lt;/code&gt;, &lt;code&gt;replicate&lt;/code&gt;, &lt;code&gt;huggingface&lt;/code&gt;, &lt;code&gt;novita&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If you try to use an unsupported model, then it will default to a simple word-overlap method. Expect reduced performance, recommend mixing APIs to ensure embedding support.&lt;/p&gt; 
&lt;h2&gt;Specifying Profiles via Command Line&lt;/h2&gt; 
&lt;p&gt;By default, the program will use the profiles specified in &lt;code&gt;settings.js&lt;/code&gt;. You can specify one or more agent profiles using the &lt;code&gt;--profiles&lt;/code&gt; argument: &lt;code&gt;node main.js --profiles ./profiles/andy.json ./profiles/jill.json&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Patches&lt;/h2&gt; 
&lt;p&gt;Some of the node modules that we depend on have bugs in them. To add a patch, change your local node module file and run &lt;code&gt;npx patch-package [package-name]&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Citation:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;@article{mindcraft2025,
  title = {Collaborating Action by Action: A Multi-agent LLM Framework for Embodied Reasoning},
  author = {White*, Isadora and Nottingham*, Kolby and Maniar, Ayush and Robinson, Max and Lillemark, Hansen and Maheshwari, Mehul and Qin, Lianhui and Ammanabrolu, Prithviraj},
  journal = {arXiv preprint arXiv:2504.17950},
  year = {2025},
  url = {https://arxiv.org/abs/2504.17950},
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>WebGoat/WebGoat</title>
      <link>https://github.com/WebGoat/WebGoat</link>
      <description>&lt;p&gt;WebGoat is a deliberately insecure application&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WebGoat: A deliberately insecure Web Application&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/WebGoat/WebGoat/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/WebGoat/WebGoat/actions/workflows/build.yml/badge.svg?branch=develop" alt="Build" /&gt;&lt;/a&gt; &lt;a href="https://jdk.java.net/"&gt;&lt;img src="https://img.shields.io/badge/java%20jdk-25-green.svg?sanitize=true" alt="java-jdk" /&gt;&lt;/a&gt; &lt;a href="https://owasp.org/projects/"&gt;&lt;img src="https://img.shields.io/badge/OWASP-Lab%20project-f7b73c.svg?sanitize=true" alt="OWASP Labs" /&gt;&lt;/a&gt; &lt;a href="https://github.com/WebGoat/WebGoat/releases/latest"&gt;&lt;img src="https://img.shields.io/github/release/WebGoat/WebGoat.svg?sanitize=true" alt="GitHub release" /&gt;&lt;/a&gt; &lt;a href="https://gitter.im/OWASPWebGoat/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge"&gt;&lt;img src="https://badges.gitter.im/OWASPWebGoat/community.svg?sanitize=true" alt="Gitter" /&gt;&lt;/a&gt; &lt;a href="https://github.com/WebGoat/WebGoat/discussions"&gt;&lt;img src="https://img.shields.io/github/discussions/WebGoat/WebGoat" alt="Discussions" /&gt;&lt;/a&gt; &lt;a href="https://conventionalcommits.org"&gt;&lt;img src="https://img.shields.io/badge/Conventional%20Commits-1.0.0-%23FE5196?logo=conventionalcommits&amp;amp;logoColor=white" alt="Conventional Commits" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Introduction&lt;/h1&gt; 
&lt;p&gt;WebGoat is a deliberately insecure web application maintained by &lt;a href="http://www.owasp.org/"&gt;OWASP&lt;/a&gt; designed to teach web application security lessons.&lt;/p&gt; 
&lt;p&gt;This program is a demonstration of common server-side application flaws. The exercises are intended to be used by people to learn about application security and penetration testing techniques.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WARNING 1:&lt;/strong&gt; &lt;em&gt;While running this program your machine will be extremely vulnerable to attack. You should disconnect from the Internet while using this program.&lt;/em&gt; WebGoat's default configuration binds to localhost to minimize the exposure.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WARNING 2:&lt;/strong&gt; &lt;em&gt;This program is for educational purposes only. If you attempt these techniques without authorization, you are very likely to get caught. If you are caught engaging in unauthorized hacking, most companies will fire you. Claiming that you were doing security research will not work as that is the first thing that all hackers claim.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/WebGoat/WebGoat/main/docs/images/webgoat.png" alt="WebGoat" /&gt;&lt;/p&gt; 
&lt;h1&gt;Installation instructions:&lt;/h1&gt; 
&lt;p&gt;For more details check &lt;a href="https://raw.githubusercontent.com/WebGoat/WebGoat/main/CONTRIBUTING.md"&gt;the Contribution guide&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;1. Run using Docker&lt;/h2&gt; 
&lt;p&gt;Already have a browser and ZAP and/or Burp installed on your machine in this case you can run the WebGoat image directly using Docker.&lt;/p&gt; 
&lt;p&gt;Every release is also published on &lt;a href="https://hub.docker.com/r/webgoat/webgoat"&gt;DockerHub&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For some lessons you need the container run in the same timezone. For this you can set the TZ environment variable. E.g.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 -e TZ=America/Boise webgoat/webgoat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to use OWASP ZAP or another proxy, you can no longer use 127.0.0.1 or localhost. but you can use custom host entries. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;127.0.0.1 www.webgoat.local www.webwolf.local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then you can run the container with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 -e WEBGOAT_HOST=www.webgoat.local -e WEBWOLF_HOST=www.webwolf.local -e TZ=America/Boise webgoat/webgoat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;a href="http://www.webgoat.local:8080/WebGoat/"&gt;http://www.webgoat.local:8080/WebGoat/&lt;/a&gt; and &lt;a href="http://www.webwolf.local:9090/WebWolf/"&gt;http://www.webwolf.local:9090/WebWolf/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;2. Run using Docker with complete Linux Desktop&lt;/h2&gt; 
&lt;p&gt;Instead of installing tools locally we have a complete Docker image based on running a desktop in your browser. This way you only have to run a Docker image which will give you the best user experience.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;3. Standalone&lt;/h2&gt; 
&lt;p&gt;Download the latest WebGoat release from &lt;a href="https://github.com/WebGoat/WebGoat/releases"&gt;https://github.com/WebGoat/WebGoat/releases&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;export TZ=Europe/Amsterdam # or your timezone
java -Dfile.encoding=UTF-8 -jar webgoat-2023.8.jar
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Click the link in the log to start WebGoat.&lt;/p&gt; 
&lt;h3&gt;3.1 Running on a different port&lt;/h3&gt; 
&lt;p&gt;If for some reason you want to run WebGoat on a different port, you can do so by adding the following parameter:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;java -jar webgoat-2023.8.jar --webgoat.port=8001 --webwolf.port=8002
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For a full overview of all the parameters you can use, please check the [WebGoat properties file](webgoat-container/src/main/resources/application-{webgoat, webwolf}.properties).&lt;/p&gt; 
&lt;h2&gt;4. Run from the sources&lt;/h2&gt; 
&lt;h3&gt;Prerequisites:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Java 25&lt;/li&gt; 
 &lt;li&gt;Your favorite IDE&lt;/li&gt; 
 &lt;li&gt;Git, or Git support in your IDE&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Open a command shell/window:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Shell"&gt;git clone git@github.com:WebGoat/WebGoat.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now let's start by compiling the project.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Shell"&gt;cd WebGoat
git checkout &amp;lt;&amp;lt;branch_name&amp;gt;&amp;gt;
# On Linux/Mac:
./mvnw clean install

# On Windows:
./mvnw.cmd clean install

# Using docker or podman, you can than build the container locally
docker build -f Dockerfile . -t webgoat/webgoat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now we are ready to run the project. WebGoat is using Spring Boot.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Shell"&gt;# On Linux/Mac:
./mvnw spring-boot:run
# On Windows:
./mvnw.cmd spring-boot:run

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;... you should be running WebGoat on &lt;a href="http://localhost:8080/WebGoat"&gt;http://localhost:8080/WebGoat&lt;/a&gt; momentarily.&lt;/p&gt; 
&lt;p&gt;Note: The above link will redirect you to login page if you are not logged in. LogIn/Create account to proceed.&lt;/p&gt; 
&lt;p&gt;To change the IP address add the following variable to the &lt;code&gt;WebGoat/webgoat-container/src/main/resources/application.properties&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;server.address=x.x.x.x
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;4. Run with custom menu&lt;/h2&gt; 
&lt;p&gt;For specialist only. There is a way to set up WebGoat with a personalized menu. You can leave out some menu categories or individual lessons by setting certain environment variables.&lt;/p&gt; 
&lt;p&gt;For instance running as a jar on a Linux/macOS it will look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Shell"&gt;export TZ=Europe/Amsterdam # or your timezone
export EXCLUDE_CATEGORIES="CLIENT_SIDE,GENERAL,CHALLENGE"
export EXCLUDE_LESSONS="SqlInjectionAdvanced,SqlInjectionMitigations"
java -jar target/webgoat-2023.8-SNAPSHOT.jar
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or in a docker run it would (once this version is pushed into docker hub) look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Shell"&gt;docker run -d -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 -e EXCLUDE_CATEGORIES="CLIENT_SIDE,GENERAL,CHALLENGE" -e EXCLUDE_LESSONS="SqlInjectionAdvanced,SqlInjectionMitigations" webgoat/webgoat
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>airbnb/javascript</title>
      <link>https://github.com/airbnb/javascript</link>
      <description>&lt;p&gt;JavaScript Style Guide&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Airbnb JavaScript Style Guide() {&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;A mostly reasonable approach to JavaScript&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this guide assumes you are using &lt;a href="https://babeljs.io"&gt;Babel&lt;/a&gt;, and requires that you use &lt;a href="https://npmjs.com/babel-preset-airbnb"&gt;babel-preset-airbnb&lt;/a&gt; or the equivalent. It also assumes you are installing shims/polyfills in your app, with &lt;a href="https://npmjs.com/airbnb-browser-shims"&gt;airbnb-browser-shims&lt;/a&gt; or the equivalent.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/eslint-config-airbnb"&gt;&lt;img src="https://img.shields.io/npm/dm/eslint-config-airbnb.svg?sanitize=true" alt="Downloads" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/eslint-config-airbnb-base"&gt;&lt;img src="https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg?sanitize=true" alt="Downloads" /&gt;&lt;/a&gt; &lt;a href="https://gitter.im/airbnb/javascript?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge"&gt;&lt;img src="https://badges.gitter.im/Join%20Chat.svg?sanitize=true" alt="Gitter" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This guide is available in other languages too. See &lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#translation"&gt;Translation&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Other Style Guides&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/airbnb/javascript/tree/es5-deprecated/es5"&gt;ES5 (Deprecated)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/react/"&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/css-in-javascript/"&gt;CSS-in-JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/airbnb/css"&gt;CSS &amp;amp; Sass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/airbnb/ruby"&gt;Ruby&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#types"&gt;Types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#references"&gt;References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#objects"&gt;Objects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#arrays"&gt;Arrays&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring"&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#strings"&gt;Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#functions"&gt;Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions"&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors"&gt;Classes &amp;amp; Constructors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#modules"&gt;Modules&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators"&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#properties"&gt;Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#variables"&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting"&gt;Hoisting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#comparison-operators--equality"&gt;Comparison Operators &amp;amp; Equality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#blocks"&gt;Blocks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements"&gt;Control Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#comments"&gt;Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace"&gt;Whitespace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#commas"&gt;Commas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons"&gt;Semicolons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#type-casting--coercion"&gt;Type Casting &amp;amp; Coercion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#naming-conventions"&gt;Naming Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#accessors"&gt;Accessors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#events"&gt;Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#jquery"&gt;jQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-5-compatibility"&gt;ECMAScript 5 Compatibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-6-es-2015-styles"&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library"&gt;Standard Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#testing"&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#performance"&gt;Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#resources"&gt;Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#in-the-wild"&gt;In the Wild&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#translation"&gt;Translation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#the-javascript-style-guide-guide"&gt;The JavaScript Style Guide Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#chat-with-us-about-javascript"&gt;Chat With Us About JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#amendments"&gt;Amendments&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Types&lt;/h2&gt; 
&lt;p&gt;&lt;a name="types--primitives"&gt;&lt;/a&gt;&lt;a name="1.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#types--primitives"&gt;1.1&lt;/a&gt; &lt;strong&gt;Primitives&lt;/strong&gt;: When you access a primitive type you work directly on its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;string&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;number&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;null&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bigint&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;br /&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;const foo = 1;
let bar = foo;

bar = 9;

console.log(foo, bar); // =&amp;gt; 1, 9
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Symbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don’t support them natively.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="types--complex"&gt;&lt;/a&gt;&lt;a name="1.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#types--complex"&gt;1.2&lt;/a&gt; &lt;strong&gt;Complex&lt;/strong&gt;: When you access a complex type you work on a reference to its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;object&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;array&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;function&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;br /&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;const foo = [1, 2];
const bar = foo;

bar[0] = 9;

console.log(foo[0], bar[0]); // =&amp;gt; 9, 9
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;p&gt;&lt;a name="references--prefer-const"&gt;&lt;/a&gt;&lt;a name="2.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#references--prefer-const"&gt;2.1&lt;/a&gt; Use &lt;code&gt;const&lt;/code&gt; for all of your references; avoid using &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href="https://eslint.org/docs/rules/prefer-const"&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://eslint.org/docs/rules/no-const-assign"&gt;&lt;code&gt;no-const-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures that you can’t reassign your references, which can lead to bugs and difficult to comprehend code.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
var a = 1;
var b = 2;

// good
const a = 1;
const b = 2;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="references--disallow-var"&gt;&lt;/a&gt;&lt;a name="2.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#references--disallow-var"&gt;2.2&lt;/a&gt; If you must reassign references, use &lt;code&gt;let&lt;/code&gt; instead of &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href="https://eslint.org/docs/rules/no-var"&gt;&lt;code&gt;no-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; is block-scoped rather than function-scoped like &lt;code&gt;var&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
var count = 1;
if (true) {
  count += 1;
}

// good, use the let.
let count = 1;
if (true) {
  count += 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="references--block-scope"&gt;&lt;/a&gt;&lt;a name="2.3"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#references--block-scope"&gt;2.3&lt;/a&gt; Note that both &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block-scoped, whereas &lt;code&gt;var&lt;/code&gt; is function-scoped.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// const and let only exist in the blocks they are defined in.
{
  let a = 1;
  const b = 1;
  var c = 1;
}
console.log(a); // ReferenceError
console.log(b); // ReferenceError
console.log(c); // Prints 1
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above code, you can see that referencing &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; will produce a ReferenceError, while &lt;code&gt;c&lt;/code&gt; contains the number. This is because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are block scoped, while &lt;code&gt;c&lt;/code&gt; is scoped to the containing function.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Objects&lt;/h2&gt; 
&lt;p&gt;&lt;a name="objects--no-new"&gt;&lt;/a&gt;&lt;a name="3.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#objects--no-new"&gt;3.1&lt;/a&gt; Use the literal syntax for object creation. eslint: &lt;a href="https://eslint.org/docs/rules/no-new-object"&gt;&lt;code&gt;no-new-object&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const item = new Object();

// good
const item = {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="es6-computed-properties"&gt;&lt;/a&gt;&lt;a name="3.4"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties"&gt;3.2&lt;/a&gt; Use computed property names when creating objects with dynamic property names.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They allow you to define all the properties of an object in one place.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;
function getKey(k) {
  return `a key named ${k}`;
}

// bad
const obj = {
  id: 5,
  name: 'San Francisco',
};
obj[getKey('enabled')] = true;

// good
const obj = {
  id: 5,
  name: 'San Francisco',
  [getKey('enabled')]: true,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="es6-object-shorthand"&gt;&lt;/a&gt;&lt;a name="3.5"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand"&gt;3.3&lt;/a&gt; Use object method shorthand. eslint: &lt;a href="https://eslint.org/docs/rules/object-shorthand"&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const atom = {
  value: 1,

  addValue: function (value) {
    return atom.value + value;
  },
};

// good
const atom = {
  value: 1,

  addValue(value) {
    return atom.value + value;
  },
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="es6-object-concise"&gt;&lt;/a&gt;&lt;a name="3.6"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise"&gt;3.4&lt;/a&gt; Use property value shorthand. eslint: &lt;a href="https://eslint.org/docs/rules/object-shorthand"&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is shorter and descriptive.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;const lukeSkywalker = 'Luke Skywalker';

// bad
const obj = {
  lukeSkywalker: lukeSkywalker,
};

// good
const obj = {
  lukeSkywalker,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="objects--grouped-shorthand"&gt;&lt;/a&gt;&lt;a name="3.7"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#objects--grouped-shorthand"&gt;3.5&lt;/a&gt; Group your shorthand properties at the beginning of your object declaration.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s easier to tell which properties are using the shorthand.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;const anakinSkywalker = 'Anakin Skywalker';
const lukeSkywalker = 'Luke Skywalker';

// bad
const obj = {
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  lukeSkywalker,
  episodeThree: 3,
  mayTheFourth: 4,
  anakinSkywalker,
};

// good
const obj = {
  lukeSkywalker,
  anakinSkywalker,
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  episodeThree: 3,
  mayTheFourth: 4,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="objects--quoted-props"&gt;&lt;/a&gt;&lt;a name="3.8"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#objects--quoted-props"&gt;3.6&lt;/a&gt; Only quote properties that are invalid identifiers. eslint: &lt;a href="https://eslint.org/docs/rules/quote-props"&gt;&lt;code&gt;quote-props&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const bad = {
  'foo': 3,
  'bar': 4,
  'data-blah': 5,
};

// good
const good = {
  foo: 3,
  bar: 4,
  'data-blah': 5,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="objects--prototype-builtins"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#objects--prototype-builtins"&gt;3.7&lt;/a&gt; Do not call &lt;code&gt;Object.prototype&lt;/code&gt; methods directly, such as &lt;code&gt;hasOwnProperty&lt;/code&gt;, &lt;code&gt;propertyIsEnumerable&lt;/code&gt;, and &lt;code&gt;isPrototypeOf&lt;/code&gt;. eslint: &lt;a href="https://eslint.org/docs/rules/no-prototype-builtins"&gt;&lt;code&gt;no-prototype-builtins&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? These methods may be shadowed by properties on the object in question - consider &lt;code&gt;{ hasOwnProperty: false }&lt;/code&gt; - or, the object may be a null object (&lt;code&gt;Object.create(null)&lt;/code&gt;). In modern browsers that support ES2022, or with a polyfill such as &lt;a href="https://npmjs.com/object.hasown"&gt;https://npmjs.com/object.hasown&lt;/a&gt;, &lt;code&gt;Object.hasOwn&lt;/code&gt; can also be used as an alternative to &lt;code&gt;Object.prototype.hasOwnProperty.call&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
console.log(object.hasOwnProperty(key));

// good
console.log(Object.prototype.hasOwnProperty.call(object, key));

// better
const has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.
console.log(has.call(object, key));

// best
console.log(Object.hasOwn(object, key)); // only supported in browsers that support ES2022

/* or */
import has from 'has'; // https://www.npmjs.com/package/has
console.log(has(object, key));
/* or */
console.log(Object.hasOwn(object, key)); // https://www.npmjs.com/package/object.hasown
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="objects--rest-spread"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#objects--rest-spread"&gt;3.8&lt;/a&gt; Prefer the object spread syntax over &lt;a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign"&gt;&lt;code&gt;Object.assign&lt;/code&gt;&lt;/a&gt; to shallow-copy objects. Use the object rest parameter syntax to get a new object with certain properties omitted. eslint: &lt;a href="https://eslint.org/docs/rules/prefer-object-spread"&gt;&lt;code&gt;prefer-object-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// very bad
const original = { a: 1, b: 2 };
const copy = Object.assign(original, { c: 3 }); // this mutates `original` ಠ_ಠ
delete copy.a; // so does this

// bad
const original = { a: 1, b: 2 };
const copy = Object.assign({}, original, { c: 3 }); // copy =&amp;gt; { a: 1, b: 2, c: 3 }

// good
const original = { a: 1, b: 2 };
const copy = { ...original, c: 3 }; // copy =&amp;gt; { a: 1, b: 2, c: 3 }

const { a, ...noA } = copy; // noA =&amp;gt; { b: 2, c: 3 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrays&lt;/h2&gt; 
&lt;p&gt;&lt;a name="arrays--literals"&gt;&lt;/a&gt;&lt;a name="4.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--literals"&gt;4.1&lt;/a&gt; Use the literal syntax for array creation. eslint: &lt;a href="https://eslint.org/docs/rules/no-array-constructor"&gt;&lt;code&gt;no-array-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const items = new Array();

// good
const items = [];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="arrays--push"&gt;&lt;/a&gt;&lt;a name="4.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--push"&gt;4.2&lt;/a&gt; Use &lt;a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push"&gt;Array#push&lt;/a&gt; instead of direct assignment to add items to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;const someStack = [];

// bad
someStack[someStack.length] = 'abracadabra';

// good
someStack.push('abracadabra');
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="es6-array-spreads"&gt;&lt;/a&gt;&lt;a name="4.3"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads"&gt;4.3&lt;/a&gt; Use array spreads &lt;code&gt;...&lt;/code&gt; to copy arrays.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const len = items.length;
const itemsCopy = [];
let i;

for (i = 0; i &amp;lt; len; i += 1) {
  itemsCopy[i] = items[i];
}

// good
const itemsCopy = [...items];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="arrays--from"&gt;&lt;/a&gt; &lt;a name="arrays--from-iterable"&gt;&lt;/a&gt;&lt;a name="4.4"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-iterable"&gt;4.4&lt;/a&gt; To convert an iterable object to an array, use spreads &lt;code&gt;...&lt;/code&gt; instead of &lt;a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from"&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;const foo = document.querySelectorAll('.foo');

// good
const nodes = Array.from(foo);

// best
const nodes = [...foo];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="arrays--from-array-like"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-array-like"&gt;4.5&lt;/a&gt; Use &lt;a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from"&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; for converting an array-like object to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;const arrLike = { 0: 'foo', 1: 'bar', 2: 'baz', length: 3 };

// bad
const arr = Array.prototype.slice.call(arrLike);

// good
const arr = Array.from(arrLike);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="arrays--mapping"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--mapping"&gt;4.6&lt;/a&gt; Use &lt;a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from"&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; instead of spread &lt;code&gt;...&lt;/code&gt; for mapping over iterables, because it avoids creating an intermediate array.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const baz = [...foo].map(bar);

// good
const baz = Array.from(foo, bar);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="arrays--callback-return"&gt;&lt;/a&gt;&lt;a name="4.5"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--callback-return"&gt;4.7&lt;/a&gt; Use return statements in array method callbacks. It’s ok to omit the return if the function body consists of a single statement returning an expression without side effects, following &lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return"&gt;8.2&lt;/a&gt;. eslint: &lt;a href="https://eslint.org/docs/rules/array-callback-return"&gt;&lt;code&gt;array-callback-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; x + 1);

// bad - no returned value means `acc` becomes undefined after the first iteration
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
});

// good
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
  return flatten;
});

// bad
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === 'Mockingbird') {
    return author === 'Harper Lee';
  } else {
    return false;
  }
});

// good
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === 'Mockingbird') {
    return author === 'Harper Lee';
  }

  return false;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="arrays--bracket-newline"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--bracket-newline"&gt;4.8&lt;/a&gt; Use line breaks after opening array brackets and before closing array brackets, if an array has multiple lines&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const arr = [
  [0, 1], [2, 3], [4, 5],
];

const objectInArray = [{
  id: 1,
}, {
  id: 2,
}];

const numberInArray = [
  1, 2,
];

// good
const arr = [[0, 1], [2, 3], [4, 5]];

const objectInArray = [
  {
    id: 1,
  },
  {
    id: 2,
  },
];

const numberInArray = [
  1,
  2,
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Destructuring&lt;/h2&gt; 
&lt;p&gt;&lt;a name="destructuring--object"&gt;&lt;/a&gt;&lt;a name="5.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object"&gt;5.1&lt;/a&gt; Use object destructuring when accessing and using multiple properties of an object. eslint: &lt;a href="https://eslint.org/docs/rules/prefer-destructuring"&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Destructuring saves you from creating temporary references for those properties, and from repetitive access of the object. Repeating object access creates more repetitive code, requires more reading, and creates more opportunities for mistakes. Destructuring objects also provides a single site of definition of the object structure that is used in the block, rather than requiring reading the entire block to determine what is used.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function getFullName(user) {
  const firstName = user.firstName;
  const lastName = user.lastName;

  return `${firstName} ${lastName}`;
}

// good
function getFullName(user) {
  const { firstName, lastName } = user;
  return `${firstName} ${lastName}`;
}

// best
function getFullName({ firstName, lastName }) {
  return `${firstName} ${lastName}`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="destructuring--array"&gt;&lt;/a&gt;&lt;a name="5.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--array"&gt;5.2&lt;/a&gt; Use array destructuring. eslint: &lt;a href="https://eslint.org/docs/rules/prefer-destructuring"&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;const arr = [1, 2, 3, 4];

// bad
const first = arr[0];
const second = arr[1];

// good
const [first, second] = arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="destructuring--object-over-array"&gt;&lt;/a&gt;&lt;a name="5.3"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object-over-array"&gt;5.3&lt;/a&gt; Use object destructuring for multiple return values, not array destructuring.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? You can add new properties over time or change the order of things without breaking call sites.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function processInput(input) {
  // then a miracle occurs
  return [left, right, top, bottom];
}

// the caller needs to think about the order of return data
const [left, __, top] = processInput(input);

// good
function processInput(input) {
  // then a miracle occurs
  return { left, right, top, bottom };
}

// the caller selects only the data they need
const { left, top } = processInput(input);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Strings&lt;/h2&gt; 
&lt;p&gt;&lt;a name="strings--quotes"&gt;&lt;/a&gt;&lt;a name="6.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#strings--quotes"&gt;6.1&lt;/a&gt; Use single quotes &lt;code&gt;''&lt;/code&gt; for strings. eslint: &lt;a href="https://eslint.org/docs/rules/quotes"&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const name = "Capt. Janeway";

// bad - template literals should contain interpolation or newlines
const name = `Capt. Janeway`;

// good
const name = 'Capt. Janeway';
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="strings--line-length"&gt;&lt;/a&gt;&lt;a name="6.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length"&gt;6.2&lt;/a&gt; Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Broken strings are painful to work with and make code less searchable.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const errorMessage = 'This is a super long error that was thrown because \
of Batman. When you stop to think about how Batman had anything to do \
with this, you would get nowhere \
fast.';

// bad
const errorMessage = 'This is a super long error that was thrown because ' +
  'of Batman. When you stop to think about how Batman had anything to do ' +
  'with this, you would get nowhere fast.';

// good
const errorMessage = 'This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.';
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="es6-template-literals"&gt;&lt;/a&gt;&lt;a name="6.4"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals"&gt;6.3&lt;/a&gt; When programmatically building up strings, use template strings instead of concatenation. eslint: &lt;a href="https://eslint.org/docs/rules/prefer-template"&gt;&lt;code&gt;prefer-template&lt;/code&gt;&lt;/a&gt; &lt;a href="https://eslint.org/docs/rules/template-curly-spacing"&gt;&lt;code&gt;template-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function sayHi(name) {
  return 'How are you, ' + name + '?';
}

// bad
function sayHi(name) {
  return ['How are you, ', name, '?'].join();
}

// bad
function sayHi(name) {
  return `How are you, ${ name }?`;
}

// good
function sayHi(name) {
  return `How are you, ${name}?`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="strings--eval"&gt;&lt;/a&gt;&lt;a name="6.5"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#strings--eval"&gt;6.4&lt;/a&gt; Never use &lt;code&gt;eval()&lt;/code&gt; on a string; it opens too many vulnerabilities. eslint: &lt;a href="https://eslint.org/docs/rules/no-eval"&gt;&lt;code&gt;no-eval&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="strings--escaping"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#strings--escaping"&gt;6.5&lt;/a&gt; Do not unnecessarily escape characters in strings. eslint: &lt;a href="https://eslint.org/docs/rules/no-useless-escape"&gt;&lt;code&gt;no-useless-escape&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Backslashes harm readability, thus they should only be present when necessary.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const foo = '\'this\' \i\s \"quoted\"';

// good
const foo = '\'this\' is "quoted"';
const foo = `my name is '${name}'`;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Functions&lt;/h2&gt; 
&lt;p&gt;&lt;a name="functions--declarations"&gt;&lt;/a&gt;&lt;a name="7.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#functions--declarations"&gt;7.1&lt;/a&gt; Use named function expressions instead of function declarations. eslint: &lt;a href="https://eslint.org/docs/rules/func-style"&gt;&lt;code&gt;func-style&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://eslint.org/docs/latest/rules/func-names"&gt;&lt;code&gt;func-names&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Function declarations are hoisted, which means that it’s easy - too easy - to reference the function before it is defined in the file. This harms readability and maintainability. If you find that a function’s definition is large or complex enough that it is interfering with understanding the rest of the file, then perhaps it’s time to extract it to its own module! Don’t forget to explicitly name the expression, regardless of whether or not the name is inferred from the containing variable (which is often the case in modern browsers or when using compilers such as Babel). This eliminates any assumptions made about the Error’s call stack. (&lt;a href="https://github.com/airbnb/javascript/issues/794"&gt;Discussion&lt;/a&gt;)&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function foo() {
  // ...
}

// bad
const foo = function () {
  // ...
};

// good
// lexical name distinguished from the variable-referenced invocation(s)
const short = function longUniqueMoreDescriptiveLexicalFoo() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="functions--iife"&gt;&lt;/a&gt;&lt;a name="7.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#functions--iife"&gt;7.2&lt;/a&gt; Wrap immediately invoked function expressions in parentheses. eslint: &lt;a href="https://eslint.org/docs/rules/wrap-iife"&gt;&lt;code&gt;wrap-iife&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? An immediately invoked function expression is a single unit - wrapping both it, and its invocation parens, in parens, cleanly expresses this. Note that in a world with modules everywhere, you almost never need an IIFE.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// immediately-invoked function expression (IIFE)
(function () {
  console.log('Welcome to the Internet. Please follow me.');
}());
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="functions--in-blocks"&gt;&lt;/a&gt;&lt;a name="7.3"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#functions--in-blocks"&gt;7.3&lt;/a&gt; Never declare a function in a non-function block (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears. eslint: &lt;a href="https://eslint.org/docs/rules/no-loop-func"&gt;&lt;code&gt;no-loop-func&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="functions--note-on-blocks"&gt;&lt;/a&gt;&lt;a name="7.4"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#functions--note-on-blocks"&gt;7.4&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; ECMA-262 defines a &lt;code&gt;block&lt;/code&gt; as a list of statements. A function declaration is not a statement.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
if (currentUser) {
  function test() {
    console.log('Nope.');
  }
}

// good
let test;
if (currentUser) {
  test = () =&amp;gt; {
    console.log('Yup.');
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="functions--arguments-shadow"&gt;&lt;/a&gt;&lt;a name="7.5"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#functions--arguments-shadow"&gt;7.5&lt;/a&gt; Never name a parameter &lt;code&gt;arguments&lt;/code&gt;. This will take precedence over the &lt;code&gt;arguments&lt;/code&gt; object that is given to every function scope.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function foo(name, options, arguments) {
  // ...
}

// good
function foo(name, options, args) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="es6-rest"&gt;&lt;/a&gt;&lt;a name="7.6"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest"&gt;7.6&lt;/a&gt; Never use &lt;code&gt;arguments&lt;/code&gt;, opt to use rest syntax &lt;code&gt;...&lt;/code&gt; instead. eslint: &lt;a href="https://eslint.org/docs/rules/prefer-rest-params"&gt;&lt;code&gt;prefer-rest-params&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;...&lt;/code&gt; is explicit about which arguments you want pulled. Plus, rest arguments are a real Array, and not merely Array-like like &lt;code&gt;arguments&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function concatenateAll() {
  const args = Array.prototype.slice.call(arguments);
  return args.join('');
}

// good
function concatenateAll(...args) {
  return args.join('');
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="es6-default-parameters"&gt;&lt;/a&gt;&lt;a name="7.7"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters"&gt;7.7&lt;/a&gt; Use default parameter syntax rather than mutating function arguments.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// really bad
function handleThings(opts) {
  // No! We shouldn’t mutate function arguments.
  // Double bad: if opts is falsy it'll be set to an object which may
  // be what you want but it can introduce subtle bugs.
  opts = opts || {};
  // ...
}

// still bad
function handleThings(opts) {
  if (opts === void 0) {
    opts = {};
  }
  // ...
}

// good
function handleThings(opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="functions--default-side-effects"&gt;&lt;/a&gt;&lt;a name="7.8"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#functions--default-side-effects"&gt;7.8&lt;/a&gt; Avoid side effects with default parameters.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They are confusing to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;let b = 1;
// bad
function count(a = b++) {
  console.log(a);
}
count();  // 1
count();  // 2
count(3); // 3
count();  // 3
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="functions--defaults-last"&gt;&lt;/a&gt;&lt;a name="7.9"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#functions--defaults-last"&gt;7.9&lt;/a&gt; Always put default parameters last. eslint: &lt;a href="https://eslint.org/docs/rules/default-param-last"&gt;&lt;code&gt;default-param-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function handleThings(opts = {}, name) {
  // ...
}

// good
function handleThings(name, opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="functions--constructor"&gt;&lt;/a&gt;&lt;a name="7.10"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#functions--constructor"&gt;7.10&lt;/a&gt; Never use the Function constructor to create a new function. eslint: &lt;a href="https://eslint.org/docs/rules/no-new-func"&gt;&lt;code&gt;no-new-func&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Creating a function in this way evaluates a string similarly to &lt;code&gt;eval()&lt;/code&gt;, which opens vulnerabilities.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const add = new Function('a', 'b', 'return a + b');

// still bad
const subtract = Function('a', 'b', 'return a - b');
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="functions--signature-spacing"&gt;&lt;/a&gt;&lt;a name="7.11"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-spacing"&gt;7.11&lt;/a&gt; Spacing in a function signature. eslint: &lt;a href="https://eslint.org/docs/rules/space-before-function-paren"&gt;&lt;code&gt;space-before-function-paren&lt;/code&gt;&lt;/a&gt; &lt;a href="https://eslint.org/docs/rules/space-before-blocks"&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Consistency is good, and you shouldn’t have to add or remove a space when adding or removing a name.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const f = function(){};
const g = function (){};
const h = function() {};

// good
const x = function () {};
const y = function a() {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="functions--mutate-params"&gt;&lt;/a&gt;&lt;a name="7.12"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#functions--mutate-params"&gt;7.12&lt;/a&gt; Never mutate parameters. eslint: &lt;a href="https://eslint.org/docs/rules/no-param-reassign"&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Manipulating objects passed in as parameters can cause unwanted variable side effects in the original caller.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function f1(obj) {
  obj.key = 1;
}

// good
function f2(obj) {
  const key = Object.prototype.hasOwnProperty.call(obj, 'key') ? obj.key : 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="functions--reassign-params"&gt;&lt;/a&gt;&lt;a name="7.13"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#functions--reassign-params"&gt;7.13&lt;/a&gt; Never reassign parameters. eslint: &lt;a href="https://eslint.org/docs/rules/no-param-reassign"&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Reassigning parameters can lead to unexpected behavior, especially when accessing the &lt;code&gt;arguments&lt;/code&gt; object. It can also cause optimization issues, especially in V8.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function f1(a) {
  a = 1;
  // ...
}

function f2(a) {
  if (!a) { a = 1; }
  // ...
}

// good
function f3(a) {
  const b = a || 1;
  // ...
}

function f4(a = 1) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="functions--spread-vs-apply"&gt;&lt;/a&gt;&lt;a name="7.14"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#functions--spread-vs-apply"&gt;7.14&lt;/a&gt; Prefer the use of the spread syntax &lt;code&gt;...&lt;/code&gt; to call variadic functions. eslint: &lt;a href="https://eslint.org/docs/rules/prefer-spread"&gt;&lt;code&gt;prefer-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s cleaner, you don’t need to supply a context, and you can not easily compose &lt;code&gt;new&lt;/code&gt; with &lt;code&gt;apply&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const x = [1, 2, 3, 4, 5];
console.log.apply(console, x);

// good
const x = [1, 2, 3, 4, 5];
console.log(...x);

// bad
new (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]));

// good
new Date(...[2016, 8, 5]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="functions--signature-invocation-indentation"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-invocation-indentation"&gt;7.15&lt;/a&gt; Functions with multiline signatures, or invocations, should be indented just like every other multiline list in this guide: with each item on a line by itself, with a trailing comma on the last item. eslint: &lt;a href="https://eslint.org/docs/rules/function-paren-newline"&gt;&lt;code&gt;function-paren-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function foo(bar,
             baz,
             quux) {
  // ...
}

// good
function foo(
  bar,
  baz,
  quux,
) {
  // ...
}

// bad
console.log(foo,
  bar,
  baz);

// good
console.log(
  foo,
  bar,
  baz,
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrow Functions&lt;/h2&gt; 
&lt;p&gt;&lt;a name="arrows--use-them"&gt;&lt;/a&gt;&lt;a name="8.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--use-them"&gt;8.1&lt;/a&gt; When you must use an anonymous function (as when passing an inline callback), use arrow function notation. eslint: &lt;a href="https://eslint.org/docs/rules/prefer-arrow-callback"&gt;&lt;code&gt;prefer-arrow-callback&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://eslint.org/docs/rules/arrow-spacing"&gt;&lt;code&gt;arrow-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It creates a version of the function that executes in the context of &lt;code&gt;this&lt;/code&gt;, which is usually what you want, and is a more concise syntax.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why not? If you have a fairly complicated function, you might move that logic out into its own named function expression.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
[1, 2, 3].map(function (x) {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="arrows--implicit-return"&gt;&lt;/a&gt;&lt;a name="8.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return"&gt;8.2&lt;/a&gt; If the function body consists of a single statement returning an &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions"&gt;expression&lt;/a&gt; without side effects, omit the braces and use the implicit return. Otherwise, keep the braces and use a &lt;code&gt;return&lt;/code&gt; statement. eslint: &lt;a href="https://eslint.org/docs/rules/arrow-parens"&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://eslint.org/docs/rules/arrow-body-style"&gt;&lt;code&gt;arrow-body-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Syntactic sugar. It reads well when multiple functions are chained together.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number) =&amp;gt; `A string containing the ${number + 1}.`);

// good
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  return `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number, index) =&amp;gt; ({
  [index]: number,
}));

// No implicit return with side effects
function foo(callback) {
  const val = callback();
  if (val === true) {
    // Do something if callback returns true
  }
}

let bool = false;

// bad
foo(() =&amp;gt; bool = true);

// good
foo(() =&amp;gt; {
  bool = true;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="arrows--paren-wrap"&gt;&lt;/a&gt;&lt;a name="8.3"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--paren-wrap"&gt;8.3&lt;/a&gt; In case the expression spans over multiple lines, wrap it in parentheses for better readability.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It shows clearly where the function starts and ends.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
['get', 'post', 'put'].map((httpMethod) =&amp;gt; Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
);

// good
['get', 'post', 'put'].map((httpMethod) =&amp;gt; (
  Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="arrows--one-arg-parens"&gt;&lt;/a&gt;&lt;a name="8.4"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--one-arg-parens"&gt;8.4&lt;/a&gt; Always include parentheses around arguments for clarity and consistency. eslint: &lt;a href="https://eslint.org/docs/rules/arrow-parens"&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Minimizes diff churn when adding or removing arguments.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
[1, 2, 3].map(x =&amp;gt; x * x);

// good
[1, 2, 3].map((x) =&amp;gt; x * x);

// bad
[1, 2, 3].map(number =&amp;gt; (
  `A long string with the ${number}. It’s so long that we don’t want it to take up space on the .map line!`
));

// good
[1, 2, 3].map((number) =&amp;gt; (
  `A long string with the ${number}. It’s so long that we don’t want it to take up space on the .map line!`
));

// bad
[1, 2, 3].map(x =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="arrows--confusing"&gt;&lt;/a&gt;&lt;a name="8.5"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--confusing"&gt;8.5&lt;/a&gt; Avoid confusing arrow function syntax (&lt;code&gt;=&amp;gt;&lt;/code&gt;) with comparison operators (&lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;). eslint: &lt;a href="https://eslint.org/docs/rules/no-confusing-arrow"&gt;&lt;code&gt;no-confusing-arrow&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const itemHeight = (item) =&amp;gt; item.height &amp;lt;= 256 ? item.largeSize : item.smallSize;

// bad
const itemHeight = (item) =&amp;gt; item.height &amp;gt;= 256 ? item.largeSize : item.smallSize;

// good
const itemHeight = (item) =&amp;gt; (item.height &amp;lt;= 256 ? item.largeSize : item.smallSize);

// good
const itemHeight = (item) =&amp;gt; {
  const { height, largeSize, smallSize } = item;
  return height &amp;lt;= 256 ? largeSize : smallSize;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--implicit-arrow-linebreak"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--implicit-arrow-linebreak"&gt;8.6&lt;/a&gt; Enforce the location of arrow function bodies with implicit returns. eslint: &lt;a href="https://eslint.org/docs/rules/implicit-arrow-linebreak"&gt;&lt;code&gt;implicit-arrow-linebreak&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
(foo) =&amp;gt;
  bar;

(foo) =&amp;gt;
  (bar);

// good
(foo) =&amp;gt; bar;
(foo) =&amp;gt; (bar);
(foo) =&amp;gt; (
   bar
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Classes &amp;amp; Constructors&lt;/h2&gt; 
&lt;p&gt;&lt;a name="constructors--use-class"&gt;&lt;/a&gt;&lt;a name="9.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--use-class"&gt;9.1&lt;/a&gt; Always use &lt;code&gt;class&lt;/code&gt;. Avoid manipulating &lt;code&gt;prototype&lt;/code&gt; directly.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;class&lt;/code&gt; syntax is more concise and easier to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function Queue(contents = []) {
  this.queue = [...contents];
}
Queue.prototype.pop = function () {
  const value = this.queue[0];
  this.queue.splice(0, 1);
  return value;
};

// good
class Queue {
  constructor(contents = []) {
    this.queue = [...contents];
  }
  pop() {
    const value = this.queue[0];
    this.queue.splice(0, 1);
    return value;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="constructors--extends"&gt;&lt;/a&gt;&lt;a name="9.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--extends"&gt;9.2&lt;/a&gt; Use &lt;code&gt;extends&lt;/code&gt; for inheritance.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is a built-in way to inherit prototype functionality without breaking &lt;code&gt;instanceof&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const inherits = require('inherits');
function PeekableQueue(contents) {
  Queue.apply(this, contents);
}
inherits(PeekableQueue, Queue);
PeekableQueue.prototype.peek = function () {
  return this.queue[0];
};

// good
class PeekableQueue extends Queue {
  peek() {
    return this.queue[0];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="constructors--chaining"&gt;&lt;/a&gt;&lt;a name="9.3"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--chaining"&gt;9.3&lt;/a&gt; Methods can return &lt;code&gt;this&lt;/code&gt; to help with method chaining.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
Jedi.prototype.jump = function () {
  this.jumping = true;
  return true;
};

Jedi.prototype.setHeight = function (height) {
  this.height = height;
};

const luke = new Jedi();
luke.jump(); // =&amp;gt; true
luke.setHeight(20); // =&amp;gt; undefined

// good
class Jedi {
  jump() {
    this.jumping = true;
    return this;
  }

  setHeight(height) {
    this.height = height;
    return this;
  }
}

const luke = new Jedi();

luke.jump()
  .setHeight(20);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="constructors--tostring"&gt;&lt;/a&gt;&lt;a name="9.4"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--tostring"&gt;9.4&lt;/a&gt; It’s okay to write a custom &lt;code&gt;toString()&lt;/code&gt; method, just make sure it works successfully and causes no side effects.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;class Jedi {
  constructor(options = {}) {
    this.name = options.name || 'no name';
  }

  getName() {
    return this.name;
  }

  toString() {
    return `Jedi - ${this.getName()}`;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="constructors--no-useless"&gt;&lt;/a&gt;&lt;a name="9.5"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--no-useless"&gt;9.5&lt;/a&gt; Classes have a default constructor if one is not specified. An empty constructor function or one that just delegates to a parent class is unnecessary. eslint: &lt;a href="https://eslint.org/docs/rules/no-useless-constructor"&gt;&lt;code&gt;no-useless-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
class Jedi {
  constructor() {}

  getName() {
    return this.name;
  }
}

// bad
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
  }
}

// good
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
    this.name = 'Rey';
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="classes--no-duplicate-members"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#classes--no-duplicate-members"&gt;9.6&lt;/a&gt; Avoid duplicate class members. eslint: &lt;a href="https://eslint.org/docs/rules/no-dupe-class-members"&gt;&lt;code&gt;no-dupe-class-members&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Duplicate class member declarations will silently prefer the last one - having duplicates is almost certainly a bug.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
class Foo {
  bar() { return 1; }
  bar() { return 2; }
}

// good
class Foo {
  bar() { return 1; }
}

// good
class Foo {
  bar() { return 2; }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="classes--methods-use-this"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#classes--methods-use-this"&gt;9.7&lt;/a&gt; Class methods should use &lt;code&gt;this&lt;/code&gt; or be made into a static method unless an external library or framework requires using specific non-static methods. Being an instance method should indicate that it behaves differently based on properties of the receiver. eslint: &lt;a href="https://eslint.org/docs/rules/class-methods-use-this"&gt;&lt;code&gt;class-methods-use-this&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
class Foo {
  bar() {
    console.log('bar');
  }
}

// good - this is used
class Foo {
  bar() {
    console.log(this.bar);
  }
}

// good - constructor is exempt
class Foo {
  constructor() {
    // ...
  }
}

// good - static methods aren't expected to use this
class Foo {
  static bar() {
    console.log('bar');
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Modules&lt;/h2&gt; 
&lt;p&gt;&lt;a name="modules--use-them"&gt;&lt;/a&gt;&lt;a name="10.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#modules--use-them"&gt;10.1&lt;/a&gt; Always use modules (&lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt;) over a non-standard module system. You can always transpile to your preferred module system.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Modules are the future, let’s start using the future now.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const AirbnbStyleGuide = require('./AirbnbStyleGuide');
module.exports = AirbnbStyleGuide.es6;

// ok
import AirbnbStyleGuide from './AirbnbStyleGuide';
export default AirbnbStyleGuide.es6;

// best
import { es6 } from './AirbnbStyleGuide';
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="modules--no-wildcard"&gt;&lt;/a&gt;&lt;a name="10.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-wildcard"&gt;10.2&lt;/a&gt; Do not use wildcard imports.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This makes sure you have a single default export.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
import * as AirbnbStyleGuide from './AirbnbStyleGuide';

// good
import AirbnbStyleGuide from './AirbnbStyleGuide';
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="modules--no-export-from-import"&gt;&lt;/a&gt;&lt;a name="10.3"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-export-from-import"&gt;10.3&lt;/a&gt; And do not export directly from an import.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
// filename es6.js
export { es6 as default } from './AirbnbStyleGuide';

// good
// filename es6.js
import { es6 } from './AirbnbStyleGuide';
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="modules--no-duplicate-imports"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-duplicate-imports"&gt;10.4&lt;/a&gt; Only import from a path in one place. eslint: &lt;a href="https://eslint.org/docs/rules/no-duplicate-imports"&gt;&lt;code&gt;no-duplicate-imports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Having multiple lines that import from the same path can make code harder to maintain.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
import foo from 'foo';
// … some other imports … //
import { named1, named2 } from 'foo';

// good
import foo, { named1, named2 } from 'foo';

// good
import foo, {
  named1,
  named2,
} from 'foo';
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="modules--no-mutable-exports"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-mutable-exports"&gt;10.5&lt;/a&gt; Do not export mutable bindings. eslint: &lt;a href="https://github.com/import-js/eslint-plugin-import/raw/master/docs/rules/no-mutable-exports.md"&gt;&lt;code&gt;import/no-mutable-exports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Mutation should be avoided in general, but in particular when exporting mutable bindings. While this technique may be needed for some special cases, in general, only constant references should be exported.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
let foo = 3;
export { foo };

// good
const foo = 3;
export { foo };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="modules--prefer-default-export"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#modules--prefer-default-export"&gt;10.6&lt;/a&gt; In modules with a single export, prefer default export over named export. eslint: &lt;a href="https://github.com/import-js/eslint-plugin-import/raw/master/docs/rules/prefer-default-export.md"&gt;&lt;code&gt;import/prefer-default-export&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? To encourage more files that only ever export one thing, which is better for readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
export function foo() {}

// good
export default function foo() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="modules--imports-first"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#modules--imports-first"&gt;10.7&lt;/a&gt; Put all &lt;code&gt;import&lt;/code&gt;s above non-import statements. eslint: &lt;a href="https://github.com/import-js/eslint-plugin-import/raw/master/docs/rules/first.md"&gt;&lt;code&gt;import/first&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since &lt;code&gt;import&lt;/code&gt;s are hoisted, keeping them all at the top prevents surprising behavior.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
import foo from 'foo';
foo.init();

import bar from 'bar';

// good
import foo from 'foo';
import bar from 'bar';

foo.init();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="modules--multiline-imports-over-newlines"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#modules--multiline-imports-over-newlines"&gt;10.8&lt;/a&gt; Multiline imports should be indented just like multiline array and object literals. eslint: &lt;a href="https://eslint.org/docs/rules/object-curly-newline"&gt;&lt;code&gt;object-curly-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The curly braces follow the same indentation rules as every other curly brace block in the style guide, as do the trailing commas.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
import {longNameA, longNameB, longNameC, longNameD, longNameE} from 'path';

// good
import {
  longNameA,
  longNameB,
  longNameC,
  longNameD,
  longNameE,
} from 'path';
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="modules--no-webpack-loader-syntax"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-webpack-loader-syntax"&gt;10.9&lt;/a&gt; Disallow Webpack loader syntax in module import statements. eslint: &lt;a href="https://github.com/import-js/eslint-plugin-import/raw/master/docs/rules/no-webpack-loader-syntax.md"&gt;&lt;code&gt;import/no-webpack-loader-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since using Webpack syntax in the imports couples the code to a module bundler. Prefer using the loader syntax in &lt;code&gt;webpack.config.js&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
import fooSass from 'css!sass!foo.scss';
import barCss from 'style!css!bar.css';

// good
import fooSass from 'foo.scss';
import barCss from 'bar.css';
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="modules--import-extensions"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#modules--import-extensions"&gt;10.10&lt;/a&gt; Do not include JavaScript filename extensions eslint: &lt;a href="https://github.com/import-js/eslint-plugin-import/raw/master/docs/rules/extensions.md"&gt;&lt;code&gt;import/extensions&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Including extensions inhibits refactoring, and inappropriately hardcodes implementation details of the module you're importing in every consumer.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
import foo from './foo.js';
import bar from './bar.jsx';
import baz from './baz/index.jsx';

// good
import foo from './foo';
import bar from './bar';
import baz from './baz';
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Iterators and Generators&lt;/h2&gt; 
&lt;p&gt;&lt;a name="iterators--nope"&gt;&lt;/a&gt;&lt;a name="11.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#iterators--nope"&gt;11.1&lt;/a&gt; Don’t use iterators. Prefer JavaScript’s higher-order functions instead of loops like &lt;code&gt;for-in&lt;/code&gt; or &lt;code&gt;for-of&lt;/code&gt;. eslint: &lt;a href="https://eslint.org/docs/rules/no-iterator"&gt;&lt;code&gt;no-iterator&lt;/code&gt;&lt;/a&gt; &lt;a href="https://eslint.org/docs/rules/no-restricted-syntax"&gt;&lt;code&gt;no-restricted-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side effects.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Use &lt;code&gt;map()&lt;/code&gt; / &lt;code&gt;every()&lt;/code&gt; / &lt;code&gt;filter()&lt;/code&gt; / &lt;code&gt;find()&lt;/code&gt; / &lt;code&gt;findIndex()&lt;/code&gt; / &lt;code&gt;reduce()&lt;/code&gt; / &lt;code&gt;some()&lt;/code&gt; / ... to iterate over arrays, and &lt;code&gt;Object.keys()&lt;/code&gt; / &lt;code&gt;Object.values()&lt;/code&gt; / &lt;code&gt;Object.entries()&lt;/code&gt; to produce arrays so you can iterate over objects.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;const numbers = [1, 2, 3, 4, 5];

// bad
let sum = 0;
for (let num of numbers) {
  sum += num;
}
sum === 15;

// good
let sum = 0;
numbers.forEach((num) =&amp;gt; {
  sum += num;
});
sum === 15;

// best (use the functional force)
const sum = numbers.reduce((total, num) =&amp;gt; total + num, 0);
sum === 15;

// bad
const increasedByOne = [];
for (let i = 0; i &amp;lt; numbers.length; i++) {
  increasedByOne.push(numbers[i] + 1);
}

// good
const increasedByOne = [];
numbers.forEach((num) =&amp;gt; {
  increasedByOne.push(num + 1);
});

// best (keeping it functional)
const increasedByOne = numbers.map((num) =&amp;gt; num + 1);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="generators--nope"&gt;&lt;/a&gt;&lt;a name="11.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope"&gt;11.2&lt;/a&gt; Don’t use generators for now.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They don’t transpile well to ES5.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="generators--spacing"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#generators--spacing"&gt;11.3&lt;/a&gt; If you must use generators, or if you disregard &lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope"&gt;our advice&lt;/a&gt;, make sure their function signature is spaced properly. eslint: &lt;a href="https://eslint.org/docs/rules/generator-star-spacing"&gt;&lt;code&gt;generator-star-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; are part of the same conceptual keyword - &lt;code&gt;*&lt;/code&gt; is not a modifier for &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;function*&lt;/code&gt; is a unique construct, different from &lt;code&gt;function&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function * foo() {
  // ...
}

// bad
const bar = function * () {
  // ...
};

// bad
const baz = function *() {
  // ...
};

// bad
const quux = function*() {
  // ...
};

// bad
function*foo() {
  // ...
}

// bad
function *foo() {
  // ...
}

// very bad
function
*
foo() {
  // ...
}

// very bad
const wat = function
*
() {
  // ...
};

// good
function* foo() {
  // ...
}

// good
const foo = function* () {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Properties&lt;/h2&gt; 
&lt;p&gt;&lt;a name="properties--dot"&gt;&lt;/a&gt;&lt;a name="12.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#properties--dot"&gt;12.1&lt;/a&gt; Use dot notation when accessing properties. eslint: &lt;a href="https://eslint.org/docs/rules/dot-notation"&gt;&lt;code&gt;dot-notation&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;const luke = {
  jedi: true,
  age: 28,
};

// bad
const isJedi = luke['jedi'];

// good
const isJedi = luke.jedi;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="properties--bracket"&gt;&lt;/a&gt;&lt;a name="12.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#properties--bracket"&gt;12.2&lt;/a&gt; Use bracket notation &lt;code&gt;[]&lt;/code&gt; when accessing properties with a variable.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;const luke = {
  jedi: true,
  age: 28,
};

function getProp(prop) {
  return luke[prop];
}

const isJedi = getProp('jedi');
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="es2016-properties--exponentiation-operator"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator"&gt;12.3&lt;/a&gt; Use exponentiation operator &lt;code&gt;**&lt;/code&gt; when calculating exponentiations. eslint: &lt;a href="https://eslint.org/docs/rules/prefer-exponentiation-operator"&gt;&lt;code&gt;prefer-exponentiation-operator&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const binary = Math.pow(2, 10);

// good
const binary = 2 ** 10;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;&lt;a name="variables--const"&gt;&lt;/a&gt;&lt;a name="13.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const"&gt;13.1&lt;/a&gt; Always use &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that. eslint: &lt;a href="https://eslint.org/docs/rules/no-undef"&gt;&lt;code&gt;no-undef&lt;/code&gt;&lt;/a&gt; &lt;a href="https://eslint.org/docs/rules/prefer-const"&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
superPower = new SuperPower();

// good
const superPower = new SuperPower();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="variables--one-const"&gt;&lt;/a&gt;&lt;a name="13.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#variables--one-const"&gt;13.2&lt;/a&gt; Use one &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; declaration per variable or assignment. eslint: &lt;a href="https://eslint.org/docs/rules/one-var"&gt;&lt;code&gt;one-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s easier to add new variable declarations this way, and you never have to worry about swapping out a &lt;code&gt;;&lt;/code&gt; for a &lt;code&gt;,&lt;/code&gt; or introducing punctuation-only diffs. You can also step through each declaration with the debugger, instead of jumping through all of them at once.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const items = getItems(),
    goSportsTeam = true,
    dragonball = 'z';

// bad
// (compare to above, and try to spot the mistake)
const items = getItems(),
    goSportsTeam = true;
    dragonball = 'z';

// good
const items = getItems();
const goSportsTeam = true;
const dragonball = 'z';
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="variables--const-let-group"&gt;&lt;/a&gt;&lt;a name="13.3"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const-let-group"&gt;13.3&lt;/a&gt; Group all your &lt;code&gt;const&lt;/code&gt;s and then group all your &lt;code&gt;let&lt;/code&gt;s.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is helpful when later on you might need to assign a variable depending on one of the previously assigned variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
let i, len, dragonball,
    items = getItems(),
    goSportsTeam = true;

// bad
let i;
const items = getItems();
let dragonball;
const goSportsTeam = true;
let len;

// good
const goSportsTeam = true;
const items = getItems();
let dragonball;
let i;
let length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="variables--define-where-used"&gt;&lt;/a&gt;&lt;a name="13.4"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#variables--define-where-used"&gt;13.4&lt;/a&gt; Assign variables where you need them, but place them in a reasonable place.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block scoped and not function scoped.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad - unnecessary function call
function checkName(hasName) {
  const name = getName();

  if (hasName === 'test') {
    return false;
  }

  if (name === 'test') {
    this.setName('');
    return false;
  }

  return name;
}

// good
function checkName(hasName) {
  if (hasName === 'test') {
    return false;
  }

  const name = getName();

  if (name === 'test') {
    this.setName('');
    return false;
  }

  return name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="variables--no-chain-assignment"&gt;&lt;/a&gt;&lt;a name="13.5"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-chain-assignment"&gt;13.5&lt;/a&gt; Don’t chain variable assignments. eslint: &lt;a href="https://eslint.org/docs/rules/no-multi-assign"&gt;&lt;code&gt;no-multi-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Chaining variable assignments creates implicit global variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
(function example() {
  // JavaScript interprets this as
  // let a = ( b = ( c = 1 ) );
  // The let keyword only applies to variable a; variables b and c become
  // global variables.
  let a = b = c = 1;
}());

console.log(a); // throws ReferenceError
console.log(b); // 1
console.log(c); // 1

// good
(function example() {
  let a = 1;
  let b = a;
  let c = a;
}());

console.log(a); // throws ReferenceError
console.log(b); // throws ReferenceError
console.log(c); // throws ReferenceError

// the same applies for `const`
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="variables--unary-increment-decrement"&gt;&lt;/a&gt;&lt;a name="13.6"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#variables--unary-increment-decrement"&gt;13.6&lt;/a&gt; Avoid using unary increments and decrements (&lt;code&gt;++&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;). eslint &lt;a href="https://eslint.org/docs/rules/no-plusplus"&gt;&lt;code&gt;no-plusplus&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Per the eslint documentation, unary increment and decrement statements are subject to automatic semicolon insertion and can cause silent errors with incrementing or decrementing values within an application. It is also more expressive to mutate your values with statements like &lt;code&gt;num += 1&lt;/code&gt; instead of &lt;code&gt;num++&lt;/code&gt; or &lt;code&gt;num ++&lt;/code&gt;. Disallowing unary increment and decrement statements also prevents you from pre-incrementing/pre-decrementing values unintentionally which can also cause unexpected behavior in your programs.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad

const array = [1, 2, 3];
let num = 1;
num++;
--num;

let sum = 0;
let truthyCount = 0;
for (let i = 0; i &amp;lt; array.length; i++) {
  let value = array[i];
  sum += value;
  if (value) {
    truthyCount++;
  }
}

// good

const array = [1, 2, 3];
let num = 1;
num += 1;
num -= 1;

const sum = array.reduce((a, b) =&amp;gt; a + b, 0);
const truthyCount = array.filter(Boolean).length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="variables--linebreak"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#variables--linebreak"&gt;13.7&lt;/a&gt; Avoid linebreaks before or after &lt;code&gt;=&lt;/code&gt; in an assignment. If your assignment violates &lt;a href="https://eslint.org/docs/rules/max-len"&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;, surround the value in parens. eslint &lt;a href="https://eslint.org/docs/rules/operator-linebreak"&gt;&lt;code&gt;operator-linebreak&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Linebreaks surrounding &lt;code&gt;=&lt;/code&gt; can obfuscate the value of an assignment.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const foo =
  superLongLongLongLongLongLongLongLongFunctionName();

// bad
const foo
  = 'superLongLongLongLongLongLongLongLongString';

// good
const foo = (
  superLongLongLongLongLongLongLongLongFunctionName()
);

// good
const foo = 'superLongLongLongLongLongLongLongLongString';
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="variables--no-unused-vars"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-unused-vars"&gt;13.8&lt;/a&gt; Disallow unused variables. eslint: &lt;a href="https://eslint.org/docs/rules/no-unused-vars"&gt;&lt;code&gt;no-unused-vars&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad

const some_unused_var = 42;

// Write-only variables are not considered as used.
let y = 10;
y = 5;

// A read for a modification of itself is not considered as used.
let z = 0;
z = z + 1;

// Unused function arguments.
function getX(x, y) {
    return x;
}

// good

function getXPlusY(x, y) {
  return x + y;
}

const x = 1;
const y = a + 2;

alert(getXPlusY(x, y));

// 'type' is ignored even if unused because it has a rest property sibling.
// This is a form of extracting an object that omits the specified keys.
const { type, ...coords } = data;
// 'coords' is now the 'data' object without its 'type' property.
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Hoisting&lt;/h2&gt; 
&lt;p&gt;&lt;a name="hoisting--about"&gt;&lt;/a&gt;&lt;a name="14.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--about"&gt;14.1&lt;/a&gt; &lt;code&gt;var&lt;/code&gt; declarations get hoisted to the top of their closest enclosing function scope, their assignment does not. &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; declarations are blessed with a new concept called &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#temporal_dead_zone_tdz"&gt;Temporal Dead Zones (TDZ)&lt;/a&gt;. It’s important to know why &lt;a href="https://web.archive.org/web/20200121061528/http://es-discourse.com/t/why-typeof-is-no-longer-safe/15"&gt;typeof is no longer safe&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// we know this wouldn’t work (assuming there
// is no notDefined global variable)
function example() {
  console.log(notDefined); // =&amp;gt; throws a ReferenceError
}

// creating a variable declaration after you
// reference the variable will work due to
// variable hoisting. Note: the assignment
// value of `true` is not hoisted.
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  var declaredButNotAssigned = true;
}

// the interpreter is hoisting the variable
// declaration to the top of the scope,
// which means our example could be rewritten as:
function example() {
  let declaredButNotAssigned;
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  declaredButNotAssigned = true;
}

// using const and let
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  console.log(typeof declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  const declaredButNotAssigned = true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="hoisting--anon-expressions"&gt;&lt;/a&gt;&lt;a name="14.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--anon-expressions"&gt;14.2&lt;/a&gt; Anonymous function expressions hoist their variable name, but not the function assignment.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;function example() {
  console.log(anonymous); // =&amp;gt; undefined

  anonymous(); // =&amp;gt; TypeError anonymous is not a function

  var anonymous = function () {
    console.log('anonymous function expression');
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="hoisting--named-expresions"&gt;&lt;/a&gt;&lt;a name="hoisting--named-expressions"&gt;&lt;/a&gt;&lt;a name="14.3"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--named-expressions"&gt;14.3&lt;/a&gt; Named function expressions hoist the variable name, not the function name or the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  superPower(); // =&amp;gt; ReferenceError superPower is not defined

  var named = function superPower() {
    console.log('Flying');
  };
}

// the same is true when the function name
// is the same as the variable name.
function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  var named = function named() {
    console.log('named');
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="hoisting--declarations"&gt;&lt;/a&gt;&lt;a name="14.4"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--declarations"&gt;14.4&lt;/a&gt; Function declarations hoist their name and the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;function example() {
  superPower(); // =&amp;gt; Flying

  function superPower() {
    console.log('Flying');
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="no-use-before-define"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#no-use-before-define"&gt;14.5&lt;/a&gt; Variables, classes, and functions should be defined before they can be used. eslint: &lt;a href="https://eslint.org/docs/latest/rules/no-use-before-define"&gt;&lt;code&gt;no-use-before-define&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? When variables, classes, or functions are declared after being used, it can harm readability since a reader won't know what a thing that's referenced is. It's much clearer for a reader to first encounter the source of a thing (whether imported from another module, or defined in the file) before encountering a use of the thing.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad

// Variable a is being used before it is being defined.
console.log(a); // this will be undefined, since while the declaration is hoisted, the initialization is not
var a = 10;

// Function fun is being called before being defined.
fun();
function fun() {}

// Class A is being used before being defined.
new A(); // ReferenceError: Cannot access 'A' before initialization
class A {
}

// `let` and `const` are hoisted, but they don't have a default initialization.
// The variables 'a' and 'b' are in a Temporal Dead Zone where JavaScript
// knows they exist (declaration is hoisted) but they are not accessible
// (as they are not yet initialized).

console.log(a); // ReferenceError: Cannot access 'a' before initialization
console.log(b); // ReferenceError: Cannot access 'b' before initialization
let a = 10;
const b = 5;


// good

var a = 10;
console.log(a); // 10

function fun() {}
fun();

class A {
}
new A();

let a = 10;
const b = 5;
console.log(a); // 10
console.log(b); // 5
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For more information refer to &lt;a href="https://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting/"&gt;JavaScript Scoping &amp;amp; Hoisting&lt;/a&gt; by &lt;a href="https://www.adequatelygood.com/"&gt;Ben Cherry&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comparison Operators &amp;amp; Equality&lt;/h2&gt; 
&lt;p&gt;&lt;a name="comparison--eqeqeq"&gt;&lt;/a&gt;&lt;a name="15.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--eqeqeq"&gt;15.1&lt;/a&gt; Use &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; over &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;. eslint: &lt;a href="https://eslint.org/docs/rules/eqeqeq"&gt;&lt;code&gt;eqeqeq&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="comparison--if"&gt;&lt;/a&gt;&lt;a name="15.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--if"&gt;15.2&lt;/a&gt; Conditional statements such as the &lt;code&gt;if&lt;/code&gt; statement evaluate their expression using coercion with the &lt;code&gt;ToBoolean&lt;/code&gt; abstract method and always follow these simple rules:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Objects&lt;/strong&gt; evaluate to &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Undefined&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Null&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Booleans&lt;/strong&gt; evaluate to &lt;strong&gt;the value of the boolean&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Numbers&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if &lt;strong&gt;+0, -0, or NaN&lt;/strong&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if an empty string &lt;code&gt;''&lt;/code&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;if ([0] &amp;amp;&amp;amp; []) {
  // true
  // an array (even an empty one) is an object, objects will evaluate to true
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="comparison--shortcuts"&gt;&lt;/a&gt;&lt;a name="15.3"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--shortcuts"&gt;15.3&lt;/a&gt; Use shortcuts for booleans, but explicit comparisons for strings and numbers.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
if (isValid === true) {
  // ...
}

// good
if (isValid) {
  // ...
}

// bad
if (name) {
  // ...
}

// good
if (name !== '') {
  // ...
}

// bad
if (collection.length) {
  // ...
}

// good
if (collection.length &amp;gt; 0) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="comparison--moreinfo"&gt;&lt;/a&gt;&lt;a name="15.4"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--moreinfo"&gt;15.4&lt;/a&gt; For more information see &lt;a href="https://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108"&gt;Truth, Equality, and JavaScript&lt;/a&gt; by Angus Croll.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="comparison--switch-blocks"&gt;&lt;/a&gt;&lt;a name="15.5"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--switch-blocks"&gt;15.5&lt;/a&gt; Use braces to create blocks in &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; clauses that contain lexical declarations (e.g. &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, and &lt;code&gt;class&lt;/code&gt;). eslint: &lt;a href="https://eslint.org/docs/rules/no-case-declarations"&gt;&lt;code&gt;no-case-declarations&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Lexical declarations are visible in the entire &lt;code&gt;switch&lt;/code&gt; block but only get initialized when assigned, which only happens when its &lt;code&gt;case&lt;/code&gt; is reached. This causes problems when multiple &lt;code&gt;case&lt;/code&gt; clauses attempt to define the same thing.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
switch (foo) {
  case 1:
    let x = 1;
    break;
  case 2:
    const y = 2;
    break;
  case 3:
    function f() {
      // ...
    }
    break;
  default:
    class C {}
}

// good
switch (foo) {
  case 1: {
    let x = 1;
    break;
  }
  case 2: {
    const y = 2;
    break;
  }
  case 3: {
    function f() {
      // ...
    }
    break;
  }
  case 4:
    bar();
    break;
  default: {
    class C {}
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="comparison--nested-ternaries"&gt;&lt;/a&gt;&lt;a name="15.6"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--nested-ternaries"&gt;15.6&lt;/a&gt; Ternaries should not be nested and generally be single line expressions. eslint: &lt;a href="https://eslint.org/docs/rules/no-nested-ternary"&gt;&lt;code&gt;no-nested-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const foo = maybe1 &amp;gt; maybe2
  ? "bar"
  : value1 &amp;gt; value2 ? "baz" : null;

// split into 2 separated ternary expressions
const maybeNull = value1 &amp;gt; value2 ? 'baz' : null;

// better
const foo = maybe1 &amp;gt; maybe2
  ? 'bar'
  : maybeNull;

// best
const foo = maybe1 &amp;gt; maybe2 ? 'bar' : maybeNull;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="comparison--unneeded-ternary"&gt;&lt;/a&gt;&lt;a name="15.7"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--unneeded-ternary"&gt;15.7&lt;/a&gt; Avoid unneeded ternary statements. eslint: &lt;a href="https://eslint.org/docs/rules/no-unneeded-ternary"&gt;&lt;code&gt;no-unneeded-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const foo = a ? a : b;
const bar = c ? true : false;
const baz = c ? false : true;
const quux = a != null ? a : b;

// good
const foo = a || b;
const bar = !!c;
const baz = !c;
const quux = a ?? b;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="comparison--no-mixed-operators"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--no-mixed-operators"&gt;15.8&lt;/a&gt; When mixing operators, enclose them in parentheses. The only exception is the standard arithmetic operators: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, and &lt;code&gt;**&lt;/code&gt; since their precedence is broadly understood. We recommend enclosing &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in parentheses because their precedence can be ambiguous when they are mixed. eslint: &lt;a href="https://eslint.org/docs/rules/no-mixed-operators"&gt;&lt;code&gt;no-mixed-operators&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This improves readability and clarifies the developer’s intention.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const foo = a &amp;amp;&amp;amp; b &amp;lt; 0 || c &amp;gt; 0 || d + 1 === 0;

// bad
const bar = a ** b - 5 % d;

// bad
// one may be confused into thinking (a || b) &amp;amp;&amp;amp; c
if (a || b &amp;amp;&amp;amp; c) {
  return d;
}

// bad
const bar = a + b / c * d;

// good
const foo = (a &amp;amp;&amp;amp; b &amp;lt; 0) || c &amp;gt; 0 || (d + 1 === 0);

// good
const bar = a ** b - (5 % d);

// good
if (a || (b &amp;amp;&amp;amp; c)) {
  return d;
}

// good
const bar = a + (b / c) * d;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="nullish-coalescing-operator"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#nullish-coalescing-operator"&gt;15.9&lt;/a&gt; The nullish coalescing operator (&lt;code&gt;??&lt;/code&gt;) is a logical operator that returns its right-hand side operand when its left-hand side operand is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;. Otherwise, it returns the left-hand side operand.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It provides precision by distinguishing null/undefined from other falsy values, enhancing code clarity and predictability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const value = 0 ?? 'default';
// returns 0, not 'default'

// bad
const value = '' ?? 'default';
// returns '', not 'default'

// good
const value = null ?? 'default';
// returns 'default'

// good
const user = {
  name: 'John',
  age: null
};
const age = user.age ?? 18;
// returns 18
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Blocks&lt;/h2&gt; 
&lt;p&gt;&lt;a name="blocks--braces"&gt;&lt;/a&gt;&lt;a name="16.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--braces"&gt;16.1&lt;/a&gt; Use braces with all multiline blocks. eslint: &lt;a href="https://eslint.org/docs/rules/nonblock-statement-body-position"&gt;&lt;code&gt;nonblock-statement-body-position&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
if (test)
  return false;

// good
if (test) return false;

// good
if (test) {
  return false;
}

// bad
function foo() { return false; }

// good
function bar() {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="blocks--cuddled-elses"&gt;&lt;/a&gt;&lt;a name="16.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--cuddled-elses"&gt;16.2&lt;/a&gt; If you’re using multiline blocks with &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt;, put &lt;code&gt;else&lt;/code&gt; on the same line as your &lt;code&gt;if&lt;/code&gt; block’s closing brace. eslint: &lt;a href="https://eslint.org/docs/rules/brace-style"&gt;&lt;code&gt;brace-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
if (test) {
  thing1();
  thing2();
}
else {
  thing3();
}

// good
if (test) {
  thing1();
  thing2();
} else {
  thing3();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="blocks--no-else-return"&gt;&lt;/a&gt;&lt;a name="16.3"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--no-else-return"&gt;16.3&lt;/a&gt; If an &lt;code&gt;if&lt;/code&gt; block always executes a &lt;code&gt;return&lt;/code&gt; statement, the subsequent &lt;code&gt;else&lt;/code&gt; block is unnecessary. A &lt;code&gt;return&lt;/code&gt; in an &lt;code&gt;else if&lt;/code&gt; block following an &lt;code&gt;if&lt;/code&gt; block that contains a &lt;code&gt;return&lt;/code&gt; can be separated into multiple &lt;code&gt;if&lt;/code&gt; blocks. eslint: &lt;a href="https://eslint.org/docs/rules/no-else-return"&gt;&lt;code&gt;no-else-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function foo() {
  if (x) {
    return x;
  } else {
    return y;
  }
}

// bad
function cats() {
  if (x) {
    return x;
  } else if (y) {
    return y;
  }
}

// bad
function dogs() {
  if (x) {
    return x;
  } else {
    if (y) {
      return y;
    }
  }
}

// good
function foo() {
  if (x) {
    return x;
  }

  return y;
}

// good
function cats() {
  if (x) {
    return x;
  }

  if (y) {
    return y;
  }
}

// good
function dogs(x) {
  if (x) {
    if (z) {
      return y;
    }
  } else {
    return z;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Control Statements&lt;/h2&gt; 
&lt;p&gt;&lt;a name="control-statements"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements"&gt;17.1&lt;/a&gt; In case your control statement (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.) gets too long or exceeds the maximum line length, each (grouped) condition could be put into a new line. The logical operator should begin the line.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Requiring operators at the beginning of the line keeps the operators aligned and follows a pattern similar to method chaining. This also improves readability by making it easier to visually follow complex logic.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
if ((foo === 123 || bar === 'abc') &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong() &amp;amp;&amp;amp; isThisReallyHappening()) {
  thing1();
}

// bad
if (foo === 123 &amp;amp;&amp;amp;
  bar === 'abc') {
  thing1();
}

// bad
if (foo === 123
  &amp;amp;&amp;amp; bar === 'abc') {
  thing1();
}

// bad
if (
  foo === 123 &amp;amp;&amp;amp;
  bar === 'abc'
) {
  thing1();
}

// good
if (
  foo === 123
  &amp;amp;&amp;amp; bar === 'abc'
) {
  thing1();
}

// good
if (
  (foo === 123 || bar === 'abc')
  &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong()
  &amp;amp;&amp;amp; isThisReallyHappening()
) {
  thing1();
}

// good
if (foo === 123 &amp;amp;&amp;amp; bar === 'abc') {
  thing1();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="control-statement--value-selection"&gt;&lt;/a&gt;&lt;a name="control-statements--value-selection"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements--value-selection"&gt;17.2&lt;/a&gt; Don't use selection operators in place of control statements.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
!isRunning &amp;amp;&amp;amp; startRunning();

// good
if (!isRunning) {
  startRunning();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comments&lt;/h2&gt; 
&lt;p&gt;&lt;a name="comments--multiline"&gt;&lt;/a&gt;&lt;a name="17.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#comments--multiline"&gt;18.1&lt;/a&gt; Use &lt;code&gt;/** ... */&lt;/code&gt; for multiline comments.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
// make() returns a new element
// based on the passed in tag name
//
// @param {String} tag
// @return {Element} element
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="comments--singleline"&gt;&lt;/a&gt;&lt;a name="17.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#comments--singleline"&gt;18.2&lt;/a&gt; Use &lt;code&gt;//&lt;/code&gt; for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment unless it’s on the first line of a block.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const active = true;  // is current tab

// good
// is current tab
const active = true;

// bad
function getType() {
  console.log('fetching type...');
  // set the default type to 'no type'
  const type = this.type || 'no type';

  return type;
}

// good
function getType() {
  console.log('fetching type...');

  // set the default type to 'no type'
  const type = this.type || 'no type';

  return type;
}

// also good
function getType() {
  // set the default type to 'no type'
  const type = this.type || 'no type';

  return type;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="comments--spaces"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#comments--spaces"&gt;18.3&lt;/a&gt; Start all comments with a space to make it easier to read. eslint: &lt;a href="https://eslint.org/docs/rules/spaced-comment"&gt;&lt;code&gt;spaced-comment&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
//is current tab
const active = true;

// good
// is current tab
const active = true;

// bad
/**
 *make() returns a new element
 *based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="comments--actionitems"&gt;&lt;/a&gt;&lt;a name="17.3"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#comments--actionitems"&gt;18.4&lt;/a&gt; Prefixing your comments with &lt;code&gt;FIXME&lt;/code&gt; or &lt;code&gt;TODO&lt;/code&gt; helps other developers quickly understand if you’re pointing out a problem that needs to be revisited, or if you’re suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are &lt;code&gt;FIXME: -- need to figure this out&lt;/code&gt; or &lt;code&gt;TODO: -- need to implement&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="comments--fixme"&gt;&lt;/a&gt;&lt;a name="17.4"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#comments--fixme"&gt;18.5&lt;/a&gt; Use &lt;code&gt;// FIXME:&lt;/code&gt; to annotate problems.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // FIXME: shouldn’t use a global here
    total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="comments--todo"&gt;&lt;/a&gt;&lt;a name="17.5"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#comments--todo"&gt;18.6&lt;/a&gt; Use &lt;code&gt;// TODO:&lt;/code&gt; to annotate solutions to problems.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // TODO: total should be configurable by an options param
    this.total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Whitespace&lt;/h2&gt; 
&lt;p&gt;&lt;a name="whitespace--spaces"&gt;&lt;/a&gt;&lt;a name="18.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--spaces"&gt;19.1&lt;/a&gt; Use soft tabs (space character) set to 2 spaces. eslint: &lt;a href="https://eslint.org/docs/rules/indent"&gt;&lt;code&gt;indent&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function foo() {
∙∙∙∙let name;
}

// bad
function bar() {
∙let name;
}

// good
function baz() {
∙∙let name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--before-blocks"&gt;&lt;/a&gt;&lt;a name="18.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--before-blocks"&gt;19.2&lt;/a&gt; Place 1 space before the leading brace. eslint: &lt;a href="https://eslint.org/docs/rules/space-before-blocks"&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function test(){
  console.log('test');
}

// good
function test() {
  console.log('test');
}

// bad
dog.set('attr',{
  age: '1 year',
  breed: 'Bernese Mountain Dog',
});

// good
dog.set('attr', {
  age: '1 year',
  breed: 'Bernese Mountain Dog',
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--around-keywords"&gt;&lt;/a&gt;&lt;a name="18.3"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--around-keywords"&gt;19.3&lt;/a&gt; Place 1 space before the opening parenthesis in control statements (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.). Place no space between the argument list and the function name in function calls and declarations. eslint: &lt;a href="https://eslint.org/docs/rules/keyword-spacing"&gt;&lt;code&gt;keyword-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
if(isJedi) {
  fight ();
}

// good
if (isJedi) {
  fight();
}

// bad
function fight () {
  console.log ('Swooosh!');
}

// good
function fight() {
  console.log('Swooosh!');
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--infix-ops"&gt;&lt;/a&gt;&lt;a name="18.4"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--infix-ops"&gt;19.4&lt;/a&gt; Set off operators with spaces. eslint: &lt;a href="https://eslint.org/docs/rules/space-infix-ops"&gt;&lt;code&gt;space-infix-ops&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const x=y+5;

// good
const x = y + 5;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--newline-at-end"&gt;&lt;/a&gt;&lt;a name="18.5"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--newline-at-end"&gt;19.5&lt;/a&gt; End files with a single newline character. eslint: &lt;a href="https://eslint.org/docs/rules/eol-last"&gt;&lt;code&gt;eol-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
import { es6 } from './AirbnbStyleGuide';
  // ...
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
import { es6 } from './AirbnbStyleGuide';
  // ...
export default es6;↵
↵
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// good
import { es6 } from './AirbnbStyleGuide';
  // ...
export default es6;↵
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--chains"&gt;&lt;/a&gt;&lt;a name="18.6"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--chains"&gt;19.6&lt;/a&gt; Use indentation when making long method chains (more than 2 method chains). Use a leading dot, which emphasizes that the line is a method call, not a new statement. eslint: &lt;a href="https://eslint.org/docs/rules/newline-per-chained-call"&gt;&lt;code&gt;newline-per-chained-call&lt;/code&gt;&lt;/a&gt; &lt;a href="https://eslint.org/docs/rules/no-whitespace-before-property"&gt;&lt;code&gt;no-whitespace-before-property&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
$('#items').find('.selected').highlight().end().find('.open').updateCount();

// bad
$('#items').
  find('.selected').
    highlight().
    end().
  find('.open').
    updateCount();

// good
$('#items')
  .find('.selected')
    .highlight()
    .end()
  .find('.open')
    .updateCount();

// bad
const leds = stage.selectAll('.led').data(data).enter().append('svg:svg').classed('led', true)
    .attr('width', (radius + margin) * 2).append('svg:g')
    .attr('transform', `translate(${radius + margin}, ${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll('.led')
    .data(data)
  .enter().append('svg:svg')
    .classed('led', true)
    .attr('width', (radius + margin) * 2)
  .append('svg:g')
    .attr('transform', `translate(${radius + margin}, ${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll('.led').data(data);
const svg = leds.enter().append('svg:svg');
svg.classed('led', true).attr('width', (radius + margin) * 2);
const g = svg.append('svg:g');
g.attr('transform', `translate(${radius + margin}, ${radius + margin})`).call(tron.led);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--after-blocks"&gt;&lt;/a&gt;&lt;a name="18.7"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--after-blocks"&gt;19.7&lt;/a&gt; Leave a blank line after blocks and before the next statement.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
if (foo) {
  return bar;
}
return baz;

// good
if (foo) {
  return bar;
}

return baz;

// bad
const obj = {
  foo() {
  },
  bar() {
  },
};
return obj;

// good
const obj = {
  foo() {
  },

  bar() {
  },
};

return obj;

// bad
const arr = [
  function foo() {
  },
  function bar() {
  },
];
return arr;

// good
const arr = [
  function foo() {
  },

  function bar() {
  },
];

return arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--padded-blocks"&gt;&lt;/a&gt;&lt;a name="18.8"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--padded-blocks"&gt;19.8&lt;/a&gt; Do not pad your blocks with blank lines. eslint: &lt;a href="https://eslint.org/docs/rules/padded-blocks"&gt;&lt;code&gt;padded-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function bar() {

  console.log(foo);

}

// bad
if (baz) {

  console.log(quux);
} else {
  console.log(foo);

}

// bad
class Foo {

  constructor(bar) {
    this.bar = bar;
  }
}

// good
function bar() {
  console.log(foo);
}

// good
if (baz) {
  console.log(quux);
} else {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--no-multiple-blanks"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-blanks"&gt;19.9&lt;/a&gt; Do not use multiple blank lines to pad your code. eslint: &lt;a href="https://eslint.org/docs/rules/no-multiple-empty-lines"&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;


    this.email = email;


    this.setAge(birthday);
  }


  setAge(birthday) {
    const today = new Date();


    const age = this.getAge(today, birthday);


    this.age = age;
  }


  getAge(today, birthday) {
    // ..
  }
}

// good
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;
    this.email = email;
    this.setAge(birthday);
  }

  setAge(birthday) {
    const today = new Date();
    const age = getAge(today, birthday);
    this.age = age;
  }

  getAge(today, birthday) {
    // ..
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--in-parens"&gt;&lt;/a&gt;&lt;a name="18.9"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-parens"&gt;19.10&lt;/a&gt; Do not add spaces inside parentheses. eslint: &lt;a href="https://eslint.org/docs/rules/space-in-parens"&gt;&lt;code&gt;space-in-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function bar( foo ) {
  return foo;
}

// good
function bar(foo) {
  return foo;
}

// bad
if ( foo ) {
  console.log(foo);
}

// good
if (foo) {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--in-brackets"&gt;&lt;/a&gt;&lt;a name="18.10"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-brackets"&gt;19.11&lt;/a&gt; Do not add spaces inside brackets. eslint: &lt;a href="https://eslint.org/docs/rules/array-bracket-spacing"&gt;&lt;code&gt;array-bracket-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const foo = [ 1, 2, 3 ];
console.log(foo[ 0 ]);

// good
const foo = [1, 2, 3];
console.log(foo[0]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--in-braces"&gt;&lt;/a&gt;&lt;a name="18.11"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-braces"&gt;19.12&lt;/a&gt; Add spaces inside curly braces. eslint: &lt;a href="https://eslint.org/docs/rules/object-curly-spacing"&gt;&lt;code&gt;object-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const foo = {clark: 'kent'};

// good
const foo = { clark: 'kent' };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--max-len"&gt;&lt;/a&gt;&lt;a name="18.12"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--max-len"&gt;19.13&lt;/a&gt; Avoid having lines of code that are longer than 100 characters (including whitespace). Note: per &lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length"&gt;above&lt;/a&gt;, long strings are exempt from this rule, and should not be broken up. eslint: &lt;a href="https://eslint.org/docs/rules/max-len"&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const foo = jsonData &amp;amp;&amp;amp; jsonData.foo &amp;amp;&amp;amp; jsonData.foo.bar &amp;amp;&amp;amp; jsonData.foo.bar.baz &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// bad
$.ajax({ method: 'POST', url: 'https://airbnb.com/', data: { name: 'John' } }).done(() =&amp;gt; console.log('Congratulations!')).fail(() =&amp;gt; console.log('You have failed this city.'));

// good
const foo = jsonData
  &amp;amp;&amp;amp; jsonData.foo
  &amp;amp;&amp;amp; jsonData.foo.bar
  &amp;amp;&amp;amp; jsonData.foo.bar.baz
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// better
const foo = jsonData
  ?.foo
  ?.bar
  ?.baz
  ?.quux
  ?.xyzzy;

// good
$.ajax({
  method: 'POST',
  url: 'https://airbnb.com/',
  data: { name: 'John' },
})
  .done(() =&amp;gt; console.log('Congratulations!'))
  .fail(() =&amp;gt; console.log('You have failed this city.'));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--block-spacing"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--block-spacing"&gt;19.14&lt;/a&gt; Require consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line. eslint: &lt;a href="https://eslint.org/docs/rules/block-spacing"&gt;&lt;code&gt;block-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function foo() {return true;}
if (foo) { bar = 0;}

// good
function foo() { return true; }
if (foo) { bar = 0; }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--comma-spacing"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--comma-spacing"&gt;19.15&lt;/a&gt; Avoid spaces before commas and require a space after commas. eslint: &lt;a href="https://eslint.org/docs/rules/comma-spacing"&gt;&lt;code&gt;comma-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const foo = 1,bar = 2;
const arr = [1 , 2];

// good
const foo = 1, bar = 2;
const arr = [1, 2];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--computed-property-spacing"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--computed-property-spacing"&gt;19.16&lt;/a&gt; Enforce spacing inside of computed property brackets. eslint: &lt;a href="https://eslint.org/docs/rules/computed-property-spacing"&gt;&lt;code&gt;computed-property-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
obj[foo ]
obj[ 'foo']
const x = {[ b ]: a}
obj[foo[ bar ]]

// good
obj[foo]
obj['foo']
const x = { [b]: a }
obj[foo[bar]]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--func-call-spacing"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--func-call-spacing"&gt;19.17&lt;/a&gt; Avoid spaces between functions and their invocations. eslint: &lt;a href="https://eslint.org/docs/rules/func-call-spacing"&gt;&lt;code&gt;func-call-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
func ();

func
();

// good
func();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--key-spacing"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--key-spacing"&gt;19.18&lt;/a&gt; Enforce spacing between keys and values in object literal properties. eslint: &lt;a href="https://eslint.org/docs/rules/key-spacing"&gt;&lt;code&gt;key-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const obj = { foo : 42 };
const obj2 = { foo:42 };

// good
const obj = { foo: 42 };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--no-trailing-spaces"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-trailing-spaces"&gt;19.19&lt;/a&gt; Avoid trailing spaces at the end of lines. eslint: &lt;a href="https://eslint.org/docs/rules/no-trailing-spaces"&gt;&lt;code&gt;no-trailing-spaces&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="whitespace--no-multiple-empty-lines"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-empty-lines"&gt;19.20&lt;/a&gt; Avoid multiple empty lines, only allow one newline at the end of files, and avoid a newline at the beginning of files. eslint: &lt;a href="https://eslint.org/docs/rules/no-multiple-empty-lines"&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad - multiple empty lines
const x = 1;


const y = 2;

// bad - 2+ newlines at end of file
const x = 1;
const y = 2;


// bad - 1+ newline(s) at beginning of file

const x = 1;
const y = 2;

// good
const x = 1;
const y = 2;

&lt;/code&gt;&lt;/pre&gt; 
  &lt;!-- markdownlint-enable MD012 --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Commas&lt;/h2&gt; 
&lt;p&gt;&lt;a name="commas--leading-trailing"&gt;&lt;/a&gt;&lt;a name="19.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#commas--leading-trailing"&gt;20.1&lt;/a&gt; Leading commas: &lt;strong&gt;Nope.&lt;/strong&gt; eslint: &lt;a href="https://eslint.org/docs/rules/comma-style"&gt;&lt;code&gt;comma-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const story = [
    once
  , upon
  , aTime
];

// good
const story = [
  once,
  upon,
  aTime,
];

// bad
const hero = {
    firstName: 'Ada'
  , lastName: 'Lovelace'
  , birthYear: 1815
  , superPower: 'computers'
};

// good
const hero = {
  firstName: 'Ada',
  lastName: 'Lovelace',
  birthYear: 1815,
  superPower: 'computers',
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="commas--dangling"&gt;&lt;/a&gt;&lt;a name="19.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#commas--dangling"&gt;20.2&lt;/a&gt; Additional trailing comma: &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href="https://eslint.org/docs/rules/comma-dangle"&gt;&lt;code&gt;comma-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don’t have to worry about the &lt;a href="https://github.com/airbnb/javascript/raw/es5-deprecated/es5/README.md#commas"&gt;trailing comma problem&lt;/a&gt; in legacy browsers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-diff"&gt;// bad - git diff without trailing comma
const hero = {
     firstName: 'Florence',
-    lastName: 'Nightingale'
+    lastName: 'Nightingale',
+    inventorOf: ['coxcomb chart', 'modern nursing']
};

// good - git diff with trailing comma
const hero = {
     firstName: 'Florence',
     lastName: 'Nightingale',
+    inventorOf: ['coxcomb chart', 'modern nursing'],
};
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const hero = {
  firstName: 'Dana',
  lastName: 'Scully'
};

const heroes = [
  'Batman',
  'Superman'
];

// good
const hero = {
  firstName: 'Dana',
  lastName: 'Scully',
};

const heroes = [
  'Batman',
  'Superman',
];

// bad
function createHero(
  firstName,
  lastName,
  inventorOf
) {
  // does nothing
}

// good
function createHero(
  firstName,
  lastName,
  inventorOf,
) {
  // does nothing
}

// good (note that a comma must not appear after a "rest" element)
function createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
) {
  // does nothing
}

// bad
createHero(
  firstName,
  lastName,
  inventorOf
);

// good
createHero(
  firstName,
  lastName,
  inventorOf,
);

// good (note that a comma must not appear after a "rest" element)
createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Semicolons&lt;/h2&gt; 
&lt;p&gt;&lt;a name="semicolons--required"&gt;&lt;/a&gt;&lt;a name="20.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons--required"&gt;21.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href="https://eslint.org/docs/rules/semi"&gt;&lt;code&gt;semi&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? When JavaScript encounters a line break without a semicolon, it uses a set of rules called &lt;a href="https://tc39.github.io/ecma262/#sec-automatic-semicolon-insertion"&gt;Automatic Semicolon Insertion&lt;/a&gt; to determine whether it should regard that line break as the end of a statement, and (as the name implies) place a semicolon into your code before the line break if it thinks so. ASI contains a few eccentric behaviors, though, and your code will break if JavaScript misinterprets your line break. These rules will become more complicated as new features become a part of JavaScript. Explicitly terminating your statements and configuring your linter to catch missing semicolons will help prevent you from encountering issues.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad - raises exception
const luke = {}
const leia = {}
[luke, leia].forEach((jedi) =&amp;gt; jedi.father = 'vader')

// bad - raises exception
const reaction = "No! That’s impossible!"
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}())

// bad - returns `undefined` instead of the value on the next line - always happens when `return` is on a line by itself because of ASI!
function foo() {
  return
    'search your feelings, you know it to be foo'
}

// good
const luke = {};
const leia = {};
[luke, leia].forEach((jedi) =&amp;gt; {
  jedi.father = 'vader';
});

// good
const reaction = 'No! That’s impossible!';
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}());

// good
function foo() {
  return 'search your feelings, you know it to be foo';
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/7365172/semicolon-before-self-invoking-function/7365214#7365214"&gt;Read more&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Type Casting &amp;amp; Coercion&lt;/h2&gt; 
&lt;p&gt;&lt;a name="coercion--explicit"&gt;&lt;/a&gt;&lt;a name="21.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--explicit"&gt;22.1&lt;/a&gt; Perform type coercion at the beginning of the statement.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="coercion--strings"&gt;&lt;/a&gt;&lt;a name="21.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--strings"&gt;22.2&lt;/a&gt; Strings: eslint: &lt;a href="https://eslint.org/docs/rules/no-new-wrappers"&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// =&amp;gt; this.reviewScore = 9;

// bad
const totalScore = new String(this.reviewScore); // typeof totalScore is "object" not "string"

// bad
const totalScore = this.reviewScore + ''; // invokes this.reviewScore.valueOf()

// bad
const totalScore = this.reviewScore.toString(); // isn’t guaranteed to return a string

// good
const totalScore = String(this.reviewScore);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="coercion--numbers"&gt;&lt;/a&gt;&lt;a name="21.3"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--numbers"&gt;22.3&lt;/a&gt; Numbers: Use &lt;code&gt;Number&lt;/code&gt; for type casting and &lt;code&gt;parseInt&lt;/code&gt; always with a radix for parsing strings. eslint: &lt;a href="https://eslint.org/docs/rules/radix"&gt;&lt;code&gt;radix&lt;/code&gt;&lt;/a&gt; &lt;a href="https://eslint.org/docs/rules/no-new-wrappers"&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The &lt;code&gt;parseInt&lt;/code&gt; function produces an integer value dictated by interpretation of the contents of the string argument according to the specified radix. Leading whitespace in string is ignored. If radix is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;, it is assumed to be &lt;code&gt;10&lt;/code&gt; except when the number begins with the character pairs &lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X&lt;/code&gt;, in which case a radix of 16 is assumed. This differs from ECMAScript 3, which merely discouraged (but allowed) octal interpretation. Many implementations have not adopted this behavior as of 2013. And, because older browsers must be supported, always specify a radix.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;const inputValue = '4';

// bad
const val = new Number(inputValue);

// bad
const val = +inputValue;

// bad
const val = inputValue &amp;gt;&amp;gt; 0;

// bad
const val = parseInt(inputValue);

// good
const val = Number(inputValue);

// good
const val = parseInt(inputValue, 10);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="coercion--comment-deviations"&gt;&lt;/a&gt;&lt;a name="21.4"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--comment-deviations"&gt;22.4&lt;/a&gt; If for whatever reason you are doing something wild and &lt;code&gt;parseInt&lt;/code&gt; is your bottleneck and need to use Bitshift for &lt;a href="https://web.archive.org/web/20200414205431/https://jsperf.com/coercion-vs-casting/3"&gt;performance reasons&lt;/a&gt;, leave a comment explaining why and what you’re doing.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// good
/**
 * parseInt was the reason my code was slow.
 * Bitshifting the String to coerce it to a
 * Number made it a lot faster.
 */
const val = inputValue &amp;gt;&amp;gt; 0;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="coercion--bitwise"&gt;&lt;/a&gt;&lt;a name="21.5"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--bitwise"&gt;22.5&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; Be careful when using bitshift operations. Numbers are represented as &lt;a href="https://es5.github.io/#x4.3.19"&gt;64-bit values&lt;/a&gt;, but bitshift operations always return a 32-bit integer (&lt;a href="https://es5.github.io/#x11.7"&gt;source&lt;/a&gt;). Bitshift can lead to unexpected behavior for integer values larger than 32 bits. &lt;a href="https://github.com/airbnb/javascript/issues/109"&gt;Discussion&lt;/a&gt;. Largest signed 32-bit Int is 2,147,483,647:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;2147483647 &amp;gt;&amp;gt; 0; // =&amp;gt; 2147483647
2147483648 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483648
2147483649 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483647
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="coercion--booleans"&gt;&lt;/a&gt;&lt;a name="21.6"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--booleans"&gt;22.6&lt;/a&gt; Booleans: eslint: &lt;a href="https://eslint.org/docs/rules/no-new-wrappers"&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;const age = 0;

// bad
const hasAge = new Boolean(age);

// good
const hasAge = Boolean(age);

// best
const hasAge = !!age;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Naming Conventions&lt;/h2&gt; 
&lt;p&gt;&lt;a name="naming--descriptive"&gt;&lt;/a&gt;&lt;a name="22.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#naming--descriptive"&gt;23.1&lt;/a&gt; Avoid single letter names. Be descriptive with your naming. eslint: &lt;a href="https://eslint.org/docs/rules/id-length"&gt;&lt;code&gt;id-length&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function q() {
  // ...
}

// good
function query() {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="naming--camelCase"&gt;&lt;/a&gt;&lt;a name="22.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase"&gt;23.2&lt;/a&gt; Use camelCase when naming objects, functions, and instances. eslint: &lt;a href="https://eslint.org/docs/rules/camelcase"&gt;&lt;code&gt;camelcase&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const OBJEcttsssss = {};
const this_is_my_object = {};
function c() {}

// good
const thisIsMyObject = {};
function thisIsMyFunction() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="naming--PascalCase"&gt;&lt;/a&gt;&lt;a name="22.3"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase"&gt;23.3&lt;/a&gt; Use PascalCase only when naming constructors or classes. eslint: &lt;a href="https://eslint.org/docs/rules/new-cap"&gt;&lt;code&gt;new-cap&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function user(options) {
  this.name = options.name;
}

const bad = new user({
  name: 'nope',
});

// good
class User {
  constructor(options) {
    this.name = options.name;
  }
}

const good = new User({
  name: 'yup',
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="naming--leading-underscore"&gt;&lt;/a&gt;&lt;a name="22.4"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#naming--leading-underscore"&gt;23.4&lt;/a&gt; Do not use trailing or leading underscores. eslint: &lt;a href="https://eslint.org/docs/rules/no-underscore-dangle"&gt;&lt;code&gt;no-underscore-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? JavaScript does not have the concept of privacy in terms of properties or methods. Although a leading underscore is a common convention to mean “private”, in fact, these properties are fully public, and as such, are part of your public API contract. This convention might lead developers to wrongly think that a change won’t count as breaking, or that tests aren’t needed. tl;dr: if you want something to be “private”, it must not be observably present.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
this.__firstName__ = 'Panda';
this.firstName_ = 'Panda';
this._firstName = 'Panda';

// good
this.firstName = 'Panda';

// good, in environments where WeakMaps are available
// see https://compat-table.github.io/compat-table/es6/#test-WeakMap
const firstNames = new WeakMap();
firstNames.set(this, 'Panda');
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="naming--self-this"&gt;&lt;/a&gt;&lt;a name="22.5"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#naming--self-this"&gt;23.5&lt;/a&gt; Don’t save references to &lt;code&gt;this&lt;/code&gt;. Use arrow functions or &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind"&gt;Function#bind&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function foo() {
  const self = this;
  return function () {
    console.log(self);
  };
}

// bad
function foo() {
  const that = this;
  return function () {
    console.log(that);
  };
}

// good
function foo() {
  return () =&amp;gt; {
    console.log(this);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="naming--filename-matches-export"&gt;&lt;/a&gt;&lt;a name="22.6"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#naming--filename-matches-export"&gt;23.6&lt;/a&gt; A base filename should exactly match the name of its default export.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// file 1 contents
class CheckBox {
  // ...
}
export default CheckBox;

// file 2 contents
export default function fortyTwo() { return 42; }

// file 3 contents
export default function insideDirectory() {}

// in some other file
// bad
import CheckBox from './checkBox'; // PascalCase import/export, camelCase filename
import FortyTwo from './FortyTwo'; // PascalCase import/filename, camelCase export
import InsideDirectory from './InsideDirectory'; // PascalCase import/filename, camelCase export

// bad
import CheckBox from './check_box'; // PascalCase import/export, snake_case filename
import forty_two from './forty_two'; // snake_case import/filename, camelCase export
import inside_directory from './inside_directory'; // snake_case import, camelCase export
import index from './inside_directory/index'; // requiring the index file explicitly
import insideDirectory from './insideDirectory/index'; // requiring the index file explicitly

// good
import CheckBox from './CheckBox'; // PascalCase export/import/filename
import fortyTwo from './fortyTwo'; // camelCase export/import/filename
import insideDirectory from './insideDirectory'; // camelCase export/import/directory name/implicit "index"
// ^ supports both insideDirectory.js and insideDirectory/index.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="naming--camelCase-default-export"&gt;&lt;/a&gt;&lt;a name="22.7"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase-default-export"&gt;23.7&lt;/a&gt; Use camelCase when you export-default a function. Your filename should be identical to your function’s name.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;function makeStyleGuide() {
  // ...
}

export default makeStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="naming--PascalCase-singleton"&gt;&lt;/a&gt;&lt;a name="22.8"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase-singleton"&gt;23.8&lt;/a&gt; Use PascalCase when you export a constructor / class / singleton / function library / bare object.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;const AirbnbStyleGuide = {
  es6: {
  },
};

export default AirbnbStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="naming--Acronyms-and-Initialisms"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#naming--Acronyms-and-Initialisms"&gt;23.9&lt;/a&gt; Acronyms and initialisms should always be all uppercased, or all lowercased.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Names are for readability, not to appease a computer algorithm.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
import SmsContainer from './containers/SmsContainer';

// bad
const HttpRequests = [
  // ...
];

// good
import SMSContainer from './containers/SMSContainer';

// good
const HTTPRequests = [
  // ...
];

// also good
const httpRequests = [
  // ...
];

// best
import TextMessageContainer from './containers/TextMessageContainer';

// best
const requests = [
  // ...
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="naming--uppercase"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#naming--uppercase"&gt;23.10&lt;/a&gt; You may optionally uppercase a constant only if it (1) is exported, (2) is a &lt;code&gt;const&lt;/code&gt; (it can not be reassigned), and (3) the programmer can trust it (and its nested properties) to never change.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is an additional tool to assist in situations where the programmer would be unsure if a variable might ever change. UPPERCASE_VARIABLES are letting the programmer know that they can trust the variable (and its properties) not to change.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;What about all &lt;code&gt;const&lt;/code&gt; variables? - This is unnecessary, so uppercasing should not be used for constants within a file. It should be used for exported constants however.&lt;/li&gt; 
   &lt;li&gt;What about exported objects? - Uppercase at the top level of export (e.g. &lt;code&gt;EXPORTED_OBJECT.key&lt;/code&gt;) and maintain that all nested properties do not change.&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const PRIVATE_VARIABLE = 'should not be unnecessarily uppercased within a file';

// bad
export const THING_TO_BE_CHANGED = 'should obviously not be uppercased';

// bad
export let REASSIGNABLE_VARIABLE = 'do not use let with uppercase variables';

// ---

// allowed but does not supply semantic value
export const apiKey = 'SOMEKEY';

// better in most cases
export const API_KEY = 'SOMEKEY';

// ---

// bad - unnecessarily uppercases key while adding no semantic value
export const MAPPING = {
  KEY: 'value'
};

// good
export const MAPPING = {
  key: 'value',
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Accessors&lt;/h2&gt; 
&lt;p&gt;&lt;a name="accessors--not-required"&gt;&lt;/a&gt;&lt;a name="23.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--not-required"&gt;24.1&lt;/a&gt; Accessor functions for properties are not required.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="accessors--no-getters-setters"&gt;&lt;/a&gt;&lt;a name="23.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--no-getters-setters"&gt;24.2&lt;/a&gt; Do not use JavaScript getters/setters as they cause unexpected side effects and are harder to test, maintain, and reason about. Instead, if you do make accessor functions, use &lt;code&gt;getVal()&lt;/code&gt; and &lt;code&gt;setVal('hello')&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
class Dragon {
  get age() {
    // ...
  }

  set age(value) {
    // ...
  }
}

// good
class Dragon {
  getAge() {
    // ...
  }

  setAge(value) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="accessors--boolean-prefix"&gt;&lt;/a&gt;&lt;a name="23.3"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--boolean-prefix"&gt;24.3&lt;/a&gt; If the property/method is a &lt;code&gt;boolean&lt;/code&gt;, use &lt;code&gt;isVal()&lt;/code&gt; or &lt;code&gt;hasVal()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
if (!dragon.age()) {
  return false;
}

// good
if (!dragon.hasAge()) {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="accessors--consistent"&gt;&lt;/a&gt;&lt;a name="23.4"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--consistent"&gt;24.4&lt;/a&gt; It’s okay to create &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;set()&lt;/code&gt; functions, but be consistent.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;class Jedi {
  constructor(options = {}) {
    const lightsaber = options.lightsaber || 'blue';
    this.set('lightsaber', lightsaber);
  }

  set(key, val) {
    this[key] = val;
  }

  get(key) {
    return this[key];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Events&lt;/h2&gt; 
&lt;p&gt;&lt;a name="events--hash"&gt;&lt;/a&gt;&lt;a name="24.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#events--hash"&gt;25.1&lt;/a&gt; When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass an object literal (also known as a "hash") instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
$(this).trigger('listingUpdated', listing.id);

// ...

$(this).on('listingUpdated', (e, listingID) =&amp;gt; {
  // do something with listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;prefer:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// good
$(this).trigger('listingUpdated', { listingID: listing.id });

// ...

$(this).on('listingUpdated', (e, data) =&amp;gt; {
  // do something with data.listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;jQuery&lt;/h2&gt; 
&lt;p&gt;&lt;a name="jquery--dollar-prefix"&gt;&lt;/a&gt;&lt;a name="25.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--dollar-prefix"&gt;26.1&lt;/a&gt; Prefix jQuery object variables with a &lt;code&gt;$&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
const sidebar = $('.sidebar');

// good
const $sidebar = $('.sidebar');

// good
const $sidebarBtn = $('.sidebar-btn');
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="jquery--cache"&gt;&lt;/a&gt;&lt;a name="25.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--cache"&gt;26.2&lt;/a&gt; Cache jQuery lookups.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
function setSidebar() {
  $('.sidebar').hide();

  // ...

  $('.sidebar').css({
    'background-color': 'pink',
  });
}

// good
function setSidebar() {
  const $sidebar = $('.sidebar');
  $sidebar.hide();

  // ...

  $sidebar.css({
    'background-color': 'pink',
  });
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="jquery--queries"&gt;&lt;/a&gt;&lt;a name="25.3"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--queries"&gt;26.3&lt;/a&gt; For DOM queries use Cascading &lt;code&gt;$('.sidebar ul')&lt;/code&gt; or parent &amp;gt; child &lt;code&gt;$('.sidebar &amp;gt; ul')&lt;/code&gt;. &lt;a href="https://web.archive.org/web/20200414183810/https://jsperf.com/jquery-find-vs-context-sel/16"&gt;jsPerf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="jquery--find"&gt;&lt;/a&gt;&lt;a name="25.4"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--find"&gt;26.4&lt;/a&gt; Use &lt;code&gt;find&lt;/code&gt; with scoped jQuery object queries.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
$('ul', '.sidebar').hide();

// bad
$('.sidebar').find('ul').hide();

// good
$('.sidebar ul').hide();

// good
$('.sidebar &amp;gt; ul').hide();

// good
$sidebar.find('ul').hide();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 5 Compatibility&lt;/h2&gt; 
&lt;p&gt;&lt;a name="es5-compat--kangax"&gt;&lt;/a&gt;&lt;a name="26.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es5-compat--kangax"&gt;27.1&lt;/a&gt; Refer to &lt;a href="https://twitter.com/kangax/"&gt;Kangax&lt;/a&gt;’s ES5 &lt;a href="https://compat-table.github.io/compat-table/es5/"&gt;compatibility table&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a name="ecmascript-6-styles"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/h2&gt; 
&lt;p&gt;&lt;a name="es6-styles"&gt;&lt;/a&gt;&lt;a name="27.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es6-styles"&gt;28.1&lt;/a&gt; This is a collection of links to the various ES6+ features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions"&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors"&gt;Classes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand"&gt;Object Shorthand&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise"&gt;Object Concise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties"&gt;Object Computed Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals"&gt;Template Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring"&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters"&gt;Default Parameters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest"&gt;Rest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads"&gt;Array Spreads&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#references"&gt;Let and Const&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator"&gt;Exponentiation Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators"&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#modules"&gt;Modules&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a name="tc39-proposals"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#tc39-proposals"&gt;28.2&lt;/a&gt; Do not use &lt;a href="https://github.com/tc39/proposals"&gt;TC39 proposals&lt;/a&gt; that have not reached stage 3.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;a href="https://tc39.github.io/process-document/"&gt;They are not finalized&lt;/a&gt;, and they are subject to change or to be withdrawn entirely. We want to use JavaScript, and proposals are not JavaScript yet.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Standard Library&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects"&gt;Standard Library&lt;/a&gt; contains utilities that are functionally broken but remain for legacy reasons.&lt;/p&gt; 
&lt;p&gt;&lt;a name="standard-library--isnan"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isnan"&gt;29.1&lt;/a&gt; Use &lt;code&gt;Number.isNaN&lt;/code&gt; instead of global &lt;code&gt;isNaN&lt;/code&gt;. eslint: &lt;a href="https://eslint.org/docs/rules/no-restricted-globals"&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isNaN&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to NaN. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
isNaN('1.2'); // false
isNaN('1.2.3'); // true

// good
Number.isNaN('1.2.3'); // false
Number.isNaN(Number('1.2.3')); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="standard-library--isfinite"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isfinite"&gt;29.2&lt;/a&gt; Use &lt;code&gt;Number.isFinite&lt;/code&gt; instead of global &lt;code&gt;isFinite&lt;/code&gt;. eslint: &lt;a href="https://eslint.org/docs/rules/no-restricted-globals"&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isFinite&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to a finite number. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;// bad
isFinite('2e3'); // true

// good
Number.isFinite('2e3'); // false
Number.isFinite(parseInt('2e3', 10)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;&lt;a name="testing--yup"&gt;&lt;/a&gt;&lt;a name="28.1"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#testing--yup"&gt;30.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;function foo() {
  return true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="testing--for-real"&gt;&lt;/a&gt;&lt;a name="28.2"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#testing--for-real"&gt;30.2&lt;/a&gt; &lt;strong&gt;No, but seriously&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Whichever testing framework you use, you should be writing tests!&lt;/li&gt; 
   &lt;li&gt;Strive to write many small pure functions, and minimize where mutations occur.&lt;/li&gt; 
   &lt;li&gt;Be cautious about stubs and mocks - they can make your tests more brittle.&lt;/li&gt; 
   &lt;li&gt;We primarily use &lt;a href="https://www.npmjs.com/package/mocha"&gt;&lt;code&gt;mocha&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://www.npmjs.com/package/jest"&gt;&lt;code&gt;jest&lt;/code&gt;&lt;/a&gt; at Airbnb. &lt;a href="https://www.npmjs.com/package/tape"&gt;&lt;code&gt;tape&lt;/code&gt;&lt;/a&gt; is also used occasionally for small, separate modules.&lt;/li&gt; 
   &lt;li&gt;100% test coverage is a good goal to strive for, even if it’s not always practical to reach it.&lt;/li&gt; 
   &lt;li&gt;Whenever you fix a bug, &lt;em&gt;write a regression test&lt;/em&gt;. A bug fixed without a regression test is almost certainly going to break again in the future.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.kellegous.com/j/2013/01/26/layout-performance/"&gt;On Layout &amp;amp; Web Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://web.archive.org/web/20200414200857/https://jsperf.com/string-vs-array-concat/2"&gt;String vs Array Concat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://web.archive.org/web/20200414190827/https://jsperf.com/try-catch-in-loop-cost/12"&gt;Try/Catch Cost In a Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://web.archive.org/web/20200414205426/https://jsperf.com/bang-function"&gt;Bang Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://web.archive.org/web/20200414200850/https://jsperf.com/jquery-find-vs-context-sel/164"&gt;jQuery Find vs Context, Selector&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://web.archive.org/web/20200414205428/https://jsperf.com/innerhtml-vs-textcontent-for-script-text"&gt;innerHTML vs textContent for script text&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://web.archive.org/web/20200414203914/https://jsperf.com/ya-string-concat/38"&gt;Long String Concatenation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.quora.com/JavaScript-programming-language-Are-Javascript-functions-like-map-reduce-and-filter-already-optimized-for-traversing-array/answer/Quildreen-Motta"&gt;Are JavaScript functions like &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;reduce()&lt;/code&gt;, and &lt;code&gt;filter()&lt;/code&gt; optimized for traversing arrays?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Loading...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Learning ES6+&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://tc39.github.io/ecma262/"&gt;Latest ECMA spec&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://exploringjs.com/"&gt;ExploringJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://compat-table.github.io/compat-table/es6/"&gt;ES6 Compatibility Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://web.archive.org/web/20240404212626/http://es6-features.org/"&gt;Comprehensive Overview of ES6 Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/javascript"&gt;JavaScript Roadmap&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Read This&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/6.0/index.html"&gt;Standard ECMA-262&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Code Style Linters 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://eslint.org/"&gt;ESlint&lt;/a&gt; - &lt;a href="https://github.com/airbnb/javascript/raw/master/linters/.eslintrc"&gt;Airbnb Style .eslintrc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://jshint.com/"&gt;JSHint&lt;/a&gt; - &lt;a href="https://github.com/airbnb/javascript/raw/master/linters/.jshintrc"&gt;Airbnb Style .jshintrc&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Neutrino Preset - &lt;a href="https://neutrinojs.org/packages/airbnb/"&gt;@neutrinojs/airbnb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Style Guides&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://google.github.io/styleguide/jsguide.html"&gt;Google JavaScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://google.github.io/styleguide/javascriptguide.xml"&gt;Google JavaScript Style Guide (Old)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://contribute.jquery.org/style-guide/js/"&gt;jQuery Core Style Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rwaldron/idiomatic.js"&gt;Principles of Writing Consistent, Idiomatic JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://standardjs.com"&gt;StandardJS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Styles&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/cjohansen/4135065"&gt;Naming this in nested functions&lt;/a&gt; - Christian Johansen&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/airbnb/javascript/issues/52"&gt;Conditional Callbacks&lt;/a&gt; - Ross Allen&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://sideeffect.kr/popularconvention/#javascript"&gt;Popular JavaScript Coding Conventions on GitHub&lt;/a&gt; - JeongHoon Byun&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://benalman.com/news/2012/05/multiple-var-statements-javascript/"&gt;Multiple var statements in JavaScript, not superfluous&lt;/a&gt; - Ben Alman&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Further Reading&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javascriptweblog.wordpress.com/2010/10/25/understanding-javascript-closures/"&gt;Understanding JavaScript Closures&lt;/a&gt; - Angus Croll&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.2ality.com/2013/06/basic-javascript.html"&gt;Basic JavaScript for the impatient programmer&lt;/a&gt; - Dr. Axel Rauschmayer&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youmightnotneedjquery.com/"&gt;You Might Not Need jQuery&lt;/a&gt; - Zack Bloom &amp;amp; Adam Schwartz&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lukehoban/es6features"&gt;ES6 Features&lt;/a&gt; - Luke Hoban&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bendc/frontend-guidelines"&gt;Frontend Guidelines&lt;/a&gt; - Benjamin De Cock&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Books&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742"&gt;JavaScript: The Good Parts&lt;/a&gt; - Douglas Crockford&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752"&gt;JavaScript Patterns&lt;/a&gt; - Stoyan Stefanov&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/JavaScript-Design-Patterns-Recipes-Problem-Solution/dp/159059908X"&gt;Pro JavaScript Design Patterns&lt;/a&gt; - Ross Harmes and Dustin Diaz&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/High-Performance-Web-Sites-Essential/dp/0596529309"&gt;High Performance Web Sites: Essential Knowledge for Front-End Engineers&lt;/a&gt; - Steve Souders&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Maintainable-JavaScript-Nicholas-C-Zakas/dp/1449327680"&gt;Maintainable JavaScript&lt;/a&gt; - Nicholas C. Zakas&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/JavaScript-Web-Applications-Alex-MacCaw/dp/144930351X"&gt;JavaScript Web Applications&lt;/a&gt; - Alex MacCaw&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Pro-JavaScript-Techniques-John-Resig/dp/1590597273"&gt;Pro JavaScript Techniques&lt;/a&gt; - John Resig&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Smashing-Node-js-JavaScript-Everywhere-Magazine/dp/1119962595"&gt;Smashing Node.js: JavaScript Everywhere&lt;/a&gt; - Guillermo Rauch&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Secrets-JavaScript-Ninja-John-Resig/dp/193398869X"&gt;Secrets of the JavaScript Ninja&lt;/a&gt; - John Resig and Bear Bibeault&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://humanjavascript.com/"&gt;Human JavaScript&lt;/a&gt; - Henrik Joreteg&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://superherojs.com/"&gt;Superhero.js&lt;/a&gt; - Kim Joar Bekkelund, Mads Mobæk, &amp;amp; Olav Bjorkoy&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jsbooks.revolunet.com/"&gt;JSBooks&lt;/a&gt; - Julien Bouquillon&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.manning.com/books/third-party-javascript"&gt;Third Party JavaScript&lt;/a&gt; - Ben Vinegar and Anton Kovalyov&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://amzn.com/dp/0321812182"&gt;Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript&lt;/a&gt; - David Herman&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://eloquentjavascript.net/"&gt;Eloquent JavaScript&lt;/a&gt; - Marijn Haverbeke&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://shop.oreilly.com/product/0636920033769.do"&gt;You Don’t Know JS: ES6 &amp;amp; Beyond&lt;/a&gt; - Kyle Simpson&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Blogs&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javascriptweekly.com/"&gt;JavaScript Weekly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascriptweblog.wordpress.com/"&gt;JavaScript, JavaScript...&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bocoup.com/weblog"&gt;Bocoup Weblog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.adequatelygood.com/"&gt;Adequately Good&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.nczonline.net/"&gt;NCZOnline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://perfectionkills.com/"&gt;Perfection Kills&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://benalman.com/"&gt;Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://dmitry.baranovskiy.com/"&gt;Dmitry Baranovskiy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.tutsplus.com/?s=javascript"&gt;nettuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Podcasts&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javascriptair.com/"&gt;JavaScript Air&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://devchat.tv/js-jabber/"&gt;JavaScript Jabber&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;In the Wild&lt;/h2&gt; 
&lt;p&gt;This is a list of organizations that are using this style guide. Send us a pull request and we'll add you to the list.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;123erfasst&lt;/strong&gt;: &lt;a href="https://github.com/123erfasst/javascript"&gt;123erfasst/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4Catalyzer&lt;/strong&gt;: &lt;a href="https://github.com/4Catalyzer/javascript"&gt;4Catalyzer/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Aan Zee&lt;/strong&gt;: &lt;a href="https://github.com/AanZee/javascript"&gt;AanZee/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Airbnb&lt;/strong&gt;: &lt;a href="https://github.com/airbnb/javascript"&gt;airbnb/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AloPeyk&lt;/strong&gt;: &lt;a href="https://github.com/AloPeyk"&gt;AloPeyk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AltSchool&lt;/strong&gt;: &lt;a href="https://github.com/AltSchool/javascript"&gt;AltSchool/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Apartmint&lt;/strong&gt;: &lt;a href="https://github.com/apartmint/javascript"&gt;apartmint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ascribe&lt;/strong&gt;: &lt;a href="https://github.com/ascribe/javascript"&gt;ascribe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Avant&lt;/strong&gt;: &lt;a href="https://github.com/avantcredit/javascript"&gt;avantcredit/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Axept&lt;/strong&gt;: &lt;a href="https://github.com/axept/javascript"&gt;axept/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Billabong&lt;/strong&gt;: &lt;a href="https://github.com/billabong/javascript"&gt;billabong/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bisk&lt;/strong&gt;: &lt;a href="https://github.com/Bisk/"&gt;bisk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Brainshark&lt;/strong&gt;: &lt;a href="https://github.com/brainshark/javascript"&gt;brainshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CaseNine&lt;/strong&gt;: &lt;a href="https://github.com/CaseNine/javascript"&gt;CaseNine/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cerner&lt;/strong&gt;: &lt;a href="https://github.com/cerner/"&gt;Cerner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chartboost&lt;/strong&gt;: &lt;a href="https://github.com/ChartBoost/javascript-style-guide"&gt;ChartBoost/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Coeur d'Alene Tribe&lt;/strong&gt;: &lt;a href="https://www.cdatribe-nsn.gov"&gt;www.cdatribe-nsn.gov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ComparaOnline&lt;/strong&gt;: &lt;a href="https://github.com/comparaonline/javascript-style-guide"&gt;comparaonline/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Compass Learning&lt;/strong&gt;: &lt;a href="https://github.com/compasslearning/javascript-style-guide"&gt;compasslearning/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DailyMotion&lt;/strong&gt;: &lt;a href="https://github.com/dailymotion/javascript"&gt;dailymotion/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DoSomething&lt;/strong&gt;: &lt;a href="https://github.com/DoSomething/eslint-config"&gt;DoSomething/eslint-config&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Digitpaint&lt;/strong&gt; &lt;a href="https://github.com/digitpaint/javascript"&gt;digitpaint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Drupal&lt;/strong&gt;: &lt;a href="https://git.drupalcode.org/project/drupal/blob/8.6.x/core/.eslintrc.json"&gt;www.drupal.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ecosia&lt;/strong&gt;: &lt;a href="https://github.com/ecosia/javascript"&gt;ecosia/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evolution Gaming&lt;/strong&gt;: &lt;a href="https://github.com/evolution-gaming/javascript"&gt;evolution-gaming/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;EvozonJs&lt;/strong&gt;: &lt;a href="https://github.com/evozonjs/javascript"&gt;evozonjs/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ExactTarget&lt;/strong&gt;: &lt;a href="https://github.com/ExactTarget/javascript"&gt;ExactTarget/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexberry&lt;/strong&gt;: &lt;a href="https://github.com/Flexberry/javascript-style-guide"&gt;Flexberry/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gawker Media&lt;/strong&gt;: &lt;a href="https://github.com/gawkermedia/"&gt;gawkermedia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Electric&lt;/strong&gt;: &lt;a href="https://github.com/GeneralElectric/javascript"&gt;GeneralElectric/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generation Tux&lt;/strong&gt;: &lt;a href="https://github.com/generationtux/styleguide"&gt;GenerationTux/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GoodData&lt;/strong&gt;: &lt;a href="https://github.com/gooddata/gdc-js-style"&gt;gooddata/gdc-js-style&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GreenChef&lt;/strong&gt;: &lt;a href="https://github.com/greenchef/javascript"&gt;greenchef/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grooveshark&lt;/strong&gt;: &lt;a href="https://github.com/grooveshark/javascript"&gt;grooveshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grupo-Abraxas&lt;/strong&gt;: &lt;a href="https://github.com/Grupo-Abraxas/javascript"&gt;Grupo-Abraxas/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Happeo&lt;/strong&gt;: &lt;a href="https://github.com/happeo/javascript"&gt;happeo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;How About We&lt;/strong&gt;: &lt;a href="https://github.com/howaboutwe/javascript-style-guide"&gt;howaboutwe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HubSpot&lt;/strong&gt;: &lt;a href="https://github.com/HubSpot/javascript"&gt;HubSpot/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hyper&lt;/strong&gt;: &lt;a href="https://github.com/hyperoslo/javascript-playbook/raw/master/style.md"&gt;hyperoslo/javascript-playbook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ILIAS&lt;/strong&gt;: &lt;a href="https://github.com/ILIAS-eLearning/ILIAS"&gt;ILIAS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;InterCity Group&lt;/strong&gt;: &lt;a href="https://github.com/intercitygroup/javascript-style-guide"&gt;intercitygroup/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jam3&lt;/strong&gt;: &lt;a href="https://github.com/Jam3/Javascript-Code-Conventions"&gt;Jam3/Javascript-Code-Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSSolutions&lt;/strong&gt;: &lt;a href="https://github.com/JSSolutions/javascript"&gt;JSSolutions/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kaplan Komputing&lt;/strong&gt;: &lt;a href="https://github.com/kaplankomputing/javascript"&gt;kaplankomputing/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;KickorStick&lt;/strong&gt;: &lt;a href="https://github.com/kickorstick/"&gt;kickorstick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kinetica Solutions&lt;/strong&gt;: &lt;a href="https://github.com/kinetica/Javascript-style-guide"&gt;kinetica/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LEINWAND&lt;/strong&gt;: &lt;a href="https://github.com/LEINWAND/javascript"&gt;LEINWAND/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lonely Planet&lt;/strong&gt;: &lt;a href="https://github.com/lonelyplanet/javascript"&gt;lonelyplanet/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;M2GEN&lt;/strong&gt;: &lt;a href="https://github.com/M2GEN/javascript"&gt;M2GEN/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mighty Spring&lt;/strong&gt;: &lt;a href="https://github.com/mightyspring/javascript"&gt;mightyspring/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MinnPost&lt;/strong&gt;: &lt;a href="https://github.com/MinnPost/javascript"&gt;MinnPost/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MitocGroup&lt;/strong&gt;: &lt;a href="https://github.com/MitocGroup/javascript"&gt;MitocGroup/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Muber&lt;/strong&gt;: &lt;a href="https://github.com/muber/"&gt;muber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;National Geographic Society&lt;/strong&gt;: &lt;a href="https://github.com/natgeosociety/"&gt;natgeosociety&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;NullDev&lt;/strong&gt;: &lt;a href="https://github.com/NullDevCo/JavaScript-Styleguide"&gt;NullDevCo/JavaScript-Styleguide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nulogy&lt;/strong&gt;: &lt;a href="https://github.com/nulogy/javascript"&gt;nulogy/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orange Hill Development&lt;/strong&gt;: &lt;a href="https://github.com/orangehill/javascript"&gt;orangehill/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orion Health&lt;/strong&gt;: &lt;a href="https://github.com/orionhealth/javascript"&gt;orionhealth/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Peerby&lt;/strong&gt;: &lt;a href="https://github.com/Peerby/javascript"&gt;Peerby/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pier 1&lt;/strong&gt;: &lt;a href="https://github.com/pier1/javascript"&gt;Pier1/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Qotto&lt;/strong&gt;: &lt;a href="https://github.com/Qotto/javascript-style-guide"&gt;Qotto/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: &lt;a href="https://reactjs.org/docs/how-to-contribute.html#style-guide"&gt;reactjs.org/docs/how-to-contribute.html#style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ripple&lt;/strong&gt;: &lt;a href="https://github.com/ripple/javascript-style-guide"&gt;ripple/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sainsbury’s Supermarkets&lt;/strong&gt;: &lt;a href="https://github.com/jsainsburyplc"&gt;jsainsburyplc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shutterfly&lt;/strong&gt;: &lt;a href="https://github.com/shutterfly/javascript"&gt;shutterfly/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sourcetoad&lt;/strong&gt;: &lt;a href="https://github.com/sourcetoad/javascript"&gt;sourcetoad/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Springload&lt;/strong&gt;: &lt;a href="https://github.com/springload/"&gt;springload&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StratoDem Analytics&lt;/strong&gt;: &lt;a href="https://github.com/stratodem/javascript"&gt;stratodem/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SteelKiwi Development&lt;/strong&gt;: &lt;a href="https://github.com/steelkiwi/javascript"&gt;steelkiwi/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StudentSphere&lt;/strong&gt;: &lt;a href="https://github.com/studentsphere/guide-javascript"&gt;studentsphere/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SwoopApp&lt;/strong&gt;: &lt;a href="https://github.com/swoopapp/javascript"&gt;swoopapp/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SysGarage&lt;/strong&gt;: &lt;a href="https://github.com/sysgarage/javascript-style-guide"&gt;sysgarage/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Syzygy Warsaw&lt;/strong&gt;: &lt;a href="https://github.com/syzygypl/javascript"&gt;syzygypl/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Target&lt;/strong&gt;: &lt;a href="https://github.com/target/javascript"&gt;target/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terra&lt;/strong&gt;: &lt;a href="https://github.com/cerner?utf8=%E2%9C%93&amp;amp;q=terra&amp;amp;type=&amp;amp;language="&gt;terra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TheLadders&lt;/strong&gt;: &lt;a href="https://github.com/TheLadders/javascript"&gt;TheLadders/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Nerdery&lt;/strong&gt;: &lt;a href="https://github.com/thenerdery/javascript-standards"&gt;thenerdery/javascript-standards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tomify&lt;/strong&gt;: &lt;a href="https://github.com/tomprats"&gt;tomprats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Traitify&lt;/strong&gt;: &lt;a href="https://github.com/traitify/eslint-config-traitify"&gt;traitify/eslint-config-traitify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;T4R Technology&lt;/strong&gt;: &lt;a href="https://github.com/T4R-Technology/javascript"&gt;T4R-Technology/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UrbanSim&lt;/strong&gt;: &lt;a href="https://github.com/urbansim/"&gt;urbansim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VoxFeed&lt;/strong&gt;: &lt;a href="https://github.com/VoxFeed/javascript-style-guide"&gt;VoxFeed/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WeBox Studio&lt;/strong&gt;: &lt;a href="https://github.com/weboxstudio/javascript"&gt;weboxstudio/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Weggo&lt;/strong&gt;: &lt;a href="https://github.com/Weggo/javascript"&gt;Weggo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zillow&lt;/strong&gt;: &lt;a href="https://github.com/zillow/javascript"&gt;zillow/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zit Software&lt;/strong&gt;: &lt;a href="https://github.com/zit-software/javascript"&gt;zit-software/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ZocDoc&lt;/strong&gt;: &lt;a href="https://github.com/ZocDoc/javascript"&gt;ZocDoc/javascript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;This style guide is also available in other languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png" alt="br" /&gt; &lt;strong&gt;Brazilian Portuguese&lt;/strong&gt;: &lt;a href="https://github.com/armoucar/javascript-style-guide"&gt;armoucar/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bulgaria.png" alt="bg" /&gt; &lt;strong&gt;Bulgarian&lt;/strong&gt;: &lt;a href="https://github.com/borislavvv/javascript"&gt;borislavvv/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/fpmweb/javascript-style-guide/master/img/catala.png" alt="ca" /&gt; &lt;strong&gt;Catalan&lt;/strong&gt;: &lt;a href="https://github.com/fpmweb/javascript-style-guide"&gt;fpmweb/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png" alt="cn" /&gt; &lt;strong&gt;Chinese (Simplified)&lt;/strong&gt;: &lt;a href="https://github.com/lin-123/javascript"&gt;lin-123/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png" alt="tw" /&gt; &lt;strong&gt;Chinese (Traditional)&lt;/strong&gt;: &lt;a href="https://github.com/jigsawye/javascript"&gt;jigsawye/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png" alt="fr" /&gt; &lt;strong&gt;French&lt;/strong&gt;: &lt;a href="https://github.com/nmussy/javascript-style-guide"&gt;nmussy/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png" alt="de" /&gt; &lt;strong&gt;German&lt;/strong&gt;: &lt;a href="https://github.com/timofurrer/javascript-style-guide"&gt;timofurrer/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png" alt="it" /&gt; &lt;strong&gt;Italian&lt;/strong&gt;: &lt;a href="https://github.com/sinkswim/javascript-style-guide"&gt;sinkswim/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png" alt="jp" /&gt; &lt;strong&gt;Japanese&lt;/strong&gt;: &lt;a href="https://github.com/mitsuruog/javascript-style-guide"&gt;mitsuruog/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png" alt="kr" /&gt; &lt;strong&gt;Korean&lt;/strong&gt;: &lt;a href="https://github.com/ParkSB/javascript-style-guide"&gt;ParkSB/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png" alt="ru" /&gt; &lt;strong&gt;Russian&lt;/strong&gt;: &lt;a href="https://github.com/leonidlebedev/javascript-airbnb"&gt;leonidlebedev/javascript-airbnb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png" alt="es" /&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href="https://github.com/paolocarrasco/javascript-style-guide"&gt;paolocarrasco/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Thailand.png" alt="th" /&gt; &lt;strong&gt;Thai&lt;/strong&gt;: &lt;a href="https://github.com/lvarayut/javascript-style-guide"&gt;lvarayut/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png" alt="tr" /&gt; &lt;strong&gt;Turkish&lt;/strong&gt;: &lt;a href="https://github.com/eraycetinay/javascript"&gt;eraycetinay/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png" alt="ua" /&gt; &lt;strong&gt;Ukrainian&lt;/strong&gt;: &lt;a href="https://github.com/ivanzusko/javascript"&gt;ivanzusko/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png" alt="vn" /&gt; &lt;strong&gt;Vietnam&lt;/strong&gt;: &lt;a href="https://github.com/dangkyokhoang/javascript-style-guide"&gt;dangkyokhoang/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The JavaScript Style Guide Guide&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/airbnb/javascript/wiki/The-JavaScript-Style-Guide-Guide"&gt;Reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Chat With Us About JavaScript&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find us on &lt;a href="https://gitter.im/airbnb/javascript"&gt;gitter&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/airbnb/javascript/graphs/contributors"&gt;View Contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;(The MIT License)&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2012 Airbnb&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Amendments&lt;/h2&gt; 
&lt;p&gt;We encourage you to fork this guide and change the rules to fit your team’s style guide. Below, you may list some amendments to the style guide. This allows you to periodically update your style guide without having to deal with merge conflicts.&lt;/p&gt; 
&lt;h1&gt;};&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>Gar-b-age/CookLikeHOC</title>
      <link>https://github.com/Gar-b-age/CookLikeHOC</link>
      <description>&lt;p&gt;🥢像老乡鸡🐔那样做饭。主要部分于2024年完工，非老乡鸡官方仓库。文字来自《老乡鸡菜品溯源报告》，并做归纳、编辑与整理。CookLikeHOC.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Gar-b-age/CookLikeHOC/main/banner.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Gar-b-age/CookLikeHOC/main/docker_support/README.md"&gt;&lt;strong&gt;Docker Support&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/Gar-b-age/CookLikeHOC/main/docs/development.md"&gt;&lt;strong&gt;Development&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h1&gt;像老乡鸡那样做饭&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/Gar-b-age/CookLikeHOC/issues/26"&gt;&lt;strong&gt;一些说明&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;仓库主体部分于2024年完工，和2025年9月份的舆论事件无关。截止提交时，仓库的贡献者们与老乡鸡的唯一关系只有消费者和商家的关系。本仓库不是老乡鸡的官方仓库。如果有任何问题或意见建议，欢迎指出&lt;/p&gt; 
&lt;h2&gt;新更新&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;欢迎大家来贡献实拍图&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;现已上线网页端，&lt;a href="https://cooklikehoc.soilzhu.su"&gt;点击访问&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run with Docker? Check it out &lt;a href="https://github.com/Gar-b-age/CookLikeHOC/tree/main/docker_support"&gt;here&lt;/a&gt;, supported by &lt;a href="https://github.com/honestAnt"&gt;@honestAnt&lt;/a&gt; in &lt;a href="https://github.com/Gar-b-age/CookLikeHOC/pull/141"&gt;PR #141&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;AI 绘制的手绘图版及AI配图流程版网页： &lt;a href="https://ai.cooklikehoc.soilzhu.su"&gt;点击访问&lt;/a&gt;, 手绘图由 &lt;a href="https://github.com/liucongg"&gt;@liucongg&lt;/a&gt; 贡献，见 &lt;a href="https://github.com/Gar-b-age/CookLikeHOC/pull/143"&gt;PR #143&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://t.me/cooklikehoc"&gt;&lt;img src="https://raw.githubusercontent.com/Gar-b-age/CookLikeHOC/main/tg.png" alt="link" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;《老乡鸡菜品溯源报告》中公布的所有菜品已经全部录入完，欢迎大家查阅和补充。&lt;/p&gt; 
&lt;p&gt;文字超大段copy自&lt;a href="https://www.lxjchina.com.cn/display.asp?id=4226"&gt;《老乡鸡菜品溯源报告》&lt;/a&gt;，有编辑与整理&lt;/p&gt; 
&lt;p&gt;指路隔壁 &lt;a href="https://cook.aiursoft.cn/"&gt;How To Cook&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;至于为什么仓库名要叫CookLikeHOC，因为直接写Laoxiangji大概不方便阅读，而Home Original Chicken是china daily报道中所使用的老乡鸡的英文名，故简写成HOC。&lt;/p&gt; 
&lt;h2&gt;Contributor&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://contrib.rocks/image?repo=Gar-b-age/CookLikeHOC" alt="cr" /&gt;&lt;/p&gt; 
&lt;h2&gt;Logo&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Gar-b-age/CookLikeHOC/main/logo.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#Gar-b-age/CookLikeHOC&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=Gar-b-age/CookLikeHOC&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>meshery/meshery</title>
      <link>https://github.com/meshery/meshery</link>
      <description>&lt;p&gt;Meshery, the cloud native manager&lt;/p&gt;&lt;hr&gt;&lt;p style="text-align:center;" align="center"&gt;&lt;a href="https://meshery.io"&gt;
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-light-text-side.svg" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg" /&gt; 
   &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg?sanitize=true" alt="Meshery Logo" width="70%" /&gt;
  &lt;/picture&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://hub.docker.com/r/meshery/meshery" alt="Docker pulls"&gt; &lt;img src="https://img.shields.io/docker/pulls/meshery/meshery.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://github.com/issues?q=is%3Aopen%20is%3Aissue%20archived%3Afalse%20(org%3Ameshery%20OR%20org%3Aservice-mesh-performance%20OR%20org%3Aservice-mesh-patterns%20OR%20org%3Ameshery-extensions)%20label%3A%22help%20wanted%22%20" alt="GitHub issues by-label"&gt; &lt;img src="https://img.shields.io/github/issues/meshery/meshery/help%20wanted.svg?color=informational" /&gt;&lt;/a&gt; &lt;a href="https://github.com/meshery/meshery/raw/master/LICENSE" alt="LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/meshery/meshery?color=brightgreen" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/meshery/meshery" alt="Artifact Hub Meshery"&gt; &lt;img src="https://img.shields.io/endpoint?color=brightgreen&amp;amp;label=Helm%20Chart&amp;amp;style=plastic&amp;amp;url=https%3A%2F%2Fartifacthub.io%2Fbadge%2Frepository%2Fartifact-hub" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/meshery/meshery" alt="Go Report Card"&gt; &lt;img src="https://goreportcard.com/badge/github.com/meshery/meshery" /&gt;&lt;/a&gt; &lt;a href="https://github.com/meshery/meshery/actions" alt="Build Status"&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/meshery/meshery/release-drafter.yml" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/3564" alt="CLI Best Practices"&gt; &lt;img src="https://bestpractices.coreinfrastructure.org/projects/3564/badge" /&gt;&lt;/a&gt; &lt;a href="https://meshery.io/community#discussion-forums" alt="Discussion Forum"&gt; &lt;img src="https://img.shields.io/discourse/users?label=discuss&amp;amp;logo=discourse&amp;amp;server=https%3A%2F%2Fmeshery.io/community" /&gt;&lt;/a&gt; &lt;a href="https://slack.meshery.io" alt="Join Slack"&gt; &lt;img src="https://img.shields.io/badge/Slack-@meshery.svg?logo=slack" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=mesheryio" alt="Twitter Follow"&gt; &lt;img src="https://img.shields.io/twitter/follow/mesheryio.svg?label=Follow+Meshery&amp;amp;style=social" /&gt;&lt;/a&gt; &lt;a href="https://github.com/meshery/meshery/releases" alt="Meshery Downloads"&gt; &lt;img src="https://img.shields.io/github/downloads/meshery/meshery/total" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/meshery/meshery" alt="OpenSSF Scorecard"&gt; &lt;img src="https://api.scorecard.dev/projects/github.com/meshery/meshery/badge" /&gt;&lt;/a&gt; &lt;a href="https://trendshift.io/repositories/888" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/888" alt="meshery%2Fmeshery | Trendshift" style="width: 150px;" width="150px" /&gt;&lt;/a&gt; 
 &lt;!-- &lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fmeshery%2Fmeshery?ref=badge_shield" alt="License Scan Report"&gt;
  &lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fmeshery%2Fmeshery.svg?type=shield"/&gt;&lt;/a&gt;  
  --&gt; &lt;/p&gt; 
&lt;h5&gt;&lt;p align="center"&gt;&lt;i&gt;If you like Meshery, please &lt;a href="https://github.com/meshery/meshery/stargazers"&gt;★&lt;/a&gt; this repository to show your support! 🤩&lt;/i&gt;&lt;/p&gt;&lt;/h5&gt; 
&lt;p align="center"&gt; MESHERY IS A CLOUD NATIVE COMPUTING FOUNDATION PROJECT &lt;/p&gt; 
&lt;div align="center" width="100%"&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/cncf-white.svg#gh-dark-mode-only" width="30%" align="center" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/cncf-black.svg#gh-light-mode-only" width="30%" align="center" /&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; A self-service engineering platform, &lt;a href="https://meshery.io"&gt;Meshery&lt;/a&gt;, is the open source, cloud native manager that enables the design and management of all Kubernetes-based infrastructure and applications (multi-cloud). Among other features, As an extensible platform, Meshery offers visual and collaborative GitOps, freeing you from the chains of YAML while managing Kubernetes multi-cluster deployments. &lt;/p&gt; 
&lt;br /&gt; 
&lt;div align="center" width="100%"&gt; 
 &lt;a href="https://www.youtube.com/watch?v=034nVaQUyME&amp;amp;list=PL3A-A6hPO2IO_yzN83wSJJUNQActzCJvO&amp;amp;index=9"&gt;&lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-dashboard-hero-image.png" width="800px" /&gt;&lt;/a&gt; 
 &lt;br /&gt;Try Meshery in your browser using the 
 &lt;a href="https://play.meshery.io"&gt;Cloud Native Playground&lt;/a&gt; (
 &lt;a href="https://www.youtube.com/watch?v=034nVaQUyME&amp;amp;list=PL3A-A6hPO2IO_yzN83wSJJUNQActzCJvO&amp;amp;index=9"&gt;teaser video&lt;/a&gt;) 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h4 align="center"&gt;Open Meshery extension, Kanvas, in your browser: https://kanvas.new&lt;/h4&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;!--
- [Functionality](#functionality)
  - [Meshery Architecture](#meshery-architecture)
  - [Join the Meshery community!](#join-the-meshery-community)
  - [Contributing](#contributing)
    - [Stargazers](#stargazers)
    - [License](#license)
--&gt; 
&lt;!-- &lt;p style="clear:both;"&gt;&amp;nbsp;&lt;/p&gt;
&lt;a href="https://meshery.io"&gt;&lt;picture&gt;
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-light-text-side.svg"&gt;
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg"&gt;
  &lt;img alt="Meshery - the Cloud Native Manager" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg" align="left" width="45%"&gt;
  &lt;/picture&gt;&lt;/a&gt; 
&lt;a href="https://meshery.io"&gt;
&lt;h3 style="margin:auto;"&gt;&lt;br /&gt;&lt;br /&gt;
  &lt;a href="https://docs.google.com/presentation/d/14kxjwYSJ_FyE3K_6CDEd6oq2kqwn0OSE8RDJ4H-KlKU/edit?usp=sharing"&gt;&lt;center&gt;&lt;i&gt;Project Overview Presentation&lt;/i&gt;&lt;/center&gt;&lt;/a&gt;
  &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;/h3&gt; --&gt; 
&lt;p style="clear:both;"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;Functionality&lt;/h1&gt; 
&lt;h2&gt;Infrastructure Lifecycle Management&lt;/h2&gt; 
&lt;p&gt;Meshery manages the configuration, deployment, and operation of your Cloud services and Kubernetes clusters while supporting hundreds of different types of cloud native infrastructure integrations. Meshery supports &lt;a href="https://meshery.io/integrations"&gt;300+ integrations&lt;/a&gt;.&lt;/p&gt; 
&lt;!--
&lt;a href="https://www.youtube.com/watch?v=034nVaQUyME"&gt;&lt;img alt="Meshery cloud native management" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshmap.gif"  style="margin-left:10px; margin-bottom:10px;" width="100%" align="center" /&gt;&lt;/a&gt;
&lt;br /&gt;&lt;br /&gt;--&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/cloud-native-integrations.png"&gt;&lt;img alt="Meshery Integrations" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/cloud-native-integrations.png" style="margin-right:10px;margin-bottom:10px;" width="100%" align="center" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Find infrastructure configuration patterns in Meshery's &lt;a href="https://meshery.io/catalog"&gt;catalog of curated design templates&lt;/a&gt; filled with configuration best practices.&lt;/p&gt; 
&lt;h3&gt;Multiple Kubernetes Clusters and Multiple Clouds&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://meshery.io/assets/images/screens/multi-cluster-management.gif" width="50%" alt="Multi-cluster Kubernetes Manager" loading="lazy" align="center" /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;Meshery provides a single pane of glass to manage multiple Kubernetes clusters across any infrastructure, including various cloud providers. Meshery enables consistent configuration, operation, and observability across your entire Kubernetes landscape.&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;h4&gt;Dry-run your deployments&lt;/h4&gt;&lt;/summary&gt; Meshery leverages Kubernetes' built-in dry-run capabilities to allow you to simulate deployments without actually applying the changes to your cluster. This enables you to: 
 &lt;ul&gt; 
  &lt;li&gt;Validate configurations: Ensure your deployment specifications (e.g., YAML manifests, Helm charts, Meshery Designs) are syntactically correct and will be accepted by the Kubernetes API server. &amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Identify potential issues: Detect errors in your configurations, such as invalid resource definitions, missing fields, or API version mismatches, before they impact your live environment.&lt;/li&gt; 
  &lt;li&gt;Preview changes: Understand the objects that Kubernetes would create or modify during a real deployment.&lt;/li&gt; 
  &lt;li&gt;Integrate with CI/CD: Incorporate dry-run as a step in your continuous integration and continuous delivery pipelines to automate pre-deployment checks and prevent faulty deployments.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;By providing this dry-run functionality, Meshery helps you increase the reliability and stability of your Kubernetes deployments by catching potential problems early in the development and deployment process.&lt;/p&gt; 
 &lt;!-- 
Assess your cloud native infrastructure configuration against deployment and operational best practices with Meshery's configuration validator. Manage your workloads with confidence. Check your Kubernetes configuration for anti-patterns and avoid common pitfalls. --&gt; 
&lt;/details&gt; 
&lt;h3&gt;Visually and collaboratively manage your infrastructure&lt;/h3&gt; 
&lt;p&gt;Using a GitOps-centric approach, visually and collaboratively design and manage your infrastructure and microservices. Meshery intelligently infers the manner in which each resource &lt;a href="https://docs.meshery.io/concepts/logical/relationships"&gt;interrelates&lt;/a&gt; with each other. Meshery supports a broad variety of built-in relationships between components, which you can use to create your own custom relationships.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/edge_mount_relationship_pod_persistent_volume.svg?sanitize=true" width="50%" alt="Multi-cluster Kubernetes Manager" align="center" /&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;img alt="OPA Logo" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/opa-logo.svg?sanitize=true" style="margin-right:10px;" width="25px" align="left" /&gt;&lt;h4&gt;Context-Aware Policies For Applications&lt;/h4&gt;&lt;/summary&gt; 
 &lt;img alt="Meshery and Open Policy Agent Integration" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-policies-2.png" style="margin:auto;text-align:center" width="50%" /&gt; 
 &lt;p&gt;Leverage built-in relationships to enforce configuration best practices consistently from code to Kubernetes. Customize Configure your infrastructure with confidence without needing to know or write Open Policy Agent's Rego query language.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Workspaces: Your team's Google Drive for cloud native projects&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/workspace.gif" width="50%" alt="Multi-cluster Kubernetes Manager" loading="lazy" /&gt; 
&lt;p&gt;Workspaces let you organize your work and serve as the central point of collaboration for you and your teams and point of access control to Environments and their resources.&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;h4&gt;Manage your connections with Environments&lt;/h4&gt;&lt;/summary&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/environments.gif" width="50%" alt="Multi-cluster Kubernetes Manager" loading="lazy" /&gt; 
 &lt;p&gt;&lt;a href="https://docs.meshery.io/concepts/logical/environments"&gt;Environments&lt;/a&gt; make it easier for you to manage, share, and work with a collection of resources as a group, instead of dealing with all your Connections and Credentials on an individual basis.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;h4&gt;See changes to your infra before you merge&lt;/h4&gt;&lt;/summary&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-snapshot.png" width="50%" alt="Multi-cluster Kubernetes Manager" loading="lazy" align="center" /&gt; 
 &lt;p&gt;Get snapshots of your infrastructure directly in your PRs. Preview your deployment, view changes pull request-to-pull request and get infrastructure snapshots within your PRs by connecting Kanvas to your GitHub repositories.&lt;/p&gt; 
&lt;/details&gt; 
&lt;!-- &lt;h3&gt;Operate with configuration best practices&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Assess your configurations against deployment and operational best practices with Meshery's configuration validator.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;h3&gt;Control all of your infrastructure with mesheryctl&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Whether managing multiple Meshery deployments, importing designs, discoverying Kubernetes clusters, do so with ease using Meshery CLI in your terminal.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt; --&gt; 
&lt;h2&gt;Platform Engineering with Meshery's Extension Points&lt;/h2&gt; 
&lt;p&gt;Extend Meshery as your self-service engineering platform by taking advantage of its &lt;a href="https://docs.meshery.io/extensibility"&gt;vast set of extensibility features&lt;/a&gt;, including gRPC adapters, hot-loadable Reactjs packages and Golang plugins, subscriptions on NATS topics, consumable &lt;em&gt;and&lt;/em&gt; extendable API interfaces via REST and GraphQL.The great number of extension points in Meshery make it ideal as the foundation of your internal developer platform.&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;h4&gt;Access the Cloud Native Patterns for Kubernetes&lt;/h4&gt;&lt;/summary&gt; 
 &lt;p&gt;Design and manage all of your cloud native infrastructure using the design configurator in Meshery or start from a template using the patterns from the &lt;a href="https://meshery.io/catalog"&gt;catalog&lt;/a&gt;. &lt;/p&gt;
&lt;/details&gt; 
&lt;p&gt;Meshery offers robust capabilities for managing multiple tenants within a shared Kubernetes infrastructure. Meshery provides the tools and integrations necessary to create a secure, isolated, and manageable multi-tenant environments, allowing multiple teams or organizations with granular control over their role-based access controls.&lt;/p&gt; 
&lt;p&gt;Meshery's "multi-player" functionality refers to its collaborative features that enable multiple users to interact with and manage cloud native infrastructure simultaneously. This is primarily facilitated through Kanvas, a Meshery extension visual designer and management interface.&lt;/p&gt; 
&lt;h2&gt;Performance Management&lt;/h2&gt; 
&lt;p&gt;Meshery offers load generation and performance characterization to help you assess and optimize the performance of your applications and infrastructure.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/performance-metrics.gif" alt="Multi-cluster Kubernetes Manager" width="50%" /&gt; 
&lt;p&gt;Create and reuse performance profiles for consistent characterization of the configuration of your infrastructure in context of how it performs.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h4&gt; Manage the performance of your infrastructure and its workloads&lt;/h4&gt;&lt;/summary&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-performance.gif" /&gt; 
 &lt;p&gt;Baseline and track your cloud native performance from release to release.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use performance profiles to track the historical performance of your workloads.&lt;/li&gt; 
  &lt;li&gt;Track your application performance from version to version.&lt;/li&gt; 
  &lt;li&gt;Understand behavioral differences between cloud native network functions.&lt;/li&gt; 
  &lt;li&gt;Compare performance across infrastructure deployments.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h4&gt;Load Generation and Microservice Performance Characteristization&lt;/h4&gt;&lt;/summary&gt; 
 &lt;picture align="left"&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/layer5io/layer5/master/src/assets/images/service-mesh-performance/stacked/smp-light-text.svg" width="18%" align="left" style="margin-left:10px;" /&gt; 
  &lt;img alt="Shows an illustrated light mode meshery logo in light color mode and a dark mode meshery logo dark color mode." src="https://raw.githubusercontent.com/layer5io/layer5/master/src/assets/images/service-mesh-performance/stacked/smp-light-text.svg?sanitize=true" width="18%" align="left" style="margin-left:10px;" /&gt; 
 &lt;/picture&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Multiple Load Generators:&lt;/strong&gt; Meshery supports various load generators, including Fortio, Wrk2, and Nighthawk, allowing users to choose the tool that best suits your needs.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Configurable Performance Profiles:&lt;/strong&gt; Meshery provides a highly configurable set of load profiles with tunable facets, enabling users to generate TCP, gRPC, and HTTP load. You can customize parameters such as duration, concurrent threads, concurrent generators, and load generator type.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Statistical Analysis:&lt;/strong&gt; Meshery performs statistical analysis on the results of performance tests, presenting data in the form of histograms with latency buckets. Understand the distribution of response times and identify potential bottlenecks.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Comparison of Test Results:&lt;/strong&gt; Meshery enables you to compare the difference in request performance (latency and throughput) between independent performance tests. Save your load test configurations as Performance Profiles, making it easy to rerun tests with the same settings and track performance variations over time.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Kubernetes Cluster and Workload Metrics:&lt;/strong&gt; - Meshery connects to one or more Prometheus servers to gather both cluster and application metrics. Meshery also integrates with Grafana, allowing you to import your existing dashboards and visualize performance data.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;In an effort to produce infrastructure agnostic tooling, Meshery uses the &lt;a href="https://smp-spec.io"&gt;Cloud Native Performance&lt;/a&gt; specification as a common format to capture and measure your infrastructure's performance against a universal cloud native performance index. Meshery participates in advancing cloud native infrastructure adoption through the standardization of APIs. Meshery enables you to measure the value provided by Docker, Kubernetes, or other cloud native infrastructure in the context of the overhead incurred.&lt;/p&gt; 
 &lt;!-- 

SCREENSHOT / GIF NEEDED HERE

--&gt; 
&lt;/details&gt; 
&lt;h2&gt;&lt;a name="running"&gt;&lt;/a&gt;Get Started with Meshery&lt;/h2&gt; 
&lt;p style="clear:both;"&gt;&lt;/p&gt; 
&lt;!-- &lt;img alt="Control Kubernetes and your workloads with mesheryctl" src=".github/assets/images/readme/mesheryctl.png"  style="margin-left:10px; margin-bottom:10px;" width="50%" align="right" /&gt; --&gt; 
&lt;h3&gt;Using `mesheryctl`&lt;/h3&gt; 
&lt;p&gt;Meshery runs as a set of containers inside or outside of your Kubernetes clusters.&lt;/p&gt; 
&lt;pre&gt;curl -L https://meshery.io/install | bash -&lt;/pre&gt; 
&lt;p&gt;Use the &lt;a href="https://docs.meshery.io/installation/quick-start"&gt;quick start&lt;/a&gt; guide.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;See all supported platforms&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;See the &lt;a href="https://meshery.io/#getting-started"&gt;getting started&lt;/a&gt; section to quickly deploy Meshery on any of these supported platforms:&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Platform&lt;/th&gt; 
    &lt;th align="center"&gt;Supported?&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/docker.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/docker"&gt;Docker&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/docker.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/docker"&gt;Docker - Docker App&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/docker.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/docker/docker-extensiongit"&gt;Docker - Docker Extension&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/kubernetes.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes"&gt;Kubernetes&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/aks.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/aks"&gt;Kubernetes - AKS&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/docker.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#mac-or-linux"&gt;Kubernetes - Docker Desktop&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/eks.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/eks"&gt;Kubernetes - EKS&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/gke.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/gke"&gt;Kubernetes - GKE&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/helm.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/helm"&gt;Kubernetes - Helm&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/kind.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/kind"&gt;Kubernetes - kind&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/minikube.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/minikube"&gt;Kubernetes - Minikube&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/openshift.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes"&gt;Kubernetes - OpenShift&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/kubernetes.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes"&gt;Kubernetes - Rancher&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/linux.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#mac-or-linux"&gt;Linux&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/apple.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#mac-or-linux"&gt;Mac&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/homebrew.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#mac-or-linux"&gt;Mac - Homebrew&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/wsl2.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#windows"&gt;Windows&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/wsl2.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#windows"&gt;Scoop&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/wsl2.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/platforms/windows#wsl2"&gt;WSL2&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/raspberry-pi.png" width="20" height="20" vertical-align="middle" /&gt; Raspberry Pi&lt;/td&gt; 
    &lt;td align="center"&gt;In Progress&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;&lt;a href="https://docs.meshery.io/installation"&gt;Meshery documentation&lt;/a&gt; offers thorough installation guides for your platform of choice.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p style="clear:both;"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;h2&gt;Join the Meshery community&lt;/h2&gt; 
&lt;p&gt;&lt;a name="contributing"&gt;&lt;/a&gt;&lt;a name="community"&gt;&lt;/a&gt; Our projects are community-built and welcome collaboration. 👍 Be sure to see the &lt;a href="https://meshery.io/community"&gt;Contributor Journey Map&lt;/a&gt; and &lt;a href="https://meshery.io/community#handbook"&gt;Community Handbook&lt;/a&gt; for a tour of resources available to you and the &lt;a href="https://meshery.io/community/#handbook/repository-overview"&gt;Repository Overview&lt;/a&gt; for a cursory description of repository by technology and programming language. Jump into community &lt;a href="https://slack.meshery.io"&gt;Slack&lt;/a&gt; or &lt;a href="https://meshery.io/community#discussion-forums"&gt;discussion forum&lt;/a&gt; to participate.&lt;/p&gt; 
&lt;p style="clear:both;"&gt; &lt;/p&gt;
&lt;h3&gt;Find your MeshMate&lt;/h3&gt; 
&lt;p&gt;MeshMates are experienced Meshery community members, who will help you learn your way around, discover live projects, and expand your community network. Connect with a MeshMate today!&lt;/p&gt; 
&lt;p&gt;Learn more about the &lt;a href="https://meshery.io/community#meshmates"&gt;MeshMates&lt;/a&gt; program. &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;div style="display: flex; justify-content: center; align-items:center;"&gt; 
 &lt;div&gt; 
  &lt;a href="https://meshery.io/community"&gt;&lt;img alt="Meshery Community" src="https://docs.meshery.io/assets/img/readme/community.png" width="140px" style="margin-right:36px; margin-bottom:7px;" align="left" /&gt;&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;div style="width:60%; padding-left: 16px; padding-right: 16px"&gt; 
  &lt;p&gt; ✔️ &lt;em&gt;&lt;strong&gt;Join&lt;/strong&gt;&lt;/em&gt; any or all of the weekly meetings on &lt;a href="https://meshery.io/calendar"&gt;community calendar&lt;/a&gt;.&lt;br /&gt; ✔️ &lt;em&gt;&lt;strong&gt;Watch&lt;/strong&gt;&lt;/em&gt; community &lt;a href="https://www.youtube.com/@mesheryio?sub_confirmation=1"&gt;meeting recordings&lt;/a&gt;.&lt;br /&gt; ✔️ &lt;em&gt;&lt;strong&gt;Fill-in&lt;/strong&gt;&lt;/em&gt; a &lt;a href="https://meshery.io/newcomers"&gt;member form&lt;/a&gt; and gain access to community resources. &lt;br /&gt; ✔️ &lt;em&gt;&lt;strong&gt;Discuss&lt;/strong&gt;&lt;/em&gt; in the &lt;a href="https://meshery.io/community#discussion-forums"&gt;community forum&lt;/a&gt;.&lt;br /&gt; ✔️ &lt;em&gt;&lt;strong&gt;Explore more&lt;/strong&gt;&lt;/em&gt; in the &lt;a href="https://meshery.io/community#handbook"&gt;community handbook&lt;/a&gt;.&lt;br /&gt; &lt;/p&gt; 
 &lt;/div&gt;
 &lt;br /&gt;
 &lt;br /&gt; 
 &lt;div&gt; 
  &lt;a href="https://slack.meshery.io"&gt; 
   &lt;picture&gt; 
    &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/slack.svg" width="110px" /&gt; 
    &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/slack.svg" width="110px" /&gt; 
    &lt;img alt="Shows an illustrated light mode meshery logo in light color mode and a dark mode meshery logo dark color mode." src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/slack.svg?sanitize=true" width="110px" align="left" /&gt; 
   &lt;/picture&gt; &lt;/a&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;p align="left"&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;Not sure where to start?&lt;/i&gt; Grab an open issue with the &lt;a href="https://github.com/issues?q=is%3Aopen%20is%3Aissue%20archived%3Afalse%20(org%3Ameshery%20OR%20org%3Aservice-mesh-performance%20OR%20org%3Aservice-mesh-patterns%20OR%20org%3Ameshery-extensions)%20label%3A%22help%20wanted%22%20"&gt;help-wanted label&lt;/a&gt;. &lt;/p&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please do! We're a warm and welcoming community of open source contributors. Please join. All types of contributions are welcome. Be sure to read the &lt;a href="https://docs.meshery.io/project/contributing"&gt;Contributor Guides&lt;/a&gt; for a tour of resources available to you and how to get started.&lt;/p&gt; 
&lt;!-- &lt;a href="https://youtu.be/MXQV-i-Hkf8"&gt;&lt;img alt="Deploying Linkerd with Meshery" src="https://docs.meshery.io/assets/img/readme/deploying-linkerd-with-meshery.png" width="100%" align="center" /&gt;&lt;/a&gt; --&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;h3&gt;Stargazers&lt;/h3&gt; 
&lt;p align="center"&gt; &lt;i&gt;If you like Meshery, please &lt;a href="https://raw.githubusercontent.com/meshery/stargazers"&gt;★&lt;/a&gt; star this repository to show your support! 🤩&lt;/i&gt; &lt;br /&gt; &lt;a href="https://raw.githubusercontent.com/meshery/stargazers"&gt; &lt;img align="center" src="https://api.star-history.com/svg?repos=meshery/meshery&amp;amp;type=Date" /&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;This repository and site are available as open-source under the terms of the &lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Software Bill of Materials (SBOM)&lt;/h4&gt; 
&lt;p&gt;Meshery's &lt;a href="https://github.com/meshery/meshery/actions/workflows/bom.yaml"&gt;Software Bill of Materials&lt;/a&gt; (SBOM) is available as a build artifact.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vercel/next.js</title>
      <link>https://github.com/vercel/next.js</link>
      <description>&lt;p&gt;The React Framework&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://nextjs.org"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://assets.vercel.com/image/upload/v1662130559/nextjs/Icon_dark_background.png" /&gt; 
   &lt;img alt="Next.js logo" src="https://assets.vercel.com/image/upload/v1662130559/nextjs/Icon_light_background.png" height="128" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
 &lt;h1&gt;Next.js&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://vercel.com"&gt;&lt;img alt="Vercel logo" src="https://img.shields.io/badge/MADE%20BY%20Vercel-000000.svg?style=for-the-badge&amp;amp;logo=Vercel&amp;amp;labelColor=000" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/next"&gt;&lt;img alt="NPM version" src="https://img.shields.io/npm/v/next.svg?style=for-the-badge&amp;amp;labelColor=000000" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vercel/next.js/raw/canary/license.md"&gt;&lt;img alt="License" src="https://img.shields.io/npm/l/next.svg?style=for-the-badge&amp;amp;labelColor=000000" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vercel/next.js/discussions"&gt;&lt;img alt="Join the community on GitHub" src="https://img.shields.io/badge/Join%20the%20community-blueviolet.svg?style=for-the-badge&amp;amp;logo=Next.js&amp;amp;labelColor=000000&amp;amp;logoWidth=20" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Used by some of the world's largest companies, Next.js enables you to create full-stack web applications by extending the latest React features, and integrating powerful Rust-based JavaScript tooling for the fastest builds.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visit our &lt;a href="https://nextjs.org/learn"&gt;Learn Next.js&lt;/a&gt; course to get started with Next.js.&lt;/li&gt; 
 &lt;li&gt;Visit the &lt;a href="https://nextjs.org/showcase"&gt;Next.js Showcase&lt;/a&gt; to see more sites built with Next.js.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://nextjs.org/docs"&gt;https://nextjs.org/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Next.js community can be found on &lt;a href="https://github.com/vercel/next.js/discussions"&gt;GitHub Discussions&lt;/a&gt; where you can ask questions, voice ideas, and share your projects with other people.&lt;/p&gt; 
&lt;p&gt;To chat with other community members you can join the Next.js &lt;a href="https://nextjs.org/discord"&gt;Discord&lt;/a&gt; server.&lt;/p&gt; 
&lt;p&gt;Do note that our &lt;a href="https://github.com/vercel/next.js/raw/canary/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; applies to all Next.js community channels. Users are &lt;strong&gt;highly encouraged&lt;/strong&gt; to read and adhere to it to avoid repercussions.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions to Next.js are welcome and highly appreciated. However, before you jump right into it, we would like you to review our &lt;a href="https://raw.githubusercontent.com/vercel/next.js/canary/contributing.md"&gt;Contribution Guidelines&lt;/a&gt; to make sure you have a smooth experience contributing to Next.js.&lt;/p&gt; 
&lt;h3&gt;Good First Issues:&lt;/h3&gt; 
&lt;p&gt;We have a list of &lt;strong&gt;&lt;a href="https://github.com/vercel/next.js/labels/%22good%20first%20issue%22"&gt;good first issues&lt;/a&gt;&lt;/strong&gt; that contain bugs that have a relatively limited scope. This is a great place for newcomers and beginners alike to get started, gain experience, and get familiar with our contribution process.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you believe you have found a security vulnerability in Next.js, we encourage you to &lt;strong&gt;&lt;em&gt;responsibly disclose this and NOT open a public issue&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;To participate in our Open Source Software Bug Bounty program, please email &lt;a href="mailto:responsible.disclosure@vercel.com"&gt;responsible.disclosure@vercel.com&lt;/a&gt;. We will add you to the program and provide further instructions for submitting your report.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>facebook/react</title>
      <link>https://github.com/facebook/react</link>
      <description>&lt;p&gt;The library for web and native user interfaces.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href="https://react.dev/"&gt;React&lt;/a&gt; · &lt;a href="https://github.com/facebook/react/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="GitHub license" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/react"&gt;&lt;img src="https://img.shields.io/npm/v/react.svg?style=flat" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml"&gt;&lt;img src="https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg?sanitize=true" alt="(Runtime) Build and Test" /&gt;&lt;/a&gt; &lt;a href="https://github.com/facebook/react/actions/workflows/compiler_typescript.yml"&gt;&lt;img src="https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main" alt="(Compiler) TypeScript" /&gt;&lt;/a&gt; &lt;a href="https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true" alt="PRs Welcome" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;React is a JavaScript library for building user interfaces.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative:&lt;/strong&gt; React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Component-Based:&lt;/strong&gt; Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Learn Once, Write Anywhere:&lt;/strong&gt; We don't make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using &lt;a href="https://nodejs.org/en"&gt;Node&lt;/a&gt; and power mobile apps using &lt;a href="https://reactnative.dev/"&gt;React Native&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://react.dev/learn"&gt;Learn how to use React in your project&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;React has been designed for gradual adoption from the start, and &lt;strong&gt;you can use as little or as much React as you need&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;a href="https://react.dev/learn"&gt;Quick Start&lt;/a&gt; to get a taste of React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/add-react-to-an-existing-project"&gt;Add React to an Existing Project&lt;/a&gt; to use as little or as much React as you need.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/start-a-new-react-project"&gt;Create a New React App&lt;/a&gt; if you're looking for a powerful JavaScript toolchain.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find the React documentation &lt;a href="https://react.dev/"&gt;on the website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href="https://react.dev/learn"&gt;Getting Started&lt;/a&gt; page for a quick overview.&lt;/p&gt; 
&lt;p&gt;The documentation is divided into several sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/tutorial-tic-tac-toe"&gt;Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/thinking-in-react"&gt;Thinking in React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/describing-the-ui"&gt;Describing the UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/adding-interactivity"&gt;Adding Interactivity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/managing-state"&gt;Managing State&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/escape-hatches"&gt;Advanced Guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/reference/react"&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/community"&gt;Where to Get Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://legacy.reactjs.org/docs/how-to-contribute.html"&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can improve it by sending pull requests to &lt;a href="https://github.com/reactjs/react.dev"&gt;this repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;We have several examples &lt;a href="https://react.dev/"&gt;on the website&lt;/a&gt;. Here is the first one to get you started:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { createRoot } from 'react-dom/client';

function HelloMessage({ name }) {
  return &amp;lt;div&amp;gt;Hello {name}&amp;lt;/div&amp;gt;;
}

const root = createRoot(document.getElementById('container'));
root.render(&amp;lt;HelloMessage name="Taylor" /&amp;gt;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example will render "Hello Taylor" into a container on the page.&lt;/p&gt; 
&lt;p&gt;You'll notice that we used an HTML-like syntax; &lt;a href="https://react.dev/learn#writing-markup-with-jsx"&gt;we call it JSX&lt;/a&gt;. JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://code.fb.com/codeofconduct"&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read &lt;a href="https://code.fb.com/codeofconduct"&gt;the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://legacy.reactjs.org/docs/how-to-contribute.html"&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href="https://legacy.reactjs.org/docs/how-to-contribute.html"&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/facebook/react/labels/good%20first%20issue"&gt;Good First Issues&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;To help you get your feet wet and get you familiar with our contribution process, we have a list of &lt;a href="https://github.com/facebook/react/labels/good%20first%20issue"&gt;good first issues&lt;/a&gt; that contain bugs that have a relatively limited scope. This is a great place to get started.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;React is &lt;a href="https://raw.githubusercontent.com/facebook/react/main/LICENSE"&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>eslint/eslint</title>
      <link>https://github.com/eslint/eslint</link>
      <description>&lt;p&gt;Find and fix problems in your JavaScript code.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://www.npmjs.com/package/eslint"&gt;&lt;img src="https://img.shields.io/npm/v/eslint.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/eslint"&gt;&lt;img src="https://img.shields.io/npm/dm/eslint.svg?sanitize=true" alt="Downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eslint/eslint/actions"&gt;&lt;img src="https://github.com/eslint/eslint/workflows/CI/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://opencollective.com/eslint"&gt;&lt;img src="https://img.shields.io/opencollective/backers/eslint" alt="Open Collective Backers" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/eslint"&gt;&lt;img src="https://img.shields.io/opencollective/sponsors/eslint" alt="Open Collective Sponsors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;ESLint&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://eslint.org"&gt;Website&lt;/a&gt; | &lt;a href="https://eslint.org/docs/latest/use/configure"&gt;Configure ESLint&lt;/a&gt; | &lt;a href="https://eslint.org/docs/rules/"&gt;Rules&lt;/a&gt; | &lt;a href="https://eslint.org/docs/latest/contribute"&gt;Contribute to ESLint&lt;/a&gt; | &lt;a href="https://eslint.org/docs/latest/contribute/report-bugs"&gt;Report Bugs&lt;/a&gt; | &lt;a href="https://eslint.org/conduct"&gt;Code of Conduct&lt;/a&gt; | &lt;a href="https://x.com/geteslint"&gt;X&lt;/a&gt; | &lt;a href="https://eslint.org/chat"&gt;Discord&lt;/a&gt; | &lt;a href="https://fosstodon.org/@eslint"&gt;Mastodon&lt;/a&gt; | &lt;a href="https://bsky.app/profile/eslint.org"&gt;Bluesky&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code. In many ways, it is similar to JSLint and JSHint with a few exceptions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ESLint uses &lt;a href="https://github.com/eslint/js/tree/main/packages/espree"&gt;Espree&lt;/a&gt; for JavaScript parsing.&lt;/li&gt; 
 &lt;li&gt;ESLint uses an AST to evaluate patterns in code.&lt;/li&gt; 
 &lt;li&gt;ESLint is completely pluggable, every single rule is a plugin and you can add more at runtime.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eslint/eslint/main/#installation-and-usage"&gt;Installation and Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eslint/eslint/main/#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eslint/eslint/main/#version-support"&gt;Version Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eslint/eslint/main/#code-of-conduct"&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eslint/eslint/main/#filing-issues"&gt;Filing Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eslint/eslint/main/#frequently-asked-questions"&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eslint/eslint/main/#releases"&gt;Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eslint/eslint/main/#security-policy"&gt;Security Policy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eslint/eslint/main/#semantic-versioning-policy"&gt;Semantic Versioning Policy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eslint/eslint/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eslint/eslint/main/#team"&gt;Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eslint/eslint/main/#sponsors"&gt;Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eslint/eslint/main/#technology-sponsors"&gt;Technology Sponsors&lt;/a&gt; 
  &lt;!-- markdownlint-disable-line MD051 --&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Installation and Usage&lt;/h2&gt; 
&lt;p&gt;Prerequisites: &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; (&lt;code&gt;^18.18.0&lt;/code&gt;, &lt;code&gt;^20.9.0&lt;/code&gt;, or &lt;code&gt;&amp;gt;=21.1.0&lt;/code&gt;) built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.)&lt;/p&gt; 
&lt;p&gt;You can install and configure ESLint using this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm init @eslint/config@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After that, you can run ESLint on any file or directory like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npx eslint yourfile.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;pnpm Installation&lt;/h3&gt; 
&lt;p&gt;To use ESLint with pnpm, we recommend setting up a &lt;code&gt;.npmrc&lt;/code&gt; file with at least the following settings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;auto-install-peers=true
node-linker=hoisted
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This ensures that pnpm installs dependencies in a way that is more compatible with npm and is less likely to produce errors.&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;You can configure rules in your &lt;code&gt;eslint.config.js&lt;/code&gt; files as in this example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { defineConfig } from "eslint/config";

export default defineConfig([
	{
		files: ["**/*.js", "**/*.cjs", "**/*.mjs"],
		rules: {
			"prefer-const": "warn",
			"no-constant-binary-expression": "error",
		},
	},
]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The names &lt;code&gt;"prefer-const"&lt;/code&gt; and &lt;code&gt;"no-constant-binary-expression"&lt;/code&gt; are the names of &lt;a href="https://eslint.org/docs/rules"&gt;rules&lt;/a&gt; in ESLint. The first value is the error level of the rule and can be one of these values:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;"off"&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; - turn the rule off&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;"warn"&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; - turn the rule on as a warning (doesn't affect exit code)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;"error"&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt; - turn the rule on as an error (exit code will be 1)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The three error levels allow you fine-grained control over how ESLint applies rules (for more configuration options and details, see the &lt;a href="https://eslint.org/docs/latest/use/configure"&gt;configuration docs&lt;/a&gt;).&lt;/p&gt; 
&lt;h2&gt;Version Support&lt;/h2&gt; 
&lt;p&gt;The ESLint team provides ongoing support for the current version and six months of limited support for the previous version. Limited support includes critical bug fixes, security issues, and compatibility issues only.&lt;/p&gt; 
&lt;p&gt;ESLint offers commercial support for both current and previous versions through our partners, &lt;a href="https://tidelift.com/funding/github/npm/eslint"&gt;Tidelift&lt;/a&gt; and &lt;a href="https://www.herodevs.com/support/eslint-nes?utm_source=ESLintWebsite&amp;amp;utm_medium=ESLintWebsite&amp;amp;utm_campaign=ESLintNES&amp;amp;utm_id=ESLintNES"&gt;HeroDevs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://eslint.org/version-support"&gt;Version Support&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;ESLint adheres to the &lt;a href="https://eslint.org/conduct"&gt;OpenJS Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Filing Issues&lt;/h2&gt; 
&lt;p&gt;Before filing an issue, please be sure to read the guidelines for what you're reporting:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://eslint.org/docs/latest/contribute/report-bugs"&gt;Bug Report&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://eslint.org/docs/latest/contribute/propose-new-rule"&gt;Propose a New Rule&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://eslint.org/docs/latest/contribute/propose-rule-change"&gt;Proposing a Rule Change&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://eslint.org/docs/latest/contribute/request-change"&gt;Request a Change&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;h3&gt;Does ESLint support JSX?&lt;/h3&gt; 
&lt;p&gt;Yes, ESLint natively supports parsing JSX syntax (this must be enabled in &lt;a href="https://eslint.org/docs/latest/use/configure"&gt;configuration&lt;/a&gt;). Please note that supporting JSX syntax &lt;em&gt;is not&lt;/em&gt; the same as supporting React. React applies specific semantics to JSX syntax that ESLint doesn't recognize. We recommend using &lt;a href="https://www.npmjs.com/package/eslint-plugin-react"&gt;eslint-plugin-react&lt;/a&gt; if you are using React and want React semantics.&lt;/p&gt; 
&lt;h3&gt;Does Prettier replace ESLint?&lt;/h3&gt; 
&lt;p&gt;No, ESLint and Prettier have different jobs: ESLint is a linter (looking for problematic patterns) and Prettier is a code formatter. Using both tools is common, refer to &lt;a href="https://prettier.io/docs/en/install#eslint-and-other-linters"&gt;Prettier's documentation&lt;/a&gt; to learn how to configure them to work well with each other.&lt;/p&gt; 
&lt;h3&gt;What ECMAScript versions does ESLint support?&lt;/h3&gt; 
&lt;p&gt;ESLint has full support for ECMAScript 3, 5, and every year from 2015 up until the most recent stage 4 specification (the default). You can set your desired ECMAScript syntax and other settings (like global variables) through &lt;a href="https://eslint.org/docs/latest/use/configure"&gt;configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;What about experimental features?&lt;/h3&gt; 
&lt;p&gt;ESLint's parser only officially supports the latest final ECMAScript standard. We will make changes to core rules in order to avoid crashes on stage 3 ECMAScript syntax proposals (as long as they are implemented using the correct experimental ESTree syntax). We may make changes to core rules to better work with language extensions (such as JSX, Flow, and TypeScript) on a case-by-case basis.&lt;/p&gt; 
&lt;p&gt;In other cases (including if rules need to warn on more or fewer cases due to new syntax, rather than just not crashing), we recommend you use other parsers and/or rule plugins. If you are using Babel, you can use &lt;a href="https://www.npmjs.com/package/@babel/eslint-parser"&gt;@babel/eslint-parser&lt;/a&gt; and &lt;a href="https://www.npmjs.com/package/@babel/eslint-plugin"&gt;@babel/eslint-plugin&lt;/a&gt; to use any option available in Babel.&lt;/p&gt; 
&lt;p&gt;Once a language feature has been adopted into the ECMAScript standard (stage 4 according to the &lt;a href="https://tc39.github.io/process-document/"&gt;TC39 process&lt;/a&gt;), we will accept issues and pull requests related to the new feature, subject to our &lt;a href="https://eslint.org/docs/latest/contribute"&gt;contributing guidelines&lt;/a&gt;. Until then, please use the appropriate parser and plugin(s) for your experimental feature.&lt;/p&gt; 
&lt;h3&gt;Which Node.js versions does ESLint support?&lt;/h3&gt; 
&lt;p&gt;ESLint updates the supported Node.js versions with each major release of ESLint. At that time, ESLint's supported Node.js versions are updated to be:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The most recent maintenance release of Node.js&lt;/li&gt; 
 &lt;li&gt;The lowest minor version of the Node.js LTS release that includes the features the ESLint team wants to use.&lt;/li&gt; 
 &lt;li&gt;The Node.js Current release&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;ESLint is also expected to work with Node.js versions released after the Node.js Current release.&lt;/p&gt; 
&lt;p&gt;Refer to the &lt;a href="https://eslint.org/docs/latest/use/getting-started#prerequisites"&gt;Quick Start Guide&lt;/a&gt; for the officially supported Node.js versions for a given ESLint release.&lt;/p&gt; 
&lt;h3&gt;Where to ask for help?&lt;/h3&gt; 
&lt;p&gt;Open a &lt;a href="https://github.com/eslint/eslint/discussions"&gt;discussion&lt;/a&gt; or stop by our &lt;a href="https://eslint.org/chat"&gt;Discord server&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Why doesn't ESLint lock dependency versions?&lt;/h3&gt; 
&lt;p&gt;Lock files like &lt;code&gt;package-lock.json&lt;/code&gt; are helpful for deployed applications. They ensure that dependencies are consistent between environments and across deployments.&lt;/p&gt; 
&lt;p&gt;Packages like &lt;code&gt;eslint&lt;/code&gt; that get published to the npm registry do not include lock files. &lt;code&gt;npm install eslint&lt;/code&gt; as a user will respect version constraints in ESLint's &lt;code&gt;package.json&lt;/code&gt;. ESLint and its dependencies will be included in the user's lock file if one exists, but ESLint's own lock file would not be used.&lt;/p&gt; 
&lt;p&gt;We intentionally don't lock dependency versions so that we have the latest compatible dependency versions in development and CI that our users get when installing ESLint in a project.&lt;/p&gt; 
&lt;p&gt;The Twilio blog has a &lt;a href="https://www.twilio.com/blog/lockfiles-nodejs"&gt;deeper dive&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;We have scheduled releases every two weeks on Friday or Saturday. You can follow a &lt;a href="https://github.com/eslint/eslint/issues?q=is%3Aopen+is%3Aissue+label%3Arelease"&gt;release issue&lt;/a&gt; for updates about the scheduling of any particular release.&lt;/p&gt; 
&lt;h2&gt;Security Policy&lt;/h2&gt; 
&lt;p&gt;ESLint takes security seriously. We work hard to ensure that ESLint is safe for everyone and that security issues are addressed quickly and responsibly. Read the full &lt;a href="https://github.com/eslint/.github/raw/master/SECURITY.md"&gt;security policy&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Semantic Versioning Policy&lt;/h2&gt; 
&lt;p&gt;ESLint follows &lt;a href="https://semver.org"&gt;semantic versioning&lt;/a&gt;. However, due to the nature of ESLint as a code quality tool, it's not always clear when a minor or major version bump occurs. To help clarify this for everyone, we've defined the following semantic versioning policy for ESLint:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Patch release (intended to not break your lint build) 
  &lt;ul&gt; 
   &lt;li&gt;A bug fix in a rule that results in ESLint reporting fewer linting errors.&lt;/li&gt; 
   &lt;li&gt;A bug fix to the CLI or core (including formatters).&lt;/li&gt; 
   &lt;li&gt;Improvements to documentation.&lt;/li&gt; 
   &lt;li&gt;Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.&lt;/li&gt; 
   &lt;li&gt;Re-releasing after a failed release (i.e., publishing a release that doesn't work for anyone).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Minor release (might break your lint build) 
  &lt;ul&gt; 
   &lt;li&gt;A bug fix in a rule that results in ESLint reporting more linting errors.&lt;/li&gt; 
   &lt;li&gt;A new rule is created.&lt;/li&gt; 
   &lt;li&gt;A new option to an existing rule that does not result in ESLint reporting more linting errors by default.&lt;/li&gt; 
   &lt;li&gt;A new addition to an existing rule to support a newly-added language feature (within the last 12 months) that will result in ESLint reporting more linting errors by default.&lt;/li&gt; 
   &lt;li&gt;An existing rule is deprecated.&lt;/li&gt; 
   &lt;li&gt;A new CLI capability is created.&lt;/li&gt; 
   &lt;li&gt;New capabilities to the public API are added (new classes, new methods, new arguments to existing methods, etc.).&lt;/li&gt; 
   &lt;li&gt;A new formatter is created.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;eslint:recommended&lt;/code&gt; is updated and will result in strictly fewer linting errors (e.g., rule removals).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Major release (likely to break your lint build) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;eslint:recommended&lt;/code&gt; is updated and may result in new linting errors (e.g., rule additions, most rule option updates).&lt;/li&gt; 
   &lt;li&gt;A new option to an existing rule that results in ESLint reporting more linting errors by default.&lt;/li&gt; 
   &lt;li&gt;An existing formatter is removed.&lt;/li&gt; 
   &lt;li&gt;Part of the public API is removed or changed in an incompatible way. The public API includes: 
    &lt;ul&gt; 
     &lt;li&gt;Rule schemas&lt;/li&gt; 
     &lt;li&gt;Configuration schema&lt;/li&gt; 
     &lt;li&gt;Command-line options&lt;/li&gt; 
     &lt;li&gt;Node.js API&lt;/li&gt; 
     &lt;li&gt;Rule, formatter, parser, plugin APIs&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;According to our policy, any minor update may report more linting errors than the previous release (ex: from a bug fix). As such, we recommend using the tilde (&lt;code&gt;~&lt;/code&gt;) in &lt;code&gt;package.json&lt;/code&gt; e.g. &lt;code&gt;"eslint": "~3.1.0"&lt;/code&gt; to guarantee the results of your builds.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT License&lt;/p&gt; 
&lt;p&gt;Copyright OpenJS Foundation and other contributors, &amp;lt;www.openjsf.org&amp;gt;&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
&lt;h2&gt;Team&lt;/h2&gt; 
&lt;p&gt;These folks keep the project moving and are resources for help.&lt;/p&gt; 
&lt;!-- NOTE: This section is autogenerated. Do not manually edit.--&gt; 
&lt;!--teamstart--&gt; 
&lt;h3&gt;Technical Steering Committee (TSC)&lt;/h3&gt; 
&lt;p&gt;The people who manage releases, review feature requests, and meet regularly to ensure ESLint is properly maintained.&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td align="center" valign="top" width="11%"&gt; &lt;a href="https://github.com/nzakas"&gt; &lt;img src="https://github.com/nzakas.png?s=75" width="75" height="75" alt="Nicholas C. Zakas's Avatar" /&gt;&lt;br /&gt; Nicholas C. Zakas &lt;/a&gt; &lt;/td&gt;
   &lt;td align="center" valign="top" width="11%"&gt; &lt;a href="https://github.com/fasttime"&gt; &lt;img src="https://github.com/fasttime.png?s=75" width="75" height="75" alt="Francesco Trotta's Avatar" /&gt;&lt;br /&gt; Francesco Trotta &lt;/a&gt; &lt;/td&gt;
   &lt;td align="center" valign="top" width="11%"&gt; &lt;a href="https://github.com/mdjermanovic"&gt; &lt;img src="https://github.com/mdjermanovic.png?s=75" width="75" height="75" alt="Milos Djermanovic's Avatar" /&gt;&lt;br /&gt; Milos Djermanovic &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Reviewers&lt;/h3&gt; 
&lt;p&gt;The people who review and implement new features.&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td align="center" valign="top" width="11%"&gt; &lt;a href="https://github.com/aladdin-add"&gt; &lt;img src="https://github.com/aladdin-add.png?s=75" width="75" height="75" alt="唯然's Avatar" /&gt;&lt;br /&gt; 唯然 &lt;/a&gt; &lt;/td&gt;
   &lt;td align="center" valign="top" width="11%"&gt; &lt;a href="https://github.com/snitin315"&gt; &lt;img src="https://github.com/snitin315.png?s=75" width="75" height="75" alt="Nitin Kumar's Avatar" /&gt;&lt;br /&gt; Nitin Kumar &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Committers&lt;/h3&gt; 
&lt;p&gt;The people who review and fix bugs and help triage issues.&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td align="center" valign="top" width="11%"&gt; &lt;a href="https://github.com/DMartens"&gt; &lt;img src="https://github.com/DMartens.png?s=75" width="75" height="75" alt="fnx's Avatar" /&gt;&lt;br /&gt; fnx &lt;/a&gt; &lt;/td&gt;
   &lt;td align="center" valign="top" width="11%"&gt; &lt;a href="https://github.com/JoshuaKGoldberg"&gt; &lt;img src="https://github.com/JoshuaKGoldberg.png?s=75" width="75" height="75" alt="Josh Goldberg ✨'s Avatar" /&gt;&lt;br /&gt; Josh Goldberg ✨ &lt;/a&gt; &lt;/td&gt;
   &lt;td align="center" valign="top" width="11%"&gt; &lt;a href="https://github.com/SwetaTanwar"&gt; &lt;img src="https://github.com/SwetaTanwar.png?s=75" width="75" height="75" alt="Sweta Tanwar's Avatar" /&gt;&lt;br /&gt; Sweta Tanwar &lt;/a&gt; &lt;/td&gt;
   &lt;td align="center" valign="top" width="11%"&gt; &lt;a href="https://github.com/Tanujkanti4441"&gt; &lt;img src="https://github.com/Tanujkanti4441.png?s=75" width="75" height="75" alt="Tanuj Kanti's Avatar" /&gt;&lt;br /&gt; Tanuj Kanti &lt;/a&gt; &lt;/td&gt;
   &lt;td align="center" valign="top" width="11%"&gt; &lt;a href="https://github.com/lumirlumir"&gt; &lt;img src="https://github.com/lumirlumir.png?s=75" width="75" height="75" alt="루밀LuMir's Avatar" /&gt;&lt;br /&gt; 루밀LuMir &lt;/a&gt; &lt;/td&gt;
   &lt;td align="center" valign="top" width="11%"&gt; &lt;a href="https://github.com/Pixel998"&gt; &lt;img src="https://github.com/Pixel998.png?s=75" width="75" height="75" alt="Pixel998's Avatar" /&gt;&lt;br /&gt; Pixel998 &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Website Team&lt;/h3&gt; 
&lt;p&gt;Team members who focus specifically on eslint.org&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td align="center" valign="top" width="11%"&gt; &lt;a href="https://github.com/amareshsm"&gt; &lt;img src="https://github.com/amareshsm.png?s=75" width="75" height="75" alt="Amaresh  S M's Avatar" /&gt;&lt;br /&gt; Amaresh S M &lt;/a&gt; &lt;/td&gt;
   &lt;td align="center" valign="top" width="11%"&gt; &lt;a href="https://github.com/harish-sethuraman"&gt; &lt;img src="https://github.com/harish-sethuraman.png?s=75" width="75" height="75" alt="Harish's Avatar" /&gt;&lt;br /&gt; Harish &lt;/a&gt; &lt;/td&gt;
   &lt;td align="center" valign="top" width="11%"&gt; &lt;a href="https://github.com/kecrily"&gt; &lt;img src="https://github.com/kecrily.png?s=75" width="75" height="75" alt="Percy Ma's Avatar" /&gt;&lt;br /&gt; Percy Ma &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!--teamend--&gt; 
&lt;!-- NOTE: This section is autogenerated. Do not manually edit.--&gt; 
&lt;!--sponsorsstart--&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. &lt;a href="https://eslint.org/donate"&gt;Become a Sponsor&lt;/a&gt; to get your logo on our READMEs and &lt;a href="https://eslint.org/sponsors"&gt;website&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Platinum Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://automattic.com"&gt;&lt;img src="https://images.opencollective.com/automattic/d0ef3e1/logo.png" alt="Automattic" height="128" /&gt;&lt;/a&gt; &lt;a href="https://www.airbnb.com/"&gt;&lt;img src="https://images.opencollective.com/airbnb/d327d66/logo.png" alt="Airbnb" height="128" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Gold Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://qlty.sh/"&gt;&lt;img src="https://images.opencollective.com/qltysh/33d157d/logo.png" alt="Qlty Software" height="96" /&gt;&lt;/a&gt; &lt;a href="https://trunk.io/"&gt;&lt;img src="https://images.opencollective.com/trunkio/fb92d60/avatar.png" alt="trunk.io" height="96" /&gt;&lt;/a&gt; &lt;a href="https://shopify.engineering/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8085" alt="Shopify" height="96" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Silver Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://vite.dev/"&gt;&lt;img src="https://images.opencollective.com/vite/e6d15e1/logo.png" alt="Vite" height="64" /&gt;&lt;/a&gt; &lt;a href="https://liftoff.io/"&gt;&lt;img src="https://images.opencollective.com/liftoff/5c4fa84/logo.png" alt="Liftoff" height="64" /&gt;&lt;/a&gt; &lt;a href="https://americanexpress.io"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3853301" alt="American Express" height="64" /&gt;&lt;/a&gt; &lt;a href="https://stackblitz.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/28635252" alt="StackBlitz" height="64" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Bronze Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://syntax.fm"&gt;&lt;img src="https://github.com/syntaxfm.png" alt="Syntax" height="32" /&gt;&lt;/a&gt; &lt;a href="https://cybozu.co.jp/"&gt;&lt;img src="https://images.opencollective.com/cybozu/933e46d/logo.png" alt="Cybozu" height="32" /&gt;&lt;/a&gt; &lt;a href="https://sentry.io"&gt;&lt;img src="https://github.com/getsentry.png" alt="Sentry" height="32" /&gt;&lt;/a&gt; &lt;a href="https://discord.com"&gt;&lt;img src="https://images.opencollective.com/discordapp/f9645d9/logo.png" alt="Discord" height="32" /&gt;&lt;/a&gt; &lt;a href="https://www.gitbook.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7111340" alt="GitBook" height="32" /&gt;&lt;/a&gt; &lt;a href="https://nx.dev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/23692104" alt="Nx" height="32" /&gt;&lt;/a&gt; &lt;a href="https://opensource.mercedes-benz.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34240465" alt="Mercedes-Benz Group" height="32" /&gt;&lt;/a&gt; &lt;a href="https://herocoders.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37549774" alt="HeroCoders" height="32" /&gt;&lt;/a&gt; &lt;a href="https://www.lambdatest.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/171592363" alt="LambdaTest" height="32" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Technology Sponsors&lt;/h3&gt; Technology sponsors allow us to use their products and services for free as part of a contribution to the open source ecosystem and our work. 
&lt;p&gt;&lt;a href="https://netlify.com"&gt;&lt;img src="https://raw.githubusercontent.com/eslint/eslint.org/main/src/assets/images/techsponsors/netlify-icon.svg?sanitize=true" alt="Netlify" height="32" /&gt;&lt;/a&gt; &lt;a href="https://algolia.com"&gt;&lt;img src="https://raw.githubusercontent.com/eslint/eslint.org/main/src/assets/images/techsponsors/algolia-icon.svg?sanitize=true" alt="Algolia" height="32" /&gt;&lt;/a&gt; &lt;a href="https://1password.com"&gt;&lt;img src="https://raw.githubusercontent.com/eslint/eslint.org/main/src/assets/images/techsponsors/1password-icon.svg?sanitize=true" alt="1Password" height="32" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!--sponsorsend--&gt;</description>
    </item>
    
    <item>
      <title>leonardomso/33-js-concepts</title>
      <link>https://github.com/leonardomso/33-js-concepts</link>
      <description>&lt;p&gt;📜 33 JavaScript concepts every developer should know.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;br /&gt; &lt;a href="https://github.com/leonardomso/33"&gt;&lt;img src="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/github-image.png" alt="33 Concepts Every JS Developer Should Know" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;33 Concepts Every JavaScript Developer Should Know&lt;/strong&gt; &lt;br /&gt;&lt;br /&gt; &lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt; &lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#introduction"&gt;Introduction&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#community"&gt;Community&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;Table of Contents&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#license"&gt;License&lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;strong&gt;🚀 Considered by GitHub as one of the &lt;a href="https://blog.github.com/2018-12-13-new-open-source-projects/"&gt;top open source projects of 2018!&lt;/a&gt;&lt;/strong&gt; 
&lt;/div&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This repository was created with the intention of helping developers master their concepts in JavaScript. It is not a requirement, but a guide for future studies. It is based on an article written by Stephen Curtis and you can read it &lt;a href="https://medium.com/@stephenthecurt/33-fundamentals-every-javascript-developer-should-know-13dd720a90d1"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Feel free to submit a PR by adding a link to your own recaps or reviews. If you want to translate the repo into your native language, please feel free to do so.&lt;/p&gt; 
&lt;p&gt;All the translations for this repo will be listed below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amrsekilly/33-js-concepts"&gt;اَلْعَرَبِيَّةُ‎ (Arabic)&lt;/a&gt; — Amr Elsekilly&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thewebmasterp/33-js-concepts"&gt;Български (Bulgarian)&lt;/a&gt; - thewebmasterp&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stephentian/33-js-concepts"&gt;汉语 (Chinese)&lt;/a&gt; — Re Tian&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tiagoboeing/33-js-concepts"&gt;Português do Brasil (Brazilian Portuguese)&lt;/a&gt; — Tiago Boeing&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yjs03057/33-js-concepts.git"&gt;한국어 (Korean)&lt;/a&gt; — Suin Lee&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adonismendozaperez/33-js-conceptos"&gt;Español (Spanish)&lt;/a&gt; — Adonis Mendoza&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ilker0/33-js-concepts"&gt;Türkçe (Turkish)&lt;/a&gt; — İlker Demir&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gumennii/33-js-concepts"&gt;русский язык (Russian)&lt;/a&gt; — Mihail Gumennii&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nguyentranchung/33-js-concepts"&gt;Tiếng Việt (Vietnamese)&lt;/a&gt; — Nguyễn Trần Chung&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lip3k/33-js-concepts"&gt;Polski (Polish)&lt;/a&gt; — Dawid Lipinski&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/majidalavizadeh/33-js-concepts"&gt;فارسی (Persian)&lt;/a&gt; — Majid Alavizadeh&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rijdz/33-js-concepts"&gt;Bahasa Indonesia (Indonesian)&lt;/a&gt; — Rijdzuan Sampoerna&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/robinmetral/33-concepts-js"&gt;Français (French)&lt;/a&gt; — Robin Métral&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vikaschauhan/33-js-concepts"&gt;हिन्दी (Hindi)&lt;/a&gt; — Vikas Chauhan&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DimitrisZx/33-js-concepts"&gt;Ελληνικά (Greek)&lt;/a&gt; — Dimitris Zarachanis&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oimo23/33-js-concepts"&gt;日本語 (Japanese)&lt;/a&gt; — oimo23&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/burhannn/33-js-concepts"&gt;Deutsch (German)&lt;/a&gt; — burhannn&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AndrewSavetchuk/33-js-concepts-ukrainian-translation"&gt;украї́нська мо́ва (Ukrainian)&lt;/a&gt; — Andrew Savetchuk&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ududsha/33-js-concepts"&gt;සිංහල (Sinhala)&lt;/a&gt; — Udaya Shamendra&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Donearm/33-js-concepts"&gt;Italiano (Italian)&lt;/a&gt; — Gianluca Fiore&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ANormalStick/33-js-concepts"&gt;Latviešu (Latvian)&lt;/a&gt; - Jānis Īvāns&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Amandagne/33-js-concepts"&gt;Afaan Oromoo (Oromo)&lt;/a&gt; - Amanuel Dagnachew&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ninearif/33-js-concepts"&gt;ภาษาไทย (Thai)&lt;/a&gt; — Arif Waram&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marioestradaf/33-js-concepts"&gt;Català (Catalan)&lt;/a&gt; — Mario Estrada&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/FenixHongell/33-js-concepts/"&gt;Svenska (Swedish)&lt;/a&gt; — Fenix Hongell&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Chhunneng/33-js-concepts"&gt;ខ្មែរ (Khmer)&lt;/a&gt; — Chrea Chanchhunneng&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hmhard/33-js-concepts"&gt;አማርኛ (Ethiopian)&lt;/a&gt; - Miniyahil Kebede(ምንያህል ከበደ)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Yafimau/33-js-concepts"&gt;Беларуская мова (Belarussian)&lt;/a&gt; — Dzianis Yafimau&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/smnv-shokh/33-js-concepts"&gt;O'zbekcha (Uzbek)&lt;/a&gt; — Shokhrukh Usmonov&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sudoyasir/33-js-concepts"&gt;Urdu (اردو)&lt;/a&gt; — Yasir Nawaz&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/milostivyy/33-js-concepts"&gt;हिन्दी (Hindi)&lt;/a&gt; — Mahima Chauhan&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jisan-mia/33-js-concepts"&gt;বাংলা (Bengali)&lt;/a&gt; — Jisan Mia&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VatsalBhuva11/33-js-concepts"&gt;ગુજરાતી (Gujarati)&lt;/a&gt; — Vatsal Bhuva&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Sunny-unik/33-js-concepts"&gt;سنڌي (Sindhi)&lt;/a&gt; — Sunny Gandhwani&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/debnath003/33-js-concepts"&gt;भोजपुरी (Bhojpuri)&lt;/a&gt; — Pronay Debnath&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Harshdev098/33-js-concepts"&gt;ਪੰਜਾਬੀ (Punjabi)&lt;/a&gt; — Harsh Dev Pathak&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Harshdev098/33-js-concepts"&gt;Latin (Latin)&lt;/a&gt; — Harsh Dev Pathak&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Stark-Akshay/33-js-concepts"&gt;മലയാളം (Malayalam)&lt;/a&gt; — Akshay Manoj&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ayobaj/33-js-concepts"&gt;Yorùbá (Yoruba)&lt;/a&gt; - Ayomide Bajulaye&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafyzg/33-js-concepts"&gt;עברית‎ (Hebrew)&lt;/a&gt; — Refael Yzgea&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dlvisser/33-js-concepts"&gt;Nederlands (Dutch)&lt;/a&gt; — Dave Visser&lt;/li&gt; 
 &lt;li&gt;[தமிழ் (Tamil)] (&lt;a href="https://github.com/UdayaKrishnanM/33-js-concepts"&gt;https://github.com/UdayaKrishnanM/33-js-concepts&lt;/a&gt;) - Udaya Krishnan M&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;&lt;img align="center" width="35" height="35" src="https://media4.giphy.com/media/3hoLIVAJYkz6T0Ichp/giphy.gif" /&gt; &lt;a id="table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#1-call-stack"&gt;&lt;strong&gt;Call Stack&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#2-primitive-types"&gt;&lt;strong&gt;Primitive Types&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#3-value-types-and-reference-types"&gt;&lt;strong&gt;Value Types and Reference Types&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#4-implicit-explicit-nominal-structuring-and-duck-typing"&gt;&lt;strong&gt;Implicit, Explicit, Nominal, Structuring and Duck Typing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#5--vs--vs-typeof"&gt;&lt;strong&gt;== vs === vs typeof&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#6-function-scope-block-scope-and-lexical-scope"&gt;&lt;strong&gt;Function Scope, Block Scope and Lexical Scope&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#7-expression-vs-statement"&gt;&lt;strong&gt;Expression vs Statement&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#8-iife-modules-and-namespaces"&gt;&lt;strong&gt;IIFE, Modules and Namespaces&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#9-message-queue-and-event-loop"&gt;&lt;strong&gt;Message Queue and Event Loop&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#10-settimeout-setinterval-and-requestanimationframe"&gt;&lt;strong&gt;setTimeout, setInterval and requestAnimationFrame&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#11-javascript-engines"&gt;&lt;strong&gt;JavaScript Engines&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#12-bitwise-operators-type-arrays-and-array-buffers"&gt;&lt;strong&gt;Bitwise Operators, Type Arrays and Array Buffers&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#13-dom-and-layout-trees"&gt;&lt;strong&gt;DOM and Layout Trees&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#14-factories-and-classes"&gt;&lt;strong&gt;Factories and Classes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#15-this-call-apply-and-bind"&gt;&lt;strong&gt;this, call, apply and bind&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#16-new-constructor-instanceof-and-instances"&gt;&lt;strong&gt;new, Constructor, instanceof and Instances&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#17-prototype-inheritance-and-prototype-chain"&gt;&lt;strong&gt;Prototype Inheritance and Prototype Chain&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#18-objectcreate-and-objectassign"&gt;&lt;strong&gt;Object.create and Object.assign&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#19-map-reduce-filter"&gt;&lt;strong&gt;map, reduce, filter&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#20-pure-functions-side-effects-state-mutation-and-event-propagation"&gt;&lt;strong&gt;Pure Functions, Side Effects, State Mutation and Event Propagation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#21-closures"&gt;&lt;strong&gt;Closures&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#22-high-order-functions"&gt;&lt;strong&gt;High Order Functions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#23-recursion"&gt;&lt;strong&gt;Recursion&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#24-collections-and-generators"&gt;&lt;strong&gt;Collections and Generators&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#25-promises"&gt;&lt;strong&gt;Promises&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#26-asyncawait"&gt;&lt;strong&gt;async/await&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#27-data-structures"&gt;&lt;strong&gt;Data Structures&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#28-expensive-operation-and-big-o-notation"&gt;&lt;strong&gt;Expensive Operation and Big O Notation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#29-algorithms"&gt;&lt;strong&gt;Algorithms&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#30-inheritance-polymorphism-and-code-reuse"&gt;&lt;strong&gt;Inheritance, Polymorphism and Code Reuse&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#31-design-patterns"&gt;&lt;strong&gt;Design Patterns&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#32-partial-applications-currying-compose-and-pipe"&gt;&lt;strong&gt;Partial Applications, Currying, Compose and Pipe&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#33-clean-code"&gt;&lt;strong&gt;Clean Code&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h2&gt;1. Call Stack&lt;/h2&gt; 
&lt;p&gt;The call stack is a mechanism that the JavaScript interpreter uses to keep track of function execution within a program. In JavaScript, functions are executed in the order they are called. The call stack follows the Last In, First Out (LIFO) principle, meaning that the last function pushed onto the stack is the first one to be executed.&lt;/p&gt; 
&lt;p&gt;According to the ECMAScript specification, the call stack is defined as part of the execution context. Whenever a function is called, a new execution context is created and placed at the top of the stack. Once the function completes, its execution context is removed from the stack, and control returns to the previous context. This helps manage synchronous code execution, as each function call must complete before the next one can begin.&lt;/p&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Call_stack"&gt;Call Stack — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@gaurav.pandvia/understanding-javascript-function-executions-tasks-event-loop-call-stack-more-part-1-5683dea1f5ec"&gt;Understanding Javascript Call Stack, Event Loops — Gaurav Pandvia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/understanding-the-javascript-call-stack-861e41ae61d4"&gt;Understanding the JavaScript Call Stack — Charles Freeborn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@valentinog/javascript-what-is-the-execution-context-what-is-the-call-stack-bd23c78f10d1"&gt;Javascript: What Is The Execution Context? What Is The Call Stack? — Valentino Gagliardi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/jesstelford/9a35d20a2aa044df8bf241e00d7bc2d0"&gt;What is the JS Event Loop and Call Stack? — Jess Telford&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0"&gt;Understanding Execution Context and Execution Stack in Javascript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/bipinrajbhar/how-javascript-works-under-the-hood-an-overview-of-javascript-engine-heap-and-call-stack-1j5o"&gt;How JavaScript Works Under The Hood: An Overview of JavaScript Engine, Heap and, Call Stack — Bipin Rajbhar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=W8AeMrVtFLY"&gt;The JS Call stack Explained in 9 minutes&lt;/a&gt; - Colt Steel (YouTube)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=w6QGEiQceOM"&gt;Javascript: the Call Stack explained — Coding Blocks India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=W8AeMrVtFLY"&gt;The JS Call Stack Explained In 9 Minutes — Colt Steele&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=w7QWQlkLY_s"&gt;What is the Call Stack? — Eric Traub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Q2sFmqvpBe0"&gt;The Call Stack — Kevin Drumm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Z6a1cLyq7Ac&amp;amp;list=PLWrQZnG8l0E4kd1T_nyuVoxQUaYEWFgcD"&gt;Understanding JavaScript Execution — Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ"&gt;What the heck is the event loop anyway? — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=iLWTnMzWtj4&amp;amp;list=PLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP"&gt;How JavaScript Code is executed? ❤️&amp;amp; Call Stack — Akshay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aCPkszeKRa4"&gt;Call Stacks - CS50&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HXqXPGS96rw"&gt;Learn the JavaScript Call Stack - codecupdev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=P6H-T4cUDR4"&gt;JavaScript Functions and the Call Stack | How does the Call stack work - Chidre'sTechTutorials&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;2. Primitive Types&lt;/h2&gt; 
&lt;p&gt;According to the ECMAScript specification, JavaScript has six primitive data types: string, number, bigint, boolean, undefined, and symbol. These types are immutable, meaning their values cannot be altered. There is also a special primitive type called null, which represents the intentional absence of any object value.&lt;/p&gt; 
&lt;p&gt;Primitive values are directly assigned to a variable, and when you manipulate a primitive type, you're working directly on the value. Unlike objects, primitives do not have properties or methods, but JavaScript automatically wraps primitive values with object counterparts when necessary (e.g., when calling methods on strings).&lt;/p&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values"&gt;JavaScript data types and data structures — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/primitive-and-non-primitive-data-types-in-javascript"&gt;Primitive and Non-primitive data-types in JavaScript - GeeksforGeeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://2ality.com/2012/04/number-encoding.html"&gt;How numbers are encoded in JavaScript — Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.chewxy.com/2014/02/24/what-every-javascript-developer-should-know-about-floating-point-numbers/"&gt;What Every JavaScript Developer Should Know About Floating Point Numbers — Chewxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascriptweblog.wordpress.com/2010/09/27/the-secret-life-of-javascript-primitives/"&gt;The Secret Life of JavaScript Primitives — Angus Croll&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flow.org/en/docs/types/primitives/"&gt;Primitive Types — Flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/d4nyll/not-everything-in-javascript-is-an-object"&gt;(Not) Everything in JavaScript is an Object — Daniel Li&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values"&gt;JavaScript data types and data structures — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/diving-deeper-in-javascripts-objects-318b1e13dc12"&gt;Diving Deeper in JavaScripts Objects — Arfat Salman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@bolajiayodeji/the-differences-between-object-freeze-vs-const-in-javascript-4eacea534d7c"&gt;The differences between Object.freeze() vs Const in JavaScript — Bolaji Ayodeji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/object-toprimitive"&gt;Object to primitive conversion — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/primitives-methods"&gt;Methods of primitives - Javascript.info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9ooYYRLdg_g"&gt;JavaScript Reference vs Primitive Types — Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HsbWQsSCE5Y"&gt;JavaScript Primitive Types — Simon Sez IT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=e-_mDyqm2oU"&gt;Value Types and Reference Types in JavaScript — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qw3j0A3DIzQ"&gt;JavaScript Primitive Data Types — Avelx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=MqHDDtVYJRI"&gt;Everything you never wanted to know about JavaScript numbers — Bartek Szopka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=B4Bbmei_thw"&gt;What are variables in Javascript? — JS For Everyone&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cC65D2q5f8I"&gt;TIPOS DE DATOS PRIMITIVOS en JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aFDvBjVjCh8"&gt;Data Type in JavaScript - ScholarHat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;3. Value Types and Reference Types&lt;/h2&gt; 
&lt;p&gt;According to the ECMAScript specification, value types are stored directly in the location that the variable accesses. These include types like number, string, boolean, undefined, bigint, symbol, and null. When you assign a value type to a variable, the value itself is stored.&lt;/p&gt; 
&lt;p&gt;Reference types, on the other hand, are objects stored in the heap. Variables assigned to reference types actually store references (pointers) to the objects, not the objects themselves. When you assign a reference type to another variable, both variables reference the same object in memory.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/explaining-value-vs-reference-in-javascript-647a975e12a0"&gt;Explaining Value vs. Reference in Javascript — Arnav Aggarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/branneman/7fb06d8a74d7e6d4cbcf75c50fec599c"&gt;Primitive Types &amp;amp; Reference Types in JavaScript — Bran van der Meer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@benastontweet/lesson-1b-javascript-fundamentals-380f601ba851"&gt;Value Types, Reference Types and Scope in JavaScript — Ben Aston&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/back-to-roots-javascript-value-vs-reference-8fb69d587a18"&gt;Back to roots: JavaScript Value vs Reference — Miro Koczka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/grasp-by-value-and-by-reference-in-javascript-7ed75efa1293"&gt;Grasp "By Value" and "By Reference" in JavaScript — Léna Faure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/javascript-reference-and-copy-variables-b0103074fdf0"&gt;JavaScript Reference and Copy Variables — Vítor Capretz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.javascripttutorial.net/javascript-primitive-vs-reference-values/"&gt;JavaScript Primitive vs Reference Values&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/6605640/javascript-by-reference-vs-by-value"&gt;JavaScript by Reference vs. by Value — nrabinowitz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/mostlyfocusedmike/javascript-interview-prep-primitive-vs-reference-types-3o4f"&gt;JavaScript Interview Prep: Primitive vs. Reference Types — Mike Cronin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.tutsplus.com/tutorials/javascript-map-vs-foreach-when-to-use-each-one--cms-38365"&gt;JavaScript map vs. forEach: When to Use Each One - Sajal Soni&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=E-dAnFdq8k8"&gt;Javascript Pass by Value vs Pass by Reference — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=fD0t_DKREbE"&gt;JavaScript Value vs Reference Types — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=AvkyOrWkuQc"&gt;VALORES vs REFERENCIAS en JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9ooYYRLdg_g"&gt;JavaScript - Reference vs Primitive Values/ Types - Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=e-_mDyqm2oU"&gt;Value Types and Reference Types in JavaScript - Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;4. Implicit, Explicit, Nominal, Structuring and Duck Typing&lt;/h2&gt; 
&lt;p&gt;The ECMAScript specification defines JavaScript as a dynamically typed language, meaning that types are associated with values rather than variables, and type checking occurs at runtime. There are various ways JavaScript manages types:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Implicit Typing (or Type Coercion):&lt;/strong&gt; This occurs when JavaScript automatically converts one data type to another when required. For instance, JavaScript might convert a string to a number during an arithmetic operation. While this can simplify some code, it can also lead to unexpected results if not handled carefully.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Explicit Typing:&lt;/strong&gt; Unlike implicit typing, explicit typing involves manually converting a value from one type to another using functions like Number(), String(), or Boolean().&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Nominal Typing:&lt;/strong&gt; JavaScript doesn't natively support nominal typing, where types are explicitly declared and checked. However, TypeScript, a superset of JavaScript, brings this feature to help catch type errors during development.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structural Typing:&lt;/strong&gt; In this type system, types are based on the structure or properties of the data. JavaScript is a structurally typed language where objects are compatible if they share the same structure (i.e., the same set of properties and methods).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Duck Typing:&lt;/strong&gt; This is a concept where an object's suitability is determined by the presence of certain properties and methods, rather than by the actual type of the object. JavaScript relies heavily on duck typing, where behavior is inferred from an object's properties rather than its declared type.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/promhize/what-you-need-to-know-about-javascripts-implicit-coercion-e23"&gt;What you need to know about Javascript's Implicit Coercion — Promise Tochi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/js-type-coercion-explained-27ba3d9a2839"&gt;JavaScript Type Coercion Explained — Alexey Samoshkin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/javascript-coercion-explained-545c895213d3"&gt;Javascript Coercion Explained — Ben Garrison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/19915688/what-exactly-is-type-coercion-in-javascript"&gt;What exactly is Type Coercion in Javascript? - Stack Overflow&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qGyqzN0bjhc&amp;amp;t"&gt;== ? === ??? ...#@^% - Shirmung Bielefeld&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=b04Q_vyqEG8"&gt;Coercion in Javascript - Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=z4-8wMSPJyI"&gt;JavaScript Questions: What is Coercion? - Steven Hancock&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=C5fr0LZLMAs"&gt;Typing: Static vs Dynamic, Weak vs. Strong - Codexpanse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0ei4nb49GKo"&gt;EL SISTEMA de TIPOS DE JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oEpgyoMEkrM"&gt;Duck Typing in Javascript - Techmaker Studio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/e4X1KAuk6Bs?si=krZKbsM2i3tmIl2G"&gt;Duck Typing in Javascript - Programming with Kartik&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS/tree/1st-ed"&gt;You Don't Know JS, 1st Edition: Types &amp;amp; Grammar — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;5. == vs === vs typeof&lt;/h2&gt; 
&lt;p&gt;According to the ECMAScript specification, JavaScript includes both strict (===) and loose (==) equality operators, which behave differently when comparing values. Here's a breakdown:&lt;/p&gt; 
&lt;p&gt;== (Loose Equality): This operator performs type coercion before comparing two values. If the values are of different types, JavaScript will attempt to convert one or both values to a common type before comparison, which can lead to unexpected results.&lt;/p&gt; 
&lt;p&gt;=== (Strict Equality): This operator compares both the value and the type without any type coercion. If the two values are not of the same type, the comparison will return false.&lt;/p&gt; 
&lt;p&gt;typeof Operator: The typeof operator is used to check the data type of a variable. While it's generally reliable, there are certain quirks, like how typeof null returns "object" instead of "null", due to a long-standing behavior in JavaScript's implementation.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-double-equals-vs-triple-equals-61d4ce5a121a"&gt;JavaScript Double Equals vs. Triple Equals — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bytearcher.com/articles/equality-comparison-operator-javascript/"&gt;Should I use === or == equality comparison operator in JavaScript? — Panu Pitkamaki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.impressivewebs.com/why-use-triple-equals-javascipt/"&gt;Why Use the Triple-Equals Operator in JavaScript? — Louis Lazaris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oreilly.com/learning/what-is-the-difference-between-and-in-javascript"&gt;What is the difference between == and === in JavaScript? — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/3787901/why-javascripts-typeof-always-return-object"&gt;Why javascript's typeof always return "object"? — Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://tobyho.com/2011/01/28/checking-types-in-javascript/"&gt;Checking Types in Javascript — Toby Ho&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://webbjocke.com/javascript-check-data-types/"&gt;How to better check data types in JavaScript — Webbjocke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tomeraberba.ch/html/post/checking-for-the-absence-of-a-value-in-javascript.html"&gt;Checking for the Absence of a Value in JavaScript — Tomer Aberbach&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.scaler.com/topics/javascript/difference-between-double-equals-and-triple-equals-in-javascript/"&gt;Difference Between == and === in Javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/difference-between-double-equal-vs-triple-equal-javascript/"&gt;Difference between == and === in JavaScript — GeeksforGeeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-triple-equals-sign-vs-double-equals-sign-comparison-operators-explained-with-examples/"&gt;=== vs == Comparision in JavaScript — FreeCodeCamp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ol_su88I3kw"&gt;JavaScript - The typeof operator — Java Brains&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qPYhTPt_SbQ"&gt;Javascript typeof operator — DevDelight&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=C5ZVC4HHgIg"&gt;JavaScript "==" VS "===" — Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=a0S1iG3TgP0"&gt;=== vs == in javascript - Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=NSS5WRcv7yM"&gt;The typeof operator in JS - CodeVault&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;6. Function Scope, Block Scope and Lexical Scope&lt;/h2&gt; 
&lt;p&gt;The ECMAScript specification outlines three key types of scope:&lt;/p&gt; 
&lt;p&gt;Function Scope: Variables declared within a function using var are only accessible within that function. This scope isolates variables from being accessed outside of the function where they are declared.&lt;/p&gt; 
&lt;p&gt;Block Scope: Introduced with ES6, variables declared with let and const are block-scoped. This means they are only accessible within the specific block {} in which they are defined, such as inside loops or conditionals.&lt;/p&gt; 
&lt;p&gt;Lexical Scope: Refers to how variable access is determined based on the physical location of the variables in the code. Functions are lexically scoped, meaning that they can access variables from their parent scope.&lt;/p&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS/tree/2nd-ed/scope-closures"&gt;You Don't Know JS Yet, 2nd Edition: Scope &amp;amp; Closures — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-functions-understanding-the-basics-207dbf42ed99"&gt;JavaScript Functions — Understanding The Basics — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/var-let-and-const-whats-the-difference/"&gt;Var, Let, and Const – What's the Difference?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.scaler.com/topics/javascript/javascript-functions/"&gt;Functions in JavaScript - Deepa Pandey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://adripofjavascript.com/blog/drips/emulating-block-scope-in-javascript.html"&gt;Emulating Block Scope in JavaScript — Josh Clanton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@josephcardillo/the-difference-between-function-and-block-scope-in-javascript-4296b2322abe"&gt;The Difference Between Function and Block Scope in JavaScript — Joseph Cardillo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://ryanmorr.com/understanding-scope-and-context-in-javascript/"&gt;Understanding Scope and Context in JavaScript — Ryan Morr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://css-tricks.com/javascript-scope-closures/"&gt;JavaScript Scope and Closures — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.telerik.com/topics/web-development/understanding-scope-in-javascript/"&gt;Understanding Scope in JavaScript — Wissam Abirached&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/understanding-scope-in-javascript"&gt;Understanding Scope in JavaScript ― Hammad Ahmed&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/when-to-use-a-function-declarations-vs-a-function-expression-70f15152a0a0"&gt;When to use a function declaration vs. a function expression ― Amber Wilkie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/alexandrafren/a-javascript-fundamentals-cheat-sheet-scope-context-and-this-28ai"&gt;A JavaScript Fundamentals Cheat Sheet: Scope, Context, and "this" ― Alexandra Fren&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions#function_scope"&gt;Functions / Function scope ― MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=SBwoFkRjZvE"&gt;What Makes Javascript Weird ... and Awesome pt. 4 — LearnCode.academy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dhp57T3p760"&gt;Variable Scope in JavaScript — Kirupa Chinnathambi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aK_nuUAdr8E"&gt;JavaScript Block Scope and Function Scope — mmtuts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GhNA0r10MmA"&gt;What the Heck is Lexical Scope? — NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=FyWdrCZZavQ"&gt;Variable Scope — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=W6NZfCO5SIk"&gt;Javascript Tutorials for Beginners — Mosh Hemadani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=IaTztAtoNEY"&gt;JavaScript Block scope vs Function scope - nivek&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qT5S7GgIioE"&gt;Lexical scoping in javascript - Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zMseUdOR7z8"&gt;Modern Scope Handling in JavaScript (ES6 and Beyond) -Prashant Dewangan &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;7. Expression vs Statement&lt;/h2&gt; 
&lt;p&gt;According to the ECMAScript specification, expressions produce a value, and statements are instructions to perform an action, such as variable assignment or control flow. Function declarations are hoisted and can be called before they are defined in the code, while function expressions are not hoisted and must be defined before being invoked.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/promhize/javascript-in-depth-all-you-need-to-know-about-expressions-statements-and-expression-statements-5k2"&gt;All you need to know about Javascript's Expressions, Statements and Expression Statements — Promise Tochi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/function-expressions-vs-declarations/"&gt;Function Expressions vs Function Declarations — Paul Wilkins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@raviroshan.talk/javascript-function-declaration-vs-expression-f5873b8c7b38"&gt;JavaScript Function — Declaration vs Expression — Ravi Roshan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@mandeep1012/function-declarations-vs-function-expressions-b43646042052"&gt;Function Declarations vs. Function Expressions — Mandeep Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascriptweblog.wordpress.com/2010/07/06/function-declarations-vs-function-expressions/"&gt;Function Declarations vs. Function Expressions — Anguls Croll&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/Expression_statement"&gt;Expression statement — MDN web docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=WVyCrI1cHi8"&gt;Expressions vs. Statements in JavaScript — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3jDpNGJkupA"&gt;JavaScript - Expression vs. Statement — WebTunings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qz7Nq1tV7Io"&gt;Javascript Function Expression Vs Declaration For Beginners — Dev Material&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/eWTuFoBYiwg"&gt;The difference between an expression and a statement in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cVDs3TZ-kXs"&gt;Expression in javascript | Statement in javascript - Sathelli Srikanth&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;8. IIFE, Modules and Namespaces&lt;/h2&gt; 
&lt;p&gt;With the introduction of ES6 modules, the role of IIFEs in scope isolation has diminished but they still remain relevant.&lt;/p&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/IIFE"&gt;IIFE — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/modularity"&gt;Modularity — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Namespace"&gt;Namespace — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@vvkchandra/essential-javascript-mastering-immediately-invoked-function-expressions-67791338ddc6"&gt;Mastering Immediately-Invoked Function Expressions ― Chandra Gundamaraju&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.javascripttutorial.net/javascript-immediately-invoked-function-expression-iife/"&gt;JavaScript Immediately Invoked Function Expression — javascripttutorial.net&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.jvandemo.com/a-10-minute-primer-to-javascript-modules-module-formats-module-loaders-and-module-bundlers/"&gt;A 10 minute primer to JavaScript modules, module formats, module loaders and module bundlers ― Jurgen Van de Moere&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://exploringjs.com/es6/ch_modules.html"&gt;Modules ― Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/understanding-es6-modules/"&gt;Understanding ES6 Modules — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.cloud66.com/an-overview-of-es6-modules-in-javascript/"&gt;An overview of ES6 Modules in JavaScript — Brent Graham&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/es6-modules-in-depth"&gt;ES6 Modules in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/es6-modules-node-js-and-the-michael-jackson-solution-828dc244b8b"&gt;ES6 modules, Node.js and the Michael Jackson Solution — Alberto Gimeno&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/javascript-modules-a-beginner-s-guide-783f7d7a5fcc"&gt;JavaScript Modules: A Beginner's Guide — Preethi Kasireddy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.google.com/web/fundamentals/primers/modules"&gt;Using JavaScript modules on the web — Addy Osmani &amp;amp; Mathias Bynens&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/bhagatparwinder/iife-immediately-invoked-function-expressions-49c5"&gt;IIFE: Immediately Invoked Function Expressions — Parwinder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sassy-butter-197.notion.site/Javascript-bundlers-016932b17b0744e983c2cc0db31e6f02"&gt;Javascript Module Bundlers — Vanshu Hassija&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3cbiZV4H22c"&gt;Immediately Invoked Function Expression - Beau teaches JavaScript — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=I5EntfMeIIQ"&gt;Understanding JavaScript IIFE — Sheo Narayan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_3oSWwapPKQ"&gt;JavaScript Modules: ES6 Import and Export — Kyle Robinson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aQr2bV1BPyE"&gt;ES6 - Modules — Ryan Christiani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=fIP4pjAqCtQ"&gt;ES6 Modules in the Real World — Sam Thorogood&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5P04OK6KlXA"&gt;ES6 Modules — TempleCoding&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Xd7zgPFwVX8&amp;amp;"&gt;JavaScript IIFE (Immediately Invoked Function Expressions) — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;9. Message Queue and Event Loop&lt;/h2&gt; 
&lt;p&gt;The Event Loop is a critical part of JavaScript's concurrency model, ensuring non-blocking behavior by processing tasks in an asynchronous manner. Understanding how it interacts with the Message Queue and Microtasks is key to mastering JavaScript behavior.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/javascript-event-loop-explained-4cd26af121d4"&gt;JavaScript Event Loop Explained — Anoop Raveendran&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-js-the-event-loop-959beae3ac40"&gt;Understanding JS: The Event Loop — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flaviocopes.com/javascript-event-loop/"&gt;The JavaScript Event Loop — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/"&gt;Tasks, microtasks, queues and schedules — Jake Archibald&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/presto412/visualising-the-javascript-event-loop-with-a-pizza-restaurant-analogy-47a8"&gt;Visualising the JavaScript Event Loop with a Pizza Restaurant analogy — Priyansh Jain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lydiahallie/javascript-visualized-event-loop-3dif"&gt;JavaScript Visualized: Event Loop — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-zone/understanding-and-optimizing-javascripts-event-loop-717ae0095038#:~:text=The%20event%20loop%20is%20the,%2Dblocking%20I%2FO%20operations."&gt;Understanding and Optimizing JavaScript's Event Loop — Xiuer Old&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ"&gt;What the heck is the event loop anyway? | JSConf EU — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XzXIMZMN9k4"&gt;JavaScript Event Loop — ComScience Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6MXRNXXgP_0"&gt;I'm stuck in an Event Loop — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cCOL7MC4Pl0"&gt;In The Loop - Jake Archibald | JSConf.Asia 2018&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Eqq2Rb7LzYE"&gt;Desmitificando el Event Loop (Spanish)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6lbBaM18X3g"&gt;Callbacks, Sincrono, Assíncrono e Event Loop (PT-BR)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6lbBaM18X3g"&gt;JavaScript Event Loop: How it Works and Why it Matters in 5 Minutes - James Q Quick&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;10. setTimeout, setInterval and requestAnimationFrame&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/settimeout-setinterval"&gt;setTimeout and setInterval — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/akanksha_9560/why-not-to-use-setinterval--2na9"&gt;Why not to use setInterval — Akanksha Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://develoger.com/settimeout-vs-setinterval-cff85142555b"&gt;setTimeout VS setInterval — Develoger&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://css-tricks.com/using-requestanimationframe/"&gt;Using requestAnimationFrame — Chris Coyier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.javascriptkit.com/javatutors/requestanimationframe.shtml"&gt;Understanding JavaScript's requestAnimationFrame() — JavaScript Kit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amitmerchant.com/Handling-Time-Intervals-In-Javascript/"&gt;Handling time intervals in JavaScript - Amit Merchant&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-debounce-example/"&gt;Debounce – How to Delay a Function in JavaScript - Ondrej Polesny&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6bPKyl8WYWI"&gt;Javascript: How setTimeout and setInterval works — Coding Blocks India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/nqsPmuicJJc?si=4FXKlZfqiJUqO2Y4"&gt;TRUST ISSUES with setTimeout() — Akshay Saini &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=TbCgGWe8LN8"&gt;setTimeout and setInterval in JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0VVJSvlUgtg"&gt;JavaScript Timers — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mVKfrWCOB60"&gt;JavaScript setTimeOut and setInterval Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;11. JavaScript Engines&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://www.softwaremag.com/javascript-engines/"&gt;JavaScript Engines — Jen Looper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/understanding-the-core-of-nodejs-the-powerful-chrome-v8-engine-79e7eb8af964"&gt;Understanding How the Chrome V8 Engine Translates JavaScript into Machine Code — DroidHead&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/understanding-v8s-bytecode-317d46c94775"&gt;Understanding V8's Bytecode — Franziska Hinkelmann&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-essentials-why-you-should-know-how-the-engine-works-c2cc0d321553"&gt;JavaScript essentials: why you should know how the engine works - Rainer Hahnekamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mathiasbynens.be/notes/shapes-ics"&gt;JavaScript engine fundamentals: Shapes and Inline Caches&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mathiasbynens.be/notes/prototypes"&gt;JavaScript engine fundamentals: optimizing prototypes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://v8.dev/blog/elements-kinds"&gt;How V8 optimizes array operations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/javascript-internals-javascript-engine-run-time-environment-settimeout-web-api-eeed263b1617"&gt;JavaScript Internals: JavaScript engine, Run-time environment &amp;amp; setTimeout Web API — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5nmpokoRaZI"&gt;JavaScript Engines: The Good Parts™ — Mathias Bynens &amp;amp; Benedikt Meurer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2WJL19wDH68"&gt;JS Engine EXPOSED 🔥 Google's V8 Architecture 🚀 | Namaste JavaScript Ep. 16 - Akshay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/iLWTnMzWtj4"&gt;How JavaScript Code is executed? How Javascript works behind the scenes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=xckH5s3UuX4"&gt;Understanding the V8 JavaScript Engine - freeCodeCamp Talks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oc6faXVc54E"&gt;JavaScript Under The Hood - JavaScript Engine Overview - Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QyUFheng6J0"&gt;Arindam Paul - JavaScript VM internals, EventLoop, Async and ScopeChains&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;12. Bitwise Operators, Type Arrays and Array Buffers&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/programming-with-js-bitwise-operations-393eb0745dc4"&gt;Programming with JS: Bitwise Operations — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/using-javascript-bitwise-operators-in-real-life-f551a731ff5"&gt;Using JavaScript's Bitwise Operators in Real Life — ian m&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.w3resource.com/javascript/operators/bitwise-operator.php"&gt;JavaScript Bitwise Operators — w3resource&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/bother7-blog/bitwise-operators-in-javascript-65c4c69be0d3"&gt;Bitwise Operators in Javascript — Joe Cha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/techtrument/a-comprehensive-primer-on-binary-computation-and-bitwise-operators-in-javascript-81acf8341f04"&gt;A Comprehensive Primer on Binary Computation and Bitwise Operators in javascript — Paul Brown&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.quora.com/How-can-I-understand-Bitwise-operation-in-JavaScript"&gt;How can I understand Bitwise operation in JavaScript?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mesu75PTDC8"&gt;JavaScript Bitwise Operators — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=igIjGxF2J-w"&gt;Bitwise Operators and WHY we use them — Alex Hyett&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RRyxCmLX_ag"&gt;JS Bitwise Operators and Binary Numbers — Steve Griffith - Prof3ssorSt3v3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ScZZoHj7mqY"&gt;Deep Dive into Blobs, Files, and ArrayBuffers — Steve Griffith - Prof3ssorSt3v3&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;13. DOM and Layout Trees&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model"&gt;Document Object Model (DOM) — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://eloquentjavascript.net/14_dom.html"&gt;Eloquent JavaScript, 3rd Edition: Ch. 14 - The Document Object Model&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/introduction-to-the-dom"&gt;How To Understand and Modify the DOM in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/whats-the-document-object-model-and-why-you-should-know-how-to-use-it-1a2d0bc5429d"&gt;What's the Document Object Model, and why you should know how to use it — Leonardo Maldonado&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.guru99.com/how-to-use-dom-and-events-in-javascript.html"&gt;JavaScript DOM Tutorial with Example — Guru99&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://css-tricks.com/dom/"&gt;What is the DOM? — Chris Coyier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zellwk.com/blog/dom-traversals/"&gt;Traversing the DOM with JavaScript — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/dom-nodes"&gt;DOM Tree&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-in-plain-english/how-to-traverse-the-dom-in-javascript-d6555c335b4e"&gt;How to traverse the DOM in Javascript — Vojislav Grujić&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction"&gt;Render Tree Construction — Ilya Grigorik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitsofco.de/what-exactly-is-the-dom/"&gt;What exactly is the DOM?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.javascripttutorial.net/javascript-dom/"&gt;JavaScript DOM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Pr4LLrmDLLo"&gt;Traversing the Dom with Javascript&lt;/a&gt; - Steve Griffith (YouTube)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=FIORjGvT0kk"&gt;JavaScript DOM — The Net Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0ik6X4DJKCc"&gt;JavaScript DOM Crash Course — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=y17RuWkWdn8"&gt;JavaScript DOM Manipulation Methods — Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=v7rSSy8CaYE"&gt;JavaScript DOM Traversal Methods — Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;14. Factories and Classes&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/understanding-classes-in-javascript"&gt;How To Use Classes in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/tech-tajawal/javascript-classes-under-the-hood-6b26d2667677"&gt;Javascript Classes — Under The Hood — Majid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/better-javascript-with-es6-pt-ii-a-deep-dive-into-classes"&gt;Better JavaScript with ES6, Pt. II: A Deep Dive into Classes ― Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/understand-the-factory-design-pattern-in-plain-javascript-20b348c832bd"&gt;Understand the Factory Design Pattern in Plain JavaScript — Aditya Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://atendesigngroup.com/blog/factory-functions-javascript"&gt;Factory Functions in JavaScript — Josh Miller&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@SntsDev/the-factory-pattern-in-js-es6-78f0afad17e9"&gt;The Factory Pattern in JS ES6 — SnstsDev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/class-vs-factory-function-exploring-the-way-forward-73258b6a8d15"&gt;Class vs Factory function: exploring the way forward — Cristi Salcescu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@robertgrosse/how-es6-classes-really-work-and-how-to-build-your-own-fd6085eb326a"&gt;How ES6 classes really work and how to build your own — Robert Grosse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jordankasper.com/understanding-super-in-javascript"&gt;Understanding &lt;code&gt;super&lt;/code&gt; in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lawrence_eagles/an-easy-guide-to-understanding-classes-in-javascript-3bcm"&gt;An Easy Guide To Understanding Classes In JavaScript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jpegXpQpb3o"&gt;JavaScript Factory Functions — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ImwrezYhw4w"&gt;Factory Functions in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=R7-IwpH80UE"&gt;Javascript Tutorial Function Factories — Crypto Chan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;15. this, call, apply and bind&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call"&gt;call() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind"&gt;bind() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply"&gt;apply() — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://levelup.gitconnected.com/grokking-call-apply-and-bind-methods-in-javascript-392351a4be8b"&gt;Grokking call(), apply() and bind() methods in JavaScript — Aniket Kudale&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://javascriptissexy.com/javascript-apply-call-and-bind-methods-are-essential-for-javascript-professionals/"&gt;JavaScript's Apply, Call, and Bind Methods are Essential for JavaScript Professionals — Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@omergoldberg/javascript-call-apply-and-bind-e5c27301f7bb"&gt;Javascript: call(), apply() and bind() — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@ivansifrim/the-differences-between-call-apply-bind-276724bb825b"&gt;The difference between call / apply / bind — Ivan Sifrim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ritik_dev_js/what-the-hack-is-call-apply-bind-in-javascript-11ce"&gt;What the hack is call, apply, bind in JavaScript — Ritik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://thenewstack.io/mastering-javascript-callbacks-bind-apply-call/"&gt;Mastering 'this' in JavaScript: Callbacks and bind(), apply(), call() — Michelle Gienow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/kbk0125/javascripts-apply-call-and-bind-explained-by-hosting-a-cookout-32jo"&gt;JavaScript's apply, call, and bind explained by hosting a cookout — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.eigenx.com/blog/https/mediumcom/eigen-x/how-and-when-to-use-bind-call-and-apply-in-javascript-77b6f42898fb"&gt;How AND When to use bind, call, and apply in Javascript — Eigen X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ycmjason/let-me-explain-to-you-what-is-this-javascript-44ja"&gt;Let me explain to you what is &lt;code&gt;this&lt;/code&gt;. (Javascript) — Jason Yu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/quick-code/understanding-the-this-keyword-in-javascript-cb76d4c7c5e8"&gt;Understanding the "this" Keyword in JavaScript — Pavan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-understand-the-keyword-this-and-context-in-javascript-cd624c6b74b8"&gt;How to understand the keyword this and context in JavaScript — Lukas Gisder-Dubé&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/_hridaysharma/what-the-heck-is-this-in-javascript-37n1"&gt;What the heck is this in Javascript? — Hridayesh Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/steelvoltage/this-and-bind-in-javascript-2pam"&gt;This and Bind In Javascript — Brian Barbour&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/canderson93/3-techniques-for-maintaining-your-sanity-using-this-in-javascript-3idf"&gt;3 Techniques for Maintaining Your Sanity Using "This" in JavaScript — Carl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/aakashsr/mastering-the-javascript-this-keyword-4pfa"&gt;Mastering the JavaScript "this" Keyword — Aakash Srivastav&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/sargalias/this-binding-in-javascript-4-new-binding-2p1n"&gt;This binding in JavaScript – 4. New binding — Spyros Argalias&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/thatgalnatalie/a-quick-intro-to-this-in-javascript-2mhp"&gt;A quick intro to 'this' in JavaScript — Natalie Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/developerkaren/a-conversation-with-the-this-keyword-in-javascript-3j6g"&gt;A conversation with the 'this' keyword in Javascript — Karen Efereyan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jscurious.com/what-are-call-apply-and-bind-in-javascript/"&gt;What are call(), apply() and bind() in JavaScript — Amitav Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yasemincidem.medium.com/understanding-this-binding-in-javascript-86687397c76d"&gt;Understanding 'this' binding in JavaScript — Yasemin Cidem&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dmitripavlutin.com/javascript-this-interview-questions/"&gt;Top 7 tricky questions of 'this' keyword&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=c0mLRpw-9rI"&gt;JavaScript call, apply and bind — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=AYVYxezrMWA"&gt;JavaScript Practical Applications of Call, Apply and Bind functions— techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Uy0NOXLBraE"&gt;JavaScript (call, bind, apply) — curious aatma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=AOSYY1_np_4"&gt;Understanding Functions and 'this' In The World of ES2017 — Bryan Hughes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GhbhD1HR5vk"&gt;bind and this - Object Creation in JavaScript - FunFunFunction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uBdH0iB1VDM"&gt;JS Function Methods call(), apply(), and bind() — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=75W8UPQ5l7k&amp;amp;t=261s"&gt;call, apply and bind method in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;.[Javascript Interview Questions ( Call, Bind and Apply ) - Polyfills, Output Based, Explicit Binding - Roadside Coder] (&lt;a href="https://youtu.be/VkmUOktYDAU?si=SdvLZ8FBmephPxjS"&gt;https://youtu.be/VkmUOktYDAU?si=SdvLZ8FBmephPxjS&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;16. new, Constructor, instanceof and Instances&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-for-beginners-the-new-operator-cee35beb669e"&gt;JavaScript For Beginners: the 'new' operator — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/demystifying-javascripts-new-keyword-874df126184c"&gt;Let's demystify JavaScript's 'new' keyword — Cynthia Lee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/constructor-new"&gt;Constructor, operator "new" — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://css-tricks.com/understanding-javascript-constructors/"&gt;Understanding JavaScript Constructors — Faraz Kelhini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://openclassrooms.com/en/courses/3523231-learn-to-code-with-javascript/4379006-use-constructor-functions"&gt;Use Constructor Functions — Openclassrooms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://2ality.com/2017/08/type-right.html"&gt;Beyond &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;: simplifying dynamic type checks — Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascriptrefined.io/function-and-object-instances-of-each-other-1e1095d5faac"&gt;Function and Object, instances of each other — Kiro Risk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flexiple.com/javascript/instanceof-javascript"&gt;JavaScript instanceof operator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;17. Prototype Inheritance and Prototype Chain&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain"&gt;Inheritance and the prototype chain — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@parsyval/javascript-prototype-vs-class-a7015d5473b"&gt;Javascript : Prototype vs Class — Valentin PARSY&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mathiasbynens.be/notes/prototypes"&gt;JavaScript engine fundamentals: optimizing prototypes — Mathias Bynens&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-prototype-cb29d82b8809"&gt;JavaScript Prototype — NC Patro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/prototypes-in-javascript-5bba2990e04b"&gt;Prototypes in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/prototype-in-js-busted-5547ec68872"&gt;Prototype in JavaScript: it's quirky, but here's how it works — Pranav Jindal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-javascript-prototype-and-inheritance-d55a9a23bde2"&gt;Understanding JavaScript: Prototype and Inheritance — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/_hridaysharma/understanding-classes-es5-and-prototypal-inheritance-in-javascript-n8d"&gt;Understanding Classes (ES5) and Prototypal Inheritance in JavaScript — Hridayesh Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/varundey/prototype-proto-and-prototypal-inheritance-in-javascript-2inl"&gt;prototype, &lt;strong&gt;proto&lt;/strong&gt; and Prototypal inheritance in JavaScript — Varun Dey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/prototype-inheritance"&gt;Prototypal Inheritance — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/understanding-prototypes-and-inheritance-in-javascript"&gt;How To Work with Prototypes and Inheritance in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/master-javascript-prototypes-inheritance-d0a9a5a75c4e"&gt;Master JavaScript Prototypes &amp;amp; Inheritance — Arnav Aggarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/understanding-prototypal-inheritance-in-javascript-with-css-93b2fcda75e4"&gt;JavaScript's Prototypal Inheritance Explained Using CSS — Nash Vail&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/derhuerst/a585c4916b1c361cc6f0"&gt;Prototypal Inheritance in JavaScript — Jannis Redmann&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/demystifying-es6-classes-and-prototypal-inheritance"&gt;Demystifying ES6 Classes And Prototypal Inheritance ― Neo Ighodaro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/danny/intro-to-prototypal-inheritance---js-9di"&gt;Intro To Prototypal Inheritance — Dharani Jayakanthan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/varche/let-s-build-prototypal-inheritance-in-js-56mm"&gt;Let's Build Prototypal Inheritance in JS — var-che&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/attacomsian/objects-prototypes-and-classes-in-javascript-3i9b"&gt;Objects, Prototypes and Classes in JavaScript — Atta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ladybenko/the-magical-world-of-javascript-prototypes-1mhg"&gt;The magical world of JavaScript prototypes — Belén&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lawrence_eagles/understanding-prototypal-inheritance-in-javascript-4f31#chp-4"&gt;Understanding Prototypal Inheritance In JavaScript — Lawrence Eagles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/irenejpopova/objects-and-prototypes-in-javascript-2eie"&gt;Objects and Prototypes in JavaScript — Irena Popova&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=sOrtAjyk4lQ"&gt;Javascript Prototype Inheritance — Avelx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=7oNWNlMrkpc"&gt;JavaScript Prototype Inheritance Explained pt. I — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uIlj6_z_wL8"&gt;JavaScript Prototype Inheritance Explained pt. II — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qMO-LTOrJaE"&gt;JavaScript Prototype Inheritance Explained — Kyle Robinson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=G6l5CHl67HQ"&gt;Advanced Javascript - Prototypal Inheritance In 1 Minute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=phwzuiJJPpQ"&gt;An Overview Of Classical Javascript Classes and Prototypal Inheritance — Pentacode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4jb4AYEyhRc"&gt;Object Oriented JavaScript - Prototype — The Net Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2rkEbcptR64"&gt;Prototype in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oCwCcNvaXAQ"&gt;JavaScript Using Prototypes — O'Reilly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XskMWBXNbp0"&gt;A Beginner's Guide to Javascript's Prototype — Tyler Mcginnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hS_WqkyUah8"&gt;Prototypes in Javascript - p5.js Tutorial — The Coding Train&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS/tree/1st-ed"&gt;You Don't Know JS, 1st Edition: this &amp;amp; Object Prototypes — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.google.com.pk/books/edition/The_Principles_of_Object_Oriented_JavaSc/rorlAwAAQBAJ?hl=en&amp;amp;gbpv=1&amp;amp;pg=PP1&amp;amp;printsec=frontcover"&gt;The Principles of Object-Oriented JavaScript - Nicholas C. Zakas&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;18. Object.create and Object.assign&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create"&gt;Object.create() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign"&gt;Object.assign() — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@happymishra66/object-create-in-javascript-fa8674df6ed2"&gt;Object.create in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.htmlgoodies.com/beyond/javascript/object.create-the-new-way-to-create-objects-in-javascript.html"&gt;Object.create(): the New Way to Create Objects in JavaScript — Rob Gravelle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://adripofjavascript.com/blog/drips/basic-inheritance-with-object-create.html"&gt;Basic Inheritance with Object.create — Joshua Clanton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/object-create-javascript/"&gt;Object.create() In JavaScript — GeeksforGeeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@jonathanvox01/understanding-the-difference-between-object-create-and-the-new-operator-b2a2f4749358"&gt;Understanding the difference between Object.create() and the new operator — Jonathan Voxland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/javascript-object-creation-patterns-best-practises/"&gt;JavaScript Object Creation: Patterns and Best Practices — Jeff Mott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/js-dealing-with-objects"&gt;Dealing With Objects in JavaScript With Object.assign, Object.keys and hasOwnProperty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/bar-talk/copying-objects-in-javascript"&gt;Copying Objects in JavaScript ― Orinami Olatunji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-object-assign-bc9696dcbb6e"&gt;JavaScript: Object.assign() — Thiago S. Adriano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flaviocopes.com/how-to-clone-javascript-object/"&gt;How to deep clone a JavaScript Object — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/vzing/object-create-when-and-why-to-use-20m9"&gt;Object.create(): When and Why to Use — VZing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aw7NfYhR5rc"&gt;Object.assign() explained — Aaron Writes Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9Ky4X6inpi4"&gt;Object.assign() Method — techsith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;19. map, reduce, filter&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/jsguru/javascript-functional-programming-map-filter-and-reduce-846ff9ba492d"&gt;JavaScript Functional Programming — map, filter and reduce — Bojan Gvozderac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@joomiguelcunha/learn-map-filter-and-reduce-in-javascript-ea59009593c4"&gt;Learn map, filter and reduce in Javascript — João Miguel Cunha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://danmartensen.svbtle.com/javascripts-map-reduce-and-filter"&gt;JavaScript's Map, Reduce, and Filter — Dan Martensen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.tutsplus.com/tutorials/how-to-use-map-filter-reduce-in-javascript--cms-26209"&gt;How to Use Map, Filter, &amp;amp; Reduce in JavaScript — Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-learn-to-chain-map-filter-and-reduce-acd2d0562cd4"&gt;JavaScript — Learn to Chain Map, Filter, and Reduce — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/write-beautiful-javascript-with-%CE%BB-fp-es6-350cd64ab5bf"&gt;Javascript data structure with map, reduce, filter and ES6 — Deepak Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-map-filter-and-reduce-in-javascript-5df1c7eee464"&gt;Understanding map, filter and reduce in Javascript — Luuk Gruijs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/functional-programming-in-js-map-filter-reduce-pt-5-308a205fdd5f"&gt;Functional Programming in JS: map, filter, reduce (Pt. 5) — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wsvincent.com/functional-javascript-map-filter-reduce/"&gt;JavaScript: Map, Filter, Reduce — William S. Vincent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/es6-arrow-functions-new-fat-concise-syntax-javascript/"&gt;Arrow Functions: Fat and Concise Syntax in JavaScript — Kyle Pennell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-arrow-functions-for-beginners-926947fc0cdc"&gt;JavaScript: Arrow Functions for Beginners — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/when-and-why-you-should-use-es6-arrow-functions-and-when-you-shouldnt-3d851d7f0b26"&gt;When (and why) you should use ES6 arrow functions — and when you shouldn't — Cynthia Lee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-learn-understand-arrow-functions-fe2083533946"&gt;JavaScript — Learn &amp;amp; Understand Arrow Functions — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/podiihq/javascript-arrow-functions-27d4c3334b83"&gt;(JavaScript )=&amp;gt; Arrow functions — sigu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@panderson.dev/javascript-reduce-79aab078da23"&gt;Javascript.reduce() — Paul Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gofore.com/en/why-you-should-replace-foreach/"&gt;Why you should replace forEach with map and filter in JavaScript — Roope Hakulinen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/poka-techblog/simplify-your-javascript-use-map-reduce-and-filter-bd02c593cc2d"&gt;Simplify your JavaScript – Use .map(), .reduce(), and .filter() — Etienne Talbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.codeanalogies.com/2018/07/24/javascripts-reduce-method-explained-by-going-on-a-diet/"&gt;JavaScript's Reduce Method Explained By Going On a Diet — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@amiratak88/difference-between-map-filter-and-reduce-in-javascript-822ff79d5160"&gt;Difference between map, filter and reduce in JavaScript — Amirata Khodaparast&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/map-filter-reduce-ebbed4be4201"&gt;Map⇄Filter⇄Reduce↻ — ashay mandwarya&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/finding-your-way-with-map-aecb8ca038f6"&gt;Finding Your Way With .map() — Brandon Wozniewicz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-write-your-own-map-filter-and-reduce-functions-in-javascript-ab1e35679d26"&gt;How to write your own map, filter and reduce functions in JavaScript — Hemand Nair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/manipulating-arrays-in-javascript/"&gt;How to Manipulate Arrays in JavaScript — Bolaji Ayodeji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/15-useful-javascript-examples-of-map-reduce-and-filter-74cbbb5e0a1f"&gt;How to simplify your codebase with map(), reduce(), and filter() in JavaScript — Alex Permyakov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/pickleat/map-filter-and-reduce-2efb"&gt;.map(), .filter(), and .reduce() — Andy Pickle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/chrisachard/map-filter-reduce-crash-course-5gan"&gt;Map/Filter/Reduce Crash Course — Chris Achard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@js_tut/map-filter-and-reduce-animated-7fe391a35a47"&gt;Map, Filter and Reduce – Animated — JavaScript Teacher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/uptheirons78/map-filter-reduce-and-others-arrays-iterators-you-must-know-to-become-an-algorithms-wizard-4209"&gt;Map, Filter, Reduce and others Arrays Iterators You Must Know to Become an Algorithms Wizard — Mauro Bono&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://betterprogramming.pub/how-to-javascripts-map-vs-filter-vs-reduce-80d87a5a0a24"&gt;How to Use JavaScript's .map, .filter, and .reduce — Avery Duffin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-in-plain-english/using-map-filter-and-reduce-properly-50e07f80c8b2"&gt;Using .map(), .filter() and .reduce() properly — Sasanka Kudagoda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/sanderdebr/mastering-the-javascript-reduce-method-2foj"&gt;Mastering the JavaScript Reduce method ✂️ — sanderdebr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-map-how-to-use-the-js-map-function-array-method/"&gt;JavaScript Map – How to Use the JS .map() Function (Array Method) — FreeCodeCamp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=UXiYii0Y7Nw"&gt;Map, Filter and Reduce — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/zdp0zrpKzIE?si=6QusFzD6tmwn-el4"&gt;Map, Filter and Reduce - Akshaay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=vytzLlY_wmU"&gt;Functional JavaScript: Map, forEach, Reduce, Filter — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qTeeVd8hOFY"&gt;JavaScript Array superpowers: Map, Filter, Reduce (part I) — Michael Rosata&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=gIm9xLYudL0"&gt;JavaScript Array superpowers: Map, Filter, Reduce (part 2) — Michael Rosata&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zYBeEPxNSbw"&gt;JavaScript Higher Order Functions - Filter, Map, Sort &amp;amp; Reduce — Epicop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4qWlqD0yYTU"&gt;[Array Methods 2/3] .filter + .map + .reduce — CodeWithNick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6sQDTgOqh-I"&gt;Arrow functions in JavaScript - What, Why and How — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=e-5obm1G_FY&amp;amp;t=1521s"&gt;Learning Functional Programming with JavaScript — Anjana Vakil - JSUnconf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=bCqtb-Z5YGQ&amp;amp;t=17s"&gt;Map - Parte 2 JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Wl98eZpkp-c"&gt;Reduce basics - Part 3 of FP in JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1DMolJ2FrNY&amp;amp;t=621s"&gt;Reduce Advanced - Part 4 of FP in JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=IXp06KekEjM"&gt;reduce Array Method | JavaScript Tutorial - Florin Pop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=P4RAFdZDn3M"&gt;map Array Method | JavaScript Tutorial - Florin Pop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/Ah7-PPjQ5Ls"&gt;Different array methods in 1 minute | Midudev (Spanish)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;20. Pure Functions, Side Effects, State Mutation and Event Propagation&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/javascript-and-functional-programming-pt-3-pure-functions-d572bb52e21c"&gt;Javascript and Functional Programming — Pure Functions — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976"&gt;Master the JavaScript Interview: What is a Pure Function? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@jamesjefferyuk/javascript-what-are-pure-functions-4d4d5392d49c"&gt;JavaScript: What Are Pure Functions And Why Use Them? — James Jeffery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.nicoespeon.com/en/2015/01/pure-functions-javascript/"&gt;Pure functions in JavaScript — @nicoespeon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/functional-programming-pure-functions/"&gt;Functional Programming: Pure Functions — Arne Brasseur&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://alistapart.com/article/making-your-javascript-pure"&gt;Making your JavaScript Pure — Jack Franklin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@fknussel/arrays-objects-and-mutations-6b23348b54aa"&gt;Arrays, Objects and Mutations — Federico Knüssel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/the-state-of-immutability-169d2cd11310"&gt;The State of Immutability — Maciej Sikora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/zurvin/hablemos-de-inmutabilidad-3dc65d290783"&gt;Hablemos de Inmutabilidad — Kike Sanchez&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jrsinclair.com/articles/2018/how-to-deal-with-dirty-side-effects-in-your-pure-functional-javascript/"&gt;How to deal with dirty side effects in your pure functional JavaScript — James Sinclair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://davidwalsh.name/preventing-sideeffects-javascript"&gt;Preventing Side Effects in JavaScript — David Walsh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wsvincent.com/javascript-pure-functions/"&gt;JavaScript: Pure Functions — William S. Vincent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/functional-programming-paradigms-in-modern-javascript-pure-functions-797d9abbee1"&gt;Functional programming paradigms in modern JavaScript: Pure functions — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/understanding-javascript-mutation-and-pure-functions-7231cc2180d3"&gt;Understanding Javascript Mutation and Pure Functions — Chidume Nnamdi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@bluepnume/functional-ish-javascript-205c05d0ed08"&gt;Functional-ish JavaScript — Daniel Brain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events"&gt;Event Propagation — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/bubbling-and-capturing"&gt;Event Propagation — Bubbling and capturing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dZ41D6LDSBg"&gt;Pure Functions — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Jh_Uzqzz_wM"&gt;Pure Functions - Functional Programming in JavaScript — Paul McBride&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=frT3H-eBmPc"&gt;JavaScript Pure Functions — Seth Alexander&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=AHbRVJzpB54"&gt;JavaScript Pure vs Impure Functions Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BMUiFMZr7vk"&gt;Pure Functions - Programação Funcional: Parte 1 - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JYc7gr9Ehl0"&gt;Event Propagation - JavaScript Event Bubbling and Propagation - Steve Griffith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;21. Closures&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures"&gt;Closures — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/closure"&gt;Closure — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/i-never-understood-javascript-closures-9663703368e8"&gt;I never understood JavaScript closures — Olivier De Meulder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://javascriptissexy.com/understand-javascript-closures-with-ease/"&gt;Understand JavaScript Closures With Ease — Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/understanding-javascript-closures-da6aab330302"&gt;Understanding JavaScript Closures — Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/understand-closures-in-javascript-d07852fa51e7"&gt;Understand Closures in JavaScript — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/javascript-closures-simplified-d0d23fa06ba4"&gt;A simple guide to help you understand closures in JavaScript — Prashant Ram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/understanding-javascript-closures-a-practical-approach"&gt;Understanding JavaScript Closures: A Practical Approach — Paul Upendo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-javascript-closures-4188edf5ea1b"&gt;Understanding JavaScript: Closures — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/how-to-use-javascript-closures-with-confidence-85cd1f841a6b"&gt;How to use JavaScript closures with confidence — Léna Faure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://howchoo.com/g/mge2mji2mtq/javascript-closures-by-example"&gt;JavaScript closures by example — tyler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-closures-and-scope-3784c75b9290"&gt;JavaScript — Closures and Scope — Alex Aitken&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/discover-the-power-of-closures-in-javascript-5c472a7765d7"&gt;Discover the power of closures in JavaScript — Cristi Salcescu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reallifejs.com/the-meat/getting-closure/"&gt;Getting Closure — RealLifeJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ritik_dev_js/what-the-hack-is-closure-currying-and-iife-in-javascript-32m9"&gt;Closure, Currying and IIFE in JavaScript — Ritik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/a-beginners-guide-to-closures-in-javascript-97d372284dda"&gt;Understanding Closures in JavaScript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/a-basic-guide-to-closures-in-javascript-9fc8b7e3463e"&gt;A basic guide to Closures in JavaScript — Parathan Thiyagalingam&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/steelvoltage/closures-using-memoization-3597"&gt;Closures: Using Memoization — Brian Barbour&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://betterprogramming.pub/a-brief-introduction-to-closures-and-lexical-scoping-in-javascript-8a5866496232"&gt;A Brief Introduction to Closures and Lexical Scoping in JavaScript — Ashutosh K Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/stereobooster/demystify-closures-5g42"&gt;Demystify Closures — stereobooster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/boywithsilverwings/scopes-and-closures-javascript-concepts-4dfj"&gt;Scopes and Closures - JavaScript Concepts — Agney Menon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/mattpopovich/understanding-closures-in-javascript-3k0d"&gt;Understanding Closures in JavaScript — Matt Popovich&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://whatthefuck.is/closure"&gt;whatthefuck.is · A Closure - Dan Abramov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/brandonleboeuf/closure-in-javascript-49n7"&gt;Closures in JavaScript can... - Brandon LeBoeuf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/this_mkhy/do-you-know-es6-part-3-advanced-3fcl#Closures-2"&gt;Do you know Closures - Mohamed Khaled&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XTAzsODSCsM"&gt;JavaScript The Hard Parts: Closure, Scope &amp;amp; Execution Context - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/qikxEIxsXco?si=fGFgUHuaOW49Wg9p"&gt;Namaste Javascript by Akshay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=71AtaJpJHw0"&gt;Javascript Closure — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=CQqwU2Ixu-U"&gt;Closures — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-xqJo5VRP4A"&gt;Closures in JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yiEeiMN2Khs"&gt;JavaScript Closures 101: What is a closure? — JavaScript Tutorials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1JsJx1x35c0"&gt;Closures — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-rLrGAXK8WE"&gt;JavaScript Closures — CodeWorkr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qikxEIxsXco"&gt;Closures in JS - Akshay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/xa8lhVwQBw4"&gt;CLOSURES en JavaScript: Qué son y cómo funcionan - Carlos Azaustre&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3a0I8ICR1Vg"&gt;Learn Closures In 7 Minutes - Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;22. High Order Functions&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://eloquentjavascript.net/05_higher_order.html"&gt;Eloquent JavaScript, 3rd Edition: Ch. 5 - Higher-order Functions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/higher-order-functions-javascript/"&gt;Higher-Order Functions in JavaScript — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/higher-order-functions-in-javascript-d9101f9cf528"&gt;Higher Order Functions: Using Filter, Map and Reduce for More Maintainable Code — Guido Schmitz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/effective-functional-javascript-first-class-and-higher-order-functions-713fde8df50a"&gt;First-class and Higher Order Functions: Effective Functional JavaScript — Hugo Di Francesco&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.lullabot.com/articles/higher-order-functions-in-javascript"&gt;Higher Order Functions in JavaScript — John Hannah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pedroapfilho/high-order-functions"&gt;Just a reminder on how to use high order functions — Pedro Filho&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/understanding-higher-order-functions-in-javascript-75461803bad"&gt;Understanding Higher-Order Functions in JavaScript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/nuel_ikwuoma/higher-order-functions-a-pragmatic-approach-51fb"&gt;Higher Order Functions - A pragmatic approach — emmanuel ikwuoma&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=rRgD1yVwIvE"&gt;JavaScript Higher Order Functions &amp;amp; Arrays — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BMUiFMZr7vk"&gt;Higher Order Functions — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dTlpYnmBW9I"&gt;Higher Order Functions in Javascript — Raja Yogan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GYRMNp1SKXA"&gt;Higher Order Iterators in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=H4awPsyugS0"&gt;Higher Order Functions in JavaScript — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=7E8ctomPQJw"&gt;Part 1: An Introduction to Callbacks and Higher Order Functions - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=28MXziDZkE4"&gt;Part 2: Understanding Why We Need Higher Order Functions - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HkWxvB1RJq0"&gt;Higher-Order Functions ft. Functional Programming - Akshay Saini&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;23. Recursion&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/recursion-in-javascript-1608032c7a1f"&gt;Recursion in JavaScript — Kevin Ennis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@zfrisch/understanding-recursion-in-javascript-992e96449e03"&gt;Understanding Recursion in JavaScript — Zak Frisch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/learn-and-understand-recursion-in-javascript-b588218e87ea"&gt;Learn and Understand Recursion in JavaScript — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/recursion-functional-javascript/"&gt;Recursion in Functional JavaScript — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/programming-with-js-recursion-31371e2bf808"&gt;Programming with JS: Recursion — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/simov/anonymous-recursion-in-javascript"&gt;Anonymous Recursion in JavaScript — simo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.jstips.co/en/javascript/recursion-iteration-and-tail-calls-in-js/"&gt;Recursion, iteration and tail calls in JS — loverajoel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/what-is-recursion-in-javascript/"&gt;What is Recursion? A Recursive Function Explained with JavaScript Code Examples — Nathan Sebhastian&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@newmanbradm/intro-to-recursion-984a8bd50f4b"&gt;Intro to Recursion — Brad Newman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.datadriveninvestor.com/accio-recursion-your-new-favorite-javascript-spell-7e10d3125fb3"&gt;Accio Recursion!: Your New Favorite JavaScript Spell — Leanne Cabey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/christinamcmahon/recursion-explained-with-examples-4k1m"&gt;Recursion Explained (with Examples) — Christina&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=VtG0WAUvq2w"&gt;Recursion In JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=k7-N8R0-KY4"&gt;Recursion — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=vLhHyGTkjCs"&gt;Recursion and Recursive Functions — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=kGXVsd8pBLw"&gt;Recursion: Recursion() — JS Monthly — Lucas da Costa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uyjsR9eNTIw"&gt;Recursive Function in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Mv9NEXX1VHc"&gt;What on Earth is Recursion? — Computerphile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9NO5dXSlbv8"&gt;Javascript Tutorial 34: Introduction To Recursion — codedamn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=FmiQr4nfoPQ"&gt;Recursion, Iteration, and JavaScript: A Love Story | JSHeroes 2018 — Anjana Vakil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=lMBVwYrmFZQ&amp;amp;ab_channel=ColtSteele"&gt;Recursion crash course - Colt Steele&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6oDQaB2one8"&gt;What Is Recursion - In Depth - Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;24. Collections and Generators&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator"&gt;Generator — MDN web docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/es6-collections-map-set-weakmap-weakset/"&gt;ES6 Collections: Using Map, Set, WeakMap, WeakSet — Kyle Pennell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/es6-weakmaps-sets-and-weaksets-in-depth"&gt;ES6 WeakMaps, Sets, and WeakSets in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/map-set-weakmap-weakset"&gt;Map, Set, WeakMap and WeakSet — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/mildrenben/maps-in-es6---a-quick-guide-35pk"&gt;Maps in ES6 - A Quick Guide — Ben Mildren&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/es6-set-vs-array-what-and-when-efc055655e1a"&gt;ES6 — Set vs Array — What and when? — Maya Shavin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/es6-map-vs-object-what-and-when-b80621932373"&gt;ES6 — Map vs Object — What and when? — Maya Shavin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/array-vs-set-vs-map-vs-object-real-time-use-cases-in-javascript-es6-47ee3295329b"&gt;Array vs Set vs Map vs Object — Real-time use cases in Javascript (ES6/ES7) — Rajesh Babu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/claireparker/how-to-create-an-array-of-unique-values-in-javascript-using-sets-5dg6"&gt;How to create an array of unique values in JavaScript using Sets — Claire Parker-Jones&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/what-you-should-know-about-es6-maps-dc66af6b9a1e"&gt;What You Should Know About ES6 Maps — Just Chris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/es6-maps-in-depth"&gt;ES6 Maps in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/what-are-javascript-generators-and-how-to-use-them-c6f2713fd12e"&gt;What are JavaScript Generators and how to use them — Vladislav Stepanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/understanding-generators-in-es6-javascript-with-examples-6728834016d5"&gt;Understanding JavaScript Generators With Examples — Arfat Salman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://davidwalsh.name/es6-generators"&gt;The Basics of ES6 Generators — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/kallaugher/an-introduction-to-javascript-generators-1224"&gt;An Introduction to JavaScript Generators — Alice Kallaugher&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ycohYSx5h9w"&gt;JavaScript ES6 / ES2015 Set, Map, WeakSet and WeakMap — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dcP039DYzmE"&gt;JavaScript ES6 / ES2015 - [11] Generators - Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=m4abICrldQI"&gt;The Differences between ES6 Maps and Sets — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QO07THdLWQo"&gt;Javascript Generators - THEY CHANGE EVERYTHING - ES6 Generators Harmony Generators — LearnCode.academy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;25. Promises&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"&gt;Promise — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/javascript-promises-for-dummies"&gt;JavaScript Promises for Dummies ― Jecelyn Yeen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-promises-in-javascript-13d99df067c1"&gt;Understanding promises in JavaScript — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-promise-27fc71e77261"&gt;Master the JavaScript Interview: What is a Promise? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/overview-javascript-promises/"&gt;An Overview of JavaScript Promises — Sandeep Panda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/promises-in-javascript-explained-277b98850de"&gt;How to use Promises in JavaScript — Prashant Ram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-implement-promises-in-javascript-1ce2680a7f51"&gt;Implementing Promises In JavaScript — Maciej Cieslar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-promises-explained-with-simple-real-life-analogies-dd6908092138"&gt;JavaScript: Promises explained with simple real life analogies — Shruti Kapoor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://exploringjs.com/es6/ch_promises.html"&gt;Promises for Asynchronous Programming — Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.codeanalogies.com/2018/08/26/javascript-promises-explained-by-gambling-at-a-casino/"&gt;JavaScript Promises Explained By Gambling At A Casino — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/datafire-io/es6-promises-patterns-and-anti-patterns-bbb21a5d0918"&gt;ES6 Promises: Patterns and Anti-Patterns — Bobby Brennan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/a-simple-guide-to-es6-promises-d71bacd2e13a"&gt;A Simple Guide to ES6 Promises — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/the-es6-promises-87a979ab27e4"&gt;The ES6 Promises — Manoj Singh Negi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/es6-promises-in-depth"&gt;ES6 Promises in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/playing-with-javascript-promises-a-comprehensive-approach-25ab752c78c3"&gt;Playing with Javascript Promises: A Comprehensive Approach — Rajesh Babu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-write-a-javascript-promise-4ed8d44292b8"&gt;How to Write a JavaScript Promise — Brandon Wozniewicz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@andrewly07/a-coding-writers-guide-an-introduction-to-es6-promises-9ff9f9e88f6c"&gt;A Coding Writer's Guide: An Introduction To ES6 Promises — Andrew Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/itnext/reverse-engineering-understand-promises-1jfc"&gt;Understanding Promises in JavaScript — Chris Noring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/zellwk/converting-callbacks-to-promises-nhn"&gt;Converting callbacks to promises — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/javascript-promises-zero-to-hero-plus-cheat-sheet-64d75051cffa"&gt;JavaScript Promises: Zero To Hero Plus Cheat Sheet — Joshua Saunders&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/boywithsilverwings/promises-javascript-concepts-293c"&gt;Promises - JavaScript concepts — Agney Menon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/iggredible/javascript-promise-101-3idl"&gt;Javascript &lt;code&gt;Promise&lt;/code&gt; 101 — Igor Irianto&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/sunnysingh/simplify-javascript-promises-4djb"&gt;Simplify JavaScript Promises — Sunny Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lydiahallie/javascript-visualized-promises-async-await-5gke"&gt;JavaScript Visualized: Promises &amp;amp; Async/Await — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/peterklingelhofer/promises-in-javascript-3h5k"&gt;Promises in JavaScript — Peter Klingelhofer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/somedood/best-practices-for-es6-promises-36da"&gt;Best Practices for ES6 Promises — Basti Ortiz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/zurvin/lo-que-debemos-saber-de-escript-2020-5fc61da5e4cd"&gt;Lo que debemos saber de EScript 2020 — Kike Sanchez&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/promise-basics"&gt;Promise Basics - javascript.info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.webdevsimplified.com/2021-09/javascript-promises"&gt;The Complete JavaScript Promise Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/promise-chaining"&gt;Promise Chaining - javascript.info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=vQ3MoXnKfuQ"&gt;Let's Learn ES6 - Promises — Ryan Christiani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XJEHuBZQ5dU"&gt;JavaScript ES6 / ES2015 Promises — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2d7s3spWAzo"&gt;Promises — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=f8IgdnYIwOU"&gt;Error Handling Promises in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QO4NXhWo_NM"&gt;Promises Part 1 - Topics of JavaScript/ES6 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RvYYCGs45L4"&gt;JavaScript Promise in 100 Seconds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/3NjdOtHpcBM"&gt;JavaScript Promise in 9 Minutes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DHvZLI7Db8E"&gt;JavaScript Promises In 10 Minutes — Web Dev Simplified &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/ap-6PPAuK1Y?si=Ri1fopXeYjlrHzpf"&gt;Promises | Ep 02 Season 02 - Namaste JavaScript - Akshay Saini &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;26. async/await&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/async-await"&gt;async/await — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://eloquentjavascript.net/11_async.html"&gt;Eloquent JavaScript, 3rd Edition: Ch. 11 - Asynchronous Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://exploringjs.com/es6/ch_async.html"&gt;Exploring JS: Asynchronous Programming&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-async-await-in-javascript-1d81bb079b2c"&gt;Understanding async/await in Javascript — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/asynchronous-javascript-using-async-await"&gt;Asynchronous Javascript using async/await — Joy Warugu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flaviocopes.com/javascript-async-await/"&gt;Modern Asynchronous JavaScript with async/await — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@_bengarrison/javascript-es8-introducing-async-await-functions-7a471ec7de8a"&gt;Javascript — ES8 Introducing async/await Functions — Ben Garrison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/avoiding-the-async-await-hell-c77a0fb71c4c"&gt;How to escape async/await hell — Aditya Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/understanding-javascript-async-await"&gt;Understanding JavaScript's async await — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://techbrij.com/javascript-async-await-parallel-sequence"&gt;JavaScript Async/Await: Serial, Parallel and Complex Flow — TechBrij&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.pusher.com/promises-async-await/"&gt;From JavaScript Promises to Async/Await: why bother? — Chris Nwamba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/flow-control-callbacks-promises-async-await/"&gt;Flow Control in Modern JS: Callbacks to Promises to Async/Await — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/improve-your-asynchronous-javascript-code-with-async-and-await-c02fc3813eda"&gt;How to improve your asynchronous Javascript code with async and await — Indrek Lasn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@micksheridan.24/making-fetches-easy-with-async-await-8a1246efa1f6"&gt;Making Fetches Easy With Async Await — Mickey Sheridan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/gafi/7-reasons-to-always-use-async-await-over-plain-promises-tutorial-4ej9"&gt;7 Reasons Why JavaScript Async/Await Is Better Than Plain Promises — Mostafa Gaafar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/jscrambler/asynchronous-operations-in-javascript-2p6b"&gt;Asynchronous Operations in JavaScript — Jscrambler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/better-programming/should-i-use-promises-or-async-await-126ab5c98789"&gt;JavaScript: Promises or async-await — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/zhiyuanamos/async-await-from-zero-to-hero-a22"&gt;Async / Await: From Zero to Hero — Zhi Yuan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lydiahallie/javascript-visualized-promises-async-await-5gke"&gt;JavaScript Visualized: Promises &amp;amp; Async/Await — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Async_await"&gt;Making asynchronous programming easier with async and await — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-async-await-tutorial-learn-callbacks-promises-async-await-by-making-icecream/"&gt;JavaScript Async/Await Tutorial – Learn Callbacks, Promises, and Async/Await in JS by Making Ice Cream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.webdevsimplified.com/2021-11/async-await/"&gt;Better Than Promises - JavaScript Async/Await&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=exBgWAIeIeg"&gt;Asynchronous JavaScript Crash Course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9YkUCxvaLEk"&gt;Async + Await — Wes Bos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=SrNQS8J67zc"&gt;Asynchrony: Under the Hood — Shelley Vohr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=568g8hxJJp4&amp;amp;index=3&amp;amp;list=PL0zVEGEvSaeHJppaRLrqjeTPnCH6"&gt;async/await in JavaScript - What, Why and How — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XO77Fib9tSI&amp;amp;index=3&amp;amp;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx"&gt;async/await Part 1 - Topics of JavaScript/ES8 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=chavThlNz3s&amp;amp;index=4&amp;amp;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx"&gt;async/await Part 2 - Topics of JavaScript/ES8 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=krAYA4rvbdA"&gt;Complete Guide to JS Async &amp;amp; Await ES2017/ES8 — Colt Steele&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_9vgd9XKlDQ"&gt;Tips for using async/await in JavaScript — James Q Quick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=V_Kr9OSfDeU"&gt;JavaScript Async Await — Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/Gjbr21JLfgg?si=SDCVKr9ONw2GsNdT"&gt;Promise async and await in javascript — Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;27. Data Structures&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/siliconwat/data-structures-in-javascript-1b9aed0ea17c"&gt;Data Structures in JavaScript — Thon Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://itnext.io/algorithms-and-data-structures-in-javascript-a71548f902cb"&gt;Algorithms and Data Structures in JavaScript — Oleksii Trekhleb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/courses/10-need-to-know-javascript-concepts/data-structures-objects-and-arrays"&gt;Data Structures: Objects and Arrays ― Chris Nwamba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://blog.benoitvallon.com/data-structures-in-javascript/data-structures-in-javascript/"&gt;Data structures in JavaScript — Benoit Vallon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.cloudboost.io/playing-with-data-structures-in-javascript-stack-a55ebe50f29d"&gt;Playing with Data Structures in Javascript — Anish K.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/the-little-guide-of-queue-in-javascript-4f67e79260d9"&gt;The Little Guide of Queue in JavaScript — Germán Cutraro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/barretlee/algorithms"&gt;All algorithms writing with JavaScript in the book 'Algorithms Fourth Edition'&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nzakas/computer-science-in-javascript"&gt;Collection of classic computer science paradigms in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jamiebuilds/itsy-bitsy-data-structures"&gt;All the things you didn't know you wanted to know about data structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/miku86/series/3259"&gt;JavaScript Data Structures: 40 Part Series — miku86&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-in-plain-english/data-structures-understanding-graphs-82509d35e6b5"&gt;Data Structures: Understanding Graphs — Rachel Hawa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/freddieduffield/data-structures-two-ways-linked-list-2n61"&gt;Data Structures Two Ways: Linked List (Pt 1) — Freddie Duffield&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/freddieduffield/data-structures-two-ways-linked-list-pt2-2i60"&gt;Data Structures Two Ways: Linked List (Pt 2) — Freddie Duffield&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/amejiarosario/graph-data-structures-for-beginners-5edn"&gt;Graph Data Structures Explained in JavaScript — Adrian Mejia&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=H_EBPZgiAas&amp;amp;list=PLDmvslp_VR0zYUSth_8O69p4_cmvZEgLa"&gt;Algorithms In Javascript | Ace Your Interview — Eduonix Learning Solutions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Gj5qBheGOEo&amp;amp;list=PLWKjhJtqVAbkso-IbgiiP48n-O-JQA9PJ"&gt;Data Structures and Algorithms in JavaScript — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Ymh_AurrMbA"&gt;Learning JavaScript Data Structures and Algorithms: Sorting — Packt Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=41GSinwoMYA&amp;amp;ab_channel=Academind"&gt;JavaScript Data Structures: Getting Started — Academind&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;28. Expensive Operation and Big O Notation&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/cesars-tech-insights/big-o-notation-javascript-25c79f50b19b"&gt;Big O Notation in Javascript — César Antón Dorantes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-scene/time-complexity-big-o-notation-1a4310c3ee4b"&gt;Time Complexity/Big O Notation — Tim Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@gmedina229/big-o-in-javascript-36ff67766051"&gt;Big O in JavaScript — Gabriela Medina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bradoncode.com/blog/2012/04/big-o-algorithm-examples-in-javascript.html"&gt;Big O Search Algorithms in JavaScript — Bradley Braithwaite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/time-is-complex-but-priceless-f0abd015063c"&gt;Algorithms in plain English: time complexity and Big-O Notation — Michael Olorunnisola&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lofiandcode/an-introduction-to-big-o-notation-210o"&gt;An Introduction to Big O Notation — Joseph Trettevik&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HgA5VOFan5E"&gt;JavaScript: Intro to Big O Notation and Function Runtime — Eric Traub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=KatlvCFHPRo"&gt;Essential Big O for JavaScript Developers — Dave Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ALl86xJiTD8"&gt;Big O Notation - Time Complexity Analysis — WebTunings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=itn09C2ZB9Y"&gt;Learn Big O Notation In 12 Minutes - Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3yUuo7TqMW8"&gt;JavaScript Algorithms: Big-O Notation - Codevolution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JgWm6sQwS_I"&gt;JavaScript Algorithms Crash Course: Learn Algorithms &amp;amp; "Big O" from the Ground Up! - Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=LaexPVi1VRE"&gt;Big O Notation - Data Structures and Algorithms in Javascript - RoadSideCoder&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;29. Algorithms&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Crizstian/data-structure-and-algorithms-with-ES6"&gt;Data Structures and Algorithms using ES6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.thatjsdude.com/interview/js1.html"&gt;JS: Interview Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/siliconwat/algorithms-in-javascript-b0bed68f4038"&gt;Algorithms in JavaScript — Thon Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/javascript-objects-square-brackets-and-algorithms-e9a2916dc158"&gt;JavaScript Objects, Square Brackets and Algorithms — Dmitri Grabov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/felipernb/algorithms.js"&gt;Atwood's Law applied to CS101 - Classic algorithms and data structures implemented in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yangshun/lago"&gt;Data Structures and Algorithms library in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/idosela/algorithms-in-javascript"&gt;Collection of computer science algorithms and data structures written in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/trekhleb/algorithms-and-data-structures-in-javascript-49i3"&gt;Algorithms and Data Structures in JavaScript — Oleksii Trekhleb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/playlist?list=PLC3y8-rFHvwiRYB4-HHKHblh3_bQNJTMa"&gt;JavaScript Algorithms - Codevolution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/watch?v=oBt53YbR9Kk&amp;amp;t=1021s"&gt;Dynamic Programming - Learn to Solve Algorithmic Problems &amp;amp; Coding Challenges - FreeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/playlist?list=PLKhlp2qtUcSZtJefDThsXcsAbRBCSTgW4"&gt;Data Structures and Algorithms in Javascript | DSA with JS - RoadsideCoder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/playlist?list=PLn2ipk-jqgZiAHiA70hOxAj8RMUeqYNK3"&gt;Javascript Algorithms + Data Structures - KodingKevin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/watch?v=41GSinwoMYA"&gt;JavaScript Data Structures: Getting Started - Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/playlist?list=PLRqwX-V7Uu6ZiZxtDDRCi6uhfTH4FilpH"&gt;Algorithms and Data Structures - The Coding Train (Daniel Shiffman)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;30. Inheritance, Polymorphism and Code Reuse&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Inheritance"&gt;Inheritance in JavaScript — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/class-inheritance"&gt;Class inheritance, super — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/inheritance-in-javascript-21d2b82ffa6f"&gt;Inheritance in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/simple-inheritance-javascript/"&gt;Simple Inheritance with JavaScript — David Catuhe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-inheritance-25fe61ab9f85"&gt;JavaScript — Inheritance, delegation patterns and Object linking — NC Patro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.knoldus.com/object-oriented-javascript-polymorphism-with-examples/"&gt;Object Oriented JavaScript: Polymorphism with examples — Knoldus Blogs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/yld-blog/program-like-proteus-a-beginners-guide-to-polymorphism-in-javascript-867bea7c8be2"&gt;Program Like Proteus — A beginner's guide to polymorphism in Javascript — Sam Galson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/object-oriented-javascript-deep-dive-es6-classes/"&gt;Object-oriented JavaScript: A Deep Dive into ES6 Classes — Jeff Mott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://prototypr.io/post/unlocking-the-power-of-polymorphism-in-javascript-a-deep-dive"&gt;Unlocking the Power of Polymorphism in JavaScript: A Deep Dive&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yXlFR81tDBM"&gt;Inheritance in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RBLIm5LMrmc"&gt;JavaScript ES6 Classes and Inheritance — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zdovG9cuEBA"&gt;Polymorphism in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;31. Design Patterns&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://addyosmani.com/resources/essentialjsdesignpatterns/book/"&gt;Learning JavaScript Design Patterns — Addy Osmani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pepa.holla.cz/wp-content/uploads/2016/08/Pro-JavaScript-Design-Patterns.pdf"&gt;Pro JavaScript Design Patterns — Ross Harmes and Dustin Diaz&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-design-patterns-explained/"&gt;JavaScript Design Patterns – Explained with Examples — Germán Cocca&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know"&gt;4 JavaScript Design Patterns You Should Know — Devan Patel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/beginners-guide-to-mobile-web-development/javascript-design-patterns-25f0faaaa15"&gt;JavaScript Design Patterns – Beginner's Guide to Mobile Web Development — Soumyajit Pathak&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/javascript-design-patterns-ed9d4c144c81"&gt;JavaScript Design Patterns — Akash Pal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/understanding-design-patterns-in-javascript-13345223f2dd"&gt;JavaScript Design Patterns: Understanding Design Patterns in JavaScript - Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fbeline/Design-Patterns-JS"&gt;All the 23 (GoF) design patterns implemented in Javascript — Felipe Beline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/better-programming/the-power-of-the-module-pattern-in-javascript-3c73f7cd10e8"&gt;The Power of the Module Pattern in JavaScript — jsmanifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/omensah/design-patterns-for-developers-using-javascript----part-one--b3e"&gt;Design Patterns for Developers using JavaScript pt. I — Oliver Mensah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/omensah/design-patterns-for-developers-using-javascript---part-two--3p39"&gt;Design Patterns for Developers using JavaScript pt. II — Oliver Mensah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://levelup.gitconnected.com/design-patterns-in-modern-javascript-development-ec84d8be06ca"&gt;Design patterns in modern JavaScript development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/carlillo/understanding-design-patterns-iterator-using-dev-to-and-medium-social-networks-3bdd"&gt;Understanding Design Patterns: Iterator using Dev.to and Medium social networks! — Carlos Caballero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/kristijanfistrek/javascript-design-patterns-factory-pattern-562p"&gt;JavaScript Design Patterns - Factory Pattern — KristijanFištrek&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-in-plain-english/javascript-design-pattern-module-pattern-555737eccecd"&gt;JavaScript Design Pattern — Module Pattern - Factory Pattern — Moon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/better-programming/design-patterns-null-object-5ee839e37892"&gt;Design Patterns: Null Object - Carlos Caballero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/francescoxx/strategy-pattern-5oh"&gt;Strategy Pattern - Francesco Ciulla&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/francescoxx/adapter-pattern-5bjk"&gt;Adapter Pattern - Francesco Ciulla&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/jsmanifest/the-power-of-composite-pattern-in-javascript-2732"&gt;The Power of Composite Pattern in JavaScript - jsmanifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/bytebodger/in-defense-of-defensive-programming-k45"&gt;In Defense of Defensive Programming - Adam Nathaniel Davis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascriptpatterns.vercel.app/patterns"&gt;JavaScript Patterns Workshop — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.udacity.com/course/javascript-design-patterns--ud989"&gt;JavaScript Design Patterns — Udacity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hO7mzO83N1Q"&gt;JavaScript Patterns for 2017 — Scott Allen&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;32. Partial Applications, Currying, Compose and Pipe&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getify/Functional-Light-JS/raw/master/manuscript/ch3.md"&gt;Functional-Light JavaScript: Ch. 3 - Managing Function Inputs — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@pragyan88/writing-middleware-composition-and-currying-elegance-in-javascript-8b15c98a541b"&gt;Composition and Currying Elegance in JavaScript — Pragyan Das&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/javascript-functional-composition-for-every-day-use-22421ef65a10"&gt;Functional JavaScript: Function Composition For Every Day Use — Joel Thoms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@acparas/what-i-learned-today-july-2-2017-ab9a46dbf85f"&gt;Functional Composition: compose() and pipe() — Anton Paras&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://busypeoples.github.io/post/functional-composing-javascript/"&gt;Why The Hipsters Compose Everything: Functional Composing In JavaScript — A. Sharif&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jrsinclair.com/articles/2016/gentle-introduction-to-functional-javascript-functions/"&gt;A Gentle Introduction to Functional JavaScript pt III: Functions for making functions — James Sinclair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jsleao.wordpress.com/2015/02/22/curry-and-compose-why-you-should-be-using-something-like-ramda-in-your-code/"&gt;Curry And Compose (why you should be using something like ramda in your code) — jsanchesleao&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vanslaars.io/post/create-pipe-function/"&gt;Function Composition in JavaScript with Pipe — Andy Van Slaars&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.telerik.com/featured/practical-functional-javascript-ramda/"&gt;Practical Functional JavaScript with Ramda — Andrew D'Amelio, Yuri Takhteyev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/the-beauty-in-partial-application-currying-and-function-composition-d885bdf0d574"&gt;The beauty in Partial Application, Currying, and Function Composition — Joel Thoms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-scene/curry-or-partial-application-8150044c78b8"&gt;Curry or Partial Application? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://benalman.com/news/2012/09/partial-application-in-javascript/"&gt;Partial Application in JavaScript — Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/partial-application-of-functions-dbe7d9b80760"&gt;Partial Application of Functions — Functional Reactive Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://raganwald.com/2015/04/01/partial-application.html"&gt;Partial Application in ECMAScript 2015 — Ragan Wald&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1-1f15e387e536"&gt;So You Want to be a Functional Programmer pt. I — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-2-7005682cec4a"&gt;So You Want to be a Functional Programmer pt. II — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-3-1b0fd14eb1a7"&gt;So You Want to be a Functional Programmer pt. III — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-4-18fbe3ea9e49"&gt;So You Want to be a Functional Programmer pt. IV — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-5-c70adc9cf56a"&gt;So You Want to be a Functional Programmer pt. V — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/an-introduction-to-the-basic-principles-of-functional-programming-a2c2a15c84"&gt;An introduction to the basic principles of Functional Programming — TK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/the-renaissance-developer/concepts-of-functional-programming-in-javascript-6bc84220d2aa"&gt;Concepts of Functional Programming in javascript — TK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/an-introduction-to-functional-programming-style-in-javascript-71fcc050f064"&gt;An Introduction to Functional Programming Style in JavaScript — JavaScript Teacher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/a-practical-guide-to-writing-more-functional-javascript-db49409f71"&gt;A practical guide to writing more functional JavaScript — Nadeesha Cabral&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/benlesh/a-simple-explanation-of-functional-pipe-in-javascript-2hbj"&gt;A simple explanation of functional pipe in JavaScript — Ben Lesh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Wl2ejJOqHUU"&gt;Compose vs Pipe: Functional Programming in JavaScript — Chyld Studios&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jigHxo9YR30"&gt;JavaScript Functional Programing: Compose — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mth5WpEc4Qs"&gt;Function Composition - Functional JavaScript — NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Uam37AlzPYw"&gt;JavaScript Function Composition Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=VGB9HbL1GHk"&gt;Let's code with function composition — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DzLkRsUN2vE"&gt;Partial Application vs. Currying — NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jkebgHEcvac"&gt;JavaScript Partial Application — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=75W8UPQ5l7k&amp;amp;t=261s"&gt;call, apply and bind method in JavaScript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;33. Clean Code&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/clean-coding-for-beginners/"&gt;Clean Code Explained – A Practical Introduction to Clean Coding for Beginners — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;Clean Code concepts adapted for JavaScript — Ryan McDermott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@kevin_peters/function-parameters-in-javascript-clean-code-4caac109159b"&gt;Function parameters in JavaScript Clean Code — Kevin Peters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/keeping-your-code-clean-d30bcffd1a10"&gt;Keeping your code clean — Samuel James&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/modern-javascript-best-practices/"&gt;Best Practices for Using Modern JavaScript Syntax — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cross-js/cross-js"&gt;best practices for cross node/web development - Jimmy Wärting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ganderzz/on-writing-clean-code-57cm"&gt;Writing Clean Code - Dylan Paulus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/nityeshaga/writing-clean-code-and-the-practice-of-programming-actionable-advice-for-beginners-5f0k"&gt;Writing Clean Code and The Practice of Programming - Nityesh Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/d_ir/clean-code-dirty-code-human-code-6nm"&gt;Clean code, dirty code, human code - Daniel Irvine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/taillogs/practical-ways-to-write-better-javascript-26d4"&gt;Practical Ways to Write Better JavaScript - Ryland G&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/swlh/the-must-know-clean-code-principles-1371a14a2e75"&gt;The Must-Know Clean Code Principles - Kesk on Medium&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882/"&gt;The Clean Code Book - Robert C Martin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/how-to-use-destructuring-in-javascript-to-write-cleaner-more-powerful-code-9d1b38794050/"&gt;How to use destructuring in JavaScript to write cleaner, more powerful code - freecodecamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://betterprogramming.pub/write-clean-code-using-javascript-object-destructuring-3551302130e7"&gt;Write Clean Code Using JavaScript Object Destructuring - Asel Siriwardena&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/watch?v=Mus_vwhTCq0"&gt;JavaScript Pro Tips - Code This, NOT That&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/watch?v=b9c5GmmS7ks&amp;amp;list=PLWKjhJtqVAbkK24EaPurzMq0-kw5U9pJh&amp;amp;index=1"&gt;Clean Code playlist - Beau teaches&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://youtu.be/RMN_bkZ1KM0?si=Ssg3cNZ_DB7CIwKQ"&gt;JavaScript Best Practices and Coding Conventions - Write Clean Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://youtu.be/vPXzVNmCPg4?si=QR1k4E6Zx5H4mfcs"&gt;JavaScript Clean Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/watch?v=0wHyoBPc6zs"&gt;Tips On Learning How To Code&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img align="center" width="35" height="35" src="https://moein.video/wp-content/uploads/2022/05/license-GIF-Certificate-Royalty-Free-Animated-Icon-350px-after-effects-project.gif" /&gt; &lt;a id="license"&gt;License&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;This software is licensed under MIT License. See &lt;a href="https://github.com/leonardomso/33-js-concepts/raw/master/LICENSE"&gt;License&lt;/a&gt; for more information ©Leonardo Maldonado.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;strong&gt;Happy Learning! ⭐&lt;/strong&gt; 
 &lt;p&gt;If you find this repository helpful, please consider giving it a star!&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>UseInterstellar/Interstellar</title>
      <link>https://github.com/UseInterstellar/Interstellar</link>
      <description>&lt;p&gt;One of the most popular modern web proxies with blazing fast speeds and a variety of games.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/UseInterstellar/Interstellar/main/.github/branding/in.png" /&gt; 
 &lt;p&gt;Serving over 15 million users since 2022.&lt;/p&gt;
 &lt;p&gt; &lt;/p&gt;
 &lt;p&gt;Interstellar is a web proxy with a Clean and Sleek UI and easy to use menus. Our goal is to provide the best user experience to everyone.&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;img src="https://github.com/UseInterstellar/Interstellar/assets/89202835/2669efed-5186-4932-83c4-725acae60bd2" alt="inpreview" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] If you fork this project, consider giving it a star in the original repository!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Join Our &lt;a href="https://discord.gg/interstellar"&gt;Discord Community&lt;/a&gt; for support, more links, and an active community!&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;About:Blank Cloaking&lt;/li&gt; 
 &lt;li&gt;Tab Cloaking&lt;/li&gt; 
 &lt;li&gt;Wide collection of apps &amp;amp; games&lt;/li&gt; 
 &lt;li&gt;Clean, Easy to use UI&lt;/li&gt; 
 &lt;li&gt;Inspect Element&lt;/li&gt; 
 &lt;li&gt;Various Themes&lt;/li&gt; 
 &lt;li&gt;Password Protection (Optional)&lt;/li&gt; 
 &lt;li&gt;Built-in Tab System&lt;/li&gt; 
 &lt;li&gt;Now.gg Support&lt;/li&gt; 
 &lt;li&gt;Fast Speeds&lt;/li&gt; 
 &lt;li&gt;Geforce NOW Support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] You &lt;strong&gt;cannot&lt;/strong&gt; deploy to static web hosts, including Netlify, Cloudflare Pages, and GitHub Pages.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Password Protection&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to the &lt;code&gt;config.js&lt;/code&gt; file and set &lt;code&gt;challenge&lt;/code&gt; to &lt;strong&gt;true&lt;/strong&gt;. Then, set the environment variable as follows:&lt;/li&gt; 
 &lt;li&gt;For PNPM: Run either &lt;code&gt;config=true pnpm start&lt;/code&gt; or &lt;code&gt;$env:config=true; pnpm start&lt;/code&gt;, depending on your server.&lt;/li&gt; 
 &lt;li&gt;For Bun: Run either &lt;code&gt;config=true bun start&lt;/code&gt; or &lt;code&gt;$env:config=true; bun start&lt;/code&gt; if you prefer Bun.&lt;/li&gt; 
 &lt;li&gt;For NPM: Run either &lt;code&gt;config=true npm start&lt;/code&gt; or &lt;code&gt;$env:config=true; npm start&lt;/code&gt; if you prefer NPM.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Server Deployment&lt;/h3&gt; 
&lt;p&gt;You must run these commands on your server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/UseInterstellar/Interstellar
cd Interstellar
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Ad-Free Deployment&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone --branch Ad-Free https://github.com/UseInterstellar/Interstellar
cd Interstellar
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next depending on your package manager, run one of the following commands:&lt;/p&gt; 
&lt;h4&gt;Bun&lt;/h4&gt; 
&lt;p&gt;If you are using Bun, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bun i
bun start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;pnpm&lt;/h4&gt; 
&lt;p&gt;If you are using pnpm, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm i
pnpm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;npm&lt;/h4&gt; 
&lt;p&gt;If you are using npm, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i
npm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Updating&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd Interstellar
git pull --force --allow-unrelated-histories # This may overwrite your local changes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a target="_blank" href="https://heroku.com/deploy/?template=https://github.com/UseInterstellar/Interstellar"&gt;&lt;img alt="Deploy to Heroku" src="https://binbashbanana.github.io/deploy-buttons/buttons/remade/heroku.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://app.koyeb.com/deploy?type=git&amp;amp;repository=github.com/UseInterstellar/Interstellar"&gt;&lt;img alt="Deploy to Koyeb" src="https://binbashbanana.github.io/deploy-buttons/buttons/remade/koyeb.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Deployment Alternatives&lt;/h3&gt; 
&lt;p&gt;For more deployment options, join our &lt;a href="https://discord.gg/interstellar"&gt;Discord Server&lt;/a&gt; for various ways to deploy Interstellar. This includes methods of deploying to Render/OnRender.&lt;/p&gt; 
&lt;h4&gt;What happened to Replit Deployment?&lt;/h4&gt; 
&lt;p&gt;As of January 1st, 2024, Replit is &lt;a href="https://blog.replit.com/hosting-changes"&gt;no longer free&lt;/a&gt;. Try GitHub Codespaces instead.&lt;/p&gt; 
&lt;h3&gt;GitHub Codespaces&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you're setting the port below 1023, then you must run &lt;code&gt;sudo PORT=1023&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create a GitHub account if you haven't already.&lt;/li&gt; 
 &lt;li&gt;Click "Code" (green button) and then "Create Codespace on main."&lt;/li&gt; 
 &lt;li&gt;In the terminal at the bottom, paste &lt;code&gt;pnpm i &amp;amp;&amp;amp; pnpm start&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Respond to the application popup by clicking "Make public."&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Make sure you click the "Make public." button, or the proxy won't function properly.&lt;br /&gt; If you get a Range Error, go back and make sure you clicked Make public!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Access the deployed website from the ports tab.&lt;/li&gt; 
 &lt;li&gt;For subsequent uses in the same codespace, just run &lt;code&gt;pnpm start&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Solution for if there is no popup.&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run &lt;code&gt;pnpm i&lt;/code&gt;, and before &lt;code&gt;pnpm start&lt;/code&gt;, prepend &lt;code&gt;PORT=8080&lt;/code&gt;, replacing 8080 with another port. For example, &lt;code&gt;PORT=6969 pnpm start&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;If this does not work then you can prepend &lt;code&gt;$env:PORT=8080;&lt;/code&gt;, replacing 8080 with another port. For example, &lt;code&gt;$env:PORT=6969; pnpm start&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Go to the ports tab, Click Forward A Port, And type the port number.&lt;/li&gt; 
 &lt;li&gt;Right-click Visibility and set Port Visibility to Public.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] We are committed to making Interstellar easy and personalized however, as of now we need your support in making it ad-free. Consider keeping ads so Interstellar can run freely or contribute by being a supporter.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Report Issues&lt;/h2&gt; 
&lt;p&gt;If you encounter problems, open an issue on GitHub, and we'll address it promptly.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] If you're having trouble, don't hesitate to reach out to us on &lt;a href="https://discord.gg/interstellar"&gt;Discord&lt;/a&gt; for personalized support.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Credits&lt;/h1&gt; 
&lt;p&gt;A huge thanks goes out to all of the people who have contributed to Interstellar.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/UseInterstellar/Interstellar/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=UseInterstellar/Interstellar" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>github/awesome-copilot</title>
      <link>https://github.com/github/awesome-copilot</link>
      <description>&lt;p&gt;Community-contributed instructions, prompts, and configurations to help you make the most of GitHub Copilot.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🤖 Awesome GitHub Copilot Customizations&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://aka.ms/awesome-github-copilot"&gt;&lt;img src="https://img.shields.io/badge/Powered_by-Awesome_Copilot-blue?logo=githubcopilot" alt="Powered by Awesome Copilot" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/#contributors-"&gt;&lt;img src="https://img.shields.io/badge/all_contributors-89-orange.svg?style=flat-square" alt="All Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; 
&lt;p&gt;A curated collection of prompts, instructions, and chat modes to supercharge your GitHub Copilot experience across different domains, languages, and use cases.&lt;/p&gt; 
&lt;h2&gt;🚀 What is Awesome GitHub Copilot?&lt;/h2&gt; 
&lt;p&gt;This repository provides a comprehensive toolkit for enhancing GitHub Copilot with specialized:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.prompts.md"&gt;&lt;img src="https://img.shields.io/badge/Awesome-Prompts-blue?logo=githubcopilot" alt="Awesome Prompts" /&gt;&lt;/a&gt;&lt;/strong&gt; - Focused, task-specific prompts for generating code, documentation, and solving specific problems&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.instructions.md"&gt;&lt;img src="https://img.shields.io/badge/Awesome-Instructions-blue?logo=githubcopilot" alt="Awesome Instructions" /&gt;&lt;/a&gt;&lt;/strong&gt; - Comprehensive coding standards and best practices that apply to specific file patterns or entire projects&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.chatmodes.md"&gt;&lt;img src="https://img.shields.io/badge/Awesome-Chat_Modes-blue?logo=githubcopilot" alt="Awesome Chat Modes" /&gt;&lt;/a&gt;&lt;/strong&gt; - Specialized AI personas and conversation modes for different roles and contexts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.collections.md"&gt;&lt;img src="https://img.shields.io/badge/Awesome-Collections-blue?logo=githubcopilot" alt="Awesome Collections" /&gt;&lt;/a&gt;&lt;/strong&gt; - Curated collections of related prompts, instructions, and chat modes organized around specific themes and workflows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;MCP Server&lt;/h2&gt; 
&lt;p&gt;To make it easy to add these customizations to your editor, we have created a &lt;a href="https://developer.microsoft.com/blog/announcing-awesome-copilot-mcp-server"&gt;MCP Server&lt;/a&gt; that provides a prompt for searching and installing prompts, instructions, and chat modes directly from this repository. You'll need to have Docker installed and running to run the server.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://aka.ms/awesome-copilot/mcp/vscode"&gt;&lt;img src="https://img.shields.io/badge/VS_Code-Install-0098FF?logo=visualstudiocode&amp;amp;logoColor=white" alt="Install in VS Code" /&gt;&lt;/a&gt; &lt;a href="https://aka.ms/awesome-copilot/mcp/vscode-insiders"&gt;&lt;img src="https://img.shields.io/badge/VS_Code_Insiders-Install-24bfa5?logo=visualstudiocode&amp;amp;logoColor=white" alt="Install in VS Code Insiders" /&gt;&lt;/a&gt; &lt;a href="https://aka.ms/awesome-copilot/mcp/vs"&gt;&lt;img src="https://img.shields.io/badge/Visual_Studio-Install-C16FDE?logo=visualstudio&amp;amp;logoColor=white" alt="Install in Visual Studio" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Show MCP Server JSON configuration&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "servers": {
    "awesome-copilot": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "ghcr.io/microsoft/mcp-dotnet-samples/awesome-copilot:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;🔧 How to Use&lt;/h2&gt; 
&lt;h3&gt;🎯 Prompts&lt;/h3&gt; 
&lt;p&gt;Use the &lt;code&gt;/&lt;/code&gt; command in GitHub Copilot Chat to access prompts:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-plaintext"&gt;/awesome-copilot create-readme
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;📋 Instructions&lt;/h3&gt; 
&lt;p&gt;Instructions automatically apply to files based on their patterns and provide contextual guidance for coding standards, frameworks, and best practices.&lt;/p&gt; 
&lt;h3&gt;💭 Chat Modes&lt;/h3&gt; 
&lt;p&gt;Activate chat modes to get specialized assistance from AI personas tailored for specific roles like architects, DBAs, or security experts.&lt;/p&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Please see our &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt; for details on how to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add new prompts, instructions, or chat modes&lt;/li&gt; 
 &lt;li&gt;Improve existing content&lt;/li&gt; 
 &lt;li&gt;Report issues or suggest enhancements&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Contribution Guide&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Follow our file naming conventions and frontmatter requirements&lt;/li&gt; 
 &lt;li&gt;Test your contributions thoroughly&lt;/li&gt; 
 &lt;li&gt;Update the appropriate README tables&lt;/li&gt; 
 &lt;li&gt;Submit a pull request with a clear description&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;📖 Repository Structure&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-plaintext"&gt;├── prompts/          # Task-specific prompts (.prompt.md)
├── instructions/     # Coding standards and best practices (.instructions.md)
├── chatmodes/        # AI personas and specialized modes (.chatmode.md)
├── collections/      # Curated collections of related items (.collection.yml)
└── scripts/          # Utility scripts for maintenance
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🌟 Getting Started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Browse the Collections&lt;/strong&gt;: Check out our comprehensive lists of &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.prompts.md"&gt;prompts&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.instructions.md"&gt;instructions&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.chatmodes.md"&gt;chat modes&lt;/a&gt;, and &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.collections.md"&gt;collections&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Add to your editor&lt;/strong&gt;: Click the "Install" button to install to VS Code, or copy the file contents for other editors.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Start Using&lt;/strong&gt;: Copy prompts to use with &lt;code&gt;/&lt;/code&gt; commands, let instructions enhance your coding experience, or activate chat modes for specialized assistance.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;🛡️ Security &amp;amp; Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Security Issues&lt;/strong&gt;: Please see our &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/SECURITY.md"&gt;Security Policy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Support&lt;/strong&gt;: Check our &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/SUPPORT.md"&gt;Support Guide&lt;/a&gt; for getting help&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;: We follow the &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/CODE_OF_CONDUCT.md"&gt;Contributor Covenant&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎯 Why Use Awesome GitHub Copilot?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Productivity&lt;/strong&gt;: Pre-built prompts and instructions save time and provide consistent results&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Best Practices&lt;/strong&gt;: Benefit from community-curated coding standards and patterns&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Specialized Assistance&lt;/strong&gt;: Access expert-level guidance through specialized chat modes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Continuous Learning&lt;/strong&gt;: Stay updated with the latest patterns and practices across technologies&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Ready to supercharge your coding experience?&lt;/strong&gt; Start exploring our &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.prompts.md"&gt;prompts&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.instructions.md"&gt;instructions&lt;/a&gt;, and &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.chatmodes.md"&gt;chat modes&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href="https://allcontributors.org/docs/en/emoji-key"&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.aaron-powell.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/434140?v=4?s=100" width="100px;" alt="Aaron Powell" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Aaron Powell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=aaronpowell" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/#maintenance-aaronpowell" title="Maintenance"&gt;🚧&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/#projectManagement-aaronpowell" title="Project Management"&gt;📆&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/#promotion-aaronpowell" title="Promotion"&gt;📣&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://mubaidr.js.org/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2222702?v=4?s=100" width="100px;" alt="Muhammad Ubaid Raza" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Muhammad Ubaid Raza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=mubaidr" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://digitarald.de/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8599?v=4?s=100" width="100px;" alt="Harald Kirschner" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Harald Kirschner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=digitarald" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/mbianchidev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37507190?v=4?s=100" width="100px;" alt="Matteo Bianchi" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Matteo Bianchi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=mbianchidev" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/AungMyoKyaw"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9404824?v=4?s=100" width="100px;" alt="Aung Myo Kyaw" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Aung Myo Kyaw&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=AungMyoKyaw" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://danielscottraynsford.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7589164?v=4?s=100" width="100px;" alt="Daniel Scott-Raynsford" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel Scott-Raynsford&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=PlagueHO" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/burkeholland"&gt;&lt;img src="https://avatars.githubusercontent.com/u/686963?v=4?s=100" width="100px;" alt="Burke Holland" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Burke Holland&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=burkeholland" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://calva.io/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/30010?v=4?s=100" width="100px;" alt="Peter Strömberg" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Peter Strömberg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=PEZ" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.devprodlogs.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51440732?v=4?s=100" width="100px;" alt="Daniel Meppiel" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel Meppiel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=danielmeppiel" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://montemagno.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1676321?v=4?s=100" width="100px;" alt="James Montemagno" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;James Montemagno&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=jamesmontemagno" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/VamshiVerma"&gt;&lt;img src="https://avatars.githubusercontent.com/u/21999324?v=4?s=100" width="100px;" alt="Vamshi Verma" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vamshi Verma&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=VamshiVerma" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/sinedied"&gt;&lt;img src="https://avatars.githubusercontent.com/u/593151?v=4?s=100" width="100px;" alt="Yohan Lasorsa" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Yohan Lasorsa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=sinedied" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/OrenMe"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5461862?v=4?s=100" width="100px;" alt="Oren Me" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Oren Me&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=OrenMe" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/mjrousos"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10077254?v=4?s=100" width="100px;" alt="Mike Rousos" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mike Rousos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=mjrousos" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/guiopen"&gt;&lt;img src="https://avatars.githubusercontent.com/u/94094527?v=4?s=100" width="100px;" alt="Guilherme do Amaral Alves " /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Guilherme do Amaral Alves &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=guiopen" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.buymeacoffee.com/troystaylor"&gt;&lt;img src="https://avatars.githubusercontent.com/u/44444967?v=4?s=100" width="100px;" alt="Troy Simeon Taylor" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Troy Simeon Taylor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=troystaylor" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.linkedin.com/in/ambilykk/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10282550?v=4?s=100" width="100px;" alt="Ambily" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ambily&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=ambilykk" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://tgrall.github.io/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/541250?v=4?s=100" width="100px;" alt="Tugdual Grall" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tugdual Grall&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=tgrall" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/TianqiZhang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5326582?v=4?s=100" width="100px;" alt="Tianqi Zhang" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tianqi Zhang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=TianqiZhang" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/shubham070"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5480589?v=4?s=100" width="100px;" alt="Shubham Gaikwad" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Shubham Gaikwad&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=shubham070" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/sdolgin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/576449?v=4?s=100" width="100px;" alt="Saul Dolgin" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Saul Dolgin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=sdolgin" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/nullchimp"&gt;&lt;img src="https://avatars.githubusercontent.com/u/58362593?v=4?s=100" width="100px;" alt="NULLchimp" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;NULLchimp&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=nullchimp" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/MattVevang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20714898?v=4?s=100" width="100px;" alt="Matt Vevang" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Matt Vevang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=MattVevang" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://devkimchi.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1538528?v=4?s=100" width="100px;" alt="Justin Yoo" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Justin Yoo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=justinyoo" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://hachyderm.io/@0gis0"&gt;&lt;img src="https://avatars.githubusercontent.com/u/175379?v=4?s=100" width="100px;" alt="Gisela Torres" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Gisela Torres&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=0GiS0" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://debbie.codes/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13063165?v=4?s=100" width="100px;" alt="Debbie O'Brien" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Debbie O'Brien&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=debs-obrien" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/agreaves-ms"&gt;&lt;img src="https://avatars.githubusercontent.com/u/111466195?v=4?s=100" width="100px;" alt="Allen Greaves" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Allen Greaves&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=agreaves-ms" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/AmeliaRose802"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26167931?v=4?s=100" width="100px;" alt="Amelia Payne" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Amelia Payne&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=AmeliaRose802" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/SebastienDegodez"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2349146?v=4?s=100" width="100px;" alt="Sebastien DEGODEZ" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sebastien DEGODEZ&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=SebastienDegodez" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://graef.io/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/19261257?v=4?s=100" width="100px;" alt="Sebastian Gräf" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sebastian Gräf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=segraef" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://9ssi7.dev/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/76786120?v=4?s=100" width="100px;" alt="Salih İbrahimbaş" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Salih İbrahimbaş&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=9ssi7" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/inquinity"&gt;&lt;img src="https://avatars.githubusercontent.com/u/406234?v=4?s=100" width="100px;" alt="Robert Altman" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Robert Altman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=inquinity" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/pertrai1"&gt;&lt;img src="https://avatars.githubusercontent.com/u/442374?v=4?s=100" width="100px;" alt="Rob Simpson" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rob Simpson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=pertrai1" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://ricksm.it/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7207783?v=4?s=100" width="100px;" alt="Rick Smit" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rick Smit&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=ricksmit3000" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://dotneteers.net/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/28162552?v=4?s=100" width="100px;" alt="Peter Smulovics" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Peter Smulovics&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=psmulovics" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/pelikhan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4175913?v=4?s=100" width="100px;" alt="Peli de Halleux" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Peli de Halleux&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=pelikhan" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.paulomorgado.net/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/470455?v=4?s=100" width="100px;" alt="Paulo Morgado" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Paulo Morgado&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=paulomorgado" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://nickyt.co/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/833231?v=4?s=100" width="100px;" alt="Nick Taylor" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nick Taylor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=nickytonline" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/mikeparker104"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12763221?v=4?s=100" width="100px;" alt="Mike Parker" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mike Parker&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=mikeparker104" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/mikekistler"&gt;&lt;img src="https://avatars.githubusercontent.com/u/85643503?v=4?s=100" width="100px;" alt="Mike Kistler" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mike Kistler&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=mikekistler" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://a11ysupport.io/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/498678?v=4?s=100" width="100px;" alt="Michael Fairchild" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Michael Fairchild&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=mfairchild365" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.linkedin.com/in/michael-volz/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/129928?v=4?s=100" width="100px;" alt="Michael A. Volz (Flynn)" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Michael A. Volz (Flynn)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=michaelvolz" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/4regab"&gt;&lt;img src="https://avatars.githubusercontent.com/u/178603515?v=4?s=100" width="100px;" alt="4regab" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;4regab&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=4regab" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/TheovanKraay"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24420698?v=4?s=100" width="100px;" alt="Theo van Kraay" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Theo van Kraay&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=TheovanKraay" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://glsauto.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/132710946?v=4?s=100" width="100px;" alt="Troy Witthoeft (glsauto)" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Troy Witthoeft (glsauto)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=twitthoeft-gls" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/iletai"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26614687?v=4?s=100" width="100px;" alt="Tài Lê" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tài Lê&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=iletai" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://tinyurl.com/3p5j9mwe"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9591887?v=4?s=100" width="100px;" alt="Udaya Veeramreddygari" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Udaya Veeramreddygari&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=udayakumarreddyv" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://bio.warengonzaga.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15052701?v=4?s=100" width="100px;" alt="Waren Gonzaga" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Waren Gonzaga&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=warengonzaga" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://blog.miniasp.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/88981?v=4?s=100" width="100px;" alt="Will 保哥" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Will 保哥&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=doggy8088" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/yukiomoto"&gt;&lt;img src="https://avatars.githubusercontent.com/u/38450410?v=4?s=100" width="100px;" alt="Yuki Omoto" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Yuki Omoto&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=yukiomoto" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/hueanmy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20430626?v=4?s=100" width="100px;" alt="Meii" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Meii&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=hueanmy" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/samqbush"&gt;&lt;img src="https://avatars.githubusercontent.com/u/74389839?v=4?s=100" width="100px;" alt="samqbush" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;samqbush&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=samqbush" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/sdanzo-hrb"&gt;&lt;img src="https://avatars.githubusercontent.com/u/136493100?v=4?s=100" width="100px;" alt="sdanzo-hrb" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;sdanzo-hrb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=sdanzo-hrb" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/voidfnc"&gt;&lt;img src="https://avatars.githubusercontent.com/u/194750710?v=4?s=100" width="100px;" alt="voidfnc" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;voidfnc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=voidfnc" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/webreidi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/55603905?v=4?s=100" width="100px;" alt="Wendy Breiding" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Wendy Breiding&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=webreidi" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/zooav"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12625412?v=4?s=100" width="100px;" alt="Ankur Sharma" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ankur Sharma&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=zooav" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://jianminhuang.cc/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6296280?v=4?s=100" width="100px;" alt="黃健旻 Vincent Huang" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;黃健旻 Vincent Huang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=Jian-Min-Huang" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/dgh06175"&gt;&lt;img src="https://avatars.githubusercontent.com/u/77305722?v=4?s=100" width="100px;" alt="이상현" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;이상현&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=dgh06175" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/abdidaudpropel"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51310019?v=4?s=100" width="100px;" alt="Abdi Daud" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Abdi Daud&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=abdidaudpropel" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://www.senseof.tech/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/50712277?v=4?s=100" width="100px;" alt="Adrien Clerbois" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Adrien Clerbois&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=AClerbois" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://www.qreate.it/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1868590?v=4?s=100" width="100px;" alt="Alan Sprecacenere" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alan Sprecacenere&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=tegola" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://asilva.dev/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2493377?v=4?s=100" width="100px;" alt="André Silva" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;André Silva&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=askpt" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://javaetmoi.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/838318?v=4?s=100" width="100px;" alt="Antoine Rey" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Antoine Rey&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=arey" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/artemsaveliev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15679218?v=4?s=100" width="100px;" alt="Artem Saveliev" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Artem Saveliev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=artemsaveliev" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://brunoborges.io/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/129743?v=4?s=100" width="100px;" alt="Bruno Borges" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Bruno Borges&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=brunoborges" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.peug.net/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3845786?v=4?s=100" width="100px;" alt="Christophe Peugnet" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Christophe Peugnet&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=tossnet" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.movinglive.ca/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14792628?v=4?s=100" width="100px;" alt="Chtive" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Chtive&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=MovingLive" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/craigbekker"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1115912?v=4?s=100" width="100px;" alt="Craig Bekker" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Craig Bekker&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=craigbekker" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/breakid"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1446918?v=4?s=100" width="100px;" alt="Dan" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=breakid" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ewega"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26189114?v=4?s=100" width="100px;" alt="Eldrick Wega" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Eldrick Wega&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=ewega" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.felixarjuna.dev/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/79026094?v=4?s=100" width="100px;" alt="Felix Arjuna" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Felix Arjuna&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=felixarjuna" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/feapaydin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/19946639?v=4?s=100" width="100px;" alt="Furkan Enes" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Furkan Enes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=feapaydin" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://learn.microsoft.com/dotnet"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24882762?v=4?s=100" width="100px;" alt="Genevieve Warren" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Genevieve Warren&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=gewarren" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/geoder101"&gt;&lt;img src="https://avatars.githubusercontent.com/u/145904?v=4?s=100" width="100px;" alt="George Dernikos" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;George Dernikos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=geoder101" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/giomartinsdev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/125399281?v=4?s=100" width="100px;" alt="Giovanni de Almeida Martins" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Giovanni de Almeida Martins&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=giomartinsdev" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Ioana37"&gt;&lt;img src="https://avatars.githubusercontent.com/u/69301842?v=4?s=100" width="100px;" alt="Ioana A" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ioana A&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=Ioana37" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/nohwnd"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5735905?v=4?s=100" width="100px;" alt="Jakub Jareš" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jakub Jareš&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=nohwnd" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://joe-watkins.io/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3695795?v=4?s=100" width="100px;" alt="Joe Watkins" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Joe Watkins&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=joe-watkins" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://johnpapa.net/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1202528?v=4?s=100" width="100px;" alt="John Papa" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;John Papa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=johnpapa" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://www.sugbo4j.co.nz/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15100839?v=4?s=100" width="100px;" alt="Joseph Gonzales" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Joseph Gonzales&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=josephgonzales01" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://digio.es/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/173672918?v=4?s=100" width="100px;" alt="José Antonio Garrido" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;José Antonio Garrido&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=josegarridodigio" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Ranrar"&gt;&lt;img src="https://avatars.githubusercontent.com/u/95967772?v=4?s=100" width="100px;" alt="Kim Skov Rasmussen" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kim Skov Rasmussen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=Ranrar" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/whiteken"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20211937?v=4?s=100" width="100px;" alt="Kenny White" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kenny White&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=whiteken" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/LouellaCreemers"&gt;&lt;img src="https://avatars.githubusercontent.com/u/46204894?v=4?s=100" width="100px;" alt="Louella Creemers" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Louella Creemers&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=LouellaCreemers" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://linktr.ee/lukemurray"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24467442?v=4?s=100" width="100px;" alt="Luke Murray" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Luke Murray&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=lukemurraynz" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://marknoble.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3819700?v=4?s=100" width="100px;" alt="Mark Noble" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mark Noble&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=marknoble" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://soderlind.no"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1649452?v=4?s=100" width="100px;" alt="Per Søderlind" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Per Søderlind&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=soderlind" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/riqueufmg"&gt;&lt;img src="https://avatars.githubusercontent.com/u/108551585?v=4?s=100" width="100px;" alt="Henrique Nunes" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Henrique Nunes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=riqueufmg" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/jeremiah-snee-openx"&gt;&lt;img src="https://avatars.githubusercontent.com/u/113928685?v=4?s=100" width="100px;" alt="Jeremiah Snee" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jeremiah Snee&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=jeremiah-snee-openx" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tfoot&gt; 
  &lt;tr&gt; 
   &lt;td align="center" size="13px" colspan="7"&gt; &lt;img src="https://raw.githubusercontent.com/all-contributors/all-contributors-cli/1b8533af435da9854653492b1327a23a4dbd0a10/assets/logo-small.svg?sanitize=true" /&gt; &lt;a href="https://all-contributors.js.org/docs/en/bot/usage"&gt;Add your contributions&lt;/a&gt;  &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tfoot&gt; 
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; 
&lt;p&gt;This project follows the &lt;a href="https://github.com/all-contributors/all-contributors"&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; 
&lt;h2&gt;📚 Additional Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://code.visualstudio.com/docs/copilot/copilot-customization"&gt;VS Code Copilot Customization Documentation&lt;/a&gt; - Official Microsoft documentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.visualstudio.com/docs/copilot/chat/copilot-chat"&gt;GitHub Copilot Chat Documentation&lt;/a&gt; - Complete chat feature guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.visualstudio.com/docs/copilot/chat/chat-modes"&gt;Custom Chat Modes&lt;/a&gt; - Advanced chat configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.visualstudio.com/docs/getstarted/settings"&gt;VS Code Settings&lt;/a&gt; - General VS Code configuration guide&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;™️ Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href="https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general"&gt;Microsoft's Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fastify/fastify</title>
      <link>https://github.com/fastify/fastify</link>
      <description>&lt;p&gt;Fast and low overhead web framework, for Node.js&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://fastify.dev/"&gt; &lt;img src="https://github.com/fastify/graphics/raw/HEAD/fastify-landscape-outlined.svg?sanitize=true" width="650" height="auto" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/fastify/fastify/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/fastify/fastify/actions/workflows/ci.yml/badge.svg?branch=main" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://github.com/fastify/fastify/actions/workflows/package-manager-ci.yml"&gt;&lt;img src="https://github.com/fastify/fastify/actions/workflows/package-manager-ci.yml/badge.svg?branch=main" alt="Package Manager CI" /&gt;&lt;/a&gt; &lt;a href="https://github.com/fastify/fastify/actions/workflows/website.yml"&gt;&lt;img src="https://github.com/fastify/fastify/actions/workflows/website.yml/badge.svg?branch=main" alt="Web site" /&gt;&lt;/a&gt; &lt;a href="https://github.com/neostandard/neostandard"&gt;&lt;img src="https://img.shields.io/badge/code_style-neostandard-brightgreen?style=flat" alt="neostandard javascript style" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/7585"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/7585/badge" alt="CII Best Practices" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://www.npmjs.com/package/fastify"&gt;&lt;img src="https://img.shields.io/npm/v/fastify.svg?style=flat" alt="NPM version" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/fastify"&gt;&lt;img src="https://img.shields.io/npm/dm/fastify.svg?style=flat" alt="NPM downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/fastify/fastify/raw/main/SECURITY.md"&gt;&lt;img src="https://img.shields.io/badge/Security-Responsible%20Disclosure-yellow.svg?sanitize=true" alt="Security Responsible Disclosure" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/fastify"&gt;&lt;img src="https://img.shields.io/discord/725613461949906985" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/fastify/fastify"&gt;&lt;img src="https://img.shields.io/badge/Contribute%20with-Gitpod-908a85?logo=gitpod&amp;amp;color=blue" alt="Contribute with Gitpod" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/fastify#sponsors"&gt;&lt;img src="https://img.shields.io/opencollective/all/fastify" alt="Open Collective backers and sponsors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;An efficient server implies a lower cost of the infrastructure, better responsiveness under load, and happy users. How can you efficiently handle the resources of your server, knowing that you are serving the highest number of requests possible, without sacrificing security validations and handy development?&lt;/p&gt; 
&lt;p&gt;Enter Fastify. Fastify is a web framework highly focused on providing the best developer experience with the least overhead and a powerful plugin architecture. It is inspired by Hapi and Express and as far as we know, it is one of the fastest web frameworks in town.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;main&lt;/code&gt; branch refers to the Fastify &lt;code&gt;v5&lt;/code&gt; release. Check out the &lt;a href="https://github.com/fastify/fastify/tree/4.x"&gt;&lt;code&gt;4.x&lt;/code&gt; branch&lt;/a&gt; for &lt;code&gt;v4&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Table of Contents&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/#quick-start"&gt;Quick start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/#install"&gt;Install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/#example"&gt;Example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/#core-features"&gt;Core features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/#benchmarks"&gt;Benchmarks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/#ecosystem"&gt;Ecosystem&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/#support"&gt;Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/#team"&gt;Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/#hosted-by"&gt;Hosted by&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick start&lt;/h3&gt; 
&lt;p&gt;Create a folder and make it your current working directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;mkdir my-app
cd my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Generate a fastify project with &lt;code&gt;npm init&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm init fastify
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To start the app in dev mode:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For production mode:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Under the hood &lt;code&gt;npm init&lt;/code&gt; downloads and runs &lt;a href="https://github.com/fastify/create-fastify"&gt;Fastify Create&lt;/a&gt;, which in turn uses the generate functionality of &lt;a href="https://github.com/fastify/fastify-cli"&gt;Fastify CLI&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Install&lt;/h3&gt; 
&lt;p&gt;To install Fastify in an existing project as a dependency:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm i fastify
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Require the framework and instantiate it

// ESM
import Fastify from 'fastify'

const fastify = Fastify({
  logger: true
})
// CommonJs
const fastify = require('fastify')({
  logger: true
})

// Declare a route
fastify.get('/', (request, reply) =&amp;gt; {
  reply.send({ hello: 'world' })
})

// Run the server!
fastify.listen({ port: 3000 }, (err, address) =&amp;gt; {
  if (err) throw err
  // Server is now listening on ${address}
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With async-await:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// ESM
import Fastify from 'fastify'

const fastify = Fastify({
  logger: true
})
// CommonJs
const fastify = require('fastify')({
  logger: true
})

fastify.get('/', async (request, reply) =&amp;gt; {
  reply.type('application/json').code(200)
  return { hello: 'world' }
})

fastify.listen({ port: 3000 }, (err, address) =&amp;gt; {
  if (err) throw err
  // Server is now listening on ${address}
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Do you want to know more? Head to the &lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Guides/Getting-Started.md"&gt;&lt;code&gt;&lt;b&gt;Getting Started&lt;/b&gt;&lt;/code&gt;&lt;/a&gt;. If you learn best by reading code, explore the official &lt;a href="https://github.com/fastify/demo"&gt;demo&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h2&gt;Note&lt;/h2&gt; 
 &lt;p&gt;&lt;code&gt;.listen&lt;/code&gt; binds to the local host, &lt;code&gt;localhost&lt;/code&gt;, interface by default (&lt;code&gt;127.0.0.1&lt;/code&gt; or &lt;code&gt;::1&lt;/code&gt;, depending on the operating system configuration). If you are running Fastify in a container (Docker, &lt;a href="https://cloud.google.com/"&gt;GCP&lt;/a&gt;, etc.), you may need to bind to &lt;code&gt;0.0.0.0&lt;/code&gt;. Be careful when listening on all interfaces; it comes with inherent &lt;a href="https://web.archive.org/web/20170711105010/https://snyk.io/blog/mongodb-hack-and-secure-defaults/"&gt;security risks&lt;/a&gt;. See &lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/Server.md#listen"&gt;the documentation&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Core features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Highly performant:&lt;/strong&gt; as far as we know, Fastify is one of the fastest web frameworks in town, depending on the code complexity we can serve up to 76+ thousand requests per second.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible:&lt;/strong&gt; Fastify is fully extensible via its hooks, plugins, and decorators.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Schema-based:&lt;/strong&gt; even if it is not mandatory we recommend using &lt;a href="https://json-schema.org/"&gt;JSON Schema&lt;/a&gt; to validate your routes and serialize your outputs. Internally Fastify compiles the schema in a highly performant function.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Logging:&lt;/strong&gt; logs are extremely important but are costly; we chose the best logger to almost remove this cost, &lt;a href="https://github.com/pinojs/pino"&gt;Pino&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Developer friendly:&lt;/strong&gt; the framework is built to be very expressive and help developers in their daily use without sacrificing performance and security.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Benchmarks&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Machine:&lt;/strong&gt; EX41S-SSD, Intel Core i7, 4Ghz, 64GB RAM, 4C/8T, SSD.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Method:&lt;/strong&gt;: &lt;code&gt;autocannon -c 100 -d 40 -p 10 localhost:3000&lt;/code&gt; * 2, taking the second average&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Framework&lt;/th&gt; 
   &lt;th align="left"&gt;Version&lt;/th&gt; 
   &lt;th align="center"&gt;Router?&lt;/th&gt; 
   &lt;th align="right"&gt;Requests/sec&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Express&lt;/td&gt; 
   &lt;td align="left"&gt;4.17.3&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="right"&gt;14,200&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;hapi&lt;/td&gt; 
   &lt;td align="left"&gt;20.2.1&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="right"&gt;42,284&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Restify&lt;/td&gt; 
   &lt;td align="left"&gt;8.6.1&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="right"&gt;50,363&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Koa&lt;/td&gt; 
   &lt;td align="left"&gt;2.13.0&lt;/td&gt; 
   &lt;td align="center"&gt;✗&lt;/td&gt; 
   &lt;td align="right"&gt;54,272&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;strong&gt;Fastify&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;strong&gt;4.0.0&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="right"&gt;&lt;strong&gt;77,193&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="right"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;http.Server&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;16.14.2&lt;/td&gt; 
   &lt;td align="center"&gt;✗&lt;/td&gt; 
   &lt;td align="right"&gt;74,513&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;These benchmarks taken using &lt;a href="https://github.com/fastify/benchmarks"&gt;https://github.com/fastify/benchmarks&lt;/a&gt;. This is a synthetic "hello world" benchmark that aims to evaluate the framework overhead. The overhead that each framework has on your application depends on your application. You should &lt;strong&gt;always&lt;/strong&gt; benchmark if performance matters to you.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Guides/Getting-Started.md"&gt;&lt;strong&gt;&lt;code&gt;Getting Started&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Guides/Index.md"&gt;&lt;strong&gt;&lt;code&gt;Guides&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/Server.md"&gt;&lt;strong&gt;&lt;code&gt;Server&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/Routes.md"&gt;&lt;strong&gt;&lt;code&gt;Routes&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/Encapsulation.md"&gt;&lt;strong&gt;&lt;code&gt;Encapsulation&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/Logging.md"&gt;&lt;strong&gt;&lt;code&gt;Logging&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/Middleware.md"&gt;&lt;strong&gt;&lt;code&gt;Middleware&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/Hooks.md"&gt;&lt;strong&gt;&lt;code&gt;Hooks&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/Decorators.md"&gt;&lt;strong&gt;&lt;code&gt;Decorators&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/Validation-and-Serialization.md"&gt;&lt;strong&gt;&lt;code&gt;Validation and Serialization&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Guides/Fluent-Schema.md"&gt;&lt;strong&gt;&lt;code&gt;Fluent Schema&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/Lifecycle.md"&gt;&lt;strong&gt;&lt;code&gt;Lifecycle&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/Reply.md"&gt;&lt;strong&gt;&lt;code&gt;Reply&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/Request.md"&gt;&lt;strong&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/Errors.md"&gt;&lt;strong&gt;&lt;code&gt;Errors&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/ContentTypeParser.md"&gt;&lt;strong&gt;&lt;code&gt;Content Type Parser&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/Plugins.md"&gt;&lt;strong&gt;&lt;code&gt;Plugins&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Guides/Testing.md"&gt;&lt;strong&gt;&lt;code&gt;Testing&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Guides/Benchmarking.md"&gt;&lt;strong&gt;&lt;code&gt;Benchmarking&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Guides/Write-Plugin.md"&gt;&lt;strong&gt;&lt;code&gt;How to write a good plugin&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Guides/Plugins-Guide.md"&gt;&lt;strong&gt;&lt;code&gt;Plugins Guide&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/HTTP2.md"&gt;&lt;strong&gt;&lt;code&gt;HTTP2&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/LTS.md"&gt;&lt;strong&gt;&lt;code&gt;Long Term Support&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Reference/TypeScript.md"&gt;&lt;strong&gt;&lt;code&gt;TypeScript and types support&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Guides/Serverless.md"&gt;&lt;strong&gt;&lt;code&gt;Serverless&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Guides/Recommendations.md"&gt;&lt;strong&gt;&lt;code&gt;Recommendations&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Guides/Ecosystem.md#core"&gt;Core&lt;/a&gt; - Core plugins maintained by the &lt;em&gt;Fastify&lt;/em&gt; &lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/#team"&gt;team&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/docs/Guides/Ecosystem.md#community"&gt;Community&lt;/a&gt; - Community-supported plugins.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fastify/example"&gt;Live Examples&lt;/a&gt; - Multirepo with a broad set of real working examples.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/D3FZYPy"&gt;Discord&lt;/a&gt; - Join our discord server and chat with the maintainers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Please visit &lt;a href="https://github.com/fastify/help"&gt;Fastify help&lt;/a&gt; to view prior support issues and to ask new support questions.&lt;/p&gt; 
&lt;p&gt;Version 3 of Fastify and lower are EOL and will not receive any security or bug fixes.&lt;/p&gt; 
&lt;p&gt;Fastify's partner, HeroDevs, provides commercial security fixes for all unsupported versions at &lt;a href="https://www.herodevs.com/support/fastify-nes?utm_source=fastify&amp;amp;utm_medium=link&amp;amp;utm_campaign=github_readme"&gt;https://herodevs.com/support/fastify-nes&lt;/a&gt;. Fastify's supported version matrix is available in the &lt;a href="https://fastify.dev/docs/latest/Reference/LTS/"&gt;Long Term Support&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Whether reporting bugs, discussing improvements and new ideas, or writing code, we welcome contributions from anyone and everyone. Please read the &lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; guidelines before submitting pull requests.&lt;/p&gt; 
&lt;h2&gt;Team&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Fastify&lt;/em&gt; is the result of the work of a great community. Team members are listed in alphabetical order.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Lead Maintainers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mcollina"&gt;&lt;strong&gt;Matteo Collina&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/matteocollina"&gt;https://twitter.com/matteocollina&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~matteo.collina"&gt;https://www.npmjs.com/~matteo.collina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/delvedor"&gt;&lt;strong&gt;Tomas Della Vedova&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/delvedor"&gt;https://twitter.com/delvedor&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~delvedor"&gt;https://www.npmjs.com/~delvedor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/climba03003"&gt;&lt;strong&gt;KaKa Ng&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~climba03003"&gt;https://www.npmjs.com/~climba03003&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eomm"&gt;&lt;strong&gt;Manuel Spigolon&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/manueomm"&gt;https://twitter.com/manueomm&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~eomm"&gt;https://www.npmjs.com/~eomm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jsumners"&gt;&lt;strong&gt;James Sumners&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/jsumners79"&gt;https://twitter.com/jsumners79&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~jsumners"&gt;https://www.npmjs.com/~jsumners&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Fastify Core team&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uzlopak"&gt;&lt;strong&gt;Aras Abbasi&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~uzlopak"&gt;https://www.npmjs.com/~uzlopak&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/airhorns/"&gt;&lt;strong&gt;Harry Brundage&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/harrybrundage"&gt;https://twitter.com/harrybrundage&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~airhorns"&gt;https://www.npmjs.com/~airhorns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mcollina"&gt;&lt;strong&gt;Matteo Collina&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/matteocollina"&gt;https://twitter.com/matteocollina&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~matteo.collina"&gt;https://www.npmjs.com/~matteo.collina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gurgunday"&gt;&lt;strong&gt;Gürgün Dayıoğlu&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~gurgunday"&gt;https://www.npmjs.com/~gurgunday&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/delvedor"&gt;&lt;strong&gt;Tomas Della Vedova&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/delvedor"&gt;https://twitter.com/delvedor&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~delvedor"&gt;https://www.npmjs.com/~delvedor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/metcoder95"&gt;&lt;strong&gt;Carlos Fuentes&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/metcoder95"&gt;https://twitter.com/metcoder95&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~metcoder95"&gt;https://www.npmjs.com/~metcoder95&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zekth"&gt;&lt;strong&gt;Vincent Le Goff&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lmammino"&gt;&lt;strong&gt;Luciano Mammino&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/loige"&gt;https://twitter.com/loige&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~lmammino"&gt;https://www.npmjs.com/~lmammino&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jean-michelet"&gt;&lt;strong&gt;Jean Michelet&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~jean-michelet"&gt;https://www.npmjs.com/~jean-michelet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/climba03003"&gt;&lt;strong&gt;KaKa Ng&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~climba03003"&gt;https://www.npmjs.com/~climba03003&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/luisorbaiceta"&gt;&lt;strong&gt;Luis Orbaiceta&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/luisorbai"&gt;https://twitter.com/luisorbai&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~luisorbaiceta"&gt;https://www.npmjs.com/~luisorbaiceta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fox1t"&gt;&lt;strong&gt;Maksim Sinik&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/maksimsinik"&gt;https://twitter.com/maksimsinik&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~fox1t"&gt;https://www.npmjs.com/~fox1t&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eomm"&gt;&lt;strong&gt;Manuel Spigolon&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/manueomm"&gt;https://twitter.com/manueomm&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~eomm"&gt;https://www.npmjs.com/~eomm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jsumners"&gt;&lt;strong&gt;James Sumners&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/jsumners79"&gt;https://twitter.com/jsumners79&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~jsumners"&gt;https://www.npmjs.com/~jsumners&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Fastify Plugins team&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/airhorns/"&gt;&lt;strong&gt;Harry Brundage&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/harrybrundage"&gt;https://twitter.com/harrybrundage&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~airhorns"&gt;https://www.npmjs.com/~airhorns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/simoneb"&gt;&lt;strong&gt;Simone Busoli&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/simonebu"&gt;https://twitter.com/simonebu&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~simoneb"&gt;https://www.npmjs.com/~simoneb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dancastillo"&gt;&lt;strong&gt;Dan Castillo&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~dancastillo"&gt;https://www.npmjs.com/~dancastillo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mcollina"&gt;&lt;strong&gt;Matteo Collina&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/matteocollina"&gt;https://twitter.com/matteocollina&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~matteo.collina"&gt;https://www.npmjs.com/~matteo.collina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gurgunday"&gt;&lt;strong&gt;Gürgün Dayıoğlu&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~gurgunday"&gt;https://www.npmjs.com/~gurgunday&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/delvedor"&gt;&lt;strong&gt;Tomas Della Vedova&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/delvedor"&gt;https://twitter.com/delvedor&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~delvedor"&gt;https://www.npmjs.com/~delvedor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/metcoder95"&gt;&lt;strong&gt;Carlos Fuentes&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/metcoder95"&gt;https://twitter.com/metcoder95&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~metcoder95"&gt;https://www.npmjs.com/~metcoder95&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zekth"&gt;&lt;strong&gt;Vincent Le Goff&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jean-michelet"&gt;&lt;strong&gt;Jean Michelet&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~jean-michelet"&gt;https://www.npmjs.com/~jean-michelet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/climba03003"&gt;&lt;strong&gt;KaKa Ng&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~climba03003"&gt;https://www.npmjs.com/~climba03003&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fox1t"&gt;&lt;strong&gt;Maksim Sinik&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/maksimsinik"&gt;https://twitter.com/maksimsinik&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~fox1t"&gt;https://www.npmjs.com/~fox1t&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Fdawgs"&gt;&lt;strong&gt;Frazer Smith&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~fdawgs"&gt;https://www.npmjs.com/~fdawgs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eomm"&gt;&lt;strong&gt;Manuel Spigolon&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/manueomm"&gt;https://twitter.com/manueomm&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~eomm"&gt;https://www.npmjs.com/~eomm&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Emeritus Contributors&lt;/h3&gt; 
&lt;p&gt;Great contributors to a specific area of the Fastify ecosystem will be invited to join this group by Lead Maintainers when they decide to step down from the active contributor's group.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/allevo"&gt;&lt;strong&gt;Tommaso Allevi&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/allevitommaso"&gt;https://twitter.com/allevitommaso&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~allevo"&gt;https://www.npmjs.com/~allevo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ethan-Arrowood/"&gt;&lt;strong&gt;Ethan Arrowood&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/arrowoodtech"&gt;https://twitter.com/arrowoodtech&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~ethan_arrowood"&gt;https://www.npmjs.com/~ethan_arrowood&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cagataycali"&gt;&lt;strong&gt;Çağatay Çalı&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/cagataycali"&gt;https://twitter.com/cagataycali&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~cagataycali"&gt;https://www.npmjs.com/~cagataycali&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/davidmarkclements"&gt;&lt;strong&gt;David Mark Clements&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/davidmarkclem"&gt;https://twitter.com/davidmarkclem&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~davidmarkclements"&gt;https://www.npmjs.com/~davidmarkclements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dalisoft"&gt;&lt;strong&gt;dalisoft&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/dalisoft"&gt;https://twitter.com/dalisoft&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~dalisoft"&gt;https://www.npmjs.com/~dalisoft&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/StarpTech"&gt;&lt;strong&gt;Dustin Deus&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/dustindeus"&gt;https://twitter.com/dustindeus&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~starptech"&gt;https://www.npmjs.com/~starptech&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SerayaEryn"&gt;&lt;strong&gt;Denis Fäcke&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/serayaeryn"&gt;https://twitter.com/serayaeryn&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~serayaeryn"&gt;https://www.npmjs.com/~serayaeryn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafaelgss"&gt;&lt;strong&gt;Rafael Gonzaga&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/_rafaelgss"&gt;https://twitter.com/_rafaelgss&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~rafaelgss"&gt;https://www.npmjs.com/~rafaelgss&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trivikr"&gt;&lt;strong&gt;Trivikram Kamat&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/trivikram"&gt;https://twitter.com/trivikram&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~trivikr"&gt;https://www.npmjs.com/~trivikr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AyoubElk"&gt;&lt;strong&gt;Ayoub El Khattabi&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/ayoubelkh"&gt;https://twitter.com/ayoubelkh&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~ayoubelk"&gt;https://www.npmjs.com/~ayoubelk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cemremengu"&gt;&lt;strong&gt;Cemre Mengu&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/cemremengu"&gt;https://twitter.com/cemremengu&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~cemremengu"&gt;https://www.npmjs.com/~cemremengu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/salmanm"&gt;&lt;strong&gt;Salman Mitha&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~salmanm"&gt;https://www.npmjs.com/~salmanm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nwoltman"&gt;&lt;strong&gt;Nathan Woltman&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://twitter.com/NathanWoltman"&gt;https://twitter.com/NathanWoltman&lt;/a&gt;, &lt;a href="https://www.npmjs.com/~nwoltman"&gt;https://www.npmjs.com/~nwoltman&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Hosted by&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://openjsf.org/projects"&gt;&lt;img src="https://github.com/openjs-foundation/artwork/raw/main/openjs_foundation/openjs_foundation-logo-horizontal-color.png?raw=true" width="250px;" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We are an &lt;a href="https://github.com/openjs-foundation/cross-project-council/raw/HEAD/PROJECT_PROGRESSION.md#at-large-projects"&gt;At-Large Project&lt;/a&gt; in the &lt;a href="https://openjsf.org/"&gt;OpenJS Foundation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Support this project by becoming a &lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/SPONSORS.md"&gt;SPONSOR&lt;/a&gt;! Fastify has an &lt;a href="https://opencollective.com/fastify"&gt;Open Collective&lt;/a&gt; page where we accept and manage financial contributions.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;This project is kindly sponsored by:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nearform.com"&gt;NearForm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://platformatic.dev"&gt;Platformatic&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Past Sponsors:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.letzdoitapp.com/"&gt;LetzDoIt&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This list includes all companies that support one or more team members in maintaining this project.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under &lt;a href="https://raw.githubusercontent.com/fastify/fastify/main/LICENSE"&gt;MIT&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For your convenience, here is a list of all the licenses of our production dependencies:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MIT&lt;/li&gt; 
 &lt;li&gt;ISC&lt;/li&gt; 
 &lt;li&gt;BSD-3-Clause&lt;/li&gt; 
 &lt;li&gt;BSD-2-Clause&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>poteto/hiring-without-whiteboards</title>
      <link>https://github.com/poteto/hiring-without-whiteboards</link>
      <description>&lt;p&gt;⭐️ Companies that don't have a broken hiring process&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hiring Without Whiteboards&lt;/h1&gt; 
&lt;p&gt;A list of companies (or teams) that don't do "whiteboard" interviews. "Whiteboards" is used as a metaphor, and is a &lt;em&gt;symbol&lt;/em&gt; for the kinds of CS trivia questions that are associated with bad interview practices. Whiteboards are not bad – CS trivia questions are. Using sites like HackerRank/LeetCode &lt;em&gt;probably&lt;/em&gt; fall into a similar category.&lt;/p&gt; 
&lt;p&gt;The companies and teams listed here use interview techniques and questions that resemble day-to-day work. For example, pairing on a real world problem or a paid/unpaid take home exercise. Read (and contribute to) &lt;a href="https://raw.githubusercontent.com/poteto/hiring-without-whiteboards/main/RECOMMENDATIONS.md"&gt;our recommendations&lt;/a&gt; for ways to conduct better interviews.&lt;/p&gt; 
&lt;h3&gt;tl;dr&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discussing a real world problem (with or without whiteboard) is 👍&lt;/li&gt; 
 &lt;li&gt;Solving CS trivia, technical puzzles, riddles, brainteasers (with or without whiteboard) is 👎&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please open a &lt;a href="https://github.com/poteto/hiring-without-whiteboards/pull/new/master"&gt;PR&lt;/a&gt; to be added.&lt;/p&gt; 
&lt;h3&gt;Duds&lt;/h3&gt; 
&lt;p&gt;If you've been through an interview with one of these companies recently, and your experience suggests otherwise from their description, please open a &lt;a href="https://github.com/poteto/hiring-without-whiteboards/pull/new/master"&gt;PR&lt;/a&gt; to remove them from this list.&lt;/p&gt; 
&lt;h3&gt;I want to search/sort/filter/group by X!&lt;/h3&gt; 
&lt;p&gt;Check out our &lt;a href="https://airtable.com/shr3eGPDm3wGjT2gA"&gt;Airtable&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Additions to this document that are properly formatted will automatically be pushed and added to Airtable. Keywords from the description will also be extracted. You can see (and contribute!) to the &lt;a href="https://github.com/poteto/hww-api"&gt;API here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also check out &lt;a href="https://www.nowhiteboard.org"&gt;No Whiteboards&lt;/a&gt; to search for jobs at these companies.&lt;/p&gt; 
&lt;h3&gt;Discussion and other reads&lt;/h3&gt; 
&lt;!--lint disable--&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discussion 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://news.ycombinator.com/item?id=13874026"&gt;HackerNews (2017)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://news.ycombinator.com/item?id=23981795"&gt;HackerNews (2020)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://theoutline.com/post/1256/finding-a-better-alternative-to-the-whiteboard-interview"&gt;Finding a better alternative to the whiteboard interview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jes.al//2023/03/how-to-hire-engineering-talent-without-the-bs/"&gt;How to hire engineering talent without the BS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.aaronsw.com/weblog/hiring.en"&gt;How I Hire Programmers&lt;/a&gt; by Aaron Swartz&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--lint enable--&gt; 
&lt;hr /&gt; 
&lt;h2&gt;0 - 9&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.1000.software/careers"&gt;1000.software&lt;/a&gt; | Krakow, Poland / Remote | Series of 2 interviews first on soft skills, second on technical skills (how to build things, how to solve specific, real world problem, best practice) and meeting with a team leader. Sometimes a take home, simple project.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A - C&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.aalyria.com/jobs"&gt;Aalyria&lt;/a&gt; | Remote | Timeboxed design exercise and related coding exercise, followed by a technical/behavioral discussion with the team, and behavioral interview with leadership&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://able.co/careers"&gt;Able&lt;/a&gt; | Lima, PE / Remote | Coding interview, Technical interview (Backlog Refinement + System Design), Leadership interview (Behavioural)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://angel.co/abstract/jobs"&gt;Abstract&lt;/a&gt; | San Francisco, CA&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.accenture.com/us-en/careers"&gt;Accenture&lt;/a&gt; | San Francisco, CA / Los Angeles, CA / New York, NY / Kuala Lumpur, Malaysia | Technical phone discussion with architecture manager, followed by behavioral interview focusing on soft skills&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.accredible.com/careers"&gt;Accredible&lt;/a&gt; | Cambridge, UK / San Francisco, CA / Remote | Take home project, then a pair-programming and discussion onsite / Skype round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.acko.com/careers"&gt;Acko&lt;/a&gt; | Mumbai, India | Phone interview, followed by a small take home problem. Finally a F2F or skype pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.acumenci.com/careers/"&gt;Acumen&lt;/a&gt; | London, UK | Small take home test, and sit in on some sprint rituals on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://adhoc.team"&gt;Ad Hoc&lt;/a&gt; | Remote / Washington, DC | Technical take-home assignment, followed by multiple video calls that are discussions of technical background and experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.adaface.com"&gt;Adaface&lt;/a&gt; | Remote/ Singapore, Singapore / Bangalore, India | Conversational on-the-job technical assessment, followed by video calls with technical lead and founders&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://adcellerant.com/career-job-listing/"&gt;AdCellerant&lt;/a&gt; | Denver, CO | Technical phone screen, 5-day take home code challenge, then on-site interview comprised of cultural and technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://adevait.com"&gt;Adeva&lt;/a&gt; | New York, USA | 4 steps interviewing process that includes online coding assignment + lead engineer call.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.adex.network"&gt;AdEx Network&lt;/a&gt; | Sofia, Bulgaria / Remote | Email screening process, followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://getadmiral.com"&gt;Admiral&lt;/a&gt; | Gainesville, FL / Remote | Intro phone call with hiring manager, take-home assignment, (mostly) non-technical on-site with team/leadership&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://adnymics.com"&gt;Adnymics&lt;/a&gt; | Munich, DE | Take home project, then work with the team for a day&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://adthena.com"&gt;Adthena&lt;/a&gt; | London, UK | Takehome project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.adyen.com"&gt;Adyen&lt;/a&gt; | Amsterdam, NL | Take-home assignment, design discussion based on take home, culture fit etc. Provides visa sponsorship to the Netherlands.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.affinipay.com"&gt;Affinipay&lt;/a&gt; | Austin, TX | Short takehome project + video interview about coding with engineering manager&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ae.studio"&gt;Agency Enterprise Studio&lt;/a&gt; | Remote / Los Angeles, CA / Florianópolis, Brazil | Live coding of a task you'd do daily&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ageno.pl"&gt;Ageno&lt;/a&gt; | Bielsko-Biala, Poland | Simple Magento Take-home project and discussion on the real world problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://angel.co/agilemd/jobs"&gt;AgileMD&lt;/a&gt; | San Francisco, CA | Takehome project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aimotive.com/career/"&gt;AImotive&lt;/a&gt; | Budapest, Hungary | Small take-home project, then in-person interview about technical background&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.airbase.com/careers"&gt;Airbase&lt;/a&gt; | San Francisco, CA; Bangalore, India; Remote | Intro Call with HR or EMs, small take-home project, two tech rounds with Airbase Engineers (based on real world engineering problems), followed by a final values round with the Founder or Director of Engineering.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://airtable.com/careers"&gt;Airtable&lt;/a&gt; | San Francisco, CA; Austin, TX; Mountain View, CA; New York, NY; Remote | Take home project that resembles a problem Airtable solves for. Five hour on-site which includes a discussion of the project, UI design, discussing architectural tradeoffs, and code debugging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aiwip.com"&gt;Aiwip&lt;/a&gt; | London, UK | Skype/phone interview followed by takehome project or worksample (or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.lever.co/meetalbert/"&gt;Albert&lt;/a&gt; | Los Angeles, CA | Discussion with senior engineer, and then practical pair programming related to my experience + the position&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.algolia.com/careers"&gt;Algolia&lt;/a&gt; | Paris, France / San Francisco, CA | Takehome project &amp;amp; Onsite discussions and presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.allaboutapps.at/jobs"&gt;all about apps GmbH&lt;/a&gt; | Vienna, Austria | 2-phase technical discussion &amp;amp; examination with department heads and management.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://allegro.pl/praca"&gt;Allegro&lt;/a&gt; | Warsaw, Poland; Poznan, Poland; Torun, Poland; Wroclaw, Poland; Krakow, Poland | Take home, simple project. Series of 2 technical interviews (how to build things, how to solve specific, real world problem) and meeting with a team leader.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.alluxi.mx"&gt;Alluxi&lt;/a&gt; | Monterrey, Mexico | Initial skype interview, technical interview with Senior engineer and work sample review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.almabase.com/careers#believe"&gt;Almabase&lt;/a&gt; | Bengaluru, India | Take-home assignment, design discussion based on take home, low level and high level design rounds based on real life problems, culture fit etc. during onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.alphasights.com/careers/open-roles/"&gt;AlphaSights&lt;/a&gt; | London, UK / New York, NY / Remote | Initial interview, pair programming then final round with general technical questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://amagi.io"&gt;AMAGI&lt;/a&gt; | Makati, Philippines | 1) Review of your resume, portfolio, and/or GitHub profile; 2) 1 hour discussion (in-person or Skype) about your goals, experience, personal culture, and how to apply technical solutions to real problems;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gastrograph.com"&gt;Analytical Flavor Systems&lt;/a&gt; | Manhattan, New York | Code sample or take-home project, both with discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://amerch.com"&gt;Anderson Merchandisers&lt;/a&gt; | Remote / Dallas, TX | Technical discussion about the technologies they are currently using. Going over background and resume.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.angaza.com/careers/"&gt;Angaza&lt;/a&gt; | San Francisco, CA | Take-home assignment with guaranteed feedback, on-site interviews involving actual day-to-day work&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.animech.com"&gt;Animech&lt;/a&gt; | Uppsala, Sweden | Multiple interviews with technical staff with real problem discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://career.anyfin.com"&gt;Anyfin&lt;/a&gt; | Stockholm, Sweden | Takehome project &amp;amp; Onsite discussions and presentation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aparkado.de"&gt;Aparkado&lt;/a&gt; | Cologne, Germany / Remote | Intro with Co-Founder, team fit with the team plus a small real-world problem to solve, followed by final round with CEO / Co-Founder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://apolloagriculture.com"&gt;Apollo Agriculture&lt;/a&gt; | Nairobi, Kenya / Remote | Takehome project or Worksample (or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.beapplied.com"&gt;Applied&lt;/a&gt; | London, UK | Situational judgement tests focusing on real-world soft skills (online then in structured interview)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://angel.co/arachnys/jobs/220465-software-engineer"&gt;Arachnys&lt;/a&gt; | London, UK | Take home test, real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.articulate.com/about/careers/"&gt;Articulate&lt;/a&gt; | Remote | Take-home project &amp;amp; pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.artsy.net/jobs#engineering"&gt;Artsy&lt;/a&gt; | New York, NY / London, UK / Berlin, Germany / Los Angeles, CA / Hong Kong, Hong Kong / Remote | Our process: 1) Informal chat 2) Application 3) Phone screen 4) In-person interview with 1 lead, 2 individual contributors and 1 non-engineer (30-45 mins each), focusing on your work habits and expertise as demonstrated in your previous work 5) ~4 in-depth professional reference calls (30-45 mins each).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.asidatascience.com/careers"&gt;ASI Data Science&lt;/a&gt; | London, UK | Project to work at home, general technical questions, pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.asoscareers.com"&gt;ASOS&lt;/a&gt; | London, UK | Take home or in-person code refactoring exercise, in-person walk-though of solution including software craftsmanship principles and design decisions, in-person freestyle architecture walk-through&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.ataccama.com"&gt;Ataccama&lt;/a&gt; | Prague, Czech Republic | Face to face interview (skype or onsite), coding task for 30 min, meeting with team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://atech.media"&gt;aTech Media&lt;/a&gt; | London, UK | Face to face interview, review of existing open source contributions or, if none are available, asked to write a library for something that interests them&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://atlan.com"&gt;Atlan&lt;/a&gt; | New Delhi, India | A mini project (to be done within 8 days), followed by a discussion with the team you're applying to. Then as the final step, a call with one of the founders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://auraframes.com/jobs?gh_src=2ef5cfa32"&gt;Aura Frames&lt;/a&gt; | New York, NY / San Francisco, CA | Simplified real-world coding task on Coderpad.io, followed by a few hours onsite writing code in our actual codebase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.auto1-group.com/jobs"&gt;Auto1&lt;/a&gt; | Berlin, DE | Series of Skype interviews which covers general technical questions, followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://automattic.com/work-with-us/"&gt;Automattic&lt;/a&gt; | Remote | short take-home code test, then a part-time, paid project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AutoScout24/hiring"&gt;AutoScout24&lt;/a&gt; | Munich, Germany | Skype interview followed by home assignment from our day-to-day business and then on-site interview including lunch with a team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://avant.com/jobs"&gt;Avant&lt;/a&gt; | Chicago, IL | Pair programming interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.avarteq.com/career"&gt;Avarteq GmbH&lt;/a&gt; | Berlin, Germany / Saarbrücken, Germany | Technical interview with our developers on-site or remote followed by a work sample in a pair programming session or a previous take-home project with a follow-up discussion and detailed feedback.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.axelerant.com/careers"&gt;Axelerant&lt;/a&gt; | Remote | Take-home project, interviews with hr and engineering team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://axiacore.com"&gt;Axiacore&lt;/a&gt; | Bogota, Colombia | We talk about on how is your process when solving problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.axios.com/careers"&gt;Axios&lt;/a&gt; | Arlington, VA / New York, NY / San Francisco, CA / Remote | Take-home project, with discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://boards.greenhouse.io/b12#.WMlLfRIrJTa"&gt;B12&lt;/a&gt; | New York, NY | Take-home exercises and pair-programming with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Babylonpartners/iOS-Interview-Demo"&gt;Babylon Health iOS Team&lt;/a&gt; | London, UK | Take-home project, on-site presentation and discussion, design and product interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://workatbackbase.com"&gt;Backbase&lt;/a&gt; | Amsterdam, Netherlands; Cardiff, Wales; London, UK; Atlanta, GA | Takehome project, interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.badi.com"&gt;Badi&lt;/a&gt; | Barcelona, Spain | Phone Screen, Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://team.badoo.com/jobs"&gt;Badoo&lt;/a&gt; | London, UK | Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cybercareers.baesystems.com"&gt;BAE Systems Digital Intelligence&lt;/a&gt; | London, UK / Manchester, UK / Guildford, UK / Gloucester, UK | Initial interview with experience based technical questions, second interview pair programming on problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bakkenbaeck.com/jobs"&gt;Bakken &amp;amp; Bæck&lt;/a&gt; | Oslo, Norway; Amsterdam, Netherlands; Bonn, Germany | Skype interview followed by take-home assignment and a visit to one of our offices&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://career.balabit.com"&gt;Balabit&lt;/a&gt; | Budapest, Hungary | Take-home project (medium size, with restrictions, e.g. only stdlib may be used), then discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.barracuda.com/company/careers"&gt;Barracuda View Team&lt;/a&gt; | Chelmsford, MA / Remote | Phone screen, remote pair programming session, technical discussion interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://basecamp.com/about/jobs"&gt;Basecamp&lt;/a&gt; | Chicago, IL / Remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bcw.group"&gt;BCW Group&lt;/a&gt; | Remote | Behavioral interview with the technical lead and hiring manager, followed by a take-home project, and finally a brief discussion about how the exercise went.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.lever.co/beam"&gt;Beam Dental&lt;/a&gt; | Columbus, OH / Remote | Phone Screen, Take Home Project, In-Person or remote Pairing and Cross-Functional Interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.belkadigital.com"&gt;Belka&lt;/a&gt; | Trento, Italy; Munich, Germany | We give you a small task that you can do alone and then we evaluate your work with you&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bemind.me"&gt;Bemind&lt;/a&gt; | Biella, Italy / Latina, Italy / Remote | Series of interviews, discussion about technical background and past experiences, take-home project &amp;amp; pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bendyworks.com/careers"&gt;Bendyworks&lt;/a&gt; | Madison, WI | Interviews and pair programming on personal projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hellobenefex.com/about-us/careers"&gt;Benefex&lt;/a&gt; | Southampton, UK / Remote | A short, 3-stages interview process. The first stage is with HR. The second stage is a take-home assignment. The third stage is discussing the take-home assignment solution with two engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.benshi.ai"&gt;Benshi.ai&lt;/a&gt; | Barcelona, Spain | Initial 15-30 mins interview with HR, followed by 15-30 mins chat with hiring manager to clear out basic concepts, then followed by take-home task for 5 days&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.betterment.com/careers"&gt;Betterment&lt;/a&gt; | New York, NY | Phone interview followed by on-site pair programming to simulate a Betterment feature build.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.betterhealthcare.co/careers"&gt;BetterPT&lt;/a&gt; | New York, NY | Initial phone interview, project using our tech stack, on-site code review/pair programming and "meet the team".&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bevelop.de"&gt;bevelop&lt;/a&gt; | Aschaffenburg, BY / Remote | Initial introductory call, on-sight or remote trial day with project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bignerdranch.com/careers"&gt;Big Nerd Ranch&lt;/a&gt; | Atlanta, GA &amp;amp; Remote | Interviews and pair programming on an internal project or problem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bigabid.com/careers"&gt;BigaBid&lt;/a&gt; | Tel Aviv, Israel | Design a real time solution to a problem relevant to the business, followed by a take home project implementing a lean version of the solution&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bigbinary.com/jobs"&gt;BigBinary&lt;/a&gt; | Remote | Phone discussion with a developer and the CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bioconnect.com"&gt;BioConnect&lt;/a&gt; | Toronto, Canada | Take-home assignment &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bitchief.com"&gt;Bitchief Technology Services&lt;/a&gt; | India, Gurgaon | Screening Round: General comms and aptitude, Technical Round: Questions related to required technology, Home Assignments&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bitexpert.de/karriere"&gt;bitExpert AG&lt;/a&gt; | Mannheim, Germany | Interview with experience based technical questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bitpanda.com/en/career"&gt;Bitpanda&lt;/a&gt; | Cracow, Poland / Remote | HR talk, take-home task, tech interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bitsoflove.be/careers"&gt;Bits of Love&lt;/a&gt; | Bruges, Belgium | In-person interview to evaluate experience and motivation, potentially followed by take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitso.com/jobs"&gt;Bitso&lt;/a&gt; | Mexico City, Mexico / Remote | Intro phone or hangouts/skype call with People team, take home project followed by walkthrough of your code and some tech questions focused on your experience, founders video call with one of the founders&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blackdotsolutions.com"&gt;Blackdot Solutions&lt;/a&gt; | Cambridge, UK | Take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blacktech.com.np"&gt;BlackTech&lt;/a&gt; | Pokhara, NP | Take-home project followed by on-site face to face or remote video conference interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bleacherreport.com"&gt;Bleacher Report&lt;/a&gt; | San Francisco, CA, USA | Take-home project; on-site discussion about the project and meeting with different teams&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blendle.homerun.co/?lang=en"&gt;Blendle&lt;/a&gt; | Utrecht, The Netherlands | Take-home project &amp;amp; pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blogfoster/join-the-engineering-team"&gt;blogfoster&lt;/a&gt; | Berlin, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bloomworks.digital/jobs"&gt;Bloom Works&lt;/a&gt; | Remote | Discussion, pair-programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bluebottlecoffee.com"&gt;Blue Bottle Coffee&lt;/a&gt; | Oakland, CA | Technical Phone Screen, Take Home Challenge, Technical in-persons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.bluesoft.com.br"&gt;Bluesoft&lt;/a&gt; | São Paulo, Brazil | Takehome project and an interview to evaluate the candidate's previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bocoup.com/careers"&gt;Bocoup&lt;/a&gt; | Boston, MA / Remote | Pair programming with personal laptop on typical problem seen at work&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bonus.ly/careers"&gt;Bonusly&lt;/a&gt; | Boulder, CO | Values &amp;amp; Tech focused interview - Process: 30 minute with HR, 45 minute Google Meet interview with 2 team members, ~2-4 hour take-home project, on-site interview involving 2 values-alignment interviews and 1 technical interview going over your take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bookingsync.com/en/jobs"&gt;BookingSync&lt;/a&gt; | Remote | Small takehome project, interviews over skype with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://boomtownroi.com"&gt;BoomTown&lt;/a&gt; | Charleston, SC / Atlanta, GA / Remote | Conversational in-person interviews with potential team members and managers that revolve around past experience and how that could be applied to future work&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://botika.ai"&gt;Botika&lt;/a&gt; | San Marino, RSM | View code, projects, libraries or any other open source story that you have been a part of, take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bouvet.no"&gt;Bouvet&lt;/a&gt; | Bergen, Norway | Pair programming with senior engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://brainn.co"&gt;brainn.co&lt;/a&gt; | São Paulo, BR | Zoom/On-site interview, take-home project and interview with a team leader.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://brainstation-23.com"&gt;BrainStation-23&lt;/a&gt; | Dhaka, BD | A practical project followed by series of in-person interview sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.brmbl.io"&gt;Bramble&lt;/a&gt; | Remote | Slack interview, take home test, pairing, culture-fit interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://breather.com/jobs"&gt;Breather&lt;/a&gt; | Montreal, Canada | Series of interviews including a conversation about the candidate’s experience and a technical discussion involving real world problems&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.brightbytes.net/careers"&gt;BrightBytes&lt;/a&gt; | San Francisco, CA | Time-boxed coding exercise at home and on-site pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.brighthr.com/careers"&gt;BrightHR&lt;/a&gt; | Manchester, UK | Telephone conversation, coding exercise at home, on-site pairing with a cultural interview, meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://angel.co/brightwheel/jobs"&gt;brightwheel&lt;/a&gt; | San Francisco, CA | Take home exercise, and systems design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.broadinstitute.org/data-sciences-platform"&gt;Broad Institute's Data Sciences Platform&lt;/a&gt; | Cambridge, MA | Phone screen, small take home project, both a technical and non-technical discussion panel, and a panel following up on the take home project walking through the solution and making a modification to the original code&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://apply.workable.com/broadlume/"&gt;Broadlume&lt;/a&gt; | New York, NY / Remote | Intro phone call with HR, second conversation with Broadlume engineer, and final pairing interview with Broadlume engineer over a screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.brooklyndata.co"&gt;Brooklyn Data Co&lt;/a&gt; | Remote | Zoom interview, take-home project followed by technical interview with ICs with opportunities to discuss the project, interview with team leaders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.browserstack.com/careers"&gt;BrowserStack&lt;/a&gt; | Mumbai, India; Dublin, Ireland | Initial phone screen with semi-technical questions, two 2-hour assignments based on real problems solved in company (allowed to lookup internet), final interview with EMs/Director.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bryter.com/careers"&gt;BRYTER&lt;/a&gt; | Remote | Initial 30min video call for getting to know each other, one 90min technical interview where you talk about one relevant previous project and we then dive deeper together (no pairing session or any other kind of exercise), second 90min interview where we ask questions around giving/receiving feedback and your ability to build relationships in remote setting, two final calls with people lead and then founder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.btw.so"&gt;btw&lt;/a&gt; | Remote/ Singapore, Singapore / Bangalore, India | Initial phone screen for cultural round, optional take-home assignment, two rounds of video interviews (1-2hrs) discussing through previous projects and technical stack&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bubblin.io"&gt;Bubblin Superbooks&lt;/a&gt; | Remote | View code, projects, libraries or any other open source story that you have been a part of, a small take-home project with real code occasionally.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://buffer.com/journey"&gt;Buffer&lt;/a&gt; | Remote | Interviews over video call, code walkthrough of real code focussing on decisions and reasoning, then a 45 day full time, fully paid contract project working on production code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bugcrowd.com/about/careers/"&gt;Bugcrowd&lt;/a&gt; | San Francisco, CA / Sydney, NSW | Take home exercise, half-day onsite walking through code, and pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://buildkite.com/home"&gt;Buildkite&lt;/a&gt; | Remote | No CV required. Anonymized writing assessments. Video chat with founder and future team member about you, the job, and the company. Last video chat is a pair programming for technical roles or more in-depth chat for non-technical roles. Offer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.busbud.com/en/careers"&gt;Busbud&lt;/a&gt; | Montreal, Canada | Phone screening, followed by a 2-4 hours take home assignment. If the challenge is a success, on-site or remote interview with team members, including someone who reviewed it, to talk about it and potential next steps if the challenge was a real life task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.lever.co/BDG?department=Product&amp;amp;team=Engineering"&gt;Bustle&lt;/a&gt; | New York City, NY / Remote | Half day pair programming on a task for production or one of our Open Source projects. We'll also buy you lunch with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.busuu.com/jobs"&gt;busuu&lt;/a&gt; | London, UK | Video call to show real code as first stage. In office pair programming, white board real world problem that we've encountered before, and history/experience discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://buttercms.com"&gt;ButterCMS&lt;/a&gt; | Chicago, IL; Remote | Take home exercise and half-day of pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bybox.com/company/careers/"&gt;ByBox&lt;/a&gt; | Remote | Phone interview followed by interview with devs (ideally in person but sometimes Skype) covering technical experience and coding exercise with real code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://byu.edu"&gt;BYU OIT&lt;/a&gt; | Provo, UT | Take home programming challenge. Discussion in the interview about solution, among other normal hiring questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cabify.careers/en/"&gt;Cabify&lt;/a&gt; | Remote | First a phone screening with the recruiter to talk about your past experiences and the take-home assignment, then you will receive a take home project to deliver within 2 weeks and finally a zoom interview to talk about your project's solution and some other questions about decision making and company values.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.caci.com/ListJobs/All/Search/location/rome/state/ny/country/us"&gt;CACI Rome&lt;/a&gt; | Rome, NY; Remote | Phone interview followed by in-person or Skype screen sharing interview with a coding exercise in either Java, web (Node.js + frontend), or both. Interview format is exclusive to the Rome, NY office and may not be shared by other regional CACI offices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://boards.greenhouse.io/cakedefi"&gt;Cake DeFi&lt;/a&gt; | Remote; Central, Singapore | Initial HR interview, followed with technical lead interview with take home projects relevant to work, and finally cultural interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.calendly.com"&gt;Calendly&lt;/a&gt; | Remote; Atlanta, GA; Austin, TX | Initial phone screen followed by a panel interview primarily focused on a low-stress and real world set of problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.capgemini.com/gb-en"&gt;Capgemini UK Java Team&lt;/a&gt; | London, UK; Woking, UK; Bristol, UK; Cardiff, Wales; Birmingham, UK; Manchester, UK; Leeds, UK; Rotherham, UK; Liverpool, UK; Newcastle, UK; Edinburgh, Scotland; Glasgow, Scotland | Technical telephone interview (30 minutes), take-home non-CompSci coding exercise (3-4 hours), face-to-face role-played consulting scenario involving a solution architecture and a delivery plan (two hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.caravelo.com/careers"&gt;Caravelo&lt;/a&gt; | Barcelona, Spain | Take home project, then technical discussion about the code in-person or Skype and hang out with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careera.io"&gt;Careera&lt;/a&gt; | Singapore, Singapore | Video/phone interview, code review&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.carto.com/careers/"&gt;CARTO&lt;/a&gt; | Madrid, Spain | Phone screen, take-home project, team code review/interview, hiring manager interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://casetext.com/jobs"&gt;Casetext&lt;/a&gt; | San Francisco, CA | Submit code sample for review/discussion, contract for one full day (paid)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cashlink.de"&gt;CASHLINK&lt;/a&gt; | Frankfurt, Germany | Skype/phone interview, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.causeway.com/content/opportunity"&gt;Causeway&lt;/a&gt; | United Kingdom, India | Skype or Telephonic discussion on approaches and experience in regards to solve projects related work, then face to face round to write small solutions to common problems in related field.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chamatheapp.bamboohr.com/jobs/"&gt;Chama The App&lt;/a&gt; | Amsterdam, The Netherlands | Cultural fit interview, home test, technical interview with the team and then interview with the leadership&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chargify.com/jobs"&gt;Chargify&lt;/a&gt; | San Antonio, TX / Remote | Take-home project &amp;amp; pair on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://checkout51.com/jobs"&gt;Checkout 51&lt;/a&gt; | Toronto, Canada | Phone conversation (15-20 minutes) followed by on-site pair programming and discussion focused on understanding decisions made during on-site work&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://checkr.com/company/careers"&gt;Checkr&lt;/a&gt; | San Francisco, CA / Denver, CO / Orlando, FL / Remote | 1 hour CoderPad problem, if pass, then four 1 hour interviews: API Design using your computer and languages, Refactoring in language of your choice, Object Design (no coding), System Architecture (no coding) and sometimes a 30 minute manager chat &lt;a href="https://medium.com/checkr/an-engineers-guide-to-interviewing-at-checkr-fc28f9e8014b"&gt;read more&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.chef.io/careers"&gt;Chef&lt;/a&gt; | Seattle, WA / Remote | Take home small project testing the ability to implement real world problems. Phone/Zoom interviews discussing the said project. Checking if the candidate would be a good cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://ctic-inc.com/careers/"&gt;Chesapeake Technology&lt;/a&gt; | Denver, CO / Santa Barbara, CA / Camarillo, CA / Dulles, VA / California, MD / Remote | Phone screen (30 minutes), take home at leisure question based on real development followed by in person review of solution and general technical questions with actual team and opportunity for you to ask questions and provide feedback ( 2-3 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.chg-meridian.com"&gt;CHG-MERIDIAN&lt;/a&gt; | Weingarten, Germany | Face-to-face or video interview with our IT manager and human resources. Spend half a day at our headquarters and get to know the team, chat about current projects, etc., and finish up with having lunch together.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ciandt.com/us/en-us/careers/open-positions"&gt;CI&amp;amp;T&lt;/a&gt; | New York, NY / London, UK / Tokyo, Japan / Campinas, Brazil / Shanghai, China / Medellín, Colombia / Lisbon, Portugal / Melbourne, Australia / Remote | Video screening followed by a technical interview focusing on software engineering skills and finally, a feedback interview with the hiring manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://circleci.com"&gt;CircleCI&lt;/a&gt; | San Francisco, CA / Remote | Take-home project and discussion, followed by on-site interview that includes pair programming on actual CircleCI bugs/feature requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://boston.gov/analytics"&gt;City of Boston's Analytics Team&lt;/a&gt; | Boston, MA | Take-home project and in-person or phone/Skype interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://beta.phila.gov/departments/office-of-open-data-and-digital-transformation/jobs"&gt;City of Philadelphia's Office of Open Data &amp;amp; Digital Transformation&lt;/a&gt; | Philadelphia, PA | Take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.civisanalytics.com/careers"&gt;Civis Analytics&lt;/a&gt; | Chicago, IL | Take-home project and discussion via Skype, followed by pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cj.com/careers"&gt;CJ Affiliate&lt;/a&gt; | Los Angeles, CA &amp;amp; Westlake Village, CA | Phone coding design exercise (no algorithms), followed by an on-site final interview that includes pair programming on a realistic object-oriented design problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://clara.com/careers"&gt;Clara Lending&lt;/a&gt; | San Francisco, CA | Phone conversation around technical background and experience, followed by take-home project, pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.clarisights.com"&gt;Clarisights&lt;/a&gt; | Bangalore, India / Remote | Culture fit Interview, Basic Tech Round, Design Interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.clickmagick.com"&gt;ClickMagick&lt;/a&gt; | Austin, TX / Remote | Phone conversations and examples of Free Software/Open Source work&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://clippings.com"&gt;Clippings&lt;/a&gt; | Sofia, Bulgaria | Video screening first, then send us code they've recently wrote, then technical interview. We could ask questions about the code they wrote at home.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cwconsult.dk"&gt;Clockwork Consulting&lt;/a&gt; | Copenhagen, Denmark | Interviews, discussion of technical background and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.close.com/careers"&gt;Close&lt;/a&gt; | Remote | Interviews and take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloudconsultants.ch"&gt;Cloud Consultants&lt;/a&gt; | Zurich, Switzerland; Remote | Phone interview, followed by the submission of a use case resolution to evaluate the problem solving skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloudbees.com/careers"&gt;CloudBees&lt;/a&gt; | Remote | Multiple interviews, discussion of technical background and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://clusterdev.com/#careers"&gt;ClusterDev&lt;/a&gt; | Kochi, India; Remote | Phone interview, Take home project and discussion later on about past experiences and/or personal projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code-orange.nl"&gt;Code Orange&lt;/a&gt; | Amsterdam, Netherlands | Phone conversation followed by take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cogent.co.jp"&gt;Cogent Labs&lt;/a&gt; | Tokyo, Japan | On-site or video call conversation around technical background and experience, followed by take-home project that resembles a problem Cogent Labs solves for. This project will serve as the base of discussion with the developers for the second interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.cognitran.com/employment-opportunities"&gt;Cognitran&lt;/a&gt; | Essex, UK / Szczecin, Poland / Detroit, MI | Skype/phone interview followed by pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kelas.colearn.id/career"&gt;Colearn&lt;/a&gt; | Remote; Bengaluru, India; Jakarta, Indonesia; Abu Dhabi, UAE; Central, Singapore | Alignment call with HR or CTO, small take home assignment, remote pair programming session about the assignment with senior engineer &amp;amp; tech lead.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.collabora.com/careers.html"&gt;Collabora&lt;/a&gt; | Cambridge, UK / Montreal, Canada / Remote | On-site or video interview, discussion of technical experience and sometimes approach for tackling a hypothetical problem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://colonist.io/contribute.html"&gt;Colonist&lt;/a&gt; | Remote | Call-&amp;gt;Solve real product coding assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://combyne.com"&gt;combyne&lt;/a&gt; | Remote / Munich, Germany | Short online technical test, 4-hour take-home project, and culture fit interview with members of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://corporate.comcast.com"&gt;Comcast India Engineering Center&lt;/a&gt; | Chennai, India | Easy-Medium Technical questions asked by Senior Engineers, Hiring Manager Round, HR Interview, Offer Letter&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.compeon.de/karriere"&gt;COMPEON&lt;/a&gt; | Duesseldorf, Germany | Phone interview, followed by onsite discussions and pair programming with our developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://about.cph.org/careers.html"&gt;Concordia Publishing House&lt;/a&gt; | St Louis, MO | Take-home project followed by discussion of it on-site with future teammates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://condenastinternational.com"&gt;Condé Nast International&lt;/a&gt; | London, UK | Phone interview, 2 hour take-home project, and on-site with discussion of project, experience, and general technical questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://contactlab.com/en/careers"&gt;Contactlab&lt;/a&gt; | Milan, Italy | Recruiter interview, tech interview (technical background and experiences), both on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://container-solutions.com"&gt;Container Solutions&lt;/a&gt; | Remote; Berlin, Germany; Amsterdam, Netherlands; London, UK | Unbiased process in a nutshell: chat with one of our recruiters, skills assessment and tech assessment, personality assessment which is followed by an interview with one of our occupational psychologists to discuss results. At the end a panel interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.contentful.com/careers"&gt;Contentful&lt;/a&gt; | Berlin, Germany &amp;amp; SF, USA | Multiple interviews, discussion of technical background &amp;amp; live coding challenge (you can use the internet).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.contentsquare.com/careers"&gt;ContentSquare&lt;/a&gt; | Paris, France | Real-world challenges with open discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.contino.io/join-us"&gt;Contino&lt;/a&gt; | London, UK; New York, USA; Sydney, Australia | Intro call, remote pair programming interview (Your IDE, your language, no code challenges), An open discussion on experience and technical background&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://convertkit.com/careers"&gt;ConvertKit&lt;/a&gt; | Remote | Fully remote job in USA and EMEA timezones with interview process starting with a written application, phone screen, short 2-hour coding and writing assignment, technical interview about assignment and culture contribution interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.convious.com"&gt;Convious&lt;/a&gt; | Vilnius, Lithuania | Intro interview (video call), followed by a homework assignment, followed by a bit more technical interview discussing homework, technical background, etc. Homework feedback is always provided.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cookpad.com/us"&gt;Cookpad&lt;/a&gt; | Tokyo, Japan; Bristol, UK | Interviews, discussion of technical background and experiences, remotely pair with devs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coorpacademy.com"&gt;Coorp Academy&lt;/a&gt; | Paris, France | Technical interview as an open discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.cortlex.com"&gt;Cortlex&lt;/a&gt; | Vilnius, Lithuania | Non-technical screening call with recruiter, then online interview with experience based technical questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cosium.com"&gt;Cosium&lt;/a&gt; | Versailles, France | Phone screen, take-home coding challenge, remote or on-site technical interview starting with a quiz about tech fundamentals that often leads to an open discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cossacklabs.com/job/"&gt;Cossack Labs&lt;/a&gt; | London, UK / Kyiv, UA / Remote | Initial screening video call, technical take-home challenge, technical interview with the team about real-world tasks and candidates' day-to-day work (programming, networking, OS, SSDLC, security).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coverhound.com"&gt;CoverHound, Inc.&lt;/a&gt; | San Francisco, CA | Open technical discussion, short on-site coding challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.coxenterprises.com/home-technology/"&gt;Cox Enterprises&lt;/a&gt; | Atlanta, GA; Remote | First-round behavioral interview with Engineering Lead, second-round technical discussion with the dev team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coyoapp.com"&gt;COYO&lt;/a&gt; | Hamburg, Germany | Exemplary take home project in different front- and backend flavors, followed by tech interview &amp;amp; meet the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://angel.co/company/cquence-app/jobs"&gt;Cquence&lt;/a&gt; | Remote | Phone screen, take-home coding challenge, collaborative technical interview, and behavioral interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://boards.greenhouse.io/creditas"&gt;Creditas&lt;/a&gt; | Curitiba, Brazil | Phone conversations about the company and the opening; remote and on-site team interviews (tech-focused); take-home programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crownstone.rocks/jobs"&gt;Crownstone&lt;/a&gt; | Rotterdam, Netherlands | Technical interaction using previously created GitHub projects, followed by in-person interview with a focus on someone's professional ambition in the short and long term.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cube19.com/work-with-us/"&gt;cube19&lt;/a&gt; | London, UK | Take-home project, then an on-site discussion about the code and previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cultivatehq.com"&gt;Cultivate&lt;/a&gt; | Edinburgh, UK | 30 minute pair-programming screening interview on a simple exercise (remote or in-person). Half day pair programming, with 3 or 4 different team members plus informal chat, typically on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.culturefoundry.com"&gt;Culture Foundry&lt;/a&gt; | Austin, TX | Paid take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.currencytransfer.com"&gt;CurrencyTransfer&lt;/a&gt; | London, UK &amp;amp; Remote | Take-home project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;D - F&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.dare.global/careers/"&gt;Dare&lt;/a&gt; | London, UK | Phone screen, On-site (or remote) pair programming and architecture discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.datatheorem.com"&gt;Data Theorem&lt;/a&gt; | Palo Alto, CA; Paris, Fr; London, United Kingdom; Remote | Phone interview, then a take home project and finally in-person interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://DataChef.co"&gt;DataChef&lt;/a&gt; | Amsterdam, Netherlands | Video call (technical questions about candidate's achievements), take home assignment, cultural fit zoom or face to face with rest of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://datamade.us"&gt;DataMade&lt;/a&gt; | Chicago, IL | After submitting an application, selected applicants are moved on to a round of interviews and will be asked to submit a piece of code for review. If you don’t have any code you can share, DataMade will provide a short exercise for you to complete. An in-person (or remote) interview will be scheduled to go over your background, what draws you to DataMade, and your code sample.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://datascopeanalytics.com/careers/"&gt;Datascope&lt;/a&gt; | Chicago, IL | Take home exploratory data project with public data, discussion about the project via video chat, and in-person office visit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.defmethod.com"&gt;Def Method&lt;/a&gt; | NYC, NY | Take home test, pair programming with dev on test and client work, receive offer same day as pairing interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://deliverycenter.gupy.io"&gt;Delivery Center&lt;/a&gt; | Rio de Janeiro, Brazil &amp;amp; Remote | Interviews with the team about the company and the opening, with a short take-home project using their main stack.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://carreiras.deliverymuch.com.br"&gt;Delivery Much&lt;/a&gt; | Florianópolis, Brazil &amp;amp; Remote | On-site (and/or remote) interviews about the company and the opening, with a short take-home project for leveling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://angel.co/dentolo"&gt;Dentolo&lt;/a&gt; | Berlin, Germany | Phone interview with the HR department, take-home project and technical interview to discuss your skill set + general questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.deskbookers.com/en-gb/jobs"&gt;Deskbookers&lt;/a&gt; | Amsterdam, Netherlands | Phone screen, take-home project, on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.desmart.com"&gt;DeSmart&lt;/a&gt; | Gdynia, Poland | Technical interview, take-home project and talk about your experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://despark.com"&gt;Despark&lt;/a&gt; | Sofia, Bulgaria &amp;amp; Remote | Culture add interview, sample code review and paid pair programming with team member or take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.detroitlabs.com/careers"&gt;Detroit Labs&lt;/a&gt; | Detroit, MI | Our technical interview starts with a take-home assignment that we will look at during the interview. You'll walk us though your thought process, add functionality if applicable to the interview, and talk about your experience. We believe that showing us your work in a practical setting is more telling of your abilities and what you will bring to the table, than writing code on a whiteboard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.dev.to"&gt;DEV&lt;/a&gt; | Remote | Written application, job-specific questionnaire and/or task, team interviews (total interview time under two hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://devboost.com/karriere"&gt;DevBoost&lt;/a&gt; | Dresden, Germany | On-site get-to-know interview, on-site pair-programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developmentseed.org/careers"&gt;Development Seed&lt;/a&gt; | Remote / Washington, DC / Lisbon, Portugal / Ayacucho, Peru | Introductory discussion; in-depth technical video interview (no whiteboard, and no live coding); mission &amp;amp; values video interview; onsite (or remote) 1 or 2 days paid working "sprint" in the context of a real project, culminating in a brief presentation of completed sprint work&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://devfolio.co"&gt;Devfolio&lt;/a&gt; | Bangalore, India; Remote | Phone call, followed by a small take home problem. Finally a F2F or Zoom pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://devsdata.com"&gt;DevsData&lt;/a&gt; | New York, NY; San Francisco, CA; Warsaw, Poland; Frankfurt, Germany; Remote | Video interview, 3-hours take-home assignment, technical video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.dg-i.net"&gt;DG-i&lt;/a&gt; | Cologne, Germany | Take-home project and/or discussion on-site about past experiences&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.dice.se"&gt;DICE&lt;/a&gt; | Stockholm, Sweden | Take-home project and code review at the on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://digia.com/en/careers/"&gt;Digia&lt;/a&gt; | Helsinki, Finland | Behavioral interview and a technical discussion to chat about design patterns and other matters regarding the position. Both stages through Microsoft Teams.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.di.fm"&gt;Digitally Imported&lt;/a&gt; | Denver, Colorado &amp;amp; Remote | Video meetings on past experience and high level tech questions, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://digitalservice.bund.de/en/career"&gt;DigitalService&lt;/a&gt; | Berlin, Germany | Initial screening call with HR and Engineering Manager, take-home challenge or bring your own project, discussion about solution/project and past experience with two engineers, culture fit interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dixa.com/careers"&gt;Dixa&lt;/a&gt; | Copenhagen, Denmark | Initial phone call. Take-home programming task, then on-site discussion followed by online personality test&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://about.doctolib.fr/jobs"&gt;Doctolib&lt;/a&gt; | Paris, France; Berlin, Germany | Take-home project, on-site interview and work half a day with one of our feature team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doist.com"&gt;Doist&lt;/a&gt; | Remote | Personal interviews with part of the team and a takehome programming assignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.dollarshaveclub.com"&gt;Dollar Shave Club&lt;/a&gt; | Venice, California | Phone interview, take-home projects, on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://door2door.io"&gt;door2door&lt;/a&gt; | Berlin, Germany | Take home challenge + on-site interview + trial day&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doublenines.co"&gt;Double Nines&lt;/a&gt; | Remote | Initial screening call with recruiter, culture/vibe conversation with engineering leadership, and a technical interview where you bring a recent project you've worked on to present and answer questions about architectural/strategic decisions as well as show code you've written.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.google.com/document/d/1fC_-liTPpYQOoE_5iKj0O3AwSdPggQGnOsjUKahfbkQ/edit?usp=sharing"&gt;Draft Fantasy&lt;/a&gt; | Tel Aviv, Israel | Talk about past experience and what the developer has actually built as well as pair programming or a programming exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://draftbit.com"&gt;Draftbit&lt;/a&gt; | Remote | Phone screening, take-home assignment based on an old project; pair programming and interview with team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.drawbotics.com/en/join-us"&gt;Drawbotics&lt;/a&gt; | Brussels, Belgium | Take-home project, bootcamp on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.drchrono.com/careers"&gt;drchrono&lt;/a&gt; | Mountain View, CA | Hackerrank test (but not CS trivia, it's real product problems) &amp;amp; on-site/take-home project w/ presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.drivy.com"&gt;Drivy&lt;/a&gt; | Paris, France | Phone screening followed by a take-home assignment, "Resume" interview, technical interview, product interview, interview with another team, finalizing the hire&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.dronedeploy.com/careers.html"&gt;DroneDeploy&lt;/a&gt; | San Francisco, CA | Pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://apply.workable.com/bayutdubizzle/#jobs"&gt;dubizzle&lt;/a&gt; | Dubai, UAE; Sindh, Pakistan; Cluj County, Romania | Take home assignment, general technical questions, pair programming with engineers or tech leads&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://duckduckgo.com/hiring"&gt;DuckDuckGo&lt;/a&gt; | Remote | Up to two paid projects and video call interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://easytaxi.com.br"&gt;Easy Taxi&lt;/a&gt; | São Paulo, Brazil | Take-home project, interview to evaluate the candidate's previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.eatsleepride.com"&gt;EatSleepRIDE&lt;/a&gt; | Toronto, Canada | Interview with CTO to discuss current experience/projects. Take home assignment. Behavioral interview with rest of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://eaze.com/careers"&gt;Eaze&lt;/a&gt; | San Francisco, CA | Take home project, on-site interview building off of the project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.ebayinc.com/join-our-team/start-your-search/find-jobs-by-location/detail/germany"&gt;eBay Kleinanzeigen&lt;/a&gt; | Berlin, Germany | 45 mins technical phone interview, take-home project/review, on-site interview including pair programming with team lead and agile interview with product manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.ecaresoft.com"&gt;Ecaresoft&lt;/a&gt; | Monterrey, Mexico | Cultural fit session and Predictive Index test with recruiter, best piece of code review and technical interview with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://echobind.com/culture"&gt;Echobind&lt;/a&gt; | Boston, MA; Remote | Meet the entire team, share examples of previous work and pair with one team member&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.edenspiekermann.com"&gt;Edenspiekermann&lt;/a&gt; | Amsterdam, Netherlands / Berlin, Germany / Los Angeles, CA / San Francisco, CA / Singapore, Singapore | On-site chat about skills and past experiences, review some code samples or a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.ef.com"&gt;EF Education First&lt;/a&gt; | London, UK; Boston, MA | Short phone interview, take-home project, discussion of project and real world engineering problems, meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://efishery.darwinbox.com/ms/candidate/careers"&gt;Efishery&lt;/a&gt; | Bandung, Indonesia | Phone interview, HR Interview, take-home assignment, Presentation about the take home assignment and approach used, User Interview, Salary Negotiation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://eidu.com"&gt;Eidu&lt;/a&gt; | Berlin, Germany | Take-home project, discussion of results with team, and test days with pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.elnino.tech"&gt;El Niño&lt;/a&gt; | Enschede, The Netherlands; The Hague, The Netherlands | On-site chat about the candidate experience and the company followed by a trial day relevant for the role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.elpassion.com"&gt;El Passion&lt;/a&gt; | Warsaw, Poland | Take-home project, interview to 1) discuss delivered solution and 2) previous projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.electricpulp.com"&gt;Electric Pulp&lt;/a&gt; | Sioux Falls, SD, USA | Phone interviews with leadership team and technical team leads. We are a tight knit team, so emphasis on a great personal fit is as important as technical prowess.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.elements.nl/careers"&gt;Elements Interactive&lt;/a&gt; | Almere, The Netherlands &amp;amp; Barcelona, Spain | Take-home project &amp;amp; discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ellucian.com/About-Us/Careers/"&gt;Ellucian&lt;/a&gt; | Reston, VA, USA | Discussion of real world problems (from resume, if possible)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://elmah.io"&gt;elmah.io&lt;/a&gt; | Aarhus, Denmark / Remote | Discussion about code and looking at hobby projects (if any)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.elvie.com"&gt;Elvie&lt;/a&gt; | London, England | Discussing real code, pairing and a paid day to see how you work with the team. No coding for free or time-restricted take-home projects, code challenges or abstract algorithm tests&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goo.gl/N7SMKl"&gt;eMarketer&lt;/a&gt; | New York, NY | Short phone interview, then come in and meet the team, check out our space, and have a discussion with team members about real-world problems&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.emarsys.com"&gt;Emarsys&lt;/a&gt; | Budapest, Hungary | Take-home project (small, 1-2 days to solve), then discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.emergentsoftware.net"&gt;Emergent Software&lt;/a&gt; | Minneapolis, MN | Phone intro, discuss recent project, short take home project (4h max) with code review, real world open ended questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.endpointdev.com"&gt;End Point Dev&lt;/a&gt; | New York, NY; Johnson City, TN; Remote | Video interview with senior technical management followed by 2-hour scheduled take-home project similar to work done for our clients.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.endava.com/en/"&gt;Endava&lt;/a&gt; | Belgrade, Serbia; Bucharest, Romania; Chisinau, Moldova; Cluj-Napoca, Romania; Iasi, Romania; Pitesti, Romania; Skopje, Macedonia; Sofia, Bulgaria; Frankfurt, Germany; Glasgow, Scotland; Hilversum, Netherlands; London, UK; Oxford, UK; Bogota, Colombia; Atlanta, GA; New Jersey, NJ; New York, NY | On-site discussion about previous experience and technical questions about the target technologies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.engelvoelkers.com/en/tech/"&gt;Engel &amp;amp; Völkers Technology&lt;/a&gt; | Hamburg, Germany | Remote technical interview with an Engineering Manager, followed by a practical coding challenge implemented in 5 hours, ending with a technical discussion with the team on the produced code either remotely or on-site based on geographical practicality.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://enhancv.com/about.html"&gt;Enhancv&lt;/a&gt; | Sofia, Bulgaria | Talk is cheap, show us your code: github profile or other project examples. Explain them in person / remotely. Discuss habits and interests to see if we have a culture fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.enigma.com"&gt;Enigma&lt;/a&gt; | New York, NY | 2-part takehome project, followed by a pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://enki.com"&gt;Enki&lt;/a&gt; | London, UK | Skype/phone interview followed by takehome project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.equalexperts.com"&gt;Equal Experts&lt;/a&gt; | London, UK; Manchester, UK; New York, NY; Pune, India; Lisbon, Portugal; Calgary, Canada | Fizzbuzz test done at home followed by Pair Programming session at office and finally face to face technical and attitude interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ericsson.com"&gt;Ericsson&lt;/a&gt; | Dublin, Ireland | Skype/phone interview followed by Face 2 Face interview, discussions and architecture questions followed by final small project on a problem similar to daily work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://esharesinc.com/jobs"&gt;eShares, Inc&lt;/a&gt; | San Francisco, CA; Palo Alto, CA; Seattle, WA; Rio de Janeiro, Brazil; London, UK; New York, NY | Phone call, practical technical screen, on site to meet the team &amp;amp; explore the company&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://espeo.eu/career"&gt;Espeo Software&lt;/a&gt; | Poznań, Poland | 30 min HR interview, 1 hour technical interview, 1 hour soft skills interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://etermax.com/en/careers/"&gt;Etermax&lt;/a&gt; | Buenos Aires, Argentina | Skype/phone screen with two engineers &amp;amp; HR, 30 min HR onsite interview, 2 hour onsite pair programming session (with focus on testing and design) with feedback&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.etixeverywhere.com/en/job-offers"&gt;Etix Everywhere&lt;/a&gt; | Luxembourg City, Luxembourg&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://euranova.eu"&gt;EURA NOVA&lt;/a&gt; | Mont-Saint-Guibert, Belgium; Marseille, France; Tunis, Tunisia | attitude interview, unpaid take-home project, technical discussion with 1 or 2 technical employees (remote or face 2 face), face 2 face discussion with HR, partner, and technical staff to have a foretaste of the collaboration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.europaymentgroup.com"&gt;Euro Payment Group&lt;/a&gt; | Frankfurt, Germany | Take-home project followed by face to face interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://eworx.gr/jobs"&gt;EWORX&lt;/a&gt; | Athens, Greece | Take-home project and discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://exmox.com/career"&gt;Exmox&lt;/a&gt; | Hamburg, Germany; Remote | Video call with our CTO, then a technical discussion around a project of your choice or a take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://exoscale.ch"&gt;Exoscale&lt;/a&gt; | Lausanne, Switzerland | Take-home project. Discussion and presentation. Then entire team meet.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.extend.com/careers"&gt;Extend&lt;/a&gt; | San Francisco, CA; Dallas, TX; Remote | Phone call, a take home project similar to making a PR at work, then a meet &amp;amp; greet with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.eyevinntechnology.se"&gt;Eyevinn Technology&lt;/a&gt; | Stockholm, Sweden | Remote or face 2 face interview followed by take-home project. Then a discussion on-site where we go through the technical aspects of the project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fdex.com.br"&gt;F(x)&lt;/a&gt; | São Paulo, Brazil | Skype interview, Take-home project and onsite interview to evaluate the candidate&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.facebook.com/careers/jobs"&gt;Facebook (Front End Engineer)&lt;/a&gt; | Tel Aviv, Israel; London, UK; US: Menlo Park, CA; Seattle, WA; Washington, DC | Initial phone code interview, then on site interview (or remote when not possible) with code and design / architecture interviews. All questions are based on actual problems the company has solved in the past.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.facile.it"&gt;Facile.it&lt;/a&gt; | Milan, Italy; Cagliari, Italy; Remote | Initial call/Skype interview with HR. Tech interview about OOP concepts, HTTP and REST API design questions with 2 engineers. Brief talk with VP of Engineering or CTO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fairwinds.com/careers"&gt;Fairwinds&lt;/a&gt; | Remote | Start with a brief talk with CTO or VP of Engineering, take home coding challenge, then remote interviews with several people on the engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.falcon.io/jobs/"&gt;Falcon.io&lt;/a&gt; | Copenhagen, Denmark | Initial call/Skype culture interview. Take-home tech assignment (game) and code review. On-site Interview about your experience and meeting the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.fastbill.com/jobs"&gt;FastBill&lt;/a&gt; | Frankfurt, Germany | Initial interview via Skype/Zoom. Small tech-home project based on the specific job. Afterwards code review and technical discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.fatmap.com"&gt;FATMAP&lt;/a&gt; | London, UK; Berlin, Germany; Vilnius, Lithuania | Skype discussion, Take-home project, Face to face&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fauna.com"&gt;Fauna&lt;/a&gt; | San Francisco, CA / Remote | Take home project, then follow up with interviews on-site or remote. Interviews are both technical and non-technical. Technical interviews comprehend the scope of the home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://boards.greenhouse.io/fetchrewards"&gt;Fetch Rewards&lt;/a&gt; | Remote | Short take-home project. 50 min screening interview that includes discussion of project. 5.5 hr (w/ breaks) final interview that involves speaking with your future manager and a non-technical product manager, a real-world coding problem, and high-level and low-level system design problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://field33.com/jobs"&gt;Field 33&lt;/a&gt; | Berlin, Germany | Video call interview followed by a take home project over a 3 day duration chosen by the candidate with hours spent up to the candidate. The project is tailored to the position and skill level of the candidate and resembles a past real-life problem encountered at our company. Solution is discussed in a ~30min call.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.filestage.io"&gt;Filestage.io&lt;/a&gt; | Stuttgart, Germany; Remote | Intro call, Take home technical assessment, Tech discussion on assessment and interview with Head of Development and an Engineer, Meeting with founders&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.findy.co.jp"&gt;Findy&lt;/a&gt; | Tokyo, Japan | Tech interview + On-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.wearefine.com/careers"&gt;FINE&lt;/a&gt; | Portland, OR | Small take-home challenge + follow-up discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://firehire.ai"&gt;FireHire&lt;/a&gt; | Wilmington, USA / Remote | Soft Skills Check + Hard Skills Check with lead engineer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.firemind.io"&gt;Firemind&lt;/a&gt; | Maidstone, UK; London, UK; Remote | Small pre-interview challenge on github + discussion face to face in person or via video&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://thefitbot.com/careers.html"&gt;Fitbot&lt;/a&gt; | Boulder, CO | Pairing &amp;amp; writing code with the founders for a few hours&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flatfox.ch"&gt;Flatfox&lt;/a&gt; | Zurich, Switzerland | Informal conversation to check mutual fit, small (4h) take-home assignment, discussion in team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flower.ai"&gt;Flower Labs&lt;/a&gt; | Cambridge, UK; Berlin, Germany; Remote | Reach out to us by email or on Slack with your CV. You'll receive a written interview which should take 15min to 30min to complete, after which we'll schedule at most 2x technical video interviews with a potential take-home assignment in between. Alternatively, you share the Open-Source code you have written so we can discuss that.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fluidly.com"&gt;Fluidly&lt;/a&gt; | London, UK | Casual 30min phone call. ~1hr take home tech exercise (not pass or fail). 1 stage onsite interview - discussion about experience, 1 hour pair programming on the real code base, then your turn to interview us!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fold.money"&gt;Fold&lt;/a&gt; | Bangalore, India; Remote | Phone call, followed by a small take home problem. Finally a F2F or Zoom pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.fonoa.com/careers"&gt;Fonoa&lt;/a&gt; | Remote | Phone call, async questions regarding expectations and past experience, interview regarding communication and principles, async work sample, interview and AMA with CTO, interview with one of the founders&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://food52.com/jobs"&gt;Food52&lt;/a&gt; | New York, NY; Remote | Take-home project, discussion on-site or remote, interviews with both technical and non-technical staff&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fooji.com"&gt;Fooji&lt;/a&gt; | Lexington, KY; Remote | Take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.form3.tech/careers"&gt;Form3&lt;/a&gt; | Remote | Preliminary call, take-home project, three stage interview (code review, technical assessment and debugging exercise)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.formidable.com/careers"&gt;Formidable Labs&lt;/a&gt; | Seattle, WA; London, UK; Remote | Take-home project, remote pair programming, discussion on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fortumo.com/careers"&gt;Fortumo&lt;/a&gt; | Tallinn, Estonia; Tartu, Estonia | After a 30-min call you get a simplified version of a task that has recently been a challenge for the engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://founders.as/joinus"&gt;Founders&lt;/a&gt; | Copenhagen, Denmark | Take Home project + Interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.foundryinteractive.com/contact"&gt;Foundry Interactive&lt;/a&gt; | Seattle, WA | On-site or remote discussion, paid trial project with pairing and code reviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.fournova.com/jobs"&gt;fournova&lt;/a&gt; | Remote | Take-home project, discussion via video call&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.fourthwall.com"&gt;Fourthwall&lt;/a&gt; | Poznan, Poland; Remote | Paid take home, simple project. One technical interviews (how to build, solve specific, real world problem).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://frappe.io/careers"&gt;Frappe&lt;/a&gt; | Mumbai, India; Remote | Take-home project, a short pair programming exercise, discussion and interview with members of the Engineering team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freeagent.com/company/careers"&gt;FreeAgent&lt;/a&gt; | Edinburgh, UK | Take-home project, pair programming, discussion and interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freeletics.com/en/corporate/jobs"&gt;Freeletics&lt;/a&gt; | Munich, Germany | Small real-world challenge, multiple interviews on-site/remote and social gathering with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freetrade.io/careers"&gt;Freetrade&lt;/a&gt; | London, England | Initial hangout with fizz buzz style question followed by an on-site real world coding question and systems design conversation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://friday-jobs.personio.de"&gt;FRIDAY&lt;/a&gt; | Berlin, Germany | Take-home real-world challenge, interview on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://frontside.io/careers"&gt;Frontside&lt;/a&gt; | Austin, Texas | Phone interview with remote pairing session. Followed by in person pairing (paid for the day) and lunch with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.fullfacing.com/vacancies"&gt;Full Facing&lt;/a&gt; | Cape Town, South Africa | Take-home real-world challenge, interview on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.funda.nl/vacatures"&gt;Funda&lt;/a&gt; | Amsterdam, The Netherlands | Take Home test + Discussion On-Site/Remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.fundapps.co/about-us/join-our-team"&gt;FundApps&lt;/a&gt; | London, UK | Coffee with an Engineer; take-home kata; code review + on-site pair programming exercise.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;G - I&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://careers.garmin.com"&gt;Garmin&lt;/a&gt; | Tucson, AZ | Non-technical phone screen, technical phone screen (questions about projects on your resume), in-person interview: programming an arduino, given 3 hours and a laptop with internet access&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.garnercorp.com"&gt;Garner&lt;/a&gt; | Toronto, Canada | step 1: online chat with hiring manager, step 2: at home assignment solving real-life problem, step 3: on-site pair programming with engineers, step 4: offer&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.gasketgames.com/work-with-us"&gt;Gasket Games&lt;/a&gt; | Vancouver, Canada | Non-technical phone screen, technical phone screen (open-ended questions), in-person interview / culture fit interview&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://gathercontent.com/about-us"&gt;GatherContent&lt;/a&gt; | Remote | Culture-first interviews, pair programming and remote, informal technical discussions&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://gcore.com/careers"&gt;Gcore&lt;/a&gt; | Remote | Non-technical screening, 2 hours technical and soft skills interview including architecture discussion&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://gemini.com/careers"&gt;Gemini&lt;/a&gt; | New York, NY | Phone chat. Take-home project, discussion on-site. Questions on prior experiences and culture fit&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.genui.com"&gt;GenUI&lt;/a&gt; | Seattle, WA | A short phone screen with questions regarding general knowledge related to the open position, then a half day pair programming interview.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.geosite.io"&gt;Geosite&lt;/a&gt; | Remote | Phone chat -&amp;gt; Take home project resembling the team focus -&amp;gt; Discussion about takehome &amp;amp; culture fit.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://ghostinspector.com/jobs"&gt;Ghost Inspector&lt;/a&gt; | Remote | Video interview, short (under 2 hour) take-home project, and team video interview&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://jobs.ginetta.net"&gt;Ginetta&lt;/a&gt; | Zurich, Switzerland; Braga, Portugal | Culture-first interviews, take home assignment that resembles a real-world problem we often solve, then discussion about the assignment in-person with pair-programming improvement sessions with our developers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/about/careers"&gt;GitHub&lt;/a&gt; | Remote; San Francisco, CA; Boulder, CO| Take-home exercise, code review and technical discussions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://about.gitlab.com/jobs/apply/"&gt;GitLab&lt;/a&gt; | Remote | A series of video calls, and a coding exercise involving working on a Merge Request that is like a real work task&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://glassdoor.com"&gt;Glassdoor&lt;/a&gt; | Remote; San Francisco, CA; Chicago, IL; Uniontown, OH | A series of video calls, some coding exercises involving real world problems (Styling a page with CSS, Using JavaScript to fetch data from an API and display on a page.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://glints.com/sg/inside/careers/"&gt;Glints&lt;/a&gt; | Singapore, Singapore; Jakarta, Indonesia | Culture fit interview, take home assignment that resembles a real-world problem, walkthrough about the assignment&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://gmfinancial.com/en-us/company/careers.html"&gt;GM Financial&lt;/a&gt; | Irving, TX; Remote | Roles under &lt;a href="https://globalcareers-gmfinancial.icims.com/jobs/search?ss=1&amp;amp;searchKeyword=Software+Development+Engineer&amp;amp;searchCategory=8741"&gt;Marketing Technology team&lt;/a&gt; are 100% remote and only have HR Screening + 2 rounds: 1st round: Technical conversation with an architect and a senior engineer regarding candidate's experience and how that matches up to the role. Final round: cultural/behavioral interview with hiring manager.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://goalbookapp.com/careers/"&gt;Goalbook&lt;/a&gt; | Remote | Virtual interviews with recruiter, sr engineer, and hiring manager. Short real-world take-home project w/ follow-up conversation. Final interviews w/ CEO/Founder and Product team lead.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://gocardless.com/about/jobs"&gt;GoCardless&lt;/a&gt; | London, UK | Project to work at home, general technical questions, pair programming with engineers&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.gojek.io"&gt;GoJek&lt;/a&gt; | Bangalore, India; Jakarta, Indonesia; Singapore, SG; Bangkok, Thailand | Take-home exercise, Pair programming with senior engineer, Technical problem solving and discussion, Cultural Fit&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://gower.st"&gt;Gower Street Analytics&lt;/a&gt; | Remote; London, UK | Initial telephone chat, then either a) work with us, fully paid, for a day on real code with the team; or b) pair-programming on a code kata with the team members for four pomodoros. Your choice.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.graffino.com"&gt;Graffino&lt;/a&gt; | Sibiu, Romania | Take-home project, discussion on-site&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://graftonstudio.com"&gt;Grafton Studio&lt;/a&gt; | Boston, MA | Take-home project, discussion on-site&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://gram.gs"&gt;Gram Games&lt;/a&gt; | London, UK / Istanbul, Turkey | Initial interview -&amp;gt; Take home -&amp;gt; Take home discussion call -&amp;gt; On site code review and technical discussions&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.gramercytech.com"&gt;Gramercy Tech&lt;/a&gt; | New York, NY | Pair programming &amp;amp; discussion on-site&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.grandcentrix.net/jobs"&gt;grandcentrix&lt;/a&gt; | Cologne, Germany | Take-home project, discussion on-site&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.chatgrape.com/jobs/"&gt;Grape&lt;/a&gt; | Vienna, Austria / Remote | GitHub or code samples -&amp;gt; Pair programming -&amp;gt; Skype/phone interview&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://graph.digital"&gt;Graph Digital&lt;/a&gt; | London, UK | Initial screening call with Engineering Manager, take-home challenge or bring your own project, discussion about solution/project and past experience with two engineers, culture fit interview.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.graphicacy.com"&gt;Graphicacy&lt;/a&gt; | Washington, DC | Phone interview; in-person or virtual interview depending on location and availability; two brief technical assignments focused on flexibility, creativity, and general competency&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.graphistry.com"&gt;Graphistry&lt;/a&gt; | San Francisco, CA; Remote | Discuss product/market, engineering, and culture, review past code/project, and for junior developers, choice of take home or code review.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://greatminds.recruitee.com"&gt;Great Minds, PBC&lt;/a&gt; | Washington, DC | Zoom interview, technical interview discussing past real world experiences as well as knowledge of tools that will be used for position&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://gridscale.io"&gt;Gridscale&lt;/a&gt; | Cologne, Germany / Remote | Intro video call for open Q&amp;amp;A, followed by intro with hiring manager, team fit with the whole team plus a small real-world problem to solve, followed by final round with hiring manager and/or c-level/founder.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.gruntwork.io"&gt;Gruntwork&lt;/a&gt; | Remote | Paid, take-home project with pair coding&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://gtmsportswear.com/careers"&gt;GTM Sportswear&lt;/a&gt; | Manhattan, KS / Remote | Remote pairing session, then a take-home test.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://hacktiv8.com"&gt;Hacktiv8&lt;/a&gt; | Jakarta, Indonesia | Phone call for quick project &amp;amp; personal introduction followed by Video call interview with project owner for discussion about the project and general question on how the project should be solved.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://happyteam.io"&gt;Happy Team&lt;/a&gt; | Warsaw, Poland; Remote | General technical questions, takehome paid exercise with feedback/discussion during implementation&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="http://www.happypie.com"&gt;Happypie&lt;/a&gt; | Uppsala, Sweden | Takehome exercise with code review after, in-person interview&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://lil.law.harvard.edu/collaborate/"&gt;Harvard Library Innovation Lab&lt;/a&gt; | Cambridge, MA | Take home project that mirrors work we might do on a &lt;a href="https://lil.law.harvard.edu/sketches/"&gt;Sketch&lt;/a&gt; and follow up discussion after.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.hash.com.br/index.html"&gt;Hash&lt;/a&gt; | Sao Paulo, Brazil | Take-home project and/or discussion (on-site or remote)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://hashnode.com/careers"&gt;Hashnode&lt;/a&gt; | Remote | Phone/video call interview for quick personal introduction -&amp;gt; a take-home coding exercise based on real world example -&amp;gt; take-home task discussion -&amp;gt; culture fit session.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://hashrocket.com"&gt;Hashrocket&lt;/a&gt; | Chicago, IL/Jacksonville Beach, FL | Remote pairing session, paid week pair programming with everyone on the team&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://heavenhr.com"&gt;HeavenHR&lt;/a&gt; | Berlin, Germany | Take home project based on the candidate's experience and future responsibilities. Then discussion about the solution&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://helabs.com"&gt;HE:labs&lt;/a&gt; | Rio de Janeiro, Brazil &amp;amp; Remote | Take-home project and discussion via Skype.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.hellofresh.com/jobs"&gt;HelloFresh&lt;/a&gt; | Berlin, Germany | Take-home project, discussion via Skype or on-site&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://herodigital.com"&gt;Hero Digital&lt;/a&gt; | San Francisco, CA; Remote | Take-home project with code review, multiple (non-technical) interviews with different areas of the company about past projects and experience&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://heroku.com/careers"&gt;Heroku&lt;/a&gt; | Remote | Timeboxed independent project on GitHub, discussion/debrief of project via Hangouts, productionization discussion via Hangouts, "meet the team" meeting&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.hhcc.com/careers"&gt;Hill Holliday&lt;/a&gt; | Boston, MA | Take-home project on GitHub, in-person interview / culture fit interview&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.hingehealth.com/careers"&gt;Hinge Health&lt;/a&gt; | Portland, OR; San Francisco, CA; Seattle, WA; Austin, TX; Denver, CO; Montreal, Québec &amp;amp; Remote | Resume deep dive, take-home exercise on GitHub, (virtual) in-person including review of the take-home exercise (1hr), product collaboration, meet the team, and AMA with leadership&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.hireology.com/careers"&gt;Hireology&lt;/a&gt; | Chicago, IL; Remote | Walk through personal/work projects and discuss experience&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.hiventive.com"&gt;Hiventive&lt;/a&gt; | Pessac, France | Phone interview, home coding challenge, on-site interview with general programming questions, discussion of proposed solutions and personal experience.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.holaluz.com/en/work-with-us/"&gt;Holaluz - Platform Team&lt;/a&gt; | Barcelona, Spain | Intro call with HHRR, Small tech test with Terraform and some technical and non-technical questions, Interview with manager, Interview with the Platform Team, Small chat interview with the CEO.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://holidaypirates.group/en/jobs"&gt;HolidayPirates&lt;/a&gt; | Berlin, Germany | Take-home project, discussion via Skype or on-site&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.holobuilder.com"&gt;HoloBuilder&lt;/a&gt; | Aachen, Germany | Take-home project, discussion via Skype or on-site&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.hologram.io/careers"&gt;Hologram&lt;/a&gt; | Chicago, IL; Remote | Intro call, take-home project taken from production work, pair programming exercise&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.homechef.com/careers"&gt;Home Chef&lt;/a&gt; | Chicago, IL; Remote | Get-to-know-you meeting with the team, followed by a half-day collaborative coding session&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.homelight.com/engineering"&gt;HomeLight&lt;/a&gt; | San Francisco, CA; Scottsdale, AZ; Seattle, WA | Phone screen, take home that is close to production code, onsite with pair programming&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.hotjar.com/careers/"&gt;Hotjar&lt;/a&gt; | Remote | Short introduction call -&amp;gt; Technical interview with engineers on real-world problems/system design -&amp;gt; Paid short take-home task -&amp;gt; Team fit interview, EMEA timezones preferred&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://housemarque.com"&gt;Housemarque&lt;/a&gt; | Helsinki, Finland | Interview, take-home project, then interview and code review on-site&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.hoxhunt.com/careers/"&gt;HoxHunt&lt;/a&gt; | Helsinki, Finland | Take-home project, pair programming on-site&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://humanapi.co/company/careers"&gt;Human API&lt;/a&gt; | Redwood City, CA | Technical phone interview, then on-site pair programming and design discussion&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://humi.applytojob.com/apply"&gt;Humi Inc&lt;/a&gt; | Toronto, Canada | Interview, take-home project, then interview and code review on-site&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://io.co.za/opportunities"&gt;I|O&lt;/a&gt; | Cape Town, South Africa&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://icalialabs.com"&gt;Icalia Labs&lt;/a&gt; | Monterrey, Mexico | Pair programming, cultural fit session&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://ideamotive.co"&gt;Ideamotive&lt;/a&gt; | Warsaw, Poland &amp;amp; Remote | Take-home project, technical interview with developer&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.ideo.com/jobs"&gt;IDEO&lt;/a&gt; | San Francisco, CA; New York, NY; Chicago, IL; Cambridge, MA | Take home project that resembles a problem IDEO solves for, then pairing session in person or over video chat.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://boards.greenhouse.io/scout24"&gt;ImmobilienScout24&lt;/a&gt; | Berlin, Germany | Take-home project, discussion on-site&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="http://jobs.impraise.com"&gt;Impraise&lt;/a&gt; | Amsterdam, The Netherlands | Take home test, real world pair programming&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="http://www.indellient.com/careers"&gt;Indellient&lt;/a&gt; | Oakville, Canada | Series of interviews both technical and non-technical&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://jobs.infarmbureau.com/home-office"&gt;Indiana Farm Bureau Insurance&lt;/a&gt; | Indianapolis, Indiana | series of interviews with team, followed by an interview with manager&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://inevitableinnovations.com"&gt;INEVITABLE&lt;/a&gt; | Manchester, UK | Take-home project, discussion on-site&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.influxdata.com/careers"&gt;InfluxData&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Technical and non-technical interviews, pair programming, with prospective manager and multiple prospective teammates&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.infosum.com"&gt;InfoSum&lt;/a&gt; | Basingstoke, UK | On-site unsupervised exercise &amp;amp; discussion.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://inkindcapital.com"&gt;inKind Capital&lt;/a&gt; | Boulder, CO | Discussing real-world problems, pair programming, dinner &amp;amp; drinks with the team&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.inmar.com/careers"&gt;Inmar&lt;/a&gt; | Winston-Salem, NC; Austin, TX &amp;amp; Remote | Take-home project and conversation-style interviews&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.innoplexus.com/careers"&gt;Innoplexus&lt;/a&gt; | Pune, India; Frankfurt, Germany | Take-home projects and On-site pair programming assignment.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.innoviacolabs.com"&gt;Innovia CoLabs&lt;/a&gt; | Rochester, NY / Remote | Zoom interview with two to three engineers and you share projects/code you're proud of; only reviewing code you wrote yourself. Most of the interview is about culture fit and who you are as a person. There is a blog on the website that outlines the interview and will contact you prior to tell you exactly what the interview will be like.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://internshala.com/internships/internship-at-InstantPost"&gt;InstantPost&lt;/a&gt; | Bangaluru, India | Remote assignment followed by Technical and Team round interview&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.integral.io"&gt;Integral.&lt;/a&gt; | Detroit, MI | 3-step process (100% remote): tech-screening with an engineer for 30 minutes, remote pair-programming and test driven development exercise for 1 hour, conversation with engineering leadership for 30 minutes.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.intelipost.com.br"&gt;Intelipost&lt;/a&gt; | São Paulo, BR | Take-home project, on-site code review and presentation (skype available if needed), discussion involving real world problems and interviews with different teams&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://interfrog.de/jobs"&gt;Interfrog Produktion GmbH&lt;/a&gt; | Mannheim, Germany | Phone interview with developer and CEO to get to know each other and to understand skills and background. Follow-up interview to discuss technical realization of sample work which is handed over after the first interview.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.investsuite.com/jobs"&gt;InvestSuite&lt;/a&gt; | Remote; Leuven, Belgium | Take home project -&amp;gt; discuss with 2 developers on-site or remote -&amp;gt; job offer&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://jobs.ionos.de/career/about-us"&gt;IONOS SE&lt;/a&gt; | Karlsruhe, Germany; Berlin, Germany | Our process has two stages for developers: An interview with your potential team lead followed by an interview with 1-2 future colleagues. All stages can be in-person in one of our offices or via Google Meet.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://itexperts.be"&gt;IT Experts&lt;/a&gt; | Eeklo, Belgium | On site interview -&amp;gt; 1 or 1/2 day at the office to solve a real world problem with the team -&amp;gt; job offer.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://itdesign.de/karriere/"&gt;itdesign&lt;/a&gt; | Tübingen, Germany | Short phone or personal interview. A day at our company to give you and us the opportunity to get to know each other.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.ithaka.travel"&gt;Ithaka&lt;/a&gt; | Mumbai, India | Phone interview followed by a small development task. Finally a phone interview with CEO.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://itrellis.com"&gt;iTrellis&lt;/a&gt; | Seattle, WA | Phone screen, then a take-home project, then pairing (remote or on-site) with 3 developers on the take-home project.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://jobs.izettle.com/jobs"&gt;iZettle&lt;/a&gt; | Stockholm, Sweden | Remote pair programming exercise, propose an architecture for an application and discuss about it in an informal format.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;J - L&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.jamasoftware.com"&gt;Jamasoftware&lt;/a&gt; | Portland, OR | Initial phone screen with hiring manager. In person pairing on project similar to day-to-day work with a separate cultural interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jamitlabs.com/jobs"&gt;Jamit Labs&lt;/a&gt; | Karlsruhe, Germany | Phone interview or on-site interview &amp;amp; take-home code challenge or on-site programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://iheartjane.com"&gt;Jane Technologies (iheartjane.com)&lt;/a&gt; | Santa Cruz, CA; Remote | Short take-home challenge, followed by practical interviews based on position the applicant is seeking&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.jeli.io"&gt;Jeli&lt;/a&gt; | Remote; San Francisco, CA | A series of conversations involving product deep dive, technical discussions, and behavioral topics. Discussions are open ended conversations about how one would approach solving real world problems. Questions may be scenario based involving talking through tradeoffs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.jetstack.io/careers"&gt;Jetstack&lt;/a&gt; | London, UK | Phone screen; shared terminal session on Linux &amp;amp; Programming; Take home task&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.jiminny.com"&gt;Jiminny&lt;/a&gt; | Sofia, Bulgaria | Phone screen. Take-home exercise. Follow-up discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.jitbit.com"&gt;Jitbit&lt;/a&gt; | Remote; London, UK; Tel-Aviv, Israel | Take-home real-world task&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://weare.jobtome.com"&gt;Jobtome&lt;/a&gt; | Stabio, Switzerland | Phone screen introduction with hiring manager. In site (or screen call) with Engineer Manager for a talk on skills and cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://journaltech.com/careers"&gt;Journal Tech&lt;/a&gt; | Los Angeles, CA | Mini take-home project, phone interview, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.jplusplus.org"&gt;Journalism++&lt;/a&gt; | Berlin, Germany | Apply through a &lt;a href="http://internship.jplusplus.org"&gt;relevant online challenge&lt;/a&gt; to show your technical skills and your capacity to investigate&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.lever.co/JOURNEE"&gt;JOURNEE&lt;/a&gt; | Berlin, Germany / Remote | Cultural fit assessment, Interview, Take-home assignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nl.jobs.jumbo.com/nl"&gt;Jumbo&lt;/a&gt; | Veghel, Netherlands | Culture Fit call, take-home project, design discussion based on take-home project, system design conversation online or in-person.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.justwatch.com/us/talent"&gt;JustWatch&lt;/a&gt; | Berlin, Germany | Take-Home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.khealth.ai"&gt;K Health&lt;/a&gt; | Tel Aviv, Israel | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.getkahoot.com/jobs"&gt;Kahoot!&lt;/a&gt; | London, UK / Oslo, Norway | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kata.ai"&gt;Kata.ai&lt;/a&gt; | Malang, Indonesia / Jakarta, Indonesia | Take-home assignment, then invited to discuss the assignment and interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.kayako.com"&gt;Kayako&lt;/a&gt; | London, UK / Gurgaon, India | Take-home assignment, series of experience based interviews, cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.kefrobotics.com"&gt;KEF Robotics&lt;/a&gt; | Pittsburgh PA, USA | Presentation on a technical topic of your choice, cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.kentik.com/careers"&gt;Kentik&lt;/a&gt; | San Francisco, CA | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://keymetrics.io"&gt;Keymetrics&lt;/a&gt; | Paris, France | Phone Interview, Take-home project based on our &lt;a href="https://github.com/keymetrics/keymetrics-api"&gt;API&lt;/a&gt;, IRL meeting with the whole team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.kienguru.vn"&gt;Kiến Guru&lt;/a&gt; | Hồ Chí Minh, Vietnam | Phone screening with technical recruiter --&amp;gt; live coding with an engineer --&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) --&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.kindredplc.com"&gt;Kindred Group, Native Apps Team&lt;/a&gt; | Stockholm SE, London UK | On-site/Skype programming task, Interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.kinnek.com/jointeam"&gt;Kinnek&lt;/a&gt; | New York, NY | Phone screen, on-site pairing session, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kinsta.com/careers/"&gt;Kinsta&lt;/a&gt; | Remote | Culture fit interview, take home assignmentv, discussion on-site, technical interview discussing past real world experiences as well as knowledge of tools that will be used for position&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.kiwi.com"&gt;Kiwi.com&lt;/a&gt; | Brno, Czech Republic | Phone Interview, Take-home projects, On-site code review &amp;amp; interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.knock.com/careers"&gt;Knock.com&lt;/a&gt; | San Francisco, CA / New York, NY / Remote | Phone Interview, Take-home project, On-site technical conversation relating to the tech stack you would be hired to build with&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://knplabs.com"&gt;KNPLabs&lt;/a&gt; | Nantes, France | First step: screening call directly with the CEO, to discuss company vision, assess cultural fit and experience. Second step: call or IRL interview with a developer and a project facilitator , technical discussions with focus on soft skills. The goal of the interview is for the 2 KNPeers to be able to answer: “Do I want to work with this person ?” If both say yes, the person is hired. If even at least one says no, the person is not hired.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.koala.io"&gt;Koala&lt;/a&gt; | Remote | Phone screen. Open-ended take-home coding challenge. Pair Programming exercise. Meet the CEO and the rest of team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kodify.io"&gt;Kodify&lt;/a&gt; | Remote | HR interview, technical interview, take-home test related to role, technical interview about the test&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gokoho.com"&gt;Koho by Expeditors&lt;/a&gt; | Portland, OR | Phone screening. Take home assignment. Conversational technical and cultural interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.konghq.com/careers"&gt;Kong&lt;/a&gt; | San Francisco, CA | Phone interview. Pairing and technical interviews. Take home assignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.kongregate.com/jobs"&gt;Kongregate&lt;/a&gt; | Portland, OR | Phone screening. Take home project. On-site pairing and conversational technical interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kontainer.com/vacant-positions-in-kontainer-job-and-career"&gt;Kontainer&lt;/a&gt; | Copenhagen, Denmark | Phone screening. Practical questions on how past experience matches the job position. On-site technical interviews with lead engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lightning.korbit.co.kr"&gt;Korbit&lt;/a&gt; | Seoul, South Korea | Take home assignment followed by on-site code review and interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kulkul.tech/careers"&gt;Kulkul Tech&lt;/a&gt; | Jakarta, Indonesia | Take home and an in-person system design interview, then soft skills and culture assessment via interviews with the senior leadership team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.kungfu.ai"&gt;KUNGFU.AI&lt;/a&gt; | Remote; Austin, TX | 30-40 minute recruiter screen, 30 minute hiring manager screen, 1.5 hour final interview (discussion only, no coding or whiteboarding).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://lab.coop"&gt;Lab.Coop&lt;/a&gt; | Budapest, Hungary | Partnership-fit discussion, code-review and trial days.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.lab49.com/careers/"&gt;Lab49&lt;/a&gt; | New York, NY; Washington, DC; London, UK; Sydney, AU | First interview - Pairing interview using Codility. Final interviews that include a coding challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://landing.jobs/at/landing-jobs"&gt;Landing.jobs&lt;/a&gt; | Lisbon, Portugal | Interviews (in-person or remote), Take home coding project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lattice.com/careers"&gt;Lattice&lt;/a&gt; | San Francisco, CA; New York, NY; Remote | Technical exercises based on work we do at Lattice, discussion of a new architecture to solve a real world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://launchacademy.com/careers"&gt;Launch Academy&lt;/a&gt; | Boston, Philadelphia | Nontechnical phone screen, pair programming with team member, and potentially a "guest lecture" for our students&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://launchdarkly.com/careers"&gt;LaunchDarkly&lt;/a&gt; | Oakland, CA | Informational phone screen with Eng leadership, take home project, onsite interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://league.com/ca/careers"&gt;League&lt;/a&gt; | Toronto, Canada | Initial interview with talent team, take home coding challenge &amp;amp; technical interview to discuss, take home architecture challenge &amp;amp; interview to discuss, cross-functional interview, executive interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leapsome.com"&gt;Leapsome&lt;/a&gt; | Berlin, Germany | Phone screen with technical co-founder, take home case study, onsite culture-fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://learningbank.dk"&gt;Learningbank&lt;/a&gt; | Copenhagen, DK | Take home assignment, followed by on-site code review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.legalstart.fr"&gt;Legalstart.fr&lt;/a&gt; | Paris, France | Telephone interview followed by take-home challenges. Suitable applicants are asked to do further on-pair interviews on site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.leverton.ai"&gt;Leverton&lt;/a&gt; | Berlin, Germany | Initial chat with the HR continued with 1-2 rounds chat with the team; followed by a technical test and finally a chat with the CTO/MD. &lt;a href="https://leverton-jobs.personio.de"&gt;Jobs page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.libertymutualgroup.com/careers"&gt;Liberty Mutual&lt;/a&gt; | Seattle, WA; Boston, MA; Indianapolis, IN | Initial interview, discussion on-site, interview with peers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.librato.com/jobs"&gt;Librato&lt;/a&gt; | San Francisco, CA; Boston, MA; Austin, TX; Vancouver, Canada; Krakow, Poland | Take home coding project, conversational technical interviews on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lightningjar.agency"&gt;Lightning Jar&lt;/a&gt; | San Antonio, Tx | Remote pairing session, Initial interview,discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.lightricks.com"&gt;Lightricks&lt;/a&gt; | Jerusalem, Israel | Initial interview, Take home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.linkaja.id"&gt;LinkAja&lt;/a&gt; | Jakarta, Indonesia | Quick introductory chat, followed by take home project for 7 days&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.linkresearchtools.com/job-offers"&gt;LinkResearchTools&lt;/a&gt; | Vienna, Austria | Skype interview, mini take-home exercise, discussion on-site / personal interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.linxsystems.com"&gt;Linx Systems&lt;/a&gt; | Bloomington, IL / Remote | 5-10 minute take home project; followed by a non-technical interview; finish up with a second take home project or paired with a developer for a 30-60 minute session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.lise.de/karriere/stellenboerse"&gt;lise GmbH&lt;/a&gt; | Cologne, Germany | Phone interview, followed by getting to know each other in person, a short presentation about any topic you are interested in, pair programming on a real world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.listenlively.com/about#careers"&gt;Listen Lively&lt;/a&gt; | Remote | 1 hour pair programming exercise on codesandbox; a second 1 hour pair programming exercise on codesandbox; followed by non-technical interview(s) with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://listium.com/jobs"&gt;Listium&lt;/a&gt; | Melbourne, Australia | Design and code proof of concept features with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://litmus.com/careers#openings"&gt;Litmus&lt;/a&gt; | Remote | General technical questions, take-home code challenge, discussion, on-site programming session, meet &amp;amp; greet with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.littlethings.com/careers.html"&gt;LittleThings&lt;/a&gt; | New York, NY | Take home code challenge, Discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://loanzen.in/team.html#Career"&gt;LoanZen&lt;/a&gt; | Bengaluru, India | Initial phone interview about experience, a solve-at-home project based on the kind of work we do at our company, on-site interview discussing the submitted solution and a general discussion with the whole team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lob.com/careers"&gt;Lob&lt;/a&gt; | San Francisco, CA | Initial phone screen followed by an on-site interview. Technical problems discussed during the interview are all simplified versions of problems we've had to solve in production. Our entire interview process and what we're looking for is described in our blog post &lt;a href="https://lob.com/blog/how-we-interview-engineers"&gt;How We Interview Engineers&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.locastic.com/posao"&gt;Locastic&lt;/a&gt; | Split, Croatia | Take-home code challenge, technical discussion &amp;amp; on-site programming session, meet &amp;amp; greet with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.locaweb.com.br/carreira"&gt;Locaweb&lt;/a&gt; | São Paulo, Brazil | Skype interview, take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.logiball.de/en/jobs/"&gt;LOGIBALL GmbH&lt;/a&gt; | Berlin, Hannover and Herne in Germany | Interviews and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://logicsoft.co.in"&gt;Logic Soft&lt;/a&gt; | Chennai, India | Phone discussion, F2F pair programming exercise + discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.lonres.com/public/working-us"&gt;LonRes&lt;/a&gt; | London, United Kingdom | Quick introduction call with tech (Skype), coding task for ≈1 hour, face-to-face interview (or via Skype) and meeting with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.pathfactory.com/careers/"&gt;LookBookHQ&lt;/a&gt; | Toronto, Canada | On-site discussion, pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.useloom.com/careers"&gt;Loom&lt;/a&gt; | San Francisco, CA | Google Hangouts resume dive on past experience, take-home project OR architectural phone screen, on-site interviews (2 technical architecture related to work, 1 or 2 non-technical)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://oiluna.com"&gt;Luna&lt;/a&gt; | Sao Paulo, Brazil | Take-home project and/or discussion (on-site or remote)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.lyft.com/jobs"&gt;Lyft's Mobile Team&lt;/a&gt; | San Francisco, CA; Seattle, WA; New York, NY; Minsk, Belarus; Mexico City, Mexico | On-site project, discussion of candidate's completed project afterwards&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lykon.de"&gt;Lykon&lt;/a&gt; | Berlin, Germany | Phone interview followed by home assignment that reflect our daily work and then on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.lyoness-corporate.com/de-AT/Karriere/Jobangebote"&gt;Lyoness Austria GmbH&lt;/a&gt; | Graz, Austria | Take-Home project, discussion on-site&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;M - O&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.madetech.com/careers"&gt;Made Tech&lt;/a&gt; | London, UK | &lt;a href="https://github.com/madetech/handbook/tree/master/guides/hiring#20-minute-phone-conversation"&gt;Our hiring process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://magical.team/work"&gt;Magical&lt;/a&gt; | Tel Aviv, Israel; Remote | Culture fit interview + take home assignment, followed by a technical interview, and a CTO interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://magnetis.workable.com"&gt;Magnetis&lt;/a&gt; | São Paulo, Brazil &amp;amp; Remote | Phone interview + take home assignment, followed by pair programming and informal meeting with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers-mlssoccer.icims.com/jobs/search?ss=1&amp;amp;searchCategory=20285"&gt;Major League Soccer&lt;/a&gt; | New York, NY | Phone interview + short take home project, which is daily work focused. In person interview could involve discussing past projects or pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.makemusic.com/careers/"&gt;MakeMusic&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://maketime.workable.com"&gt;MakeTime&lt;/a&gt; | Lexington, KY | Practical exercise and/or a pairing session on site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.mango-solutions.com/wp/about-mango/team"&gt;Mango Solutions&lt;/a&gt; | London (UK), Chippenham (UK) | Initial phone interview, followed by on-site interview with take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.mapbox.com/jobs"&gt;Mapbox&lt;/a&gt; | San Francisco, CA; Washington, DC; Ayacucho, Peru; Bangalore, India; Berlin, Germany; Remote | Conversational interviews, paid onsite project with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mattermost.com/careers/"&gt;Mattermost&lt;/a&gt; | Remote | Follow-up questions over email, a couple of video calls, audition (paid real-world “try out” project), video call to discuss audtion, and then a video call with the CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.mavenlink.com/careers"&gt;Mavenlink&lt;/a&gt; | San Francisco, CA; Irvine, CA; Salt Lake City, UT | On-site pairing with multiple engineers. Pairing exercises and pairing on company code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.maxwellhealth.com/careers"&gt;Maxwell Health&lt;/a&gt; | Boston, MA | Take-home exercise or pairing session with team. Then conversational meetings with members of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://me-company.de/jobs/"&gt;Me &amp;amp; Company&lt;/a&gt; | Düsseldorf, Germany | You join us for one or two paid trial days to work on an assignment and to meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mealme.ai"&gt;MealMe&lt;/a&gt; | San Francisco, California | Initial introductory interview, 1 hour technical interview with CTO (real-world problem), rapid fire questions about thinking and working in a start-up.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mediapop.co"&gt;Media Pop&lt;/a&gt; | Singapore, Singapore | Take-home or unsupervised (onsite) real-world assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetrics.com"&gt;Meetrics&lt;/a&gt; | Berlin, Germany | Initial interview, take-home code challenge and review&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://underthehood.meltwater.com/jobs"&gt;Meltwater&lt;/a&gt; | Manchester, NH | Small take home exercise that will be presented to the team during a QA style interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mention.workable.com"&gt;Mention&lt;/a&gt; | Paris, FR | Take-home small exercise followed up by on site meetings with your future coworkers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.mercadolibre.com"&gt;Mercado Livre&lt;/a&gt; | São Paulo, Brazil | Phone interview with HR department, Takehome project and discussion (on-site or remote) with an interview to evaluate the candidate's previous experience and Cultural Fit interview with a manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.mercatus.com/company/careers"&gt;Mercatus&lt;/a&gt; | Toronto, Canada | Practical on-site project similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.metro-markets.de/careers/"&gt;Metro Markets&lt;/a&gt; | Düsseldorf, Germany | You can get to know us by joining fully remote interviews with us or you can come and visit us onsite&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.mfind.pl/dolacz-do-nas/"&gt;mfind&lt;/a&gt; | Warsaw, PL | Phone call about technical experience, Take-home project or technical test(depends on experience), Onsite interview with technical lead.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://midrive.com/careers"&gt;miDrive&lt;/a&gt; | London, UK | Phone screen, Take-home project / technical test, Onsite interview with senior and peer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.milchundzucker.de"&gt;milch &amp;amp; zucker&lt;/a&gt; | Gießen, Germany | Interview with direct feedback, applicants providing working sample, code review (product code or personal code of applications)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.minutemedia.com/careers/"&gt;Minute Media&lt;/a&gt; | Tel-Aviv, Israel | Phone screening with engineer. On-site real-world challenge questions with two engineers. Sometimes a take-home assignment or existing code sample submission.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://miro.com/careers/"&gt;Miro&lt;/a&gt; | Amsterdam, NL; Berlin, DE; London, UK | Screen-share your own IDE and code our assignment, on your terms. We share the problem 24 hours in advance, but ask you to only configure the IDE beforehand, so 100% of your coding happens during the interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mirumee.com/jobs"&gt;Mirumee&lt;/a&gt; | Wroclaw, Poland; Remote | Pair programming and code review using one of the issues (or Pull Requests) in our open-source Saleor project, general discussion about programming, technology and candidate's experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mixmax.com/careers"&gt;Mixmax&lt;/a&gt; | San Francisco, CA | Takehome assignment purely based on their platform, followed by phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://themobilereality.com/careers"&gt;Mobile Reality&lt;/a&gt; | Warsaw, Poland | Interview with technical questions and practical task to do in home for 3-5 hours. Candidate has freedom in terms of project environment and setup. After few days feedback arrives in email.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.mobilecashout.com"&gt;MobileCashout&lt;/a&gt; | Barcelona, Spain; Valencia, Spain | Quick introduction video call with a tech (less than 10-15 minutes). On-site open source contribution to a project of candidates choosing, paired with a tech from the team. Interview and a short questionnaire about software design and relevant technologies. Interview and presentation of the company with a HR rep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mobilethinking.ch"&gt;Mobilethinking&lt;/a&gt; | Geneva, Switzerland | 1 hour discussion about technical background and past experiences, preferably in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://about.modeanalytics.com/careers"&gt;Mode&lt;/a&gt; | San Francisco, CA | Phone interview followed by onsite pair-architecting and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mokahr.com"&gt;MokaHR&lt;/a&gt; | Beijing, China | Take home project/challenge, then on-site programming session taken from problems we encounter at work&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.moltencloud.com"&gt;Molten Cloud&lt;/a&gt; | Cambridge, MA; Remote | Technical Interview, behavioural interview with CEO, take-home challenge designed to mirror problems the company encounters&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://moneytree.jp"&gt;Moneytree Front-end Web Team&lt;/a&gt; | Tokyo, Japan | Pair programming exercise and social gathering with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://monite.com"&gt;Monite&lt;/a&gt; | Berlin, Germany | Screening interview with HR (salary expectations, career plans), take-home architectural design project (no code) and technical interview to discuss your skill set + general questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://monzo.com"&gt;Monzo&lt;/a&gt; | London, UK &amp;amp; Remote | Phone interview with another engineer. Take-home assignment. Call to debrief on take-home assignment. Half-day interview (on-site or Hangouts) with three conversational sessions: (1) building on take-home test &amp;amp; real-world system design (verbal and collaborative); (2) digging into knowledge &amp;amp; understanding in 1-2 other relevant technical areas; (3) general background, teams and ways of working.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.moteefe.com/jobs"&gt;Moteefe&lt;/a&gt; | London, UK &amp;amp; Remote | Interview with CTO. Take home project/challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.mozilla.org/listings"&gt;Mozilla&lt;/a&gt; | San Francisco, US; Portland, US; Toronta, CA; Vancouver, CA; Berlin, DE; Remote | Deep-dive discussions on technical and mentorship problems solved in the past. No live coding. Total of 3 rounds.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mutualmobile.com/careers"&gt;Mutual Mobile&lt;/a&gt; | Austin, TX; Hyderabad, India | Technical discussion, code test based on actual work you'll be doing, panel style discussions for cross-functional and culture-fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.mutualofomaha.com/careers"&gt;Mutual of Omaha&lt;/a&gt; | Omaha, NE, USA | Panel Style Interviews analyzing problem solving, ability to adapt well to change, and interpersonal communication skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.mutuallyhuman.com"&gt;Mutually Human Software&lt;/a&gt; | MI, OH, WA | Collaborative problem analysis and design exercise, pairing exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mux.com/jobs/"&gt;Mux&lt;/a&gt; | San Francisco, CA; London, UK &amp;amp; Remote | Hands-on software engineer and system-design interviews that focus on collaboratively building practical applications at scale.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mytaxi.com"&gt;My Taxi&lt;/a&gt; | Hamburg, Germany | Video chat with HR, Take Home Assignment, Review of Assignment with a technical member, Technical interview and onboarding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.myheritage.com"&gt;MyHeritage&lt;/a&gt; | Or Yehuda, Israel; Kyiv, Ukraine | Video call with HR, problem solving test on codility.com, video call with tech lead and solving problem from real project, system design onsite interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://apply.workable.com/mytutor/"&gt;MyTutor&lt;/a&gt; | London, UK | Take home test, followed by pair programming, system design discussion, and cross functional interview on site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://naologic.com/careers/jobs"&gt;Naologic&lt;/a&gt; | San Francisco, US | Takehome programming assignment and personal interviews with part of the founding team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.native-instruments.com"&gt;Native Instruments&lt;/a&gt; | Berlin, Germany | Takehome programming assignment and personal interviews with part of the hiring team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nearsoft.com/join-us/"&gt;Nearsoft Inc&lt;/a&gt; | Hermosillo, Mexico; Chihuahua, Mexico; Mexico City, Mexico | Takehome &lt;a href="https://nearsoft.com/blog/the-logic-behind-nearsofts-logic-test/"&gt;logic test&lt;/a&gt;, english interview to check communication skills, short technical interview about experience, long technical discussion about languages/tools/practices you will use on daily basis, pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lifeatnedap.com/vacatures"&gt;Nedap&lt;/a&gt; | Groenlo, Netherlands / Remote | A simple conversation, human to human and a small on-site project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://neoteric.eu/career/"&gt;Neoteric&lt;/a&gt; | Gdańsk, Warsaw Poland; Remote | Face2Face conversation, take home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.nerdwallet.com/careers"&gt;NerdWallet&lt;/a&gt; | San Francisco, CA; Remote | Code review phone screen, on-site project to build a functioning app with interviewee's platform of choice&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.netguru.co/career"&gt;Netguru&lt;/a&gt; | Warsaw, Poland; Remote | Takehome exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.netlandish.com"&gt;Netlandish&lt;/a&gt; | Los Angeles, CA; Remote | Takehome exercise, chat interview, video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.netlify.com/careers"&gt;Netlify&lt;/a&gt; | San Francisco, CA / Remote | Takehome project and online/onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://neulabs.com/careers"&gt;Neulabs&lt;/a&gt; | Milan, Italy | Initial phone screen with HR. Brief talk with VP of Engineering or CTO. Small take-home project followed by a technical review with 1 or more engineers &amp;amp; a culture-fit discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://neurallab.io"&gt;Neural Lab&lt;/a&gt; | Shatin, Hong Kong; Remote | Online non-technical (Behavioural) interview, followed by a Technical Interview with the core team - mainly revolving around the real-world problems, best approaches and some scenario based questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://newrelic.com/about/careers"&gt;New Relic&lt;/a&gt; | San Francisco, CA | Takehome exercise &amp;amp;/ or pair programming session depending on the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.newstore.com/careers/"&gt;NewStore&lt;/a&gt; | Berlin, Germany; Hannover, Germany; Erfurt, Germany; Boston, MA | Telephone technical interview, code sample submission or takeaway coding exercise, on-site pair programming, design session (1/2 day)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.newvoicemedia.com/about-newvoicemedia/careers"&gt;NewVoiceMedia&lt;/a&gt; | Basingstoke, England; Wroclaw, Poland | Telephone interview, takeaway coding exercise, on-site pair programming, code review &amp;amp; technical discussion (1/2 day)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nexapp.ca/career/"&gt;Nexapp&lt;/a&gt; | Quebec City, Canada | Video call where we get to know you more and you get to know us more, followed by a video call technical interview where we discuss a few open-ended problems strongly inspired by the daily real-world work we do.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nexcess.net"&gt;Nexcess.net&lt;/a&gt; | Southfield, MI | We mostly chat to get a feel on both ends if there's a good cultural fit. We ask questions to see what experience you have and how you think as a programmer. At some point we look at some of your code or have you work on some of ours (1 hour).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nimblehq.co"&gt;Nimble&lt;/a&gt; | Bangkok, Thailand; Ho Chi Minh City, Vietnam; Da Nang, Vietnam | Takehome exercise and specific role discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ninjaneers.de"&gt;Ninjaneers&lt;/a&gt; | Kassel, Germany; Remote | Google Hangouts resume dive on past experience and projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.niteoweb.com/careers"&gt;Niteoweb&lt;/a&gt; | Ljubljana, Slovenia | Join us for a week to see if we fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gonitro.com/about/jobs"&gt;Nitro&lt;/a&gt; | Dublin, Ireland; San Francisco, CA | Phone Call, Take Home Test, Hiring Manager Phone Interview followed by an onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.nmbrs.com"&gt;Nmbrs&lt;/a&gt; | Amsterdam, The Netherlands; Lisbon, Portugal | Cultural interview, take home test, interview with CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.noa.one"&gt;Noa&lt;/a&gt; | Berlin, Germany; San Francisco, CA | 1 technical chat, 2-3 cultural chats with colleagues from different departments in the team, if these work a pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodesource.com/careers"&gt;NodeSource&lt;/a&gt; | Remote | A person-to–person walk through of a past project of yours&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.nomoko.world/jobs"&gt;Nomoko,camera&lt;/a&gt; | Zurich, Switzerland | Three interrogations&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.norbsoft.com/careers"&gt;Norbsoft&lt;/a&gt; | Kraków, Poland; Warszawa, Poland; Sosnowiec, Poland; Remote | Take-home exercise or code sample submission, technical discussion by video conference&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nordsecurity.com/careers"&gt;NordPass&lt;/a&gt; | Remote | HR talk, take-home task, tech interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.noredink.com/jobs"&gt;NoRedInk&lt;/a&gt; | San Francisco, CA | Take-home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.novacare.no"&gt;Nova Care&lt;/a&gt; | Oslo, Norway | Casual interview, take-home exercise &amp;amp; presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.novacredit.com/careers"&gt;Nova Credit&lt;/a&gt; | San Francisco, CA | Choose between a take home assignment or two interviews on CoderPad, CodePen, or your local dev env while screensharing. Final round is onsite working on a small project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://novicap.com/en/careers.html"&gt;NoviCap&lt;/a&gt; | Barcelona, Spain | Takehome exercise &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://novoda.com/joinus"&gt;Novoda&lt;/a&gt; | London, UK; Liverpool, UK; Berlin, Germany; Barcelona, Spain; Remote | 2 x Pairing sessions &amp;amp; conversational interviews &lt;a href="https://github.com/novoda/dojos"&gt;(public repo)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.novus.com/jobs"&gt;Novus Partners&lt;/a&gt; | New York, NY | Take-home exercise &amp;amp; on-site exercises (choice of laptop or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.noyo.com/careers/"&gt;Noyo&lt;/a&gt; | San Francisco, CA / Durham, NC / Remote | Phone interview, take-home assignment, on-site code review, and walk through a past project you're proud of&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nozbe.com/careers"&gt;Nozbe&lt;/a&gt; | Remote | Take-home exercise &amp;amp; interview with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://npmjs.com/jobs"&gt;npm, Inc&lt;/a&gt; | Oakland, CA / Remote | No technical challenges. Just interview conversations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nubank.workable.com"&gt;Nubank&lt;/a&gt; | São Paulo, BR | Phone conversation, take-home exercise, code walkthrough, on-site code pairing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.numberly.com"&gt;numberly&lt;/a&gt; | Paris, France | Series of interviews, that go over technical background, past experiences and cultural knowledge&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://angel.co/numerai/jobs"&gt;numer.ai&lt;/a&gt; | San Francisco, CA&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.nurx.com/technology/"&gt;Nurx&lt;/a&gt; | San Francisco, CA; Remote | Phone screen with recruiter and/or hiring manager, tech assessment with multiple options (full take home, partial take home, no take home), and then virtual on-site with a pair coding session, peer review of a technical document, architecture design, and exec loop&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.nutshell.com/jobs"&gt;Nutshell&lt;/a&gt; | Ann Arbor, MI, US | Email screen / take-home programming exercise (&lt;a href="https://github.com/nutshellcrm/join-the-team"&gt;public repo&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.nyon.nl/jobs"&gt;Nyon&lt;/a&gt; | Amsterdam, The Netherlands | 1. Skype (or real life) interview 2. Take home exercise (3-4 hours) 3. Meet entire team and pair programming sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://oreilly.com/jobs"&gt;O'Reilly Media&lt;/a&gt; | Sebastopol, CA; Boston, MA; Remote | Phone conversation, take-home exercise or pair programming session, team interview, all via Google Hangout&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oakstreethealth.com/careers"&gt;Oak Street Health&lt;/a&gt; | Chicago, IL / Remote | Casual but semi-technical initial phone screen. One hour video call consisting of in depth technical discussion with lead developers followed by one hour of discussion with the product team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://objectpartners.com/careers/"&gt;Object Partners, Inc.&lt;/a&gt; | Minneapolis, MN; Omaha, NE | Phone interview to gauge mutual interest, followed by a slightly more in-depth technical round-table interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.objectiveinc.com/careers"&gt;Objective, Inc.&lt;/a&gt; | Salt Lake City, UT | Take-home programming exercise, then onsite friendly chat with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rejoins.octo.com"&gt;OCTO Technology&lt;/a&gt; | Paris, France | HR interview to go over your experiences and cultural knowledge. Then more or less informal discussion with two future team members about architecture design, agile practices, take-home project, pair programming...&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://octopus.energy/careers/"&gt;Octopus Energy&lt;/a&gt; | London, UK; Sydney, Australia; Remote | Take-home exercise and phone or on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.oda.com/jobs"&gt;Oda&lt;/a&gt; | Oslo, Norway; Helsinki, Finland; Berlin, Germany | Phone screening to discuss technical background and past experience. Take-home assignment followed by virtual project discussion and interview. Cultural fit assessment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grnh.se/e9ddbe544us"&gt;Odeko&lt;/a&gt; | Remote; New York, NY; Dublin, IE | Take-home project (2 hours) related to role, follow-up technical interview where you discuss your project implementation (may perform pair-programming session instead of technical interview).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://olist.com"&gt;Olist&lt;/a&gt; | Curitiba, Brazil | Take-home project and remote or on-site interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.omadahealth.com/jobs"&gt;Omada Health&lt;/a&gt; | San Francisco, CA | Take home exercise and/or pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://oncue.co"&gt;Oncue&lt;/a&gt; | San Francisco, CA; Remote | Online coding test on real-world problems (2 hours). Technical discussion with developer team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.onemainfinancial.com"&gt;OneMain Financial&lt;/a&gt; | Chicago, IL; Remote | Take-home exercise and on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://onesignal.com/careers"&gt;OneSignal&lt;/a&gt; | San Mateo, CA | Intro call with recruiting, second conversation with OneSignal engineer, onsite pairing via screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://onfido.com/jobs"&gt;Onfido&lt;/a&gt; | London, UK; Lisbon, Portugal | Take-home exercise and on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ontame.io"&gt;Ontame.io&lt;/a&gt; | Copenhagen, Denmark | Take home exercise and specific role discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://opbeat.com/jobs#seniorbackendengineer"&gt;Opbeat&lt;/a&gt; | Copenhagen, Denmark | Pairing on a real-world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://angel.co/company/openbasecom"&gt;Openbase&lt;/a&gt; | San Francisco, CA | Take-home exercise on real-world problem &amp;amp; discussion with engineers about exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.openmindonline.it"&gt;Openmind&lt;/a&gt; | Monza, Italy | On-site interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://optilyz.com/careers"&gt;optilyz&lt;/a&gt; | Remote | Either take-home or pair programming on open-source code, then pair programming on our actual production code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.optoro.com/open_position_item/?oid=134960"&gt;Optoro&lt;/a&gt; | Washington, DC | Take home exercise. Review your code onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.optum.in/about/careers.html"&gt;Optum&lt;/a&gt; | India, Hyderabad | Online assessment, followed by technical interview and behavioural check&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ori.co"&gt;Ori&lt;/a&gt;| London, UK | Phone interview and a takehome project, followed by a two hour meeting with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://osism.tech"&gt;OSISM&lt;/a&gt; | Remote | Three video calls: general introduction, team introduction, contract&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ostmodern.co.uk"&gt;Ostmodern&lt;/a&gt; | London, UK | Take-home exercise &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.outbrain.com/?F1C=Netanya&amp;amp;F2C=&amp;amp;FTXT="&gt;Outbrain&lt;/a&gt; | Netanya, Israel | Take-home exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outlandish.com"&gt;Outlandish&lt;/a&gt; | London, UK | Take-home exercise, real-world pair programming session, friendly chat with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/outlook/jobs"&gt;Outlook iOS &amp;amp; Android&lt;/a&gt; | San Francisco, CA / New York, NY | Take-home project &amp;amp; online / onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.nerdery.com/careers"&gt;The Nerdery&lt;/a&gt; | Minneapolis, MN; Chicago, IL; Phoenix, AZ; Kansas City, KS | Take-home exercise&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;P - R&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.pace.car/jobs"&gt;PACE Telematics&lt;/a&gt; | Karlsruhe, Germany | Culture and mindset check, on-site meet and great, small code challenge to see development style and strategy&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.paessler.com/company/career/jobs"&gt;Paessler AG&lt;/a&gt; | Nuremberg, Germany | Pairing with different engineers on a real problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pagar.me"&gt;Pagar.me&lt;/a&gt; | São Paulo, BR | Skype interview, on-site pairing task and-or real world problem solving process / presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pager.com"&gt;Pager&lt;/a&gt; | New York, NY; Remote | Short phone interview, conversational interviews, take-home exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pagerduty.com/careers"&gt;PagerDuty&lt;/a&gt; | San Francisco, CA / Toronto, Canada / Atlanta, GA | Zoom / on-site pair programming and tasks&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tech.palatinategroup.com"&gt;Palatinate Tech&lt;/a&gt; | London, UK | Hangout/Skype/phone followed by (normally) on-site pairing task&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://withpaper.com/careers"&gt;Paper&lt;/a&gt; | San Francisco, CA | Google Meets technical phone screen, take-home coding assignment, on-site with webapp architecture, team lunch, and culture-add conversations&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://parabol.co"&gt;Parabol&lt;/a&gt; | New York, NY; Los Angeles, CA; Remote | Culture check followed by compensated, &lt;a href="https://github.com/ParabolInc/action/projects"&gt;open-source contribution&lt;/a&gt; skills evaluation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://parivedasolutions.com"&gt;Pariveda Solutions&lt;/a&gt; | Dallas, TX / Houston, TX / Atlana, GA / Washington, DC / New York, NY / Chicago, IL / San Francisco, CA / Seattle, WA / Los Angeles, CA | Personality assessment (Predictive Index) and case study. Programming aptitude test (language independent) for college hires.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://passfort.com/about#jobs"&gt;PassFort&lt;/a&gt; | London, UK | Skype interview, and on-site pairing task&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://passiv.com"&gt;Passiv&lt;/a&gt; | Fredericton, Canada | Zoom interview, take-home coding assignment, standalone bite-size project that delivers some value, small feature development involving team collaboration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pathosethos.com/careers/"&gt;Pathos Ethos&lt;/a&gt; | Durham, NC / Raleigh, NC / Chapel Hill, NC / Remote | 3 conversational interviews (Manager, Team, Founder). No homework. We look for a candidate to be "culture add" instead of "culture fit"&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://paws.com/careers"&gt;Paws&lt;/a&gt; | London, UK | Phone screening, take-home project, on-site pairing/discussion on your solution and meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://paybase.io"&gt;Paybase&lt;/a&gt; | London, UK | Phone screening, Take home project, On-site interview for technical and culture fit, Open Q&amp;amp;A session with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.paybyphone.com/careers"&gt;PayByPhone&lt;/a&gt; | Vancouver, Canada | Remote programming interview, on-site "meet the team"&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://peaksware.com"&gt;Peaksware Companies (TrainingPeaks, TrainHeroic, MakeMusic)&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://info.peerstreet.com/careers"&gt;PeerStreet&lt;/a&gt; | Los Angeles, CA | Phone, take home project &amp;amp; on-site to meet the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.pento.io"&gt;Pento&lt;/a&gt; | Remote | Quick personal interview, take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://permutive.com/careers/"&gt;Permutive&lt;/a&gt; | London, UK | Phone call; short, relevant take-home coding assignment; on-site pairing, general technical discussion, values &amp;amp; ways of working interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.persado.com/company/life-at-persado"&gt;Persado&lt;/a&gt; | New York, NY | Phone screen, take home project, remote meeting with team member to discuss the project, remote meeting with team manager to discuss role and go over statistical concepts relevant to the role&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.persgroep.nl/werken-bij-it"&gt;Persgroep, de&lt;/a&gt; | Amsterdam, Netherlands | Tech interview (technical background and experiences) and culture fit, both on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.withpersona.com/about"&gt;Persona&lt;/a&gt; | San Francisco, CA | Tech interview (technical background and experiences), pair programming, and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pex.com/careers/"&gt;Pex&lt;/a&gt; | Los Angeles, CA; Remote | 3 sessions: brief phone conversation (30 min); take home assignment (2 hours); on-site or video discussion without any coding (2 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://empleo.pfsgroup.es"&gt;pfs&lt;/a&gt; | Madrid, Spain; Valencia, Spain; Lisbon, Portugal; CDMX, Mexico; Remote | We adapt each interview according to the candidate and the position. The interviews are open discussions (no quizzes) about real-world problems. 2-3 interviews max, all of them can be done remotely.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://philo.com/jobs"&gt;Philo&lt;/a&gt; | San Francisco, CA; Cambridge, MA | Initial screen with deep-dive into one of your recent projects (30 mins) ; take-home coding exercise tailored your skills (4 hours); on-site with take-home code review, architecture interview, design interview and "soft skills" interview (4 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.phoodster.com"&gt;Phoodster&lt;/a&gt; | Stockholm, Sweden | Take-home exercise + on-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.pieinsurance.com/culture/careers"&gt;Pie Insurance&lt;/a&gt; | Denver, CO; Washington, D.C.; Remote | Phone; remote technical screen paired with another engineer; remote multi-round interview to demonstrate basic backend/frontend skills (no bizarre Leetcode questions), behavioral/culture fit, design skills&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pismo.io/pt/"&gt;Pismo&lt;/a&gt; | Remote; Bristol, UK; Austin, TX; Singapore, Singapore | Initial and quick screening with recruiters from hr department, remote general technical discussion with tech lead and team members, take home assessment (choose between Java and/or Golang), remote pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pixiumdigital.com"&gt;Pixium Digital&lt;/a&gt; | Singapore, Singapore | Remote or on-site interview with few generic / technical questions as well as portfolio review + discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pilot.notion.site/Plane-Careers-Page-0f9a2b64ddd8470f968335b769de0909"&gt;Plane&lt;/a&gt; | Remote | Two calls. Introduction one (30m) + verification of communication skills and remote work experience (15m)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://platform.sh"&gt;Platform.sh&lt;/a&gt; | Remote | Remote Interview, Wide-Ranging discussions on many diverse subjects. Remote interviews with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://platform45.com"&gt;Platform45&lt;/a&gt; | Johannesburg, South Africa; Cape Town, South Africa | On-site interview, take-home project and culture fit day&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://platogo.com/hiring/"&gt;Platogo Interactive Entertainment GmbH&lt;/a&gt; | Vienna, Austria | Simple online questionnaire, First Interview to get to know each other, Remote developer challenge (take home task), Code review together, Meet the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://getcatalyst.in/careers"&gt;Playlyfe&lt;/a&gt; | Bangalore, India | Short personal interview, on-site demonstration of programming in browser devtools followed by discussion about the problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.pleo.io/en/careers"&gt;Pleo&lt;/a&gt; | Remote; Copenhagen, Denmark; London, UK; Berlin, Germany; Stockholm, Sweden; Madrid, Spain| Intro interview (30m-45m), take home assignment, interview with discussion on the assignment + technical questions with the team (90m) and interview with managers (60m).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.poki.com"&gt;Poki&lt;/a&gt; | Amsterdam, The Netherlands | Pair programming on-site w/ two engineers where we focus on teamwork, googling relevant documentation and fixing things together.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://polar.me/company/careers"&gt;Polar&lt;/a&gt; | Toronto, Canada | Phone interview, followed by 1-2 onsite pair-programming interviews based on their platform&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.polleverywhere.com/jobs"&gt;Poll Everywhere&lt;/a&gt; | Remote | Introduction call, 1 hour take home technical assessment, pairing session with Designer and Engineer to enhance technical challenge submission, Meeting with CTO and hiring manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.popstand.com"&gt;Popstand&lt;/a&gt; | Los Angeles, CA | Build MVPs for startups&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.popularpays.com"&gt;Popular Pays&lt;/a&gt; | Chicago, IL | Phone chat/coffee to determine what will be worked on during a day of pair-programming on a real problem that the candidate thinks best demonstrates their skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://posit.co"&gt;Posit&lt;/a&gt; | Remote | Video calls with recruiter then engineering management, take home project, video call for code review with engineering lead&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pragma.team/talent"&gt;Pragmateam&lt;/a&gt; | Sydney, Australia | Engineering Consultancy And Delivery - Takehome exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.premiumbeat.com/careers"&gt;PremiumBeat&lt;/a&gt; | Montreal, Canada | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.primary.com/jobs"&gt;Primary&lt;/a&gt; | New York, NY / Remote | Phone chat, take home exercise, pair program and discuss onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.progressive.com/careers/"&gt;Progressive&lt;/a&gt; | Mayfield Village, OH / Remote | Recruiter phone screen, followed by 2 one-hour &lt;a href="https://www.progressive.com/careers/how-we-hire/application-next-steps/interviewing/"&gt;manager STAR interviews&lt;/a&gt; and 1 one-hour &lt;a href="https://www.progressive.com/careers/life/how-to-prepare-for-a-technical-screening/"&gt;technical STAR interview&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.prokeep.com/careers"&gt;Prokeep&lt;/a&gt; | Remote | Take-home project, informal chat with managers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.promptworks.com/jobs"&gt;PromptWorks&lt;/a&gt; | Philadelphia, PA | Take-home project, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.propertycaptain.ch"&gt;PropertyCaptain&lt;/a&gt; | Zurich, Switzerland | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.proxy.com"&gt;Proxy&lt;/a&gt; | San Francisco, CA | Phone chat. In-depth discussion about experiences on-site. Occasionally a take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pusher.com/jobs"&gt;Pusher&lt;/a&gt; | London, UK | Solve a real-world problem through a design session with our engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pygmalios.com/en"&gt;Pygmalios&lt;/a&gt; | Bratislava, Slovakia | Take-home project related to business and discussion with our engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://qonto.com/en/careers"&gt;Qonto&lt;/a&gt; | Paris, France / Berlin, Germany / Milan, Italy / Barcelona, Spain / Belgrade, Serbia / Remote | Take-home project, code review and discussions with our engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://quietlightcom.com/positions-web.php"&gt;Quiet Light Communications&lt;/a&gt; | Rockford, IL, USA | Discussion, work samples and/or small freelance project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.workatquintype.com"&gt;Quintype&lt;/a&gt; | Bengaluru, India / San Mateo, USA | Take home project, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://quizizz.com"&gt;Quizizz&lt;/a&gt; | Bengaluru, India | Phone chat, real world assignment, discussion w/ developers, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://quizlet.com/careers"&gt;Quizlet&lt;/a&gt; | Remote; San Francisco, CA; New York, NY; London, UK | Preliminary screen followed by role-specific applied exercises where candidates create new projects/apps or make improvements to pre-existing code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragnarson.com"&gt;Ragnarson&lt;/a&gt; | Lodz, Poland; Remote | Take-home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.railscarma.com"&gt;Railscarma&lt;/a&gt; | Bengaluru, India | Take-home project, code review and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.railslove.com"&gt;Railslove&lt;/a&gt; | Cologne, Germany | Have a coffee in our office, casual chat with us, pair programming on a real project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.raisingit.com"&gt;Raising IT&lt;/a&gt; | London, UK | Coffee with a team member, on-site pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ramp.com"&gt;Ramp&lt;/a&gt; | New York, NY | Phone interview on a basic applied problem, followed by 2-3 onsite programming interviews that test practical day-to-day software skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rapidapi.com/company/careers/"&gt;RapidAPI&lt;/a&gt; | San Francisco, CA; Berlin, Germany; Tallinn, Estonia | Take home assignment and discussion before/afterwards&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.rapptrlabs.com"&gt;Rapptr Labs&lt;/a&gt; | Jersey City, NJ | Take-home exercise followed by a video interview with 2-3 engineers about domain-specific knowledge and open-ended questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.rapyuta-robotics.com/pages/jobs.html"&gt;Rapyuta Robotics&lt;/a&gt; | Bengaluru, India / Tokyo, Japan / Zurich, Switzerland | Take-home assignment related to our ongoing projects, series of technical / experience based interviews, candidate presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://razorpay.com/jobs"&gt;Razorpay&lt;/a&gt; | Bangalore, India | Phone screen, On-site pair programming, and occasionally a take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://reaktor.com/careers"&gt;Reaktor&lt;/a&gt; | New York, NY; Amsterdam, Netherlands; Helsinki, Finland; Tokyo, Japan | Discussion, work samples from previous projects (work or hobby), take-home exercise if needed for further info&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://realync.com/careers"&gt;Realync&lt;/a&gt; | Chicago, IL / Carmel, IN / Remote | Quick phone interview, then a take home project and finally in person interview (open discussions instead of quizzes - anything technical are real-world problems).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rebase.fi"&gt;Rebase Consulting&lt;/a&gt; | Helsinki, Finland / Remote | First round general discussion/introductions, second round technical interview built around a take-home exercise, 2x2 skill/interest matrix go-through and general technical topics based on the candidate's profile.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://red-badger.com/about-us/join-us"&gt;Red Badger&lt;/a&gt; | London, UK | Phone &amp;amp; Skype interview, take home exercise, On-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://redballoonsecurity.com"&gt;Red Balloon Security&lt;/a&gt; | New York City, USA | A rather educational week long hacking challenge with a monetary reward upon finding solution. On-site with team members, real job related problems, a few open-ended questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.redcarpetup.com/jobs"&gt;RedCarpet&lt;/a&gt; | New Delhi, India | Interview, work sample/take-home project and discussion/code reviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.red-gate.com/our-company/careers/current-opportunities/"&gt;Redgate&lt;/a&gt; | Cambridge, UK | Simple couple of questions during screening phase (up to 30 min) followed by a second phase with up to two coding exercises (non-CS).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://reducer.co.uk"&gt;Reducer&lt;/a&gt; | London, UK | Introductions by phone, pair programming on site, then meeting the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.reflektive.com/careers/"&gt;Reflektive&lt;/a&gt; | San Francisco, CA; Bengaluru, India | A short take home project/assignment, followed by a couple of technical and non-technical discussions online and offline.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://refty.co"&gt;Refty&lt;/a&gt; | Paris, France | Introductory video call, soft skills assessment process powered by our own product, on-site discussion, lunch with everyone.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://relabe.com"&gt;Relabe&lt;/a&gt; | San Juan, PR | First we screen for cultural fit then check for technical proficiency. 2-3 Interviews max in SJ&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://remote.com"&gt;Remote&lt;/a&gt; | Remote | Call with a recruiter (if needed), call with manager, code exercise, call with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://render.com/careers"&gt;Render&lt;/a&gt; | San Francisco, CA; Remote | Phone screen followed by an onsite project based on our day-to-day, real world challenges.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.rentify.com/jobs"&gt;Rentify&lt;/a&gt; | London, UK | Phone call, take home real-world project, on-site pair programming, product discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.rentomojo.com/about/careers"&gt;RentoMojo&lt;/a&gt; | Bangalore, India | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://repl.it/site/jobs"&gt;Repl.it&lt;/a&gt; | San Francisco, CA / Remote | Take-home project and discussion, then an on-site project and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://resin.io"&gt;Resin.io&lt;/a&gt; | Remote | Take home real-world project and a couple of technical and non-technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.resourcify.com"&gt;Resourcify&lt;/a&gt; | Hamburg, Germany; Remote | Get to know phone call with Engineering Manager and VP of People, pair programming a day-to-day problem with a Lead Engineer, meeting with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.respark.co.uk"&gt;ReSpark&lt;/a&gt; | London, UK | Phone conversation followed by on-site interview w/ task relevant to daily role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.restaurantops.co"&gt;RestaurantOps&lt;/a&gt; | Scottsdale, AZ | Take Home Project &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://retailpulse.ai"&gt;Retail Pulse&lt;/a&gt; | Bangalore, India | Phone chat, take home exercise, feedback &amp;amp; interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://reverscore.com"&gt;Rever&lt;/a&gt; | Guadalajara, Mexico | Take-home project, on-site discussion or via Hangouts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.reviewtrackers.com/careers/"&gt;ReviewTrackers&lt;/a&gt; | Remote; Chicago, IL | Phone conversation, take home project, virtual interview with project review and live coding, discussion with engineers and product, interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.rexsoftware.com/careers"&gt;Rex Software&lt;/a&gt; | Brisbane, Australia | Take home project, feedback + interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rizk.com"&gt;Rizk.com&lt;/a&gt; | Ta' Xbiex, Malta | Take-home assignment, discussion w/ developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.rockerbox.com/careers"&gt;Rockerbox&lt;/a&gt; | Remote | Phone screen with pair programming. 2 hours of pre-interview prep. 4-hour final interview with situational questions, another pair programming, and presentation and discussion of pre-interview prep outputs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rocketalumnisolutions.com"&gt;Rocket Alumni Solutions&lt;/a&gt; | Remote; Boston, MA | One pair programming session, total 2-3 hours of interviews with leadership.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://about.rocketmiles.com"&gt;Rocket Travel&lt;/a&gt; | Remote; Chicago, IL; New York, NY | Pair programming, take home project (2-4 hours), 3-4 hour final interview with mix of high level technical, product, and cultural/behavioral sessions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.rockode.com"&gt;Rockode&lt;/a&gt; | Bangalore, India | Real world assignment, group hack session, discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rosedigital.co"&gt;Rose Digital&lt;/a&gt; | New York, NY | Phone conversation followed by pair coding components that mirror day to day work, in person discussion about code, take home project if needed for more info&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://career.ruangguru.com"&gt;Ruangguru&lt;/a&gt; | Jakarta, Indonesia / Yogyakarta, Indonesia / Malang, Indonesia / Bandung, Indonesia | Phone screening with technical recruiter --&amp;gt; live coding with an engineer --&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) --&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rubygarage.org"&gt;RubyGarage&lt;/a&gt; | Dnipro, UA | Take-home project, code review and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.runtastic.com"&gt;Runtastic&lt;/a&gt; | Linz, Austria; Vienna, Austria | Video call with recruiting staff, take home project, video call for code review, discussion, questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.rvu.co.uk/careers"&gt;RVU&lt;/a&gt; | London, UK | Also known as Uswitch / Money.co.uk / Bankrate, small take-home project related to our business area, followed by open book pairing with developers to extend it followed by Q&amp;amp;A session to discuss your experience.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;S - U&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.safebutler.com"&gt;SafeButler&lt;/a&gt; | San Francisco, CA | Take-home project, then an on-site or remote interview with a review, pair programming, and culture fit discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sahaj.ai"&gt;Sahaj Software&lt;/a&gt; | Bangalore, India; Chennai, India; Pune, India; Melbourne, Australia; London, UK; San Jose, CA | Take home code + Pairing + Discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sailingbyte.com"&gt;Sailing Byte&lt;/a&gt; | Rumia, Poland | Technical interview, Take-home Task&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sakari.io"&gt;Sakari&lt;/a&gt; | San Francisco, CA | Phone screen, programming assignment related to Sakari business (communications) with pair programming element, team and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.salecycle.com/careers"&gt;SaleCycle&lt;/a&gt; | Durham, UK; Brighton, UK | Phone screen, face-to-face discussion with developers, optional pairing session and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.salesfive.com/jobs"&gt;Salesfive&lt;/a&gt; | Munich, Germany; Berlin, Germany | Phone screen, Phone Interview with developer to discuss code and challenges, Take home challenge if necessary. Onsite visit&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://salesloft.com"&gt;Salesloft&lt;/a&gt; | Atlanta, GA | Phone interview, take-home project, cultural-fit interview, technical interview where candidate modifies take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sc5.io/careers"&gt;SC5 Online&lt;/a&gt; | Helsinki, Finland; Jyväskylä, Finland | Take-home assignment (intentionally short, takes at most an hour to complete), discussion and review assignments&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scapic.com/careers/"&gt;Scapic&lt;/a&gt; | Bangalore, India | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.schibsted.pl"&gt;Schibsted Tech Polska&lt;/a&gt; | Gdańsk, Poland | Phone screen, take-home exercise, code review and technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.searchapi.io"&gt;SearchApi&lt;/a&gt; | Remote | Culture interview, take-home coding challenge and technical interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://boards.greenhouse.io/seesaw"&gt;Seesaw&lt;/a&gt; | Remote | Technical challenges based on real world problems&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://segment.com"&gt;Segment&lt;/a&gt; | San Francisco, CA; Vancouver, Canada | Phone interview, take-home assignment (small fun project), onsite interview (technical + core/culture) -&amp;gt; intended to set you up for success&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.seitenbau.com/karriere/aktuelle-jobangebote"&gt;SEITENBAU&lt;/a&gt; | Konstanz, Germany | Peer recruiting; conversational interviews (video call or face-to-face) with other developers and HR focussing on motivation, attitude, skills; possibly 2nd face-to-face interview meeting with additional team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sendyne.com"&gt;Sendyne&lt;/a&gt; | New York City, USA | Phone screen, on-site with team members. Review of past experiences + questions regarding real problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sensortower.com/jobs"&gt;Sensor Tower&lt;/a&gt; | San Francisco, CA | Phone call, on-site interview including discussion about projects/skills and a short real-world programming challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sensu.io"&gt;Sensu&lt;/a&gt; | Remote | Video call, choice of pairing session or take home programming assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://sentisis.com/trabaja-con-nosotros"&gt;Séntisis&lt;/a&gt; | Madrid, Spain; Mexico City, Mexico; Bogotá, Colombia; Santiago de Chile, Chile; Remote | Phone call, on-site/remote interview including discussion about projects/skills and a short real-world pair-programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://serpapi.com"&gt;SerpApi&lt;/a&gt; | Austin, TX / Remote | Skype core value and culture interview, review of contributions on GitHub or other platforms, and take-home project if online contributions are not enough.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sertiscorp.com"&gt;Sertis&lt;/a&gt; | Bangkok, Thailand | Technical &amp;amp; culture fit interview, take-home project, follow-up discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://setapp.pl/career"&gt;Setapp Sp. z o.o.&lt;/a&gt; | Poznan, Poland | Online/face-to-face discussion with developers about everyday programming dilemmas &amp;amp; reviewing your own code&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sharoo.com/jobs/"&gt;Sharoo&lt;/a&gt; | Zurich, Switzerland; Remote | Soft skills interview, take home project, technical interview based on take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.shipandco.com/en/"&gt;Ship&amp;amp;co&lt;/a&gt; | Remote / Kyoto, Japan | Casual non-technical interview with the CEO. One hour technical discussion with lead developer about software development, skills and past experience. Three months paid trial period.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://getshogun.com"&gt;Shogun&lt;/a&gt; | Remote | Discussion about software development and past experience, code samples, paid trial period.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://shortcut.com/careers"&gt;Shortcut&lt;/a&gt; | New York, NY &amp;amp; Remote | Phone interview, followed by onsite discussions and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.showmax.com/engineering-careers"&gt;Showmax&lt;/a&gt; | Beroun, Czechia; Prague, Czechia; Remote | Take home project, then a pair-programming and discussion onsite / Hangouts round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://shuttlecloud.com/jobs"&gt;ShuttleCloud&lt;/a&gt; | Chicago, IL / Madrid, Spain | Take-home project, then on-site code walk through and a real world problem discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.signal-ai.com/about-us/careers"&gt;Signal AI&lt;/a&gt; | London, UK | Phone screen; take home code exercise; on-site code extension with pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://signoz.io"&gt;SigNoz&lt;/a&gt; | Bangalore, India; Remote | Intro round to explore interests, 1-2 Technical interviews that resembles a problem SigNoz solves for, then product round to discuss on industry and problems which SigNoz is solving.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.simpli.fi/about-us/careers"&gt;Simpli.fi&lt;/a&gt; | Fort Worth, TX, USA | Takehome code challenge and review&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.welcometothejungle.co/companies/simplifield/jobs"&gt;SimpliField&lt;/a&gt; | Lille, France | Interview with the CTO and the developer team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.simplybusiness.co.uk/about-us/careers/tech"&gt;Simply Business&lt;/a&gt; | London, UK / Remote | Three stage, one day interview with quick feedback. One of the stages is 1.5h pair-programming session, where interviewee is assigned a task and interviewing developer plays role of Product Owner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sixfold.com/careers"&gt;Sixfold&lt;/a&gt; | Tallinn, Estonia; Tartu, Estonia; Vienna, Austria | 3-4 stages: 1st interview with HR and an engineering lead, 2nd a test-task to solve at home, 3rd technical discussion &amp;amp; feedback on the test-task, 4th optional meeting with further engineering leads to find best fitting team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sixt.jobs/en"&gt;Sixt&lt;/a&gt; | Munich, Germany | 4 stages: 1st HR, 2nd take-home project, 3rd follow-up discussion, 4th on-site interview with team plus HR&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://skylight.digital/join/"&gt;Skylight Digital&lt;/a&gt; | Remote | Screening call to determine general interest, 1.5 hour pair programming exercise based on realistic scenario, EQ interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.skyrisepro.com"&gt;Skyrise Pro&lt;/a&gt; | Chicago, IL | Take-home coding project, on-site interview including coding enhancements to the take-home project, offsite group activity&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://slack.com/jobs"&gt;Slack&lt;/a&gt; | San Francisco, CA | Call with recruiter, 1 week take-home project, call with hiring manager, on-site interview covering high-level system design, best software development practices and culture-fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.small-improvements.com/careers"&gt;Small Improvements&lt;/a&gt; | Berlin, Germany&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://smartia.tech"&gt;Smartia&lt;/a&gt; | Bristol, UK; Remote | Take-home real world project to complete, call with head of engineering, culture fit with CEO and COO&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.smartly.io/developer"&gt;Smartly.io&lt;/a&gt; | Helsinki, Finland | Discussion with recruiter and developers and a pair coding exercises&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://smile.io/careers"&gt;Smile.io&lt;/a&gt; | Kitchener, Canada / Remote | Take-home real world project, interviews with HR and engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://snyk.io/jobs"&gt;Snyk&lt;/a&gt; | London, UK; Tel Aviv, Israel | Take home task, then a pair coding on it&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.socialtables.com"&gt;Social Tables&lt;/a&gt; | Washington, DC | Chat about skills and past experiences + bring in a code sample from previous work or side project to discuss&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://softwear.nl/vacatures"&gt;Softwear&lt;/a&gt; | Amsterdam, Netherlands | Writing software for the fashion industry – remotely – in an international team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sogilis.com"&gt;Sogilis&lt;/a&gt; | Grenoble, France | Discussion about interests, practices, and motivation. Presentation/code review/pair programming on a personal or professional project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://about.sourcegraph.com/jobs"&gt;Sourcegraph&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Tailored to the candidate, often consists of take-home work, discussion of real-world eng challenges, and product familiarity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.splice.com"&gt;Splice&lt;/a&gt; | New York, NY; Remote | Call with recruiter, 4 hr take-home project, video interview w two engs on take-home exercise, video call with hiring manager, video call w VPE &amp;amp; principal eng to talk about architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.splyt.com"&gt;Splyt&lt;/a&gt; | London, UK; Singapore, Singapore; Kuala Lumpur, Malaysia; Tokyo, Japan | Initial screening with recruiters from hr department, take home assessment (React + Node.js), followed by remote/on-site interviews with hiring manager and CTO about the assessment, system design/architecture, and cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.spreedly.com/jobs"&gt;Spreedly&lt;/a&gt; | Durham, NC | Take-home project &lt;a href="https://engineering.spreedly.com/blog/programming-puzzles-are-not-the-answer-how-spreedly-does-work-samples.html"&gt;related to business&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.natureasia.com"&gt;Springer Nature (Asia)&lt;/a&gt; | Tokyo, Japan | Discussion &amp;amp; Pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sndigital.springernature.com"&gt;Springer Nature Digital&lt;/a&gt; | Berlin, Germany; London, UK | Phone chat; take-home project; then a pairing session based on the project, a technical chat, and a chat with non-technical team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://spronq.com"&gt;SpronQ&lt;/a&gt; | Amsterdam, Netherlands | Takehome coding challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.squadcast.com/careers"&gt;Squadcast&lt;/a&gt; | Bangalore,India | Phone screening, technical interview, Founder Interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://squareup.com/careers"&gt;Square&lt;/a&gt; | San Francisco, CA | Pair programming in a work environment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://square-sense.com"&gt;Square Sense&lt;/a&gt; | Paris, France | Short phone screen to confirm the interest, take-home project (similar to some of our existing software), a pair-programming interview where we will make some changes to the same project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://srijan.net"&gt;Srijan Technologies&lt;/a&gt; | Delhi, India | General high level questions/discussion followed by Pair programming OR take-home coding challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stacc.com"&gt;Stacc&lt;/a&gt; | Norway, Bergen | Open-Ended Take Home Assignment (UX and/or Coding in your preferred language) followed by a high-level discussion and reflection upon the process with senior engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackgenie.io"&gt;Stackgenie&lt;/a&gt; | London, UK / New York, US / Trivandrum, India / Remote | Real-world take-home project, video interviews with HR and the engineering team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stardog.com"&gt;Stardog Union&lt;/a&gt; | Washington, DC; Remote | Technical discussion and general interest conversations&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://startdee.com"&gt;StartDee&lt;/a&gt; | Bangkok, Thailand | Phone screening with technical recruiter --&amp;gt; live coding with an engineer --&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) --&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.stashaway.sg/careers"&gt;StashAway&lt;/a&gt; | Singapore, Malaysia &amp;amp; Remote | Take Home Technical Task (broken down to frontend or backend focused), Database Architecture Case Design round, Peer-to-Peer (P2P) team round, and Management Interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://statflo.com"&gt;Statflo&lt;/a&gt; | Toronto, Canada | Phone screening, take home project, on-site interview discussing the take home project, high-level architectural brainstorm, and questions about career and team work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.store2be.com/en/pages/jobs"&gt;store2be&lt;/a&gt; | Berlin, Germany | Skype/on-site interview, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.stormx.io/about#jobs"&gt;Storm&lt;/a&gt; | Seattle, WA; Remote | Phone/skype screen --&amp;gt; Take-home coding assignment --&amp;gt; on-site/skype interview loop to discuss assignment; meet-and-greet with other teams --&amp;gt; +1/-1 based on team consensus&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.storytel.com/departments/tech"&gt;Storytel&lt;/a&gt; | Stockholm, Sweden; Lund, Sweden; Karlstad, Sweden; Umeå, Sweden; Copenhagen, Denmark | Our process has few stages: a social interview with HR and 1-2 future teammates; a small take-home project followed by a technical discussion with 2-3 future colleagues. All stages can be in-person in one of our offices or via Google Meet&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.stridenyc.com"&gt;Stride Consulting&lt;/a&gt; | New York, NY / Chicago, IL | Phone Screen, Agile and Technical Overview, a Pairing session, and architecture interview on previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://structura.bio"&gt;Structura Biotechnology&lt;/a&gt; | Toronto, Canada | Phone screening, take-home coding challenge, on-site review and discussion about past experience, and high-level architectural brainstorm&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://strv.com/careers"&gt;STRV&lt;/a&gt; | Prague, Czech Republic; Brno, Czech Republic; Remote | A social interview with a recruiter + take-home coding challenge followed by a technical interview session discussing your approach in solving the take-home assignment + a culture-fit interview with the head of engineering.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.stylabs.in"&gt;STYLABS&lt;/a&gt; | Mumbai, India | Phone Screen, Take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://verticalchange.com/job_posts"&gt;Subvertical (VerticalChange)&lt;/a&gt; | Remote | Phone screening, live pair programming &amp;amp; personal project code review&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sulvo.com/careers"&gt;Sulvo&lt;/a&gt; | New York, NY / Remote | Interview over video call for cultural fit first, if you pass we proceed with technical interview that doesn't include coding games or challenges&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.summitto.com"&gt;Summitto&lt;/a&gt; | Amsterdam, Netherlands | take-home coding challenge and on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sumup.com/careers/"&gt;SumUp&lt;/a&gt; | London, UK | Five-stages interview process. The first stage is with HR. The second stage is with the Engineering manager - discussion about general engineering knowledge and past projects. The third stage is take-home assignment. The fourth stage is a discussion of the take-home assignment solution with two engineers. The fifth stage is a behavioural interview structured around company values.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.superawesome.com"&gt;SuperAwesome&lt;/a&gt; | London, UK | Short recruiter phone screen, take-home exercise, follow up system design and cultural interview focused on your past experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://superplayer.fm"&gt;Superplayer&lt;/a&gt; | Porto Alegre, Brazil | Skype/On-site interview, take-home project and interview with CTO and CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://surglogs.com/careers/slovakia/"&gt;Surglogs&lt;/a&gt; | Remote | (Europe timezone) Phone screen, take-home assignment with a follow-up call, or live coding focused on building simple real-world scenarios (based on your preference), culture-fit call with team and CTO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://surveysparrow.com/careers"&gt;SurveySparrow&lt;/a&gt; | Kochi, India | Skype interview, take home project and code review, interview with CTO and CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.svix.com"&gt;Svix&lt;/a&gt; | Remote | Take home project, an interview to discuss the project, and a cultural fit interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://svti.svt.se"&gt;SVTi (Sveriges Television)&lt;/a&gt; | Stockholm, Sweden | On-site interview, take-home project, follow up interview where you walk through how you chose to solve the task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sweetiq.com/about/careers"&gt;SweetIQ&lt;/a&gt; | Montreal, Canada | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.swiftly.com/about/careers"&gt;Swiftly&lt;/a&gt; | Seattle, WA; San Francisco, CA | Take-home coding project, design principles discussions, collaborative problem solving&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.swisscom.ch/en/about/career.html"&gt;Swisscom&lt;/a&gt; | Rotterdam, The Netherlands | A mix of behavioural, technical and cultural interview, take-home project, project review with engineers from different teams and cultural interview with staff members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.symphonycommerce.com/careers"&gt;Symphony Commerce&lt;/a&gt; | San Francisco, CA / Remote | Take-home project (phone), design discussion, review and critique &lt;em&gt;our&lt;/em&gt; code, debugging questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.symplicity.com/about/join-us"&gt;Symplicity&lt;/a&gt; | Arlington, VA | Take-home project and code review in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sysgarage.com"&gt;SysGarage&lt;/a&gt; | Buenos Aires, Argentina | Take-home project and real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tablecheck.com/en/company/jobs/"&gt;TableCheck&lt;/a&gt; | Tokyo, Japan | Show us your code! Brief call then take-home project or pairing for those without code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tailorbrands.com/jobs"&gt;Tailor Brands&lt;/a&gt; | Tel Aviv-Yafo, Israel | Discuss knowledge and interests, explore previous work experience, during the technical interview we discuss real-life problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tails.com/careers"&gt;tails.com&lt;/a&gt; | Richmond (London), UK | Live pair programming or take home project with review&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://takehomes.com"&gt;Take Homes&lt;/a&gt; | San Francisco, CA &amp;amp; New York, NY | Take-home project based on a real-world problem, administered on their own platform, followed by a pair programming session, also on their platform, which builds on the initial project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.take2games.com"&gt;Take-Two Interactive&lt;/a&gt; | Bengaluru, India; Vancouver, Canada; London, UK; Singapore, Singapore; CA, NY, WA: United States | Data Engineering, Recruiter screening, followed by 1 round of fitment discussion, followed by a take home assignment(similar to actual work), followed by 1 round involving assignment solution discussion, programming language specific questions, and other role specific technical questions, followed by hiring manager discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.takeaway.com"&gt;takeaway.com&lt;/a&gt; | Enschede, Netherlands &amp;amp; Berlin, Germany | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.madeintandem.com"&gt;Tandem&lt;/a&gt; | Chicago, IL; San Francisco, CA | Introductory phone screen, take-home project, take-home project phone review, a few hour-long pairing sessions on real projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tanookilabs.com"&gt;Tanooki Labs&lt;/a&gt; | New York, NY | Paid half-day take home project with followup review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tara.ai/about/careers"&gt;Tara AI&lt;/a&gt; | San Jose, CA | On-site interview with a deep dive into appropriate technology and our problem space. The same sort of problem solving you would do with peers after a standup&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tattoodo.com"&gt;Tattoodo&lt;/a&gt; | Copenhagen, Denmark | Takehome exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.taxdoo.com/#/jobs/"&gt;Taxdoo&lt;/a&gt; | Hamburg, Germany | On-site interview, little takehome exercise, followup review/interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.teamwork.com"&gt;Teamwork.com&lt;/a&gt; | Remote; Cork, Ireland; Belfast, UK; Wilmington, USA | Initial conversation, remote values interview, takehome exercise, followup review/interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tenthousandcoffees.com"&gt;Ten Thousand Coffees&lt;/a&gt; | Toronto, Canada | Take home project, then explain how you solved the project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.teraki.com"&gt;Teraki&lt;/a&gt; | Berlin, Germany | Pair programming exercise, 45min to 3h according to seniority and role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.tes.com/recruitment/"&gt;Tes&lt;/a&gt; | Remote; London, UK | Remote pair programming session on React/Node kata with small takehome exercise as prep. Remote interview with senior engineers about previous experience, technical knowledge and interests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tesco.com"&gt;Tesco PLC&lt;/a&gt; | London, United Kingdom | Pair programming and casual hypothetical system design discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://testdouble.com/careers"&gt;Test Double&lt;/a&gt; | Remote | Initial conversation, Consulting interview, Technical interview, Pair programming, Takehome exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://textio.com/careers/?utm_source=github&amp;amp;utm_medium=forum&amp;amp;utm_campaign=textio-careers-engineering&amp;amp;utm_content=poteto-hiring-without-whiteboards"&gt;Textio&lt;/a&gt; | Seattle, WA | Initial screen to discuss experience and interest in a role at Textio; then a take-home programming task is discussed during a 1-hour tech screen (on-site or remote); finally a larger take-home project, simulating real work, is discussed during an on-site presentation plus 1-1s; &lt;a href="https://textio.ai/how-we-hire-a74cdbadd1e8"&gt;How we hire&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://thebookofeveryone.workable.com"&gt;The Book of Everyone&lt;/a&gt; | Barcelona, Spain | Quick interview, meet the team, pairing with developers on your own project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lego.com"&gt;The LEGO Group&lt;/a&gt; | Billund, Denmark; Copenhagen, Denmark; Enfield, USA; London, UK | First meeting to discuss interests, the team, and general questions. Next take-home case study/project, followed by another meeting discussion the high level solution with focus on the process and thoughts behind the solution.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.thezebra.com/about/careers/"&gt;The Zebra&lt;/a&gt; | Austin, TX | Take-home coding challenge with in-person review and pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.thinkmill.com.au"&gt;Thinkmill&lt;/a&gt; | Sydney, Australia | Initial meet and greet interview with Thinkmillers from the relevant team, take home assignment followed by tech review on a followup interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.thinslices.com"&gt;Thinslices&lt;/a&gt; | Iasi, Romania | Takehome exercise &amp;amp; in person pair programming on a simple Kata.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://thoughtbot.com/jobs"&gt;thoughtbot&lt;/a&gt; | San Francisco, CA; London, UK | &lt;a href="https://thoughtbot.com/playbook/our-company/hiring#interviewing"&gt;Our interview process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.thoughtworks.com/careers"&gt;ThoughtWorks&lt;/a&gt; | San Francisco, CA | Interviews with ThoughtWorkers of diverse backgrounds and roles; take home assignment followed by in person pairing session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.thoughtworks.com/careers/singapore"&gt;ThoughtWorks Singapore&lt;/a&gt; | Singapore, Singapore | Interviews with ThoughtWorkers of diverse backgrounds and roles; Simple, live paired coding exercise in language of choice focused on clean code, not speed. Followed by refactoring paired interview, and technical discussion on modelling and system design, tech depth &amp;amp; breadth and team leading skills (if applicable).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.thread.com/jobs"&gt;Thread&lt;/a&gt; | London, UK | Take home test, real world architecture design, real world pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.threatspike.com"&gt;ThreatSpike Labs&lt;/a&gt; | London, UK | Take home computing and security related challenges to be completed over a week.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tilde.io"&gt;Tilde&lt;/a&gt; | Portland, OR | Pair programming sessions with each member of the team, working on problems similar to daily work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.timbuktutravel.com"&gt;Timbuktu&lt;/a&gt; | Cape Town, South Africa | On site interview and pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tipalti.com"&gt;Tipalti&lt;/a&gt; | Glil-Yam, Israel | Real-world design and coding challenges&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://titanium.codes"&gt;Titanium&lt;/a&gt; | Moldova, Chisinau | High level review of public activity on GitHub/BitBucket/Gitlab (if applicable) and screening via phone, On-site technical &amp;amp; Team fit interview, Formal "Meet the Team" meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://toggl.com/jobs"&gt;Toggl&lt;/a&gt; | Remote / Tallinn, Estonia | Online test on basic programming skills, followed by interview (typically includes get-to-know questions and technical skill testing). Depending on the team, there may be a take-home or live coding assignment. &lt;strong&gt;Paid test week&lt;/strong&gt; to work with the team on actual bugs/features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tooploox.com/careers"&gt;Tooploox&lt;/a&gt; | Warsaw, Poland; Wroclaw, Poland; Gdansk, Poland; Remote | Team fit interview and then take-home project. Next on-site or remote interview consisting of discussion and live coding based on the delivered code. Focusing on high level questions, architecture and design decisions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://toowoxx.de/index.php/karriere/"&gt;Toowoxx&lt;/a&gt; | Deisenhausen, Germany &amp;amp; Ulm, Germany | Short interview with general questions, on-site programming challenge, code review of result&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tophat.com/company/work-with-us/"&gt;Top Hat&lt;/a&gt; | Remote / Toronto, Canada | Short coding challenge inspired from the day-to-day problem space followed by a longer frontend or backend pairing design and implementation exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://toucantoco.com/fr/team#jobs"&gt;Toucan Toco&lt;/a&gt; | Paris, France | Pair-programming and TDD&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gotouche.com"&gt;Touché&lt;/a&gt; | Singapore, Singapore; Barcelona, Spain | Skype / Phone / on-site interview, take-home project, technical interview to discuss the project, team interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://trademark.vision"&gt;TrademarkVision&lt;/a&gt; | Brisbane, Australia | On site interview and quick take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://trainheroic.com/careers/"&gt;TrainHeroic&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.trainingpeaks.com/careers.html"&gt;TrainingPeaks&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.transparentclassroom.com"&gt;Transparent Classroom&lt;/a&gt; | Seattle, WA; Remote | Phone screen, 1 hr pairing on toy problem, 4 hr pairing on real code, full-day paid stage&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://trendency.hu"&gt;Trendency&lt;/a&gt; | Budapest, Hungary | Technical interview with a lead developer discussing past experience and tech related to the job, then culture fit/add interview with the CTO. Max 1 hour long sessions, both can be done via video call or on-site with friendly atmosphere&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tripstack.com"&gt;TripStack&lt;/a&gt; | Toronto, Canada | Take-home assignment, followed up by a face to face code walk through&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.trivago.com"&gt;Trivago&lt;/a&gt; | Düsseldorf, Germany | Case Study, Skype Interview, On site Interview with some code review exercises&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://boards.greenhouse.io/trov"&gt;Trōv&lt;/a&gt; | Remote | Take-home project with followup interview from actual prospective teammates&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://truefit.io/about/"&gt;Truefit&lt;/a&gt; | Pittsburgh, PA | Phone screen, Take-home project, In-person interview with the team that you would join&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.truora.com"&gt;Truora&lt;/a&gt; | Bogotá, Colombia; Cali, Colombia; Remote | Take-home project, followed by phone interview with tech leads to discuss the project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://truss.works/jobs"&gt;Truss&lt;/a&gt; | San Francisco, CA; Remote | Phone screen/ Take-home project that resembles a problem Truss has seen many times before / Followup interview about the project / Closing Interview, all interviews done remotely&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tunein.com"&gt;TuneIn&lt;/a&gt; | San Fransisco, CA | High level screening over the phone or on-site, take home project, code review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.twistlock.com"&gt;Twistlock&lt;/a&gt; | Tel Aviv, Israel | Takehome&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://typito.com/go"&gt;Typito&lt;/a&gt; | Bangalore , India | Take home assignment project with options for focus in frontend or backend work. First interview round based on the project submitted, may require to do some edits or add further feature based on discussion , live during interview. Second round mostly specific to overall system engineering and discussion regarding solutions to common backend/frontend engineering problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://uberall.com/en/careers"&gt;uberall&lt;/a&gt; | Berlin, Germany | 30-min coding on-site, then a trial day&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ubots.com.br"&gt;Ubots&lt;/a&gt; | Porto Alegre, Brazil | Skype/On-site interview, take-home project, technical interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://unbounce.com"&gt;Unbounce&lt;/a&gt; | Vancouver, BC | Phone screen, take-home project, project discussion, technical interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://unboxed.co"&gt;Unboxed&lt;/a&gt; | London, UK | Take home feature requests, pairing with developers to extend solution, team-fit interviews, chat with a director&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.unearthlabs.com/careers"&gt;Unearth&lt;/a&gt; | Seattle, WA | Take home project, team-fit interviews, technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://unito.io/careers/"&gt;Unito&lt;/a&gt; | Montreal, Canada | Team-fit interviews, technical discussion, paid take home project paired with developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.untappd.com"&gt;Untappd&lt;/a&gt; | Wilmington, NC; New York, NY; Los Angeles, CA | Review portfolio - What projects have you worked on? + personality assessment, + interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.updater.com/jobs/openings"&gt;Updater&lt;/a&gt; | New York, NY | Begin-at-home assignment highly relevant to role, presented and discussed during on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.upstatement.com/jobs/"&gt;Upstatement&lt;/a&gt; | Boston, MA; New York, NY; Remote | Phone screen, take home project relevant to our work, first round interview to discuss background and take home implementation, second round interview to meet more employees and share some of your and our recent work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.upwave.com/careers"&gt;Upwave&lt;/a&gt; | San Francisco, CA; Remote | Intro call, take home project, live take home project review, application / system design conversation, behavioral interview, offer!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.urbdyn.com/careers"&gt;Urban Dynamics&lt;/a&gt; | Knoxville, TN; Vilnius, Lithuania; Remote | Phone screen, take home project (&lt;a href="https://github.com/urbdyn/coding_exercises"&gt;exercises publicly available&lt;/a&gt;), and then interview with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.urbanmassage.com/jobs"&gt;Urban Massage&lt;/a&gt; | London, UK | Project done at home, in-person walk through. Meeting the team is an integral part.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.usertesting.com/about-us/jobs"&gt;UserTesting&lt;/a&gt; | Atlanta, GA; San Francisco, CA; Mountain View, CA | Initial interview, pair programming, and offer&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;V - X&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.v7labs.com/careers"&gt;V7&lt;/a&gt; | London, UK; Remote | Initial screen by Talent team, first technical screen (application / system design), take-home assignment and follow-up review with extra application / system design conversation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.valassis.com/digital-advertising"&gt;Valassis Digital&lt;/a&gt; | Seattle, WA; San Francisco, CA; Lansing, MI; Hamburg, Germany | Phone screen, on-site interview with group, paired whiteboard problem solving and discussion, take-home project and follow-up review&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.valuemotive.com/career"&gt;Valuemotive&lt;/a&gt; | Helsinki, Finland | Code examples from previous projects (work or hobby) or take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.vance.tech/careers"&gt;Vance&lt;/a&gt; | Bangalore, India | A take-home exercise followed by two rounds of interviews: the first with a team member focusing on technical skills and practical problem-solving, and the second with the Head of Engineering, also centered on technical expertise and real-world challenges.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.varsitytutors.com"&gt;Varsity Tutors&lt;/a&gt; | Remote | Take home assignment, presentation of assignment, live code review with team. Advanced / high-level chat with team based on skillset and role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vayu.com.au"&gt;Vayu Technology&lt;/a&gt; | Sydney, Australia; Kathmandu, Nepal | Short interview, general programming questions and short take home challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.vector.com/de"&gt;Vector Informatik GmbH&lt;/a&gt; | Karlruhe, Germany | Short online interview, a case study and a presentation of given solution.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.venasolutions.com"&gt;Vena Solutions&lt;/a&gt; | Toronto, Canada | Phone screen, on-site pair-programming and code-review exercise on a real-world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.venminder.com"&gt;Venminder, Inc.&lt;/a&gt; | Elizabethtown, KY; Louisville, KY | Initial phone screen to explain position. If candidate interested they get a take home assignment followed by a non-scripted in-person interview with team members to judge personality fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://verloop.io"&gt;Verloop&lt;/a&gt; | Bengaluru, India | A take home programming exercise and technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://verve.co/careers"&gt;Verve&lt;/a&gt; | London, UK | An intentionally short, take home exercise that mirrors real project work and incorporates code review elements&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://verveindustrial.com/why-verve/careers"&gt;Verve Industrial Protection&lt;/a&gt; | Madison, WI / Remote | Phone screen, project discussion and tooling experience overview in panel interview with team, practical shared-editor coding problem and relevant architectural challenge in hands-on interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.vinta.com.br/careers/"&gt;Vinta Software&lt;/a&gt; | Recife, Brazil | Culture fit interview, architectural challenge, take home project, and pairing over work sample&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://virtual7.de/de/karriere"&gt;virtual7&lt;/a&gt; | Kalrsruhe, Germany | Phone interview and on-site interview based on personal experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.vhslab.com"&gt;Virtually Human&lt;/a&gt; | Remote | Take home assignment, Short interview around the assignment and past experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.e-conomic.dk/om/job"&gt;Visma e-conomic&lt;/a&gt; | Copenhagen, Denmark | Take home assignment, assignment presentation and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vitalitysouth.com"&gt;Vitality South&lt;/a&gt; | Tupelo, MS | Take home project, code review, and in-person discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://voltra.co"&gt;Voltra Co.&lt;/a&gt; | Amsterdam, Netherlands / New York, NY / Remote | Show us your github account, tell us what you know. Let's pair on an OSS PR!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://https://vsx.net/jobs"&gt;VSX&lt;/a&gt; | Dresden, Germany | On-site interview, home coding challenge, presentation/discussion of proposed solutions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://lab.vtex.com/careers"&gt;VTEX&lt;/a&gt; | Rio de Janeiro, Brazil | Take-home project, Skype interview and then in-person talk.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://buildingvts.com"&gt;VTS&lt;/a&gt; | New York City, New York | Technical Phone Screen, Pair programming on-site &amp;amp; in-person talks with multiple engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://apply.workable.com/wallapop/"&gt;Wallapop&lt;/a&gt; | Barcelona, Spain | Intro call, technical take-home project OR tech repository you feel proud that highlights your skills for the job, practical interview and finally a competency interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://waymark.com/jobs"&gt;Waymark&lt;/a&gt; | Detroit, MI | Technical phone screen, take-home project, going over the project in person, follow up day in the office&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.wealthsimple.com/work-with-us"&gt;Wealthsimple&lt;/a&gt; | Toronto, Canada | Pair programming on a problem similar to daily work, discussion of system design&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.wearehive.co.uk"&gt;WeAreHive&lt;/a&gt; | London, UK | Just walk us through your best code or we give you a small real-world exercise to do at home.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://webantic.co.uk/careers"&gt;Webantic&lt;/a&gt; | Manchester, UK | Basic TNA self-assessment and real-world problem-solving&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://webflow.com"&gt;Webflow&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Short take-home challenge, followed by a paid 3-5 day freelance contract project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://weedmaps.com/careers"&gt;Weedmaps&lt;/a&gt; | Irvine, CA; Denver, CO; Tucson, AZ; Madrid, Spain; Remote | Phone screen, Group interview, and possible code review&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.wellsfargojobs.com/en/university-programs/undergraduate-programs/"&gt;Wells Fargo (Technology Program)&lt;/a&gt; | San Francisco, CA; Charlotte, NC; Des Moines, IA; Minneapolis, MN; Phoenix, AZ; St. Louis, MO | One round , Behavioral + One simple System Design Question + Questions for your resume&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wemake.services"&gt;wemake.services&lt;/a&gt; | Remote | Short unpaid take-home challenge, code review, portfolio discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wemod.com"&gt;WeMod&lt;/a&gt; | Remote | Take-home &amp;amp; presentation / code review, resume discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.wend.nl"&gt;Wend&lt;/a&gt; | Amsterdam, Netherlands | Face to face interview followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.weployapp.com/join-our-team/"&gt;Weploy&lt;/a&gt; | Melbourne, Australia; Sydney, Australia | Phase 1: Face to face interview to get to know the candidate. Phase 2: Problem solving session that involves designing a solution to a real-world problem followed by 1/2 day of pairing with a senior dev on implementing the proposed solution.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wetransfer.com/jobs"&gt;WeTransfer&lt;/a&gt; | Amsterdam, Netherlands | Culture fit and fundamentals chat, skills interview - no whiteboarding! - and take-home project, communication and collaboration interview, meet with the VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wheely.com/en/careers"&gt;Wheely&lt;/a&gt; | Moscow, Russia | Get to know each other in under 30 minutes on-site or via Skype, take-home challenge, on-site review and interview with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wikimediafoundation.org/about/jobs/"&gt;Wikimedia Foundation&lt;/a&gt; | Remote | Cultural fit interview, about one hour of discussing possible solutions for real problems the team you are applying to could face. Not right or wrong answers, more of a brainstorming with two engineers who will evaluate how your problem solving workflow works.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://windy.com"&gt;Windy.com&lt;/a&gt; | Prague, Czechia | Talk and write small program on a computer&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wirecardbrasil.workable.com"&gt;Wirecard Brasil&lt;/a&gt; | São Paulo, Brazil | Phone or on-site Cultural Fit interview, take-home coding challenge, code review and discussing in-person.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiredcraft.com"&gt;Wiredcraft&lt;/a&gt; | Shanghai, China | Phone or on-site interview, take-home coding challenge, code review and discussing in-person.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://worldgaming.com"&gt;WorldGaming&lt;/a&gt; | Toronto, Canada | Technical Interview, Solution Design, Take Home Assignment, then Culture fit interview with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wyeworks.com"&gt;WyeWorks&lt;/a&gt; | Montevideo, Uruguay | Take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x-team.com"&gt;X-Team&lt;/a&gt; | Remote | A short, fun Node.js challenge, followed by a series of culture-based interview questions, followed by a creative mock project with tons of freedom on how to approach, and follow-up questions about the approach they chose to discuss the tradeoffs. Usually a 10-30 day paid training is rewarded to top candidates to prep them for remote communication skills needed to join a team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://xebia.com/careers/security/"&gt;Xebia Security&lt;/a&gt; | Hilversum, Netherlands | Culture fit, Technical interview, followed by take-home security project, on-site brainstorm session to discuss the solutions and approach.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.xing.com"&gt;XING&lt;/a&gt; | Hamburg, Germany | Take-home coding challenge, on-site review and short interviews with future team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ourxplor.com"&gt;Xplor&lt;/a&gt; | Melbourne, Australia; London, UK | Phone Cultural Fit interview, Take home-code challenge, pair-programming session and discussion about past experience&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Y - #&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://21re.de"&gt;21st Real Estate&lt;/a&gt; | Berlin, Germany | Phone call for quick personal introduction followed by Video call interview. Finally, a pair-programming session on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://23technologies.cloud"&gt;23 Technologies&lt;/a&gt; | Remote | Three video calls: general introduction, team introduction, contract&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://3boxlabs.com"&gt;3BoxLabs&lt;/a&gt; | Remote | Intro call, resume walk-through, and finally live work exercise with ~2 hours independent work followed by ~1.5 hour debrief discussing the work with the rest of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://3dhubs.com/jobs"&gt;3D Hubs&lt;/a&gt; | Amsterdam, The Netherlands | Take-home code challenge from our product's domain followed by discussion remote/on-site, sometimes do an additional on-site pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://47-degrees.breezy.hr"&gt;47 Degrees&lt;/a&gt; | Remote; Seattle, WA; Madrid, ESP; Cadiz, ESP; London, UK | Questions related to implementation of specific projects using popular functional programming libraries and techniques and a discussion about the tradeoffs. Discussion of past open-source projects/contributions and future open-source goals. &lt;strong&gt;Note:&lt;/strong&gt; This company looks for people who have modern functional programming experience in Haskell, Scala, Swift, or Kotlin and it looks for people who have existing open-source contributions in those fields so the roles can be a bit self-selecting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://4degrees.ai/about/"&gt;4Degrees&lt;/a&gt; | Chicago, Illinois | Collaborative pair-programming exercise done through video chat that's representative of the responsibilities of the job then a take-home programming task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://500Tech.com"&gt;500Tech&lt;/a&gt; | Tel Aviv, Israel | Pair programming on a laptop in working env&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://5minds.de"&gt;5Minds&lt;/a&gt; | Remote; Gelsenkirchen-Buer, DE | Coding exercise via GitHub, you are interviewed by a developer and a team lead, there is no live coding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://8thlight.com"&gt;8th Light&lt;/a&gt; | Chicago, IL; London, UK; Los Angeles, CA; New York, NY | Take home code challenge, discussion, pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.yld.io/join-us"&gt;YLD&lt;/a&gt; | London, UK; Lisbon, PT; Porto, PT &amp;amp; Remote | Take home-code challenge, pair-programming session and discussion about past experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yodas.com"&gt;Yodas&lt;/a&gt; | Binyamina, Israel | Coding tasks over github repository&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yougov.com"&gt;YouGov&lt;/a&gt; | Remote; San Francisco, CA; London, UK; Warsaw, Poland; Mumbai, India; Hong Kong, China | Coding exercise sometimes over github repository, at least 1 interview with a developer and a lead, no live coding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://yoyowallet.com"&gt;Yoyo Wallet&lt;/a&gt; | London, UK | Take home code challenge, discussion of the code challenge, and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.yunojuno.com"&gt;YunoJuno&lt;/a&gt; | London, UK | Code challenge based on a realistic feature request on a real open-source package created and used at YunoJuno; phone/video interview with members of the Product team to explore technical background, experiences, interests, cultural fit; on-site interview, usually with Product Manager and CTO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jobs.kenoby.com/grupozap/"&gt;ZAP Group&lt;/a&gt; | São Paulo, Brazil | Takehome exercise; a series of real-world interviews with engineers, HR, engineering managers and product managers on site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zapier.com/jobs/"&gt;Zapier&lt;/a&gt; | Remote | Recruiter interview, take-home project, code review of the take-home project, technical discussions with hiring manager and engineers from the team, and a values interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.zencargo.com/careers"&gt;Zencargo&lt;/a&gt; | London, UK | Initial interview with CTO, covering professional experience interests and expectations, followed by one technical interview focused on fundamentals and familiarity with best practices. A further short chat with co-founders to get to know each other - either onsite or remote.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.zenefits.com/careers"&gt;Zenefits (UI Team)&lt;/a&gt; | San Francisco, CA | One technical phone screen focused on JS fundamentals and/or one timeboxed take-home challenge. The onsite is a series of interviews designed to test your understanding of JS, HTML/CSS, design, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.zensurance.com/careers"&gt;Zensurance&lt;/a&gt; | Toronto, Canada; Remote | Timeboxed take-home challenge representative of the types of challenges faced day-to-day, and zoom chats with recruiter / hiring managers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zerodha.com/careers"&gt;Zerodha&lt;/a&gt; | Bengaluru, India | Technical call at the beginning and one take home programming task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.zweitag.de/karriere"&gt;Zweitag&lt;/a&gt; | Münster, Germany &amp;amp; Remote | Get-to-know call, take-home task representative to our problems, on-site pairing and discussion, and mentoring throughout the process with talks for aligning expectations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Also see:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://they.whiteboarded.me"&gt;They Whiteboarded Me!&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/poteto/hiring-without-whiteboards/actions/workflows/node.js.yml"&gt;&lt;img src="https://github.com/poteto/hiring-without-whiteboards/actions/workflows/node.js.yml/badge.svg?sanitize=true" alt="Node.js CI" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>brave/brave-browser</title>
      <link>https://github.com/brave/brave-browser</link>
      <description>&lt;p&gt;Brave browser for Android, iOS, Linux, macOS, Windows.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/brave/brave-browser/master/docs/source/_static/Brave.svg?sanitize=true" alt="Brave Browser" /&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;This repository holds the build tools needed to build the Brave desktop browser for macOS, Windows, and Linux. In particular, it fetches and syncs code from the projects defined in &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;src/brave/DEPS&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://chromium.googlesource.com/chromium/src.git"&gt;Chromium&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Fetches code via &lt;code&gt;depot_tools&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Sets the branch for Chromium (ex: 65.0.3325.181).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/brave-core"&gt;brave-core&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Mounted at &lt;code&gt;src/brave&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Maintains patches for 3rd party Chromium code.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/adblock-rust"&gt;adblock-rust&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Implements Brave's ad-block engine.&lt;/li&gt; 
   &lt;li&gt;Linked through &lt;a href="https://github.com/brave/brave-core/tree/master/components/adblock_rust_ffi"&gt;brave/adblock-rust-ffi&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;p&gt;You can &lt;a href="https://brave.com/download"&gt;visit our website&lt;/a&gt; to get the latest stable release.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see the &lt;a href="https://raw.githubusercontent.com/brave/brave-browser/master/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href="https://github.com/brave/brave-browser/wiki"&gt;Wiki&lt;/a&gt; also has some useful technical information.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://community.brave.app/"&gt;Join the Q&amp;amp;A community&lt;/a&gt; if you'd like to get more involved with Brave. You can &lt;a href="https://community.brave.app/c/support-and-troubleshooting"&gt;ask for help&lt;/a&gt;, &lt;a href="https://community.brave.app/c/brave-feature-requests"&gt;discuss features you'd like to see&lt;/a&gt;, and a lot more. We'd love to have your help so that we can continue improving Brave.&lt;/p&gt; 
&lt;p&gt;Help us translate Brave to your language by submitting translations at &lt;a href="https://explore.transifex.com/brave/brave_en/"&gt;https://explore.transifex.com/brave/brave_en/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Follow &lt;a href="https://x.com/brave"&gt;@brave&lt;/a&gt; on X for important news and announcements.&lt;/p&gt; 
&lt;h2&gt;Install prerequisites&lt;/h2&gt; 
&lt;p&gt;Follow the instructions for your platform:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/brave-browser/wiki/macOS-Development-Environment"&gt;macOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/brave-browser/wiki/iOS-Development-Environment"&gt;iOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/brave-browser/wiki/Windows-Development-Environment"&gt;Windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/brave-browser/wiki/Linux-Development-Environment"&gt;Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/brave-browser/wiki/Android-Development-Environment"&gt;Android&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Clone and initialize the repo&lt;/h2&gt; 
&lt;p&gt;Once you have the prerequisites installed, you can get the code and initialize the build environment.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:brave/brave-core.git path-to-your-project-folder/src/brave
cd path-to-your-project-folder/src/brave
npm install

# the Chromium source is downloaded, which has a large history (gigabytes of data)
# this might take really long to finish depending on internet speed

npm run init
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;brave-core based android builds should use &lt;code&gt;npm run init -- --target_os=android --target_arch=arm&lt;/code&gt; (or whichever CPU type you want to build for) brave-core based iOS builds should use &lt;code&gt;npm run init -- --target_os=ios&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;You can also set the target_os and target_arch for init and build using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm config set target_os android
npm config set target_arch arm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Additional parameters needed to build are documented at &lt;a href="https://github.com/brave/brave-browser/wiki/Build-configuration"&gt;https://github.com/brave/brave-browser/wiki/Build-configuration&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Internal developers can find more information at &lt;a href="https://github.com/brave/devops/wiki/%60.env%60-config-for-Brave-Developers"&gt;https://github.com/brave/devops/wiki/%60.env%60-config-for-Brave-Developers&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Build Brave&lt;/h2&gt; 
&lt;p&gt;The default build type is component.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# start the component build compile
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To do a release build:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# start the release compile
npm run build Release
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;brave-core based android builds should use &lt;code&gt;npm run build -- --target_os=android --target_arch=arm&lt;/code&gt; or set the npm config variables as specified above for &lt;code&gt;init&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;brave-core based iOS builds should use the Xcode project found in &lt;code&gt;ios/brave-ios/App&lt;/code&gt;. You can open this project directly or run &lt;code&gt;npm run ios_bootstrap -- --open_xcodeproj&lt;/code&gt; to have it opened in Xcode. See the &lt;a href="https://github.com/brave/brave-browser/wiki/iOS-Development-Environment#Building"&gt;iOS Developer Environment&lt;/a&gt; for more information on iOS builds.&lt;/p&gt; 
&lt;h3&gt;Build Configurations&lt;/h3&gt; 
&lt;p&gt;Running a release build with &lt;code&gt;npm run build Release&lt;/code&gt; can be very slow and use a lot of RAM, especially on Linux with the Gold LLVM plugin.&lt;/p&gt; 
&lt;p&gt;To run a statically linked build (takes longer to build, but starts faster):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run build -- Static
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run a debug build (Component build with is_debug=true):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run build -- Debug
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;NOTE: the build will take a while to complete. Depending on your processor and memory, it could potentially take a few hours.&lt;/p&gt; 
&lt;h2&gt;Run Brave&lt;/h2&gt; 
&lt;p&gt;To start the build:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm start [Release|Component|Static|Debug]&lt;/code&gt;&lt;/p&gt; 
&lt;h1&gt;Update Brave&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;npm run sync -- [--force] [--init] [--create] [brave_core_ref]&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This will attempt to stash your local changes in brave-core, but it's safer to commit local changes before running this&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm run sync&lt;/code&gt; will (depending on the below flags):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;📥 Update sub-projects (chromium, brave-core) to latest commit of a git ref (e.g. tag or branch)&lt;/li&gt; 
 &lt;li&gt;🤕 Apply patches&lt;/li&gt; 
 &lt;li&gt;🔄 Update gclient DEPS dependencies&lt;/li&gt; 
 &lt;li&gt;⏩ Run hooks (e.g. to perform &lt;code&gt;npm install&lt;/code&gt; on child projects)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;flag&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;[no flags]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;updates chromium if needed and re-applies patches. If the chromium version did not change, it will only re-apply patches that have changed. Will update child dependencies &lt;strong&gt;only if any project needed updating during this script run&lt;/strong&gt;. &lt;br /&gt; **Use this if you want the script to manage keeping you up to date instead of pulling or switching branches manually. **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--force&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;updates both &lt;em&gt;Chromium&lt;/em&gt; and &lt;em&gt;brave-core&lt;/em&gt; to the latest remote commit for the current brave-core branch and the &lt;em&gt;Chromium&lt;/em&gt; ref specified in brave-browser/package.json (e.g. &lt;code&gt;master&lt;/code&gt; or &lt;code&gt;74.0.0.103&lt;/code&gt;). Will re-apply all patches. Will force update all child dependencies. &lt;br /&gt; **Use this if you're having trouble and want to force the branches back to a known state. **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--init&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;force update both &lt;em&gt;Chromium&lt;/em&gt; and &lt;em&gt;brave-core&lt;/em&gt; to the versions specified in brave-browser/package.json and force updates all dependent repos - same as &lt;code&gt;npm run init&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--sync_chromium (true/false)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Will force or skip the chromium version update when applicable. Useful if you want to avoid a minor update when not ready for the larger build time a chromium update may result in. A warning will be output about the current code state expecting a different chromium version. Your build may fail as a result.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;-D, --delete_unused_deps&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Will delete from the working copy any dependencies that have been removed since the last sync. Mimics &lt;code&gt;gclient sync -D&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Run &lt;code&gt;npm run sync brave_core_ref&lt;/code&gt; to checkout the specified &lt;em&gt;brave-core&lt;/em&gt; ref and update all dependent repos including chromium if needed.&lt;/p&gt; 
&lt;h2&gt;Scenarios&lt;/h2&gt; 
&lt;h4&gt;Create a new branch:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brave-browser&amp;gt; cd src/brave
brave-browser/src/brave&amp;gt; git checkout -b branch_name
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Checkout an existing branch or tag:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brave-browser/src/brave&amp;gt; git fetch origin
brave-browser/src/brave&amp;gt; git checkout [-b] branch_name
brave-browser/src/brave&amp;gt; npm run sync
...Updating 2 patches...
...Updating child dependencies...
...Running hooks...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Update the current branch to the latest remote:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brave-browser/src/brave&amp;gt; git pull
brave-browser/src/brave&amp;gt; npm run sync
...Updating 2 patches...
...Updating child dependencies...
...Running hooks...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Reset to latest brave-browser master and brave-core master (via &lt;code&gt;init&lt;/code&gt;, will always result in a longer build and will remove any pending changes in your brave-core working directory):&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brave-browser&amp;gt; git checkout master
brave-browser&amp;gt; git pull
brave-browser&amp;gt; npm run sync -- --init
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;When you know that DEPS didn't change, but .patch files did (quickest attempt to perform a mini-sync before a build):&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brave-browser/src/brave&amp;gt; git checkout featureB
brave-browser/src/brave&amp;gt; git pull
brave-browser/src/brave&amp;gt; cd ../..
brave-browser&amp;gt; npm run apply_patches
...Applying 2 patches...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Enabling third-party APIs:&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Google Safe Browsing&lt;/strong&gt;: Get an API key with SafeBrowsing API enabled from &lt;a href="https://console.developers.google.com/"&gt;https://console.developers.google.com/&lt;/a&gt;. Update the &lt;code&gt;GOOGLE_API_KEY&lt;/code&gt; environment variable with your key as per &lt;a href="https://www.chromium.org/developers/how-tos/api-keys"&gt;https://www.chromium.org/developers/how-tos/api-keys&lt;/a&gt; to enable Google SafeBrowsing.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;Development&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://chromium.googlesource.com/chromium/src/+/refs/heads/main/docs/security/rules.md"&gt;Security rules from Chromium&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chromium.googlesource.com/chromium/src/+/HEAD/docs/security/ipc-reviews.md"&gt;IPC review guidelines&lt;/a&gt; (in particular &lt;a href="https://docs.google.com/document/d/1Kw4aTuISF7csHnjOpDJGc7JYIjlvOAKRprCTBVWw_E4/edit#heading=h.84bpc1e9z1bg"&gt;this reference&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/internal/wiki/Pull-request-security-audit-checklist"&gt;Brave's internal security guidelines&lt;/a&gt; (for employees only)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/brave-core/raw/master/docs/rust.md"&gt;Rust usage&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Troubleshooting&lt;/h1&gt; 
&lt;p&gt;See &lt;a href="https://github.com/brave/brave-browser/wiki/Troubleshooting"&gt;Troubleshooting&lt;/a&gt; for solutions to common problems.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>