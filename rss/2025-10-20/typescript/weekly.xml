<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Weekly Trending</title>
    <description>Weekly Trending of TypeScript in GitHub</description>
    <pubDate>Sun, 19 Oct 2025 01:48:18 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>bytedance/flowgram.ai</title>
      <link>https://github.com/bytedance/flowgram.ai</link>
      <description>&lt;p&gt;FlowGram is a node-based flow building engine that helps developers quickly create workflows in either fixed layout or free connection layout modes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FlowGram.AI&lt;/h1&gt; 
&lt;p&gt;FlowGram is a node-based flow building engine that helps developers quickly create workflows in either fixed layout or free connection layout modes. It provides a set of interaction best practices and is particularly suitable for visual workflows with clear inputs and outputs.&lt;/p&gt; 
&lt;p&gt;In the current AI boom, we are also focusing on how to empower workflows with AI capabilities, hence the AI suffix in our name.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/bytedance/flowgram.ai/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/bytedance/flowgram.ai" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@flowgram.ai/editor"&gt;&lt;img src="https://img.shields.io/npm/dm/%40flowgram.ai%2Fcore" alt="@flowgram.ai/editor" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/bytedance/flowgram.ai"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;a href="https://juejin.cn/column/7479814468601315362"&gt;&lt;img src="https://img.shields.io/badge/%E6%8E%98%E9%87%91-FFFFFF?logo=juejin&amp;amp;logoColor=%23007FFF" alt="掘金" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://trendshift.io/repositories/13877"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13877" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;📖 Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://flowgram.ai/"&gt;Official Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bytedance/flowgram.ai/raw/main/CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📦 Packages&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/apps/create-app"&gt;@flowgram.ai/create-app&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;App Creator&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@flowgram.ai/create-app"&gt;&lt;img src="https://img.shields.io/npm/v/@flowgram.ai/create-app.svg?sanitize=true" alt="npm" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/packages/client/fixed-layout-editor"&gt;@flowgram.ai/fixed-layout-editor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Fixed Layout Editor&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@flowgram.ai/fixed-layout-editor"&gt;&lt;img src="https://img.shields.io/npm/v/@flowgram.ai/fixed-layout-editor.svg?sanitize=true" alt="npm" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/packages/client/free-layout-editor"&gt;@flowgram.ai/free-layout-editor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Free Layout Editor&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@flowgram.ai/free-layout-editor"&gt;&lt;img src="https://img.shields.io/npm/v/@flowgram.ai/free-layout-editor.svg?sanitize=true" alt="npm" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🎮 Examples&lt;/h2&gt; 
&lt;div&gt; 
 &lt;p&gt; &lt;a href="https://flowgram.ai/examples/fixed-layout/fixed-feature-overview.html"&gt; Fixed Layout &lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt; Fixed layout where nodes can be dragged to specified positions, with support for compound nodes like branches and loops. &lt;/p&gt; 
 &lt;p&gt; &lt;img src="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/apps/docs/src/public/fixed-layout/fixed-layout-demo.gif" /&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;p&gt; &lt;a href="https://flowgram.ai/examples/free-layout/free-feature-overview.html"&gt; Free Layout &lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt; Free layout where nodes can be placed anywhere and connected using free-form lines. &lt;/p&gt; 
 &lt;p&gt; &lt;img src="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/apps/docs/src/public/free-layout/free-layout-demo.gif" /&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# create demo
npx @flowgram.ai/create-app@latest

# in PowerShell
npx "@flowgram.ai/create-app@latest"

# select demo
- fixed-layout # full-feature overview
- free-layout # full-feature overview
- fixed-layout-simple # basic usage
- free-layout-simple # basic usage
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🔨 Development&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Install Node.js 18+&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nvm install lts/hydrogen
nvm alias default lts/hydrogen # set default node version
nvm use lts/hydrogen
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:bytedance/flowgram.ai.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;strong&gt;Install required global dependencies&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i -g pnpm@10.6.5 @microsoft/rush@5.150.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;&lt;strong&gt;Install project dependencies&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush install
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;&lt;strong&gt;Build the project&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush build
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="6"&gt; 
 &lt;li&gt;&lt;strong&gt;Run docs or demo&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush dev:docs # docs
rush dev:demo-fixed-layout
rush dev:demo-free-layout
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After that, you can start to develop projects inside this repository.&lt;/p&gt; 
&lt;p&gt;Enjoy it!&lt;/p&gt; 
&lt;h2&gt;🌟 Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/bytedance/flowgram.ai/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=bytedance/flowgram.ai" alt="FlowGram.AI Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🌟 Adoption&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio"&gt;Coze Studio&lt;/a&gt; is an all-in-one AI agent development tool. Providing the latest large models and tools, various development modes and frameworks, Coze Studio offers the most convenient AI agent development environment, from development to deployment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NNDeploy/nndeploy"&gt;NNDeploy&lt;/a&gt; is a workflow-based multi-platform ai deployment tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/certimate-go/certimate"&gt;Certimate&lt;/a&gt; is an open-source SSL certificate management tool that helps you automatically apply for and deploy SSL certificates with a visual workflow. It is one of the ACME client options listed in the official documentation of Let's Encrypt.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🌟 Contact us&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Issues: &lt;a href="https://github.com/bytedance/flowgram.ai/issues"&gt;Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Lark: Scan the QR code below with &lt;a href="https://www.feishu.cn/en/"&gt;Register Feishu&lt;/a&gt; to join our FlowGram user group.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/apps/docs/src/public/lark-group.png" width="200" /&gt;</description>
    </item>
    
    <item>
      <title>devlikeapro/waha</title>
      <link>https://github.com/devlikeapro/waha</link>
      <description>&lt;p&gt;WAHA - WhatsApp HTTP API (REST API) that you can configure in a click! 3 engines: WEBJS (browser based), NOWEB (websocket nodejs), GOWS (websocket go)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WAHA&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/devlikeapro/waha/core/logo.png" style="border-radius: 50%" width="150" /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WAHA&lt;/strong&gt; - &lt;strong&gt;W&lt;/strong&gt;hats&lt;strong&gt;A&lt;/strong&gt;pp &lt;strong&gt;H&lt;/strong&gt;TTP &lt;strong&gt;A&lt;/strong&gt;PI (REST API) that you can install on your own server and run in less than 5 minutes!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/devlikeapro/waha"&gt;&lt;img src="https://img.shields.io/docker/pulls/devlikeapro/waha" alt="Docker Pulls" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://waha.devlike.pro/"&gt;https://waha.devlike.pro/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dashboard Example: &lt;a href="https://waha.devlike.pro/dashboard"&gt;https://waha.devlike.pro/dashboard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Swagger Example: &lt;a href="https://waha.devlike.pro/swagger"&gt;https://waha.devlike.pro/swagger&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Tables of Contents&lt;/h1&gt; 
&lt;!-- toc --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#quick-start"&gt;Quick start&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#send-your-first-message"&gt;Send your first message&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#1-download-image"&gt;1. Download image&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#2-run-whatsapp-http-api"&gt;2. Run WhatsApp HTTP API&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#3-start-a-new-session"&gt;3. Start a new session&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#4-get-and-scan-qr"&gt;4. Get and scan QR&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#5-get-the-screenshot"&gt;5. Get the screenshot&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#6-send-a-text-message"&gt;6. Send a text message&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#what-is-next"&gt;What is next?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#development"&gt;Development&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#start-the-project"&gt;Start the project&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- tocstop --&gt; 
&lt;h1&gt;Quick start&lt;/h1&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;Only thing that you must have - installed docker. Please follow the original instruction &lt;a href="https://docs.docker.com/get-docker/" target="_blank" rel="noopener"&gt;how to install docker -&amp;gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you are ready - come back and follows the below steps to send the first text message to WhatsApp via HTTP API!&lt;/p&gt; 
&lt;h2&gt;Send your first message&lt;/h2&gt; 
&lt;p&gt;Let's go over steps that allow you to send your first text message via WhatsApp HTTP API!&lt;/p&gt; 
&lt;h3&gt;1. Download image&lt;/h3&gt; 
&lt;p&gt;Assuming you have installed &lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt;, let's download the image.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull devlikeapro/waha
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker login -u devlikeapro -p {KEY}
docker pull devlikeapro/waha-plus
docker logout
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about how to get &lt;code&gt;PASSWORD&lt;/code&gt; for &lt;a href="https://waha.devlike.pro/docs/how-to/waha-plus/"&gt;&lt;strong&gt;➕ WAHA Plus&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;2. Run WhatsApp HTTP API&lt;/h3&gt; 
&lt;p&gt;Run WhatsApp HTTP API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -it --rm -p 3000:3000/tcp --name waha devlikeapro/waha

# It prints logs and the last line must be
# WhatsApp HTTP API is running on: http://[::1]:3000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the link in your browser &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt; and you'll see API documentation (Swagger).&lt;/p&gt; 
&lt;h3&gt;3. Start a new session&lt;/h3&gt; 
&lt;p&gt;To start a new session you should have your mobile phone with installed WhatsApp application close to you.&lt;/p&gt; 
&lt;p&gt;Please go and read how what we'll need to a bit later: &lt;a href="https://faq.whatsapp.com/381777293328336/?helpref=hc_fnav" target="_blank"&gt; How to log in - the instruction on WhatsApp site &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;When your ready - find &lt;code&gt;POST /api/sessions&lt;/code&gt;, click on &lt;strong&gt;Try it out&lt;/strong&gt;, then &lt;strong&gt;Execute&lt;/strong&gt; a bit below.&lt;/p&gt; 
&lt;p&gt;The example payload:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "name": "default"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By using the request with &lt;code&gt;name&lt;/code&gt; values you can start multiple session (WhatsApp accounts) inside the single docker container in Plus&lt;/p&gt; 
&lt;h3&gt;4. Get and scan QR&lt;/h3&gt; 
&lt;p&gt;Find &lt;code&gt;GET /api/screenshot&lt;/code&gt; and execute it, it shows you QR code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Scan the QR with your cell phone's WhatsApp app.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;5. Get the screenshot&lt;/h3&gt; 
&lt;p&gt;Execute &lt;code&gt;GET /api/screenshot&lt;/code&gt; after a few seconds after scanning the QR - it'll show you the screenshot of you Whatsapp instance. If you can get the actual screenshot - then you're ready to start sending messages!&lt;/p&gt; 
&lt;h3&gt;6. Send a text message&lt;/h3&gt; 
&lt;p&gt;Let's send a text message - find &lt;code&gt;POST /api/sendText&lt;/code&gt; in &lt;a href="http://localhost:3000/"&gt;swagger&lt;/a&gt; and change &lt;code&gt;chatId&lt;/code&gt; this way: use a phone international phone number without &lt;code&gt;+&lt;/code&gt; symbol and add &lt;code&gt;@c.us&lt;/code&gt; at the end.&lt;/p&gt; 
&lt;p&gt;For phone number &lt;code&gt;12132132131&lt;/code&gt; the &lt;code&gt;chatId&lt;/code&gt; is &lt;code&gt;12132132131@c.us&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The example payload:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "chatId": "12132132130@c.us",
  "text": "Hi there!",
  "session": "default"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also, you can use &lt;code&gt;curl&lt;/code&gt; and send POST request like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Phone without +
export PHONE=12132132130
curl -d "{\"chatId\": \"${PHONE}@c.us\", \"text\": \"Hello from WhatsApp HTTP API\" }" -H "Content-Type: application/json" -X POST http://localhost:3000/api/sendText
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What is next?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://waha.devlike.pro/docs/overview/introduction/"&gt;Go and read the full documentation!&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Development&lt;/h1&gt; 
&lt;h2&gt;Start the project&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository&lt;/li&gt; 
 &lt;li&gt;Make sure you're using node&amp;gt;=22 (check &lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/.nvmrc"&gt;.nvmrc&lt;/a&gt; to get the version)&lt;/li&gt; 
 &lt;li&gt;Run the following commands:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install dependencies
yarn install
# Fetch and compile proto files
yarn gows:proto
# Run
yarn start
# open http://localhost:3000
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>CapSoftware/Cap</title>
      <link>https://github.com/CapSoftware/Cap</link>
      <description>&lt;p&gt;Open source Loom alternative. Beautiful, shareable screen recordings.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;img width="150" height="150" src="https://github.com/CapSoftware/Cap/raw/main/apps/desktop/src-tauri/icons/Square310x310Logo.png" alt="Logo" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;&lt;b&gt;Cap&lt;/b&gt;&lt;/h1&gt; 
&lt;p align="center"&gt; The open source Loom alternative. &lt;br /&gt; &lt;a href="https://cap.so"&gt;&lt;strong&gt;Cap.so »&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;b&gt;Downloads for &lt;/b&gt; &lt;a href="https://cap.so/download"&gt;macOS &amp;amp; Windows&lt;/a&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://console.algora.io/org/CapSoftware/bounties?status=open"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fconsole.algora.io%2Fapi%2Fshields%2FCapSoftware%2Fbounties%3Fstatus%3Dopen" alt="Open Bounties" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Cap is the open source alternative to Loom. It's a video messaging tool that allows you to record, edit and share videos in seconds.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/CapSoftware/Cap/refs/heads/main/apps/web/public/landing-cover.png" /&gt; 
&lt;h1&gt;Self Hosting&lt;/h1&gt; 
&lt;p&gt;Cap Web is available to self-host using Docker or Railway, see our &lt;a href="https://cap.so/docs/self-hosting"&gt;self-hosting docs&lt;/a&gt; to learn more. You can also use the button below to deploy Cap Web to Railway:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://railway.com/new/template/PwpGcf"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Cap Desktop can connect to your self-hosted Cap Web instance regardless of if you build it yourself or &lt;a href="https://cap.so/download"&gt;download from our website&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Monorepo App Architecture&lt;/h1&gt; 
&lt;p&gt;We use a combination of Rust, React (Next.js), TypeScript, Tauri, Drizzle (ORM), MySQL, TailwindCSS throughout this Turborepo powered monorepo.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A note about database: The codebase is currently designed to work with MySQL only. MariaDB or other compatible databases might partially work but are not officially supported.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Apps:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;desktop&lt;/code&gt;: A &lt;a href="https://tauri.app"&gt;Tauri&lt;/a&gt; (Rust) app, using &lt;a href="https://start.solidjs.com"&gt;SolidStart&lt;/a&gt; on the frontend.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;web&lt;/code&gt;: A &lt;a href="https://nextjs.org"&gt;Next.js&lt;/a&gt; web app.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Packages:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ui&lt;/code&gt;: A &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; Shared component library.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;utils&lt;/code&gt;: A &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; Shared utility library.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tsconfig&lt;/code&gt;: Shared &lt;code&gt;tsconfig&lt;/code&gt; configurations used throughout the monorepo.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;database&lt;/code&gt;: A &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; and &lt;a href="https://orm.drizzle.team/"&gt;Drizzle ORM&lt;/a&gt; Shared database library.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;config&lt;/code&gt;: &lt;code&gt;eslint&lt;/code&gt; configurations (includes &lt;code&gt;eslint-config-next&lt;/code&gt;, &lt;code&gt;eslint-config-prettier&lt;/code&gt; other configs used throughout the monorepo).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;License:&lt;/h3&gt; 
&lt;p&gt;Portions of this software are licensed as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All code residing in the &lt;code&gt;cap-camera*&lt;/code&gt; and &lt;code&gt;scap-*&lt;/code&gt; families of crates is licensed under the MIT License (see &lt;a href="https://github.com/CapSoftware/Cap/raw/main/licenses/LICENSE-MIT"&gt;licenses/LICENSE-MIT&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;All third party components are licensed under the original license provided by the owner of the applicable component&lt;/li&gt; 
 &lt;li&gt;All other content not mentioned above is available under the AGPLv3 license as defined in &lt;a href="https://github.com/CapSoftware/Cap/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/CapSoftware/Cap/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information. This guide is a work in progress, and is updated regularly as the app matures.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>coze-dev/coze-studio</title>
      <link>https://github.com/coze-dev/coze-studio</link>
      <description>&lt;p&gt;An AI agent development platform with all-in-one visual tools, simplifying agent creation, debugging, and deployment like never before. Coze your way to AI Agent creation.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://p9-arcosite.byteimg.com/tos-cn-i-goo7wpa0wc/943f576df3424fa98580c2ad18946719~tplv-goo7wpa0wc-image.image" alt="Image" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt;
 &lt;p&gt; &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/#what-is-coze-studio"&gt;Coze Studio&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/#feature-list"&gt;Feature list&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/#quickstart"&gt;Quickstart&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/#developer-guide"&gt;Developer Guide&lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt; &lt;img alt="License" src="https://img.shields.io/badge/license-apache2.0-blue.svg?sanitize=true" /&gt; &lt;img alt="Go Version" src="https://img.shields.io/badge/go-%3E%3D%201.23.4-blue" /&gt; &lt;/p&gt; 
 &lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/README.zh_CN.md"&gt;中文&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;What is Coze Studio?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.coze.cn/home"&gt;Coze Studio&lt;/a&gt; is an all-in-one AI agent development tool. Providing the latest large models and tools, various development modes and frameworks, Coze Studio offers the most convenient AI agent development environment, from development to deployment.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Provides all core technologies needed for AI agent development&lt;/strong&gt;: prompt, RAG, plugin, workflow, enabling developers to focus on creating the core value of AI.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ready to use for professional AI agent development at the lowest cost&lt;/strong&gt;: Coze Studio provides developers with complete app templates and build frameworks, allowing you to quickly construct various AI agents and turn creative ideas into reality.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Coze Studio, derived from the "Coze Development Platform" which has served tens of thousands of enterprises and millions of developers, we have made its core engine completely open. It is a one-stop visual development tool for AI Agents that makes creating, debugging, and deploying AI Agents unprecedentedly simple. Through Coze Studio's visual design and build tools, developers can quickly create and debug agents, apps, and workflows using no-code or low-code approaches, enabling powerful AI app development and more customized business logic. It's an ideal choice for building low-code AI products tailored . Coze Studio aims to lower the threshold for AI agent development and application, encouraging community co-construction and sharing for deeper exploration and practice in the AI field.&lt;/p&gt; 
&lt;p&gt;The backend of Coze Studio is developed using Golang, the frontend uses React + TypeScript, and the overall architecture is based on microservices and built following domain-driven design (DDD) principles. Provide developers with a high-performance, highly scalable, and easy-to-customize underlying framework to help them address complex business needs.&lt;/p&gt; 
&lt;h2&gt;Feature list&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Module&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Feature&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Model service&lt;/td&gt; 
   &lt;td&gt;Manage the model list, integrate services such as OpenAI and Volcengine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Build agent&lt;/td&gt; 
   &lt;td&gt;* Build, publish, and manage agent &lt;br /&gt; * Support configuring workflows, knowledge bases, and other resources&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Build apps&lt;/td&gt; 
   &lt;td&gt;* Create and publish apps &lt;br /&gt; * Build business logic through workflows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Build a workflow&lt;/td&gt; 
   &lt;td&gt;Create, modify, publish, and delete workflows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Develop resources&lt;/td&gt; 
   &lt;td&gt;Support creating and managing the following resources: &lt;br /&gt; * Plugins &lt;br /&gt; * Knowledge bases &lt;br /&gt; * Databases &lt;br /&gt; * Prompts&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;API and SDK&lt;/td&gt; 
   &lt;td&gt;* Create conversations, initiate chats, and other OpenAPI &lt;br /&gt; * Integrate agents or apps into your own app through Chat SDK&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;Learn how to obtain and deploy the open-source version of Coze Studio, quickly build projects, and experience Coze Studio's open-source version.&lt;/p&gt; 
&lt;p&gt;Environment requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Before installing Coze Studio, please ensure that your machine meets the following minimum system requirements: 2 Core、4 GB&lt;/li&gt; 
 &lt;li&gt;Pre-install Docker and Docker Compose, and start the Docker service.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Deployment steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Retrieve the source code.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-Bash"&gt;# Clone code
git clone https://github.com/coze-dev/coze-studio.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Configure the model.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Copy the template files of the doubao-seed-1.6 model from the template directory and paste them into the configuration file directory.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-Bash"&gt;cd coze-studio
# Copy model configuration template
cp backend/conf/model/template/model_template_ark_doubao-seed-1.6.yaml backend/conf/model/ark_doubao-seed-1.6.yaml
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Modify the template file in the configuration file directory.&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;Enter the directory &lt;code&gt;backend/conf/model&lt;/code&gt;. Open the file &lt;code&gt;ark_doubao-seed-1.6.yaml&lt;/code&gt;.&lt;/li&gt; 
     &lt;li&gt;Set the fields &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;meta.conn_config.api_key&lt;/code&gt;, &lt;code&gt;meta.conn_config.model&lt;/code&gt;, and save the file. 
      &lt;ul&gt; 
       &lt;li&gt;&lt;strong&gt;id&lt;/strong&gt;: The model ID in Coze Studio, defined by the developer, must be a non-zero integer and globally unique. Agents or workflows call models based on model IDs. For models that have already been launched, do not modify their IDs; otherwise, it may result in model call failures.&lt;/li&gt; 
       &lt;li&gt;&lt;strong&gt;meta.conn_config.api_key&lt;/strong&gt;: The API Key for the model service. In this example, it is the API Key for Ark API Key. For more information, see &lt;a href="https://www.volcengine.com/docs/82379/1541594"&gt;Get Volcengine Ark API Key&lt;/a&gt; or &lt;a href="https://docs.byteplus.com/en/docs/ModelArk/1361424?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=coze_open_source"&gt;Get BytePlus ModelArk API Key&lt;/a&gt;.&lt;/li&gt; 
       &lt;li&gt;&lt;strong&gt;meta.conn_config.model&lt;/strong&gt;: The Model name for the model service. In this example, it refers to the Model ID or Endpoint ID of Ark. For more information, see &lt;a href="https://www.volcengine.com/docs/82379/1513689"&gt;Get Volcengine Ark Model ID&lt;/a&gt; / &lt;a href="https://www.volcengine.com/docs/82379/1099522"&gt;Get Volcengine Ark Endpoint ID&lt;/a&gt; or &lt;a href="https://docs.byteplus.com/en/docs/ModelArk/model_id?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=coze_open_source"&gt;Get BytePlus ModelArk Model ID&lt;/a&gt; / &lt;a href="https://docs.byteplus.com/en/docs/ModelArk/1099522?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=coze_open_source"&gt;Get BytePlus ModelArk Endpoint ID&lt;/a&gt;.&lt;/li&gt; 
      &lt;/ul&gt; 
      &lt;blockquote&gt; 
       &lt;p&gt;For users in China, you may use Volcengine Ark; for users outside China, you may use BytePlus ModelArk instead.&lt;/p&gt; 
      &lt;/blockquote&gt; &lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Deploy and start the service. When deploying and starting Coze Studio for the first time, it may take a while to retrieve images and build local images. Please be patient. During deployment, you will see the following log information. If you see the message "Container coze-server Started," it means the Coze Studio service has started successfully.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-Bash"&gt;# Start the service
cd docker
cp .env.example .env
docker compose up -d
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For common startup failure issues, &lt;strong&gt;please refer to the &lt;a href="https://github.com/coze-dev/coze-studio/wiki/9.-FAQ"&gt;FAQ&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After starting the service, you can open Coze Studio by accessing &lt;code&gt;http://localhost:8888/&lt;/code&gt; through your browser.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] If you want to deploy Coze Studio in a public network environment, it is recommended to assess security risks before you begin, and take corresponding protection measures. Possible security risks include account registration functions, Python execution environments in workflow code nodes, Coze Server listening address configurations, SSRF (Server - Side Request Forgery), and some horizontal privilege escalations in APIs. For more details, refer to &lt;a href="https://github.com/coze-dev/coze-studio/wiki/2.-Quickstart#security-risks-in-public-networks"&gt;Quickstart&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Developer Guide&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Project Configuration&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/3.-Model-configuration"&gt;Model Configuration&lt;/a&gt;: Before deploying the open-source version of Coze Studio, you must configure the model service. Otherwise, you cannot select models when building agents, workflows, and apps.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/4.-Plugin-Configuration"&gt;Plugin Configuration&lt;/a&gt;: To use official plugins from the plugin store, you must first configure the plugins and add the authentication keys for third-party services.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/5.-Basic-component-configuration"&gt;Basic Component Configuration&lt;/a&gt;: Learn how to configure components such as image uploaders to use functions like image uploading in Coze Studio .&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/6.-API-Reference"&gt;API Reference&lt;/a&gt;: The Coze Studio Community Edition API and Chat SDK are authenticated using Personal Access Token, providing APIs for conversations and workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/7.-Development-Standards"&gt;Development Guidelines&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/7.-Development-Standards#project-architecture"&gt;Project Architecture&lt;/a&gt;: Learn about the technical architecture and core components of the open-source version of Coze Studio.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/7.-Development-Standards#code-development-and-testing"&gt;Code Development and Testing&lt;/a&gt;: Learn how to perform secondary development and testing based on the open-source version of Coze Studio.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/7.-Development-Standards#troubleshooting"&gt;Troubleshooting&lt;/a&gt;: Learn how to view container states and system logs.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Using the open-source version of Coze Studio&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Regarding how to use Coze Studio, refer to the &lt;a href="https://www.coze.cn/open/docs"&gt;Coze Development Platform Official Documentation Center&lt;/a&gt; for more information. Please note that certain features, such as tone customization, are limited to the commercial version. Differences between the open-source and commercial versions can be found in the &lt;strong&gt;Feature List&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/guides/quickstart"&gt;Quick Start&lt;/a&gt;: Quickly build an AI assistant agent with Coze Studio.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/guides/agent_overview"&gt;Developing Agents&lt;/a&gt;: Learn how to create, build, publish, and manage agents. You can use functions such as knowledge, plugins, etc., to resolve model hallucination and lack of expertise in professional fields. In addition, Coze Studio provides rich memory features that enable agents to generate more accurate responses based on a personal user's historical conversations during interactions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/guides/workflow"&gt;Develop workflows&lt;/a&gt;: A workflow is a set of executable instructions used to implement business logic or complete specific tasks. It structures data flow and task processing for apps or agents. Coze Studio provides a visual canvas where you can quickly build workflows by dragging and dropping nodes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/guides/plugin"&gt;Resources such as plugins&lt;/a&gt;: In Coze Studio, workflows, plugins, databases, knowledge bases, and variables are collectively referred to as resources.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API &amp;amp; SDK&lt;/strong&gt;: Coze Studio supports &lt;a href="https://github.com/coze-dev/coze-studio/wiki/6.-API-Reference"&gt;API related to chat and workflows&lt;/a&gt;, and you can also integrate agents or apps with local business systems through &lt;a href="https://www.coze.cn/open/docs/developer_guides/web_sdk_overview"&gt;Chat SDK&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/tutorial/chat_sdk_web_online_customer_service"&gt;Tutorials for practice&lt;/a&gt;: Learn how to use Coze Studio to implement various AI scenarios, such as building web-based online customer service using Chat SDK.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project uses the Apache 2.0 license. For details, please refer to the &lt;a href="https://github.com/coze-dev/coze-studio/raw/main/LICENSE-APACHE"&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;Community contributions&lt;/h2&gt; 
&lt;p&gt;We welcome community contributions. For contribution guidelines, please refer to &lt;a href="https://github.com/coze-dev/coze-studio/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; and &lt;a href="https://github.com/coze-dev/coze-studio/raw/main/CODE_OF_CONDUCT.md"&gt;Code of conduct&lt;/a&gt;. We look forward to your contributions!&lt;/p&gt; 
&lt;h2&gt;Security and privacy&lt;/h2&gt; 
&lt;p&gt;If you discover potential security issues in the project, or believe you may have found a security issue, please notify the ByteDance security team through our &lt;a href="https://security.bytedance.com/src"&gt;security center&lt;/a&gt; or &lt;a href="mailto:sec@bytedance.com"&gt;vulnerability reporting email&lt;/a&gt;. Please &lt;strong&gt;do not&lt;/strong&gt; create public GitHub Issues.&lt;/p&gt; 
&lt;h2&gt;Join Community&lt;/h2&gt; 
&lt;p&gt;We are committed to building an open and friendly developer community. All developers interested in AI Agent development are welcome to join us!&lt;/p&gt; 
&lt;h3&gt;🐛 Issue Reports &amp;amp; Feature Requests&lt;/h3&gt; 
&lt;p&gt;To efficiently track and resolve issues while ensuring transparency and collaboration, we recommend participating through:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Issues&lt;/strong&gt;: &lt;a href="https://github.com/coze-dev/coze-studio/issues"&gt;Submit bug reports or feature requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pull Requests&lt;/strong&gt;: &lt;a href="https://github.com/coze-dev/coze-studio/pulls"&gt;Contribute code or documentation improvements&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💬 Technical Discussion &amp;amp; Communication&lt;/h3&gt; 
&lt;p&gt;Join our technical discussion groups to share experiences with other developers and stay updated with the latest project developments:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Feishu Group Chat&lt;/strong&gt;&lt;br /&gt; Scan the QR code below with Feishu mobile app to join:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://p9-arcosite.byteimg.com/tos-cn-i-goo7wpa0wc/0a49081e8f3743e8bf3dcdded4bb571a~tplv-goo7wpa0wc-image.image" alt="Image" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Discord Server&lt;/strong&gt;&lt;br /&gt; Click to join: &lt;a href="https://discord.gg/sTVN9EVS4B"&gt;Coze Community&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Telegram Group&lt;/strong&gt;&lt;br /&gt; Click to join: Telegram Group &lt;a href="https://t.me/+pP9CkPnomDA0Mjgx"&gt;Coze&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;Thank you to all the developers and community members who have contributed to the Coze Studio project. Special thanks:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href="https://github.com/cloudwego/eino"&gt;Eino&lt;/a&gt; framework team - providing powerful support for Coze Studio's agent and workflow runtime engines, model abstractions and implementations, and knowledge base indexing and retrieval&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://github.com/bytedance/flowgram.ai"&gt;FlowGram&lt;/a&gt; team - providing a high-quality workflow building engine for Coze Studio's frontend workflow canvas editor&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://github.com/cloudwego/hertz"&gt;Hertz&lt;/a&gt; team - Go HTTP framework with high-performance and strong-extensibility for building micro-services&lt;/li&gt; 
 &lt;li&gt;All users who participated in testing and feedback&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>evershopcommerce/evershop</title>
      <link>https://github.com/evershopcommerce/evershop</link>
      <description>&lt;p&gt;🛍️ Typescript E-commerce Platform&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img width="60" height="68" alt="EverShop Logo" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/logo-green.png" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;EverShop&lt;/h1&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://evershop.io/docs/development/getting-started/introduction"&gt;Documentation&lt;/a&gt; | &lt;a href="https://demo.evershop.io/"&gt;Demo&lt;/a&gt; &lt;/h4&gt; 
&lt;p align="center"&gt; &lt;img src="https://github.com/evershopcommerce/evershop/actions/workflows/build_test.yml/badge.svg?sanitize=true" alt="Github Action" /&gt; &lt;a href="https://twitter.com/evershopjs"&gt; &lt;img alt="Twitter Follow" src="https://img.shields.io/twitter/follow/evershopjs?style=social" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/GSzt7dt7RM"&gt; &lt;img src="https://img.shields.io/discord/757179260417867879?label=discord" alt="Discord" /&gt; &lt;/a&gt; &lt;a href="https://opensource.org/licenses/GPL-3.0"&gt; &lt;img src="https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true" alt="License" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img alt="EverShop" width="950" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/banner.png" /&gt; &lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;EverShop is a modern, TypeScript-first eCommerce platform built with GraphQL and React. Designed for developers, it offers essential commerce features in a modular, fully customizable architecture—perfect for building tailored shopping experiences with confidence and speed.&lt;/p&gt; 
&lt;h2&gt;Installation Using Docker&lt;/h2&gt; 
&lt;p&gt;You can get started with EverShop in minutes by using the Docker image. The Docker image is a great way to get started with EverShop without having to worry about installing dependencies or configuring your environment.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSL https://raw.githubusercontent.com/evershopcommerce/evershop/main/docker-compose.yml &amp;gt; docker-compose.yml
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the full installation guide, please refer to our &lt;a href="https://evershop.io/docs/development/getting-started/installation-guide"&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/getting-started/installation-guide"&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/module/create-your-first-extension"&gt;Extension development&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/theme/theme-overview"&gt;Theme development&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;Explore our demo store.&lt;/p&gt; 
&lt;p align="left"&gt; &lt;a href="https://demo.evershop.io/admin" target="_blank"&gt; &lt;img alt="EverShop Admin Demo" height="35" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-back.png" /&gt; &lt;/a&gt; &lt;a href="https://demo.evershop.io/" target="_blank"&gt; &lt;img alt="EverShop Store Demo" height="35" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-front.png" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;b&gt;Demo user:&lt;/b&gt; 
&lt;p&gt;Email: &lt;a href="mailto:demo@evershop.io"&gt;demo@evershop.io&lt;/a&gt;&lt;br /&gt; Password: 123456&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you like my work, feel free to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;⭐ this repository. It helps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fevershopcommerce%2Fevershop&amp;amp;text=Awesome%20React%20Ecommerce%20Project&amp;amp;hashtags=react,ecommerce,expressjs,graphql"&gt;&lt;img src="https://img.shields.io/twitter/url/http/shields.io.svg?style=social" alt="Tweet" /&gt;&lt;/a&gt; about EverShop. Thank you!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;EverShop is an open-source project. We are committed to a fully transparent development process and appreciate highly any contributions. Whether you are helping us fix bugs, proposing new features, improving our documentation or spreading the word - we would love to have you as part of the EverShop community.&lt;/p&gt; 
&lt;h3&gt;Ask a question about EverShop&lt;/h3&gt; 
&lt;p&gt;You can ask questions, and participate in discussions about EverShop-related topics in the EverShop Discord channel.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/GSzt7dt7RM"&gt;&lt;img src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/discord_banner_github.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Create a bug report&lt;/h3&gt; 
&lt;p&gt;If you see an error message or run into an issue, please &lt;a href="https://github.com/evershopcommerce/evershop/issues/new"&gt;create bug report&lt;/a&gt;. This effort is valued and it will help all EverShop users.&lt;/p&gt; 
&lt;h3&gt;Submit a feature request&lt;/h3&gt; 
&lt;p&gt;If you have an idea, or you're missing a capability that would make development easier and more robust, please &lt;a href="https://github.com/evershopcommerce/evershop/issues/new"&gt;Submit feature request&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If a similar feature request already exists, don't forget to leave a "+1". If you add some more information such as your thoughts and vision about the feature, your comments will be embraced warmly :)&lt;/p&gt; 
&lt;p&gt;Please refer to our &lt;a href="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/evershopcommerce/evershop/raw/main/LICENSE"&gt;GPL-3.0 License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TibixDev/winboat</title>
      <link>https://github.com/TibixDev/winboat</link>
      <description>&lt;p&gt;Run Windows apps on 🐧 Linux with ✨ seamless integration&lt;/p&gt;&lt;hr&gt;&lt;div align="left"&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/winboat_logo.svg?sanitize=true" alt="WinBoat Logo" width="150" /&gt; &lt;/td&gt; 
    &lt;td&gt; &lt;h1 style="color: #7C86FF; margin: 0; font-size: 32px;"&gt;WinBoat&lt;/h1&gt; &lt;p style="color: oklch(90% 0 0); font-size: 14px; margin: 5px 0;"&gt;Windows for Penguins.&lt;br /&gt; Run Windows apps on 🐧 Linux with ✨ seamless integration&lt;/p&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_dash.png" alt="WinBoat Dashboard" width="45%" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_apps.png" alt="WinBoat Apps" width="45%" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_native.png" alt="Native Windows" width="45%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;⚠️ Work in Progress ⚠️&lt;/h2&gt; 
&lt;p&gt;WinBoat is currently in beta, so expect to occasionally run into hiccups and bugs. You should be comfortable with some level of troubleshooting if you decide to try it, however we encourage you to give it a shot anyway.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🎨 Elegant Interface&lt;/strong&gt;: Sleek and intuitive interface that seamlessly integrates Windows into your Linux desktop environment, making it feel like a native experience&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📦 Automated Installs&lt;/strong&gt;: Simple installation process through our interface - pick your preferences &amp;amp; specs and let us handle the rest&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🚀 Run Any App&lt;/strong&gt;: If it runs on Windows, it can run on WinBoat. Enjoy the full range of Windows applications as native OS-level windows in your Linux environment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🖥️ Full Windows Desktop&lt;/strong&gt;: Access the complete Windows desktop experience when you need it, or run individual apps seamlessly integrated into your Linux workflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📁 Filesystem Integration&lt;/strong&gt;: Your home directory is mounted in Windows, allowing easy file sharing between the two systems without any hassle&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✨ And many more&lt;/strong&gt;: Smartcard passthrough, resource monitoring, and more features being added regularly&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How Does It Work?&lt;/h2&gt; 
&lt;p&gt;WinBoat is an Electron app which allows you to run Windows apps on Linux using a containerized approach. Windows runs as a VM inside a Docker container, we communicate with it using the &lt;a href="https://github.com/TibixDev/winboat/tree/main/guest_server"&gt;WinBoat Guest Server&lt;/a&gt; to retrieve data we need from Windows. For compositing applications as native OS-level windows, we use FreeRDP together with Windows's RemoteApp protocol.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;Before running WinBoat, ensure your system meets the following requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;RAM&lt;/strong&gt;: At least 4 GB of RAM&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CPU&lt;/strong&gt;: At least 2 CPU threads&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt;: At least 32 GB free space on the drive your selected install folder corresponds to&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Virtualization&lt;/strong&gt;: KVM enabled in BIOS/UEFI 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://duckduckgo.com/?t=h_&amp;amp;q=how+to+enable+virtualization+in+%3Cmotherboard+brand%3E+bios&amp;amp;ia=web"&gt;How to enable virtualization&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: Required for containerization 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/engine/install/"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;⚠️ NOTE:&lt;/strong&gt; Docker Desktop is &lt;strong&gt;not&lt;/strong&gt; supported, you will run into issues if you use it&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker Compose v2&lt;/strong&gt;: Required for compatibility with docker-compose.yml files 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/compose/install/#plugin-linux-only"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker User Group&lt;/strong&gt;: Add your user to the &lt;code&gt;docker&lt;/code&gt; group 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user"&gt;Setup Instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;FreeRDP&lt;/strong&gt;: Required for remote desktop connection (Please make sure you have &lt;strong&gt;Version 3.x.x&lt;/strong&gt; with sound support included) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/FreeRDP/FreeRDP/wiki/PreBuilds"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[OPTIONAL] &lt;strong&gt;Kernel Modules&lt;/strong&gt;: The &lt;code&gt;iptables&lt;/code&gt; / &lt;code&gt;nftables&lt;/code&gt; and &lt;code&gt;iptable_nat&lt;/code&gt; kernel modules can be loaded for network autodiscovery and better shared filesystem performance, but this is not obligatory in newer versions of WinBoat 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://rentry.org/rmfq2e5e"&gt;Module loading instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Downloading&lt;/h2&gt; 
&lt;p&gt;You can download the latest Linux builds under the &lt;a href="https://github.com/TibixDev/winboat/releases"&gt;Releases&lt;/a&gt; tab. We currently offer four variants:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AppImage:&lt;/strong&gt; A popular &amp;amp; portable app format which should run fine on most distributions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Unpacked:&lt;/strong&gt; The raw unpacked files, simply run the executable (&lt;code&gt;linux-unpacked/winboat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;.deb:&lt;/strong&gt; The intended format for Debian based distributions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;.rpm:&lt;/strong&gt; The intended format for Fedora based distributions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Known Issues About Container Runtimes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Podman is &lt;strong&gt;unsupported&lt;/strong&gt; for now&lt;/li&gt; 
 &lt;li&gt;Docker Desktop is &lt;strong&gt;unsupported&lt;/strong&gt; for now&lt;/li&gt; 
 &lt;li&gt;Distros that emulate Docker through a Podman socket are &lt;strong&gt;unsupported&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Any rootless containerization solution is currently &lt;strong&gt;unsupported&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building WinBoat&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;For building you need to have NodeJS and Go installed on your system&lt;/li&gt; 
 &lt;li&gt;Clone the repo (&lt;code&gt;git clone https://github.com/TibixDev/WinBoat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Install the dependencies (&lt;code&gt;npm i&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Build the app and the guest server using &lt;code&gt;npm run build:linux-gs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;You can now find the built app under &lt;code&gt;dist&lt;/code&gt; with an AppImage and an Unpacked variant&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running WinBoat in development mode&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure you meet the &lt;a href="https://raw.githubusercontent.com/TibixDev/winboat/main/#prerequisites"&gt;prerequisites&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Additionally, for development you need to have NodeJS and Go installed on your system&lt;/li&gt; 
 &lt;li&gt;Clone the repo (&lt;code&gt;git clone https://github.com/TibixDev/WinBoat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Install the dependencies (&lt;code&gt;npm i&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Build the guest server (&lt;code&gt;npm run build-guest-server&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Run the app (&lt;code&gt;npm run dev&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Whether it's bug fixes, feature improvements, or documentation updates, we appreciate your help making WinBoat better.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt;: We maintain a focus on technical contributions only. Pull requests containing political/sexual content, or other sensitive/controversial topics will not be accepted. Let's keep things focused on making great software! 🚀&lt;/p&gt; 
&lt;p&gt;Feel free to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Report bugs and issues&lt;/li&gt; 
 &lt;li&gt;Submit feature requests&lt;/li&gt; 
 &lt;li&gt;Contribute code improvements&lt;/li&gt; 
 &lt;li&gt;Help with documentation&lt;/li&gt; 
 &lt;li&gt;Share feedback and suggestions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out our issues page to get started, or feel free to open a new issue if you've found something that needs attention.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;WinBoat is licensed under the &lt;a href="https://github.com/TibixDev/winboat/raw/main/LICENSE"&gt;MIT&lt;/a&gt; license&lt;/p&gt; 
&lt;h2&gt;Inspiration / Alternatives&lt;/h2&gt; 
&lt;p&gt;These past few years some cool projects have surfaced with similar concepts, some of which we've also taken inspirations from.&lt;br /&gt; They're awesome and you should check them out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/winapps-org/winapps"&gt;WinApps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/casualsnek/cassowary"&gt;Cassowary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dockur/windows"&gt;dockur/windows&lt;/a&gt; (🌟 Also used in WinBoat)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Socials &amp;amp; Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.winboat.app/"&gt;&lt;img src="https://img.shields.io/badge/Website-winboat.app-blue?style=flat&amp;amp;logo=googlechrome&amp;amp;logoColor=white" alt="Website" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/winboat_app"&gt;&lt;img src="https://img.shields.io/badge/Twitter-@winboat__app-1DA1F2?style=flat&amp;amp;logo=x&amp;amp;logoColor=white" alt="Twitter" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fosstodon.org/@winboat"&gt;&lt;img src="https://img.shields.io/badge/Mastodon-@winboat-6364FF?style=flat&amp;amp;logo=mastodon&amp;amp;logoColor=white" alt="Mastodon" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://bsky.app/profile/winboat.app"&gt;&lt;img src="https://img.shields.io/badge/Bluesky-winboat.app-00A8E8?style=flat&amp;amp;logo=bluesky&amp;amp;logoColor=white" alt="Bluesky" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://discord.gg/MEwmpWm4tN"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join_Community-5865F2?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="mailto:staff@winboat.app"&gt;&lt;img src="https://img.shields.io/badge/Email-staff@winboat.app-D14836?style=flat&amp;amp;logo=gmail&amp;amp;logoColor=white" alt="Email" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://deepwiki.com/TibixDev/winboat"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://www.star-history.com/#tibixdev/winboat&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=tibixdev/winboat&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=tibixdev/winboat&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=tibixdev/winboat&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>remix-run/remix</title>
      <link>https://github.com/remix-run/remix</link>
      <description>&lt;p&gt;Build Better Websites. Create modern, resilient user experiences with web fundamentals.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Remix 3!&lt;/h1&gt; 
&lt;p&gt;This is the source repository for Remix 3. It is under active development.&lt;/p&gt; 
&lt;p&gt;We published &lt;a href="https://remix.run/blog/wake-up-remix"&gt;a blog post&lt;/a&gt; earlier this year with some of our thoughts around Remix 3. It explains our philosophy for web development and why we think the time is right for something new. When working on Remix 3, we follow these principles:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Model-First Development&lt;/strong&gt;. AI fundamentally shifts the human-computer interaction model for both user experience and developer workflows. Optimize the source code, documentation, tooling, and abstractions for LLMs. Additionally, develop abstractions for applications to use models in the product itself, not just as a tool to develop it.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Build on Web APIs&lt;/strong&gt;. Sharing abstractions across the stack greatly reduces the amount of context switching, both for humans and machines. Build on the foundation of Web APIs and JavaScript because it is the only full stack ecosystem.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Religiously Runtime&lt;/strong&gt;. Designing for bundlers/compilers/typegen (and any pre-runtime static analysis) leads to poor API design that eventually pollutes the entire system. All packages must be designed with no expectation of static analysis and all tests must run without bundling. Because browsers are involved, &lt;code&gt;--import&lt;/code&gt; loaders for simple transformations like TypeScript and JSX are permissible.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Avoid Dependencies&lt;/strong&gt;. Dependencies lock you into somebody else's roadmap. Choose them wisely, wrap them completely, and expect to replace most of them with our own package eventually. The goal is zero.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Demand Composition&lt;/strong&gt;. Abstractions should be single-purpose and replaceable. A composable abstraction is easy to add and remove from an existing program. Every package must be useful and documented independent of any other context. New features should first be attempted as a new package. If impossible, attempt to break up the existing package to make it more composable. However, tightly coupled modules that almost always change together in both directions should be moved to the same package.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Distribute Cohesively&lt;/strong&gt;. Extremely composable ecosystems are difficult to learn and use. Remix will be distributed as a single &lt;code&gt;remix&lt;/code&gt; package for both distribution and documentation.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Goals&lt;/h2&gt; 
&lt;p&gt;Although we recommend the &lt;code&gt;remix&lt;/code&gt; package for ease of use, all packages that make up Remix should be usable standalone as well. This forces us to consider package boundaries and helps us define public interfaces that are portable and interopable.&lt;/p&gt; 
&lt;p&gt;Each package in Remix:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Has a &lt;a href="https://en.wikipedia.org/wiki/Single-responsibility_principle"&gt;single responsibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Prioritizes web standards to ensure maximum interoperability and portability across JavaScript runtimes&lt;/li&gt; 
 &lt;li&gt;Augments standards unobtrusively where they are missing or incomplete, minimizing incompatibility risks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This means Remix code is &lt;strong&gt;portable by default&lt;/strong&gt;. Remix packages work seamlessly across &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt;, &lt;a href="https://bun.sh/"&gt;Bun&lt;/a&gt;, &lt;a href="https://deno.com/"&gt;Deno&lt;/a&gt;, &lt;a href="https://workers.cloudflare.com/"&gt;Cloudflare Workers&lt;/a&gt;, and other environments.&lt;/p&gt; 
&lt;p&gt;We leverage server-side web APIs when they are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API"&gt;The Web Streams API&lt;/a&gt; instead of &lt;code&gt;node:stream&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array"&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt; instead of Node.js &lt;code&gt;Buffer&lt;/code&gt;s&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API"&gt;The Web Crypto API&lt;/a&gt; instead of &lt;code&gt;node:crypto&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Blob"&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/File"&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; instead of some bespoke runtime-specific API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The benefit is code that's not just reusable, but &lt;strong&gt;future-proof&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Packages&lt;/h2&gt; 
&lt;p&gt;We currently publish the following packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/fetch-proxy"&gt;fetch-proxy&lt;/a&gt;: Seamlessly construct HTTP proxies with the familiar &lt;code&gt;fetch()&lt;/code&gt; API&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/file-storage"&gt;file-storage&lt;/a&gt;: Robust key/value storage tailored for JavaScript &lt;code&gt;File&lt;/code&gt; objects, simplifying file management&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/form-data-parser"&gt;form-data-parser&lt;/a&gt;: An enhanced &lt;code&gt;request.formData()&lt;/code&gt; wrapper enabling efficient, streaming file uploads&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/headers"&gt;headers&lt;/a&gt;: A comprehensive toolkit for effortlessly managing HTTP headers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/lazy-file"&gt;lazy-file&lt;/a&gt;: Optimize performance with lazy-loaded, streaming &lt;code&gt;Blob&lt;/code&gt;s and &lt;code&gt;File&lt;/code&gt;s for JavaScript&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/multipart-parser"&gt;multipart-parser&lt;/a&gt;: High-performance, streaming parser for multipart messages, perfect for handling complex form data&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/node-fetch-server"&gt;node-fetch-server&lt;/a&gt;: Build Node.js HTTP servers using the web-standard &lt;code&gt;fetch()&lt;/code&gt; API, promoting code consistency&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/route-pattern"&gt;route-pattern&lt;/a&gt;: A powerful and flexible URL pattern matching library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/tar-parser"&gt;tar-parser&lt;/a&gt;: A fast, streaming parser for tar archives, designed for efficient data extraction&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! If you'd like to contribute, please feel free to open an issue or submit a pull request. See &lt;a href="https://github.com/remix-run/remix/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://github.com/remix-run/remix/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>daytonaio/daytona</title>
      <link>https://github.com/daytonaio/daytona</link>
      <description>&lt;p&gt;Daytona is a Secure and Elastic Infrastructure for Running AI-Generated Code&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://www.daytona.io/docs"&gt;&lt;img src="https://img.shields.io/github/v/release/daytonaio/docs?label=Docs&amp;amp;color=23cc71" alt="Documentation" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/License-AGPL--3-blue" alt="License" /&gt; &lt;a href="https://goreportcard.com/report/github.com/daytonaio/daytona"&gt;&lt;img src="https://goreportcard.com/badge/github.com/daytonaio/daytona" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/daytonaio/daytona/issues"&gt;&lt;img src="https://img.shields.io/github/issues/daytonaio/daytona" alt="Issues - daytona" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/v/release/daytonaio/daytona" alt="GitHub Release" /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-white.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-black.png" /&gt; 
  &lt;img alt="Daytona logo" src="https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-black.png" width="50%" /&gt; 
 &lt;/picture&gt; 
&lt;/div&gt; 
&lt;h3 align="center"&gt; Run AI Code. &lt;br /&gt; Secure and Elastic Infrastructure for Running Your AI-Generated Code. &lt;/h3&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.daytona.io/docs"&gt; Documentation &lt;/a&gt;· &lt;a href="https://github.com/daytonaio/daytona/issues/new?assignees=&amp;amp;labels=bug&amp;amp;projects=&amp;amp;template=bug_report.md&amp;amp;title=%F0%9F%90%9B+Bug+Report%3A+"&gt; Report Bug &lt;/a&gt;· &lt;a href="https://github.com/daytonaio/daytona/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.md&amp;amp;title=%F0%9F%9A%80+Feature%3A+"&gt; Request Feature &lt;/a&gt;· &lt;a href="https://go.daytona.io/slack"&gt; Join our Slack &lt;/a&gt;· &lt;a href="https://x.com/daytonaio"&gt; Connect on X &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.producthunt.com/posts/daytona-2?embed=true&amp;amp;utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-daytona-2" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=957617&amp;amp;theme=neutral&amp;amp;period=daily&amp;amp;t=1746176740150" alt="Daytona  - Secure and elastic infra for running your AI-generated code. | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;a href="https://www.producthunt.com/posts/daytona-2?embed=true&amp;amp;utm_source=badge-top-post-topic-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-daytona-2" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-topic-badge.svg?post_id=957617&amp;amp;theme=neutral&amp;amp;period=monthly&amp;amp;topic_id=237&amp;amp;t=1746176740150" alt="Daytona  - Secure and elastic infra for running your AI-generated code. | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Python SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install daytona
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;TypeScript SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install @daytonaio/sdk
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Lightning-Fast Infrastructure&lt;/strong&gt;: Sub-90ms Sandbox creation from code to execution.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Separated &amp;amp; Isolated Runtime&lt;/strong&gt;: Execute AI-generated code with zero risk to your infrastructure.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Massive Parallelization for Concurrent AI Workflows&lt;/strong&gt;: Fork Sandbox filesystem and memory state (Coming soon!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Programmatic Control&lt;/strong&gt;: File, Git, LSP, and Execute API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Unlimited Persistence&lt;/strong&gt;: Your Sandboxes can live forever&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OCI/Docker Compatibility&lt;/strong&gt;: Use any OCI/Docker image to create a Sandbox&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create an account at &lt;a href="https://app.daytona.io"&gt;https://app.daytona.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Generate a &lt;a href="https://app.daytona.io/dashboard/keys"&gt;new API key&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow the &lt;a href="https://www.daytona.io/docs/getting-started/"&gt;Getting Started docs&lt;/a&gt; to start using the Daytona SDK&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Creating your first Sandbox&lt;/h2&gt; 
&lt;h3&gt;Python SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-py"&gt;from daytona import Daytona, DaytonaConfig, CreateSandboxBaseParams

# Initialize the Daytona client
daytona = Daytona(DaytonaConfig(api_key="YOUR_API_KEY"))

# Create the Sandbox instance
sandbox = daytona.create(CreateSandboxBaseParams(language="python"))

# Run code securely inside the Sandbox
response = sandbox.process.code_run('print("Sum of 3 and 4 is " + str(3 + 4))')
if response.exit_code != 0:
    print(f"Error running code: {response.exit_code} {response.result}")
else:
    print(response.result)

# Clean up the Sandbox
daytona.delete(sandbox)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Typescript SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { Daytona } from '@daytonaio/sdk'

async function main() {
  // Initialize the Daytona client
  const daytona = new Daytona({
    apiKey: 'YOUR_API_KEY',
  })

  let sandbox
  try {
    // Create the Sandbox instance
    sandbox = await daytona.create({
      language: 'typescript',
    })
    // Run code securely inside the Sandbox
    const response = await sandbox.process.codeRun('console.log("Sum of 3 and 4 is " + (3 + 4))')
    if (response.exitCode !== 0) {
      console.error('Error running code:', response.exitCode, response.result)
    } else {
      console.log(response.result)
    }
  } catch (error) {
    console.error('Sandbox flow error:', error)
  } finally {
    if (sandbox) await daytona.delete(sandbox)
  }
}

main().catch(console.error)
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Daytona is Open Source under the &lt;a href="https://raw.githubusercontent.com/daytonaio/daytona/main/LICENSE"&gt;GNU AFFERO GENERAL PUBLIC LICENSE&lt;/a&gt;, and is the &lt;a href="https://raw.githubusercontent.com/daytonaio/daytona/main/NOTICE"&gt;copyright of its contributors&lt;/a&gt;. If you would like to contribute to the software, read the Developer Certificate of Origin Version 1.1 (&lt;a href="https://developercertificate.org/"&gt;https://developercertificate.org/&lt;/a&gt;). Afterwards, navigate to the &lt;a href="https://raw.githubusercontent.com/daytonaio/daytona/main/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to get started.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nitrojs/nitro</title>
      <link>https://github.com/nitrojs/nitro</link>
      <description>&lt;p&gt;Next Generation Server Toolkit. Create web servers with everything you need and deploy them wherever you prefer.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nitro&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You’re viewing the &lt;strong&gt;v3 Alpha&lt;/strong&gt; branch. For the current stable release, see &lt;a href="https://github.com/nitrojs/nitro/tree/v2"&gt;Nitro v2&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Nitro&lt;/strong&gt; extends your Vite app with a &lt;strong&gt;production-ready server&lt;/strong&gt;, designed to run &lt;strong&gt;anywhere&lt;/strong&gt;. Add server routes, deploy across multiple platforms, and enjoy a &lt;strong&gt;zero-config&lt;/strong&gt; experience.&lt;/p&gt; 
&lt;p&gt;📘 &lt;strong&gt;Docs (v3 Alpha):&lt;/strong&gt; &lt;a href="https://v3.nitro.build"&gt;https://v3.nitro.build&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See Check out the &lt;a href="https://raw.githubusercontent.com/nitrojs/nitro/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Released under the &lt;a href="https://raw.githubusercontent.com/nitrojs/nitro/main/LICENSE"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>anthropics/claude-code</title>
      <link>https://github.com/anthropics/claude-code</link>
      <description>&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows - all through natural language commands.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Claude Code&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/Node.js-18%2B-brightgreen?style=flat-square" alt="" /&gt; &lt;a href="https://www.npmjs.com/package/@anthropic-ai/claude-code"&gt;&lt;img src="https://img.shields.io/npm/v/@anthropic-ai/claude-code.svg?style=flat-square" alt="npm" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows -- all through natural language commands. Use it in your terminal, IDE, or tag @claude on Github.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Learn more in the &lt;a href="https://docs.anthropic.com/en/docs/claude-code/overview"&gt;official documentation&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/anthropics/claude-code/main/demo.gif" /&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Claude Code:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install -g @anthropic-ai/claude-code
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Navigate to your project directory and run &lt;code&gt;claude&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;p&gt;This repository includes several Claude Code plugins that extend functionality with custom commands and agents. See the &lt;a href="https://raw.githubusercontent.com/anthropics/claude-code/main/plugins/README.md"&gt;plugins directory&lt;/a&gt; for detailed documentation on available plugins.&lt;/p&gt; 
&lt;h2&gt;Reporting Bugs&lt;/h2&gt; 
&lt;p&gt;We welcome your feedback. Use the &lt;code&gt;/bug&lt;/code&gt; command to report issues directly within Claude Code, or file a &lt;a href="https://github.com/anthropics/claude-code/issues"&gt;GitHub issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Connect on Discord&lt;/h2&gt; 
&lt;p&gt;Join the &lt;a href="https://anthropic.com/discord"&gt;Claude Developers Discord&lt;/a&gt; to connect with other developers using Claude Code. Get help, share feedback, and discuss your projects with the community.&lt;/p&gt; 
&lt;h2&gt;Data collection, usage, and retention&lt;/h2&gt; 
&lt;p&gt;When you use Claude Code, we collect feedback, which includes usage data (such as code acceptance or rejections), associated conversation data, and user feedback submitted via the &lt;code&gt;/bug&lt;/code&gt; command.&lt;/p&gt; 
&lt;h3&gt;How we use your data&lt;/h3&gt; 
&lt;p&gt;See our &lt;a href="https://docs.anthropic.com/en/docs/claude-code/data-usage"&gt;data usage policies&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Privacy safeguards&lt;/h3&gt; 
&lt;p&gt;We have implemented several safeguards to protect your data, including limited retention periods for sensitive information, restricted access to user session data, and clear policies against using feedback for model training.&lt;/p&gt; 
&lt;p&gt;For full details, please review our &lt;a href="https://www.anthropic.com/legal/commercial-terms"&gt;Commercial Terms of Service&lt;/a&gt; and &lt;a href="https://www.anthropic.com/legal/privacy"&gt;Privacy Policy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>seerr-team/seerr</title>
      <link>https://github.com/seerr-team/seerr</link>
      <description>&lt;p&gt;Open-source media request and discovery manager for Jellyfin, Plex, and Emby.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt;
 ⚠️ 
 &lt;strong&gt;NOTE:&lt;/strong&gt; We are currently in the process of merging Overseerr and Jellyseerr into this unified repository.
&lt;/div&gt; 
&lt;h1 align="center" style="font-size: 4em;"&gt;🚧 Seerr&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="https://github.com/seerr-team/seerr/actions/workflows/release.yml/badge.svg?sanitize=true" alt="Seerr Release" /&gt; &lt;img src="https://github.com/seerr-team/seerr/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Seerr CI" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://discord.gg/seerr"&gt;&lt;img src="https://img.shields.io/discord/783137440809746482" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/fallenbagel/jellyseerr"&gt;&lt;img src="https://img.shields.io/docker/pulls/fallenbagel/jellyseerr" alt="Docker pulls" /&gt;&lt;/a&gt; &lt;a href="http://translate.jellyseerr.dev/engage/jellyseerr/"&gt;&lt;img src="http://translate.jellyseerr.dev/widget/jellyseerr/jellyseerr-frontend/svg-badge.svg?sanitize=true" alt="Translation status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/seerr-team/seerr/raw/develop/LICENSE"&gt;&lt;img alt="GitHub" src="https://img.shields.io/github/license/seerr-team/seerr" /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Seerr&lt;/strong&gt; is a free and open source software application for managing requests for your media library. It integrates with the media server of your choice: &lt;a href="https://jellyfin.org"&gt;Jellyfin&lt;/a&gt;, &lt;a href="https://plex.tv"&gt;Plex&lt;/a&gt;, and &lt;a href="https://emby.media/"&gt;Emby&lt;/a&gt;. In addition, it integrates with your existing services, such as &lt;strong&gt;&lt;a href="https://sonarr.tv/"&gt;Sonarr&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://radarr.video/"&gt;Radarr&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Current Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Full Jellyfin/Emby/Plex integration including authentication with user import &amp;amp; management.&lt;/li&gt; 
 &lt;li&gt;Support for &lt;strong&gt;PostgreSQL&lt;/strong&gt; and &lt;strong&gt;SQLite&lt;/strong&gt; databases.&lt;/li&gt; 
 &lt;li&gt;Supports Movies, Shows and Mixed Libraries.&lt;/li&gt; 
 &lt;li&gt;Ability to change email addresses for SMTP purposes.&lt;/li&gt; 
 &lt;li&gt;Easy integration with your existing services. Currently, Seerr supports Sonarr and Radarr. More to come!&lt;/li&gt; 
 &lt;li&gt;Jellyfin/Emby/Plex library scan, to keep track of the titles which are already available.&lt;/li&gt; 
 &lt;li&gt;Customizable request system, which allows users to request individual seasons or movies in a friendly, easy-to-use interface.&lt;/li&gt; 
 &lt;li&gt;Incredibly simple request management UI. Don't dig through the app to simply approve recent requests!&lt;/li&gt; 
 &lt;li&gt;Granular permission system.&lt;/li&gt; 
 &lt;li&gt;Support for various notification agents.&lt;/li&gt; 
 &lt;li&gt;Mobile-friendly design, for when you need to approve requests on the go!&lt;/li&gt; 
 &lt;li&gt;Support for watchlisting &amp;amp; blacklisting media.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;With more features on the way! Check out our &lt;a href="https://raw.githubusercontent.com/seerr-team/issues"&gt;issue tracker&lt;/a&gt; to see the features which have already been requested.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Check out our documentation for instructions on how to install and run Seerr:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://docs.seerr.dev/getting-started/"&gt;https://docs.seerr.dev/getting-started/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Packages:&lt;/h3&gt; 
&lt;p&gt;Archlinux: &lt;a href="https://aur.archlinux.org/packages/jellyseerr"&gt;AUR&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Nix: &lt;a href="https://search.nixos.org/packages?channel=unstable&amp;amp;show=jellyseerr"&gt;Nixpkg&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Preview&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/seerr-team/seerr/develop/public/preview.jpg" /&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check out the &lt;a href="https://docs.seerr.dev"&gt;Seerr Documentation&lt;/a&gt; before asking for help. Your question might already be in the docs!&lt;/li&gt; 
 &lt;li&gt;You can get support on &lt;a href="https://discord.gg/seerr"&gt;Discord&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;You can ask questions in the Help category of our &lt;a href="https://raw.githubusercontent.com/seerr-team/discussions"&gt;GitHub Discussions&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Bug reports and feature requests can be submitted via &lt;a href="https://raw.githubusercontent.com/seerr-team/issues"&gt;GitHub Issues&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;API Documentation&lt;/h2&gt; 
&lt;p&gt;You can access the API documentation from your local Seerr install at &lt;a href="http://localhost:5055/api-docs"&gt;http://localhost:5055/api-docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;You can ask questions, share ideas, and more in &lt;a href="https://raw.githubusercontent.com/seerr-team/discussions"&gt;GitHub Discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you would like to chat with other members of our growing community, &lt;a href="https://discord.gg/seerr"&gt;join the Seerr Discord server&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Our &lt;a href="https://raw.githubusercontent.com/seerr-team/seerr/develop/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; applies to all Seerr community channels.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;You can help improve Seerr too! Check out our &lt;a href="https://raw.githubusercontent.com/seerr-team/seerr/develop/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/seerr/#backers"&gt;&lt;img src="https://opencollective.com/seerr/contributors.svg?width=890" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/seerr/#backers"&gt;&lt;img src="https://opencollective.com/seerr/backers.svg?sanitize=true" alt="Become a Backer" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/seerr/#sponsors"&gt;&lt;img src="https://opencollective.com/seerr/sponsors.svg?sanitize=true" alt="Become a Sponsor" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>exa-labs/exa-mcp-server</title>
      <link>https://github.com/exa-labs/exa-mcp-server</link>
      <description>&lt;p&gt;Exa MCP for web search and web crawling!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Exa MCP Server 🔍&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/exa-mcp-server"&gt;&lt;img src="https://badge.fury.io/js/exa-mcp-server.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://smithery.ai/server/exa"&gt;&lt;img src="https://smithery.ai/badge/exa" alt="smithery badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🆕 &lt;code&gt;exa-code&lt;/code&gt;: fast, efficient web context for coding agents&lt;/h2&gt; 
&lt;p&gt;Vibe coding should never have a bad vibe. &lt;code&gt;exa-code&lt;/code&gt; is a huge step towards coding agents that never hallucinate.&lt;/p&gt; 
&lt;p&gt;When your coding agent makes a search query, &lt;code&gt;exa-code&lt;/code&gt; searches over billions of Github repos, docs pages, Stackoverflow posts, and more, to find the perfect, token-efficient context that the agent needs to code correctly. It's powered by the Exa search engine.&lt;/p&gt; 
&lt;p&gt;Examples of queries you can make with &lt;code&gt;exa-code&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;use Exa search in python and make sure content is always livecrawled&lt;/li&gt; 
 &lt;li&gt;use correct syntax for vercel ai sdk to call gpt-5 nano asking it how are you&lt;/li&gt; 
 &lt;li&gt;how to set up a reproducible Nix Rust development environment&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;✨ Works with Cursor and Claude Code!&lt;/strong&gt; Use the HTTP-based configuration format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "exa": {
      "type": "http",
      "url": "https://mcp.exa.ai/mcp",
      "headers": {
        "Remove-Me": "Disable web_search_exa tool if you're just coding. To 100% call exa-code, say 'use exa-code'."
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may include your exa api key in the url like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://mcp.exa.ai/mcp?exaApiKey=YOUREXAKEY
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may whitelist specific tools in the url with the &lt;code&gt;enabledTools&lt;/code&gt; parameter which expects a url encoded array strings like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://mcp.exa.ai/mcp?exaApiKey=YOUREXAKEY&amp;amp;enabledTools=%5B%22crawling_exa%ss%5D
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use &lt;code&gt;exa-code&lt;/code&gt; through &lt;a href="https://smithery.ai/server/exa"&gt;Smithery&lt;/a&gt; without an Exa API key.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;A Model Context Protocol (MCP) server that connects AI assistants like Claude to Exa AI's search capabilities, including web search, research tools, and our new code search feature.&lt;/p&gt; 
&lt;h2&gt;Remote Exa MCP 🌐&lt;/h2&gt; 
&lt;p&gt;Connect directly to Exa's hosted MCP server (instead of running it locally).&lt;/p&gt; 
&lt;h3&gt;Remote Exa MCP URL&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;https://mcp.exa.ai/mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Claude Desktop Configuration for Remote MCP&lt;/h3&gt; 
&lt;p&gt;Add this to your Claude Desktop configuration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "exa": {
      "command": "npx",
      "args": [
        "-y",
        "mcp-remote",
        "https://mcp.exa.ai/mcp"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Cursor and Claude Code Configuration for Remote MCP&lt;/h3&gt; 
&lt;p&gt;For Cursor and Claude Code, use this HTTP-based configuration format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "exa": {
      "type": "http",
      "url": "https://mcp.exa.ai/mcp",
      "headers": {}
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Codex Configuration for Remote MCP&lt;/h3&gt; 
&lt;p&gt;Open your Codex configuration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;code ~/.codex/config.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add this configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[mcp_servers.exa]
command = "npx"
args = ["-y", "mcp-remote", "https://mcp.exa.ai/mcp"]
env = { EXA_API_KEY = "your-api-key-here" }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace &lt;code&gt;your-api-key-here&lt;/code&gt; with your actual Exa API key from &lt;a href="https://dashboard.exa.ai/api-keys"&gt;dashboard.exa.ai/api-keys&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Claude Code Plugin&lt;/h3&gt; 
&lt;p&gt;The easiest way to get started with Exa in Claude Code, using plugins:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Add the Exa marketplace
/plugin marketplace add exa-labs/exa-mcp-server

# Install the plugin
/plugin install exa-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then set your API key:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export EXA_API_KEY="your-api-key-here"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Get your API key from &lt;a href="https://dashboard.exa.ai/api-keys"&gt;dashboard.exa.ai/api-keys&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;NPM Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g exa-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using Claude Code&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;claude mcp add exa -e EXA_API_KEY=YOUR_API_KEY -- npx -y exa-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using Exa MCP through Smithery&lt;/h3&gt; 
&lt;p&gt;To install the Exa MCP server via &lt;a href="https://smithery.ai/server/exa"&gt;Smithery&lt;/a&gt;, head over to:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://smithery.ai/server/exa"&gt;smithery.ai/server/exa&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Configuration ⚙️&lt;/h2&gt; 
&lt;h3&gt;1. Configure Claude Desktop to recognize the Exa MCP server&lt;/h3&gt; 
&lt;p&gt;You can find claude_desktop_config.json inside the settings of Claude Desktop app:&lt;/p&gt; 
&lt;p&gt;Open the Claude Desktop app and enable Developer Mode from the top-left menu bar.&lt;/p&gt; 
&lt;p&gt;Once enabled, open Settings (also from the top-left menu bar) and navigate to the Developer Option, where you'll find the Edit Config button. Clicking it will open the claude_desktop_config.json file, allowing you to make the necessary edits.&lt;/p&gt; 
&lt;p&gt;OR (if you want to open claude_desktop_config.json from terminal)&lt;/p&gt; 
&lt;h4&gt;For macOS:&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open your Claude Desktop configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;code ~/Library/Application\ Support/Claude/claude_desktop_config.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;For Windows:&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open your Claude Desktop configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;code %APPDATA%\Claude\claude_desktop_config.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. Add the Exa server configuration:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "exa": {
      "command": "npx",
      "args": ["-y", "exa-mcp-server"],
      "env": {
        "EXA_API_KEY": "your-api-key-here"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace &lt;code&gt;your-api-key-here&lt;/code&gt; with your actual Exa API key from &lt;a href="https://dashboard.exa.ai/api-keys"&gt;dashboard.exa.ai/api-keys&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;3. Available Tools &amp;amp; Tool Selection&lt;/h3&gt; 
&lt;p&gt;The Exa MCP server includes powerful tools for developers and researchers:&lt;/p&gt; 
&lt;h4&gt;🔥 &lt;strong&gt;Featured: Code Search Tool&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;get_code_context_exa&lt;/strong&gt;: 🆕 &lt;strong&gt;NEW!&lt;/strong&gt; Search and get relevant code snippets, examples, and documentation from open source libraries, GitHub repositories, and programming frameworks. Perfect for finding up-to-date code documentation, implementation examples, API usage patterns, and best practices from real codebases.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🌐 &lt;strong&gt;Other Available Tools&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;web_search_exa&lt;/strong&gt;: Performs real-time web searches with optimized results and content extraction.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;company_research&lt;/strong&gt;: Comprehensive company research tool that crawls company websites to gather detailed information about businesses.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;crawling&lt;/strong&gt;: Extracts content from specific URLs, useful for reading articles, PDFs, or any web page when you have the exact URL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;linkedin_search&lt;/strong&gt;: Search LinkedIn for companies and people using Exa AI. Simply include company names, person names, or specific LinkedIn URLs in your query.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;deep_researcher_start&lt;/strong&gt;: Start a smart AI researcher for complex questions. The AI will search the web, read many sources, and think deeply about your question to create a detailed research report.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;deep_researcher_check&lt;/strong&gt;: Check if your research is ready and get the results. Use this after starting a research task to see if it's done and get your comprehensive report.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can choose which tools to enable by adding the &lt;code&gt;--tools&lt;/code&gt; parameter to your Claude Desktop configuration:&lt;/p&gt; 
&lt;h4&gt;💻 &lt;strong&gt;Setup for Code Search Only&lt;/strong&gt; (Recommended for Developers)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "exa": {
      "command": "npx",
      "args": [
        "-y",
        "exa-mcp-server",
        "--tools=get_code_context_exa,web_search_exa"
      ],
      "env": {
        "EXA_API_KEY": "your-api-key-here"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Specify which tools to enable:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "exa": {
      "command": "npx",
      "args": [
        "-y",
        "exa-mcp-server",
        "--tools=get_code_context_exa,web_search_exa,company_research,crawling,linkedin_search,deep_researcher_start,deep_researcher_check"
      ],
      "env": {
        "EXA_API_KEY": "your-api-key-here"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For enabling multiple tools, use a comma-separated list:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "exa": {
      "command": "npx",
      "args": [
        "-y",
        "exa-mcp-server",
        "--tools=get_code_context_exa,web_search_exa,company_research,crawling,linkedin_search,deep_researcher_start,deep_researcher_check"
      ],
      "env": {
        "EXA_API_KEY": "your-api-key-here"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you don't specify any tools, all tools enabled by default will be used.&lt;/p&gt; 
&lt;h3&gt;4. Restart Claude Desktop&lt;/h3&gt; 
&lt;p&gt;For the changes to take effect:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Completely quit Claude Desktop (not just close the window)&lt;/li&gt; 
 &lt;li&gt;Start Claude Desktop again&lt;/li&gt; 
 &lt;li&gt;Look for the icon to verify the Exa server is connected&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Using via NPX&lt;/h2&gt; 
&lt;p&gt;If you prefer to run the server directly, you can use npx:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run with all tools enabled by default
npx exa-mcp-server

# Enable specific tools only
npx exa-mcp-server --tools=web_search_exa

# Enable multiple tools
npx exa-mcp-server --tools=web_search_exa,get_code_context_exa

# List all available tools
npx exa-mcp-server --list-tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;p&gt;Built with ❤️ by team Exa&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DIYgod/RSSHub</title>
      <link>https://github.com/DIYgod/RSSHub</link>
      <description>&lt;p&gt;🧡 Everything is RSSible&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://docs.rsshub.app/img/logo.png" alt="RSSHub" width="100" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;RSSHub&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🧡 Everything is RSSible&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://rsshub.app"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https://rsshub-analytics.diygod.workers.dev/&amp;amp;query=requests&amp;amp;color=F38020&amp;amp;label=requests&amp;amp;logo=cloudflare&amp;amp;style=flat-square&amp;amp;suffix=/month" alt="" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/diygod/rsshub"&gt;&lt;img src="https://img.shields.io/docker/pulls/diygod/rsshub?label=docker%20pulls&amp;amp;logo=docker&amp;amp;style=flat-square" alt="docker publish" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/rsshub"&gt;&lt;img src="https://img.shields.io/npm/dt/rsshub?label=npm%20downloads&amp;amp;logo=npm&amp;amp;style=flat-square" alt="npm publish" /&gt;&lt;/a&gt; &lt;a href="https://github.com/DIYgod/RSSHub/actions/workflows/test.yml?query=event%3Apush+branch%3Amaster"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/DIYgod/RSSHub/test.yml?branch=master&amp;amp;label=test&amp;amp;logo=github&amp;amp;style=flat-square" alt="test" /&gt;&lt;/a&gt; &lt;a href="https://app.codecov.io/gh/DIYgod/RSSHub/branch/master"&gt;&lt;img src="https://img.shields.io/codecov/c/github/DIYgod/RSSHub.svg?style=flat-square&amp;amp;logo=codecov" alt="Test coverage" /&gt;&lt;/a&gt; &lt;a href="https://github.com/DIYgod/RSSHub"&gt;&lt;img src="https://hitscounter.dev/api/hit?url=https%3A%2F%2Fgithub.com%2FDIYgod%2FRSSHub&amp;amp;label=RSS+lovers&amp;amp;icon=rss-fill&amp;amp;color=%23ff752e" alt="Visitors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/rsshub"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.swo.moe%2Fstats%2Ftelegram%2Frsshub&amp;amp;query=count&amp;amp;color=2CA5E0&amp;amp;label=Telegram%20Group&amp;amp;logo=telegram&amp;amp;cacheSeconds=3600&amp;amp;style=flat-square" alt="Telegram group" /&gt;&lt;/a&gt; &lt;a href="https://t.me/awesomeRSSHub"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.swo.moe%2Fstats%2Ftelegram%2FawesomeRSSHub&amp;amp;query=count&amp;amp;color=2CA5E0&amp;amp;label=Telegram%20Channel&amp;amp;logo=telegram&amp;amp;cacheSeconds=3600&amp;amp;style=flat-square" alt="Telegram channel" /&gt;&lt;/a&gt; &lt;a href="https://x.com/intent/follow?screen_name=_RSSHub"&gt;&lt;img src="https://img.shields.io/badge/any_text-Follow-blue?color=2CA5E0&amp;amp;label=Twitter&amp;amp;logo=X&amp;amp;cacheSeconds=3600&amp;amp;style=flat-square" alt="X (Twitter)" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;RSSHub is the world's largest RSS network, consisting of over 5,000 global instances.&lt;/p&gt; 
&lt;p&gt;RSSHub delivers millions of contents aggregated from all kinds of sources, our vibrant open source community is ensuring the deliver of RSSHub's new routes, new features and bug fixes.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://docs.rsshub.app"&gt;Documentation&lt;/a&gt; | &lt;a href="https://t.me/rsshub"&gt;Telegram Group&lt;/a&gt; | &lt;a href="https://t.me/awesomeRSSHub"&gt;Telegram Channel&lt;/a&gt; | &lt;a href="https://x.com/intent/follow?screen_name=_RSSHub"&gt;X (Twitter)&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DIYgod/RSSHub-Radar"&gt;RSSHub Radar&lt;/a&gt; | A browser extension that can help you quickly discover and subscribe to the RSS and RSSHub of current websites.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Cay-Zhang/RSSBud"&gt;RSSBud&lt;/a&gt; | RSSHub Radar for iOS platform, designed specifically for mobile ecosystem optimization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LeetaoGoooo/RSSAid"&gt;RSSAid&lt;/a&gt; | RSSHub Radar for Android platform built with Flutter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Fatpandac/DocSearch"&gt;DocSearch&lt;/a&gt; | Link RSSHub DocSearch into Raycast&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;We welcome all pull requests. Suggestions and feedback are also welcomed &lt;a href="https://github.com/DIYgod/RSSHub/issues"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Refer to &lt;a href="https://docs.rsshub.app/joinus/"&gt;Quick Start&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;Refer to &lt;a href="https://docs.rsshub.app/deploy/"&gt;Deployment&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Special Thanks&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/DIYgod/RSSHub/graphs/contributors"&gt;&lt;img src="https://opencollective.com/RSSHub/contributors.svg?width=890" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Logo designer &lt;a href="https://dribbble.com/sheldonrrr"&gt;sheldonrrr&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/DIYgod/sponsors"&gt;&lt;img src="https://raw.githubusercontent.com/DIYgod/sponsors/main/sponsors.simple.svg?sanitize=true" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://www.cloudflare.com" target="_blank"&gt;&lt;img height="50px" src="https://i.imgur.com/7Ph27Fq.png" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://www.netlify.com" target="_blank"&gt;&lt;img height="40px" src="https://i.imgur.com/cU01915.png" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://1password.com" target="_blank"&gt;&lt;img height="40px" src="https://i.imgur.com/a2XjflO.png" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;RSSHub&lt;/strong&gt; © &lt;a href="https://github.com/DIYgod"&gt;DIYgod&lt;/a&gt;, Released under the &lt;a href="https://raw.githubusercontent.com/DIYgod/RSSHub/master/LICENSE"&gt;MIT&lt;/a&gt; License.&lt;br /&gt; Authored and maintained by DIYgod with help from contributors (&lt;a href="https://github.com/DIYgod/RSSHub/contributors"&gt;list&lt;/a&gt;).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Blog &lt;a href="https://diygod.cc"&gt;@DIYgod&lt;/a&gt; · GitHub &lt;a href="https://github.com/DIYgod"&gt;@DIYgod&lt;/a&gt; · X (Twitter) &lt;a href="https://x.com/DIYgod"&gt;@DIYgod&lt;/a&gt; · Telegram Channel &lt;a href="https://t.me/awesomeDIYgod"&gt;@awesomeDIYgod&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>nanobrowser/nanobrowser</title>
      <link>https://github.com/nanobrowser/nanobrowser</link>
      <description>&lt;p&gt;Open-Source Chrome extension for AI-powered web automation. Run multi-agent workflows using your own LLM API key. Alternative to OpenAI Operator.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;img src="https://github.com/user-attachments/assets/ec60b0c4-87ba-48f4-981a-c55ed0e8497b" height="100" width="375" alt="banner" /&gt;&lt;br /&gt; &lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/nanobrowser"&gt;&lt;img src="https://img.shields.io/badge/GitHub-181717?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="GitHub" /&gt;&lt;/a&gt; &lt;a href="https://x.com/nanobrowser_ai"&gt;&lt;img src="https://img.shields.io/badge/Twitter-000000?style=for-the-badge&amp;amp;logo=x&amp;amp;logoColor=white" alt="Twitter" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/NN3ABHggMK"&gt;&lt;img src="https://img.shields.io/badge/Discord-5865F2?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/nanobrowser/nanobrowser"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" height="28" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/alexchenzl"&gt;&lt;img src="https://img.shields.io/badge/Sponsor-ff69b4?style=for-the-badge&amp;amp;logo=githubsponsors&amp;amp;logoColor=white" alt="Sponsor" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;🌐 Nanobrowser&lt;/h2&gt; 
&lt;p&gt;Nanobrowser is an open-source AI web automation tool that runs in your browser. A free alternative to OpenAI Operator with flexible LLM options and multi-agent system.&lt;/p&gt; 
&lt;p&gt;⬇️ Get &lt;a href="https://chromewebstore.google.com/detail/nanobrowser/imbddededgmcgfhfpcjmijokokekbkal"&gt;Nanobrowser from Chrome Web Store&lt;/a&gt; for free&lt;/p&gt; 
&lt;p&gt;👏 Join the community in &lt;a href="https://discord.gg/NN3ABHggMK"&gt;Discord&lt;/a&gt; | &lt;a href="https://x.com/nanobrowser_ai"&gt;X&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;🌟 Loving Nanobrowser? Give us a star and help spread the word!&lt;/p&gt; 
&lt;p&gt;❤️ Support the project by &lt;a href="https://github.com/sponsors/alexchenzl"&gt;sponsoring us&lt;/a&gt; - every contribution helps keep Nanobrowser free and open source!&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://github.com/user-attachments/assets/112c4385-7b03-4b81-a352-4f348093351b" width="600" alt="Nanobrowser Demo GIF" /&gt; 
 &lt;p&gt;&lt;em&gt;Nanobrowser's multi-agent system analyzing HuggingFace in real-time, with the Planner intelligently self-correcting when encountering obstacles and dynamically instructing the Navigator to adjust its approach—all running locally in your browser.&lt;/em&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;🔥Why Nanobrowser?&lt;/h2&gt; 
&lt;p&gt;Looking for a powerful AI browser agent without the $200/month price tag of OpenAI Operator? &lt;strong&gt;Nanobrowser&lt;/strong&gt; , as a chrome extension, delivers premium web automation capabilities while keeping you in complete control:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;100% Free&lt;/strong&gt; - No subscription fees or hidden costs. Just install and use your own API keys, and you only pay what you use with your own API keys.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy-Focused&lt;/strong&gt; - Everything runs in your local browser. Your credentials stay with you, never shared with any cloud service.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible LLM Options&lt;/strong&gt; - Connect to your preferred LLM providers with the freedom to choose different models for different agents.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fully Open Source&lt;/strong&gt; - Complete transparency in how your browser is automated. No black boxes or hidden processes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We currently support OpenAI, Anthropic, Gemini, Ollama, Groq, Cerebras, Llama and custom OpenAI-Compatible providers, more providers will be supported.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;📊 Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-agent System&lt;/strong&gt;: Specialized AI agents collaborate to accomplish complex web workflows&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Interactive Side Panel&lt;/strong&gt;: Intuitive chat interface with real-time status updates&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Task Automation&lt;/strong&gt;: Seamlessly automate repetitive web automation tasks across websites&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Follow-up Questions&lt;/strong&gt;: Ask contextual follow-up questions about completed tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Conversation History&lt;/strong&gt;: Easily access and manage your AI agent interaction history&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple LLM Support&lt;/strong&gt;: Connect your preferred LLM providers and assign different models to different agents&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🌐 Browser Support&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Officially Supported:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Chrome&lt;/strong&gt; - Full support with all features&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Edge&lt;/strong&gt; - Full support with all features&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Not Supported:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Firefox, Safari, and other Chromium variants (Opera, Arc, etc.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: While Nanobrowser may function on other Chromium-based browsers, we recommend using Chrome or Edge for the best experience and guaranteed compatibility.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Install from Chrome Web Store&lt;/strong&gt; (Stable Version): 
  &lt;ul&gt; 
   &lt;li&gt;Visit the &lt;a href="https://chromewebstore.google.com/detail/nanobrowser/imbddededgmcgfhfpcjmijokokekbkal"&gt;Nanobrowser Chrome Web Store page&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Click "Add to Chrome" button&lt;/li&gt; 
   &lt;li&gt;Confirm the installation when prompted&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Important Note&lt;/strong&gt;: For latest features, install from &lt;a href="https://raw.githubusercontent.com/nanobrowser/nanobrowser/master/#-manually-install-latest-version"&gt;"Manually Install Latest Version"&lt;/a&gt; below, as Chrome Web Store version may be delayed due to review process.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;Configure Agent Models&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Click the Nanobrowser icon in your toolbar to open the sidebar&lt;/li&gt; 
   &lt;li&gt;Click the &lt;code&gt;Settings&lt;/code&gt; icon (top right)&lt;/li&gt; 
   &lt;li&gt;Add your LLM API keys&lt;/li&gt; 
   &lt;li&gt;Choose which model to use for different agents (Navigator, Planner)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;🔧 Manually Install Latest Version&lt;/h2&gt; 
&lt;p&gt;To get the most recent version with all the latest features:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Download the latest &lt;code&gt;nanobrowser.zip&lt;/code&gt; file from the official Github &lt;a href="https://github.com/nanobrowser/nanobrowser/releases"&gt;release page&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Unzip &lt;code&gt;nanobrowser.zip&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Open &lt;code&gt;chrome://extensions/&lt;/code&gt; in Chrome&lt;/li&gt; 
   &lt;li&gt;Enable &lt;code&gt;Developer mode&lt;/code&gt; (top right)&lt;/li&gt; 
   &lt;li&gt;Click &lt;code&gt;Load unpacked&lt;/code&gt; (top left)&lt;/li&gt; 
   &lt;li&gt;Select the unzipped &lt;code&gt;nanobrowser&lt;/code&gt; folder.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Configure Agent Models&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Click the Nanobrowser icon in your toolbar to open the sidebar&lt;/li&gt; 
   &lt;li&gt;Click the &lt;code&gt;Settings&lt;/code&gt; icon (top right).&lt;/li&gt; 
   &lt;li&gt;Add your LLM API keys.&lt;/li&gt; 
   &lt;li&gt;Choose which model to use for different agents (Navigator, Planner)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Upgrading&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Download the latest &lt;code&gt;nanobrowser.zip&lt;/code&gt; file from the release page.&lt;/li&gt; 
   &lt;li&gt;Unzip and replace your existing Nanobrowser files with the new ones.&lt;/li&gt; 
   &lt;li&gt;Go to &lt;code&gt;chrome://extensions/&lt;/code&gt; in Chrome and click the refresh icon on the Nanobrowser card.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;🛠️ Build from Source&lt;/h2&gt; 
&lt;p&gt;If you prefer to build Nanobrowser yourself, follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; (v22.12.0 or higher)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://pnpm.io/installation"&gt;pnpm&lt;/a&gt; (v9.15.1 or higher)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the Repository&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/nanobrowser/nanobrowser.git
cd nanobrowser
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install Dependencies&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pnpm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build the Extension&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pnpm build
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Load the Extension&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;The built extension will be in the &lt;code&gt;dist&lt;/code&gt; directory&lt;/li&gt; 
   &lt;li&gt;Follow the installation steps from the Manually Install section to load the extension into your browser&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Development Mode&lt;/strong&gt; (optional):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pnpm dev
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;🤖 Choosing Your Models&lt;/h2&gt; 
&lt;p&gt;Nanobrowser allows you to configure different LLM models for each agent to balance performance and cost. Here are recommended configurations:&lt;/p&gt; 
&lt;h3&gt;Better Performance&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Planner&lt;/strong&gt;: Claude Sonnet 4 
  &lt;ul&gt; 
   &lt;li&gt;Better reasoning and planning capabilities&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Navigator&lt;/strong&gt;: Claude Haiku 3.5 
  &lt;ul&gt; 
   &lt;li&gt;Efficient for web navigation tasks&lt;/li&gt; 
   &lt;li&gt;Good balance of performance and cost&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Cost-Effective Configuration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Planner&lt;/strong&gt;: Claude Haiku or GPT-4o 
  &lt;ul&gt; 
   &lt;li&gt;Reasonable performance at lower cost&lt;/li&gt; 
   &lt;li&gt;May require more iterations for complex tasks&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Navigator&lt;/strong&gt;: Gemini 2.5 Flash or GPT-4o-mini 
  &lt;ul&gt; 
   &lt;li&gt;Lightweight and cost-efficient&lt;/li&gt; 
   &lt;li&gt;Suitable for basic navigation tasks&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Local Models&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Setup Options&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Use Ollama or other custom OpenAI-compatible providers to run models locally&lt;/li&gt; 
   &lt;li&gt;Zero API costs and complete privacy with no data leaving your machine&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Recommended Models&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Qwen3-30B-A3B-Instruct-2507&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Falcon3 10B&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Qwen 2.5 Coder 14B&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Mistral Small 24B&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://gist.github.com/maximus2600/75d60bf3df62986e2254d5166e2524cb"&gt;Latest test results from community&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;We welcome community experience sharing with other local models in our &lt;a href="https://discord.gg/NN3ABHggMK"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Prompt Engineering&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Local models require more specific and cleaner prompts&lt;/li&gt; 
   &lt;li&gt;Avoid high-level, ambiguous commands&lt;/li&gt; 
   &lt;li&gt;Break complex tasks into clear, detailed steps&lt;/li&gt; 
   &lt;li&gt;Provide explicit context and constraints&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The cost-effective configuration may produce less stable outputs and require more iterations for complex tasks.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: Feel free to experiment with your own model configurations! Found a great combination? Share it with the community in our &lt;a href="https://discord.gg/NN3ABHggMK"&gt;Discord&lt;/a&gt; to help others optimize their setup.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;💡 See It In Action&lt;/h2&gt; 
&lt;p&gt;Here are some powerful tasks you can accomplish with just a sentence:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;News Summary&lt;/strong&gt;:&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;"Go to TechCrunch and extract top 10 headlines from the last 24 hours"&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;GitHub Research&lt;/strong&gt;:&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;"Look for the trending Python repositories on GitHub with most stars"&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Shopping Research&lt;/strong&gt;:&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;"Find a portable Bluetooth speaker on Amazon with a water-resistant design, under $50. It should have a minimum battery life of 10 hours"&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;🛠️ Roadmap&lt;/h2&gt; 
&lt;p&gt;We're actively developing Nanobrowser with exciting features on the horizon, welcome to join us!&lt;/p&gt; 
&lt;p&gt;Check out our detailed roadmap and upcoming features in our &lt;a href="https://github.com/nanobrowser/nanobrowser/discussions/85"&gt;GitHub Discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;We need your help to make Nanobrowser even better!&lt;/strong&gt; Contributions of all kinds are welcome:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Share Prompts &amp;amp; Use Cases&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Join our &lt;a href="https://discord.gg/NN3ABHggMK"&gt;Discord server&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;share how you're using Nanobrowser. Help us build a library of useful prompts and real-world use cases.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Provide Feedback&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Try Nanobrowser and give us feedback on its performance or suggest improvements in our &lt;a href="https://discord.gg/NN3ABHggMK"&gt;Discord server&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contribute Code&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Check out our &lt;a href="https://raw.githubusercontent.com/nanobrowser/nanobrowser/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for guidelines on how to contribute code to the project.&lt;/li&gt; 
   &lt;li&gt;Submit pull requests for bug fixes, features, or documentation improvements.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We believe in the power of open source and community collaboration. Join us in building the future of web automation!&lt;/p&gt; 
&lt;h2&gt;🔒 Security&lt;/h2&gt; 
&lt;p&gt;If you discover a security vulnerability, please &lt;strong&gt;DO NOT&lt;/strong&gt; disclose it publicly through issues, pull requests, or discussions.&lt;/p&gt; 
&lt;p&gt;Instead, please create a &lt;a href="https://github.com/nanobrowser/nanobrowser/security/advisories/new"&gt;GitHub Security Advisory&lt;/a&gt; to report the vulnerability responsibly. This allows us to address the issue before it's publicly disclosed.&lt;/p&gt; 
&lt;p&gt;We appreciate your help in keeping Nanobrowser and its users safe!&lt;/p&gt; 
&lt;h2&gt;💬 Community&lt;/h2&gt; 
&lt;p&gt;Join our growing community of developers and users:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/NN3ABHggMK"&gt;Discord&lt;/a&gt; - Chat with team and community&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/nanobrowser_ai"&gt;Twitter&lt;/a&gt; - Follow for updates and announcements&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nanobrowser/nanobrowser/discussions"&gt;GitHub Discussions&lt;/a&gt; - Share ideas and ask questions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;👏 Acknowledgments&lt;/h2&gt; 
&lt;p&gt;Nanobrowser builds on top of other awesome open-source projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/browser-use/browser-use"&gt;Browser Use&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/EmergenceAI/Agent-E"&gt;Puppeteer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jonghakseo/chrome-extension-boilerplate-react-vite"&gt;Chrome Extension Boilerplate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langchain-ai/langchainjs"&gt;LangChain&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Huge thanks to their creators and contributors!&lt;/p&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the Apache License 2.0 - see the &lt;a href="https://raw.githubusercontent.com/nanobrowser/nanobrowser/master/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;p&gt;Made with ❤️ by the Nanobrowser Team.&lt;/p&gt; 
&lt;p&gt;Like Nanobrowser? Give us a star 🌟 and join us in &lt;a href="https://discord.gg/NN3ABHggMK"&gt;Discord&lt;/a&gt; | &lt;a href="https://x.com/nanobrowser_ai"&gt;X&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;⚠️ DISCLAIMER ON DERIVATIVE PROJECTS&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;We explicitly &lt;em&gt;DO NOT&lt;/em&gt; endorse, support, or participate in any&lt;/strong&gt; projects involving cryptocurrencies, tokens, NFTs, or other blockchain-related applications &lt;strong&gt;based on this codebase.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Any such derivative projects are&amp;nbsp;NOT&amp;nbsp;Affiliated with, or maintained by, or in any way connected to the official Nanobrowser project or its core team.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;We assume NO LIABILITY for any losses, damages, or issues arising from the use of third-party derivative projects. Users interact with these projects at their own risk.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;We reserve the right to publicly distance ourselves from any misuse or misleading use of our name, codebase, or brand.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;We encourage open-source innovation but urge our community to be discerning and cautious. Please ensure you understand the risks before using any software or service built upon our codebase by independent developers.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ThinkInAIXYZ/deepchat</title>
      <link>https://github.com/ThinkInAIXYZ/deepchat</link>
      <description>&lt;p&gt;🐬DeepChat - A smart assistant that connects powerful AI to your personal world&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/build/icon.png" width="150" height="150" alt="DeepChat AI Assistant Icon" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;DeepChat - Powerful Open-Source Multi-Model AI Chat Platform&lt;/h1&gt; 
&lt;p align="center"&gt;DeepChat is a feature-rich open-source AI chat platform supporting multiple cloud and local large language models with powerful search enhancement and tool calling capabilities.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/ThinkInAIXYZ/deepchat" alt="Stars Badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/network/members"&gt;&lt;img src="https://img.shields.io/github/forks/ThinkInAIXYZ/deepchat" alt="Forks Badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/pulls"&gt;&lt;img src="https://img.shields.io/github/issues-pr/ThinkInAIXYZ/deepchat" alt="Pull Requests Badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/issues"&gt;&lt;img src="https://img.shields.io/github/issues/ThinkInAIXYZ/deepchat" alt="Issues Badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/ThinkInAIXYZ/deepchat" alt="License Badge" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/ThinkInAIXYZ/deepchat"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/README.zh.md"&gt;中文&lt;/a&gt; / 
 &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/README.md"&gt;English&lt;/a&gt; / 
 &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/README.jp.md"&gt;日本語&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;📑 Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-table-of-contents"&gt;📑 Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-project-introduction"&gt;🚀 Project Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-why-choose-deepchat"&gt;💡 Why Choose DeepChat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-main-features"&gt;🔥 Main Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-supported-model-providers"&gt;🤖 Supported Model Providers&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#compatible-with-any-model-provider-in-openaigeminianthropic-api-format"&gt;Compatible with any model provider in OpenAI/Gemini/Anthropic API format&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-use-cases"&gt;🔍 Use Cases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-quick-start"&gt;📦 Quick Start&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#download-and-install"&gt;Download and Install&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#configure-models"&gt;Configure Models&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#start-conversations"&gt;Start Conversations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-development-guide"&gt;💻 Development Guide&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#install-dependencies"&gt;Install Dependencies&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#start-development"&gt;Start Development&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#build"&gt;Build&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-community--contribution"&gt;👥 Community &amp;amp; Contribution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-star-history"&gt;⭐ Star History&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-contributors"&gt;👨‍💻 Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-license"&gt;📃 License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Project Introduction&lt;/h2&gt; 
&lt;p&gt;DeepChat is a powerful open-source AI chat platform providing a unified interface for interacting with various large language models. Whether you're using cloud APIs like OpenAI, Gemini, Anthropic, or locally deployed Ollama models, DeepChat delivers a smooth user experience.&lt;/p&gt; 
&lt;p&gt;As a cross-platform AI assistant application, DeepChat not only supports basic chat functionality but also offers advanced features such as search enhancement, tool calling, and multimodal interaction, making AI capabilities more accessible and efficient.&lt;/p&gt; 
&lt;table align="center"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align="center" style="padding: 10px;"&gt; &lt;img src="https://github.com/user-attachments/assets/6e932a65-78e0-4d2e-9654-ccc010f78bf7" alt="DeepChat Light Mode" width="400" /&gt; &lt;br /&gt; &lt;/td&gt; 
   &lt;td align="center" style="padding: 10px;"&gt; &lt;img src="https://github.com/user-attachments/assets/ea6ccf60-32af-4bc1-91cc-e72703bdc1ff" alt="DeepChat Dark Mode" width="400" /&gt; &lt;br /&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;💡 Why Choose DeepChat&lt;/h2&gt; 
&lt;p&gt;Compared to other AI tools, DeepChat offers the following unique advantages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Unified Multi-Model Management&lt;/strong&gt;: One application supports almost all mainstream LLMs, eliminating the need to switch between multiple apps&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Seamless Local Model Integration&lt;/strong&gt;: Built-in Ollama support allows you to manage and use local models without command-line operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced Tool Calling&lt;/strong&gt;: Built-in MCP support enables code execution, web access, and other tools without additional configuration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Powerful Search Enhancement&lt;/strong&gt;: Support for multiple search engines makes AI responses more accurate and timely, providing non-standard web search paradigms that can be quickly customized&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy-Focused&lt;/strong&gt;: Local data storage and network proxy support reduce the risk of information leakage&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Business-Friendly&lt;/strong&gt;: Embraces open source under the Apache License 2.0, suitable for both commercial and personal use&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔥 Main Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🌐 &lt;strong&gt;Multiple Cloud LLM Provider Support&lt;/strong&gt;: DeepSeek, OpenAI, SiliconFlow, Grok, Gemini, Anthropic, and more&lt;/li&gt; 
 &lt;li&gt;🏠 &lt;strong&gt;Local Model Deployment Support&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Integrated Ollama with comprehensive management capabilities&lt;/li&gt; 
   &lt;li&gt;Control and manage Ollama model downloads, deployments, and runs without command-line operations&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🚀 &lt;strong&gt;Rich and Easy-to-Use Chat Capabilities&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Complete Markdown rendering with code block rendering based on industry-leading &lt;a href="https://codemirror.net/"&gt;CodeMirror&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Multi-window + multi-tab architecture supporting parallel multi-session operations across all dimensions, use large models like using a browser, non-blocking experience brings excellent efficiency&lt;/li&gt; 
   &lt;li&gt;Supports Artifacts rendering for diverse result presentation, significantly saving token consumption after MCP integration&lt;/li&gt; 
   &lt;li&gt;Messages support retry to generate multiple variations; conversations can be forked freely, ensuring there's always a suitable line of thought&lt;/li&gt; 
   &lt;li&gt;Supports rendering images, Mermaid diagrams, and other multi-modal content; supports GPT-4o, Gemini, Grok text-to-image capabilities&lt;/li&gt; 
   &lt;li&gt;Supports highlighting external information sources like search results within the content&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🔍 &lt;strong&gt;Robust Search Extension Capabilities&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Built-in integration with leading search APIs like BoSearch, Brave Search via MCP mode, allowing the model to intelligently decide when to search&lt;/li&gt; 
   &lt;li&gt;Supports mainstream search engines like Google, Bing, Baidu, and Sogou Official Accounts search by simulating user web browsing, enabling the LLM to read search engines like a human&lt;/li&gt; 
   &lt;li&gt;Supports reading any search engine; simply configure a search assistant model to connect various search sources, whether internal networks, API-less engines, or vertical domain search engines, as information sources for the model&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🔧 &lt;strong&gt;Excellent MCP (Model Context Protocol) Support&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Complete support for the three core capabilities of Resources/Prompts/Tools in the MCP protocol&lt;/li&gt; 
   &lt;li&gt;Supports semantic workflows, enabling more complex and intelligent automation by understanding the meaning and context of tasks.&lt;/li&gt; 
   &lt;li&gt;Extremely user-friendly configuration interface&lt;/li&gt; 
   &lt;li&gt;Aesthetically pleasing and clear tool call display&lt;/li&gt; 
   &lt;li&gt;Detailed tool call debugging window with automatic formatting of tool parameters and return data&lt;/li&gt; 
   &lt;li&gt;Built-in Node.js runtime environment; npx/node-like services require no extra configuration and work out-of-the-box&lt;/li&gt; 
   &lt;li&gt;Supports StreamableHTTP/SSE/Stdio protocol Transports&lt;/li&gt; 
   &lt;li&gt;Supports inMemory services with built-in utilities like code execution, web information retrieval, and file operations; ready for most common use cases out-of-the-box without secondary installation&lt;/li&gt; 
   &lt;li&gt;Converts visual model capabilities into universally usable functions for any model via the built-in MCP service&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;💻 &lt;strong&gt;Multi-Platform Support&lt;/strong&gt;: Windows, macOS, Linux&lt;/li&gt; 
 &lt;li&gt;🎨 &lt;strong&gt;Beautiful and User-Friendly Interface&lt;/strong&gt;, user-oriented design, meticulously themed light and dark modes&lt;/li&gt; 
 &lt;li&gt;🔗 &lt;strong&gt;Rich DeepLink Support&lt;/strong&gt;: Initiate conversations via links for seamless integration with other applications. Also supports one-click installation of MCP services for simplicity and speed&lt;/li&gt; 
 &lt;li&gt;🚑 &lt;strong&gt;Security-First Design&lt;/strong&gt;: Chat data and configuration data have reserved encryption interfaces and code obfuscation capabilities&lt;/li&gt; 
 &lt;li&gt;🛡️ &lt;strong&gt;Privacy Protection&lt;/strong&gt;: Supports screen projection hiding, network proxies, and other privacy protection methods to reduce the risk of information leakage&lt;/li&gt; 
 &lt;li&gt;💰 &lt;strong&gt;Business-Friendly&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Embraces open source, based on the Apache License 2.0 protocol, enterprise use without worry&lt;/li&gt; 
   &lt;li&gt;Enterprise integration requires only minimal configuration code changes to use reserved encrypted obfuscation security capabilities&lt;/li&gt; 
   &lt;li&gt;Clear code structure, both model providers and MCP services are highly decoupled, can be freely customized with minimal cost&lt;/li&gt; 
   &lt;li&gt;Reasonable architecture, data interaction and UI behavior separation, fully utilizing Electron's capabilities, rejecting simple web wrappers, excellent performance&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more details on how to use these features, see the &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/docs/user-guide.md"&gt;User Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🤖 Supported Model Providers&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr align="center"&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/ollama.svg?sanitize=true" width="50" height="50" alt="Ollama Icon" /&gt;&lt;br /&gt; &lt;a href="https://ollama.com"&gt;Ollama&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/deepseek-color.svg?sanitize=true" width="50" height="50" alt="Deepseek Icon" /&gt;&lt;br /&gt; &lt;a href="https://deepseek.com/"&gt;Deepseek&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/ppio-color.svg?sanitize=true" width="50" height="50" alt="PPIO Icon" /&gt;&lt;br /&gt; &lt;a href="https://ppinfra.com/"&gt;PPIO&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/alibabacloud-color.svg?sanitize=true" width="50" height="50" alt="DashScope Icon" /&gt;&lt;br /&gt; &lt;a href="https://www.aliyun.com/product/bailian"&gt;DashScope&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr align="center"&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/doubao-color.svg?sanitize=true" width="50" height="50" alt="Doubao Icon" /&gt;&lt;br /&gt; &lt;a href="https://console.volcengine.com/ark/"&gt;Doubao&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/minimax-color.svg?sanitize=true" width="50" height="50" alt="MiniMax Icon" /&gt;&lt;br /&gt; &lt;a href="https://platform.minimaxi.com/"&gt;MiniMax&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/fireworks-color.svg?sanitize=true" width="50" height="50" alt="Fireworks Icon" /&gt;&lt;br /&gt; &lt;a href="https://fireworks.ai/"&gt;Fireworks&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/302ai.svg?sanitize=true" width="50" height="50" alt="302.AI Icon" /&gt;&lt;br /&gt; &lt;a href="https://302.ai/"&gt;302.AI&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr align="center"&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/openai.svg?sanitize=true" width="50" height="50" alt="OpenAI Icon" /&gt;&lt;br /&gt; &lt;a href="https://openai.com/"&gt;OpenAI&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/gemini-color.svg?sanitize=true" width="50" height="50" alt="Gemini Icon" /&gt;&lt;br /&gt; &lt;a href="https://gemini.google.com/"&gt;Gemini&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/github.svg?sanitize=true" width="50" height="50" alt="GitHub Models Icon" /&gt;&lt;br /&gt; &lt;a href="https://github.com/marketplace/models"&gt;GitHub Models&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/moonshot.svg?sanitize=true" width="50" height="50" alt="Moonshot Icon" /&gt;&lt;br /&gt; &lt;a href="https://moonshot.ai/"&gt;Moonshot&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr align="center"&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/openrouter.svg?sanitize=true" width="50" height="50" alt="OpenRouter Icon" /&gt;&lt;br /&gt; &lt;a href="https://openrouter.ai/"&gt;OpenRouter&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/azure-color.svg?sanitize=true" width="50" height="50" alt="Azure OpenAI Icon" /&gt;&lt;br /&gt; &lt;a href="https://azure.microsoft.com/en-us/products/ai-services/openai-service"&gt;Azure OpenAI&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/qiniu.svg?sanitize=true" width="50" height="50" alt="Qiniu Icon" /&gt;&lt;br /&gt; &lt;a href="https://www.qiniu.com/products/ai-token-api"&gt;Qiniu&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/grok.svg?sanitize=true" width="50" height="50" alt="Grok Icon" /&gt;&lt;br /&gt; &lt;a href="https://x.ai/"&gt;Grok&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr align="center"&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/zhipu-color.svg?sanitize=true" width="50" height="50" alt="Zhipu Icon" /&gt;&lt;br /&gt; &lt;a href="https://open.bigmodel.cn/"&gt;Zhipu&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/siliconcloud.svg?sanitize=true" width="50" height="50" alt="SiliconFlow Icon" /&gt;&lt;br /&gt; &lt;a href="https://www.siliconflow.cn/"&gt;SiliconFlow&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/aihubmix.png" width="50" height="50" alt="AIHubMix Icon" /&gt;&lt;br /&gt; &lt;a href="https://aihubmix.com/"&gt;AIHubMix&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/hunyuan-color.svg?sanitize=true" width="50" height="50" alt="Hunyuan Icon" /&gt;&lt;br /&gt; &lt;a href="https://cloud.tencent.com/product/hunyuan"&gt;Hunyuan&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr align="center"&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/lmstudio.svg?sanitize=true" width="50" height="50" alt="LM Studio Icon" /&gt;&lt;br /&gt; &lt;a href="https://lmstudio.ai/"&gt;LM Studio&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/groq.svg?sanitize=true" width="50" height="50" alt="Groq Icon" /&gt;&lt;br /&gt; &lt;a href="https://groq.com/"&gt;Groq&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Compatible with any model provider in OpenAI/Gemini/Anthropic API format&lt;/h3&gt; 
&lt;h2&gt;🔍 Use Cases&lt;/h2&gt; 
&lt;p&gt;DeepChat is suitable for various AI application scenarios:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Daily Assistant&lt;/strong&gt;: Answering questions, providing suggestions, assisting with writing and creation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Development Aid&lt;/strong&gt;: Code generation, debugging, technical problem solving&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Learning Tool&lt;/strong&gt;: Concept explanation, knowledge exploration, learning guidance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Content Creation&lt;/strong&gt;: Copywriting, creative inspiration, content optimization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data Analysis&lt;/strong&gt;: Data interpretation, chart generation, report writing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📦 Quick Start&lt;/h2&gt; 
&lt;h3&gt;Download and Install&lt;/h3&gt; 
&lt;p&gt;Download the latest version for your system from the &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/releases"&gt;GitHub Releases&lt;/a&gt; page:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows: &lt;code&gt;.exe&lt;/code&gt; installation file&lt;/li&gt; 
 &lt;li&gt;macOS: &lt;code&gt;.dmg&lt;/code&gt; installation file&lt;/li&gt; 
 &lt;li&gt;Linux: &lt;code&gt;.AppImage&lt;/code&gt; or &lt;code&gt;.deb&lt;/code&gt; installation file&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configure Models&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Launch the DeepChat application&lt;/li&gt; 
 &lt;li&gt;Click the settings icon&lt;/li&gt; 
 &lt;li&gt;Select the "Model Providers" tab&lt;/li&gt; 
 &lt;li&gt;Add your API keys or configure local Ollama&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Start Conversations&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Click the "+" button to create a new conversation&lt;/li&gt; 
 &lt;li&gt;Select the model you want to use&lt;/li&gt; 
 &lt;li&gt;Start communicating with your AI assistant&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For a comprehensive guide on getting started and using all features, please refer to the &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/docs/user-guide.md"&gt;User Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💻 Development Guide&lt;/h2&gt; 
&lt;p&gt;Please read the &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Windows and Linux are packaged by GitHub Action. For Mac-related signing and packaging, please refer to the &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/wiki/Mac-Release-Guide"&gt;Mac Release Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Install Dependencies&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ pnpm install
$ pnpm run installRuntime
# if got err: No module named 'distutils'
$ pip install setuptools
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;For Windows: To allow non-admin users to create symlinks and hardlinks, enable &lt;code&gt;Developer Mode&lt;/code&gt; in Settings or use an administrator account. Otherwise &lt;code&gt;pnpm&lt;/code&gt; ops will fail.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Start Development&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ pnpm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# For Windows
$ pnpm run build:win

# For macOS
$ pnpm run build:mac

# For Linux
$ pnpm run build:linux

# Specify architecture packaging
$ pnpm run build:win:x64
$ pnpm run build:win:arm64
$ pnpm run build:mac:x64
$ pnpm run build:mac:arm64
$ pnpm run build:linux:x64
$ pnpm run build:linux:arm64
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For a more detailed guide on development, project structure, and architecture, please see the &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/docs/developer-guide.md"&gt;Developer Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;👥 Community &amp;amp; Contribution&lt;/h2&gt; 
&lt;p&gt;DeepChat is an active open-source community project, and we welcome various forms of contribution:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/issues"&gt;Report issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💡 &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/issues"&gt;Submit feature suggestions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔧 &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/pulls"&gt;Submit code improvements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📚 &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/wiki"&gt;Improve documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🌍 &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/tree/main/locales"&gt;Help with translation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check the &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; to learn more about ways to participate in the project.&lt;/p&gt; 
&lt;h2&gt;⭐ Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#ThinkInAIXYZ/deepchat&amp;amp;Timeline"&gt;&lt;img src="https://api.star-history.com/svg?repos=ThinkInAIXYZ/deepchat&amp;amp;type=Timeline" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;👨‍💻 Contributors&lt;/h2&gt; 
&lt;p&gt;Thank you for considering contributing to deepchat! The contribution guide can be found in the &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://openomy.com/thinkinaixyz/deepchat" target="_blank" style="display: block; width: 100%;" align="center"&gt; &lt;img src="https://openomy.com/svg?repo=thinkinaixyz/deepchat&amp;amp;chart=bubble&amp;amp;latestMonth=3" target="_blank" alt="Contribution Leaderboard" style="display: block; width: 100%;" /&gt; &lt;/a&gt; 
&lt;h2&gt;🙏🏻 Thanks&lt;/h2&gt; 
&lt;p&gt;This project is built with the help of these awesome libraries:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.electronjs.org/"&gt;Electron&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://electron-vite.org/"&gt;Electron-Vite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oxc-project/oxc"&gt;oxlint&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📃 License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>supermemoryai/supermemory</title>
      <link>https://github.com/supermemoryai/supermemory</link>
      <description>&lt;p&gt;Memory engine and app that is extremely fast, scalable. The Memory API for the AI era.&lt;/p&gt;&lt;hr&gt;&lt;div align="center" style="padding-bottom:20px;padding-top:20px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/logo.svg?sanitize=true" alt="supermemory Logo" width="400" /&gt; 
&lt;/div&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/landing-page.jpeg" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Core Functionality&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#add-memory"&gt;Add Memories from Any Content&lt;/a&gt;&lt;/strong&gt;: Easily add memories from URLs, PDFs, and plain text—just paste, upload, or link.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#chat-memories"&gt;Chat with Your Memories&lt;/a&gt;&lt;/strong&gt;: Converse with your stored content using natural language chat.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#mcp-integration"&gt;Supermemory MCP Integration&lt;/a&gt;&lt;/strong&gt;: Seamlessly connect with all major AI tools (Claude, Cursor, etc.) via Supermemory MCP.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How do i use this?&lt;/h2&gt; 
&lt;p&gt;Go to &lt;a href="https://app.supermemory.ai"&gt;app.supermemory.ai&lt;/a&gt; and sign into with your account&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a id="add-memory"&gt;&lt;/a&gt;Start Adding Memory with your choice of format (Note, Link, File)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/add-memory.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;You can also Connect to your favourite services (Notion, Google Drive, OneDrive)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/add-connections.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;a id="chat-memories"&gt;&lt;/a&gt;Once Memories are added, you can chat with Supermemory by clicking on "Open Chat" and retrieve info from your saved memories&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/chat.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;&lt;a id="mcp-integration"&gt;&lt;/a&gt;Add MCP to your AI Tools (by clicking on "Connect to your AI" and select the AI tool you are trying to integrate)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/mcp.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Have questions or feedback? We're here to help:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Email: &lt;a href="mailto:dhravya@supermemory.com"&gt;dhravya@supermemory.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://docs.supermemory.ai"&gt;docs.supermemory.ai&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from developers of all skill levels! Whether you're fixing bugs, adding features, or improving documentation, your help makes supermemory better for everyone.&lt;/p&gt; 
&lt;h3&gt;Quick Start for Contributors&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork and clone&lt;/strong&gt; the repository&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt; with &lt;code&gt;bun install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Set up your environment&lt;/strong&gt; by copying &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env.local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Start developing&lt;/strong&gt; with &lt;code&gt;bun run dev&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For detailed guidelines, development setup, coding standards, and the complete contribution workflow, please see our &lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/CONTRIBUTING.md"&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Ways to Contribute&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 &lt;strong&gt;Bug fixes&lt;/strong&gt; - Help us squash those pesky issues&lt;/li&gt; 
 &lt;li&gt;✨ &lt;strong&gt;New features&lt;/strong&gt; - Add functionality that users will love&lt;/li&gt; 
 &lt;li&gt;🎨 &lt;strong&gt;UI/UX improvements&lt;/strong&gt; - Make the interface more intuitive&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Performance optimizations&lt;/strong&gt; - Help us make supermemory faster&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out our &lt;a href="https://github.com/supermemoryai/supermemory/issues"&gt;Issues&lt;/a&gt; page for &lt;code&gt;good first issue&lt;/code&gt; and &lt;code&gt;help wanted&lt;/code&gt; labels to get started!&lt;/p&gt; 
&lt;h2&gt;Updates &amp;amp; Roadmap&lt;/h2&gt; 
&lt;p&gt;Stay up to date with the latest improvements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.supermemory.ai/changelog/overview"&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/supermemoryai"&gt;X&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>EvolutionAPI/evolution-api</title>
      <link>https://github.com/EvolutionAPI/evolution-api</link>
      <description>&lt;p&gt;Evolution API is an open-source WhatsApp integration API&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;Evolution Api&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://hub.docker.com/r/evoapicloud/evolution-api"&gt;&lt;img src="https://img.shields.io/badge/Docker-image-blue" alt="Docker Image" /&gt;&lt;/a&gt; &lt;a href="https://evolution-api.com/whatsapp"&gt;&lt;img src="https://img.shields.io/badge/Group-WhatsApp-%2322BC18" alt="Whatsapp Group" /&gt;&lt;/a&gt; &lt;a href="https://evolution-api.com/discord"&gt;&lt;img src="https://img.shields.io/badge/Discord-Community-blue" alt="Discord Community" /&gt;&lt;/a&gt; &lt;a href="https://evolution-api.com/postman"&gt;&lt;img src="https://img.shields.io/badge/Postman-Collection-orange" alt="Postman Collection" /&gt;&lt;/a&gt; &lt;a href="https://doc.evolution-api.com"&gt;&lt;img src="https://img.shields.io/badge/Documentation-Official-green" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://evolutionapi.canny.io/feature-requests"&gt;&lt;img src="https://img.shields.io/badge/Feature-Requests-purple" alt="Feature Requests" /&gt;&lt;/a&gt; &lt;a href="https://evolutionapi.canny.io/feature-requests"&gt;&lt;img src="https://img.shields.io/badge/Roadmap-Community-blue" alt="Roadmap" /&gt;&lt;/a&gt; &lt;a href="https://evolutionapi.canny.io/changelog"&gt;&lt;img src="https://img.shields.io/badge/Changelog-Updates-green" alt="Changelog" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-Apache--2.0-blue" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://app.picpay.com/user/davidsongomes1998"&gt;&lt;img src="https://img.shields.io/badge/Donation-picpay-green" alt="Support" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/EvolutionAPI"&gt;&lt;img src="https://img.shields.io/badge/Github-sponsor-orange" alt="Sponsors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt;
 &lt;img src="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/public/images/cover.png" /&gt;
&lt;/div&gt; 
&lt;h2&gt;Evolution API&lt;/h2&gt; 
&lt;p&gt;Evolution API began as a WhatsApp controller API based on &lt;a href="https://github.com/code-chat-br/whatsapp-api"&gt;CodeChat&lt;/a&gt;, which in turn implemented the &lt;a href="https://github.com/WhiskeySockets/Baileys"&gt;Baileys&lt;/a&gt; library. While originally focused on WhatsApp, Evolution API has grown into a comprehensive platform supporting multiple messaging services and integrations. We continue to acknowledge CodeChat for laying the groundwork.&lt;/p&gt; 
&lt;p&gt;Today, Evolution API is not limited to WhatsApp. It integrates with various platforms such as Typebot, Chatwoot, Dify, and OpenAI, offering a broad array of functionalities beyond messaging. Evolution API supports both the Baileys-based WhatsApp API and the official WhatsApp Business API, with upcoming support for Instagram and Messenger.&lt;/p&gt; 
&lt;h2&gt;Looking for a Lightweight Version?&lt;/h2&gt; 
&lt;p&gt;For those who need a more streamlined and performance-optimized version, check out &lt;a href="https://github.com/EvolutionAPI/evolution-api-lite"&gt;Evolution API Lite&lt;/a&gt;. It's designed specifically for microservices, focusing solely on connectivity without integrations or audio conversion features. Ideal for environments that prioritize simplicity and efficiency.&lt;/p&gt; 
&lt;h2&gt;Types of Connections&lt;/h2&gt; 
&lt;p&gt;Evolution API supports multiple types of connections to WhatsApp, enabling flexible and powerful integration options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;WhatsApp API - Baileys&lt;/em&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;A free API based on WhatsApp Web, leveraging the &lt;a href="https://github.com/WhiskeySockets/Baileys"&gt;Baileys library&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;This connection type allows control over WhatsApp Web functionalities through a RESTful API, suitable for multi-service chats, service bots, and other WhatsApp-integrated systems.&lt;/li&gt; 
   &lt;li&gt;Note: This method relies on the web version of WhatsApp and may have limitations compared to official APIs.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;WhatsApp Cloud API&lt;/em&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;The official API provided by Meta (formerly Facebook).&lt;/li&gt; 
   &lt;li&gt;This connection type offers a robust and reliable solution designed for businesses needing higher volumes of messaging and better integration support.&lt;/li&gt; 
   &lt;li&gt;The Cloud API supports features such as end-to-end encryption, advanced analytics, and more comprehensive customer service tools.&lt;/li&gt; 
   &lt;li&gt;To use this API, you must comply with Meta's policies and potentially pay for usage based on message volume and other factors.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Integrations&lt;/h2&gt; 
&lt;p&gt;Evolution API supports various integrations to enhance its functionality. Below is a list of available integrations and their uses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://typebot.io/"&gt;Typebot&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Build conversational bots using Typebot, integrated directly into Evolution with trigger management.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.chatwoot.com/"&gt;Chatwoot&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Direct integration with Chatwoot for handling customer service for your business.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.rabbitmq.com/"&gt;RabbitMQ&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Receive events from the Evolution API via RabbitMQ.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://kafka.apache.org/"&gt;Apache Kafka&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Receive events from the Evolution API via Apache Kafka for real-time event streaming and processing.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://aws.amazon.com/pt/sqs/"&gt;Amazon SQS&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Receive events from the Evolution API via Amazon SQS.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://socket.io/"&gt;Socket.io&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Receive events from the Evolution API via WebSocket.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://dify.ai/"&gt;Dify&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Integrate your Evolution API directly with Dify AI for seamless trigger management and multiple agents.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://openai.com/"&gt;OpenAI&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Integrate your Evolution API with OpenAI for AI capabilities, including audio-to-text conversion, available across all Evolution integrations.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Amazon S3 / Minio:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Store media files received in &lt;a href="https://aws.amazon.com/pt/s3/"&gt;Amazon S3&lt;/a&gt; or &lt;a href="https://min.io/"&gt;Minio&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community &amp;amp; Feedback&lt;/h2&gt; 
&lt;p&gt;We value community input and feedback to continuously improve Evolution API:&lt;/p&gt; 
&lt;h3&gt;🚀 Feature Requests &amp;amp; Roadmap&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://evolutionapi.canny.io/feature-requests"&gt;Feature Requests&lt;/a&gt;&lt;/strong&gt;: Submit new feature ideas and vote on community proposals&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://evolutionapi.canny.io/feature-requests"&gt;Roadmap&lt;/a&gt;&lt;/strong&gt;: View planned features and development progress&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://evolutionapi.canny.io/changelog"&gt;Changelog&lt;/a&gt;&lt;/strong&gt;: Stay updated with the latest releases and improvements&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💬 Community Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://evolution-api.com/whatsapp"&gt;WhatsApp Group&lt;/a&gt;&lt;/strong&gt;: Join our community for support and discussions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://evolution-api.com/discord"&gt;Discord Community&lt;/a&gt;&lt;/strong&gt;: Real-time chat with developers and users&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/EvolutionAPI/evolution-api/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/strong&gt;: Report bugs and technical issues&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔒 Security&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/SECURITY.md"&gt;Security Policy&lt;/a&gt;&lt;/strong&gt;: Guidelines for reporting security vulnerabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security Contact&lt;/strong&gt;: &lt;a href="mailto:contato@evolution-api.com"&gt;contato@evolution-api.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Telemetry Notice&lt;/h2&gt; 
&lt;p&gt;To continuously improve our services, we have implemented telemetry that collects data on the routes used, the most accessed routes, and the version of the API in use. We would like to assure you that no sensitive or personal data is collected during this process. The telemetry helps us identify improvements and provide a better experience for users.&lt;/p&gt; 
&lt;h2&gt;Evolution Support Premium&lt;/h2&gt; 
&lt;p&gt;Join our Evolution Pro community for expert support and a weekly call to answer questions. Visit the link below to learn more and subscribe:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://evolution-api.com/suporte-pro"&gt;Click here to learn more&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Donate to the project.&lt;/h1&gt; 
&lt;h4&gt;Github Sponsors&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/EvolutionAPI"&gt;https://github.com/sponsors/EvolutionAPI&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Content Creator Partners&lt;/h1&gt; 
&lt;p&gt;We are proud to collaborate with the following content creators who have contributed valuable insights and tutorials about Evolution API:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@promovaweb"&gt;Promovaweb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@canalsandeco"&gt;Sandeco&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@ComunidadeZDG"&gt;Comunidade ZDG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@FrancisMNO"&gt;Francis MNO&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/@pablocabral"&gt;Pablo Cabral&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@xpopdigital"&gt;XPop Digital&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@costarwagnerdev"&gt;Costar Wagner Dev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/@dantetesta_"&gt;Dante Testa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/channel/UCnYGZIE2riiLqaN9sI6riig"&gt;Rubén Salazar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/youtube.com/OrionDesign_Oficial"&gt;OrionDesign&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/youtube.com/@impa365_ofc"&gt;IMPA 365&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/@comunidadehubconnect"&gt;Comunidade Hub Connect&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCG7DjUmAxtYyURlOGAIryNQ?view_as=subscriber"&gt;dSantana Automações&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@edisonmartinsmkt"&gt;Edison Martins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@astraonlineweb"&gt;Astra Online&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@sevenautomacoes"&gt;MKT Seven Automações&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/vamosautomatizar"&gt;Vamos automatizar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Evolution API is licensed under the Apache License 2.0, with the following additional conditions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;LOGO and copyright information&lt;/strong&gt;: In the process of using Evolution API's frontend components, you may not remove or modify the LOGO or copyright information in the Evolution API console or applications. This restriction is inapplicable to uses of Evolution API that do not involve its frontend components.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Usage Notification Requirement&lt;/strong&gt;: If Evolution API is used as part of any project, including closed-source systems (e.g., proprietary software), the user is required to display a clear notification within the system that Evolution API is being utilized. This notification should be visible to system administrators and accessible from the system's documentation or settings page. Failure to comply with this requirement may result in the necessity for a commercial license, as determined by the producer.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Please contact &lt;a href="mailto:contato@evolution-api.com"&gt;contato@evolution-api.com&lt;/a&gt; to inquire about licensing matters.&lt;/p&gt; 
&lt;p&gt;Apart from the specific conditions mentioned above, all other rights and restrictions follow the Apache License 2.0. Detailed information about the Apache License 2.0 can be found at &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;© 2025 Evolution API&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>