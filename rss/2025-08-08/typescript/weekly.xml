<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Weekly Trending</title>
    <description>Weekly Trending of TypeScript in GitHub</description>
    <pubDate>Thu, 07 Aug 2025 01:48:46 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>dyad-sh/dyad</title>
      <link>https://github.com/dyad-sh/dyad</link>
      <description>&lt;p&gt;Free, local, open-source AI app builder ‚ú® v0 / lovable / Bolt alternative üåü Star if you like it!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dyad&lt;/h1&gt; 
&lt;p&gt;Dyad is a local, open-source AI app builder. It's fast, private, and fully under your control ‚Äî like Lovable, v0, or Bolt, but running right on your machine.&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://dyad.sh/"&gt;&lt;img src="https://github.com/user-attachments/assets/f6c83dfc-6ffd-4d32-93dd-4b9c46d17790" alt="Image"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;More info at: &lt;a href="http://dyad.sh/"&gt;http://dyad.sh/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üöÄ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚ö°Ô∏è &lt;strong&gt;Local&lt;/strong&gt;: Fast, private and no lock-in.&lt;/li&gt; 
 &lt;li&gt;üõ† &lt;strong&gt;Bring your own keys&lt;/strong&gt;: Use your own AI API keys ‚Äî no vendor lock-in.&lt;/li&gt; 
 &lt;li&gt;üñ•Ô∏è &lt;strong&gt;Cross-platform&lt;/strong&gt;: Easy to run on Mac or Windows.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üì¶ Download&lt;/h2&gt; 
&lt;p&gt;No sign-up required. Just download and go.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://www.dyad.sh/#download"&gt;üëâ Download for your platform&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Dyad&lt;/strong&gt; is open-source (Apache 2.0 licensed).&lt;/p&gt; 
&lt;p&gt;If you're interested in contributing to dyad, please read our &lt;a href="https://raw.githubusercontent.com/dyad-sh/dyad/main/CONTRIBUTING.md"&gt;contributing&lt;/a&gt; doc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>musistudio/claude-code-router</title>
      <link>https://github.com/musistudio/claude-code-router</link>
      <description>&lt;p&gt;Use Claude Code as the foundation for coding infrastructure, allowing you to decide how to interact with the model while enjoying updates from Anthropic.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Claude Code Router&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/musistudio/claude-code-router/main/README_zh.md"&gt;‰∏≠ÊñáÁâà&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A powerful tool to route Claude Code requests to different models and customize any request.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/images/claude-code.png" alt=""&gt;&lt;/p&gt; 
&lt;h2&gt;‚ú® Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Model Routing&lt;/strong&gt;: Route requests to different models based on your needs (e.g., background tasks, thinking, long context).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Provider Support&lt;/strong&gt;: Supports various model providers like OpenRouter, DeepSeek, Ollama, Gemini, Volcengine, and SiliconFlow.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Request/Response Transformation&lt;/strong&gt;: Customize requests and responses for different providers using transformers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Model Switching&lt;/strong&gt;: Switch models on-the-fly within Claude Code using the &lt;code&gt;/model&lt;/code&gt; command.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Actions Integration&lt;/strong&gt;: Trigger Claude Code tasks in your GitHub workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt;: Extend functionality with custom transformers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üöÄ Getting Started&lt;/h2&gt; 
&lt;h3&gt;1. Installation&lt;/h3&gt; 
&lt;p&gt;First, ensure you have &lt;a href="https://docs.anthropic.com/en/docs/claude-code/quickstart"&gt;Claude Code&lt;/a&gt; installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm install -g @anthropic-ai/claude-code
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, install Claude Code Router:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm install -g @musistudio/claude-code-router
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. Configuration&lt;/h3&gt; 
&lt;p&gt;Create and configure your &lt;code&gt;~/.claude-code-router/config.json&lt;/code&gt; file. For more details, you can refer to &lt;code&gt;config.example.json&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;config.json&lt;/code&gt; file has several key sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;PROXY_URL&lt;/code&gt;&lt;/strong&gt; (optional): You can set a proxy for API requests, for example: &lt;code&gt;"PROXY_URL": "http://127.0.0.1:7890"&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;LOG&lt;/code&gt;&lt;/strong&gt; (optional): You can enable logging by setting it to &lt;code&gt;true&lt;/code&gt;. The log file will be located at &lt;code&gt;$HOME/.claude-code-router.log&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;APIKEY&lt;/code&gt;&lt;/strong&gt; (optional): You can set a secret key to authenticate requests. When set, clients must provide this key in the &lt;code&gt;Authorization&lt;/code&gt; header (e.g., &lt;code&gt;Bearer your-secret-key&lt;/code&gt;) or the &lt;code&gt;x-api-key&lt;/code&gt; header. Example: &lt;code&gt;"APIKEY": "your-secret-key"&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/strong&gt; (optional): You can set the host address for the server. If &lt;code&gt;APIKEY&lt;/code&gt; is not set, the host will be forced to &lt;code&gt;127.0.0.1&lt;/code&gt; for security reasons to prevent unauthorized access. Example: &lt;code&gt;"HOST": "0.0.0.0"&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;NON_INTERACTIVE_MODE&lt;/code&gt;&lt;/strong&gt; (optional): When set to &lt;code&gt;true&lt;/code&gt;, enables compatibility with non-interactive environments like GitHub Actions, Docker containers, or other CI/CD systems. This sets appropriate environment variables (&lt;code&gt;CI=true&lt;/code&gt;, &lt;code&gt;FORCE_COLOR=0&lt;/code&gt;, etc.) and configures stdin handling to prevent the process from hanging in automated environments. Example: &lt;code&gt;"NON_INTERACTIVE_MODE": true&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;Providers&lt;/code&gt;&lt;/strong&gt;: Used to configure different model providers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;Router&lt;/code&gt;&lt;/strong&gt;: Used to set up routing rules. &lt;code&gt;default&lt;/code&gt; specifies the default model, which will be used for all requests if no other route is configured.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;API_TIMEOUT_MS&lt;/code&gt;&lt;/strong&gt;: Specifies the timeout for API calls in milliseconds.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Here is a comprehensive example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "APIKEY": "your-secret-key",
  "PROXY_URL": "http://127.0.0.1:7890",
  "LOG": true,
  "API_TIMEOUT_MS": 600000,
  "NON_INTERACTIVE_MODE": false,
  "Providers": [
    {
      "name": "openrouter",
      "api_base_url": "https://openrouter.ai/api/v1/chat/completions",
      "api_key": "sk-xxx",
      "models": [
        "google/gemini-2.5-pro-preview",
        "anthropic/claude-sonnet-4",
        "anthropic/claude-3.5-sonnet",
        "anthropic/claude-3.7-sonnet:thinking"
      ],
      "transformer": {
        "use": ["openrouter"]
      }
    },
    {
      "name": "deepseek",
      "api_base_url": "https://api.deepseek.com/chat/completions",
      "api_key": "sk-xxx",
      "models": ["deepseek-chat", "deepseek-reasoner"],
      "transformer": {
        "use": ["deepseek"],
        "deepseek-chat": {
          "use": ["tooluse"]
        }
      }
    },
    {
      "name": "ollama",
      "api_base_url": "http://localhost:11434/v1/chat/completions",
      "api_key": "ollama",
      "models": ["qwen2.5-coder:latest"]
    },
    {
      "name": "gemini",
      "api_base_url": "https://generativelanguage.googleapis.com/v1beta/models/",
      "api_key": "sk-xxx",
      "models": ["gemini-2.5-flash", "gemini-2.5-pro"],
      "transformer": {
        "use": ["gemini"]
      }
    },
    {
      "name": "volcengine",
      "api_base_url": "https://ark.cn-beijing.volces.com/api/v3/chat/completions",
      "api_key": "sk-xxx",
      "models": ["deepseek-v3-250324", "deepseek-r1-250528"],
      "transformer": {
        "use": ["deepseek"]
      }
    },
    {
      "name": "modelscope",
      "api_base_url": "https://api-inference.modelscope.cn/v1/chat/completions",
      "api_key": "",
      "models": ["Qwen/Qwen3-Coder-480B-A35B-Instruct", "Qwen/Qwen3-235B-A22B-Thinking-2507"],
      "transformer": {
        "use": [
          [
            "maxtoken",
            {
              "max_tokens": 65536
            }
          ],
          "enhancetool"
        ],
        "Qwen/Qwen3-235B-A22B-Thinking-2507": {
          "use": ["reasoning"]
        }
      }
    },
    {
      "name": "dashscope",
      "api_base_url": "https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions",
      "api_key": "",
      "models": ["qwen3-coder-plus"],
      "transformer": {
        "use": [
          [
            "maxtoken",
            {
              "max_tokens": 65536
            }
          ],
          "enhancetool"
        ]
      }
    },
    {
      "name": "aihubmix",
      "api_base_url": "https://aihubmix.com/v1/chat/completions",
      "api_key": "sk-",
      "models": [
        "Z/glm-4.5",
        "claude-opus-4-20250514",
        "gemini-2.5-pro"
      ]
    }
  ],
  "Router": {
    "default": "deepseek,deepseek-chat",
    "background": "ollama,qwen2.5-coder:latest",
    "think": "deepseek,deepseek-reasoner",
    "longContext": "openrouter,google/gemini-2.5-pro-preview",
    "longContextThreshold": 60000,
    "webSearch": "gemini,gemini-2.5-flash"
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3. Running Claude Code with the Router&lt;/h3&gt; 
&lt;p&gt;Start Claude Code using the router:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ccr code
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: After modifying the configuration file, you need to restart the service for the changes to take effect:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;ccr restart
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;4. UI Mode (Beta)&lt;/h3&gt; 
&lt;p&gt;For a more intuitive experience, you can use the UI mode to manage your configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ccr ui
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will open a web-based interface where you can easily view and edit your &lt;code&gt;config.json&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/images/ui.png" alt="UI"&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The UI mode is currently in beta. 100% vibe coding: including project initialization, I just created a folder and a project.md document, and all code was generated by ccr + qwen3-coder + gemini(webSearch). If you encounter any issues, please submit an issue on GitHub.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Providers&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;Providers&lt;/code&gt; array is where you define the different model providers you want to use. Each provider object requires:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;name&lt;/code&gt;: A unique name for the provider.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;api_base_url&lt;/code&gt;: The full API endpoint for chat completions.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;api_key&lt;/code&gt;: Your API key for the provider.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;models&lt;/code&gt;: A list of model names available from this provider.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;transformer&lt;/code&gt; (optional): Specifies transformers to process requests and responses.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Transformers&lt;/h4&gt; 
&lt;p&gt;Transformers allow you to modify the request and response payloads to ensure compatibility with different provider APIs.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Global Transformer&lt;/strong&gt;: Apply a transformer to all models from a provider. In this example, the &lt;code&gt;openrouter&lt;/code&gt; transformer is applied to all models under the &lt;code&gt;openrouter&lt;/code&gt; provider.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "name": "openrouter",
  "api_base_url": "https://openrouter.ai/api/v1/chat/completions",
  "api_key": "sk-xxx",
  "models": [
    "google/gemini-2.5-pro-preview",
    "anthropic/claude-sonnet-4",
    "anthropic/claude-3.5-sonnet"
  ],
  "transformer": { "use": ["openrouter"] }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Model-Specific Transformer&lt;/strong&gt;: Apply a transformer to a specific model. In this example, the &lt;code&gt;deepseek&lt;/code&gt; transformer is applied to all models, and an additional &lt;code&gt;tooluse&lt;/code&gt; transformer is applied only to the &lt;code&gt;deepseek-chat&lt;/code&gt; model.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "name": "deepseek",
  "api_base_url": "https://api.deepseek.com/chat/completions",
  "api_key": "sk-xxx",
  "models": ["deepseek-chat", "deepseek-reasoner"],
  "transformer": {
    "use": ["deepseek"],
    "deepseek-chat": { "use": ["tooluse"] }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Passing Options to a Transformer&lt;/strong&gt;: Some transformers, like &lt;code&gt;maxtoken&lt;/code&gt;, accept options. To pass options, use a nested array where the first element is the transformer name and the second is an options object.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "name": "siliconflow",
  "api_base_url": "https://api.siliconflow.cn/v1/chat/completions",
  "api_key": "sk-xxx",
  "models": ["moonshotai/Kimi-K2-Instruct"],
  "transformer": {
    "use": [
      [
        "maxtoken",
        {
          "max_tokens": 16384
        }
      ]
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Available Built-in Transformers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Anthropic&lt;/code&gt;:If you use only the &lt;code&gt;Anthropic&lt;/code&gt; transformer, it will preserve the original request and response parameters(you can use it to connect directly to an Anthropic endpoint).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;deepseek&lt;/code&gt;: Adapts requests/responses for DeepSeek API.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;gemini&lt;/code&gt;: Adapts requests/responses for Gemini API.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;openrouter&lt;/code&gt;: Adapts requests/responses for OpenRouter API. It can also accept a &lt;code&gt;provider&lt;/code&gt; routing parameter to specify which underlying providers OpenRouter should use. For more details, refer to the &lt;a href="https://openrouter.ai/docs/features/provider-routing"&gt;OpenRouter documentation&lt;/a&gt;. See an example below: &lt;pre&gt;&lt;code class="language-json"&gt;  "transformer": {
    "use": ["openrouter"],
    "moonshotai/kimi-k2": {
      "use": [
        [
          "openrouter",
          {
            "provider": {
              "only": ["moonshotai/fp8"]
            }
          }
        ]
      ]
    }
  }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;groq&lt;/code&gt;: Adapts requests/responses for groq API.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;maxtoken&lt;/code&gt;: Sets a specific &lt;code&gt;max_tokens&lt;/code&gt; value.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tooluse&lt;/code&gt;: Optimizes tool usage for certain models via &lt;code&gt;tool_choice&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;gemini-cli&lt;/code&gt; (experimental): Unofficial support for Gemini via Gemini CLI &lt;a href="https://gist.github.com/musistudio/1c13a65f35916a7ab690649d3df8d1cd"&gt;gemini-cli.js&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;reasoning&lt;/code&gt;: Used to process the &lt;code&gt;reasoning_content&lt;/code&gt; field.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sampling&lt;/code&gt;: Used to process sampling information fields such as &lt;code&gt;temperature&lt;/code&gt;, &lt;code&gt;top_p&lt;/code&gt;, &lt;code&gt;top_k&lt;/code&gt;, and &lt;code&gt;repetition_penalty&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;enhancetool&lt;/code&gt;: Adds a layer of error tolerance to the tool call parameters returned by the LLM (this will cause the tool call information to no longer be streamed).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cleancache&lt;/code&gt;: Clears the &lt;code&gt;cache_control&lt;/code&gt; field from requests.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vertex-gemini&lt;/code&gt;: Handles the Gemini API using Vertex authentication.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Custom Transformers:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can also create your own transformers and load them via the &lt;code&gt;transformers&lt;/code&gt; field in &lt;code&gt;config.json&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "transformers": [
    {
      "path": "$HOME/.claude-code-router/plugins/gemini-cli.js",
      "options": {
        "project": "xxx"
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Router&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;Router&lt;/code&gt; object defines which model to use for different scenarios:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;default&lt;/code&gt;: The default model for general tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;background&lt;/code&gt;: A model for background tasks. This can be a smaller, local model to save costs.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;think&lt;/code&gt;: A model for reasoning-heavy tasks, like Plan Mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;longContext&lt;/code&gt;: A model for handling long contexts (e.g., &amp;gt; 60K tokens).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;longContextThreshold&lt;/code&gt; (optional): The token count threshold for triggering the long context model. Defaults to 60000 if not specified.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;webSearch&lt;/code&gt;: Used for handling web search tasks and this requires the model itself to support the feature. If you're using openrouter, you need to add the &lt;code&gt;:online&lt;/code&gt; suffix after the model name.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also switch models dynamically in Claude Code with the &lt;code&gt;/model&lt;/code&gt; command: &lt;code&gt;/model provider_name,model_name&lt;/code&gt; Example: &lt;code&gt;/model openrouter,anthropic/claude-3.5-sonnet&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;Custom Router&lt;/h4&gt; 
&lt;p&gt;For more advanced routing logic, you can specify a custom router script via the &lt;code&gt;CUSTOM_ROUTER_PATH&lt;/code&gt; in your &lt;code&gt;config.json&lt;/code&gt;. This allows you to implement complex routing rules beyond the default scenarios.&lt;/p&gt; 
&lt;p&gt;In your &lt;code&gt;config.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "CUSTOM_ROUTER_PATH": "$HOME/.claude-code-router/custom-router.js"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The custom router file must be a JavaScript module that exports an &lt;code&gt;async&lt;/code&gt; function. This function receives the request object and the config object as arguments and should return the provider and model name as a string (e.g., &lt;code&gt;"provider_name,model_name"&lt;/code&gt;), or &lt;code&gt;null&lt;/code&gt; to fall back to the default router.&lt;/p&gt; 
&lt;p&gt;Here is an example of a &lt;code&gt;custom-router.js&lt;/code&gt; based on &lt;code&gt;custom-router.example.js&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// $HOME/.claude-code-router/custom-router.js

/**
 * A custom router function to determine which model to use based on the request.
 *
 * @param {object} req - The request object from Claude Code, containing the request body.
 * @param {object} config - The application's config object.
 * @returns {Promise&amp;lt;string|null&amp;gt;} - A promise that resolves to the "provider,model_name" string, or null to use the default router.
 */
module.exports = async function router(req, config) {
  const userMessage = req.body.messages.find((m) =&amp;gt; m.role === "user")?.content;

  if (userMessage &amp;amp;&amp;amp; userMessage.includes("explain this code")) {
    // Use a powerful model for code explanation
    return "openrouter,anthropic/claude-3.5-sonnet";
  }

  // Fallback to the default router configuration
  return null;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Subagent Routing&lt;/h5&gt; 
&lt;p&gt;For routing within subagents, you must specify a particular provider and model by including &lt;code&gt;&amp;lt;CCR-SUBAGENT-MODEL&amp;gt;provider,model&amp;lt;/CCR-SUBAGENT-MODEL&amp;gt;&lt;/code&gt; at the &lt;strong&gt;beginning&lt;/strong&gt; of the subagent's prompt. This allows you to direct specific subagent tasks to designated models.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;CCR-SUBAGENT-MODEL&amp;gt;openrouter,anthropic/claude-3.5-sonnet&amp;lt;/CCR-SUBAGENT-MODEL&amp;gt;
Please help me analyze this code snippet for potential optimizations...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;ü§ñ GitHub Actions&lt;/h2&gt; 
&lt;p&gt;Integrate Claude Code Router into your CI/CD pipeline. After setting up &lt;a href="https://docs.anthropic.com/en/docs/claude-code/github-actions"&gt;Claude Code Actions&lt;/a&gt;, modify your &lt;code&gt;.github/workflows/claude.yaml&lt;/code&gt; to use the router:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;name: Claude Code

on:
  issue_comment:
    types: [created]
  # ... other triggers

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' &amp;amp;&amp;amp; contains(github.event.comment.body, '@claude')) ||
      # ... other conditions
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Prepare Environment
        run: |
          curl -fsSL https://bun.sh/install | bash
          mkdir -p $HOME/.claude-code-router
          cat &amp;lt;&amp;lt; 'EOF' &amp;gt; $HOME/.claude-code-router/config.json
          {
            "log": true,
            "NON_INTERACTIVE_MODE": true,
            "OPENAI_API_KEY": "${{ secrets.OPENAI_API_KEY }}",
            "OPENAI_BASE_URL": "https://api.deepseek.com",
            "OPENAI_MODEL": "deepseek-chat"
          }
          EOF
        shell: bash

      - name: Start Claude Code Router
        run: |
          nohup ~/.bun/bin/bunx @musistudio/claude-code-router@1.0.8 start &amp;amp;
        shell: bash

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        env:
          ANTHROPIC_BASE_URL: http://localhost:3456
        with:
          anthropic_api_key: "any-string-is-ok"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: When running in GitHub Actions or other automation environments, make sure to set &lt;code&gt;"NON_INTERACTIVE_MODE": true&lt;/code&gt; in your configuration to prevent the process from hanging due to stdin handling issues.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This setup allows for interesting automations, like running tasks during off-peak hours to reduce API costs.&lt;/p&gt; 
&lt;h2&gt;üìù Further Reading&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/en/project-motivation-and-how-it-works.md"&gt;Project Motivation and How It Works&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/en/maybe-we-can-do-more-with-the-route.md"&gt;Maybe We Can Do More with the Router&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚ù§Ô∏è Support &amp;amp; Sponsoring&lt;/h2&gt; 
&lt;p&gt;If you find this project helpful, please consider sponsoring its development. Your support is greatly appreciated!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://ko-fi.com/F1F31GN2GM"&gt;&lt;img src="https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true" alt="ko-fi"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://paypal.me/musistudio1999"&gt;Paypal&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/images/alipay.jpg" width="200" alt="Alipay"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/images/wechat.jpg" width="200" alt="WeChat Pay"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Our Sponsors&lt;/h3&gt; 
&lt;p&gt;A huge thank you to all our sponsors for their generous support!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://aihubmix.com/"&gt;AIHubmix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@Simon Leischnig&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/duanshuaimin"&gt;@duanshuaimin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vrgitadmin"&gt;@vrgitadmin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*o&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ceilwoo"&gt;@ceilwoo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*ËØ¥&lt;/li&gt; 
 &lt;li&gt;@*Êõ¥&lt;/li&gt; 
 &lt;li&gt;@K*g&lt;/li&gt; 
 &lt;li&gt;@R*R&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobleer"&gt;@bobleer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*Ëãó&lt;/li&gt; 
 &lt;li&gt;@*Âàí&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Clarence-pan"&gt;@Clarence-pan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carter003"&gt;@carter003&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@S*r&lt;/li&gt; 
 &lt;li&gt;@*Êôñ&lt;/li&gt; 
 &lt;li&gt;@*Êïè&lt;/li&gt; 
 &lt;li&gt;@Z*z&lt;/li&gt; 
 &lt;li&gt;@*ÁÑ∂&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cluic"&gt;@cluic&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*Ëãó&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PromptExpert"&gt;@PromptExpert&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*Â∫î&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yusnake"&gt;@yusnake&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*È£û&lt;/li&gt; 
 &lt;li&gt;@Ëë£*&lt;/li&gt; 
 &lt;li&gt;@*Ê±Ä&lt;/li&gt; 
 &lt;li&gt;@*Ê∂Ø&lt;/li&gt; 
 &lt;li&gt;@*:-Ôºâ&lt;/li&gt; 
 &lt;li&gt;@**Á£ä&lt;/li&gt; 
 &lt;li&gt;@*Áê¢&lt;/li&gt; 
 &lt;li&gt;@*Êàê&lt;/li&gt; 
 &lt;li&gt;@Z*o&lt;/li&gt; 
 &lt;li&gt;@*Áê®&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/congzhangzh"&gt;@congzhangzh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*_&lt;/li&gt; 
 &lt;li&gt;@Z*m&lt;/li&gt; 
 &lt;li&gt;@*Èë´&lt;/li&gt; 
 &lt;li&gt;@c*y&lt;/li&gt; 
 &lt;li&gt;@*Êòï&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/witsice"&gt;@witsice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@b*g&lt;/li&gt; 
 &lt;li&gt;@*‰∫ø&lt;/li&gt; 
 &lt;li&gt;@*Ëæâ&lt;/li&gt; 
 &lt;li&gt;@JACK&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;(If your name is masked, please contact me via my homepage email to update it with your GitHub username.)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fastrepl/hyprnote</title>
      <link>https://github.com/fastrepl/hyprnote</link>
      <description>&lt;p&gt;Local-first AI Notepad for Private Meetings&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/e5fac942-1a51-4180-9d64-f508db705f9d" alt="github_banner_v2"&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;p align="center"&gt;AI notepad for &lt;strong&gt;private&lt;/strong&gt; meetings. Not a single byte of data leaves your device.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://deepwiki.com/fastrepl/hyprnote"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki"&gt;&lt;/a&gt; &lt;a href="https://hyprnote.com/discord" target="_blank"&gt;&lt;img src="https://img.shields.io/static/v1?label=Join%20our&amp;amp;message=Discord&amp;amp;color=blue&amp;amp;logo=Discord" alt="Discord"&gt;&lt;/a&gt; &lt;a href="https://x.com/tryhyprnote" target="_blank"&gt;&lt;img src="https://img.shields.io/static/v1?label=Follow%20us%20on&amp;amp;message=X&amp;amp;color=black&amp;amp;logo=x" alt="X"&gt;&lt;/a&gt; &lt;img referrerpolicy="no-referrer-when-downgrade" src="https://pixel.hyprnote.com/a.png?x-pxid=082cd823-8c29-4e45-999b-0aa73f931a9d&amp;amp;page=README.md"&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h2&gt;What is Hyprnote?&lt;/h2&gt; 
&lt;p&gt;Hyprnote is a local-first AI notepad designed for people in back-to-back meetings.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Listens to your meetings while you write&lt;/li&gt; 
 &lt;li&gt;Crafts smart summaries based on your quick notes&lt;/li&gt; 
 &lt;li&gt;Runs completely &lt;strong&gt;offline&lt;/strong&gt; using open-source models like Whisper or HyprLLM&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;No clouds. No leaks. Just your notes‚Äîon your machine.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew tap fastrepl/hyprnote &amp;amp;&amp;amp; brew install hyprnote --cask
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hyprnote.com/download"&gt;macOS&lt;/a&gt; (public beta)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fastrepl/hyprnote/issues/66"&gt;Windows&lt;/a&gt; (soon)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fastrepl/hyprnote/issues/67"&gt;Linux&lt;/a&gt; (of course)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Highlights&lt;/h2&gt; 
&lt;h3&gt;Realtime Transcript&lt;/h3&gt; 
&lt;p&gt;Watch a live transcript update as the meeting unfolds‚Äîaccurate, fast, and fully local. &lt;img width="959" height="712" alt="image" src="https://github.com/user-attachments/assets/d24b8b43-a052-44cd-803e-daa3ff600a9c"&gt;&lt;/p&gt; 
&lt;h3&gt;From Memos to Summaries&lt;/h3&gt; 
&lt;p&gt;Jot things down during your call. Hyprnote turns them into a polished meeting summary‚Äîcontext-aware and easy to share. &lt;img width="959" height="712" alt="image" src="https://github.com/user-attachments/assets/489f9239-1a32-4217-9d74-554906687fe1"&gt;&lt;/p&gt; 
&lt;h3&gt;Truly Local&lt;/h3&gt; 
&lt;p&gt;No internet? No problem. Hyprnote works offline by default and keeps everything on your device.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/c6649a63-3d41-40ea-a1fd-8c0713ad91bc" alt="offline"&gt;&lt;/p&gt; 
&lt;h3&gt;Bring Your Own LLM&lt;/h3&gt; 
&lt;p&gt;Prefer something custom? You can swap in your own language model:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run local models via Ollama&lt;/li&gt; 
 &lt;li&gt;Use approved third-party APIs like Gemini, Claude, or Azure-hosted GPT&lt;/li&gt; 
 &lt;li&gt;Stay compliant with whatever your org allows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Hyprnote plays nice with whatever stack you‚Äôre running.&lt;/p&gt; 
&lt;img width="912" height="712" alt="image" src="https://github.com/user-attachments/assets/717dc39a-3359-46d6-a92f-51de56907750"&gt; 
&lt;h3&gt;Note Templates&lt;/h3&gt; 
&lt;p&gt;Prefer a certain style? Choose from predefined templates like bullet points, agenda-based, or paragraph summary. Or create your own.&lt;/p&gt; 
&lt;img width="959" height="712" alt="image" src="https://github.com/user-attachments/assets/d826a854-4b6f-415c-9e97-270f517c0868"&gt; 
&lt;h3&gt;Autonomy Selector&lt;/h3&gt; 
&lt;p&gt;Control how much freedom the AI takes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stick strictly to your quick notes&lt;/li&gt; 
 &lt;li&gt;Let Hyprnote improvise and reframe based on the full conversation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img width="912" height="712" alt="image" src="https://github.com/user-attachments/assets/7de5c74f-5d99-46ec-8a5f-a38fb62bafb1"&gt; 
&lt;h3&gt;AI Chat&lt;/h3&gt; 
&lt;p&gt;Ask follow-ups right inside your notes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;"What were the action items?"&lt;/li&gt; 
 &lt;li&gt;"Rewrite this in simpler language"&lt;/li&gt; 
 &lt;li&gt;"Translate to Spanish"&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img width="959" height="712" alt="image" src="https://github.com/user-attachments/assets/52b7dc14-906f-445f-91f9-b0089d40a495"&gt; 
&lt;h3&gt;Integrations&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Apple Calendar, Contacts&lt;/li&gt; 
 &lt;li&gt;Obsidian&lt;/li&gt; 
 &lt;li&gt;Coming soon: Notion, Slack, Hubspot, Salesforce&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img width="912" height="712" alt="image" src="https://github.com/user-attachments/assets/ab559e54-fda5-4c8c-97d7-ba1b9d134cc8"&gt;</description>
    </item>
    
    <item>
      <title>actualbudget/actual</title>
      <link>https://github.com/actualbudget/actual</link>
      <description>&lt;p&gt;A local-first personal finance app&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/actualbudget/actual/master/demo.png" alt="Actualbudget"&gt; &lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Actual is a local-first personal finance tool. It is 100% free and open-source, written in NodeJS, it has a synchronization element so that all your changes can move between devices without any heavy lifting.&lt;/p&gt; 
&lt;p&gt;If you are interested in contributing, or want to know how development works, see our &lt;a href="https://actualbudget.org/docs/contributing/"&gt;contributing&lt;/a&gt; document we would love to have you.&lt;/p&gt; 
&lt;p&gt;Want to say thanks? Click the ‚≠ê at the top of the page.&lt;/p&gt; 
&lt;h2&gt;Key Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Actual &lt;a href="https://discord.gg/pRYNYr4W5A"&gt;discord&lt;/a&gt; community.&lt;/li&gt; 
 &lt;li&gt;Actual &lt;a href="https://actualbudget.org/docs"&gt;Community Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://actualbudget.org/docs/faq"&gt;Frequently asked questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;There are four ways to deploy Actual:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;One-click deployment &lt;a href="https://www.pikapods.com/pods?run=actual"&gt;via PikaPods&lt;/a&gt; (~1.40 $/month) - recommended for non-technical users&lt;/li&gt; 
 &lt;li&gt;Managed hosting &lt;a href="https://actualbudget.org/docs/install/fly"&gt;via Fly.io&lt;/a&gt; (~1.50 $/month)&lt;/li&gt; 
 &lt;li&gt;Self-hosted by using &lt;a href="https://actualbudget.org/docs/install/docker"&gt;a Docker image&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Local-only apps - &lt;a href="https://actualbudget.org/download/"&gt;downloadable Windows, Mac and Linux apps&lt;/a&gt; you can run on your device&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Learn more in the &lt;a href="https://actualbudget.org/docs/install/"&gt;installation instructions docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Ready to Start Budgeting?&lt;/h2&gt; 
&lt;p&gt;Read about &lt;a href="https://actualbudget.org/docs/getting-started/envelope-budgeting"&gt;Envelope budgeting&lt;/a&gt; to know more about the idea behind Actual Budget.&lt;/p&gt; 
&lt;h3&gt;Are you new to budgeting or want to start fresh?&lt;/h3&gt; 
&lt;p&gt;Check out the community's &lt;a href="https://actualbudget.org/docs/getting-started/starting-fresh"&gt;Starting Fresh&lt;/a&gt; guide so you can quickly get up and running!&lt;/p&gt; 
&lt;h3&gt;Are you migrating from other budgeting apps?&lt;/h3&gt; 
&lt;p&gt;Check out the community's &lt;a href="https://actualbudget.org/docs/migration/"&gt;Migration&lt;/a&gt; guide to start jumping on the Actual Budget train!&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;We have a wide range of documentation on how to use Actual, this is all available in our &lt;a href="https://actualbudget.org/docs"&gt;Community Documentation&lt;/a&gt;, this includes topics on Budgeting, Account Management, Tips &amp;amp; Tricks and some documentation for developers.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Actual is a community driven product. Learn more about &lt;a href="https://actualbudget.org/docs/contributing/"&gt;contributing to Actual&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Code structure&lt;/h3&gt; 
&lt;p&gt;The Actual app is split up into a few packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;loot-core - The core application that runs on any platform&lt;/li&gt; 
 &lt;li&gt;desktop-client - The desktop UI&lt;/li&gt; 
 &lt;li&gt;desktop-electron - The desktop app&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;More information on the project structure is available in our &lt;a href="https://actualbudget.org/docs/contributing/project-details"&gt;community documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Feature Requests&lt;/h3&gt; 
&lt;p&gt;Current feature requests can be seen &lt;a href="https://github.com/actualbudget/actual/issues?q=is%3Aissue+label%3A%22needs+votes%22+sort%3Areactions-%2B1-desc"&gt;here&lt;/a&gt;. Vote for your favorite requests by reacting &lt;span&gt;üëç&lt;/span&gt; to the top comment of the request.&lt;/p&gt; 
&lt;p&gt;To add new feature requests, open a new Issue of the "Feature Request" type.&lt;/p&gt; 
&lt;h3&gt;Translation&lt;/h3&gt; 
&lt;p&gt;Make Actual Budget accessible to more people by helping with the &lt;a href="https://actualbudget.org/docs/contributing/i18n/"&gt;Internationalization&lt;/a&gt; of Actual. We are using a crowd sourcing tool to manage the translations, see our &lt;a href="https://hosted.weblate.org/projects/actualbudget/"&gt;Weblate Project&lt;/a&gt;. Weblate proudly supports open-source software projects through their &lt;a href="https://weblate.org/en/hosting/#libre"&gt;Libre plan&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://hosted.weblate.org/engage/actualbudget/"&gt; &lt;img src="https://hosted.weblate.org/widget/actualbudget/actual/287x66-grey.png" alt="Translation status"&gt; &lt;/a&gt; 
&lt;h2&gt;Repo Activity&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/e20537dd8b74956f86736726ccfbc6f0565bec22.svg?sanitize=true" alt="Alt" title="Repobeats analytics image"&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Thanks to our wonderful sponsors who make Actual Budget possible!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.netlify.com"&gt; &lt;img src="https://www.netlify.com/v3/img/components/netlify-color-accent.svg?sanitize=true" alt="Deploys by Netlify"&gt; &lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>puckeditor/puck</title>
      <link>https://github.com/puckeditor/puck</link>
      <description>&lt;p&gt;The visual editor for React&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://puckeditor.com?utm_source=readme&amp;amp;utm_medium=code&amp;amp;utm_campaign=repo&amp;amp;utm_contents=logo"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://res.cloudinary.com/die3nptcg/image/upload/Puck_Logo_White_RGB_j2rwgg.svg" height="100px" aria-label="Puck logo"&gt; 
   &lt;img src="https://res.cloudinary.com/die3nptcg/image/upload/Puck_Logo_Black_RGB_dqsjag.svg?sanitize=true" height="100px" aria-label="Puck logo"&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
 &lt;p&gt;&lt;em&gt;The visual editor for React&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://puckeditor.com/docs?utm_source=readme&amp;amp;utm_medium=code&amp;amp;utm_campaign=repo&amp;amp;utm_contents=docs_link"&gt;Documentation&lt;/a&gt; ‚Ä¢ &lt;a href="https://demo.puckeditor.com/edit?utm_source=readme&amp;amp;utm_medium=code&amp;amp;utm_campaign=repo&amp;amp;utm_contents=demo_link"&gt;Demo&lt;/a&gt; ‚Ä¢ &lt;a href="https://discord.gg/V9mDAhuxyZ"&gt;Discord&lt;/a&gt; ‚Ä¢ &lt;a href="https://github.com/puckeditor/puck/raw/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;‚≠êÔ∏è Enjoying Puck? Please &lt;a href="https://github.com/puckeditor/puck"&gt;leave a star&lt;/a&gt;!&lt;/p&gt; 
 &lt;br&gt; 
 &lt;p&gt;&lt;a href="https://demo.puckeditor.com/edit"&gt;&lt;img src="https://github.com/user-attachments/assets/25e1ae25-ca5e-450f-afa0-01816830b731" alt="GIF showing a page being created in the Puck Editor, with components being added, arranged, and customized in real time"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;What is Puck?&lt;/h2&gt; 
&lt;p&gt;Puck is a modular, open-source visual editor for React.js. You can use Puck to build custom drag-and-drop experiences with your own application and React components.&lt;/p&gt; 
&lt;p&gt;Because Puck is just a React component, it plays well with all React.js environments, including Next.js. You own your data and there‚Äôs no vendor lock-in.&lt;/p&gt; 
&lt;p&gt;Puck is also &lt;a href="https://github.com/puckeditor/puck?tab=MIT-1-ov-file#readme"&gt;licensed under MIT&lt;/a&gt;, making it suitable for both internal systems and commercial applications.&lt;/p&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;p&gt;Install the package:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm i @measured/puck --save # or npx create-puck-app my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Render the editor:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;// Editor.jsx
import { Puck } from "@measured/puck";
import "@measured/puck/puck.css";

// Create Puck component config
const config = {
  components: {
    HeadingBlock: {
      fields: {
        children: {
          type: "text",
        },
      },
      render: ({ children }) =&amp;gt; {
        return &amp;lt;h1&amp;gt;{children}&amp;lt;/h1&amp;gt;;
      },
    },
  },
};

// Describe the initial data
const initialData = {};

// Save the data to your database
const save = (data) =&amp;gt; {};

// Render Puck editor
export function Editor() {
  return &amp;lt;Puck config={config} data={initialData} onPublish={save} /&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Render the page:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;// Page.jsx
import { Render } from "@measured/puck";
import "@measured/puck/puck.css";

export function Page() {
  return &amp;lt;Render config={config} data={data} /&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Recipes&lt;/h2&gt; 
&lt;p&gt;Use &lt;code&gt;create-puck-app&lt;/code&gt; to quickly spin up a a pre-configured app based on our provided &lt;a href="https://github.com/puckeditor/puck/tree/main/recipes"&gt;recipes&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npx create-puck-app my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Available recipes include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/puckeditor/puck/tree/main/recipes/next"&gt;&lt;strong&gt;next&lt;/strong&gt;&lt;/a&gt;: Next.js example, using App Router and static page generation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/puckeditor/puck/tree/main/recipes/remix"&gt;&lt;strong&gt;remix&lt;/strong&gt;&lt;/a&gt;: Remix Run v2 example, using dynamic routes at root-level&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/puckeditor/puck/tree/main/recipes/react-router"&gt;&lt;strong&gt;react-router&lt;/strong&gt;&lt;/a&gt;: React Router v7 app example, using dynamic routes to create pages at any level&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/D9e4E3MQVZ"&gt;Discord server&lt;/a&gt; for discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/puckeditor/awesome-puck"&gt;awesome-puck&lt;/a&gt; community repo for plugins, custom fields &amp;amp; more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Get support&lt;/h2&gt; 
&lt;p&gt;If you have any questions about Puck, please open a &lt;a href="https://github.com/puckeditor/puck/issues"&gt;GitHub issue&lt;/a&gt; or join us on &lt;a href="https://discord.gg/D9e4E3MQVZ"&gt;Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Or &lt;a href="https://app.cal.com/chrisvxd/puck-enquiry/"&gt;book a discovery call&lt;/a&gt; for hands-on support and consultancy.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT ¬© &lt;a href="https://github.com/puckeditor/puck/graphs/contributors"&gt;The Puck Contributors&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>homarr-labs/homarr</title>
      <link>https://github.com/homarr-labs/homarr</link>
      <description>&lt;p&gt;A modern and easy to use dashboard. 30+ integrations. 10K+ icons built in. Authentication out of the box. No YAML, drag and drop configuration.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://homarr.dev/"&gt;&lt;img src="https://raw.githubusercontent.com/homarr-labs/homarr/dev/banner.png" alt="Banner"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- Badges --&gt; 
&lt;p align="center"&gt; &lt;img src="https://img.shields.io/github/stars/homarr-labs/homarr?label=%E2%AD%90%20Stars&amp;amp;style=flat-square?branch=master&amp;amp;kill_cache=1%22"&gt; &lt;a href="https://github.com/homarr-labs/homarr/releases/latest"&gt; &amp;nbsp; &lt;img alt="Latest Release (Semver)" src="https://img.shields.io/github/v/release/homarr-labs/homarr?label=%F0%9F%9A%80%20Release"&gt; &lt;/a&gt; &lt;a href="https://github.com/homarr-labs/homarr/actions/workflows/deployment-docker-image.yml"&gt; &amp;nbsp; &lt;img title="Docker CI Status" src="https://github.com/homarr-labs/homarr/actions/workflows/deployment-docker-image.yml/badge.svg?sanitize=true" alt="CI Status"&gt; &lt;/a&gt; &lt;a href="https://crowdin.com/project/homarr_labs"&gt; &lt;img title="Translations" src="https://badges.crowdin.net/homarr_labs/localized.svg?sanitize=true"&gt; &lt;/a&gt; &lt;a href="https://discord.gg/aCsmEV5RgA"&gt; &amp;nbsp; &lt;img title="Discord" src="https://discordapp.com/api/guilds/972958686051962910/widget.png?style=shield"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;!-- Links --&gt; 
&lt;p align="center"&gt; &lt;a href="https://demo.homarr.dev/"&gt; &lt;strong&gt;Demo ‚ú®&lt;/strong&gt; &lt;/a&gt; ‚Ä¢ &lt;a href="https://homarr.dev/docs/category/installation-1/"&gt; &lt;strong&gt;Install üíª&lt;/strong&gt; &lt;/a&gt; ‚Ä¢ &lt;a href="https://crowdin.com/project/homarr_labs"&gt; &lt;strong&gt;Translations üà∫&lt;/strong&gt; &lt;/a&gt; ‚Ä¢ &lt;a href="https://discord.com/invite/aCsmEV5RgA"&gt; &lt;strong&gt;Discord üëã&lt;/strong&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://homarr.dev/"&gt;&lt;img src="https://raw.githubusercontent.com/homarr-labs/homarr/dev/section-features.png" alt="Features Section"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üñåÔ∏è Highly customizable with an extensive drag and drop grid system&lt;/li&gt; 
 &lt;li&gt;‚ú® Integrates seamlessly with your favorite self-hosted applications&lt;/li&gt; 
 &lt;li&gt;üìå Easy and fast app management - no YAML involved&lt;/li&gt; 
 &lt;li&gt;üë§ Detailed and easy to use user management with permissions and groups&lt;/li&gt; 
 &lt;li&gt;üë• Support for single sign on via OIDC / LDAP&lt;/li&gt; 
 &lt;li&gt;üôä Safe encryption using BCrypt and AES-256-CBC for your valuable data&lt;/li&gt; 
 &lt;li&gt;üïî Realtime widget updates using WebSockets, tRPC and Redis&lt;/li&gt; 
 &lt;li&gt;üîç Search through thousands of data points in supported integrations or your data in Homarr using the fast built-in search&lt;/li&gt; 
 &lt;li&gt;ü¶û Icon picker with over 11K icons&lt;/li&gt; 
 &lt;li&gt;üöÄ Compatible with any major consumer hardware (x86, Raspberry Pi, old laptops, ...) and most OS (Windows, Linux, TrueNAS, Unraid)&lt;/li&gt; 
 &lt;li&gt;üñ•Ô∏è Extensive Kubernetes support with Helm for efficient scaling &amp;amp; high reliability&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;a href="https://homarr.dev/docs/category/widgets"&gt;&lt;img src="https://raw.githubusercontent.com/homarr-labs/homarr/dev/section-widgets-and-integrations.png" alt="Widgets &amp;amp; Integrations Section"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Homarr has a &lt;a href="https://homarr.dev/docs/category/integrations"&gt;built-in collection of widgets and integrations&lt;/a&gt;, that connect to your applications and enable you to control them directly from the dashboard.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üì• &lt;strong&gt;Torrent clients&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/torrent#deluge"&gt;Deluge&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/torrent#transmission"&gt;Transmission&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/torrent#qbittorrent-integration"&gt;qBittorent&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;üì• &lt;strong&gt;Usenet clients&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/usenet#sabnzbd"&gt;SABnzbd&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/usenet#nzbget"&gt;NZBGet&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;üì∫ &lt;strong&gt;Media servers&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/media-server/#plex"&gt;Plex&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/media-server#jellyfin-and-emby"&gt;Jellyfin&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;üìö &lt;strong&gt;Media collection managers&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/servarr#sonarr"&gt;Sonarr&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/servarr#radarr"&gt;Radarr&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/servarr#lidarr"&gt;Lidarr&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/servarr#readarr"&gt;Readarr&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;üéûÔ∏è &lt;strong&gt;Media request managers&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/media-requester"&gt;Overseerr&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/media-requester"&gt;Jellyseerr&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;üö´ &lt;strong&gt;DNS ad-blockers&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/dns#pihole"&gt;Pihole&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/dns#adguard-home"&gt;AdGuard Home&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;üñ•Ô∏è &lt;strong&gt;Monitoring&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/hardware"&gt;Dash.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/hardware/#openmediavault"&gt;OpenMediaVault.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/hardware/#proxmox"&gt;Proxmox.&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;üê≥ &lt;strong&gt;Container management&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://homarr.dev/docs/integrations/containers"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;a href="https://homarr.dev/docs/category/installation-1"&gt;&lt;img src="https://raw.githubusercontent.com/homarr-labs/homarr/dev/section-installation.png" alt="Installation Section"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Since we are updating Homarr very frequently, we recommend reading our official installation guides:&lt;/p&gt; 
&lt;h2&gt; &lt;a href="https://homarr.dev/docs/category/installation-1/"&gt; Please click here for official installation instructions &lt;/a&gt; &lt;/h2&gt; 
&lt;br&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/homarr"&gt;&lt;img src="https://raw.githubusercontent.com/homarr-labs/homarr/dev/section-contribute.png" alt="Contribute Section"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;Homarr is a free to use open source project that is maintained by volunteers and developers from all over the world. We publish under the &lt;code&gt;Apache License 2.0&lt;/code&gt; license which allows commercial usage. We invest multiple hours daily in to providing support, developing Homarr, integrating to third party software and more. We also pay for licensing and server hosting fees. Please consider to help us cover these costs to enable the future development of Homarr. Thank you!&lt;/p&gt; 
&lt;h2&gt; &lt;a href="https://opencollective.com/homarr"&gt; Please click here to sponsor us at OpenCollective &lt;/a&gt; &lt;/h2&gt; 
&lt;p&gt;You can also support us by helping with &lt;a href="https://homarr.dev/docs/community/translations"&gt;translating the entire project&lt;/a&gt; to as many languages as possible or contributing directly to the code or documentation. Please read our &lt;a href="https://raw.githubusercontent.com/homarr-labs/homarr/dev/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt;. All contributions, regardless of their size or scope, are welcome and highly appreciated! Thank you ‚ù§Ô∏è&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Thanks to your generous sponsors we can continue to build Homarr. Check them out for high quality and easy to use development tools. Feel free to contact us at &lt;a href="mailto:homarr-labs@proton.me"&gt;homarr-labs@proton.me&lt;/a&gt; if you wish to become a sponsor.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://argos-ci.com?utm_source=%5Bhomarr%5D&amp;amp;utm_campaign=oss"&gt;&lt;img src="https://argos-ci.com/badge-large.svg?sanitize=true" alt="Covered by Argos Visual Testing"&gt;&lt;/a&gt; &lt;br&gt; &lt;a href="https://www.pikapods.com/pods?run=homarr-v1"&gt;&lt;img src="https://www.pikapods.com/static/run-button.svg?sanitize=true" alt="Supported by PikaPods"&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>blakeblackshear/frigate</title>
      <link>https://github.com/blakeblackshear/frigate</link>
      <description>&lt;p&gt;NVR with realtime local object detection for IP cameras&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img align="center" alt="logo" src="https://raw.githubusercontent.com/blakeblackshear/frigate/dev/docs/static/img/frigate.png"&gt; &lt;/p&gt; 
&lt;h1&gt;Frigate - NVR With Realtime Object Detection for IP Cameras&lt;/h1&gt; 
&lt;a href="https://hosted.weblate.org/engage/frigate-nvr/"&gt; &lt;img src="https://hosted.weblate.org/widget/frigate-nvr/language-badge.svg?sanitize=true" alt="Translation status"&gt; &lt;/a&gt; 
&lt;p&gt;[English] | &lt;a href="https://github.com/blakeblackshear/frigate/raw/dev/README_CN.md"&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A complete and local NVR designed for &lt;a href="https://www.home-assistant.io"&gt;Home Assistant&lt;/a&gt; with AI object detection. Uses OpenCV and Tensorflow to perform realtime object detection locally for IP cameras.&lt;/p&gt; 
&lt;p&gt;Use of a GPU or AI accelerator such as a &lt;a href="https://coral.ai/products/"&gt;Google Coral&lt;/a&gt; or &lt;a href="https://hailo.ai/"&gt;Hailo&lt;/a&gt; is highly recommended. AI accelerators will outperform even the best CPUs with very little overhead.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tight integration with Home Assistant via a &lt;a href="https://github.com/blakeblackshear/frigate-hass-integration"&gt;custom component&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Designed to minimize resource use and maximize performance by only looking for objects when and where it is necessary&lt;/li&gt; 
 &lt;li&gt;Leverages multiprocessing heavily with an emphasis on realtime over processing every frame&lt;/li&gt; 
 &lt;li&gt;Uses a very low overhead motion detection to determine where to run object detection&lt;/li&gt; 
 &lt;li&gt;Object detection with TensorFlow runs in separate processes for maximum FPS&lt;/li&gt; 
 &lt;li&gt;Communicates over MQTT for easy integration into other systems&lt;/li&gt; 
 &lt;li&gt;Records video with retention settings based on detected objects&lt;/li&gt; 
 &lt;li&gt;24/7 recording&lt;/li&gt; 
 &lt;li&gt;Re-streaming via RTSP to reduce the number of connections to your camera&lt;/li&gt; 
 &lt;li&gt;WebRTC &amp;amp; MSE support for low-latency live view&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;View the documentation at &lt;a href="https://docs.frigate.video"&gt;https://docs.frigate.video&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;If you would like to make a donation to support development, please use &lt;a href="https://github.com/sponsors/blakeblackshear"&gt;Github Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;h3&gt;Live dashboard&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Live dashboard" src="https://github.com/blakeblackshear/frigate/assets/569905/5e713cb9-9db5-41dc-947a-6937c3bc376e"&gt; 
&lt;/div&gt; 
&lt;h3&gt;Streamlined review workflow&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Streamlined review workflow" src="https://github.com/blakeblackshear/frigate/assets/569905/6fed96e8-3b18-40e5-9ddc-31e6f3c9f2ff"&gt; 
&lt;/div&gt; 
&lt;h3&gt;Multi-camera scrubbing&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Multi-camera scrubbing" src="https://github.com/blakeblackshear/frigate/assets/569905/d6788a15-0eeb-4427-a8d4-80b93cae3d74"&gt; 
&lt;/div&gt; 
&lt;h3&gt;Built-in mask and zone editor&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Multi-camera scrubbing" src="https://github.com/blakeblackshear/frigate/assets/569905/d7885fc3-bfe6-452f-b7d0-d957cb3e31f5"&gt; 
&lt;/div&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;We use &lt;a href="https://hosted.weblate.org/projects/frigate-nvr/"&gt;Weblate&lt;/a&gt; to support language translations. Contributions are always welcome.&lt;/p&gt; 
&lt;a href="https://hosted.weblate.org/engage/frigate-nvr/"&gt; &lt;img src="https://hosted.weblate.org/widget/frigate-nvr/multi-auto.svg?sanitize=true" alt="Translation status"&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>wg-easy/wg-easy</title>
      <link>https://github.com/wg-easy/wg-easy</link>
      <description>&lt;p&gt;The easiest way to run WireGuard VPN + Web-based Admin UI.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WireGuard Easy&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/wg-easy/wg-easy/actions/workflows/deploy.yml"&gt;&lt;img src="https://github.com/wg-easy/wg-easy/actions/workflows/deploy.yml/badge.svg?branch=production" alt="Build &amp;amp; Publish latest Image"&gt;&lt;/a&gt; &lt;a href="https://github.com/wg-easy/wg-easy/actions/workflows/lint.yml"&gt;&lt;img src="https://github.com/wg-easy/wg-easy/actions/workflows/lint.yml/badge.svg?branch=master" alt="Lint"&gt;&lt;/a&gt; &lt;a href="https://github.com/wg-easy/wg-easy/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/wg-easy/wg-easy" alt="GitHub Stars"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/wg-easy/wg-easy/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/wg-easy/wg-easy" alt="License"&gt;&lt;/a&gt; &lt;a href="https://github.com/wg-easy/wg-easy/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/wg-easy/wg-easy" alt="GitHub Release"&gt;&lt;/a&gt; &lt;a href="https://github.com/wg-easy/wg-easy/pkgs/container/wg-easy"&gt;&lt;img src="https://img.shields.io/badge/image_pulls-12M+-blue" alt="Image Pulls"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You have found the easiest way to install &amp;amp; manage WireGuard on any Linux host!&lt;/p&gt; 
&lt;!-- TOOD: update screenshot --&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/wg-easy/wg-easy/master/assets/screenshot.png" width="802" alt="wg-easy Screenshot"&gt; &lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;All-in-one: WireGuard + Web UI.&lt;/li&gt; 
 &lt;li&gt;Easy installation, simple to use.&lt;/li&gt; 
 &lt;li&gt;List, create, edit, delete, enable &amp;amp; disable clients.&lt;/li&gt; 
 &lt;li&gt;Show a client's QR code.&lt;/li&gt; 
 &lt;li&gt;Download a client's configuration file.&lt;/li&gt; 
 &lt;li&gt;Statistics for which clients are connected.&lt;/li&gt; 
 &lt;li&gt;Tx/Rx charts for each connected client.&lt;/li&gt; 
 &lt;li&gt;Gravatar support.&lt;/li&gt; 
 &lt;li&gt;Automatic Light / Dark Mode&lt;/li&gt; 
 &lt;li&gt;Multilanguage Support&lt;/li&gt; 
 &lt;li&gt;One Time Links&lt;/li&gt; 
 &lt;li&gt;Client Expiration&lt;/li&gt; 
 &lt;li&gt;Prometheus metrics support&lt;/li&gt; 
 &lt;li&gt;IPv6 support&lt;/li&gt; 
 &lt;li&gt;CIDR support&lt;/li&gt; 
 &lt;li&gt;2FA support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] To better manage documentation for this project, it has its own site here: &lt;a href="https://wg-easy.github.io/wg-easy/latest"&gt;https://wg-easy.github.io/wg-easy/latest&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://wg-easy.github.io/wg-easy/latest/getting-started/"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wg-easy.github.io/wg-easy/latest/examples/tutorials/basic-installation/"&gt;Basic Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wg-easy.github.io/wg-easy/latest/examples/tutorials/caddy/"&gt;Caddy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wg-easy.github.io/wg-easy/latest/examples/tutorials/traefik/"&gt;Traefik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wg-easy.github.io/wg-easy/latest/examples/tutorials/podman-nft/"&gt;Podman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wg-easy.github.io/wg-easy/latest/examples/tutorials/adguard/"&gt;AdGuard Home&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you want to migrate from the old version to the new version, you can find the migration guide here: &lt;a href="https://wg-easy.github.io/wg-easy/latest/advanced/migrate/"&gt;Migration Guide&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;This is a quick start guide to get you up and running with WireGuard Easy.&lt;/p&gt; 
&lt;p&gt;For a more detailed installation guide, please refer to the &lt;a href="https://wg-easy.github.io/wg-easy/latest/getting-started/"&gt;Getting Started&lt;/a&gt; page.&lt;/p&gt; 
&lt;h3&gt;1. Install Docker&lt;/h3&gt; 
&lt;p&gt;If you haven't installed Docker yet, install it by running as root:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl -sSL https://get.docker.com | sh
exit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And log in again.&lt;/p&gt; 
&lt;h3&gt;2. Run WireGuard Easy&lt;/h3&gt; 
&lt;p&gt;The easiest way to run WireGuard Easy is with Docker Compose.&lt;/p&gt; 
&lt;p&gt;Just follow &lt;a href="https://wg-easy.github.io/wg-easy/latest/examples/tutorials/basic-installation/"&gt;these steps&lt;/a&gt; in the detailed documentation.&lt;/p&gt; 
&lt;p&gt;You can also install WireGuard Easy with the &lt;a href="https://wg-easy.github.io/wg-easy/latest/examples/tutorials/docker-run/"&gt;docker run command&lt;/a&gt; or via &lt;a href="https://wg-easy.github.io/wg-easy/latest/examples/tutorials/podman-nft/"&gt;podman&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Now &lt;a href="https://wg-easy.github.io/wg-easy/latest/examples/tutorials/basic-installation/#setup-reverse-proxy"&gt;setup a reverse proxy&lt;/a&gt; to be able to access the Web UI securely from the internet. This step is optional, just make sure to follow the guide &lt;a href="https://wg-easy.github.io/wg-easy/latest/examples/tutorials/reverse-proxyless/"&gt;here&lt;/a&gt; if you decide not to do it.&lt;/p&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;Are you enjoying this project? Consider donating.&lt;/p&gt; 
&lt;p&gt;Founder: &lt;a href="https://github.com/sponsors/WeeJeWel"&gt;Buy Emile a beer!&lt;/a&gt; üçª&lt;/p&gt; 
&lt;p&gt;Maintainer: &lt;a href="https://github.com/sponsors/kaaax0815"&gt;Buy kaaax0815 a coffee!&lt;/a&gt; ‚òï&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker&lt;/li&gt; 
 &lt;li&gt;Node LTS &amp;amp; corepack enabled&lt;/li&gt; 
 &lt;li&gt;Visual Studio Code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Dev Server&lt;/h3&gt; 
&lt;p&gt;This starts the development server with docker&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Update Auto Imports&lt;/h3&gt; 
&lt;p&gt;If you add something that should be auto-importable and VSCode complains, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cd src
pnpm install
cd ..
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Test Cli&lt;/h3&gt; 
&lt;p&gt;This starts the cli with docker&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm cli:dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the AGPL-3.0-only License - see the &lt;a href="https://raw.githubusercontent.com/wg-easy/wg-easy/master/LICENSE"&gt;LICENSE&lt;/a&gt; file for details&lt;/p&gt; 
&lt;p&gt;This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with Jason A. Donenfeld, ZX2C4 or Edge Security&lt;/p&gt; 
&lt;p&gt;"WireGuard" and the "WireGuard" logo are registered trademarks of Jason A. Donenfeld&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>puppeteer/puppeteer</title>
      <link>https://github.com/puppeteer/puppeteer</link>
      <description>&lt;p&gt;JavaScript API for Chrome and Firefox&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Puppeteer&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/puppeteer/puppeteer/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/puppeteer/puppeteer/actions/workflows/ci.yml/badge.svg?branch=main" alt="build"&gt;&lt;/a&gt; &lt;a href="https://npmjs.org/package/puppeteer"&gt;&lt;img src="https://img.shields.io/npm/v/puppeteer.svg?sanitize=true" alt="npm puppeteer package"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://user-images.githubusercontent.com/10379601/29446482-04f7036a-841f-11e7-9872-91d1fc2ea683.png" height="200" align="right"&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Puppeteer is a JavaScript library which provides a high-level API to control Chrome or Firefox over the &lt;a href="https://chromedevtools.github.io/devtools-protocol/"&gt;DevTools Protocol&lt;/a&gt; or &lt;a href="https://pptr.dev/webdriver-bidi"&gt;WebDriver BiDi&lt;/a&gt;. Puppeteer runs in the headless (no visible UI) by default&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;a href="https://pptr.dev/docs"&gt;Get started&lt;/a&gt; | &lt;a href="https://pptr.dev/api"&gt;API&lt;/a&gt; | &lt;a href="https://pptr.dev/faq"&gt;FAQ&lt;/a&gt; | &lt;a href="https://pptr.dev/contributing"&gt;Contributing&lt;/a&gt; | &lt;a href="https://pptr.dev/troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i puppeteer # Downloads compatible Chrome during installation.
npm i puppeteer-core # Alternatively, install as a library, without downloading Chrome.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import puppeteer from 'puppeteer';
// Or import puppeteer from 'puppeteer-core';

// Launch the browser and open a new blank page
const browser = await puppeteer.launch();
const page = await browser.newPage();

// Navigate the page to a URL.
await page.goto('https://developer.chrome.com/');

// Set screen size.
await page.setViewport({width: 1080, height: 1024});

// Type into search box using accessible input name.
await page.locator('aria/Search').fill('automate beyond recorder');

// Wait and click on first result.
await page.locator('.devsite-result-item-link').click();

// Locate the full title with a unique string.
const textSelector = await page
  .locator('text/Customize and automate')
  .waitHandle();
const fullTitle = await textSelector?.evaluate(el =&amp;gt; el.textContent);

// Print the full title.
console.log('The title of this blog post is "%s".', fullTitle);

await browser.close();
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Canner/WrenAI</title>
      <link>https://github.com/Canner/WrenAI</link>
      <description>&lt;p&gt;‚ö°Ô∏è AI-powered Business Intelligence (GenBI - Generative BI) query any database in natural language, generate accurate SQL (Text-to-SQL), charts (Text-to-chart), and insights in seconds.&lt;/p&gt;&lt;hr&gt;&lt;p align="center" id="top"&gt; &lt;a href="https://getwren.ai/?utm_source=github&amp;amp;utm_medium=title&amp;amp;utm_campaign=readme"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="./misc/wrenai_logo.png"&gt; 
   &lt;img src="https://raw.githubusercontent.com/Canner/WrenAI/main/misc/wrenai_logo_white.png" width="300px"&gt; 
  &lt;/picture&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align="center"&gt;&lt;a href="https://getwren.ai/?utm_source=github&amp;amp;utm_medium=title&amp;amp;utm_campaign=readme"&gt;Wren AI - Open-Source GenBI Agent&lt;/a&gt;&lt;/h1&gt;
&lt;a href="https://getwren.ai/?utm_source=github&amp;amp;utm_medium=title&amp;amp;utm_campaign=readme"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a aria-label="Follow us on X" href="https://x.com/getwrenai"&gt; &lt;img alt="" src="https://img.shields.io/badge/-@getwrenai-blue?style=for-the-badge&amp;amp;logo=x&amp;amp;logoColor=white&amp;amp;labelColor=gray&amp;amp;logoWidth=20"&gt; &lt;/a&gt; &lt;a aria-label="Releases" href="https://github.com/canner/WrenAI/releases"&gt; &lt;img alt="" src="https://img.shields.io/github/v/release/canner/WrenAI?logo=github&amp;amp;label=GitHub%20Release&amp;amp;color=blue&amp;amp;style=for-the-badge"&gt; &lt;/a&gt; &lt;a aria-label="License" href="https://github.com/Canner/WrenAI/raw/main/LICENSE"&gt; &lt;img alt="" src="https://img.shields.io/github/license/canner/WrenAI?color=blue&amp;amp;style=for-the-badge"&gt; &lt;/a&gt; &lt;a href="https://docs.getwren.ai"&gt; &lt;img src="https://img.shields.io/badge/docs-online-brightgreen?style=for-the-badge" alt="Docs"&gt; &lt;/a&gt; &lt;a aria-label="Join the community on GitHub" href="https://discord.gg/5DvshJqG8Z"&gt; &lt;img alt="" src="https://img.shields.io/badge/-JOIN%20THE%20COMMUNITY-blue?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;labelColor=grey&amp;amp;logoWidth=20"&gt; &lt;/a&gt; &lt;a aria-label="Canner" href="https://cannerdata.com/?utm_source=github&amp;amp;utm_medium=badge&amp;amp;utm_campaign=readme"&gt; &lt;img src="https://img.shields.io/badge/%F0%9F%A7%A1-Made%20by%20Canner-blue?style=for-the-badge"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/9263" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/9263" alt="Canner%2FWrenAI | Trendshift" style="width: 250px; height: 55px;" width="250" height="55"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Wren AI is your GenBI Agent, that you can query any database with natural language ‚Üí get accurate SQL(Text-to-SQL), charts(Text-to-Charts) &amp;amp; AI-generated insights in seconds. ‚ö°Ô∏è&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Canner/WrenAI/main/misc/workflow.png"&gt; &lt;/p&gt; 
&lt;h2&gt;üòç Demos&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/f9c1cb34-5a95-4580-8890-ec9644da4160"&gt;https://github.com/user-attachments/assets/f9c1cb34-5a95-4580-8890-ec9644da4160&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/90ad1d35-bb1e-490b-9676-b29863ff090b"&gt;Watch GenBI Demo&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ü§ñ Features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;What you get&lt;/th&gt; 
   &lt;th&gt;Why it matters&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Talk to Your Data&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Ask in any language ‚Üí precise SQL &amp;amp; answers&lt;/td&gt; 
   &lt;td&gt;Slash the SQL learning curveÔªø&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;GenBI Insights&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;AI-written summaries, charts &amp;amp; reports&lt;/td&gt; 
   &lt;td&gt;Decision-ready context in one clickÔªø&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Semantic Layer&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;MDL models encode schema, metrics, joins&lt;/td&gt; 
   &lt;td&gt;Keeps LLM outputs accurate &amp;amp; governedÔªø&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Embed via API&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Generate queries &amp;amp; charts inside your apps (&lt;a href="https://wrenai.readme.io/reference/cloud-getting-started"&gt;API Docs&lt;/a&gt;)&lt;/td&gt; 
   &lt;td&gt;Build custom agents, SaaS features, chatbotsÔªø (&lt;a href="https://huggingface.co/spaces/getWrenAI/wrenai-cloud-api-demo"&gt;Streamlit Live Demo&lt;/a&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;ü§© &lt;a href="https://getwren.ai/genbi?utm_source=github&amp;amp;utm_medium=content&amp;amp;utm_campaign=readme"&gt;Learn more about GenBI&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üöÄ Getting Started&lt;/h2&gt; 
&lt;p&gt;Using Wren AI is super simple, you can set it up within 3 minutes, and start to interact with your data!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visit our &lt;a href="http://docs.getwren.ai/oss/installation?utm_source=github&amp;amp;utm_medium=content&amp;amp;utm_campaign=readme"&gt;Install in your local environment&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Visit the &lt;a href="https://docs.getwren.ai/oss/guide/connect/overview?utm_source=github&amp;amp;utm_medium=content&amp;amp;utm_campaign=readme"&gt;Usage Guides&lt;/a&gt; to learn more about how to use Wren AI.&lt;/li&gt; 
 &lt;li&gt;Or just start with &lt;a href="https://getwren.ai/?utm_source=github&amp;amp;utm_medium=content&amp;amp;utm_campaign=readme"&gt;Wren AI Cloud&lt;/a&gt; our Managed Cloud Service. (&lt;a href="https://docs.getwren.ai/oss/overview/cloud_vs_self_host"&gt;OSS vs. Commercial Plans&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üèóÔ∏è Architecture&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Canner/WrenAI/main/misc/how_wrenai_works.png"&gt; &lt;/p&gt; 
&lt;p&gt;üëâ &lt;a href="https://getwren.ai/post/how-we-design-our-semantic-engine-for-llms-the-backbone-of-the-semantic-layer-for-llm-architecture?utm_source=github&amp;amp;utm_medium=content&amp;amp;utm_campaign=readme"&gt;Learn more about our Design&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üîå Data Sources&lt;/h2&gt; 
&lt;p&gt;If your data source is not listed here, vote for it in our &lt;a href="https://github.com/Canner/WrenAI/discussions/327"&gt;GitHub discussion thread&lt;/a&gt;. It will be a valuable input for us to decide on the next supported data sources.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Athena (Trino)&lt;/li&gt; 
 &lt;li&gt;Redshift&lt;/li&gt; 
 &lt;li&gt;BigQuery&lt;/li&gt; 
 &lt;li&gt;DuckDB&lt;/li&gt; 
 &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;li&gt;MySQL&lt;/li&gt; 
 &lt;li&gt;Microsoft SQL Server&lt;/li&gt; 
 &lt;li&gt;ClickHouse&lt;/li&gt; 
 &lt;li&gt;Oracle&lt;/li&gt; 
 &lt;li&gt;Trino&lt;/li&gt; 
 &lt;li&gt;Snowflake&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ü§ñ LLM Models&lt;/h2&gt; 
&lt;p&gt;Wren AI supports integration with various Large Language Models (LLMs), including but not limited to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenAI Models&lt;/li&gt; 
 &lt;li&gt;Azure OpenAI Models&lt;/li&gt; 
 &lt;li&gt;DeepSeek Models&lt;/li&gt; 
 &lt;li&gt;Google AI Studio ‚Äì Gemini Models&lt;/li&gt; 
 &lt;li&gt;Vertex AI Models (Gemini + Anthropic)&lt;/li&gt; 
 &lt;li&gt;Bedrock Models&lt;/li&gt; 
 &lt;li&gt;Anthropic API Models&lt;/li&gt; 
 &lt;li&gt;Groq Models&lt;/li&gt; 
 &lt;li&gt;Ollama Models&lt;/li&gt; 
 &lt;li&gt;Databricks Models&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check &lt;a href="https://github.com/Canner/WrenAI/tree/main/wren-ai-service/docs/config_examples"&gt;configuration examples here&lt;/a&gt;!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] The performance of Wren AI depends significantly on the capabilities of the LLM you choose. We strongly recommend using the most powerful model available for optimal results. Using less capable models may lead to reduced performance, slower response times, or inaccurate outputs.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üìö Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://docs.getwren.ai/oss/overview/introduction?utm_source=github&amp;amp;utm_medium=content&amp;amp;utm_campaign=readme"&gt;Wren AI documentation&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;üì™ Keep Posted?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.getwren.ai/blog/?utm_source=github&amp;amp;utm_medium=content&amp;amp;utm_campaign=readme"&gt;Subscribe our blog&lt;/a&gt; and &lt;a href="https://www.linkedin.com/company/wrenai"&gt;Follow our LinkedIn&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üõ†Ô∏è Contribution&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Star ‚≠ê the repo to show support (it really helps).&lt;/li&gt; 
 &lt;li&gt;Open an issue for bugs, ideas, or discussions.&lt;/li&gt; 
 &lt;li&gt;Read &lt;a href="https://github.com/Canner/WrenAI/raw/main/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; for setup &amp;amp; PR guidelines.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;‚≠êÔ∏è Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Join 1.3k+ developers in our &lt;a href="https://discord.gg/5DvshJqG8Z"&gt;Discord&lt;/a&gt; for real-time help and roadmap previews.&lt;/li&gt; 
 &lt;li&gt;If there are any issues, please visit &lt;a href="https://github.com/Canner/WrenAI/issues"&gt;GitHub Issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Explore our &lt;a href="https://wrenai.notion.site/"&gt;public roadmap&lt;/a&gt; to stay updated on upcoming features and improvements!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please note that our &lt;a href="https://raw.githubusercontent.com/Canner/WrenAI/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; applies to all Wren AI community channels. Users are &lt;strong&gt;highly encouraged&lt;/strong&gt; to read and adhere to them to avoid repercussions.&lt;/p&gt; 
&lt;h2&gt;üéâ Our Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/canner/wrenAI/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=Canner/WrenAI"&gt; &lt;/a&gt; 
&lt;p align="right"&gt; &lt;a href="https://raw.githubusercontent.com/Canner/WrenAI/main/#top"&gt;‚¨ÜÔ∏è Back to Top&lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>devlikeapro/waha</title>
      <link>https://github.com/devlikeapro/waha</link>
      <description>&lt;p&gt;WAHA - WhatsApp HTTP API (REST API) that you can configure in a click! 3 engines: WEBJS (browser based), NOWEB (websocket nodejs), GOWS (websocket go)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WAHA&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/devlikeapro/waha/core/logo.png" style="border-radius: 50%" width="150"&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WAHA&lt;/strong&gt; - &lt;strong&gt;W&lt;/strong&gt;hats&lt;strong&gt;A&lt;/strong&gt;pp &lt;strong&gt;H&lt;/strong&gt;TTP &lt;strong&gt;A&lt;/strong&gt;PI (REST API) that you can install on your own server and run in less than 5 minutes!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/devlikeapro/waha"&gt;&lt;img src="https://img.shields.io/docker/pulls/devlikeapro/waha" alt="Docker Pulls"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://waha.devlike.pro/"&gt;https://waha.devlike.pro/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dashboard Example: &lt;a href="https://waha.devlike.pro/dashboard"&gt;https://waha.devlike.pro/dashboard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Swagger Example: &lt;a href="https://waha.devlike.pro/swagger"&gt;https://waha.devlike.pro/swagger&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Tables of Contents&lt;/h1&gt; 
&lt;!-- toc --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#quick-start"&gt;Quick start&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#send-your-first-message"&gt;Send your first message&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#1-download-image"&gt;1. Download image&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#2-run-whatsapp-http-api"&gt;2. Run WhatsApp HTTP API&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#3-start-a-new-session"&gt;3. Start a new session&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#4-get-and-scan-qr"&gt;4. Get and scan QR&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#5-get-the-screenshot"&gt;5. Get the screenshot&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#6-send-a-text-message"&gt;6. Send a text message&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#what-is-next"&gt;What is next?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#development"&gt;Development&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#start-the-project"&gt;Start the project&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- tocstop --&gt; 
&lt;h1&gt;Quick start&lt;/h1&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;Only thing that you must have - installed docker. Please follow the original instruction &lt;a href="https://docs.docker.com/get-docker/" target="_blank" rel="noopener"&gt;how to install docker -&amp;gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you are ready - come back and follows the below steps to send the first text message to WhatsApp via HTTP API!&lt;/p&gt; 
&lt;h2&gt;Send your first message&lt;/h2&gt; 
&lt;p&gt;Let's go over steps that allow you to send your first text message via WhatsApp HTTP API!&lt;/p&gt; 
&lt;h3&gt;1. Download image&lt;/h3&gt; 
&lt;p&gt;Assuming you have installed &lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt;, let's download the image.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull devlikeapro/waha
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker login -u devlikeapro -p {KEY}
docker pull devlikeapro/waha-plus
docker logout
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about how to get &lt;code&gt;PASSWORD&lt;/code&gt; for &lt;a href="https://waha.devlike.pro/docs/how-to/waha-plus/"&gt;&lt;strong&gt;‚ûï WAHA Plus&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;2. Run WhatsApp HTTP API&lt;/h3&gt; 
&lt;p&gt;Run WhatsApp HTTP API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -it --rm -p 3000:3000/tcp --name waha devlikeapro/waha

# It prints logs and the last line must be
# WhatsApp HTTP API is running on: http://[::1]:3000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the link in your browser &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt; and you'll see API documentation (Swagger).&lt;/p&gt; 
&lt;h3&gt;3. Start a new session&lt;/h3&gt; 
&lt;p&gt;To start a new session you should have your mobile phone with installed WhatsApp application close to you.&lt;/p&gt; 
&lt;p&gt;Please go and read how what we'll need to a bit later: &lt;a href="https://faq.whatsapp.com/381777293328336/?helpref=hc_fnav" target="_blank"&gt; How to log in - the instruction on WhatsApp site &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;When your ready - find &lt;code&gt;POST /api/sessions&lt;/code&gt;, click on &lt;strong&gt;Try it out&lt;/strong&gt;, then &lt;strong&gt;Execute&lt;/strong&gt; a bit below.&lt;/p&gt; 
&lt;p&gt;The example payload:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "name": "default"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By using the request with &lt;code&gt;name&lt;/code&gt; values you can start multiple session (WhatsApp accounts) inside the single docker container in Plus&lt;/p&gt; 
&lt;h3&gt;4. Get and scan QR&lt;/h3&gt; 
&lt;p&gt;Find &lt;code&gt;GET /api/screenshot&lt;/code&gt; and execute it, it shows you QR code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Scan the QR with your cell phone's WhatsApp app.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;5. Get the screenshot&lt;/h3&gt; 
&lt;p&gt;Execute &lt;code&gt;GET /api/screenshot&lt;/code&gt; after a few seconds after scanning the QR - it'll show you the screenshot of you Whatsapp instance. If you can get the actual screenshot - then you're ready to start sending messages!&lt;/p&gt; 
&lt;h3&gt;6. Send a text message&lt;/h3&gt; 
&lt;p&gt;Let's send a text message - find &lt;code&gt;POST /api/sendText&lt;/code&gt; in &lt;a href="http://localhost:3000/"&gt;swagger&lt;/a&gt; and change &lt;code&gt;chatId&lt;/code&gt; this way: use a phone international phone number without &lt;code&gt;+&lt;/code&gt; symbol and add &lt;code&gt;@c.us&lt;/code&gt; at the end.&lt;/p&gt; 
&lt;p&gt;For phone number &lt;code&gt;12132132131&lt;/code&gt; the &lt;code&gt;chatId&lt;/code&gt; is &lt;code&gt;12132132131@c.us&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The example payload:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "chatId": "12132132130@c.us",
  "text": "Hi there!",
  "session": "default"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also, you can use &lt;code&gt;curl&lt;/code&gt; and send POST request like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Phone without +
export PHONE=12132132130
curl -d "{\"chatId\": \"${PHONE}@c.us\", \"text\": \"Hello from WhatsApp HTTP API\" }" -H "Content-Type: application/json" -X POST http://localhost:3000/api/sendText
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What is next?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://waha.devlike.pro/docs/overview/introduction/"&gt;Go and read the full documentation!&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Development&lt;/h1&gt; 
&lt;h2&gt;Start the project&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository&lt;/li&gt; 
 &lt;li&gt;Make sure you're using node&amp;gt;=22 (check &lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/.nvmrc"&gt;.nvmrc&lt;/a&gt; to get the version)&lt;/li&gt; 
 &lt;li&gt;Run the following commands:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install dependencies
yarn install
# Fetch and compile proto files
yarn gows:proto
# Run
yarn start
# open http://localhost:3000
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>workadventure/workadventure</title>
      <link>https://github.com/workadventure/workadventure</link>
      <description>&lt;p&gt;A collaborative web application (virtual office) presented as a 16-bit RPG video game&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://github.com/thecodingmachine/workadventure/workflows/Continuous%20Integration/badge.svg?sanitize=true" alt=""&gt; &lt;a href="https://discord.gg/G6Xh9ZM9aR"&gt;&lt;img src="https://img.shields.io/discord/821338762134290432?label=Discord" alt="Discord"&gt;&lt;/a&gt; &lt;img src="https://awesome.re/badge.svg?sanitize=true" alt="Awesome"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/workadventure/workadventure/develop/README-MAP.png" alt="WorkAdventure office image"&gt;&lt;/p&gt; 
&lt;h1&gt;WorkAdventure&lt;/h1&gt; 
&lt;p&gt;WorkAdventure is a platform that allows you to design &lt;strong&gt;fully customizable collaborative virtual worlds&lt;/strong&gt; (metaverse).&lt;/p&gt; 
&lt;p&gt;With your own avatar, you can &lt;strong&gt;interact spontaneously&lt;/strong&gt; with your colleagues, clients, partners (using a &lt;strong&gt;video-chat system&lt;/strong&gt;, triggered when you approach someone). Imagine &lt;strong&gt;all types of immersive experiences&lt;/strong&gt; (recruitments, onboarding, trainings, digital workplace, internal/external events) on desktop, mobile or tablet.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;The little plus? The platform is &lt;strong&gt;GDPR&lt;/strong&gt; and &lt;strong&gt;open source&lt;/strong&gt;!&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;See more features for your &lt;a href="https://workadventu.re/virtual-offices/virtual-meetings/?utm_source=github"&gt;virtual office&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Pricing for our &lt;a href="https://workadventu.re/pricing/?utm_source=github"&gt;SaaS version&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://play.staging.workadventu.re/@/tcm/workadventure/wa-village/?utm_source=github"&gt;&lt;img src="https://workadventu.re/wp-content/uploads/2024/02/Button-Live-Demo.png" alt="Workadventure live demo example"&gt;&lt;/a&gt; &lt;a href="https://workadventu.re/?utm_source=github"&gt;&lt;img src="https://workadventu.re/wp-content/uploads/2024/02/Button-Website.png" alt="Workadventure Website"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h6&gt;Support our team!&lt;/h6&gt; 
&lt;p&gt;&lt;a href="https://discord.com/invite/G6Xh9ZM9aR"&gt;&lt;img src="https://workadventu.re/wp-content/uploads/2024/02/Icon-Discord.png" alt="Discord Logo"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/Workadventure_"&gt;&lt;img src="https://workadventu.re/wp-content/uploads/2024/02/Icon-X.png" alt="X Social Logo"&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/company/workadventu-re/"&gt;&lt;img src="https://workadventu.re/wp-content/uploads/2024/02/Icon-LinkedIn.png" alt="LinkedIn Logo"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=%7Busername%7D&amp;amp;theme=transparent" alt="Stats repo"&gt;&lt;/p&gt; 
&lt;h2&gt;Community resources&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Want to build your own map, check out our &lt;strong&gt;&lt;a href="https://docs.workadventu.re/map-building/"&gt;map building documentation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Check out resources developed by the WorkAdventure community at &lt;strong&gt;&lt;a href="https://github.com/workadventure/awesome-workadventure"&gt;awesome-workadventure&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Setting up a production environment&lt;/h2&gt; 
&lt;p&gt;We support 2 ways to set up a production environment:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;using Docker Compose&lt;/li&gt; 
 &lt;li&gt;or using a Helm chart for Kubernetes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please check the &lt;a href="https://raw.githubusercontent.com/workadventure/workadventure/develop/docs/others/self-hosting/install.md"&gt;Setting up a production environment&lt;/a&gt; guide for more information.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] WorkAdventure also provides a &lt;a href="https://workadventu.re/?utm_source=github"&gt;hosted version&lt;/a&gt; of the application. Using the hosted version is the easiest way to get started and helps us to keep the project alive.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Setting up a development environment&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] These installation instructions are for local development only. They will not work on remote servers as local environments do not have HTTPS certificates.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Install Docker and clone this repository.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] If you are using Windows, make sure the End-Of-Line character is not modified by the cloning process by setting the &lt;code&gt;core.autocrlf&lt;/code&gt; setting to false: &lt;code&gt;git config --global core.autocrlf false&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cp .env.template .env
docker-compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The environment will start.&lt;/p&gt; 
&lt;p&gt;You should now be able to browse to &lt;a href="http://play.workadventure.localhost/"&gt;http://play.workadventure.localhost/&lt;/a&gt; and see the application. You can view the Traefik dashboard at &lt;a href="http://traefik.workadventure.localhost"&gt;http://traefik.workadventure.localhost&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Note: on some OSes, you will need to add this line to your &lt;code&gt;/etc/hosts&lt;/code&gt; file:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;/etc/hosts&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;127.0.0.1 oidc.workadventure.localhost redis.workadventure.localhost play.workadventure.localhost traefik.workadventure.localhost matrix.workadventure.localhost extra.workadventure.localhost icon.workadventure.localhost map-storage.workadventure.localhost uploader.workadventure.localhost maps.workadventure.localhost api.workadventure.localhost front.workadventure.localhost
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also start WorkAdventure + a test OpenID connect server using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ docker-compose -f docker-compose.yaml -f docker-compose-oidc.yaml up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(Test user is "User1" and his password is "pwd")&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;See our &lt;a href="https://raw.githubusercontent.com/workadventure/workadventure/develop/docs/others/troubleshooting.md"&gt;troubleshooting guide&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>wasp-lang/open-saas</title>
      <link>https://github.com/wasp-lang/open-saas</link>
      <description>&lt;p&gt;A free, open-source SaaS app starter for React &amp; Node.js with superpowers. Full-featured. Community-driven.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Welcome to your new SaaS App! üéâ&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.producthunt.com/products/open-saas?embed=true&amp;amp;utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_source=badge-open-saas-2" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=991058&amp;amp;theme=neutral&amp;amp;t=1753776395137" alt="Open SaaS - The open-source SaaS boilerplate with superpowers! | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/3856276b-23e9-455e-a564-b5f26f4f0e98"&gt;https://github.com/user-attachments/assets/3856276b-23e9-455e-a564-b5f26f4f0e98&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You've decided to build a SaaS app with the Open SaaS template. Great choice!&lt;/p&gt; 
&lt;p&gt;This template is:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;fully open-source&lt;/li&gt; 
 &lt;li&gt;completely free to use and distribute&lt;/li&gt; 
 &lt;li&gt;comes with a ton of features out of the box!&lt;/li&gt; 
 &lt;li&gt;focused on free, open-source services, where possible&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;üßë‚Äçüíª Check it out in action here: &lt;a href="https://opensaas.sh"&gt;OpenSaaS.sh&lt;/a&gt;&lt;br&gt; üìö Check out the Docs here: &lt;a href="https://docs.opensaas.sh"&gt;Open SaaS Docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What's inside?&lt;/h2&gt; 
&lt;p&gt;The template itself is built on top of some very powerful tools and frameworks, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üêù &lt;a href="https://wasp.sh"&gt;Wasp&lt;/a&gt; - a full-stack React, NodeJS, Prisma framework with superpowers&lt;/li&gt; 
 &lt;li&gt;üöÄ &lt;a href="https://starlight.astro.build/"&gt;Astro&lt;/a&gt; - Astro's lightweight "Starlight" template for documentation and blog&lt;/li&gt; 
 &lt;li&gt;üí∏ &lt;a href="https://stripe.com"&gt;Stripe&lt;/a&gt; or &lt;a href="https://lemonsqueezy.com/"&gt;Lemon Squeezy&lt;/a&gt; (with Polar.sh and Paddle coming soon!) - for products and payments&lt;/li&gt; 
 &lt;li&gt;üíÖ &lt;a href="https://tailwindcss.com"&gt;ShadCN UI&lt;/a&gt; - for components &amp;amp; styling (plus admin dashboard!)&lt;/li&gt; 
 &lt;li&gt;ü§ñ &lt;a href="https://docs.opensaas.sh/"&gt;AI-Ready&lt;/a&gt; - full set of Cursor rules &amp;amp; llms-full.txt for ai-assisted coding&lt;/li&gt; 
 &lt;li&gt;üìà &lt;a href="https://plausible.io"&gt;Plausible&lt;/a&gt; or &lt;a href="https://analytics.google.com/"&gt;Google&lt;/a&gt; Analytics&lt;/li&gt; 
 &lt;li&gt;ü§ñ &lt;a href="https://openai.com"&gt;OpenAI&lt;/a&gt; - OpenAI API w/ function calling example&lt;/li&gt; 
 &lt;li&gt;üì¶ &lt;a href="https://aws.amazon.com/s3/"&gt;AWS S3&lt;/a&gt; - for file uploads&lt;/li&gt; 
 &lt;li&gt;üìß &lt;a href="https://sendgrid.com"&gt;SendGrid&lt;/a&gt;, &lt;a href="https://mailgun.com"&gt;MailGun&lt;/a&gt;, or SMTP - for email sending&lt;/li&gt; 
 &lt;li&gt;üß™ &lt;a href="https://playwright.dev"&gt;Playwright&lt;/a&gt; - end-to-end tests with Playwright&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Because we're using Wasp as the full-stack framework, we can leverage a lot of its features to build our SaaS in record time, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üîê &lt;a href="https://wasp.sh/docs/auth/overview"&gt;Full-stack Authentication&lt;/a&gt; - Email verified + social Auth in a few lines of code.&lt;/li&gt; 
 &lt;li&gt;‚õë &lt;a href="https://wasp.sh/docs/data-model/operations/overview"&gt;End-to-end Type Safety&lt;/a&gt; - Type your backend functions and get inferred types on the front-end automatically, without the need to install or configure any third-party libraries. Oh, and type-safe Links, too!&lt;/li&gt; 
 &lt;li&gt;ü§ñ &lt;a href="https://wasp.sh/docs/advanced/jobs"&gt;Jobs&lt;/a&gt; - Run cron jobs in the background or set up queues simply by defining a function in the config file.&lt;/li&gt; 
 &lt;li&gt;üöÄ &lt;a href="https://wasp.sh/docs/advanced/deployment/overview"&gt;One-command Deploy&lt;/a&gt; - Easily deploy your DB, Server, &amp;amp; Client with one commaned to &lt;a href="https://railway.app"&gt;Railway&lt;/a&gt; or &lt;a href="https://fly.io"&gt;Fly.io&lt;/a&gt; via the CLI. Or deploy manually to any other hosting serivce of your choice.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You also get access to Wasp's diverse, helpful community if you get stuck or need help.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ü§ù &lt;a href="https://discord.gg/aCamt5wCpS"&gt;Wasp Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Simple Instructions&lt;/h3&gt; 
&lt;p&gt;First, to install the latest version of &lt;a href="https://wasp.sh/"&gt;Wasp&lt;/a&gt; on macOS, Linux, or Windows with WSL, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSL https://get.wasp.sh/installer.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, create a new SaaS app with the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;wasp new -t saas
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will create a &lt;strong&gt;clean copy of the Open SaaS template&lt;/strong&gt; into a new directory, and you can start building your SaaS app right away!&lt;/p&gt; 
&lt;h3&gt;Detailed Instructions&lt;/h3&gt; 
&lt;p&gt;For everything you need to know about getting started and using this template, check out the &lt;a href="https://docs.opensaas.sh"&gt;Open SaaS Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We've documented everything in great detail, including installation instructions, pulling updates to the template, guides for integrating services, SEO, deployment, and more. üöÄ&lt;/p&gt; 
&lt;h2&gt;Getting Help &amp;amp; Providing Feedback&lt;/h2&gt; 
&lt;p&gt;There are two ways to get help or provide feedback (and we try to always respond quickly!):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wasp-lang/open-saas/issues"&gt;Open an issue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/aCamt5wCpS"&gt;Wasp Discord&lt;/a&gt; -- please direct questions to the #üôãquestions forum channel&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Note that we've tried to get as many of the core features of a SaaS app into this template as possible, but there still might be some missing features or functionality.&lt;/p&gt; 
&lt;p&gt;We could always use some help tying up loose ends: contributions are welcome! Check out &lt;a href="https://raw.githubusercontent.com/wasp-lang/open-saas/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>diffusionstudio/core</title>
      <link>https://github.com/diffusionstudio/core</link>
      <description>&lt;p&gt;The Video Creation Engine: Edit videos with code, featuring the fastest WebCodecs renderer for in-browser video processing.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/diffusionstudio/core/main/assets/banner.png" alt="Library Banner" style="aspect-ratio: 1200/500;width: 100%;"&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;diffusionstudio/core&lt;/h1&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://img.shields.io/badge/Made%20with-Typescript-blue?color=000000&amp;amp;logo=typescript&amp;amp;logoColor=ffffff" alt="Static Badge"&gt; &lt;a href="https://vitejs.dev"&gt;&lt;img src="https://img.shields.io/badge/Powered%20by-Vite-000000?style=flat&amp;amp;logo=Vite&amp;amp;logoColor=ffffff" alt="powered by vite"&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/zPQJrNGuFB"&gt;&lt;img src="https://img.shields.io/discord/1115673443141156924?style=flat&amp;amp;logo=discord&amp;amp;logoColor=fff&amp;amp;color=000000" alt="discord"&gt;&lt;/a&gt; &lt;a href="https://x.com/diffusionhq"&gt;&lt;img src="https://img.shields.io/badge/Follow%20for-Updates-blue?color=000000&amp;amp;logo=X&amp;amp;logoColor=ffffff" alt="Static Badge"&gt;&lt;/a&gt; &lt;a href="https://www.ycombinator.com/companies/diffusion-studio"&gt;&lt;img src="https://img.shields.io/badge/Combinator-F24-blue?color=000000&amp;amp;logo=ycombinator&amp;amp;logoColor=ffffff" alt="Static Badge"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;h1&gt;Getting Started&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;@diffusionstudio/core&lt;/code&gt; is a 2D motion graphics and video rendering engine powered by WebCodecs. Developers commonly use it for video editing automations and to build editing &lt;a href="https://playground.diffusion.studio"&gt;playgrounds/web apps&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Explore the full documentation at &lt;a href="https://docs.diffusion.studio/docs"&gt;docs.diffusion.studio&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;This project owes much to &lt;a href="https://github.com/Vanilagy"&gt;@Vanilagy's&lt;/a&gt; exceptional muxer implementations.&lt;/p&gt; 
&lt;h2&gt;Why Use Diffusion Studio&lt;/h2&gt; 
&lt;p&gt;üíª 100% &lt;strong&gt;client-side&lt;/strong&gt;&lt;br&gt; ü™Ω &lt;strong&gt;Small bundle size&lt;/strong&gt; ‚Äì Only 75 KB with a single dependency&lt;br&gt; ü©∏ Blazingly &lt;strong&gt;fast&lt;/strong&gt; WebCodecs renderer&lt;br&gt; ü¶æ &lt;strong&gt;AI-first&lt;/strong&gt; architecture&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install @diffusionstudio/core
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Benchmarks&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/diffusionstudio/core/main/assets/benchmarks.png" alt="Benchmarks"&gt;&lt;/p&gt; 
&lt;h2&gt;Basic Usage&lt;/h2&gt; 
&lt;p&gt;Here‚Äôs an example of how to use the library:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import * as core from '@diffusionstudio/core';

const url = 'https://diffusion-studio-public.s3.eu-central-1.amazonaws.com/videos/big_buck_bunny_1080p_30fps.mp4';

// create a video clip and trim it
const video = new core.VideoClip(url).subclip(0, '10s');

// create a text clip and add styles
const text = new core.TextClip({ 
  text: 'Bunny - Our Brave Hero', 
  position: 'center', 
  duration: '5s', 
  stroke: { color: '#000000' } 
});

const composition = new core.Composition(); // 1920x1080

// this is how to compose your clips
await composition.add(video);  // convenience function for 
await composition.add(text);   // clip -&amp;gt; layer -&amp;gt; composition

await new core.Encoder(composition).render('hello_world.mp4');
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The API models the structure of conventional video editing applications like Adobe Premiere or CapCut, using a layer-based system. Each layer contains zero or more clips of a single type, arranged in ascending chronological order.&lt;/p&gt; 
&lt;p&gt;Layers are created implicitly with &lt;code&gt;composition.add(clip)&lt;/code&gt;, but you can also create them manually:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;const layer = composition.createLayer();
await layer.add(text0);
await layer.add(text1);
await layer.add(text2);
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Find more &lt;a href="https://github.com/diffusionstudio/examples"&gt;examples here.&lt;/a&gt;, or test all capabilities on our &lt;a href="https://app.diffusion.studio"&gt;Playground.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/7a943407-e916-4d9f-b46a-3163dbff44c3"&gt;https://github.com/user-attachments/assets/7a943407-e916-4d9f-b46a-3163dbff44c3&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How Does Diffusion Studio Compare?&lt;/h2&gt; 
&lt;h3&gt;Remotion&lt;/h3&gt; 
&lt;p&gt;A React-based video creation tool that converts the DOM into videos. It‚Äôs beginner-friendly, allowing web developers to leverage their existing skills.&lt;/p&gt; 
&lt;h3&gt;Motion Canvas&lt;/h3&gt; 
&lt;p&gt;A standalone editor designed for high-quality animations. It features an imperative API, adding elements procedurally rather than relying on keyframes, making it ideal for detailed animations.&lt;/p&gt; 
&lt;h3&gt;Diffusion Studio&lt;/h3&gt; 
&lt;p&gt;A video editing &lt;strong&gt;library&lt;/strong&gt; rather than a framework with a visual interface. It‚Äôs lightweight, operates entirely on the &lt;strong&gt;client-side&lt;/strong&gt;, and supports WebCodecs without relying on WebAssembly/ffmpeg. Ideal for integration into existing projects.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Currently, version ^2.0.0 is invite-only. You can request access on our Discord if you're interested in contributing. The source code for version ^1.0.0 is available in this repository.&lt;/p&gt; 
&lt;h2&gt;Current features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Video/Audio&lt;/strong&gt; trimming and offsets&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Layering&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Splitting&lt;/strong&gt; clips&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Html &amp;amp; Image&lt;/strong&gt; rendering&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Relative&lt;/strong&gt; units (e.g. 80% clip height)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shapes&lt;/strong&gt; (e.g., rectangles, circles)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Text&lt;/strong&gt; with multiple styles&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Audio Visualization&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;High Quality &lt;strong&gt;Captions&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Silence Removal&lt;/strong&gt; for audio&lt;/li&gt; 
 &lt;li&gt;Web &amp;amp; Local &lt;strong&gt;Fonts&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Clips&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Filters&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Masks&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Blending&lt;/strong&gt; modes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Keyframe&lt;/strong&gt; animations 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Numbers, Text and Colors&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Easing&lt;/strong&gt; (ease in, ease out etc.)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Extrapolation&lt;/strong&gt; &lt;code&gt;'clamp' | 'extend'&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Realtime playback&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hardware accelerated&lt;/strong&gt; encoding via WebCodecs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic render resolution and framerate&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Background&lt;/h2&gt; 
&lt;p&gt;This project was initiated in March 2023 with the mission of creating a ‚Äúvideo processing toolkit for the era of AI.‚Äù As someone passionate about video editing for over a decade, the release of WebCodecs and WebGPU without feature flags in Chrome presented the perfect opportunity to build something new.&lt;/p&gt; 
&lt;p&gt;Traditional browser-based video editors rely on server-side rendering, requiring time-consuming uploads and downloads of large files. With WebCodecs, video processing can now be done directly in the browser, making it significantly faster and more efficient.&lt;/p&gt; 
&lt;p&gt;I‚Äôm excited to contribute to the next generation of video editing technology.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This library is free to use under the &lt;strong&gt;Diffusion Studio Non-Commercial License&lt;/strong&gt;, as long as your project is &lt;strong&gt;not monetized&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;‚úÖ You Can Use This Library for Free If:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;You are an &lt;strong&gt;individual or a company&lt;/strong&gt; and your project is &lt;strong&gt;not generating revenue&lt;/strong&gt; (no sales, ads, donations beyond operational costs, or other forms of monetization).&lt;/li&gt; 
 &lt;li&gt;Your project &lt;strong&gt;may become commercial in the future&lt;/strong&gt;, as long as you obtain a commercial license before monetization.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üíº If Your Project Becomes Commercial:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you decide to &lt;strong&gt;monetize your project&lt;/strong&gt; (e.g., through sales, ads, premium features, or enterprise use), you must purchase a commercial license.&lt;/li&gt; 
 &lt;li&gt;Visit our website to obtain a license when you‚Äôre ready to monetize.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üìÑ More Details:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;See LICENSE for the Non-Commercial License.&lt;/li&gt; 
 &lt;li&gt;See LICENSE_COMMERCIAL for the Commercial License terms.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For any questions, feel free to &lt;a href="https://diffusion.studio"&gt;contact us&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Version History&lt;/h2&gt; 
&lt;h3&gt;v1.x &lt;em&gt;(Released October 2024)&lt;/em&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fully open-source (MPL-2.0 license)&lt;/li&gt; 
 &lt;li&gt;Relied on Pixi.js for rendering (resulting in a large library size)&lt;/li&gt; 
 &lt;li&gt;WebGPU support&lt;/li&gt; 
 &lt;li&gt;FFmpeg-compiled demuxer&lt;/li&gt; 
 &lt;li&gt;Limited to short-form content&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;v2.x &lt;em&gt;(Released February 1, 2025)&lt;/em&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Source code access by invite only&lt;/strong&gt; (Commercial &amp;amp; Non-Commercial license)&lt;/li&gt; 
 &lt;li&gt;Removed Pixi.js, significantly reducing library size&lt;/li&gt; 
 &lt;li&gt;Introduced a custom Canvas 2D renderer&lt;/li&gt; 
 &lt;li&gt;Continued FFmpeg-based demuxing&lt;/li&gt; 
 &lt;li&gt;Still limited to short-form content&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;v3.x &lt;em&gt;(Released February 18, 2025)&lt;/em&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Source code access by invite only&lt;/strong&gt; (Commercial &amp;amp; Non-Commercial license)&lt;/li&gt; 
 &lt;li&gt;Removed all FFmpeg dependencies&lt;/li&gt; 
 &lt;li&gt;Retained Canvas 2D rendering&lt;/li&gt; 
 &lt;li&gt;Introduced pure TypeScript-based muxers/demuxers&lt;/li&gt; 
 &lt;li&gt;Added support for long-form content&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;v4.x &lt;em&gt;(Estimated Release: July 2025)&lt;/em&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Source code access by invite only&lt;/strong&gt; (Commercial &amp;amp; Non-Commercial license)&lt;/li&gt; 
 &lt;li&gt;Introducing a custom WebGL2 renderer&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>linshenkx/prompt-optimizer</title>
      <link>https://github.com/linshenkx/prompt-optimizer</link>
      <description>&lt;p&gt;‰∏ÄÊ¨æÊèêÁ§∫ËØç‰ºòÂåñÂô®ÔºåÂä©Âäõ‰∫éÁºñÂÜôÈ´òË¥®ÈáèÁöÑÊèêÁ§∫ËØç&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Prompt Optimizer (ÊèêÁ§∫ËØç‰ºòÂåñÂô®) üöÄ&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/README_EN.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/README.md"&gt;‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/linshenkx/prompt-optimizer/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/linshenkx/prompt-optimizer" alt="GitHub stars"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/chrome-web-store/users/cakkkhboolfnadechdlgdcnjammejlna?style=flat&amp;amp;label=Chrome%20Users&amp;amp;link=https%3A%2F%2Fchromewebstore.google.com%2Fdetail%2F%25E6%258F%2590%25E7%25A4%25BA%25E8%25AF%258D%25E4%25BC%2598%25E5%258C%2596%25E5%2599%25A8%2Fcakkkhboolfnadechdlgdcnjammejlna" alt="Chrome Web Store Users"&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="License"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/linshen/prompt-optimizer"&gt;&lt;img src="https://img.shields.io/docker/pulls/linshen/prompt-optimizer" alt="Docker Pulls"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/forks/linshenkx/prompt-optimizer?style=flat" alt="GitHub forks"&gt; &lt;a href="https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Flinshenkx%2Fprompt-optimizer"&gt;&lt;img src="https://img.shields.io/badge/Vercel-indigo?style=flat&amp;amp;logo=vercel" alt="Deploy with Vercel"&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://prompt.always200.com"&gt;Âú®Á∫ø‰ΩìÈ™å&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B"&gt;Âø´ÈÄüÂºÄÂßã&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98"&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/a&gt; | &lt;a href="https://chromewebstore.google.com/detail/prompt-optimizer/cakkkhboolfnadechdlgdcnjammejlna"&gt;ChromeÊèí‰ª∂&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/dev.md"&gt;ÂºÄÂèëÊñáÊ°£&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/deployment/vercel.md"&gt;VercelÈÉ®ÁΩ≤ÊåáÂçó&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/mcp-server.md"&gt;MCPÈÉ®ÁΩ≤‰ΩøÁî®ËØ¥Êòé&lt;/a&gt; | &lt;a href="https://deepwiki.com/linshenkx/prompt-optimizer"&gt;DeepWikiÊñáÊ°£&lt;/a&gt; | &lt;a href="https://zread.ai/linshenkx/prompt-optimizer"&gt;ZReadÊñáÊ°£&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;üìñ È°πÁõÆÁÆÄ‰ªã&lt;/h2&gt; 
&lt;p&gt;Prompt OptimizerÊòØ‰∏Ä‰∏™Âº∫Â§ßÁöÑAIÊèêÁ§∫ËØç‰ºòÂåñÂ∑•ÂÖ∑ÔºåÂ∏ÆÂä©‰Ω†ÁºñÂÜôÊõ¥Â•ΩÁöÑAIÊèêÁ§∫ËØçÔºåÊèêÂçáAIËæìÂá∫Ë¥®Èáè„ÄÇÊîØÊåÅWebÂ∫îÁî®„ÄÅÊ°åÈù¢Â∫îÁî®„ÄÅChromeÊèí‰ª∂ÂíåDockerÈÉ®ÁΩ≤ÂõõÁßç‰ΩøÁî®ÊñπÂºè„ÄÇ&lt;/p&gt; 
&lt;h3&gt;üé• ÂäüËÉΩÊºîÁ§∫&lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;b&gt;1. ËßíËâ≤ÊâÆÊºîÂØπËØùÔºöÊøÄÂèëÂ∞èÊ®°ÂûãÊΩúÂäõ&lt;/b&gt;&lt;/p&gt; 
 &lt;p&gt;Âú®ËøΩÊ±ÇÊàêÊú¨ÊïàÁõäÁöÑÁîü‰∫ßÊàñÊ≥®ÈáçÈöêÁßÅÁöÑÊú¨Âú∞ÂåñÂú∫ÊôØ‰∏≠ÔºåÁªìÊûÑÂåñÁöÑÊèêÁ§∫ËØçËÉΩËÆ©Â∞èÊ®°ÂûãÁ®≥ÂÆöÂú∞ËøõÂÖ•ËßíËâ≤ÔºåÊèê‰æõÊ≤âÊµ∏Âºè„ÄÅÈ´ò‰∏ÄËá¥ÊÄßÁöÑËßíËâ≤ÊâÆÊºî‰ΩìÈ™åÔºåÊúâÊïàÊøÄÂèëÂÖ∂ÊΩúÂäõ„ÄÇ&lt;/p&gt; 
 &lt;img src="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/images/demo/cat-maid-roleplay.png" alt="Áå´Â•≥‰ªÜËßíËâ≤ÊâÆÊºîÊºîÁ§∫" width="85%"&gt; 
 &lt;br&gt; 
 &lt;p&gt;&lt;b&gt;2. Áü•ËØÜÂõæË∞±ÊèêÂèñÔºö‰øùÈöúÁîü‰∫ßÁéØÂ¢ÉÁöÑÁ®≥ÂÆöÊÄß&lt;/b&gt;&lt;/p&gt; 
 &lt;p&gt;Âú®ÈúÄË¶ÅÁ®ãÂ∫èÂåñÂ§ÑÁêÜÁöÑÁîü‰∫ßÁéØÂ¢É‰∏≠ÔºåÈ´òË¥®ÈáèÁöÑÊèêÁ§∫ËØçËÉΩÊòæËëóÈôç‰ΩéÂØπÊ®°ÂûãÊô∫ËÉΩÁ®ãÂ∫¶ÁöÑË¶ÅÊ±ÇÔºå‰ΩøÂæóÊõ¥ÁªèÊµéÁöÑÂ∞èÊ®°Âûã‰πüËÉΩÁ®≥ÂÆöËæìÂá∫ÂèØÈù†ÁöÑÊåáÂÆöÊ†ºÂºè„ÄÇÊú¨Â∑•ÂÖ∑Êó®Âú®ËæÖÂä©ÂºÄÂèëËÄÖÂø´ÈÄüËææÂà∞Ê≠§ÁõÆÁöÑÔºå‰ªéËÄåÂä†ÈÄüÂºÄÂèë„ÄÅ‰øùÈöúÁ®≥ÂÆöÔºåÂÆûÁé∞ÈôçÊú¨Â¢ûÊïà„ÄÇ&lt;/p&gt; 
 &lt;img src="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/images/demo/knowledge-graph-extractor.png" alt="Áü•ËØÜÂõæË∞±ÊèêÂèñÊºîÁ§∫" width="85%"&gt; 
 &lt;br&gt; 
 &lt;p&gt;&lt;b&gt;3. ËØóÊ≠åÂÜô‰ΩúÔºöËæÖÂä©ÂàõÊÑèÊé¢Á¥¢‰∏éÈúÄÊ±ÇÂÆöÂà∂&lt;/b&gt;&lt;/p&gt; 
 &lt;p&gt;ÂΩìÈù¢ÂØπ‰∏Ä‰∏™Âº∫Â§ßÁöÑAIÔºåÊàë‰ª¨ÁöÑÁõÆÊ†á‰∏çÂè™ÊòØÂæóÂà∞‰∏Ä‰∏™‚ÄúÂ•Ω‚ÄùÁ≠îÊ°àÔºåËÄåÊòØÂæóÂà∞‰∏Ä‰∏™‚ÄúÊàë‰ª¨ÊÉ≥Ë¶ÅÁöÑ‚ÄùÁã¨ÁâπÁ≠îÊ°à„ÄÇÊú¨Â∑•ÂÖ∑ËÉΩÂ∏ÆÂä©Áî®Êà∑Â∞Ü‰∏Ä‰∏™Ê®°Á≥äÁöÑÁÅµÊÑüÔºàÂ¶Ç‚ÄúÂÜôÈ¶ñËØó‚ÄùÔºâÁªÜÂåñ‰∏∫ÂÖ∑‰ΩìÁöÑÈúÄÊ±ÇÔºàÂÖ≥‰∫é‰ªÄ‰πà‰∏ªÈ¢ò„ÄÅ‰ΩïÁßçÊÑèË±°„ÄÅ‰ΩïÁßçÊÉÖÊÑüÔºâÔºåËæÖÂä©ÊÇ®Êé¢Á¥¢„ÄÅÂèëÊéòÂπ∂Á≤æÁ°ÆË°®ËææËá™Â∑±ÁöÑÂàõÊÑèÔºå‰∏éAIÂÖ±ÂàõÁã¨‰∏ÄÊó†‰∫åÁöÑ‰ΩúÂìÅ„ÄÇ&lt;/p&gt; 
 &lt;img src="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/images/demo/poetry-writing.png" alt="ËØóÊ≠åÂàõ‰ΩúÊºîÁ§∫" width="85%"&gt; 
&lt;/div&gt; 
&lt;h2&gt;‚ú® Ê†∏ÂøÉÁâπÊÄß&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;üéØ &lt;strong&gt;Êô∫ËÉΩ‰ºòÂåñ&lt;/strong&gt;Ôºö‰∏ÄÈîÆ‰ºòÂåñÊèêÁ§∫ËØçÔºåÊîØÊåÅÂ§öËΩÆËø≠‰ª£ÊîπËøõÔºåÊèêÂçáAIÂõûÂ§çÂáÜÁ°ÆÂ∫¶&lt;/li&gt; 
 &lt;li&gt;üìù &lt;strong&gt;ÂèåÊ®°Âºè‰ºòÂåñ&lt;/strong&gt;ÔºöÊîØÊåÅÁ≥ªÁªüÊèêÁ§∫ËØç‰ºòÂåñÂíåÁî®Êà∑ÊèêÁ§∫ËØç‰ºòÂåñÔºåÊª°Ë∂≥‰∏çÂêå‰ΩøÁî®Âú∫ÊôØ&lt;/li&gt; 
 &lt;li&gt;üîÑ &lt;strong&gt;ÂØπÊØîÊµãËØï&lt;/strong&gt;ÔºöÊîØÊåÅÂéüÂßãÊèêÁ§∫ËØçÂíå‰ºòÂåñÂêéÊèêÁ§∫ËØçÁöÑÂÆûÊó∂ÂØπÊØîÔºåÁõ¥ËßÇÂ±ïÁ§∫‰ºòÂåñÊïàÊûú&lt;/li&gt; 
 &lt;li&gt;ü§ñ &lt;strong&gt;Â§öÊ®°ÂûãÈõÜÊàê&lt;/strong&gt;ÔºöÊîØÊåÅOpenAI„ÄÅGemini„ÄÅDeepSeek„ÄÅÊô∫Ë∞±AI„ÄÅSiliconFlowÁ≠â‰∏ªÊµÅAIÊ®°Âûã&lt;/li&gt; 
 &lt;li&gt;üîí &lt;strong&gt;ÂÆâÂÖ®Êû∂ÊûÑ&lt;/strong&gt;ÔºöÁ∫ØÂÆ¢Êà∑Á´ØÂ§ÑÁêÜÔºåÊï∞ÊçÆÁõ¥Êé•‰∏éAIÊúçÂä°ÂïÜ‰∫§‰∫íÔºå‰∏çÁªèËøá‰∏≠Èó¥ÊúçÂä°Âô®&lt;/li&gt; 
 &lt;li&gt;üì± &lt;strong&gt;Â§öÁ´ØÊîØÊåÅ&lt;/strong&gt;ÔºöÂêåÊó∂Êèê‰æõWebÂ∫îÁî®„ÄÅÊ°åÈù¢Â∫îÁî®„ÄÅChromeÊèí‰ª∂ÂíåDockerÈÉ®ÁΩ≤ÂõõÁßç‰ΩøÁî®ÊñπÂºè&lt;/li&gt; 
 &lt;li&gt;üîê &lt;strong&gt;ËÆøÈóÆÊéßÂà∂&lt;/strong&gt;ÔºöÊîØÊåÅÂØÜÁ†Å‰øùÊä§ÂäüËÉΩÔºå‰øùÈöúÈÉ®ÁΩ≤ÂÆâÂÖ®&lt;/li&gt; 
 &lt;li&gt;üß© &lt;strong&gt;MCPÂçèËÆÆÊîØÊåÅ&lt;/strong&gt;ÔºöÊîØÊåÅModel Context Protocol (MCP) ÂçèËÆÆÔºåÂèØ‰∏éClaude DesktopÁ≠âMCPÂÖºÂÆπÂ∫îÁî®ÈõÜÊàê&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Âø´ÈÄüÂºÄÂßã&lt;/h2&gt; 
&lt;h3&gt;1. ‰ΩøÁî®Âú®Á∫øÁâàÊú¨ÔºàÊé®ËçêÔºâ&lt;/h3&gt; 
&lt;p&gt;Áõ¥Êé•ËÆøÈóÆÔºö&lt;a href="https://prompt.always200.com"&gt;https://prompt.always200.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;È°πÁõÆÊòØÁ∫ØÂâçÁ´ØÈ°πÁõÆÔºåÊâÄÊúâÊï∞ÊçÆÂè™Â≠òÂÇ®Âú®ÊµèËßàÂô®Êú¨Âú∞Ôºå‰∏ç‰ºö‰∏ä‰º†Ëá≥‰ªª‰ΩïÊúçÂä°Âô®ÔºåÂõ†Ê≠§Áõ¥Êé•‰ΩøÁî®Âú®Á∫øÁâàÊú¨‰πüÊòØÂÆâÂÖ®ÂèØÈù†ÁöÑ&lt;/p&gt; 
&lt;h3&gt;2. VercelÈÉ®ÁΩ≤&lt;/h3&gt; 
&lt;p&gt;ÊñπÂºè1Ôºö‰∏ÄÈîÆÈÉ®ÁΩ≤Âà∞Ëá™Â∑±ÁöÑVercel(Êñπ‰æøÔºå‰ΩÜÂêéÁª≠Êó†Ê≥ïËá™Âä®Êõ¥Êñ∞)Ôºö &lt;a href="https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Flinshenkx%2Fprompt-optimizer"&gt;&lt;img src="https://vercel.com/button" alt="ÈÉ®ÁΩ≤Âà∞ Vercel"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ÊñπÂºè2: ForkÈ°πÁõÆÂêéÂú®Vercel‰∏≠ÂØºÂÖ•ÔºàÊé®ËçêÔºå‰ΩÜÈúÄÂèÇËÄÉÈÉ®ÁΩ≤ÊñáÊ°£ËøõË°åÊâãÂä®ËÆæÁΩÆÔºâÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÂÖàForkÈ°πÁõÆÂà∞Ëá™Â∑±ÁöÑGitHub&lt;/li&gt; 
 &lt;li&gt;ÁÑ∂ÂêéÂú®Vercel‰∏≠ÂØºÂÖ•ËØ•È°πÁõÆ&lt;/li&gt; 
 &lt;li&gt;ÂèØË∑üË∏™Ê∫êÈ°πÁõÆÊõ¥Êñ∞Ôºå‰æø‰∫éÂêåÊ≠•ÊúÄÊñ∞ÂäüËÉΩÂíå‰øÆÂ§ç&lt;/li&gt; 
 &lt;li&gt;ÈÖçÁΩÆÁéØÂ¢ÉÂèòÈáèÔºö 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;ACCESS_PASSWORD&lt;/code&gt;ÔºöËÆæÁΩÆËÆøÈóÆÂØÜÁ†ÅÔºåÂêØÁî®ËÆøÈóÆÈôêÂà∂&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;VITE_OPENAI_API_KEY&lt;/code&gt;Á≠âÔºöÈÖçÁΩÆÂêÑAIÊúçÂä°ÂïÜÁöÑAPIÂØÜÈí•&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Êõ¥Â§öËØ¶ÁªÜÁöÑÈÉ®ÁΩ≤Ê≠•È™§ÂíåÊ≥®ÊÑè‰∫ãÈ°πÔºåËØ∑Êü•ÁúãÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/deployment/vercel.md"&gt;VercelÈÉ®ÁΩ≤ÊåáÂçó&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3. ‰∏ãËΩΩÊ°åÈù¢Â∫îÁî®&lt;/h3&gt; 
&lt;p&gt;‰ªé &lt;a href="https://github.com/linshenkx/prompt-optimizer/releases"&gt;GitHub Releases&lt;/a&gt; ‰∏ãËΩΩÊúÄÊñ∞ÁâàÊú¨„ÄÇÊàë‰ª¨‰∏∫ÂêÑÂπ≥Âè∞Êèê‰æõ&lt;strong&gt;ÂÆâË£ÖÁ®ãÂ∫è&lt;/strong&gt;Âíå&lt;strong&gt;ÂéãÁº©ÂåÖ&lt;/strong&gt;‰∏§ÁßçÊ†ºÂºè„ÄÇ&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÆâË£ÖÁ®ãÂ∫è (Êé®Ëçê)&lt;/strong&gt;: Â¶Ç &lt;code&gt;*.exe&lt;/code&gt;, &lt;code&gt;*.dmg&lt;/code&gt;, &lt;code&gt;*.AppImage&lt;/code&gt; Á≠â„ÄÇ&lt;strong&gt;Âº∫ÁÉàÊé®Ëçê‰ΩøÁî®Ê≠§ÊñπÂºèÔºåÂõ†‰∏∫ÂÆÉÊîØÊåÅËá™Âä®Êõ¥Êñ∞&lt;/strong&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂéãÁº©ÂåÖ&lt;/strong&gt;: Â¶Ç &lt;code&gt;*.zip&lt;/code&gt;„ÄÇËß£ÂéãÂç≥Áî®Ôºå‰ΩÜÊó†Ê≥ïËá™Âä®Êõ¥Êñ∞„ÄÇ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Ê°åÈù¢Â∫îÁî®Ê†∏ÂøÉ‰ºòÂäø&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Êó†Ë∑®ÂüüÈôêÂà∂&lt;/strong&gt;Ôºö‰Ωú‰∏∫ÂéüÁîüÊ°åÈù¢Â∫îÁî®ÔºåÂÆÉËÉΩÂΩªÂ∫ïÊëÜËÑ±ÊµèËßàÂô®Ë∑®ÂüüÔºàCORSÔºâÈóÆÈ¢òÁöÑÂõ∞Êâ∞„ÄÇËøôÊÑèÂë≥ÁùÄÊÇ®ÂèØ‰ª•Áõ¥Êé•ËøûÊé•‰ªª‰ΩïAIÊúçÂä°Êèê‰æõÂïÜÁöÑAPIÔºåÂåÖÊã¨Êú¨Âú∞ÈÉ®ÁΩ≤ÁöÑOllamaÊàñÊúâ‰∏•Ê†ºÂÆâÂÖ®Á≠ñÁï•ÁöÑÂïÜ‰∏öAPIÔºåËé∑ÂæóÊúÄÂÆåÊï¥„ÄÅÊúÄÁ®≥ÂÆöÁöÑÂäüËÉΩ‰ΩìÈ™å„ÄÇ&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Ëá™Âä®Êõ¥Êñ∞&lt;/strong&gt;ÔºöÈÄöËøáÂÆâË£ÖÁ®ãÂ∫èÔºàÂ¶Ç &lt;code&gt;.exe&lt;/code&gt;, &lt;code&gt;.dmg&lt;/code&gt;ÔºâÂÆâË£ÖÁöÑÁâàÊú¨ÔºåËÉΩÂ§üËá™Âä®Ê£ÄÊü•Âπ∂Êõ¥Êñ∞Âà∞ÊúÄÊñ∞Áâà„ÄÇ&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Áã¨Á´ãËøêË°å&lt;/strong&gt;ÔºöÊó†ÈúÄ‰æùËµñÊµèËßàÂô®ÔºåÊèê‰æõÊõ¥Âø´ÁöÑÂìçÂ∫îÂíåÊõ¥‰Ω≥ÁöÑÊÄßËÉΩ„ÄÇ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;4. ÂÆâË£ÖChromeÊèí‰ª∂&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;‰ªéChromeÂïÜÂ∫óÂÆâË£ÖÔºàÁî±‰∫éÂÆ°ÊâπËæÉÊÖ¢ÔºåÂèØËÉΩ‰∏çÊòØÊúÄÊñ∞ÁöÑÔºâÔºö&lt;a href="https://chromewebstore.google.com/detail/prompt-optimizer/cakkkhboolfnadechdlgdcnjammejlna"&gt;ChromeÂïÜÂ∫óÂú∞ÂùÄ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ÁÇπÂáªÂõæÊ†áÂç≥ÂèØÊâìÂºÄÊèêÁ§∫ËØç‰ºòÂåñÂô®&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;5. DockerÈÉ®ÁΩ≤&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;ÁÇπÂáªÊü•Áúã Docker ÈÉ®ÁΩ≤ÂëΩ‰ª§&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# ËøêË°åÂÆπÂô®ÔºàÈªòËÆ§ÈÖçÁΩÆÔºâ
docker run -d -p 8081:80 --restart unless-stopped --name prompt-optimizer linshen/prompt-optimizer

# ËøêË°åÂÆπÂô®ÔºàÈÖçÁΩÆAPIÂØÜÈí•ÂíåËÆøÈóÆÂØÜÁ†ÅÔºâ
docker run -d -p 8081:80 \
  -e VITE_OPENAI_API_KEY=your_key \
  -e ACCESS_USERNAME=your_username \  # ÂèØÈÄâÔºåÈªòËÆ§‰∏∫"admin"
  -e ACCESS_PASSWORD=your_password \  # ËÆæÁΩÆËÆøÈóÆÂØÜÁ†Å
  --restart unless-stopped \
  --name prompt-optimizer \
  linshen/prompt-optimizer
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;ÂõΩÂÜÖÈïúÂÉè&lt;/strong&gt;: Â¶ÇÊûúDocker HubËÆøÈóÆËæÉÊÖ¢ÔºåÂèØ‰ª•Â∞Ü‰∏äËø∞ÂëΩ‰ª§‰∏≠ÁöÑ &lt;code&gt;linshen/prompt-optimizer&lt;/code&gt; ÊõøÊç¢‰∏∫ &lt;code&gt;registry.cn-guangzhou.aliyuncs.com/prompt-optimizer/prompt-optimizer&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;6. Docker ComposeÈÉ®ÁΩ≤&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;ÁÇπÂáªÊü•Áúã Docker Compose ÈÉ®ÁΩ≤Ê≠•È™§&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 1. ÂÖãÈöÜ‰ªìÂ∫ì
git clone https://github.com/linshenkx/prompt-optimizer.git
cd prompt-optimizer

# 2. ÂèØÈÄâÔºöÂàõÂª∫.envÊñá‰ª∂ÈÖçÁΩÆAPIÂØÜÈí•ÂíåËÆøÈóÆËÆ§ËØÅ
cp env.local.example .env
# ÁºñËæë .env Êñá‰ª∂ÔºåÂ°´ÂÖ•ÂÆûÈôÖÁöÑ API ÂØÜÈí•ÂíåÈÖçÁΩÆ

# 3. ÂêØÂä®ÊúçÂä°
docker compose up -d

# 4. Êü•ÁúãÊó•Âøó
docker compose logs -f

# 5. ËÆøÈóÆÊúçÂä°
Web ÁïåÈù¢Ôºöhttp://localhost:8081
MCP ÊúçÂä°Âô®Ôºöhttp://localhost:8081/mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;‰Ω†ËøòÂèØ‰ª•Áõ¥Êé•ÁºñËæëdocker-compose.ymlÊñá‰ª∂ÔºåËá™ÂÆö‰πâÈÖçÁΩÆÔºö&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;ÁÇπÂáªÊü•Áúã docker-compose.yml Á§∫‰æã&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  prompt-optimizer:
    # ‰ΩøÁî®Docker HubÈïúÂÉè
    image: linshen/prompt-optimizer:latest
    # Êàñ‰ΩøÁî®ÈòøÈáå‰∫ëÈïúÂÉèÔºàÂõΩÂÜÖÁî®Êà∑Êé®ËçêÔºâ
    # image: registry.cn-guangzhou.aliyuncs.com/prompt-optimizer/prompt-optimizer:latest
    container_name: prompt-optimizer
    restart: unless-stopped
    ports:
      - "8081:80"  # WebÂ∫îÁî®Á´ØÂè£ÔºàÂåÖÂê´MCPÊúçÂä°Âô®ÔºåÈÄöËøá/mcpË∑ØÂæÑËÆøÈóÆÔºâ
    environment:
      # APIÂØÜÈí•ÈÖçÁΩÆ
      - VITE_OPENAI_API_KEY=your_openai_key
      - VITE_GEMINI_API_KEY=your_gemini_key
      # ËÆøÈóÆÊéßÂà∂ÔºàÂèØÈÄâÔºâ
      - ACCESS_USERNAME=admin
      - ACCESS_PASSWORD=your_password
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;7. MCP Server ‰ΩøÁî®ËØ¥Êòé&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;ÁÇπÂáªÊü•Áúã MCP Server ‰ΩøÁî®ËØ¥Êòé&lt;/summary&gt; 
 &lt;p&gt;Prompt Optimizer Áé∞Âú®ÊîØÊåÅ Model Context Protocol (MCP) ÂçèËÆÆÔºåÂèØ‰ª•‰∏é Claude Desktop Á≠âÊîØÊåÅ MCP ÁöÑ AI Â∫îÁî®ÈõÜÊàê„ÄÇ&lt;/p&gt; 
 &lt;p&gt;ÂΩìÈÄöËøá Docker ËøêË°åÊó∂ÔºåMCP Server ‰ºöËá™Âä®ÂêØÂä®ÔºåÂπ∂ÂèØÈÄöËøá &lt;code&gt;http://ip:port/mcp&lt;/code&gt; ËÆøÈóÆ„ÄÇ&lt;/p&gt; 
 &lt;h4&gt;ÁéØÂ¢ÉÂèòÈáèÈÖçÁΩÆ&lt;/h4&gt; 
 &lt;p&gt;MCP Server ÈúÄË¶ÅÈÖçÁΩÆ API ÂØÜÈí•ÊâçËÉΩÊ≠£Â∏∏Â∑•‰Ωú„ÄÇ‰∏ªË¶ÅÁöÑ MCP ‰∏ìÂ±ûÈÖçÁΩÆÔºö&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# MCP ÊúçÂä°Âô®ÈÖçÁΩÆ
MCP_DEFAULT_MODEL_PROVIDER=openai  # ÂèØÈÄâÂÄºÔºöopenai, gemini, deepseek, siliconflow, zhipu, custom
MCP_LOG_LEVEL=info                 # Êó•ÂøóÁ∫ßÂà´
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Docker ÁéØÂ¢É‰∏ã‰ΩøÁî® MCP&lt;/h4&gt; 
 &lt;p&gt;Âú® Docker ÁéØÂ¢É‰∏≠ÔºåMCP Server ‰ºö‰∏é Web Â∫îÁî®‰∏ÄËµ∑ËøêË°åÔºåÊÇ®ÂèØ‰ª•ÈÄöËøá Web Â∫îÁî®ÁöÑÁõ∏ÂêåÁ´ØÂè£ËÆøÈóÆ MCP ÊúçÂä°ÔºåË∑ØÂæÑ‰∏∫ &lt;code&gt;/mcp&lt;/code&gt;„ÄÇ&lt;/p&gt; 
 &lt;p&gt;‰æãÂ¶ÇÔºåÂ¶ÇÊûúÊÇ®Â∞ÜÂÆπÂô®ÁöÑ 80 Á´ØÂè£Êò†Â∞ÑÂà∞‰∏ªÊú∫ÁöÑ 8081 Á´ØÂè£Ôºö&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 8081:80 \
  -e VITE_OPENAI_API_KEY=your-openai-key \
  -e MCP_DEFAULT_MODEL_PROVIDER=openai \
  --name prompt-optimizer \
  linshen/prompt-optimizer
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;ÈÇ£‰πà MCP Server Â∞ÜÂèØ‰ª•ÈÄöËøá &lt;code&gt;http://localhost:8081/mcp&lt;/code&gt; ËÆøÈóÆ„ÄÇ&lt;/p&gt; 
 &lt;h4&gt;Claude Desktop ÈõÜÊàêÁ§∫‰æã&lt;/h4&gt; 
 &lt;p&gt;Ë¶ÅÂú® Claude Desktop ‰∏≠‰ΩøÁî® Prompt OptimizerÔºåÊÇ®ÈúÄË¶ÅÂú® Claude Desktop ÁöÑÈÖçÁΩÆÊñá‰ª∂‰∏≠Ê∑ªÂä†ÊúçÂä°ÈÖçÁΩÆ„ÄÇ&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;ÊâæÂà∞ Claude Desktop ÁöÑÈÖçÁΩÆÁõÆÂΩïÔºö&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Windows: &lt;code&gt;%APPDATA%\Claude\services&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;macOS: &lt;code&gt;~/Library/Application Support/Claude/services&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;Linux: &lt;code&gt;~/.config/Claude/services&lt;/code&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;ÁºñËæëÊàñÂàõÂª∫ &lt;code&gt;services.json&lt;/code&gt; Êñá‰ª∂ÔºåÊ∑ªÂä†‰ª•‰∏ãÂÜÖÂÆπÔºö&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "services": [
    {
      "name": "Prompt Optimizer",
      "url": "http://localhost:8081/mcp"
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;ËØ∑Á°Æ‰øùÂ∞Ü &lt;code&gt;localhost:8081&lt;/code&gt; ÊõøÊç¢‰∏∫ÊÇ®ÂÆûÈôÖÈÉ®ÁΩ≤ Prompt Optimizer ÁöÑÂú∞ÂùÄÂíåÁ´ØÂè£„ÄÇ&lt;/p&gt; 
 &lt;h4&gt;ÂèØÁî®Â∑•ÂÖ∑&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;optimize-user-prompt&lt;/strong&gt;: ‰ºòÂåñÁî®Êà∑ÊèêÁ§∫ËØç‰ª•ÊèêÈ´ò LLM ÊÄßËÉΩ&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;optimize-system-prompt&lt;/strong&gt;: ‰ºòÂåñÁ≥ªÁªüÊèêÁ§∫ËØç‰ª•ÊèêÈ´ò LLM ÊÄßËÉΩ&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;iterate-prompt&lt;/strong&gt;: ÂØπÂ∑≤ÁªèÊàêÁÜü/ÂÆåÂñÑÁöÑÊèêÁ§∫ËØçËøõË°åÂÆöÂêëËø≠‰ª£‰ºòÂåñ&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Êõ¥Â§öËØ¶ÁªÜ‰ø°ÊÅØÔºåËØ∑Êü•Áúã &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/mcp-server.md"&gt;MCP ÊúçÂä°Âô®Áî®Êà∑ÊåáÂçó&lt;/a&gt;„ÄÇ&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;‚öôÔ∏è APIÂØÜÈí•ÈÖçÁΩÆ&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;ÁÇπÂáªÊü•ÁúãAPIÂØÜÈí•ÈÖçÁΩÆÊñπÊ≥ï&lt;/summary&gt; 
 &lt;h3&gt;ÊñπÂºè‰∏ÄÔºöÈÄöËøáÁïåÈù¢ÈÖçÁΩÆÔºàÊé®ËçêÔºâ&lt;/h3&gt; 
 &lt;ol&gt; 
  &lt;li&gt;ÁÇπÂáªÁïåÈù¢Âè≥‰∏äËßíÁöÑ"‚öôÔ∏èËÆæÁΩÆ"ÊåâÈíÆ&lt;/li&gt; 
  &lt;li&gt;ÈÄâÊã©"Ê®°ÂûãÁÆ°ÁêÜ"ÈÄâÈ°πÂç°&lt;/li&gt; 
  &lt;li&gt;ÁÇπÂáªÈúÄË¶ÅÈÖçÁΩÆÁöÑÊ®°ÂûãÔºàÂ¶ÇOpenAI„ÄÅGemini„ÄÅDeepSeekÁ≠âÔºâ&lt;/li&gt; 
  &lt;li&gt;Âú®ÂºπÂá∫ÁöÑÈÖçÁΩÆÊ°Ü‰∏≠ËæìÂÖ•ÂØπÂ∫îÁöÑAPIÂØÜÈí•&lt;/li&gt; 
  &lt;li&gt;ÁÇπÂáª"‰øùÂ≠ò"Âç≥ÂèØ&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;ÊîØÊåÅÁöÑÊ®°ÂûãÔºöOpenAI„ÄÅGemini„ÄÅDeepSeek„ÄÅZhipuÊô∫Ë∞±„ÄÅSiliconFlow„ÄÅËá™ÂÆö‰πâAPIÔºàOpenAIÂÖºÂÆπÊé•Âè£Ôºâ&lt;/p&gt; 
 &lt;p&gt;Èô§‰∫ÜAPIÂØÜÈí•ÔºåÊÇ®ËøòÂèØ‰ª•Âú®Ê®°ÂûãÈÖçÁΩÆÁïåÈù¢‰∏∫ÊØè‰∏™Ê®°ÂûãÂçïÁã¨ËÆæÁΩÆÈ´òÁ∫ßLLMÂèÇÊï∞„ÄÇËøô‰∫õÂèÇÊï∞ÈÄöËøá‰∏Ä‰∏™Âêç‰∏∫ &lt;code&gt;llmParams&lt;/code&gt; ÁöÑÂ≠óÊÆµËøõË°åÈÖçÁΩÆÔºåÂÆÉÂÖÅËÆ∏ÊÇ®‰ª•ÈîÆÂÄºÂØπÁöÑÂΩ¢ÂºèÊåáÂÆöLLM SDKÊîØÊåÅÁöÑ‰ªª‰ΩïÂèÇÊï∞Ôºå‰ªéËÄåÊõ¥Á≤æÁªÜÂú∞ÊéßÂà∂Ê®°ÂûãË°å‰∏∫„ÄÇ&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;È´òÁ∫ßLLMÂèÇÊï∞ÈÖçÁΩÆÁ§∫‰æãÔºö&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;OpenAI/ÂÖºÂÆπAPI&lt;/strong&gt;: &lt;code&gt;{"temperature": 0.7, "max_tokens": 4096, "timeout": 60000}&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Gemini&lt;/strong&gt;: &lt;code&gt;{"temperature": 0.8, "maxOutputTokens": 2048, "topP": 0.95}&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;DeepSeek&lt;/strong&gt;: &lt;code&gt;{"temperature": 0.5, "top_p": 0.9, "frequency_penalty": 0.1}&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;ÊúâÂÖ≥ &lt;code&gt;llmParams&lt;/code&gt; ÁöÑÊõ¥ËØ¶ÁªÜËØ¥ÊòéÂíåÈÖçÁΩÆÊåáÂçóÔºåËØ∑ÂèÇÈòÖ &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/developer/llm-params-guide.md"&gt;LLMÂèÇÊï∞ÈÖçÁΩÆÊåáÂçó&lt;/a&gt;„ÄÇ&lt;/p&gt; 
 &lt;h3&gt;ÊñπÂºè‰∫åÔºöÈÄöËøáÁéØÂ¢ÉÂèòÈáèÈÖçÁΩÆ&lt;/h3&gt; 
 &lt;p&gt;DockerÈÉ®ÁΩ≤Êó∂ÈÄöËøá &lt;code&gt;-e&lt;/code&gt; ÂèÇÊï∞ÈÖçÁΩÆÁéØÂ¢ÉÂèòÈáèÔºö&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;-e VITE_OPENAI_API_KEY=your_key
-e VITE_GEMINI_API_KEY=your_key
-e VITE_DEEPSEEK_API_KEY=your_key
-e VITE_ZHIPU_API_KEY=your_key
-e VITE_SILICONFLOW_API_KEY=your_key
-e VITE_CUSTOM_API_KEY=your_custom_api_key
-e VITE_CUSTOM_API_BASE_URL=your_custom_api_base_url
-e VITE_CUSTOM_API_MODEL=your_custom_model_name
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Êú¨Âú∞ÂºÄÂèë&lt;/h2&gt; 
&lt;p&gt;ËØ¶ÁªÜÊñáÊ°£ÂèØÊü•Áúã &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/dev.md"&gt;ÂºÄÂèëÊñáÊ°£&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;ÁÇπÂáªÊü•ÁúãÊú¨Âú∞ÂºÄÂèëÂëΩ‰ª§&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 1. ÂÖãÈöÜÈ°πÁõÆ
git clone https://github.com/linshenkx/prompt-optimizer.git
cd prompt-optimizer

# 2. ÂÆâË£Ö‰æùËµñ
pnpm install

# 3. ÂêØÂä®ÂºÄÂèëÊúçÂä°
pnpm dev               # ‰∏ªÂºÄÂèëÂëΩ‰ª§ÔºöÊûÑÂª∫core/uiÂπ∂ËøêË°åwebÂ∫îÁî®
pnpm dev:web          # ‰ªÖËøêË°åwebÂ∫îÁî®
pnpm dev:fresh        # ÂÆåÊï¥ÈáçÁΩÆÂπ∂ÈáçÊñ∞ÂêØÂä®ÂºÄÂèëÁéØÂ¢É
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;üó∫Ô∏è ÂºÄÂèëË∑ØÁ∫ø&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Âü∫Á°ÄÂäüËÉΩÂºÄÂèë&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; WebÂ∫îÁî®ÂèëÂ∏É&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; ChromeÊèí‰ª∂ÂèëÂ∏É&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; ÂõΩÈôÖÂåñÊîØÊåÅ&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; ÊîØÊåÅÁ≥ªÁªüÊèêÁ§∫ËØç‰ºòÂåñÂíåÁî®Êà∑ÊèêÁ§∫ËØç‰ºòÂåñ&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Ê°åÈù¢Â∫îÁî®ÂèëÂ∏É&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; mcpÊúçÂä°ÂèëÂ∏É&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;ËØ¶ÁªÜÁöÑÈ°πÁõÆÁä∂ÊÄÅÂèØÊü•Áúã &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/project-status.md"&gt;È°πÁõÆÁä∂ÊÄÅÊñáÊ°£&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üìñ Áõ∏ÂÖ≥ÊñáÊ°£&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/README.md"&gt;ÊñáÊ°£Á¥¢Âºï&lt;/a&gt; - ÊâÄÊúâÊñáÊ°£ÁöÑÁ¥¢Âºï&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/developer/technical-development-guide.md"&gt;ÊäÄÊúØÂºÄÂèëÊåáÂçó&lt;/a&gt; - ÊäÄÊúØÊ†àÂíåÂºÄÂèëËßÑËåÉ&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/developer/llm-params-guide.md"&gt;LLMÂèÇÊï∞ÈÖçÁΩÆÊåáÂçó&lt;/a&gt; - È´òÁ∫ßLLMÂèÇÊï∞ÈÖçÁΩÆËØ¶ÁªÜËØ¥Êòé&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/developer/project-structure.md"&gt;È°πÁõÆÁªìÊûÑ&lt;/a&gt; - ËØ¶ÁªÜÁöÑÈ°πÁõÆÁªìÊûÑËØ¥Êòé&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/project/project-status.md"&gt;È°πÁõÆÁä∂ÊÄÅ&lt;/a&gt; - ÂΩìÂâçËøõÂ∫¶ÂíåËÆ°Âàí&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/project/prd.md"&gt;‰∫ßÂìÅÈúÄÊ±Ç&lt;/a&gt; - ‰∫ßÂìÅÈúÄÊ±ÇÊñáÊ°£&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/deployment/vercel.md"&gt;VercelÈÉ®ÁΩ≤ÊåáÂçó&lt;/a&gt; - VercelÈÉ®ÁΩ≤ËØ¶ÁªÜËØ¥Êòé&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://star-history.com/#linshenkx/prompt-optimizer&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=linshenkx/prompt-optimizer&amp;amp;type=Date&amp;amp;theme=dark"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=linshenkx/prompt-optimizer&amp;amp;type=Date"&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=linshenkx/prompt-optimizer&amp;amp;type=Date"&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;ÁÇπÂáªÊü•ÁúãÂ∏∏ËßÅÈóÆÈ¢òËß£Á≠î&lt;/summary&gt; 
 &lt;h3&gt;APIËøûÊé•ÈóÆÈ¢ò&lt;/h3&gt; 
 &lt;h4&gt;Q1: ‰∏∫‰ªÄ‰πàÈÖçÁΩÆÂ•ΩAPIÂØÜÈí•Âêé‰ªçÁÑ∂Êó†Ê≥ïËøûÊé•Âà∞Ê®°ÂûãÊúçÂä°Ôºü&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: Â§ßÂ§öÊï∞ËøûÊé•Â§±Ë¥•ÊòØÁî±&lt;strong&gt;Ë∑®ÂüüÈóÆÈ¢ò&lt;/strong&gt;ÔºàCORSÔºâÂØºËá¥ÁöÑ„ÄÇÁî±‰∫éÊú¨È°πÁõÆÊòØÁ∫ØÂâçÁ´ØÂ∫îÁî®ÔºåÊµèËßàÂô®Âá∫‰∫éÂÆâÂÖ®ËÄÉËôë‰ºöÈòªÊ≠¢Áõ¥Êé•ËÆøÈóÆ‰∏çÂêåÊ∫êÁöÑAPIÊúçÂä°„ÄÇÊ®°ÂûãÊúçÂä°Â¶ÇÊú™Ê≠£Á°ÆÈÖçÁΩÆCORSÁ≠ñÁï•Ôºå‰ºöÊãíÁªùÊù•Ëá™ÊµèËßàÂô®ÁöÑÁõ¥Êé•ËØ∑Ê±Ç„ÄÇ&lt;/p&gt; 
 &lt;h4&gt;Q2: Â¶Ç‰ΩïËß£ÂÜ≥Êú¨Âú∞OllamaÁöÑËøûÊé•ÈóÆÈ¢òÔºü&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: OllamaÂÆåÂÖ®ÊîØÊåÅOpenAIÊ†áÂáÜÊé•Âè£ÔºåÂè™ÈúÄÈÖçÁΩÆÊ≠£Á°ÆÁöÑË∑®ÂüüÁ≠ñÁï•Ôºö&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;ËÆæÁΩÆÁéØÂ¢ÉÂèòÈáè &lt;code&gt;OLLAMA_ORIGINS=*&lt;/code&gt; ÂÖÅËÆ∏‰ªªÊÑèÊù•Ê∫êÁöÑËØ∑Ê±Ç&lt;/li&gt; 
  &lt;li&gt;Â¶Ç‰ªçÊúâÈóÆÈ¢òÔºåËÆæÁΩÆ &lt;code&gt;OLLAMA_HOST=0.0.0.0:11434&lt;/code&gt; ÁõëÂê¨‰ªªÊÑèIPÂú∞ÂùÄ&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h4&gt;Q3: Â¶Ç‰ΩïËß£ÂÜ≥ÂïÜ‰∏öAPIÔºàÂ¶ÇNvidiaÁöÑDS API„ÄÅÂ≠óËäÇË∑≥Âä®ÁöÑÁÅ´Â±±APIÔºâÁöÑË∑®ÂüüÈóÆÈ¢òÔºü&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: Ëøô‰∫õÂπ≥Âè∞ÈÄöÂ∏∏Êúâ‰∏•Ê†ºÁöÑË∑®ÂüüÈôêÂà∂ÔºåÊé®Ëçê‰ª•‰∏ãËß£ÂÜ≥ÊñπÊ°àÔºö&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;‰ΩøÁî®Vercel‰ª£ÁêÜ&lt;/strong&gt;Ôºà‰æøÊç∑ÊñπÊ°àÔºâ&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;‰ΩøÁî®Âú®Á∫øÁâàÊú¨Ôºö&lt;a href="https://prompt.always200.com"&gt;prompt.always200.com&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;ÊàñËá™Ë°åÈÉ®ÁΩ≤Âà∞VercelÂπ≥Âè∞&lt;/li&gt; 
    &lt;li&gt;Âú®Ê®°ÂûãËÆæÁΩÆ‰∏≠ÂãæÈÄâ"‰ΩøÁî®Vercel‰ª£ÁêÜ"ÈÄâÈ°π&lt;/li&gt; 
    &lt;li&gt;ËØ∑Ê±ÇÊµÅÂêëÔºöÊµèËßàÂô®‚ÜíVercel‚ÜíÊ®°ÂûãÊúçÂä°Êèê‰æõÂïÜ&lt;/li&gt; 
    &lt;li&gt;ËØ¶ÁªÜÊ≠•È™§ËØ∑ÂèÇËÄÉ &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/deployment/vercel.md"&gt;VercelÈÉ®ÁΩ≤ÊåáÂçó&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;‰ΩøÁî®Ëá™ÈÉ®ÁΩ≤ÁöÑAPI‰∏≠ËΩ¨ÊúçÂä°&lt;/strong&gt;ÔºàÂèØÈù†ÊñπÊ°àÔºâ&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;ÈÉ®ÁΩ≤Â¶ÇOneAPIÁ≠âÂºÄÊ∫êAPIËÅöÂêà/‰ª£ÁêÜÂ∑•ÂÖ∑&lt;/li&gt; 
    &lt;li&gt;Âú®ËÆæÁΩÆ‰∏≠ÈÖçÁΩÆ‰∏∫Ëá™ÂÆö‰πâAPIÁ´ØÁÇπ&lt;/li&gt; 
    &lt;li&gt;ËØ∑Ê±ÇÊµÅÂêëÔºöÊµèËßàÂô®‚Üí‰∏≠ËΩ¨ÊúçÂä°‚ÜíÊ®°ÂûãÊúçÂä°Êèê‰æõÂïÜ&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h4&gt;Q4: Vercel‰ª£ÁêÜÊúâ‰ªÄ‰πàÁº∫ÁÇπÊàñÈ£éÈô©Ôºü&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: ‰ΩøÁî®Vercel‰ª£ÁêÜÂèØËÉΩ‰ºöËß¶ÂèëÊüê‰∫õÊ®°ÂûãÊúçÂä°Êèê‰æõÂïÜÁöÑÈ£éÊéßÊú∫Âà∂„ÄÇÈÉ®ÂàÜÂéÇÂïÜÂèØËÉΩ‰ºöÂ∞ÜÊù•Ëá™VercelÁöÑËØ∑Ê±ÇÂà§ÂÆö‰∏∫‰ª£ÁêÜË°å‰∏∫Ôºå‰ªéËÄåÈôêÂà∂ÊàñÊãíÁªùÊúçÂä°„ÄÇÂ¶ÇÈÅáÊ≠§ÈóÆÈ¢òÔºåÂª∫ËÆÆ‰ΩøÁî®Ëá™ÈÉ®ÁΩ≤ÁöÑ‰∏≠ËΩ¨ÊúçÂä°„ÄÇ&lt;/p&gt; 
 &lt;h4&gt;Q5: ÊàëÂ∑≤Ê≠£Á°ÆÈÖçÁΩÆÊú¨Âú∞Ê®°ÂûãÔºàÂ¶ÇOllamaÔºâÁöÑË∑®ÂüüÁ≠ñÁï•Ôºå‰∏∫‰ªÄ‰πà‰ΩøÁî®Âú®Á∫øÁâà‰æùÁÑ∂Êó†Ê≥ïËøûÊé•Ôºü&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: ËøôÊòØÁî±ÊµèËßàÂô®ÁöÑ&lt;strong&gt;Ê∑∑ÂêàÂÜÖÂÆπÔºàMixed ContentÔºâÂÆâÂÖ®Á≠ñÁï•&lt;/strong&gt;ÂØºËá¥ÁöÑ„ÄÇÂá∫‰∫éÂÆâÂÖ®ËÄÉËôëÔºåÊµèËßàÂô®‰ºöÈòªÊ≠¢ÂÆâÂÖ®ÁöÑHTTPSÈ°µÈù¢ÔºàÂ¶ÇÂú®Á∫øÁâàÔºâÂêë‰∏çÂÆâÂÖ®ÁöÑHTTPÂú∞ÂùÄÔºàÂ¶ÇÊÇ®ÁöÑÊú¨Âú∞OllamaÊúçÂä°ÔºâÂèëÈÄÅËØ∑Ê±Ç„ÄÇ&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Ëß£ÂÜ≥ÊñπÊ°à&lt;/strong&gt;Ôºö ‰∏∫‰∫ÜÁªïËøáÊ≠§ÈôêÂà∂ÔºåÊÇ®ÈúÄË¶ÅËÆ©Â∫îÁî®ÂíåAPIÂ§Ñ‰∫éÂêå‰∏ÄÁßçÂçèËÆÆ‰∏ãÔºà‰æãÂ¶ÇÔºåÈÉΩÊòØHTTPÔºâ„ÄÇÊé®Ëçê‰ª•‰∏ãÂá†ÁßçÊñπÂºèÔºö&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;strong&gt;‰ΩøÁî®Ê°åÈù¢Áâà&lt;/strong&gt;ÔºöÊ°åÈù¢Â∫îÁî®Ê≤°ÊúâÊµèËßàÂô®ÈôêÂà∂ÔºåÊòØËøûÊé•Êú¨Âú∞Ê®°ÂûãÊúÄÁ®≥ÂÆöÂèØÈù†ÁöÑÊñπÂºè„ÄÇ&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;dockerÈÉ®ÁΩ≤&lt;/strong&gt;ÔºödockerÈÉ®ÁΩ≤‰πüÊòØhttp&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;‰ΩøÁî®ChromeÊèí‰ª∂&lt;/strong&gt;ÔºöÊèí‰ª∂Âú®Êüê‰∫õÊÉÖÂÜµ‰∏ã‰πüÂèØ‰ª•ÁªïËøáÈÉ®ÂàÜÂÆâÂÖ®ÈôêÂà∂„ÄÇ&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;ü§ù ÂèÇ‰∏éË¥°ÁåÆ&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;ÁÇπÂáªÊü•ÁúãË¥°ÁåÆÊåáÂçó&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Fork Êú¨‰ªìÂ∫ì&lt;/li&gt; 
  &lt;li&gt;ÂàõÂª∫ÁâπÊÄßÂàÜÊîØ (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; 
  &lt;li&gt;Êèê‰∫§Êõ¥Êîπ (&lt;code&gt;git commit -m 'Ê∑ªÂä†Êüê‰∏™ÁâπÊÄß'&lt;/code&gt;)&lt;/li&gt; 
  &lt;li&gt;Êé®ÈÄÅÂà∞ÂàÜÊîØ (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; 
  &lt;li&gt;Êèê‰∫§ Pull Request&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;ÊèêÁ§∫Ôºö‰ΩøÁî®cursorÂ∑•ÂÖ∑ÂºÄÂèëÊó∂ÔºåÂª∫ËÆÆÂú®Êèê‰∫§Ââç:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;‰ΩøÁî®"code_review"ËßÑÂàôËøõË°å‰ª£Á†ÅÂÆ°Êü•&lt;/li&gt; 
  &lt;li&gt;ÊåâÁÖßÂÆ°Êü•Êä•ÂëäÊ†ºÂºèÊ£ÄÊü•: 
   &lt;ul&gt; 
    &lt;li&gt;ÂèòÊõ¥ÁöÑÊï¥‰Ωì‰∏ÄËá¥ÊÄß&lt;/li&gt; 
    &lt;li&gt;‰ª£Á†ÅË¥®ÈáèÂíåÂÆûÁé∞ÊñπÂºè&lt;/li&gt; 
    &lt;li&gt;ÊµãËØïË¶ÜÁõñÊÉÖÂÜµ&lt;/li&gt; 
    &lt;li&gt;ÊñáÊ°£ÂÆåÂñÑÁ®ãÂ∫¶&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Ê†πÊçÆÂÆ°Êü•ÁªìÊûúËøõË°å‰ºòÂåñÂêéÂÜçÊèê‰∫§&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;üëè Ë¥°ÁåÆËÄÖÂêçÂçï&lt;/h2&gt; 
&lt;p&gt;ÊÑüË∞¢ÊâÄÊúâ‰∏∫È°πÁõÆÂÅöÂá∫Ë¥°ÁåÆÁöÑÂºÄÂèëËÄÖÔºÅ&lt;/p&gt; 
&lt;a href="https://github.com/linshenkx/prompt-optimizer/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=linshenkx/prompt-optimizer" alt="Ë¥°ÁåÆËÄÖ"&gt; &lt;/a&gt; 
&lt;h2&gt;üìÑ ÂºÄÊ∫êÂçèËÆÆ&lt;/h2&gt; 
&lt;p&gt;Êú¨È°πÁõÆÈááÁî® &lt;a href="https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/LICENSE"&gt;MIT&lt;/a&gt; ÂçèËÆÆÂºÄÊ∫ê„ÄÇ&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Â¶ÇÊûúËøô‰∏™È°πÁõÆÂØπ‰Ω†ÊúâÂ∏ÆÂä©ÔºåËØ∑ËÄÉËôëÁªôÂÆÉ‰∏Ä‰∏™ Star ‚≠êÔ∏è&lt;/p&gt; 
&lt;h2&gt;üë• ËÅîÁ≥ªÊàë‰ª¨&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êèê‰∫§ Issue&lt;/li&gt; 
 &lt;li&gt;ÂèëËµ∑ Pull Request&lt;/li&gt; 
 &lt;li&gt;Âä†ÂÖ•ËÆ®ËÆ∫ÁªÑ&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>