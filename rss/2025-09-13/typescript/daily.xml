<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Daily Trending</title>
    <description>Daily Trending of TypeScript in GitHub</description>
    <pubDate>Fri, 12 Sep 2025 01:39:39 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>google-gemini/gemini-cli</title>
      <link>https://github.com/google-gemini/gemini-cli</link>
      <description>&lt;p&gt;An open-source AI agent that brings the power of Gemini directly into your terminal.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gemini CLI&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Gemini CLI CI" /&gt;&lt;/a&gt; &lt;a href="https://github.com/google-gemini/gemini-cli/actions/workflows/e2e.yml"&gt;&lt;img src="https://github.com/google-gemini/gemini-cli/actions/workflows/e2e.yml/badge.svg?sanitize=true" alt="Gemini CLI E2E" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@google/gemini-cli"&gt;&lt;img src="https://img.shields.io/npm/v/@google/gemini-cli" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/google-gemini/gemini-cli/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/google-gemini/gemini-cli" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/assets/gemini-screenshot.png" alt="Gemini CLI Screenshot" /&gt;&lt;/p&gt; 
&lt;p&gt;Gemini CLI is an open-source AI agent that brings the power of Gemini directly into your terminal. It provides lightweight access to Gemini, giving you the most direct path from your prompt to our model.&lt;/p&gt; 
&lt;h2&gt;üöÄ Why Gemini CLI?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üéØ Free tier&lt;/strong&gt;: 60 requests/min and 1,000 requests/day with personal Google account&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üß† Powerful Gemini 2.5 Pro&lt;/strong&gt;: Access to 1M token context window&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîß Built-in tools&lt;/strong&gt;: Google Search grounding, file operations, shell commands, web fetching&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîå Extensible&lt;/strong&gt;: MCP (Model Context Protocol) support for custom integrations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíª Terminal-first&lt;/strong&gt;: Designed for developers who live in the command line&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üõ°Ô∏è Open source&lt;/strong&gt;: Apache 2.0 licensed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üì¶ Installation&lt;/h2&gt; 
&lt;h3&gt;Quick Install&lt;/h3&gt; 
&lt;h4&gt;Run instantly with npx&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Using npx (no installation required)
npx https://github.com/google-gemini/gemini-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Install globally with npm&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Install globally with Homebrew (macOS/Linux)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install gemini-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;System Requirements&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js version 20 or higher&lt;/li&gt; 
 &lt;li&gt;macOS, Linux, or Windows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Release Cadence and Tags&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/releases.md"&gt;Releases&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Preview&lt;/h3&gt; 
&lt;p&gt;New preview releases will be published each week at UTC 2359 on Tuesdays. These releases will not have been fully vetted and may contain regressions or other outstanding issues. Please help us test and install with &lt;code&gt;preview&lt;/code&gt; tag.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli@preview
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Stable&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;New stable releases will be published each week at UTC 2000 on Tuesdays, this will be the full promotion of last week's &lt;code&gt;preview&lt;/code&gt; release + any bug fixes and validations. Use &lt;code&gt;latest&lt;/code&gt; tag.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Nightly&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;New releases will be published each week at UTC 0000 each day, This will be all changes from the main branch as represented at time of release. It should be assumed there are pending validations and issues. Use &lt;code&gt;nightly&lt;/code&gt; tag.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli@nightly
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üìã Key Features&lt;/h2&gt; 
&lt;h3&gt;Code Understanding &amp;amp; Generation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Query and edit large codebases&lt;/li&gt; 
 &lt;li&gt;Generate new apps from PDFs, images, or sketches using multimodal capabilities&lt;/li&gt; 
 &lt;li&gt;Debug issues and troubleshoot with natural language&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Automation &amp;amp; Integration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Automate operational tasks like querying pull requests or handling complex rebases&lt;/li&gt; 
 &lt;li&gt;Use MCP servers to connect new capabilities, including &lt;a href="https://github.com/GoogleCloudPlatform/vertex-ai-creative-studio/tree/main/experiments/mcp-genmedia"&gt;media generation with Imagen, Veo or Lyria&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Run non-interactively in scripts for workflow automation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Capabilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ground your queries with built-in &lt;a href="https://ai.google.dev/gemini-api/docs/grounding"&gt;Google Search&lt;/a&gt; for real-time information&lt;/li&gt; 
 &lt;li&gt;Conversation checkpointing to save and resume complex sessions&lt;/li&gt; 
 &lt;li&gt;Custom context files (GEMINI.md) to tailor behavior for your projects&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;GitHub Integration&lt;/h3&gt; 
&lt;p&gt;Integrate Gemini CLI directly into your GitHub workflows with &lt;a href="https://github.com/google-github-actions/run-gemini-cli"&gt;&lt;strong&gt;Gemini CLI GitHub Action&lt;/strong&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Pull Request Reviews&lt;/strong&gt;: Automated code review with contextual feedback and suggestions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Issue Triage&lt;/strong&gt;: Automated labeling and prioritization of GitHub issues based on content analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;On-demand Assistance&lt;/strong&gt;: Mention &lt;code&gt;@gemini-cli&lt;/code&gt; in issues and pull requests for help with debugging, explanations, or task delegation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Workflows&lt;/strong&gt;: Build automated, scheduled and on-demand workflows tailored to your team's needs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üîê Authentication Options&lt;/h2&gt; 
&lt;p&gt;Choose the authentication method that best fits your needs:&lt;/p&gt; 
&lt;h3&gt;Option 1: Login with Google (OAuth login using your Google Account)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;‚ú® Best for:&lt;/strong&gt; Individual developers as well as anyone who has a Gemini Code Assist License. (see &lt;a href="https://cloud.google.com/gemini/docs/quotas"&gt;quota limits and terms of service&lt;/a&gt; for details)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Free tier&lt;/strong&gt;: 60 requests/min and 1,000 requests/day&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gemini 2.5 Pro&lt;/strong&gt; with 1M token context window&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No API key management&lt;/strong&gt; - just sign in with your Google account&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic updates&lt;/strong&gt; to latest models&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Start Gemini CLI, then choose &lt;em&gt;Login with Google&lt;/em&gt; and follow the browser authentication flow when prompted&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;If you are using a paid Code Assist License from your organization, remember to set the Google Cloud Project&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Set your Google Cloud Project
export GOOGLE_CLOUD_PROJECT="YOUR_PROJECT_NAME"
gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Option 2: Gemini API Key&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;‚ú® Best for:&lt;/strong&gt; Developers who need specific model control or paid tier access&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Free tier&lt;/strong&gt;: 100 requests/day with Gemini 2.5 Pro&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model selection&lt;/strong&gt;: Choose specific Gemini models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Usage-based billing&lt;/strong&gt;: Upgrade for higher limits when needed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Get your key from https://aistudio.google.com/apikey
export GEMINI_API_KEY="YOUR_API_KEY"
gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Option 3: Vertex AI&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;‚ú® Best for:&lt;/strong&gt; Enterprise teams and production workloads&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise features&lt;/strong&gt;: Advanced security and compliance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: Higher rate limits with billing account&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Integration&lt;/strong&gt;: Works with existing Google Cloud infrastructure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Get your key from Google Cloud Console
export GOOGLE_API_KEY="YOUR_API_KEY"
export GOOGLE_GENAI_USE_VERTEXAI=true
gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Google Workspace accounts and other authentication methods, see the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/authentication.md"&gt;authentication guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üöÄ Getting Started&lt;/h2&gt; 
&lt;h3&gt;Basic Usage&lt;/h3&gt; 
&lt;h4&gt;Start in current directory&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Include multiple directories&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini --include-directories ../lib,../docs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Use specific model&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini -m gemini-2.5-flash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Non-interactive mode for scripts&lt;/h4&gt; 
&lt;p&gt;Get a simple text response:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini -p "Explain the architecture of this codebase"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more advanced scripting, including how to parse JSON and handle errors, use the &lt;code&gt;--output-format json&lt;/code&gt; flag to get structured output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini -p "Explain the architecture of this codebase" --output-format json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Quick Examples&lt;/h3&gt; 
&lt;h4&gt;Start a new project&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd new-project/
gemini
&amp;gt; Write me a Discord bot that answers questions using a FAQ.md file I will provide
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Analyze existing code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/google-gemini/gemini-cli
cd gemini-cli
gemini
&amp;gt; Give me a summary of all of the changes that went in yesterday
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üìö Documentation&lt;/h2&gt; 
&lt;h3&gt;Getting Started&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/index.md"&gt;&lt;strong&gt;Quickstart Guide&lt;/strong&gt;&lt;/a&gt; - Get up and running quickly&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/authentication.md"&gt;&lt;strong&gt;Authentication Setup&lt;/strong&gt;&lt;/a&gt; - Detailed auth configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/configuration.md"&gt;&lt;strong&gt;Configuration Guide&lt;/strong&gt;&lt;/a&gt; - Settings and customization&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/keyboard-shortcuts.md"&gt;&lt;strong&gt;Keyboard Shortcuts&lt;/strong&gt;&lt;/a&gt; - Productivity tips&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Core Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/commands.md"&gt;&lt;strong&gt;Commands Reference&lt;/strong&gt;&lt;/a&gt; - All slash commands (&lt;code&gt;/help&lt;/code&gt;, &lt;code&gt;/chat&lt;/code&gt;, &lt;code&gt;/mcp&lt;/code&gt;, etc.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/checkpointing.md"&gt;&lt;strong&gt;Checkpointing&lt;/strong&gt;&lt;/a&gt; - Save and resume conversations&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/memory.md"&gt;&lt;strong&gt;Memory Management&lt;/strong&gt;&lt;/a&gt; - Using GEMINI.md context files&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/token-caching.md"&gt;&lt;strong&gt;Token Caching&lt;/strong&gt;&lt;/a&gt; - Optimize token usage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Tools &amp;amp; Extensions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/index.md"&gt;&lt;strong&gt;Built-in Tools Overview&lt;/strong&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/file-system.md"&gt;File System Operations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/shell.md"&gt;Shell Commands&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/web-fetch.md"&gt;Web Fetch &amp;amp; Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/multi-file.md"&gt;Multi-file Operations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/mcp-server.md"&gt;&lt;strong&gt;MCP Server Integration&lt;/strong&gt;&lt;/a&gt; - Extend with custom tools&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/extension.md"&gt;&lt;strong&gt;Custom Extensions&lt;/strong&gt;&lt;/a&gt; - Build your own commands&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Topics&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/architecture.md"&gt;&lt;strong&gt;Architecture Overview&lt;/strong&gt;&lt;/a&gt; - How Gemini CLI works&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/ide-integration.md"&gt;&lt;strong&gt;IDE Integration&lt;/strong&gt;&lt;/a&gt; - VS Code companion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/sandbox.md"&gt;&lt;strong&gt;Sandboxing &amp;amp; Security&lt;/strong&gt;&lt;/a&gt; - Safe execution environments&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/deployment.md"&gt;&lt;strong&gt;Enterprise Deployment&lt;/strong&gt;&lt;/a&gt; - Docker, system-wide config&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/telemetry.md"&gt;&lt;strong&gt;Telemetry &amp;amp; Monitoring&lt;/strong&gt;&lt;/a&gt; - Usage tracking&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/core/tools-api.md"&gt;&lt;strong&gt;Tools API Development&lt;/strong&gt;&lt;/a&gt; - Create custom tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configuration &amp;amp; Customization&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/configuration.md"&gt;&lt;strong&gt;Settings Reference&lt;/strong&gt;&lt;/a&gt; - All configuration options&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/themes.md"&gt;&lt;strong&gt;Theme Customization&lt;/strong&gt;&lt;/a&gt; - Visual customization&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/gemini-ignore.md"&gt;&lt;strong&gt;.gemini Directory&lt;/strong&gt;&lt;/a&gt; - Project-specific settings&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/configuration.md#environment-variables"&gt;&lt;strong&gt;Environment Variables&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Troubleshooting &amp;amp; Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/troubleshooting.md"&gt;&lt;strong&gt;Troubleshooting Guide&lt;/strong&gt;&lt;/a&gt; - Common issues and solutions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/troubleshooting.md#frequently-asked-questions"&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt; - Quick answers&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;/bug&lt;/code&gt; command to report issues directly from the CLI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Using MCP Servers&lt;/h3&gt; 
&lt;p&gt;Configure MCP servers in &lt;code&gt;~/.gemini/settings.json&lt;/code&gt; to extend Gemini CLI with custom tools:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; @github List my open pull requests
&amp;gt; @slack Send a summary of today's commits to #dev channel
&amp;gt; @database Run a query to find inactive users
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/mcp-server.md"&gt;MCP Server Integration guide&lt;/a&gt; for setup instructions.&lt;/p&gt; 
&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Gemini CLI is fully open source (Apache 2.0), and we encourage the community to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Report bugs and suggest features&lt;/li&gt; 
 &lt;li&gt;Improve documentation&lt;/li&gt; 
 &lt;li&gt;Submit code improvements&lt;/li&gt; 
 &lt;li&gt;Share your MCP servers and extensions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See our &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for development setup, coding standards, and how to submit pull requests.&lt;/p&gt; 
&lt;p&gt;Check our &lt;a href="https://github.com/orgs/google-gemini/projects/11/"&gt;Official Roadmap&lt;/a&gt; for planned features and priorities.&lt;/p&gt; 
&lt;h2&gt;üìñ Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/ROADMAP.md"&gt;Official Roadmap&lt;/a&gt;&lt;/strong&gt; - See what's coming next&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.npmjs.com/package/@google/gemini-cli"&gt;NPM Package&lt;/a&gt;&lt;/strong&gt; - Package registry&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/google-gemini/gemini-cli/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/strong&gt; - Report bugs or request features&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/google-gemini/gemini-cli/security/advisories"&gt;Security Advisories&lt;/a&gt;&lt;/strong&gt; - Security updates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Uninstall&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/Uninstall.md"&gt;Uninstall Guide&lt;/a&gt; for removal instructions.&lt;/p&gt; 
&lt;h2&gt;üìÑ Legal&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;License&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/LICENSE"&gt;Apache License 2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terms of Service&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tos-privacy.md"&gt;Terms &amp;amp; Privacy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/SECURITY.md"&gt;Security Policy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; Built with ‚ù§Ô∏è by Google and the open source community &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vitejs/vite</title>
      <link>https://github.com/vitejs/vite</link>
      <description>&lt;p&gt;Next generation frontend tooling. It's fast!&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://vite.dev" target="_blank" rel="noopener noreferrer"&gt; &lt;img width="180" src="https://vite.dev/logo.svg?sanitize=true" alt="Vite logo" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://npmjs.com/package/vite"&gt;&lt;img src="https://img.shields.io/npm/v/vite.svg?sanitize=true" alt="npm package" /&gt;&lt;/a&gt; &lt;a href="https://nodejs.org/en/about/previous-releases"&gt;&lt;img src="https://img.shields.io/node/v/vite.svg?sanitize=true" alt="node compatibility" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vitejs/vite/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/vitejs/vite/actions/workflows/ci.yml/badge.svg?branch=main" alt="build status" /&gt;&lt;/a&gt; &lt;a href="https://pr.new/vitejs/vite"&gt;&lt;img src="https://developer.stackblitz.com/img/start_pr_dark_small.svg?sanitize=true" alt="Start new PR in StackBlitz Codeflow" /&gt;&lt;/a&gt; &lt;a href="https://chat.vite.dev"&gt;&lt;img src="https://img.shields.io/badge/chat-discord-blue?style=flat&amp;amp;logo=discord" alt="discord chat" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;h1&gt;Vite ‚ö°&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Next Generation Frontend Tooling&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;üí° Instant Server Start&lt;/li&gt; 
 &lt;li&gt;‚ö°Ô∏è Lightning Fast HMR&lt;/li&gt; 
 &lt;li&gt;üõ†Ô∏è Rich Features&lt;/li&gt; 
 &lt;li&gt;üì¶ Optimized Build&lt;/li&gt; 
 &lt;li&gt;üî© Universal Plugin Interface&lt;/li&gt; 
 &lt;li&gt;üîë Fully Typed APIs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Vite (French word for "quick", pronounced &lt;a href="https://cdn.jsdelivr.net/gh/vitejs/vite@main/docs/public/vite.mp3"&gt;&lt;code&gt;/vit/&lt;/code&gt;&lt;/a&gt;, like "veet") is a new breed of frontend build tooling that significantly improves the frontend development experience. It consists of two major parts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;A dev server that serves your source files over &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules"&gt;native ES modules&lt;/a&gt;, with &lt;a href="https://vite.dev/guide/features.html"&gt;rich built-in features&lt;/a&gt; and astonishingly fast &lt;a href="https://vite.dev/guide/features.html#hot-module-replacement"&gt;Hot Module Replacement (HMR)&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;A &lt;a href="https://vite.dev/guide/build.html"&gt;build command&lt;/a&gt; that bundles your code with &lt;a href="https://rollupjs.org"&gt;Rollup&lt;/a&gt;, pre-configured to output highly optimized static assets for production.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In addition, Vite is highly extensible via its &lt;a href="https://vite.dev/guide/api-plugin.html"&gt;Plugin API&lt;/a&gt; and &lt;a href="https://vite.dev/guide/api-javascript.html"&gt;JavaScript API&lt;/a&gt; with full typing support.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://vite.dev"&gt;Read the Docs to Learn More&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Packages&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package&lt;/th&gt; 
   &lt;th align="left"&gt;Version (click for changelogs)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/vitejs/vite/main/packages/vite"&gt;vite&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/vitejs/vite/main/packages/vite/CHANGELOG.md"&gt;&lt;img src="https://img.shields.io/npm/v/vite.svg?label=%20" alt="vite version" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/vitejs/vite/main/packages/plugin-legacy"&gt;@vitejs/plugin-legacy&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/vitejs/vite/main/packages/plugin-legacy/CHANGELOG.md"&gt;&lt;img src="https://img.shields.io/npm/v/@vitejs/plugin-legacy.svg?label=%20" alt="plugin-legacy version" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/vitejs/vite/main/packages/create-vite"&gt;create-vite&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/vitejs/vite/main/packages/create-vite/CHANGELOG.md"&gt;&lt;img src="https://img.shields.io/npm/v/create-vite.svg?label=%20" alt="create-vite version" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/vitejs/vite/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/vitejs/vite/main/LICENSE"&gt;MIT&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;a target="_blank" href="https://github.com/sponsors/yyx990803"&gt; &lt;img alt="sponsors" src="https://sponsors.vuejs.org/vite.svg?v2" /&gt; &lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>medusajs/medusa</title>
      <link>https://github.com/medusajs/medusa</link>
      <description>&lt;p&gt;The world's most flexible commerce platform.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://www.medusajs.com"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://user-images.githubusercontent.com/59018053/229103275-b5e482bb-4601-46e6-8142-244f531cebdb.svg" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://user-images.githubusercontent.com/59018053/229103726-e5b529a3-9b3f-4970-8a1f-c6af37f087bf.svg" /&gt; 
   &lt;img alt="Medusa logo" src="https://user-images.githubusercontent.com/59018053/229103726-e5b529a3-9b3f-4970-8a1f-c6af37f087bf.svg?sanitize=true" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt; Medusa &lt;/h1&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://docs.medusajs.com"&gt;Documentation&lt;/a&gt; | &lt;a href="https://www.medusajs.com"&gt;Website&lt;/a&gt; &lt;/h4&gt; 
&lt;p align="center"&gt; Building blocks for digital commerce &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/medusajs/medusa/raw/develop/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="Medusa is released under the MIT license." /&gt; &lt;/a&gt; &lt;a href="https://github.com/medusajs/medusa/raw/develop/CONTRIBUTING.md"&gt; &lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat" alt="PRs welcome!" /&gt; &lt;/a&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=medusajs"&gt; &lt;img src="https://img.shields.io/twitter/follow/medusajs.svg?label=Follow%20@medusajs" alt="Follow @medusajs" /&gt; &lt;/a&gt;&lt;a href="https://discord.gg/medusajs"&gt; &lt;img src="https://img.shields.io/badge/chat-on%20discord-7289DA.svg?sanitize=true" alt="Discord Chat" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit the &lt;a href="https://docs.medusajs.com/learn"&gt;Documentation&lt;/a&gt; to set up a Medusa application.&lt;/p&gt; 
&lt;h2&gt;What is Medusa&lt;/h2&gt; 
&lt;p&gt;Medusa is an ecommerce platform with a built-in framework for customization that allows you to build custom commerce applications without reinventing core commerce logic. The framework and modules can be used to build advanced B2B or DTC ecommerce stores, marketplaces, PoS systems, service businesses, or any product that needs foundational commerce primitives. All commerce modules are open-source and freely available on npm.&lt;/p&gt; 
&lt;p&gt;Learn more about &lt;a href="https://docs.medusajs.com/learn/advanced-development/architecture/overview"&gt;Medusa‚Äôs architecture&lt;/a&gt; and &lt;a href="https://docs.medusajs.com/resources/commerce-modules"&gt;commerce modules&lt;/a&gt; in the Docs.&lt;/p&gt; 
&lt;h2&gt;Upgrades &amp;amp; Integrations&lt;/h2&gt; 
&lt;p&gt;Follow the &lt;a href="https://github.com/medusajs/medusa/releases"&gt;Release Notes&lt;/a&gt; to keep your Medusa project up-to-date.&lt;/p&gt; 
&lt;p&gt;Check out all &lt;a href="https://medusajs.com/integrations/"&gt;available Medusa integrations&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community &amp;amp; Contributions&lt;/h2&gt; 
&lt;p&gt;The community and core team are available in &lt;a href="https://github.com/medusajs/medusa/discussions"&gt;GitHub Discussions&lt;/a&gt;, where you can ask for support, discuss roadmap, and share ideas.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href="https://github.com/medusajs/medusa/raw/develop/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt; describes how to contribute to the codebase and Docs.&lt;/p&gt; 
&lt;p&gt;Join our &lt;a href="https://discord.com/invite/medusajs"&gt;Discord server&lt;/a&gt; to meet other community members.&lt;/p&gt; 
&lt;h2&gt;Other channels&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/medusajs/medusa/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/medusajs"&gt;Community Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/medusajs"&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.linkedin.com/company/medusajs"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medusajs.com/blog/"&gt;Medusa Blog&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href="https://github.com/medusajs/medusa/raw/develop/LICENSE"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ruvnet/claude-flow</title>
      <link>https://github.com/ruvnet/claude-flow</link>
      <description>&lt;p&gt;üåä The leading agent orchestration platform for Claude. Deploy intelligent multi-agent swarms, coordinate autonomous workflows, and build conversational AI systems. Features enterprise-grade architecture, distributed swarm intelligence, RAG integration, and native Claude Code support via MCP protocol. Ranked #1 in agent-based frameworks.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üåä Claude-Flow v2.0.0 Alpha: AI Orchestration Platform&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/github/stars/ruvnet/claude-flow?style=for-the-badge&amp;amp;logo=github&amp;amp;color=gold" alt="üåü Star on GitHub" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-flow"&gt;&lt;img src="https://img.shields.io/npm/dt/claude-flow?style=for-the-badge&amp;amp;logo=npm&amp;amp;color=blue&amp;amp;label=Downloads" alt="üìà Downloads" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-flow"&gt;&lt;img src="https://img.shields.io/npm/v/claude-flow?style=for-the-badge&amp;amp;logo=npm&amp;amp;color=green&amp;amp;label=v2.0.0" alt="üì¶ Latest Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/badge/Claude%20Code-Optimized-green?style=for-the-badge&amp;amp;logo=anthropic" alt="‚ö° Claude Code" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/dfxmpwkG2D"&gt;&lt;img src="https://img.shields.io/badge/Agentics-Foundation-crimson?style=for-the-badge&amp;amp;logo=openai" alt="üèõÔ∏è Agentics Foundation" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/badge/Hive--Mind-AI%20Coordination-purple?style=for-the-badge&amp;amp;logo=swarm" alt="üêù Hive-Mind" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/badge/Neural-87%20MCP%20Tools-blue?style=for-the-badge&amp;amp;logo=pytorch" alt="üß† Neural" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow?style=for-the-badge&amp;amp;logo=opensourceinitiative" alt="üõ°Ô∏è MIT License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üåü &lt;strong&gt;Overview&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Claude-Flow v2 Alpha&lt;/strong&gt; is an enterprise-grade AI orchestration platform that reimagines how developers build with AI. By combining &lt;strong&gt;hive-mind swarm intelligence&lt;/strong&gt;, &lt;strong&gt;neural pattern recognition&lt;/strong&gt;, and &lt;strong&gt;87 advanced MCP tools&lt;/strong&gt;, Claude-Flow enables unprecedented AI-powered development workflows.&lt;/p&gt; 
&lt;h3&gt;üéØ &lt;strong&gt;Key Features&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üêù Hive-Mind Intelligence&lt;/strong&gt;: Queen-led AI coordination with specialized worker agents&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üß† Neural Networks&lt;/strong&gt;: 27+ cognitive models with WASM SIMD acceleration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîß 87 MCP Tools&lt;/strong&gt;: Comprehensive toolkit for swarm orchestration, memory, and automation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîÑ Dynamic Agent Architecture (DAA)&lt;/strong&gt;: Self-organizing agents with fault tolerance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíæ SQLite Memory System&lt;/strong&gt;: Persistent &lt;code&gt;.swarm/memory.db&lt;/code&gt; with 12 specialized tables&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ü™ù Advanced Hooks System&lt;/strong&gt;: Automated workflows with pre/post operation hooks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìä GitHub Integration&lt;/strong&gt;: 6 specialized modes for repository management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üåê Flow Nexus Cloud Platform&lt;/strong&gt;: E2B sandboxes, AI swarms, challenges, and marketplace integration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üî• &lt;strong&gt;Revolutionary AI Coordination&lt;/strong&gt;: Build faster, smarter, and more efficiently with AI-powered development orchestration&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üåê &lt;strong&gt;Flow Nexus Cloud Platform&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NEW&lt;/strong&gt;: Claude-Flow v2.0.0 now includes &lt;strong&gt;Flow Nexus integration&lt;/strong&gt; - a cloud-powered AI development platform featuring:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;E2B Sandboxes&lt;/strong&gt;: Secure isolated environments for Node.js, Python, React, Next.js&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI Swarms&lt;/strong&gt;: Deploy multi-agent systems in cloud infrastructure&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Neural Training&lt;/strong&gt;: Distributed machine learning with custom model deployment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Challenges &amp;amp; Marketplace&lt;/strong&gt;: Coding challenges with rUv credit rewards and template marketplace&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workflow Automation&lt;/strong&gt;: Event-driven automation with message queue processing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìö &lt;strong&gt;Complete documentation&lt;/strong&gt;: Visit &lt;a href="https://flow-nexus.ruv.io"&gt;flow-nexus.ruv.io&lt;/a&gt; for comprehensive guides, tutorials, and API reference. Also see issue # &lt;a href="https://github.com/ruvnet/claude-flow/issues/732"&gt;https://github.com/ruvnet/claude-flow/issues/732&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;‚ö° &lt;strong&gt;Try v2.0.0 Alpha in 4 Commands&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;üìã &lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js 18+&lt;/strong&gt; (LTS recommended)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;npm 9+&lt;/strong&gt; or equivalent package manager&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows users&lt;/strong&gt;: See &lt;a href="https://github.com/ruvnet/claude-code-flow/raw/main/docs/windows-installation.md"&gt;Windows Installation Guide&lt;/a&gt; for special instructions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;‚ö†Ô∏è &lt;strong&gt;IMPORTANT&lt;/strong&gt;: Claude Code must be installed first:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Install Claude Code globally
npm install -g @anthropic-ai/claude-code

# 2. (Optional) Skip permissions check for faster setup
# Only use if you understand the security implications
claude --dangerously-skip-permissions
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;üí° &lt;strong&gt;Windows Note&lt;/strong&gt;: If you encounter SQLite errors, Claude Flow will automatically use in-memory storage. For persistent storage options, see our &lt;a href="https://github.com/ruvnet/claude-code-flow/raw/main/docs/windows-installation.md"&gt;Windows guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;üéØ &lt;strong&gt;Instant Alpha Testing&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Initialize Claude Flow with enhanced MCP setup (auto-configures permissions!)
npx claude-flow@alpha init --force

# 2. Explore all revolutionary capabilities  
npx claude-flow@alpha --help

# 3a. Quick AI coordination (recommended for most tasks)
npx claude-flow@alpha swarm "build me a REST API" --claude

# 3b. OR launch the full hive-mind system (for complex projects)
npx claude-flow@alpha hive-mind wizard
npx claude-flow@alpha hive-mind spawn "build enterprise system" --claude
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üöÄ &lt;strong&gt;Quick Start with Flow Nexus&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Initialize Flow Nexus only (minimal setup)
npx claude-flow init --flow-nexus

# 2. Register and login (use MCP tools in Claude Code)
mcp__flow-nexus__user_register({ email: "your@email.com", password: "secure" })
mcp__flow-nexus__user_login({ email: "your@email.com", password: "secure" })

# 3. Deploy your first cloud swarm
mcp__flow-nexus__swarm_init({ topology: "mesh", maxAgents: 5 })
mcp__flow-nexus__sandbox_create({ template: "node", name: "api-dev" })
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ü§î &lt;strong&gt;Swarm vs Hive-Mind: Which to Use?&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;swarm&lt;/code&gt; Command&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;hive-mind&lt;/code&gt; Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Best For&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Quick tasks, single objectives&lt;/td&gt; 
   &lt;td&gt;Complex projects, persistent sessions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Setup&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Instant - no configuration needed&lt;/td&gt; 
   &lt;td&gt;Interactive wizard setup&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Session&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Temporary coordination&lt;/td&gt; 
   &lt;td&gt;Persistent with resume capability&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Memory&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Task-scoped&lt;/td&gt; 
   &lt;td&gt;Project-wide with SQLite storage&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Agents&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Auto-spawned for task&lt;/td&gt; 
   &lt;td&gt;Manual control with specializations&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Use When&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;"Build X", "Fix Y", "Analyze Z"&lt;/td&gt; 
   &lt;td&gt;Multi-feature projects, team coordination&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Quick Rule:&lt;/strong&gt; Start with &lt;code&gt;swarm&lt;/code&gt; for most tasks. Use &lt;code&gt;hive-mind&lt;/code&gt; when you need persistent sessions or complex multi-agent coordination.&lt;/p&gt; 
&lt;h2&gt;üéØ &lt;strong&gt;Typical Workflows - Your "Happy Path" Guide&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;New to Claude-Flow? Start Here!&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Confused about &lt;code&gt;.hive-mind&lt;/code&gt; and &lt;code&gt;.swarm&lt;/code&gt; directories? Not sure when to create new hives? Here are the most common workflow patterns:&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;üöÄ Pattern 1: Single Feature Development&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Initialize once per feature/task
npx claude-flow@alpha init --force
npx claude-flow@alpha hive-mind spawn "Implement user authentication" --claude

# Continue working on SAME feature (reuse existing hive)
npx claude-flow@alpha hive-mind status
npx claude-flow@alpha memory query "authentication" --recent
npx claude-flow@alpha swarm "Add password reset functionality" --continue-session
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;üèóÔ∏è Pattern 2: Multi-Feature Project&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Project-level initialization (once per project)
npx claude-flow@alpha init --force --project-name "my-app"

# Feature 1: Authentication (new hive)
npx claude-flow@alpha hive-mind spawn "auth-system" --namespace auth --claude

# Feature 2: User management (separate hive)  
npx claude-flow@alpha hive-mind spawn "user-management" --namespace users --claude

# Resume Feature 1 later (use session ID from spawn output)
npx claude-flow@alpha hive-mind resume session-xxxxx-xxxxx
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;üîç Pattern 3: Research &amp;amp; Analysis&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start research session
npx claude-flow@alpha hive-mind spawn "Research microservices patterns" --agents researcher,analyst --claude

# Continue research in SAME session
npx claude-flow@alpha memory stats  # See what's been learned
npx claude-flow@alpha swarm "Deep dive into API gateway patterns" --continue-session
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;ü§î When Should I Create a New Hive?&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Situation&lt;/th&gt; 
   &lt;th&gt;Action&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Same objective/feature&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Continue existing hive&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npx claude-flow@alpha hive-mind resume &amp;lt;session-id&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;New feature in same project&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Create new hive with namespace&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npx claude-flow@alpha hive-mind spawn "new-feature" --namespace feature-name&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Completely different project&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;New directory + init&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;mkdir new-project &amp;amp;&amp;amp; cd new-project &amp;amp;&amp;amp; npx claude-flow@alpha init&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Experimenting/testing&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Temporary hive&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npx claude-flow@alpha hive-mind spawn "experiment" --temp&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;strong&gt;üìÅ Understanding "Empty" Directories&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Don't panic if directories seem empty!&lt;/strong&gt; Claude-Flow uses SQLite databases that may not show files in directory listings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Check what's actually stored (even if directories look empty)
npx claude-flow@alpha memory stats        # See memory data
npx claude-flow@alpha memory list         # List all namespaces  
npx claude-flow@alpha hive-mind status    # See active hives

# Your project structure after initialization:
# .hive-mind/     &amp;lt;- Contains config.json + SQLite session data
# .swarm/         &amp;lt;- Contains memory.db (SQLite database)
# memory/         &amp;lt;- Agent-specific memories (created when agents spawn)
# coordination/   &amp;lt;- Active workflow files (created during tasks)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;üîÑ Continuing Previous Work&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# See what you were working on
npx claude-flow@alpha hive-mind status
npx claude-flow@alpha memory query --recent --limit 5

# List all sessions to find the one you want
npx claude-flow@alpha hive-mind sessions

# Resume specific session by ID
npx claude-flow@alpha hive-mind resume session-xxxxx-xxxxx
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;ü™ù &lt;strong&gt;Advanced Hooks System&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Automated Workflow Enhancement&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Claude-Flow v2.0.0 introduces a powerful hooks system that automates coordination and enhances every operation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Hooks automatically trigger on operations
npx claude-flow@alpha init --force  # Auto-configures MCP servers &amp;amp; hooks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Available Hooks&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;Pre-Operation Hooks&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-task&lt;/code&gt;&lt;/strong&gt;: Auto-assigns agents based on task complexity&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-search&lt;/code&gt;&lt;/strong&gt;: Caches searches for improved performance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-edit&lt;/code&gt;&lt;/strong&gt;: Validates files and prepares resources&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-command&lt;/code&gt;&lt;/strong&gt;: Security validation before execution&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Post-Operation Hooks&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;post-edit&lt;/code&gt;&lt;/strong&gt;: Auto-formats code using language-specific tools&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;post-task&lt;/code&gt;&lt;/strong&gt;: Trains neural patterns from successful operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;post-command&lt;/code&gt;&lt;/strong&gt;: Updates memory with operation context&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;notification&lt;/code&gt;&lt;/strong&gt;: Real-time progress updates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Session Hooks&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;session-start&lt;/code&gt;&lt;/strong&gt;: Restores previous context automatically&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;session-end&lt;/code&gt;&lt;/strong&gt;: Generates summaries and persists state&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;session-restore&lt;/code&gt;&lt;/strong&gt;: Loads memory from previous sessions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Hook Configuration&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;// .claude/settings.json (auto-configured)
{
  "hooks": {
    "preEditHook": {
      "command": "npx",
      "args": ["claude-flow", "hooks", "pre-edit", "--file", "${file}", "--auto-assign-agents", "true"],
      "alwaysRun": false
    },
    "postEditHook": {
      "command": "npx", 
      "args": ["claude-flow", "hooks", "post-edit", "--file", "${file}", "--format", "true"],
      "alwaysRun": true
    },
    "sessionEndHook": {
      "command": "npx",
      "args": ["claude-flow", "hooks", "session-end", "--generate-summary", "true"],
      "alwaysRun": true
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Using Hooks in Claude Code&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Hooks integrate seamlessly with Claude Code's workflow:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic Triggering&lt;/strong&gt;: Hooks fire automatically during Claude Code operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Context Awareness&lt;/strong&gt;: Each hook receives relevant context (file paths, commands, etc.)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Non-Blocking&lt;/strong&gt;: Hooks run asynchronously to maintain performance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configurable&lt;/strong&gt;: Enable/disable specific hooks as needed&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;strong&gt;Hook Examples&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Manual hook execution
npx claude-flow hooks pre-task --description "Build REST API" --auto-spawn-agents

# Post-edit with formatting
npx claude-flow hooks post-edit --file "src/api.js" --format --train-neural

# Session management
npx claude-flow hooks session-end --generate-summary --persist-state
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Fixing Hook Variable Interpolation&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;If you're experiencing issues with &lt;code&gt;${file}&lt;/code&gt; or &lt;code&gt;${command}&lt;/code&gt; variables not working in your hooks (common with Claude Code 1.0.51+), use the &lt;code&gt;fix-hook-variables&lt;/code&gt; command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Fix all found settings.json files
npx claude-flow@alpha fix-hook-variables

# Fix specific file
npx claude-flow@alpha fix-hook-variables .claude/settings.json

# Create test configuration
npx claude-flow@alpha fix-hook-variables --test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command automatically transforms legacy variable syntax to working environment variables:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;${file}&lt;/code&gt; ‚Üí &lt;code&gt;$CLAUDE_EDITED_FILE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;${command}&lt;/code&gt; ‚Üí &lt;code&gt;$CLAUDE_COMMAND&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;${tool}&lt;/code&gt; ‚Üí &lt;code&gt;$CLAUDE_TOOL&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üêù &lt;strong&gt;Revolutionary Hive-Mind Intelligence&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Queen-Led AI Coordination&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Claude-Flow v2.0.0 introduces groundbreaking hive-mind architecture where a &lt;strong&gt;Queen AI&lt;/strong&gt; coordinates specialized worker agents in perfect harmony.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Deploy intelligent swarm coordination
npx claude-flow@alpha swarm "Build a full-stack application" --strategy development

# Launch hive-mind with specific specializations
npx claude-flow@alpha hive-mind spawn "Create microservices architecture" --agents 8 --claude
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;ü§ñ Intelligent Agent Types&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üëë Queen Agent&lt;/strong&gt;: Master coordinator and decision maker&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üèóÔ∏è Architect Agents&lt;/strong&gt;: System design and technical architecture&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíª Coder Agents&lt;/strong&gt;: Implementation and development&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üß™ Tester Agents&lt;/strong&gt;: Quality assurance and validation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìä Analyst Agents&lt;/strong&gt;: Data analysis and insights&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîç Researcher Agents&lt;/strong&gt;: Information gathering and analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üõ°Ô∏è Security Agents&lt;/strong&gt;: Security auditing and compliance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üöÄ DevOps Agents&lt;/strong&gt;: Deployment and infrastructure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;‚ö° &lt;strong&gt;87 Advanced MCP Tools&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;üß† Neural &amp;amp; Cognitive Tools&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Neural pattern recognition and training
npx claude-flow@alpha neural train --pattern coordination --epochs 50
npx claude-flow@alpha neural predict --model cognitive-analysis
npx claude-flow@alpha cognitive analyze --behavior "development workflow"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;üíæ SQLite Memory Systems&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Cross-session memory management with SQLite persistence
npx claude-flow@alpha memory store "project-context" "Full-stack app requirements"
npx claude-flow@alpha memory query "authentication" --namespace sparc
npx claude-flow@alpha memory stats  # Shows 12 specialized tables
npx claude-flow@alpha memory export backup.json --namespace default
npx claude-flow@alpha memory import project-memory.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ü™ü &lt;strong&gt;Windows Users&lt;/strong&gt;: SQLite will automatically fallback to in-memory storage if native modules fail. All features work normally, but data won't persist between sessions. See &lt;a href="https://github.com/ruvnet/claude-code-flow/raw/main/docs/windows-installation.md"&gt;Windows guide&lt;/a&gt; for persistent storage options.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;strong&gt;üîÑ Workflow Orchestration&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Advanced workflow automation
npx claude-flow@alpha workflow create --name "CI/CD Pipeline" --parallel
npx claude-flow@alpha batch process --items "test,build,deploy" --concurrent
npx claude-flow@alpha pipeline create --config advanced-deployment.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üß† &lt;strong&gt;Neural Network Capabilities&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Cognitive Computing Engine&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Powered by 27+ neural models optimized with WASM SIMD acceleration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Train coordination patterns
npx claude-flow@alpha neural train --pattern coordination --data "workflow.json"

# Real-time predictions
npx claude-flow@alpha neural predict --model task-optimizer --input "current-state.json"

# Analyze cognitive behavior
npx claude-flow@alpha cognitive analyze --behavior "development-patterns"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Neural Features&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Pattern Recognition&lt;/strong&gt;: Learns from successful operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Adaptive Learning&lt;/strong&gt;: Improves performance over time&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Transfer Learning&lt;/strong&gt;: Apply knowledge across domains&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model Compression&lt;/strong&gt;: Efficient storage and execution&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ensemble Models&lt;/strong&gt;: Combine multiple neural networks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Explainable AI&lt;/strong&gt;: Understand decision-making process&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üîß &lt;strong&gt;DAA MCP Endpoints&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Dynamic Agent Architecture&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Complete programmatic control over agent lifecycle and coordination:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Create specialized agents
npx claude-flow@alpha daa agent-create --type "specialized-researcher" \
  --capabilities "[\"deep-analysis\", \"pattern-recognition\"]" \
  --resources "{\"memory\": 2048, \"compute\": \"high\"}"

# Match capabilities to tasks
npx claude-flow@alpha daa capability-match \
  --task-requirements "[\"security-analysis\", \"performance-optimization\"]"

# Manage agent lifecycle
npx claude-flow@alpha daa lifecycle-manage --agentId "agent-123" --action "scale-up"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;DAA Features&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Resource Allocation&lt;/strong&gt;: Dynamic CPU/memory management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Inter-Agent Communication&lt;/strong&gt;: Message passing and coordination&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Consensus Mechanisms&lt;/strong&gt;: Democratic decision making&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fault Tolerance&lt;/strong&gt;: Self-healing with automatic recovery&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance Optimization&lt;/strong&gt;: Real-time bottleneck resolution&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;MCP Tool Categories&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;üêù Swarm Orchestration&lt;/strong&gt; (15 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;swarm_init&lt;/code&gt;, &lt;code&gt;agent_spawn&lt;/code&gt;, &lt;code&gt;task_orchestrate&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;swarm_monitor&lt;/code&gt;, &lt;code&gt;topology_optimize&lt;/code&gt;, &lt;code&gt;load_balance&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;coordination_sync&lt;/code&gt;, &lt;code&gt;swarm_scale&lt;/code&gt;, &lt;code&gt;swarm_destroy&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;üß† Neural &amp;amp; Cognitive&lt;/strong&gt; (12 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;neural_train&lt;/code&gt;, &lt;code&gt;neural_predict&lt;/code&gt;, &lt;code&gt;pattern_recognize&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cognitive_analyze&lt;/code&gt;, &lt;code&gt;learning_adapt&lt;/code&gt;, &lt;code&gt;neural_compress&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ensemble_create&lt;/code&gt;, &lt;code&gt;transfer_learn&lt;/code&gt;, &lt;code&gt;neural_explain&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;üíæ Memory Management&lt;/strong&gt; (10 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;memory_usage&lt;/code&gt;, &lt;code&gt;memory_search&lt;/code&gt;, &lt;code&gt;memory_persist&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;memory_namespace&lt;/code&gt;, &lt;code&gt;memory_backup&lt;/code&gt;, &lt;code&gt;memory_restore&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;memory_compress&lt;/code&gt;, &lt;code&gt;memory_sync&lt;/code&gt;, &lt;code&gt;memory_analytics&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SQLite Backend&lt;/strong&gt;: Persistent &lt;code&gt;.swarm/memory.db&lt;/code&gt; with 12 specialized tables&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;üìä Performance &amp;amp; Monitoring&lt;/strong&gt; (10 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;performance_report&lt;/code&gt;, &lt;code&gt;bottleneck_analyze&lt;/code&gt;, &lt;code&gt;token_usage&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;benchmark_run&lt;/code&gt;, &lt;code&gt;metrics_collect&lt;/code&gt;, &lt;code&gt;trend_analysis&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;health_check&lt;/code&gt;, &lt;code&gt;diagnostic_run&lt;/code&gt;, &lt;code&gt;usage_stats&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;üîÑ Workflow Automation&lt;/strong&gt; (10 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;workflow_create&lt;/code&gt;, &lt;code&gt;workflow_execute&lt;/code&gt;, &lt;code&gt;workflow_export&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;automation_setup&lt;/code&gt;, &lt;code&gt;pipeline_create&lt;/code&gt;, &lt;code&gt;scheduler_manage&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;trigger_setup&lt;/code&gt;, &lt;code&gt;batch_process&lt;/code&gt;, &lt;code&gt;parallel_execute&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;üì¶ GitHub Integration&lt;/strong&gt; (6 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;github_repo_analyze&lt;/code&gt;, &lt;code&gt;github_pr_manage&lt;/code&gt;, &lt;code&gt;github_issue_track&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;github_release_coord&lt;/code&gt;, &lt;code&gt;github_workflow_auto&lt;/code&gt;, &lt;code&gt;github_code_review&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;ü§ñ Dynamic Agents&lt;/strong&gt; (6 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;daa_agent_create&lt;/code&gt;, &lt;code&gt;daa_capability_match&lt;/code&gt;, &lt;code&gt;daa_resource_alloc&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;daa_lifecycle_manage&lt;/code&gt;, &lt;code&gt;daa_communication&lt;/code&gt;, &lt;code&gt;daa_consensus&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;üõ°Ô∏è System &amp;amp; Security&lt;/strong&gt; (8 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;security_scan&lt;/code&gt;, &lt;code&gt;backup_create&lt;/code&gt;, &lt;code&gt;restore_system&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;config_manage&lt;/code&gt;, &lt;code&gt;features_detect&lt;/code&gt;, &lt;code&gt;log_analysis&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;üìä GitHub Integration&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# GitHub workflow orchestration and coordination
npx claude-flow@alpha github gh-coordinator analyze --analysis-type security
npx claude-flow@alpha github pr-manager review --multi-reviewer --ai-powered
npx claude-flow@alpha github release-manager coord --version 2.0.0 --auto-changelog
npx claude-flow@alpha github repo-architect optimize --structure-analysis
npx claude-flow@alpha github issue-tracker manage --project-coordination
npx claude-flow@alpha github sync-coordinator align --multi-package
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üõ°Ô∏è &lt;strong&gt;Seamless Claude Code Integration&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Auto-MCP Server Setup&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;v2.0.0 Alpha automatically configures MCP servers for seamless Claude Code integration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Automatic MCP integration (happens during init)
‚úÖ claude-flow MCP server configured
‚úÖ ruv-swarm MCP server configured  
‚úÖ 87 tools available in Claude Code
‚úÖ --dangerously-skip-permissions set as default
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Enhanced SPARC Workflows&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Advanced SPARC development with neural enhancement
npx claude-flow@alpha sparc mode --type "neural-tdd" --auto-learn
npx claude-flow@alpha sparc workflow --phases "all" --ai-guided --memory-enhanced
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üß† &lt;strong&gt;Cognitive Computing Features&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;üéØ Neural Pattern Recognition&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;27+ Cognitive Models&lt;/strong&gt;: Adaptive learning from successful operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pattern Analysis&lt;/strong&gt;: Real-time behavior analysis and optimization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Decision Tracking&lt;/strong&gt;: Complete audit trail of AI decisions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance Learning&lt;/strong&gt;: Continuous improvement from past executions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;üîÑ Self-Healing Systems&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Automatic error recovery and optimization
npx claude-flow@alpha health check --components all --auto-heal
npx claude-flow@alpha fault tolerance --strategy retry-with-learning
npx claude-flow@alpha bottleneck analyze --auto-optimize
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;üíæ Advanced Memory Architecture&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;SQLite Persistence&lt;/strong&gt;: Robust &lt;code&gt;.swarm/memory.db&lt;/code&gt; storage with 12 specialized tables&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cross-Session Persistence&lt;/strong&gt;: Remember context across Claude Code sessions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Namespace Management&lt;/strong&gt;: Organized memory with hierarchical access&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced Schema&lt;/strong&gt;: Agent interactions, training data, performance metrics, and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Memory Compression&lt;/strong&gt;: Efficient storage of large coordination contexts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Distributed Sync&lt;/strong&gt;: Share memory across multiple AI instances&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üìä &lt;strong&gt;Performance Metrics&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;üèÜ Industry-Leading Results&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;‚úÖ 84.8% SWE-Bench Solve Rate&lt;/strong&gt;: Superior problem-solving through hive-mind coordination&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚úÖ 32.3% Token Reduction&lt;/strong&gt;: Efficient task breakdown reduces costs significantly&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚úÖ 2.8-4.4x Speed Improvement&lt;/strong&gt;: Parallel coordination maximizes throughput&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚úÖ 87 MCP Tools&lt;/strong&gt;: Most comprehensive AI tool suite available&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚úÖ Zero-Config Setup&lt;/strong&gt;: Automatic MCP integration with Claude Code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;üöÄ Available Capabilities&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Check memory system performance
npx claude-flow@alpha memory stats
npx claude-flow@alpha memory list

# Test GitHub coordination modes
npx claude-flow@alpha github gh-coordinator --help
npx claude-flow@alpha github pr-manager --help

# Workflow orchestration
npx claude-flow@alpha workflow create --name "Development Pipeline" --parallel
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üéÆ &lt;strong&gt;Advanced Usage Examples&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;üèóÔ∏è Full-Stack Development&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Deploy complete development swarm
npx claude-flow@alpha hive-mind spawn "Build e-commerce platform with React, Node.js, and PostgreSQL" \
  --agents 10 \
  --strategy parallel \
  --memory-namespace ecommerce

# Monitor progress in real-time
npx claude-flow@alpha swarm monitor --dashboard --real-time
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;üî¨ Research &amp;amp; Analysis&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Deploy research swarm with neural enhancement
npx claude-flow@alpha swarm "Research AI safety in autonomous systems" \
  --strategy research \
  --neural-patterns enabled \
  --memory-compression high

# Analyze results with cognitive computing
npx claude-flow@alpha cognitive analyze --target research-results
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;üõ°Ô∏è Security &amp;amp; Compliance&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Automated security analysis with AI coordination
npx claude-flow@alpha github gh-coordinator analyze --analysis-type security --target ./src
npx claude-flow@alpha github repo-architect optimize --security-focused --compliance SOC2
npx claude-flow@alpha hive-mind spawn "security audit and compliance review" --claude
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üèóÔ∏è &lt;strong&gt;Alpha Architecture Overview&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;üêù Hive-Mind Coordination Layer&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                    üëë Queen Agent                       ‚îÇ
‚îÇ              (Master Coordinator)                      ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ  üèóÔ∏è Architect ‚îÇ üíª Coder ‚îÇ üß™ Tester ‚îÇ üîç Research ‚îÇ üõ°Ô∏è Security ‚îÇ
‚îÇ      Agent    ‚îÇ   Agent  ‚îÇ   Agent   ‚îÇ    Agent    ‚îÇ    Agent    ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ           üß† Neural Pattern Recognition Layer           ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ              üíæ Distributed Memory System               ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ            ‚ö° 87 MCP Tools Integration Layer            ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ              üõ°Ô∏è Claude Code Integration                 ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;üîÑ Coordination Strategies&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Hierarchical&lt;/strong&gt;: Queen-led with specialized worker agents&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mesh&lt;/strong&gt;: Peer-to-peer coordination for complex tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hybrid&lt;/strong&gt;: Dynamic strategy selection based on task complexity&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Neural-Enhanced&lt;/strong&gt;: AI-optimized coordination patterns&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üõ†Ô∏è &lt;strong&gt;Alpha Installation &amp;amp; Setup&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;üöÄ Quick Alpha Installation&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Global installation (recommended for testing)
npm install -g claude-flow@alpha

# Or use NPX for instant testing
npx claude-flow@alpha init --force

# Verify installation
claude-flow --version  # Should show 2.0.0-alpha.53
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;üîß Enhanced Configuration&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Initialize with full alpha features
npx claude-flow@alpha init --force --hive-mind --neural-enhanced

# Configure Claude Code integration
npx claude-flow@alpha mcp setup --auto-permissions --87-tools

# Test hive-mind coordination
npx claude-flow@alpha hive-mind test --agents 5 --coordination-test
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üìã &lt;strong&gt;Alpha Command Reference&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;For complete command documentation, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx claude-flow@alpha --help          # Main help
npx claude-flow@alpha help &amp;lt;command&amp;gt;  # Detailed command help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Key Commands:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Hive-Mind&lt;/strong&gt;: &lt;code&gt;hive-mind wizard&lt;/code&gt;, &lt;code&gt;hive-mind spawn&lt;/code&gt;, &lt;code&gt;hive-mind status&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Neural&lt;/strong&gt;: &lt;code&gt;neural train&lt;/code&gt;, &lt;code&gt;neural predict&lt;/code&gt;, &lt;code&gt;cognitive analyze&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Memory&lt;/strong&gt;: &lt;code&gt;memory store&lt;/code&gt;, &lt;code&gt;memory query&lt;/code&gt;, &lt;code&gt;memory stats&lt;/code&gt;, &lt;code&gt;memory export/import&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub&lt;/strong&gt;: &lt;code&gt;github &amp;lt;mode&amp;gt;&lt;/code&gt; (6 specialized modes available)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workflows&lt;/strong&gt;: &lt;code&gt;workflow create&lt;/code&gt;, &lt;code&gt;batch process&lt;/code&gt;, &lt;code&gt;pipeline create&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üìö &lt;strong&gt;Additional Documentation&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Core Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/API.md"&gt;Complete API Reference&lt;/a&gt; - Comprehensive API documentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/CLI.md"&gt;CLI Commands Guide&lt;/a&gt; - All command-line options&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/ARCHITECTURE.md"&gt;Architecture Overview&lt;/a&gt; - System design and internals&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/examples/"&gt;Examples Directory&lt;/a&gt; - Code examples and demos&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;New Features (v2.0.0)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/GIT_CHECKPOINT_HOOKS.md"&gt;üîí Git Checkpoint System&lt;/a&gt; - Automatic Git checkpoints for Claude Code sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/REAL_PERFORMANCE_TRACKING.md"&gt;üìä Real Performance Tracking&lt;/a&gt; - Actual metrics collection and analysis&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/windows-installation.md"&gt;ü™ü Windows Installation&lt;/a&gt; - Special instructions for Windows users&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Integration Guides&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/mcp-setup.md"&gt;MCP Server Setup&lt;/a&gt; - Model Context Protocol configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/claude-code-integration.md"&gt;Claude Code Integration&lt;/a&gt; - Enhanced AI workflows&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/github-workflows.md"&gt;GitHub Workflows&lt;/a&gt; - Repository automation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üìÑ &lt;strong&gt;License&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;MIT License - see &lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/LICENSE"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Alpha Disclaimer&lt;/strong&gt;: This is an alpha release intended for testing and feedback. Use in production environments is not recommended.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üéâ &lt;strong&gt;Alpha Credits&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üß† Hive-Mind Architecture&lt;/strong&gt;: Inspired by natural swarm intelligence&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚ö° Neural Computing&lt;/strong&gt;: Advanced AI coordination patterns&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üõ°Ô∏è Claude Code Integration&lt;/strong&gt;: Seamless AI development workflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üöÄ Performance Optimization&lt;/strong&gt;: 2.8-4.4x speed improvements through parallel coordination&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;&lt;strong&gt;üöÄ Ready to experience the future of AI development?&lt;/strong&gt;&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;npx claude-flow@alpha init --force
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Join the alpha testing revolution!&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/ruvnet/claude-flow/tree/claude-flow-v2.0.0"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Alpha%20Branch-blue?style=for-the-badge&amp;amp;logo=github" alt="GitHub" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-flow/v/alpha"&gt;&lt;img src="https://img.shields.io/badge/NPM-Alpha%20Release-orange?style=for-the-badge&amp;amp;logo=npm" alt="NPM Alpha" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/dfxmpwkG2D"&gt;&lt;img src="https://img.shields.io/badge/Discord-Agentics%20Community-purple?style=for-the-badge&amp;amp;logo=discord" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;h2&gt;Star History&lt;/h2&gt; 
 &lt;a href="https://www.star-history.com/#ruvnet/claude-flow&amp;amp;Date"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date" /&gt; 
   &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;&lt;strong&gt;Built with ‚ù§Ô∏è by &lt;a href="https://github.com/ruvnet"&gt;rUv&lt;/a&gt; | Powered by Revolutionary AI&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;v2.0.0 Alpha - The Future of AI Orchestration&lt;/em&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>angular/components</title>
      <link>https://github.com/angular/components</link>
      <description>&lt;p&gt;Component infrastructure and Material Design components for Angular&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Official components for Angular&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/@angular/cdk"&gt;&lt;img src="https://badge.fury.io/js/%40angular%2Fcdk.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://circleci.com/gh/angular/components"&gt;&lt;img src="https://circleci.com/gh/angular/components.svg?style=svg" alt="Build status" /&gt;&lt;/a&gt; &lt;a href="https://gitter.im/angular/material2?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge"&gt;&lt;img src="https://badges.gitter.im/angular/components.svg?sanitize=true" alt="Gitter" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The Angular team builds and maintains both common UI components and tools to help you build your own custom components. The team maintains several npm packages.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Docs&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@angular/cdk&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Library that helps you author custom UI components with common interaction patterns&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://material.angular.dev/cdk/categories"&gt;Docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@angular/material&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://material.io"&gt;Material Design&lt;/a&gt; UI components for Angular applications&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://material.angular.dev"&gt;Docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@angular/google-maps&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Angular components built on top of the &lt;a href="https://developers.google.com/maps/documentation/javascript/tutorial"&gt;Google Maps JavaScript API&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/angular/components/raw/main/src/google-maps/README.md"&gt;Docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@angular/youtube-player&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Angular component built on top of the &lt;a href="https://developers.google.com/youtube/iframe_api_reference"&gt;YouTube Player API&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/angular/components/raw/main/src/youtube-player/README.md"&gt;Docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Quick links&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://material.angular.dev"&gt;Documentation, demos, and guides&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/angular/components/main/FAQ.md"&gt;Frequently Asked Questions&lt;/a&gt; | &lt;a href="https://groups.google.com/forum/#!forum/angular-material2"&gt;Community Google group&lt;/a&gt; | &lt;a href="https://github.com/angular/components/raw/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; | &lt;a href="https://stackblitz.com/fork/components-issue"&gt;StackBlitz Template&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;See our &lt;a href="https://material.angular.dev/guide/getting-started"&gt;Getting Started Guide&lt;/a&gt; if you're building your first project with Angular Material.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you'd like to contribute, please follow our &lt;a href="https://github.com/angular/components/raw/main/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt;. Please see our &lt;a href="https://github.com/angular/components/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22"&gt;&lt;code&gt;help wanted&lt;/code&gt;&lt;/a&gt; label for a list of issues with good opportunities for contribution. You can also use the &lt;a href="https://github.com/angular/components/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22+label%3A%22good+first+issue%22"&gt;&lt;code&gt;good first issue&lt;/code&gt;&lt;/a&gt; label to find issues if you are just starting to contribute to the project.&lt;/p&gt; 
&lt;h2&gt;About the team&lt;/h2&gt; 
&lt;p&gt;The Angular Components team is part of the Angular team at Google. The team includes both Google employees and community contributors from around the globe.&lt;/p&gt; 
&lt;p&gt;Our team has two primary goals:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Build high-quality UI components that developers can drop into existing applications&lt;/li&gt; 
 &lt;li&gt;Provide tools that help developers build their own custom components with common interaction patterns&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;What do we mean by "high-quality" components?&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Internationalized and accessible so that all users can use them.&lt;/li&gt; 
 &lt;li&gt;Straightforward APIs that don't confuse developers.&lt;/li&gt; 
 &lt;li&gt;Behave as expected across a wide variety of use-cases without bugs.&lt;/li&gt; 
 &lt;li&gt;Behavior is well-tested with both unit and integration tests.&lt;/li&gt; 
 &lt;li&gt;Customizable within the bounds of the Material Design specification.&lt;/li&gt; 
 &lt;li&gt;Performance cost is minimized.&lt;/li&gt; 
 &lt;li&gt;Code is clean and well-documented to serve as an example for Angular developers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Browser and screen reader support&lt;/h2&gt; 
&lt;p&gt;The Angular Components team supports the most recent two versions of all major browsers: Chrome (including Android), Firefox, Safari (including iOS), and Edge.&lt;/p&gt; 
&lt;p&gt;We aim for great user experience with the following screen readers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: NVDA and JAWS with FF / Chrome.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: VoiceOver with Safari / Chrome.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;iOS&lt;/strong&gt;: VoiceOver with Safari&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Android&lt;/strong&gt;: Android Accessibility Suite (formerly TalkBack) with Chrome.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chrome OS&lt;/strong&gt;: ChromeVox with Chrome.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>vercel/examples</title>
      <link>https://github.com/vercel/examples</link>
      <description>&lt;p&gt;Enjoy our curated collection of examples and solutions. Use these patterns to build your own robust and scalable applications.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://vercel.com"&gt; &lt;img src="https://assets.vercel.com/image/upload/v1588805858/repositories/vercel/logo.png" height="96" /&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h3 align="center"&gt;&lt;a href="https://vercel.com"&gt;Vercel Examples&lt;/a&gt;&lt;/h3&gt;
&lt;a href="https://vercel.com"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vercel/examples/main/solutions"&gt;Solutions&lt;/a&gt; ‚Äì Demos, reference architecture, and best practices&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vercel/examples/main/starter"&gt;Starter&lt;/a&gt; ‚Äì Functional applications which can act as a starting point&lt;/li&gt; 
 &lt;li&gt;And more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Vercel Templates&lt;/h2&gt; 
&lt;p&gt;Multiple examples are being featured in &lt;a href="https://vercel.com/templates"&gt;Vercel's Templates&lt;/a&gt;, visit that page for more advanced filtering options.&lt;/p&gt; 
&lt;h3&gt;For Vercelians&lt;/h3&gt; 
&lt;p&gt;Examples that have front matter metadata will create a new Draft template in &lt;a href="https://app.contentful.com"&gt;Contentful&lt;/a&gt;, for more steps on how to publish a template, read &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/internal/publishing-templates.md"&gt;Publishing Templates&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Adding a new example&lt;/h2&gt; 
&lt;p&gt;To quickly start contributing with a new example, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm i
pnpm new-example
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the script above isn't used, make sure the example complies with the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It must have a &lt;code&gt;.gitignore&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/.gitignore"&gt;plop-templates/example/.gitignore&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;It must have a &lt;code&gt;package.json&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/package.json"&gt;plop-templates/example/package.json&lt;/a&gt; (usage of Next.js is optional). The license should be &lt;code&gt;MIT&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;It must have a &lt;code&gt;README.md&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/README.md"&gt;plop-templates/example/README.md&lt;/a&gt;. The example has to be able to include a demo URL (the Vercel team will deploy it!) and if it requires environment variables, it must have a &lt;code&gt;.env.example&lt;/code&gt; file and instructions on how to set them up. Take &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/edge-middleware/bot-protection-datadome/README.md"&gt;bot-protection-datadome&lt;/a&gt; as an example. 
  &lt;ul&gt; 
   &lt;li&gt;To customize the Vercel Deploy Button take a look at the &lt;a href="https://vercel.com/docs/deploy-button"&gt;docs&lt;/a&gt;, useful if the deployment has required environment variables.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;If using Next.js, it must have a &lt;code&gt;.eslintrc.json&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/.eslintrc.json"&gt;plop-templates/example/.eslintrc.json&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;All Next.js examples should be using the same styling and layout provided by &lt;code&gt;@vercel/examples-ui&lt;/code&gt;, its usage can be seen in the &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example"&gt;plop template&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Adding a template&lt;/h3&gt; 
&lt;p&gt;If you would like the example to be featured in &lt;a href="https://vercel.com/templates"&gt;vercel.com/templates&lt;/a&gt; then also add the front matter metadata to the top of the readme, like in &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/edge-middleware/bot-protection-datadome/README.md"&gt;bot-protection-datadome&lt;/a&gt;. To know all the possible values for each metadata take a look at &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/internal/fields.json"&gt;&lt;code&gt;internal/fields.json&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to add related templates to your template, copy the &lt;code&gt;slug&lt;/code&gt; from the other template into the &lt;code&gt;relatedTemplates&lt;/code&gt; field, for example for &lt;a href="https://vercel.com/templates/next.js/monorepo-turborepo"&gt;vercel.com/templates/next.js/monorepo-turborepo&lt;/a&gt; the slug is &lt;code&gt;monorepo-turborepo&lt;/code&gt;, as written in &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/solutions/monorepo/README.md"&gt;solutions/monorepo/README.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;The pre-commit hook&lt;/h3&gt; 
&lt;p&gt;We use &lt;a href="https://typicode.github.io/husky/#/"&gt;Husky&lt;/a&gt; to manage the pre-commit &lt;a href="https://git-scm.com/docs/githooks"&gt;Git hook&lt;/a&gt; in this repo. Husky configures hooks automatically during install, so you don't need to do anything special to get them working, but if it fails to install, you can run the following command to install it manually:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm run prepare
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Code changes automatically go through Prettier and ESLint when you make a commit, &lt;strong&gt;please do not skip these steps&lt;/strong&gt; unless they're broken and in that case let us known by creating an issue.&lt;/p&gt; 
&lt;h2&gt;Read the Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://vercel.com/docs"&gt;Vercel Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nextjs.org/docs"&gt;Next.js Docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you have any questions or suggestions about the docs, feel free to &lt;a href="https://github.com/vercel/examples/discussions"&gt;open a discussion&lt;/a&gt;, or &lt;a href="https://github.com/vercel/examples/pulls"&gt;submit a PR&lt;/a&gt; with your suggestions!&lt;/p&gt; 
&lt;h2&gt;Provide Feedback&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vercel/examples/discussions"&gt;Start a Discussion&lt;/a&gt; with a question, piece of feedback, or idea you want to share with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vercel/examples/issues"&gt;Open an Issue&lt;/a&gt; if you believe you've encountered a bug that you want to flag for the team.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>CodebuffAI/codebuff</title>
      <link>https://github.com/CodebuffAI/codebuff</link>
      <description>&lt;p&gt;Generate code from the terminal!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Codebuff&lt;/h1&gt; 
&lt;p&gt;Codebuff is an &lt;strong&gt;open-source AI coding assistant&lt;/strong&gt; that edits your codebase through natural language instructions. Instead of using one model for everything, it coordinates specialized agents that work together to understand your project and make precise changes.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/CodebuffAI/codebuff/main/assets/codebuff-vs-claude-code.png" alt="Codebuff vs Claude Code" width="400" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Codebuff beats Claude Code at 61% vs 53% on &lt;a href="https://raw.githubusercontent.com/CodebuffAI/codebuff/main/evals/README.md"&gt;our evals&lt;/a&gt; across 175+ coding tasks over multiple open-source repos that simulate real-world tasks.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/CodebuffAI/codebuff/main/assets/demo.gif" alt="Codebuff Demo" /&gt;&lt;/p&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;p&gt;When you ask Codebuff to "add authentication to my API," it might invoke:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;A &lt;strong&gt;File Explorer Agent&lt;/strong&gt; to scan your codebase to understand the architecture and find relevant files&lt;/li&gt; 
 &lt;li&gt;A &lt;strong&gt;Planner Agent&lt;/strong&gt; to plan which files need changes and in what order&lt;/li&gt; 
 &lt;li&gt;An &lt;strong&gt;Editor Agent&lt;/strong&gt; to make precise edits&lt;/li&gt; 
 &lt;li&gt;A &lt;strong&gt;Reviewer Agent&lt;/strong&gt; to validate changes&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/CodebuffAI/codebuff/main/assets/multi-agents.png" alt="Codebuff Multi-Agents" width="250" /&gt; 
&lt;/div&gt; 
&lt;p&gt;This multi-agent approach gives you better context understanding, more accurate edits, and fewer errors compared to single-model tools.&lt;/p&gt; 
&lt;h2&gt;CLI: Install and start coding&lt;/h2&gt; 
&lt;p&gt;Install:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g codebuff
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd your-project
codebuff
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then just tell Codebuff what you want and it handles the rest:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;"Fix the SQL injection vulnerability in user registration"&lt;/li&gt; 
 &lt;li&gt;"Add rate limiting to all API endpoints"&lt;/li&gt; 
 &lt;li&gt;"Refactor the database connection code for better performance"&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Codebuff will find the right files, makes changes across your codebase, and runs tests to make sure nothing breaks.&lt;/p&gt; 
&lt;h2&gt;Create custom agents&lt;/h2&gt; 
&lt;p&gt;To get started building your own agents, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;codebuff init-agents
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can write agent definition files that give you maximum control over agent behavior.&lt;/p&gt; 
&lt;p&gt;Implement your workflows by specifying tools, which agents can be spawned, and prompts. We even have TypeScript generators for more programmatic control.&lt;/p&gt; 
&lt;p&gt;For example, here's a &lt;code&gt;git-committer&lt;/code&gt; agent that creates git commits based on the current git state. Notice that it runs &lt;code&gt;git diff&lt;/code&gt; and &lt;code&gt;git log&lt;/code&gt; to analyze changes, but then hands control over to the LLM to craft a meaningful commit message and perform the actual commit.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;export default {
  id: 'git-committer',
  displayName: 'Git Committer',
  model: 'openai/gpt-5-nano',
  toolNames: ['read_files', 'run_terminal_command', 'end_turn'],

  instructionsPrompt:
    'You create meaningful git commits by analyzing changes, reading relevant files for context, and crafting clear commit messages that explain the "why" behind changes.',

  async *handleSteps() {
    // Analyze what changed
    yield { tool: 'run_terminal_command', command: 'git diff' }
    yield { tool: 'run_terminal_command', command: 'git log --oneline -5' }

    // Stage files and create commit with good message
    yield 'STEP_ALL'
  },
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;SDK: Run agents in production&lt;/h2&gt; 
&lt;p&gt;Install the &lt;a href="https://www.npmjs.com/package/@codebuff/sdk"&gt;SDK package&lt;/a&gt; -- note this is different than the CLI codebuff package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install @codebuff/sdk
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Import the client and run agents!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { CodebuffClient } from '@codebuff/sdk'

// 1. Initialize the client
const client = new CodebuffClient({
  apiKey: 'your-api-key',
  cwd: '/path/to/your/project',
  onError: (error) =&amp;gt; console.error('Codebuff error:', error.message),
})

// 2. Do a coding task...
const result = await client.run({
  agent: 'base', // Codebuff's base coding agent
  prompt: 'Add comprehensive error handling to all API endpoints',
  handleEvent: (event) =&amp;gt; {
    console.log('Progress', event)
  },
})

// 3. Or, run a custom agent!
const myCustomAgent: AgentDefinition = {
  id: 'greeter',
  displayName: 'Greeter',
  model: 'openai/gpt-5',
  instructionsPrompt: 'Say hello!',
}
await client.run({
  agent: 'greeter',
  agentDefinitions: [myCustomAgent],
  prompt: 'My name is Bob.',
  customToolDefinitions: [], // Add custom tools too!
  handleEvent: (event) =&amp;gt; {
    console.log('Progress', event)
  },
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Learn more about the SDK &lt;a href="https://www.npmjs.com/package/@codebuff/sdk"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Why choose Codebuff&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Deep customizability&lt;/strong&gt;: Create sophisticated agent workflows with TypeScript generators that mix AI generation with programmatic control. Define custom agents that spawn subagents, implement conditional logic, and orchestrate complex multi-step processes that adapt to your specific use cases.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Any model on OpenRouter&lt;/strong&gt;: Unlike Claude Code which locks you into Anthropic's models, Codebuff supports any model available on &lt;a href="https://openrouter.ai/models"&gt;OpenRouter&lt;/a&gt; - from Claude and GPT to specialized models like Qwen, DeepSeek, and others. Switch models for different tasks or use the latest releases without waiting for platform updates.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Reuse any published agent&lt;/strong&gt;: Compose existing &lt;a href="https://www.codebuff.com/agents"&gt;published agents&lt;/a&gt; to get a leg up. Codebuff agents are the new MCP!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Fully customizable SDK&lt;/strong&gt;: Build Codebuff's capabilities directly into your applications with a complete TypeScript SDK. Create custom tools, integrate with your CI/CD pipeline, build AI-powered development environments, or embed intelligent coding assistance into your products.&lt;/p&gt; 
&lt;h2&gt;Contributing to Codebuff&lt;/h2&gt; 
&lt;p&gt;We ‚ù§Ô∏è contributions from the community - whether you're fixing bugs, tweaking our agents, or improving documentation.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Want to contribute?&lt;/strong&gt; Check out our &lt;a href="https://raw.githubusercontent.com/CodebuffAI/codebuff/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;Some ways you can help:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üêõ &lt;strong&gt;Fix bugs&lt;/strong&gt; or add features&lt;/li&gt; 
 &lt;li&gt;ü§ñ &lt;strong&gt;Create specialized agents&lt;/strong&gt; and publish them to the Agent Store&lt;/li&gt; 
 &lt;li&gt;üìö &lt;strong&gt;Improve documentation&lt;/strong&gt; or write tutorials&lt;/li&gt; 
 &lt;li&gt;üí° &lt;strong&gt;Share ideas&lt;/strong&gt; in our &lt;a href="https://github.com/CodebuffAI/codebuff/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;h3&gt;Install&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;CLI&lt;/strong&gt;: &lt;code&gt;npm install -g codebuff&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;SDK&lt;/strong&gt;: &lt;code&gt;npm install @codebuff/sdk&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Resources&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;a href="https://codebuff.com/docs"&gt;codebuff.com/docs&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Community&lt;/strong&gt;: &lt;a href="https://codebuff.com/discord"&gt;Discord&lt;/a&gt; - Join our friendly community&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Issues &amp;amp; Ideas&lt;/strong&gt;: &lt;a href="https://github.com/CodebuffAI/codebuff/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Contributing&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/CodebuffAI/codebuff/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; - Start here to contribute!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;: &lt;a href="mailto:support@codebuff.com"&gt;support@codebuff.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>11cafe/jaaz</title>
      <link>https://github.com/11cafe/jaaz</link>
      <description>&lt;p&gt;The world's first open-source multimodal creative assistant This is a substitute for Canva and Manus that prioritizes privacy and is usable locally.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;a href="https://jaaz.app" target="_blank"&gt; Jaaz.app&lt;/a&gt; &lt;p align="center"&gt;Open source Canva AI alternative&lt;/p&gt; &lt;p align="center"&gt; &lt;a href="https://jaaz.app"&gt; &lt;img src="https://github.com/user-attachments/assets/e0cffb94-8c6f-4867-800a-c144aceb6d54" alt="Jaaz Logo" /&gt; &lt;/a&gt; &lt;/p&gt; &lt;/h1&gt; 
&lt;p align="center"&gt;The world's first open-source multimodal canvas creative agent&lt;/p&gt; 
&lt;p align="center"&gt;This is a substitute for Canva and Manus that prioritizes privacy and is usable locally.&lt;/p&gt; 
&lt;p&gt; &lt;b&gt;üì£ [New!] Enterprise Cloud ‚ÄúFull‚Äù Edition&lt;/b&gt; ‚Äî Private/on-prem deployment &amp;amp; commercial licensing (Docker image or full source). Includes all jaaz.app online features. &lt;b&gt;30% OFF&lt;/b&gt; through &lt;b&gt;Sep 15, 2025&lt;/b&gt;. &lt;a href="mailto:info@jaaz.app"&gt;Contact us ‚Üí&lt;/a&gt; info@jaaz.app &lt;br /&gt; &lt;br /&gt; &lt;b&gt;üì£ [New!] ‰ºÅ‰∏ö‰∫ëÁ´ØÂÆåÊï¥Áâà&lt;/b&gt; ‚Äî ÊîØÊåÅ&lt;span&gt;ÁßÅÊúâÂåñÈÉ®ÁΩ≤&lt;/span&gt;‰∏é&lt;span&gt;ÂïÜ‰∏öÊéàÊùÉ&lt;/span&gt;ÔºàDocker ÈïúÂÉèÊàñÊ∫êÁ†Å‰∫§‰ªòÔºâÔºåÂåÖÂê´ jaaz.app ÂÖ®ÈáèÁ∫ø‰∏äÂäüËÉΩ„ÄÇÈôêÊó∂ &lt;b&gt;30% OFF&lt;/b&gt;ÔºåÊà™Ê≠¢ &lt;b&gt;2025-09-15&lt;/b&gt;„ÄÇ &lt;a href="mailto:info@jaaz.app"&gt;‰∫ÜËß£/Ê¥ΩË∞à ‚Üí&lt;/a&gt; info@jaaz.app &lt;/p&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/11cafe/jaaz/raw/main/README_zh.md"&gt;‰∏≠ÊñáÁâà&lt;/a&gt;| &lt;a href="https://mxnpt25l6k.feishu.cn/docx/LvcTdlVbFoRAZWxnhBYcqVydnpc"&gt;Êñ∞ÊâãÊåáÂçó&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://discord.gg/https://discord.gg/SMRe5n3m"&gt; &lt;img src="https://img.shields.io/badge/Discord-5865F2?logo=discord&amp;amp;logoColor=white&amp;amp;style=for-the-badge" alt="Discord" /&gt; &lt;/a&gt; &lt;a href="https://github.com/11cafe/jaaz/stargazers"&gt; &lt;img src="https://img.shields.io/github/stars/11cafe/jaaz?style=for-the-badge&amp;amp;logo=github" alt="GitHub Stars" /&gt; &lt;/a&gt; 
 &lt;!-- Download for Mac --&gt; &lt;a href="https://jaaz.app/api/downloads/mac-latest"&gt; &lt;img src="https://img.shields.io/badge/For%20Mac-000000?logo=apple&amp;amp;logoColor=white&amp;amp;style=for-the-badge" alt="Download for Mac" /&gt; &lt;/a&gt; 
 &lt;!-- Download for Windows --&gt; &lt;a href="https://jaaz.app/api/downloads/windows-latest"&gt; &lt;img src="https://img.shields.io/badge/For%20Windows-0078D6?logo=laptop&amp;amp;logoColor=white&amp;amp;style=for-the-badge" alt="Download for Windows" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; Magic Canva! &lt;/p&gt;
&lt;p&gt;"Build" your ideas like playing with LEGO‚Äîpaint directly, point with arrows, and the AI instantly understands and generates results. &lt;img width="900" alt="Screenshot 2025-06-02 at 3 03 49 PM" src="https://github.com/user-attachments/assets/543b170c-14f7-4a73-96bd-909662138592" /&gt; &lt;img width="900" alt="Screenshot 2025-06-02 at 3 03 49 PM" src="https://github.com/user-attachments/assets/7dd9af32-cc60-4145-9b30-7db96d8fa09a" /&gt;&lt;/p&gt; 
&lt;p&gt;Magic video!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/b7abf987-c65d-49b1-8178-82770873c583"&gt;https://github.com/user-attachments/assets/b7abf987-c65d-49b1-8178-82770873c583&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create Viral Shorts with a Single Sentence 
 &lt;video src="https://github.com/user-attachments/assets/1c15e792-098a-4557-b310-d9c223f73442" controls width="100%"&gt;&lt;/video&gt;&lt;/p&gt; 
&lt;h2&gt;‚ú® Getting started &amp;amp; staying tuned with us.&lt;/h2&gt; 
&lt;p&gt;Star us, and you will receive all release notifications from GitHub without any delay! &lt;img width="900" alt="Screenshot 2025-06-02 at 3 03 49 PM" src="https://github.com/user-attachments/assets/1c9a3661-80a4-4fba-a30f-f469898b0aec" /&gt;&lt;/p&gt; 
&lt;h2&gt;‚ú® Key Features&lt;/h2&gt; 
&lt;p&gt;üé¨ One-Prompt Image &amp;amp; Video Generation Turn one prompt into complete images or videos in seconds.&lt;/p&gt; 
&lt;p&gt;-Supports GPT-4o, Midjourney, VEO3, Kling,veo3,seedance etc.&lt;/p&gt; 
&lt;p&gt;-Auto-optimized prompts &amp;amp; multi-turn refinement&lt;/p&gt; 
&lt;p&gt;üßô Magic Canvas&amp;amp;Magic Video Prompt-free creation ‚Äî build like Lego.&lt;/p&gt; 
&lt;p&gt;-Simple sketching and free combination ‚Äî AI instantly understands and generates.&lt;/p&gt; 
&lt;p&gt;-AI understands and generates instantly&lt;/p&gt; 
&lt;p&gt;-No prompt writing needed&lt;/p&gt; 
&lt;p&gt;-Describe steps simply on the video, and AI will generate following them.&lt;/p&gt; 
&lt;p&gt;üñºÔ∏è Infinite Canvas &amp;amp; Visual Storyboarding Plan scenes with an unlimited canvas&lt;/p&gt; 
&lt;p&gt;-Link layouts, manage media visually&lt;/p&gt; 
&lt;p&gt;-Real-time collaboration supported&lt;/p&gt; 
&lt;p&gt;ü§ñ Smart AI Agent System -Chat to insert objects, transfer styles, control logic&lt;/p&gt; 
&lt;p&gt;-Works with local (ComfyUI) &amp;amp; cloud models&lt;/p&gt; 
&lt;p&gt;-Maintains multi-character coherence&lt;/p&gt; 
&lt;p&gt;‚öôÔ∏è Flexible Deployment &amp;amp; Local Assets -Fully offline or hybrid setup (Ollama + APIs)&lt;/p&gt; 
&lt;p&gt;-Built-in library for media &amp;amp; prompts&lt;/p&gt; 
&lt;p&gt;-Cross-platform: Windows &amp;amp; macOS&lt;/p&gt; 
&lt;p&gt;üîê Privacy &amp;amp; Security -Local-first, no data leaves your device&lt;/p&gt; 
&lt;p&gt;-Open-source, no tracking&lt;/p&gt; 
&lt;p&gt;-Safe for commercial use ‚Äî you own your data&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Download here: &lt;a href="https://jaaz.app/"&gt;https://jaaz.app/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Click the "Log In" button at the top right of the homepage to access API models. With a low-cost plan, you can seamlessly use a variety of powerful APIs.&lt;/p&gt; 
&lt;img width="400" alt="Screenshot 2025-06-02 at 3 08 51 PM" src="https://github.com/user-attachments/assets/0055557d-c247-4801-ac3f-01ed4fa775ae" /&gt; 
&lt;p&gt;Start chatting with agent to generate stories or storyboards!&lt;/p&gt; 
&lt;h2&gt;Cases&lt;/h2&gt; 
&lt;img width="889" height="1103" alt="Frame 122" src="https://github.com/user-attachments/assets/90503110-0f5c-4297-bbfe-6d35e3f54d4c" /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prompt: Help me place this character in six different scenes, all in front of landmark buildings from around the world. The lighting is harmonious. He takes photos from all over the world, realistic, with warm light, high picture quality, and a picture ratio of 9:16&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/4e2634b3-9068-47cd-a18f-ddde8f218d25" alt="814c563b08f6ef44de0c2c31f0fdd00b-min" /&gt;&lt;/p&gt; 
&lt;img width="1000" alt="Screenshot 2025-06-02 at 3 51 56 AM" src="https://github.com/user-attachments/assets/5d8efe74-99b0-41bc-aa3e-6f7b92b69c36" /&gt; 
&lt;img width="900" alt="Screenshot 2025-06-02 at 3 51 56 AM" src="https://github.com/user-attachments/assets/186982a9-5e4e-4ac1-a42c-c840092fd616" /&gt; 
&lt;img width="900" alt="Screenshot 2025-06-02 at 3 03 49 PM" src="https://github.com/user-attachments/assets/b8508efd-def8-40ed-8ab5-62ed3c26de67" /&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/2065cabd-af32-43b6-bc01-59a935d9a287" alt="image26" /&gt;&lt;/p&gt; 
&lt;h2&gt;Team and Enterprise Support:&lt;/h2&gt; 
&lt;p&gt;Support for multi-user private deployment of enterprise teams, ensuring privacy and security.&lt;/p&gt; 
&lt;p&gt;Please contact via email: &lt;a href="mailto:aifoxdw@gmail.com"&gt;aifoxdw@gmail.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;WeChat: aifox1 &lt;img width="500" alt="Screenshot 2025-06-02 at 3 51 56 AM" src="https://github.com/user-attachments/assets/d5c54eda-120b-4fc2-a571-68fcab440868" /&gt;&lt;/p&gt; 
&lt;h2&gt;Manual Install (For Linux or local builds)&lt;/h2&gt; 
&lt;p&gt;üü† &lt;strong&gt;Need Python version &amp;gt;=3.12&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;First git clone this repo:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;git clone https://github.com/11cafe/localart&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;cd react&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm install --force&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npx vite build&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;cd ../server&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;python main.py&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;üü† &lt;strong&gt;Need Python version &amp;gt;=3.12&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;VSCode/Cursor Install ExtensionsÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Black Formatter by ms-python (ms-python.black-formatter)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;cd react&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm install --force &amp;amp;&amp;amp; npm run dev&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;cd server&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;python main.py&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>infiniflow/ragflow</title>
      <link>https://github.com/infiniflow/ragflow</link>
      <description>&lt;p&gt;RAGFlow is a leading open-source Retrieval-Augmented Generation (RAG) engine that fuses cutting-edge RAG with Agent capabilities to create a superior context layer for LLMs&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://demo.ragflow.io/"&gt; &lt;img src="https://raw.githubusercontent.com/infiniflow/ragflow/main/web/src/assets/logo-with-text.png" width="520" alt="ragflow logo" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README.md"&gt;&lt;img alt="README in English" src="https://img.shields.io/badge/English-DBEDFA" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_zh.md"&gt;&lt;img alt="ÁÆÄ‰Ωì‰∏≠ÊñáÁâàËá™Ëø∞Êñá‰ª∂" src="https://img.shields.io/badge/ÁÆÄ‰Ωì‰∏≠Êñá-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_tzh.md"&gt;&lt;img alt="ÁπÅÈ´îÁâà‰∏≠ÊñáËá™Ëø∞Êñá‰ª∂" src="https://img.shields.io/badge/ÁπÅÈ´î‰∏≠Êñá-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_ja.md"&gt;&lt;img alt="Êó•Êú¨Ë™û„ÅÆREADME" src="https://img.shields.io/badge/Êó•Êú¨Ë™û-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_ko.md"&gt;&lt;img alt="ÌïúÍµ≠Ïñ¥" src="https://img.shields.io/badge/ÌïúÍµ≠Ïñ¥-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_id.md"&gt;&lt;img alt="Bahasa Indonesia" src="https://img.shields.io/badge/Bahasa Indonesia-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_pt_br.md"&gt;&lt;img alt="Portugu√™s(Brasil)" src="https://img.shields.io/badge/Portugu√™s(Brasil)-DFE0E5" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://x.com/intent/follow?screen_name=infiniflowai" target="_blank"&gt; &lt;img src="https://img.shields.io/twitter/follow/infiniflow?logo=X&amp;amp;color=%20%23f5f5f5" alt="follow on X(Twitter)" /&gt; &lt;/a&gt; &lt;a href="https://demo.ragflow.io" target="_blank"&gt; &lt;img alt="Static Badge" src="https://img.shields.io/badge/Online-Demo-4e6b99" /&gt; &lt;/a&gt; &lt;a href="https://hub.docker.com/r/infiniflow/ragflow" target="_blank"&gt; &lt;img src="https://img.shields.io/docker/pulls/infiniflow/ragflow?label=Docker%20Pulls&amp;amp;color=0db7ed&amp;amp;logo=docker&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="docker pull infiniflow/ragflow:v0.20.5" /&gt; &lt;/a&gt; &lt;a href="https://github.com/infiniflow/ragflow/releases/latest"&gt; &lt;img src="https://img.shields.io/github/v/release/infiniflow/ragflow?color=blue&amp;amp;label=Latest%20Release" alt="Latest Release" /&gt; &lt;/a&gt; &lt;a href="https://github.com/infiniflow/ragflow/raw/main/LICENSE"&gt; &lt;img height="21" src="https://img.shields.io/badge/License-Apache--2.0-ffffff?labelColor=d4eaf7&amp;amp;color=2e6cc4" alt="license" /&gt; &lt;/a&gt; &lt;a href="https://deepwiki.com/infiniflow/ragflow"&gt; &lt;img alt="Ask DeepWiki" src="https://deepwiki.com/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://ragflow.io/docs/dev/"&gt;Document&lt;/a&gt; | &lt;a href="https://github.com/infiniflow/ragflow/issues/4214"&gt;Roadmap&lt;/a&gt; | &lt;a href="https://twitter.com/infiniflowai"&gt;Twitter&lt;/a&gt; | &lt;a href="https://discord.gg/NjYzJD3GM3"&gt;Discord&lt;/a&gt; | &lt;a href="https://demo.ragflow.io"&gt;Demo&lt;/a&gt; &lt;/h4&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://trendshift.io/repositories/9064" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/9064" alt="infiniflow%2Fragflow | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;üìï Table of Contents&lt;/b&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;üí° &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-what-is-ragflow"&gt;What is RAGFlow?&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;üéÆ &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-demo"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;üìå &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-latest-updates"&gt;Latest Updates&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;üåü &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-key-features"&gt;Key Features&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;üîé &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-system-architecture"&gt;System Architecture&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;üé¨ &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-get-started"&gt;Get Started&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;üîß &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-configurations"&gt;Configurations&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;üîß &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-build-a-docker-image-without-embedding-models"&gt;Build a docker image without embedding models&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;üîß &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-build-a-docker-image-including-embedding-models"&gt;Build a docker image including embedding models&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;üî® &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-launch-service-from-source-for-development"&gt;Launch service from source for development&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;üìö &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;üìú &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;üèÑ &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-community"&gt;Community&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;üôå &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;üí° What is RAGFlow?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://ragflow.io/"&gt;RAGFlow&lt;/a&gt; is a leading open-source Retrieval-Augmented Generation (RAG) engine that fuses cutting-edge RAG with Agent capabilities to create a superior context layer for LLMs. It offers a streamlined RAG workflow adaptable to enterprises of any scale. Powered by a converged context engine and pre-built agent templates, RAGFlow enables developers to transform complex data into high-fidelity, production-ready AI systems with exceptional efficiency and precision.&lt;/p&gt; 
&lt;h2&gt;üéÆ Demo&lt;/h2&gt; 
&lt;p&gt;Try our demo at &lt;a href="https://demo.ragflow.io"&gt;https://demo.ragflow.io&lt;/a&gt;.&lt;/p&gt; 
&lt;div align="center" style="margin-top:20px;margin-bottom:20px;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/infiniflow/ragflow-docs/refs/heads/image/image/chunking.gif" width="1200" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/infiniflow/ragflow-docs/refs/heads/image/image/agentic-dark.gif" width="1200" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;üî• Latest Updates&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;2025-08-08 Supports OpenAI's latest GPT-5 series models.&lt;/li&gt; 
 &lt;li&gt;2025-08-04 Supports new models, including Kimi K2 and Grok 4.&lt;/li&gt; 
 &lt;li&gt;2025-08-01 Supports agentic workflow and MCP.&lt;/li&gt; 
 &lt;li&gt;2025-05-23 Adds a Python/JavaScript code executor component to Agent.&lt;/li&gt; 
 &lt;li&gt;2025-05-05 Supports cross-language query.&lt;/li&gt; 
 &lt;li&gt;2025-03-19 Supports using a multi-modal model to make sense of images within PDF or DOCX files.&lt;/li&gt; 
 &lt;li&gt;2025-02-28 Combined with Internet search (Tavily), supports reasoning like Deep Research for any LLMs.&lt;/li&gt; 
 &lt;li&gt;2024-12-18 Upgrades Document Layout Analysis model in DeepDoc.&lt;/li&gt; 
 &lt;li&gt;2024-08-22 Support text to SQL statements through RAG.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üéâ Stay Tuned&lt;/h2&gt; 
&lt;p&gt;‚≠êÔ∏è Star our repository to stay up-to-date with exciting new features and improvements! Get instant notifications for new releases! üåü&lt;/p&gt; 
&lt;div align="center" style="margin-top:20px;margin-bottom:20px;"&gt; 
 &lt;img src="https://github.com/user-attachments/assets/18c9707e-b8aa-4caf-a154-037089c105ba" width="1200" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;üåü Key Features&lt;/h2&gt; 
&lt;h3&gt;üç≠ &lt;strong&gt;"Quality in, quality out"&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/deepdoc/README.md"&gt;Deep document understanding&lt;/a&gt;-based knowledge extraction from unstructured data with complicated formats.&lt;/li&gt; 
 &lt;li&gt;Finds "needle in a data haystack" of literally unlimited tokens.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üç± &lt;strong&gt;Template-based chunking&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Intelligent and explainable.&lt;/li&gt; 
 &lt;li&gt;Plenty of template options to choose from.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üå± &lt;strong&gt;Grounded citations with reduced hallucinations&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visualization of text chunking to allow human intervention.&lt;/li&gt; 
 &lt;li&gt;Quick view of the key references and traceable citations to support grounded answers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üçî &lt;strong&gt;Compatibility with heterogeneous data sources&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports Word, slides, excel, txt, images, scanned copies, structured data, web pages, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üõÄ &lt;strong&gt;Automated and effortless RAG workflow&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Streamlined RAG orchestration catered to both personal and large businesses.&lt;/li&gt; 
 &lt;li&gt;Configurable LLMs as well as embedding models.&lt;/li&gt; 
 &lt;li&gt;Multiple recall paired with fused re-ranking.&lt;/li&gt; 
 &lt;li&gt;Intuitive APIs for seamless integration with business.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üîé System Architecture&lt;/h2&gt; 
&lt;div align="center" style="margin-top:20px;margin-bottom:20px;"&gt; 
 &lt;img src="https://github.com/infiniflow/ragflow/assets/12318111/d6ac5664-c237-4200-a7c2-a4a00691b485" width="1000" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;üé¨ Get Started&lt;/h2&gt; 
&lt;h3&gt;üìù Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;CPU &amp;gt;= 4 cores&lt;/li&gt; 
 &lt;li&gt;RAM &amp;gt;= 16 GB&lt;/li&gt; 
 &lt;li&gt;Disk &amp;gt;= 50 GB&lt;/li&gt; 
 &lt;li&gt;Docker &amp;gt;= 24.0.0 &amp;amp; Docker Compose &amp;gt;= v2.26.1&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gvisor.dev/docs/user_guide/install/"&gt;gVisor&lt;/a&gt;: Required only if you intend to use the code executor (sandbox) feature of RAGFlow.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] If you have not installed Docker on your local machine (Windows, Mac, or Linux), see &lt;a href="https://docs.docker.com/engine/install/"&gt;Install Docker Engine&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;üöÄ Start up the server&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Ensure &lt;code&gt;vm.max_map_count&lt;/code&gt; &amp;gt;= 262144:&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;To check the value of &lt;code&gt;vm.max_map_count&lt;/code&gt;:&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;$ sysctl vm.max_map_count
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;Reset &lt;code&gt;vm.max_map_count&lt;/code&gt; to a value at least 262144 if it is not.&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;# In this case, we set it to 262144:
$ sudo sysctl -w vm.max_map_count=262144
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;This change will be reset after a system reboot. To ensure your change remains permanent, add or update the &lt;code&gt;vm.max_map_count&lt;/code&gt; value in &lt;strong&gt;/etc/sysctl.conf&lt;/strong&gt; accordingly:&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;vm.max_map_count=262144
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the repo:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ git clone https://github.com/infiniflow/ragflow.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start up the server using the pre-built Docker images:&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] All Docker images are built for x86 platforms. We don't currently offer Docker images for ARM64. If you are on an ARM64 platform, follow &lt;a href="https://ragflow.io/docs/dev/build_docker_image"&gt;this guide&lt;/a&gt; to build a Docker image compatible with your system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The command below downloads the &lt;code&gt;v0.20.5-slim&lt;/code&gt; edition of the RAGFlow Docker image. See the following table for descriptions of different RAGFlow editions. To download a RAGFlow edition different from &lt;code&gt;v0.20.5-slim&lt;/code&gt;, update the &lt;code&gt;RAGFLOW_IMAGE&lt;/code&gt; variable accordingly in &lt;strong&gt;docker/.env&lt;/strong&gt; before using &lt;code&gt;docker compose&lt;/code&gt; to start the server. For example: set &lt;code&gt;RAGFLOW_IMAGE=infiniflow/ragflow:v0.20.5&lt;/code&gt; for the full edition &lt;code&gt;v0.20.5&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ cd ragflow/docker
# Use CPU for embedding and DeepDoc tasks:
$ docker compose -f docker-compose.yml up -d

# To use GPU to accelerate embedding and DeepDoc tasks:
# docker compose -f docker-compose-gpu.yml up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;RAGFlow image tag&lt;/th&gt; 
   &lt;th&gt;Image size (GB)&lt;/th&gt; 
   &lt;th&gt;Has embedding models?&lt;/th&gt; 
   &lt;th&gt;Stable?&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;v0.20.5&lt;/td&gt; 
   &lt;td&gt;‚âà9&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;Stable release&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;v0.20.5-slim&lt;/td&gt; 
   &lt;td&gt;‚âà2&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;Stable release&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nightly&lt;/td&gt; 
   &lt;td&gt;‚âà9&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;Unstable&lt;/em&gt; nightly build&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nightly-slim&lt;/td&gt; 
   &lt;td&gt;‚âà2&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;Unstable&lt;/em&gt; nightly build&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt; &lt;p&gt;Check the server status after having the server up and running:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ docker logs -f ragflow-server
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;The following output confirms a successful launch of the system:&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;
      ____   ___    ______ ______ __
     / __ \ /   |  / ____// ____// /____  _      __
    / /_/ // /| | / / __ / /_   / // __ \| | /| / /
   / _, _// ___ |/ /_/ // __/  / // /_/ /| |/ |/ /
  /_/ |_|/_/  |_|\____//_/    /_/ \____/ |__/|__/

 * Running on all addresses (0.0.0.0)
&lt;/code&gt;&lt;/pre&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;If you skip this confirmation step and directly log in to RAGFlow, your browser may prompt a &lt;code&gt;network anormal&lt;/code&gt; error because, at that moment, your RAGFlow may not be fully initialized.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In your web browser, enter the IP address of your server and log in to RAGFlow.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;With the default settings, you only need to enter &lt;code&gt;http://IP_OF_YOUR_MACHINE&lt;/code&gt; (&lt;strong&gt;sans&lt;/strong&gt; port number) as the default HTTP serving port &lt;code&gt;80&lt;/code&gt; can be omitted when using the default configurations.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template"&gt;service_conf.yaml.template&lt;/a&gt;, select the desired LLM factory in &lt;code&gt;user_default_llm&lt;/code&gt; and update the &lt;code&gt;API_KEY&lt;/code&gt; field with the corresponding API key.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;See &lt;a href="https://ragflow.io/docs/dev/llm_api_key_setup"&gt;llm_api_key_setup&lt;/a&gt; for more information.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;p&gt;&lt;em&gt;The show is on!&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üîß Configurations&lt;/h2&gt; 
&lt;p&gt;When it comes to system configurations, you will need to manage the following files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/.env"&gt;.env&lt;/a&gt;: Keeps the fundamental setups for the system, such as &lt;code&gt;SVR_HTTP_PORT&lt;/code&gt;, &lt;code&gt;MYSQL_PASSWORD&lt;/code&gt;, and &lt;code&gt;MINIO_PASSWORD&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template"&gt;service_conf.yaml.template&lt;/a&gt;: Configures the back-end services. The environment variables in this file will be automatically populated when the Docker container starts. Any environment variables set within the Docker container will be available for use, allowing you to customize service behavior based on the deployment environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;: The system relies on &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt; to start up.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/README.md"&gt;./docker/README&lt;/a&gt; file provides a detailed description of the environment settings and service configurations which can be used as &lt;code&gt;${ENV_VARS}&lt;/code&gt; in the &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template"&gt;service_conf.yaml.template&lt;/a&gt; file.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To update the default HTTP serving port (80), go to &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt; and change &lt;code&gt;80:80&lt;/code&gt; to &lt;code&gt;&amp;lt;YOUR_SERVING_PORT&amp;gt;:80&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Updates to the above configurations require a reboot of all containers to take effect:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;$ docker compose -f docker-compose.yml up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Switch doc engine from Elasticsearch to Infinity&lt;/h3&gt; 
&lt;p&gt;RAGFlow uses Elasticsearch by default for storing full text and vectors. To switch to &lt;a href="https://github.com/infiniflow/infinity/"&gt;Infinity&lt;/a&gt;, follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Stop all running containers:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ docker compose -f docker/docker-compose.yml down -v
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] &lt;code&gt;-v&lt;/code&gt; will delete the docker container volumes, and the existing data will be cleared.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt; &lt;p&gt;Set &lt;code&gt;DOC_ENGINE&lt;/code&gt; in &lt;strong&gt;docker/.env&lt;/strong&gt; to &lt;code&gt;infinity&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start the containers:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ docker compose -f docker-compose.yml up -d
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Switching to Infinity on a Linux/arm64 machine is not yet officially supported.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üîß Build a Docker image without embedding models&lt;/h2&gt; 
&lt;p&gt;This image is approximately 2 GB in size and relies on external LLM and embedding services.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/infiniflow/ragflow.git
cd ragflow/
docker build --platform linux/amd64 --build-arg LIGHTEN=1 -f Dockerfile -t infiniflow/ragflow:nightly-slim .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üîß Build a Docker image including embedding models&lt;/h2&gt; 
&lt;p&gt;This image is approximately 9 GB in size. As it includes embedding models, it relies on external LLM services only.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/infiniflow/ragflow.git
cd ragflow/
docker build --platform linux/amd64 -f Dockerfile -t infiniflow/ragflow:nightly .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üî® Launch service from source for development&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;code&gt;uv&lt;/code&gt; and &lt;code&gt;pre-commit&lt;/code&gt;, or skip this step if they are already installed:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pipx install uv pre-commit
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the source code and install Python dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/infiniflow/ragflow.git
cd ragflow/
uv sync --python 3.10 --all-extras # install RAGFlow dependent python modules
uv run download_deps.py
pre-commit install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch the dependent services (MinIO, Elasticsearch, Redis, and MySQL) using Docker Compose:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose -f docker/docker-compose-base.yml up -d
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Add the following line to &lt;code&gt;/etc/hosts&lt;/code&gt; to resolve all hosts specified in &lt;strong&gt;docker/.env&lt;/strong&gt; to &lt;code&gt;127.0.0.1&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;127.0.0.1       es01 infinity mysql minio redis sandbox-executor-manager
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you cannot access HuggingFace, set the &lt;code&gt;HF_ENDPOINT&lt;/code&gt; environment variable to use a mirror site:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;export HF_ENDPOINT=https://hf-mirror.com
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If your operating system does not have jemalloc, please install it as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# ubuntu
sudo apt-get install libjemalloc-dev
# centos
sudo yum install jemalloc
# mac
sudo brew install jemalloc
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch backend service:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;source .venv/bin/activate
export PYTHONPATH=$(pwd)
bash docker/launch_backend_service.sh
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install frontend dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;cd web
npm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch frontend service:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;The following output confirms a successful launch of the system:&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/0daf462c-a24d-4496-a66f-92533534e187" alt="" /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Stop RAGFlow front-end and back-end service after development is complete:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pkill -f "ragflow_server.py|task_executor.py"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üìö Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/"&gt;Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/configurations"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/release_notes"&gt;Release notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/category/guides"&gt;User guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/category/developers"&gt;Developer guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/category/references"&gt;References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/faq"&gt;FAQs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìú Roadmap&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/infiniflow/ragflow/issues/4214"&gt;RAGFlow Roadmap 2025&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üèÑ Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/NjYzJD3GM3"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/infiniflowai"&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orgs/infiniflow/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üôå Contributing&lt;/h2&gt; 
&lt;p&gt;RAGFlow flourishes via open-source collaboration. In this spirit, we embrace diverse contributions from the community. If you would like to be a part, review our &lt;a href="https://ragflow.io/docs/dev/contributing"&gt;Contribution Guidelines&lt;/a&gt; first.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>modelcontextprotocol/inspector</title>
      <link>https://github.com/modelcontextprotocol/inspector</link>
      <description>&lt;p&gt;Visual testing tool for MCP servers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MCP Inspector&lt;/h1&gt; 
&lt;p&gt;The MCP inspector is a developer tool for testing and debugging MCP servers.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/modelcontextprotocol/inspector/main/mcp-inspector.png" alt="MCP Inspector Screenshot" /&gt;&lt;/p&gt; 
&lt;h2&gt;Architecture Overview&lt;/h2&gt; 
&lt;p&gt;The MCP Inspector consists of two main components that work together:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Inspector Client (MCPI)&lt;/strong&gt;: A React-based web UI that provides an interactive interface for testing and debugging MCP servers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Proxy (MCPP)&lt;/strong&gt;: A Node.js server that acts as a protocol bridge, connecting the web UI to MCP servers via various transport methods (stdio, SSE, streamable-http)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that the proxy is not a network proxy for intercepting traffic. Instead, it functions as both an MCP client (connecting to your MCP server) and an HTTP server (serving the web UI), enabling browser-based interaction with MCP servers that use different transport protocols.&lt;/p&gt; 
&lt;h2&gt;Running the Inspector&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js: ^22.7.5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Start (UI mode)&lt;/h3&gt; 
&lt;p&gt;To get up and running right away with the UI, just execute the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx @modelcontextprotocol/inspector
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The server will start up and the UI will be accessible at &lt;code&gt;http://localhost:6274&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Docker Container&lt;/h3&gt; 
&lt;p&gt;You can also start it in a Docker container with the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm --network host -p 6274:6274 -p 6277:6277 ghcr.io/modelcontextprotocol/inspector:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;From an MCP server repository&lt;/h3&gt; 
&lt;p&gt;To inspect an MCP server implementation, there's no need to clone this repo. Instead, use &lt;code&gt;npx&lt;/code&gt;. For example, if your server is built at &lt;code&gt;build/index.js&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx @modelcontextprotocol/inspector node build/index.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can pass both arguments and environment variables to your MCP server. Arguments are passed directly to your server, while environment variables can be set using the &lt;code&gt;-e&lt;/code&gt; flag:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Pass arguments only
npx @modelcontextprotocol/inspector node build/index.js arg1 arg2

# Pass environment variables only
npx @modelcontextprotocol/inspector -e key=value -e key2=$VALUE2 node build/index.js

# Pass both environment variables and arguments
npx @modelcontextprotocol/inspector -e key=value -e key2=$VALUE2 node build/index.js arg1 arg2

# Use -- to separate inspector flags from server arguments
npx @modelcontextprotocol/inspector -e key=$VALUE -- node build/index.js -e server-flag
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The inspector runs both an MCP Inspector (MCPI) client UI (default port 6274) and an MCP Proxy (MCPP) server (default port 6277). Open the MCPI client UI in your browser to use the inspector. (These ports are derived from the T9 dialpad mapping of MCPI and MCPP respectively, as a mnemonic). You can customize the ports if needed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;CLIENT_PORT=8080 SERVER_PORT=9000 npx @modelcontextprotocol/inspector node build/index.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details on ways to use the inspector, see the &lt;a href="https://modelcontextprotocol.io/docs/tools/inspector"&gt;Inspector section of the MCP docs site&lt;/a&gt;. For help with debugging, see the &lt;a href="https://modelcontextprotocol.io/docs/tools/debugging"&gt;Debugging guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Servers File Export&lt;/h3&gt; 
&lt;p&gt;The MCP Inspector provides convenient buttons to export server launch configurations for use in clients such as Cursor, Claude Code, or the Inspector's CLI. The file is usually called &lt;code&gt;mcp.json&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Server Entry&lt;/strong&gt; - Copies a single server configuration entry to your clipboard. This can be added to your &lt;code&gt;mcp.json&lt;/code&gt; file inside the &lt;code&gt;mcpServers&lt;/code&gt; object with your preferred server name.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;STDIO transport example:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "command": "node",
  "args": ["build/index.js", "--debug"],
  "env": {
    "API_KEY": "your-api-key",
    "DEBUG": "true"
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;SSE transport example:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "type": "sse",
  "url": "http://localhost:3000/events",
  "note": "For SSE connections, add this URL directly in Client"
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Streamable HTTP transport example:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "type": "streamable-http",
  "url": "http://localhost:3000/mcp",
  "note": "For Streamable HTTP connections, add this URL directly in your MCP Client"
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Servers File&lt;/strong&gt; - Copies a complete MCP configuration file structure to your clipboard, with your current server configuration added as &lt;code&gt;default-server&lt;/code&gt;. This can be saved directly as &lt;code&gt;mcp.json&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;STDIO transport example:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "default-server": {
      "command": "node",
      "args": ["build/index.js", "--debug"],
      "env": {
        "API_KEY": "your-api-key",
        "DEBUG": "true"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;SSE transport example:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "default-server": {
      "type": "sse",
      "url": "http://localhost:3000/events",
      "note": "For SSE connections, add this URL directly in Client"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Streamable HTTP transport example:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "default-server": {
      "type": "streamable-http",
      "url": "http://localhost:3000/mcp",
      "note": "For Streamable HTTP connections, add this URL directly in your MCP Client"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These buttons appear in the Inspector UI after you've configured your server settings, making it easy to save and reuse your configurations.&lt;/p&gt; 
&lt;p&gt;For SSE and Streamable HTTP transport connections, the Inspector provides similar functionality for both buttons. The "Server Entry" button copies the configuration that can be added to your existing configuration file, while the "Servers File" button creates a complete configuration file containing the URL for direct use in clients.&lt;/p&gt; 
&lt;p&gt;You can paste the Server Entry into your existing &lt;code&gt;mcp.json&lt;/code&gt; file under your chosen server name, or use the complete Servers File payload to create a new configuration file.&lt;/p&gt; 
&lt;h3&gt;Authentication&lt;/h3&gt; 
&lt;p&gt;The inspector supports bearer token authentication for SSE connections. Enter your token in the UI when connecting to an MCP server, and it will be sent in the Authorization header. You can override the header name using the input field in the sidebar.&lt;/p&gt; 
&lt;h3&gt;Security Considerations&lt;/h3&gt; 
&lt;p&gt;The MCP Inspector includes a proxy server that can run and communicate with local MCP processes. The proxy server should not be exposed to untrusted networks as it has permissions to spawn local processes and can connect to any specified MCP server.&lt;/p&gt; 
&lt;h4&gt;Authentication&lt;/h4&gt; 
&lt;p&gt;The MCP Inspector proxy server requires authentication by default. When starting the server, a random session token is generated and printed to the console:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;üîë Session token: 3a1c267fad21f7150b7d624c160b7f09b0b8c4f623c7107bbf13378f051538d4

üîó Open inspector with token pre-filled:
   http://localhost:6274/?MCP_PROXY_AUTH_TOKEN=3a1c267fad21f7150b7d624c160b7f09b0b8c4f623c7107bbf13378f051538d4
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This token must be included as a Bearer token in the Authorization header for all requests to the server. The inspector will automatically open your browser with the token pre-filled in the URL.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Automatic browser opening&lt;/strong&gt; - The inspector now automatically opens your browser with the token pre-filled in the URL when authentication is enabled.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Alternative: Manual configuration&lt;/strong&gt; - If you already have the inspector open:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Click the "Configuration" button in the sidebar&lt;/li&gt; 
 &lt;li&gt;Find "Proxy Session Token" and enter the token displayed in the proxy console&lt;/li&gt; 
 &lt;li&gt;Click "Save" to apply the configuration&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The token will be saved in your browser's local storage for future use.&lt;/p&gt; 
&lt;p&gt;If you need to disable authentication (NOT RECOMMENDED), you can set the &lt;code&gt;DANGEROUSLY_OMIT_AUTH&lt;/code&gt; environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;DANGEROUSLY_OMIT_AUTH=true npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;üö® WARNING üö®&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Disabling authentication with &lt;code&gt;DANGEROUSLY_OMIT_AUTH&lt;/code&gt; is incredibly dangerous! Disabling auth leaves your machine open to attack not just when exposed to the public internet, but also &lt;strong&gt;via your web browser&lt;/strong&gt;. Meaning, visiting a malicious website OR viewing a malicious advertizement could allow an attacker to remotely compromise your computer. Do not disable this feature unless you truly understand the risks.&lt;/p&gt; 
&lt;p&gt;Read more about the risks of this vulnerability on Oligo's blog: &lt;a href="https://www.oligo.security/blog/critical-rce-vulnerability-in-anthropic-mcp-inspector-cve-2025-49596"&gt;Critical RCE Vulnerability in Anthropic MCP Inspector - CVE-2025-49596&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;You can also set the token via the &lt;code&gt;MCP_PROXY_AUTH_TOKEN&lt;/code&gt; environment variable when starting the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;MCP_PROXY_AUTH_TOKEN=$(openssl rand -hex 32) npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Local-only Binding&lt;/h4&gt; 
&lt;p&gt;By default, both the MCP Inspector proxy server and client bind only to &lt;code&gt;localhost&lt;/code&gt; to prevent network access. This ensures they are not accessible from other devices on the network. If you need to bind to all interfaces for development purposes, you can override this with the &lt;code&gt;HOST&lt;/code&gt; environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;HOST=0.0.0.0 npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; Only bind to all interfaces in trusted network environments, as this exposes the proxy server's ability to execute local processes and both services to network access.&lt;/p&gt; 
&lt;h4&gt;DNS Rebinding Protection&lt;/h4&gt; 
&lt;p&gt;To prevent DNS rebinding attacks, the MCP Inspector validates the &lt;code&gt;Origin&lt;/code&gt; header on incoming requests. By default, only requests from the client origin are allowed (respects &lt;code&gt;CLIENT_PORT&lt;/code&gt; if set, defaulting to port 6274). You can configure additional allowed origins by setting the &lt;code&gt;ALLOWED_ORIGINS&lt;/code&gt; environment variable (comma-separated list):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ALLOWED_ORIGINS=http://localhost:6274,http://localhost:8000 npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;The MCP Inspector supports the following configuration settings. To change them, click on the &lt;code&gt;Configuration&lt;/code&gt; button in the MCP Inspector UI:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Setting&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;MCP_SERVER_REQUEST_TIMEOUT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Timeout for requests to the MCP server (ms)&lt;/td&gt; 
   &lt;td&gt;10000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;MCP_REQUEST_TIMEOUT_RESET_ON_PROGRESS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Reset timeout on progress notifications&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;MCP_REQUEST_MAX_TOTAL_TIMEOUT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Maximum total timeout for requests sent to the MCP server (ms) (Use with progress notifications)&lt;/td&gt; 
   &lt;td&gt;60000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;MCP_PROXY_FULL_ADDRESS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Set this if you are running the MCP Inspector Proxy on a non-default address. Example: &lt;a href="http://10.1.1.22:5577"&gt;http://10.1.1.22:5577&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;""&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;MCP_AUTO_OPEN_ENABLED&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enable automatic browser opening when inspector starts (works with authentication enabled). Only as environment var, not configurable in browser.&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;These settings can be adjusted in real-time through the UI and will persist across sessions.&lt;/p&gt; 
&lt;p&gt;The inspector also supports configuration files to store settings for different MCP servers. This is useful when working with multiple servers or complex configurations:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx @modelcontextprotocol/inspector --config path/to/config.json --server everything
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example server configuration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "everything": {
      "command": "npx",
      "args": ["@modelcontextprotocol/server-everything"],
      "env": {
        "hello": "Hello MCP!"
      }
    },
    "my-server": {
      "command": "node",
      "args": ["build/index.js", "arg1", "arg2"],
      "env": {
        "key": "value",
        "key2": "value2"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Transport Types in Config Files&lt;/h4&gt; 
&lt;p&gt;The inspector automatically detects the transport type from your config file. You can specify different transport types:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;STDIO (default):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "my-stdio-server": {
      "type": "stdio",
      "command": "npx",
      "args": ["@modelcontextprotocol/server-everything"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;SSE (Server-Sent Events):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "my-sse-server": {
      "type": "sse",
      "url": "http://localhost:3000/sse"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Streamable HTTP:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "my-http-server": {
      "type": "streamable-http",
      "url": "http://localhost:3000/mcp"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Default Server Selection&lt;/h4&gt; 
&lt;p&gt;You can launch the inspector without specifying a server name if your config has:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;A single server&lt;/strong&gt; - automatically selected:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Automatically uses "my-server" if it's the only one
npx @modelcontextprotocol/inspector --config mcp.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;A server named "default-server"&lt;/strong&gt; - automatically selected:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "default-server": {
      "command": "npx",
      "args": ["@modelcontextprotocol/server-everything"]
    },
    "other-server": {
      "command": "node",
      "args": ["other.js"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; You can easily generate this configuration format using the &lt;strong&gt;Server Entry&lt;/strong&gt; and &lt;strong&gt;Servers File&lt;/strong&gt; buttons in the Inspector UI, as described in the Servers File Export section above.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can also set the initial &lt;code&gt;transport&lt;/code&gt; type, &lt;code&gt;serverUrl&lt;/code&gt;, &lt;code&gt;serverCommand&lt;/code&gt;, and &lt;code&gt;serverArgs&lt;/code&gt; via query params, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;http://localhost:6274/?transport=sse&amp;amp;serverUrl=http://localhost:8787/sse
http://localhost:6274/?transport=streamable-http&amp;amp;serverUrl=http://localhost:8787/mcp
http://localhost:6274/?transport=stdio&amp;amp;serverCommand=npx&amp;amp;serverArgs=arg1%20arg2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also set initial config settings via query params, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;http://localhost:6274/?MCP_SERVER_REQUEST_TIMEOUT=10000&amp;amp;MCP_REQUEST_TIMEOUT_RESET_ON_PROGRESS=false&amp;amp;MCP_PROXY_FULL_ADDRESS=http://10.1.1.22:5577
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that if both the query param and the corresponding localStorage item are set, the query param will take precedence.&lt;/p&gt; 
&lt;h3&gt;From this repository&lt;/h3&gt; 
&lt;p&gt;If you're working on the inspector itself:&lt;/p&gt; 
&lt;p&gt;Development mode:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev

# To co-develop with the typescript-sdk package (assuming it's cloned in ../typescript-sdk; set MCP_SDK otherwise):
npm run dev:sdk "cd sdk &amp;amp;&amp;amp; npm run examples:simple-server:w"
# then open http://localhost:3000/mcp as SHTTP in the inspector.
# To go back to the deployed SDK version:
#   npm run unlink:sdk &amp;amp;&amp;amp; npm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note for Windows users:&lt;/strong&gt; On Windows, use the following command instead:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev:windows
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Production mode:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run build
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CLI Mode&lt;/h3&gt; 
&lt;p&gt;CLI mode enables programmatic interaction with MCP servers from the command line, ideal for scripting, automation, and integration with coding assistants. This creates an efficient feedback loop for MCP server development.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx @modelcontextprotocol/inspector --cli node build/index.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The CLI mode supports most operations across tools, resources, and prompts. A few examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Basic usage
npx @modelcontextprotocol/inspector --cli node build/index.js

# With config file
npx @modelcontextprotocol/inspector --cli --config path/to/config.json --server myserver

# List available tools
npx @modelcontextprotocol/inspector --cli node build/index.js --method tools/list

# Call a specific tool
npx @modelcontextprotocol/inspector --cli node build/index.js --method tools/call --tool-name mytool --tool-arg key=value --tool-arg another=value2

# Call a tool with JSON arguments
npx @modelcontextprotocol/inspector --cli node build/index.js --method tools/call --tool-name mytool --tool-arg 'options={"format": "json", "max_tokens": 100}'

# List available resources
npx @modelcontextprotocol/inspector --cli node build/index.js --method resources/list

# List available prompts
npx @modelcontextprotocol/inspector --cli node build/index.js --method prompts/list

# Connect to a remote MCP server (default is SSE transport)
npx @modelcontextprotocol/inspector --cli https://my-mcp-server.example.com

# Connect to a remote MCP server (with Streamable HTTP transport)
npx @modelcontextprotocol/inspector --cli https://my-mcp-server.example.com --transport http --method tools/list

# Connect to a remote MCP server (with custom headers)
npx @modelcontextprotocol/inspector --cli https://my-mcp-server.example.com --transport http --method tools/list --header "X-API-Key: your-api-key"

# Call a tool on a remote server
npx @modelcontextprotocol/inspector --cli https://my-mcp-server.example.com --method tools/call --tool-name remotetool --tool-arg param=value

# List resources from a remote server
npx @modelcontextprotocol/inspector --cli https://my-mcp-server.example.com --method resources/list
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;UI Mode vs CLI Mode: When to Use Each&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Use Case&lt;/th&gt; 
   &lt;th&gt;UI Mode&lt;/th&gt; 
   &lt;th&gt;CLI Mode&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Server Development&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Visual interface for interactive testing and debugging during development&lt;/td&gt; 
   &lt;td&gt;Scriptable commands for quick testing and continuous integration; creates feedback loops with AI coding assistants like Cursor for rapid development&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Resource Exploration&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Interactive browser with hierarchical navigation and JSON visualization&lt;/td&gt; 
   &lt;td&gt;Programmatic listing and reading for automation and scripting&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Tool Testing&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Form-based parameter input with real-time response visualization&lt;/td&gt; 
   &lt;td&gt;Command-line tool execution with JSON output for scripting&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Prompt Engineering&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Interactive sampling with streaming responses and visual comparison&lt;/td&gt; 
   &lt;td&gt;Batch processing of prompts with machine-readable output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Debugging&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Request history, visualized errors, and real-time notifications&lt;/td&gt; 
   &lt;td&gt;Direct JSON output for log analysis and integration with other tools&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Automation&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
   &lt;td&gt;Ideal for CI/CD pipelines, batch processing, and integration with coding assistants&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Learning MCP&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Rich visual interface helps new users understand server capabilities&lt;/td&gt; 
   &lt;td&gt;Simplified commands for focused learning of specific endpoints&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License‚Äîsee the &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/inspector/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>heroui-inc/heroui</title>
      <link>https://github.com/heroui-inc/heroui</link>
      <description>&lt;p&gt;üöÄ Beautiful, fast and modern React UI library. (Previously NextUI)&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://heroui.com"&gt; &lt;img width="20%" src="https://raw.githubusercontent.com/heroui-inc/heroui/main/apps/docs/public/isotipo.png" alt="heorui" /&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align="center"&gt;&lt;a href="https://heroui.com"&gt;HeroUI&lt;/a&gt;&lt;/h1&gt;
&lt;a href="https://heroui.com"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/heroui-inc/heroui/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/npm/l/@heroui/react?style=flat" alt="License" /&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/jrgarciadev/nextui"&gt; &lt;img src="https://codecov.io/gh/jrgarciadev/nextui/branch/main/graph/badge.svg?token=QJF2QKR5N4" alt="codecov badge" /&gt; &lt;/a&gt; 
 &lt;!-- &lt;a href="https://github.com/heroui-inc/heroui/actions/workflows/main.yaml"&gt;
    &lt;img src="https://github.com/heroui-inc/heroui/actions/workflows/main.yaml/badge.svg" alt="CI/CD heroui"&gt;
  &lt;/a&gt; --&gt; &lt;a href="https://www.npmjs.com/package/@heroui/react"&gt; &lt;img src="https://img.shields.io/npm/dm/@heroui/react.svg?style=flat-round" alt="npm downloads" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a aria-label="heroui learn" href="https://heroui.com/learn"&gt;&lt;/a&gt;&lt;a href="https://heroui.com/guide"&gt;https://heroui.com/guide&lt;/a&gt; to get started with HeroUI.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://heroui.com/docs"&gt;https://heroui.com/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Storybook&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://storybook.heroui.com/"&gt;https://storybook.heroui.com&lt;/a&gt; to view the storybook for all components.&lt;/p&gt; 
&lt;h2&gt;Canary Release&lt;/h2&gt; 
&lt;p&gt;Canary versions are available after every merge into &lt;code&gt;canary&lt;/code&gt; branch. You can install the packages with the tag &lt;code&gt;canary&lt;/code&gt; in npm to use the latest changes before the next production release.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://canary.heroui.com/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://canary-sb.heroui.com"&gt;Storybook&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;We're excited to see the community adopt HeroUI, raise issues, and provide feedback. Whether it's a feature request, bug report, or a project to showcase, please get involved!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/9b6yyZKmH4"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/hero_ui"&gt;X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/heroui-inc/heroui/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are always welcome!&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://github.com/heroui-inc/heroui/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for ways to get started.&lt;/p&gt; 
&lt;p&gt;Please adhere to this project's &lt;a href="https://github.com/heroui-inc/heroui/raw/main/CODE_OF_CONDUCT.md"&gt;CODE_OF_CONDUCT&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://choosealicense.com/licenses/mit/"&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ZuodaoTech/everyone-can-use-english</title>
      <link>https://github.com/ZuodaoTech/everyone-can-use-english</link>
      <description>&lt;p&gt;‰∫∫‰∫∫ÈÉΩËÉΩÁî®Ëã±ËØ≠&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/assets/icon.png" alt="Clash" width="128" /&gt; 
&lt;/div&gt; 
&lt;h3 align="center"&gt; AI ÊòØÂΩì‰ªä‰∏ñÁïå‰∏äÊúÄÂ•ΩÁöÑÂ§ñËØ≠ËÄÅÂ∏àÔºåEnjoy ÂÅö AI ÊúÄÂ•ΩÁöÑÂä©Êïô„ÄÇ &lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml/badge.svg?sanitize=true" alt="Deploy 1000h website" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml/badge.svg?sanitize=true" alt="Test Enjoy App" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml/badge.svg?sanitize=true" alt="Release Enjoy App" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fconfig%2Fapp_version&amp;amp;query=%24.version&amp;amp;label=Latest&amp;amp;link=https%3A%2F%2F1000h.org%2Fenjoy-app%2Finstall.html" alt="Latest Version" /&gt; &lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fbadges%2Frecordings" alt="Recording Duration" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;ÁΩëÈ°µÁâà&lt;/h2&gt; 
&lt;p&gt;Enjoy ÁΩëÈ°µÁâàÂ∑≤Áªè‰∏äÁ∫øÔºåÂèØËÆøÈóÆ &lt;a href="https://enjoy.bot"&gt;https://enjoy.bot&lt;/a&gt; Áõ¥Êé•‰ΩøÁî®„ÄÇ&lt;/p&gt; 
&lt;div align="center" style="display:flex;overflow:auto;gap:10px;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audios.jpg" alt="Audios" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-add-audio.jpg" alt="Add Audio" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audio-shadow.jpg" alt="Shadow" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audio-assessment.jpg" alt="Assessment" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-new-chat.jpg" alt="New Chat" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-chat.jpg" alt="Chat" width="300" /&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Ê°åÈù¢ÁâàÂÆâË£ÖÂèä‰ΩøÁî®&lt;/h2&gt; 
&lt;p&gt;‰∏ãËΩΩÂèä‰ΩøÁî®Áõ∏ÂÖ≥ËØ¥ÊòéÔºåËØ∑ÂèÇÈòÖ &lt;a href="https://1000h.org/enjoy-app/"&gt;ÊñáÊ°£&lt;/a&gt;„ÄÇ&lt;/p&gt; 
&lt;h2&gt;È¢ÑËßà&lt;/h2&gt; 
&lt;div align="center" style="display:flex;overflow:auto;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/home.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/shadow.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/assessment.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/document.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/chat.png" alt="Home" width="800" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Ê°åÈù¢ÁâàÂºÄÂèë&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn install
yarn enjoy:start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Áõ∏ÂÖ≥ÈòÖËØª&lt;/h2&gt; 
&lt;h3&gt;‰∏ÄÂçÉÂ∞èÊó∂Ôºà2024Ôºâ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/intro.html"&gt;ÁÆÄË¶ÅËØ¥Êòé&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/training-tasks/kick-off.html"&gt;ËÆ≠ÁªÉ‰ªªÂä°&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/sounds-of-american-english/0-intro.html"&gt;ËØ≠Èü≥Â°ëÈÄ†&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/in-the-brain/01-inifinite.html"&gt;Â§ßËÑëÂÜÖÈÉ®&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/self-training/00-intro.html"&gt;Ëá™ÊàëËÆ≠ÁªÉ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;‰∫∫‰∫∫ÈÉΩËÉΩÁî®Ëã±ËØ≠Ôºà2010Ôºâ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/README.md"&gt;ÁÆÄ‰ªã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter1.md"&gt;Á¨¨‰∏ÄÁ´†ÔºöËµ∑ÁÇπ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter2.md"&gt;Á¨¨‰∫åÁ´†ÔºöÂè£ËØ≠&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter3.md"&gt;Á¨¨‰∏âÁ´†ÔºöËØ≠Èü≥&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter4.md"&gt;Á¨¨ÂõõÁ´†ÔºöÊúóËØª&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter5.md"&gt;Á¨¨‰∫îÁ´†ÔºöËØçÂÖ∏&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter6.md"&gt;Á¨¨ÂÖ≠Á´†ÔºöËØ≠Ê≥ï&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter7.md"&gt;Á¨¨‰∏ÉÁ´†ÔºöÁ≤æËØª&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter8.md"&gt;Á¨¨ÂÖ´Á´†ÔºöÂèÆÂò±&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/end.md"&gt;ÂêéËÆ∞&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/h2&gt; 
&lt;p&gt;ËØ∑Êü•ËØ¢ &lt;a href="https://1000h.org/enjoy-app/faq.html"&gt;ÊñáÊ°£ FAQ&lt;/a&gt;„ÄÇ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>supabase/supabase</title>
      <link>https://github.com/supabase/supabase</link>
      <description>&lt;p&gt;The Postgres development platform. Supabase gives you a dedicated Postgres database to build your web, mobile, and AI applications.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://user-images.githubusercontent.com/8291514/213727234-cda046d6-28c6-491a-b284-b86c5cede25d.png#gh-light-mode-only" /&gt; &lt;img src="https://user-images.githubusercontent.com/8291514/213727225-56186826-bee8-43b5-9b15-86e839d89393.png#gh-dark-mode-only" /&gt; &lt;/p&gt; 
&lt;h1&gt;Supabase&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://supabase.com"&gt;Supabase&lt;/a&gt; is the Postgres development platform. We're building the features of Firebase using enterprise-grade open source tools.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Hosted Postgres Database. &lt;a href="https://supabase.com/docs/guides/database"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Authentication and Authorization. &lt;a href="https://supabase.com/docs/guides/auth"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Auto-generated APIs. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; REST. &lt;a href="https://supabase.com/docs/guides/api"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; GraphQL. &lt;a href="https://supabase.com/docs/guides/graphql"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Realtime subscriptions. &lt;a href="https://supabase.com/docs/guides/realtime"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Functions. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Database Functions. &lt;a href="https://supabase.com/docs/guides/database/functions"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Edge Functions &lt;a href="https://supabase.com/docs/guides/functions"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; File Storage. &lt;a href="https://supabase.com/docs/guides/storage"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; AI + Vector/Embeddings Toolkit. &lt;a href="https://supabase.com/docs/guides/ai"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Dashboard&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/supabase/supabase/master/apps/www/public/images/github/supabase-dashboard.png" alt="Supabase Dashboard" /&gt;&lt;/p&gt; 
&lt;p&gt;Watch "releases" of this repo to get notified of major updates.&lt;/p&gt; 
&lt;p&gt;&lt;kbd&gt;&lt;img src="https://raw.githubusercontent.com/supabase/supabase/d5f7f413ab356dc1a92075cb3cee4e40a957d5b1/web/static/watch-repo.gif" alt="Watch this repo" /&gt;&lt;/kbd&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For full documentation, visit &lt;a href="https://supabase.com/docs"&gt;supabase.com/docs&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To see how to Contribute, visit &lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/DEVELOPERS.md"&gt;Getting Started&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community &amp;amp; Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/supabase/discussions"&gt;Community Forum&lt;/a&gt;. Best for: help with building, discussion about database best practices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/supabase/issues"&gt;GitHub Issues&lt;/a&gt;. Best for: bugs and errors you encounter using Supabase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://supabase.com/docs/support#business-support"&gt;Email Support&lt;/a&gt;. Best for: problems with your database or infrastructure.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.supabase.com"&gt;Discord&lt;/a&gt;. Best for: sharing your applications and hanging out with the community.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;p&gt;Supabase is a combination of open source tools. We‚Äôre building the features of Firebase using enterprise-grade, open source products. If the tools and communities exist, with an MIT, Apache 2, or equivalent open license, we will use and support that tool. If the tool doesn't exist, we build and open source it ourselves. Supabase is not a 1-to-1 mapping of Firebase. Our aim is to give developers a Firebase-like developer experience using open source tools.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Supabase is a &lt;a href="https://supabase.com/dashboard"&gt;hosted platform&lt;/a&gt;. You can sign up and start using Supabase without installing anything. You can also &lt;a href="https://supabase.com/docs/guides/hosting/overview"&gt;self-host&lt;/a&gt; and &lt;a href="https://supabase.com/docs/guides/local-development"&gt;develop locally&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/supabase/supabase/master/apps/docs/public/img/supabase-architecture.svg?sanitize=true" alt="Architecture" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.postgresql.org/"&gt;Postgres&lt;/a&gt; is an object-relational database system with over 30 years of active development that has earned it a strong reputation for reliability, feature robustness, and performance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/realtime"&gt;Realtime&lt;/a&gt; is an Elixir server that allows you to listen to PostgreSQL inserts, updates, and deletes using websockets. Realtime polls Postgres' built-in replication functionality for database changes, converts changes to JSON, then broadcasts the JSON over websockets to authorized clients.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://postgrest.org/"&gt;PostgREST&lt;/a&gt; is a web server that turns your PostgreSQL database directly into a RESTful API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/gotrue"&gt;GoTrue&lt;/a&gt; is a JWT-based authentication API that simplifies user sign-ups, logins, and session management in your applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/storage-api"&gt;Storage&lt;/a&gt; a RESTful API for managing files in S3, with Postgres handling permissions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://github.com/supabase/pg_graphql/"&gt;pg_graphql&lt;/a&gt; a PostgreSQL extension that exposes a GraphQL API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/postgres-meta"&gt;postgres-meta&lt;/a&gt; is a RESTful API for managing your Postgres, allowing you to fetch tables, add roles, and run queries, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Kong/kong"&gt;Kong&lt;/a&gt; is a cloud-native API gateway.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Client libraries&lt;/h4&gt; 
&lt;p&gt;Our approach for client libraries is modular. Each sub-library is a standalone implementation for a single external system. This is one of the ways we support existing tools.&lt;/p&gt; 
&lt;table style="table-layout:fixed; white-space: nowrap;"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Client&lt;/th&gt; 
   &lt;th colspan="5"&gt;Feature-Clients (bundled in Supabase client)&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;!-- notranslate --&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Supabase&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://github.com/postgrest/postgrest" target="_blank" rel="noopener noreferrer"&gt;PostgREST&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://github.com/supabase/gotrue" target="_blank" rel="noopener noreferrer"&gt;GoTrue&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://github.com/supabase/realtime" target="_blank" rel="noopener noreferrer"&gt;Realtime&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://github.com/supabase/storage-api" target="_blank" rel="noopener noreferrer"&gt;Storage&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;Functions&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;!-- TEMPLATE FOR NEW ROW --&gt; 
  &lt;!-- START ROW
  &lt;tr&gt;
    &lt;td&gt;lang&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-lang" target="_blank" rel="noopener noreferrer"&gt;supabase-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-lang" target="_blank" rel="noopener noreferrer"&gt;postgrest-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://github.com/supabase-community/gotrue-lang" target="_blank" rel="noopener noreferrer"&gt;gotrue-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://github.com/supabase-community/realtime-lang" target="_blank" rel="noopener noreferrer"&gt;realtime-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://github.com/supabase-community/storage-lang" target="_blank" rel="noopener noreferrer"&gt;storage-lang&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  END ROW --&gt; 
  &lt;!-- /notranslate --&gt; 
  &lt;tr&gt;
   &lt;th colspan="7"&gt;‚ö°Ô∏è Official ‚ö°Ô∏è&lt;/th&gt; 
   &lt;!-- notranslate --&gt; 
  &lt;/tr&gt;
  &lt;tr&gt; 
   &lt;td&gt;JavaScript (TypeScript)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-js" target="_blank" rel="noopener noreferrer"&gt;supabase-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/postgrest-js" target="_blank" rel="noopener noreferrer"&gt;postgrest-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/gotrue-js" target="_blank" rel="noopener noreferrer"&gt;gotrue-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/realtime-js" target="_blank" rel="noopener noreferrer"&gt;realtime-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/storage-js" target="_blank" rel="noopener noreferrer"&gt;storage-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/functions-js" target="_blank" rel="noopener noreferrer"&gt;functions-js&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Flutter&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-flutter" target="_blank" rel="noopener noreferrer"&gt;supabase-flutter&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/postgrest-dart" target="_blank" rel="noopener noreferrer"&gt;postgrest-dart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/gotrue-dart" target="_blank" rel="noopener noreferrer"&gt;gotrue-dart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/realtime-dart" target="_blank" rel="noopener noreferrer"&gt;realtime-dart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/storage-dart" target="_blank" rel="noopener noreferrer"&gt;storage-dart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/functions-dart" target="_blank" rel="noopener noreferrer"&gt;functions-dart&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Swift&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift" target="_blank" rel="noopener noreferrer"&gt;supabase-swift&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift/tree/main/Sources/PostgREST" target="_blank" rel="noopener noreferrer"&gt;postgrest-swift&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift/tree/main/Sources/Auth" target="_blank" rel="noopener noreferrer"&gt;auth-swift&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift/tree/main/Sources/Realtime" target="_blank" rel="noopener noreferrer"&gt;realtime-swift&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift/tree/main/Sources/Storage" target="_blank" rel="noopener noreferrer"&gt;storage-swift&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift/tree/main/Sources/Functions" target="_blank" rel="noopener noreferrer"&gt;functions-swift&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Python&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-py" target="_blank" rel="noopener noreferrer"&gt;supabase-py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/postgrest-py" target="_blank" rel="noopener noreferrer"&gt;postgrest-py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/gotrue-py" target="_blank" rel="noopener noreferrer"&gt;gotrue-py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/realtime-py" target="_blank" rel="noopener noreferrer"&gt;realtime-py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/storage-py" target="_blank" rel="noopener noreferrer"&gt;storage-py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/functions-py" target="_blank" rel="noopener noreferrer"&gt;functions-py&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- /notranslate --&gt; 
  &lt;tr&gt;
   &lt;th colspan="7"&gt;üíö Community üíö&lt;/th&gt; 
   &lt;!-- notranslate --&gt; 
  &lt;/tr&gt;
  &lt;tr&gt; 
   &lt;td&gt;C#&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-csharp" target="_blank" rel="noopener noreferrer"&gt;supabase-csharp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-csharp" target="_blank" rel="noopener noreferrer"&gt;postgrest-csharp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/gotrue-csharp" target="_blank" rel="noopener noreferrer"&gt;gotrue-csharp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/realtime-csharp" target="_blank" rel="noopener noreferrer"&gt;realtime-csharp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/storage-csharp" target="_blank" rel="noopener noreferrer"&gt;storage-csharp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/functions-csharp" target="_blank" rel="noopener noreferrer"&gt;functions-csharp&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-go" target="_blank" rel="noopener noreferrer"&gt;postgrest-go&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/gotrue-go" target="_blank" rel="noopener noreferrer"&gt;gotrue-go&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/storage-go" target="_blank" rel="noopener noreferrer"&gt;storage-go&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/functions-go" target="_blank" rel="noopener noreferrer"&gt;functions-go&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Java&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/gotrue-java" target="_blank" rel="noopener noreferrer"&gt;gotrue-java&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/storage-java" target="_blank" rel="noopener noreferrer"&gt;storage-java&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kotlin&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt" target="_blank" rel="noopener noreferrer"&gt;supabase-kt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt/tree/master/Postgrest" target="_blank" rel="noopener noreferrer"&gt;postgrest-kt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt/tree/master/Auth" target="_blank" rel="noopener noreferrer"&gt;auth-kt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt/tree/master/Realtime" target="_blank" rel="noopener noreferrer"&gt;realtime-kt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt/tree/master/Storage" target="_blank" rel="noopener noreferrer"&gt;storage-kt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt/tree/master/Functions" target="_blank" rel="noopener noreferrer"&gt;functions-kt&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ruby&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-rb" target="_blank" rel="noopener noreferrer"&gt;supabase-rb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-rb" target="_blank" rel="noopener noreferrer"&gt;postgrest-rb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rust&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-rs" target="_blank" rel="noopener noreferrer"&gt;postgrest-rs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Godot Engine (GDScript)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/godot-engine.supabase" target="_blank" rel="noopener noreferrer"&gt;supabase-gdscript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-gdscript" target="_blank" rel="noopener noreferrer"&gt;postgrest-gdscript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/gotrue-gdscript" target="_blank" rel="noopener noreferrer"&gt;gotrue-gdscript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/realtime-gdscript" target="_blank" rel="noopener noreferrer"&gt;realtime-gdscript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/storage-gdscript" target="_blank" rel="noopener noreferrer"&gt;storage-gdscript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/functions-gdscript" target="_blank" rel="noopener noreferrer"&gt;functions-gdscript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- /notranslate --&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- Remove this list if you're translating to another language, it's hard to keep updated across multiple files--&gt; 
&lt;!-- Keep only the link to the list of translation files--&gt; 
&lt;h2&gt;Badges&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/supabase/supabase/master/apps/www/public/badge-made-with-supabase.svg?sanitize=true" alt="Made with Supabase" /&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Made with Supabase](https://supabase.com/badge-made-with-supabase.svg)](https://supabase.com)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;a href="https://supabase.com"&amp;gt;
  &amp;lt;img
    width="168"
    height="30"
    src="https://supabase.com/badge-made-with-supabase.svg"
    alt="Made with Supabase"
  /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/supabase/supabase/master/apps/www/public/badge-made-with-supabase-dark.svg?sanitize=true" alt="Made with Supabase (dark)" /&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Made with Supabase](https://supabase.com/badge-made-with-supabase-dark.svg)](https://supabase.com)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;a href="https://supabase.com"&amp;gt;
  &amp;lt;img
    width="168"
    height="30"
    src="https://supabase.com/badge-made-with-supabase-dark.svg"
    alt="Made with Supabase"
  /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ar.md"&gt;Arabic | ÿßŸÑÿπÿ±ÿ®Ÿäÿ©&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.sq.md"&gt;Albanian / Shqip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.bn.md"&gt;Bangla / ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.bg.md"&gt;Bulgarian / –ë—ä–ª–≥–∞—Ä—Å–∫–∏&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ca.md"&gt;Catalan / Catal√†&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.hr.md"&gt;Croatian / Hrvatski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.cs.md"&gt;Czech / ƒçe≈°tina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.da.md"&gt;Danish / Dansk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.nl.md"&gt;Dutch / Nederlands&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/supabase"&gt;English&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.et.md"&gt;Estonian / eesti keel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.fi.md"&gt;Finnish / Suomalainen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.fr.md"&gt;French / Fran√ßais&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.de.md"&gt;German / Deutsch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.el.md"&gt;Greek / ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.gu.md"&gt;Gujarati / ‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.he.md"&gt;Hebrew / ◊¢◊ë◊®◊ô◊™&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.hi.md"&gt;Hindi / ‡§π‡§ø‡§Ç‡§¶‡•Ä&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.hu.md"&gt;Hungarian / Magyar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ne.md"&gt;Nepali / ‡§®‡•á‡§™‡§æ‡§≤‡•Ä&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.id.md"&gt;Indonesian / Bahasa Indonesia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.it.md"&gt;Italiano / Italian&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.jp.md"&gt;Japanese / Êó•Êú¨Ë™û&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ko.md"&gt;Korean / ÌïúÍµ≠Ïñ¥&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.lt.md"&gt;Lithuanian / lietuvi≈≥&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.lv.md"&gt;Latvian / latviski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ms.md"&gt;Malay / Bahasa Malaysia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.nb.md"&gt;Norwegian (Bokm√•l) / Norsk (Bokm√•l)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.fa.md"&gt;Persian / ŸÅÿßÿ±ÿ≥€å&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.pl.md"&gt;Polish / Polski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.pt.md"&gt;Portuguese / Portugu√™s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.pt-br.md"&gt;Portuguese (Brazilian) / Portugu√™s Brasileiro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ro.md"&gt;Romanian / Rom√¢nƒÉ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ru.md"&gt;Russian / P—É—Å—Å–∫–∏–π&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.sr.md"&gt;Serbian / Srpski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.si.md"&gt;Sinhala / ‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.sk.md"&gt;Slovak / slovensk√Ω&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.sl.md"&gt;Slovenian / Sloven≈°ƒçina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.es.md"&gt;Spanish / Espa√±ol&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.zh-cn.md"&gt;Simplified Chinese / ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.sv.md"&gt;Swedish / Svenska&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.th.md"&gt;Thai / ‡πÑ‡∏ó‡∏¢&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.zh-tw.md"&gt;Traditional Chinese / ÁπÅÈ´î‰∏≠Êñá&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.tr.md"&gt;Turkish / T√ºrk√ße&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.uk.md"&gt;Ukrainian / –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.vi-vn.md"&gt;Vietnamese / Ti·∫øng Vi·ªát&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/languages.md"&gt;List of translations&lt;/a&gt; 
  &lt;!-- Keep only this --&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>MotiaDev/motia</title>
      <link>https://github.com/MotiaDev/motia</link>
      <description>&lt;p&gt;Modern Backend Framework that unifies APIs, background jobs, workflows, and AI Agents into a single core primitive with built-in observability and state management.&lt;/p&gt;&lt;hr&gt;&lt;a href="https://motia.dev"&gt; &lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/github-readme-banner.png" alt="Motia Banner" width="100%" /&gt; &lt;/a&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/14032" style="margin-right:8px;"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/14032" alt="Motia" style="width: 250px; height: 55px; margin-right:8px;" width="250" height="55" /&gt; &lt;/a&gt; &lt;a href="https://vercel.com/blog/summer-2025-oss-program#motia" target="_blank" style="margin-left:8px;"&gt; &lt;img alt="Vercel OSS Program" src="https://vercel.com/oss/program-badge.svg?sanitize=true" style="width: 250px; height: 55px; margin-left:8px;" width="250" height="55" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;strong&gt;üî• The Unified Backend Framework That Eliminates Runtime Fragmentation üî•&lt;/strong&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;em&gt;APIs, background jobs, workflows, and AI agents in one system. JavaScript, TypeScript, Python, and more in one codebase.&lt;/em&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.npmjs.com/package/motia"&gt; &lt;img src="https://img.shields.io/npm/v/motia?style=flat&amp;amp;logo=npm&amp;amp;logoColor=white&amp;amp;color=CB3837&amp;amp;labelColor=000000" alt="npm version" /&gt; &lt;/a&gt; &lt;a href="https://github.com/MotiaDev/motia/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/license-MIT-green?style=flat&amp;amp;logo=opensourceinitiative&amp;amp;logoColor=white&amp;amp;labelColor=000000" alt="license" /&gt; &lt;/a&gt; &lt;a href="https://github.com/MotiaDev/motia"&gt; &lt;img src="https://img.shields.io/github/stars/MotiaDev/motia?style=flat&amp;amp;logo=github&amp;amp;logoColor=white&amp;amp;color=yellow&amp;amp;labelColor=000000" alt="GitHub stars" /&gt; &lt;/a&gt; &lt;a href="https://twitter.com/motiadev" target="_blank"&gt; &lt;img src="https://img.shields.io/badge/Follow-@motiadev-1DA1F2?style=flat&amp;amp;logo=twitter&amp;amp;logoColor=white&amp;amp;labelColor=000000" alt="Twitter Follow" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/motia" target="_blank"&gt; &lt;img src="https://img.shields.io/discord/1322278831184281721?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=5865F2&amp;amp;label=Discord&amp;amp;labelColor=000000" alt="Discord" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.motia.dev/manifesto"&gt;üí° Motia Manifesto&lt;/a&gt; ‚Ä¢ &lt;a href="https://www.motia.dev/docs/getting-started/quick-start"&gt;üöÄ Quick Start&lt;/a&gt; ‚Ä¢ &lt;a href="https://www.motia.dev/docs/concepts/steps/defining-steps"&gt;üìã Defining Steps&lt;/a&gt; ‚Ä¢ &lt;a href="https://www.motia.dev/docs"&gt;üìö Docs&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üéØ What is Motia?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Motia solves backend fragmentation.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Modern software engineering is disjointed ‚Äì APIs live in one framework, background jobs in another, queues have their own tooling, and AI agents are springing up in yet more isolated runtimes. &lt;strong&gt;This fragmentation demands a unified system.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Motia unifies APIs, background jobs, workflows, and AI agents into a &lt;strong&gt;single coherent system&lt;/strong&gt; with shared observability and developer experience. Similar to how React simplified frontend development, where everything is a component, &lt;strong&gt;Motia simplifies backend development, where everything is a Step&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Write &lt;strong&gt;JavaScript, TypeScript, Python, and more&lt;/strong&gt; in the same workflow. &lt;strong&gt;What used to take 5 frameworks to build now comes out of the box with Motia.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://motia.dev"&gt;&lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/github-readme-banner.gif" alt="Motia combines APIs, background queues, and AI agents into one system" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üöÄ Quickstart&lt;/h2&gt; 
&lt;p&gt;Get Motia project up and running in &lt;strong&gt;under 60 seconds&lt;/strong&gt;:&lt;/p&gt; 
&lt;h3&gt;1. Bootstrap a New Motia Project&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx motia@latest create   # runs the interactive terminal
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Follow the prompts to pick a template, project name, and language. &lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/motia-terminal.gif" alt="motia-terminal" /&gt;&lt;/p&gt; 
&lt;h3&gt;2. Start the Workbench&lt;/h3&gt; 
&lt;p&gt;Inside your new project folder, launch the dev server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx motia dev # ‚ûú http://localhost:3000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;That's it!&lt;/strong&gt; You have:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ REST APIs with validation&lt;/li&gt; 
 &lt;li&gt;‚úÖ Visual debugger &amp;amp; tracing&lt;/li&gt; 
 &lt;li&gt;‚úÖ Multi-language support&lt;/li&gt; 
 &lt;li&gt;‚úÖ Event-driven architecture&lt;/li&gt; 
 &lt;li&gt;‚úÖ Zero configuration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/new-workbench.png" alt="new-workbench" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìñ &lt;strong&gt;&lt;a href="https://motia.dev/docs/getting-started/quick-start"&gt;Full tutorial in our docs ‚Üí&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üéØ Step Types&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Trigger&lt;/th&gt; 
   &lt;th&gt;Use Case&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;api&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;HTTP Request&lt;/td&gt; 
   &lt;td&gt;REST endpoints&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;event&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Topic subscription&lt;/td&gt; 
   &lt;td&gt;Background processing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;cron&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Schedule&lt;/td&gt; 
   &lt;td&gt;Recurring jobs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;noop&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Manual&lt;/td&gt; 
   &lt;td&gt;External processes&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìñ &lt;strong&gt;&lt;a href="https://motia.dev/docs/concepts/steps"&gt;Learn more about Steps ‚Üí&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üéØ Examples&lt;/h2&gt; 
&lt;h3&gt;üèÜ &lt;strong&gt;&lt;a href="https://chessarena.ai"&gt;ChessArena.ai&lt;/a&gt;&lt;/strong&gt; - Full-Featured Production App&lt;/h3&gt; 
&lt;p&gt;A complete chess platform benchmarking LLM performance with real-time evaluation.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://chessarena.ai"&gt;Live Website ‚Üí&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://github.com/MotiaDev/chessarena-ai"&gt;Source Code ‚Üí&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src="https://github.com/MotiaDev/chessarena-ai/raw/main/public/images/chessarena.gif?raw=true" alt="ChessArena.ai in action (raw GIF)" /&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Built from scratch to production deployment, featuring:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üîê &lt;strong&gt;Authentication &amp;amp; user management&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;ü§ñ &lt;strong&gt;Multi-agent LLM evaluation&lt;/strong&gt; (OpenAI, Claude, Gemini, Grok)&lt;/li&gt; 
 &lt;li&gt;üêç &lt;strong&gt;Python engine integration&lt;/strong&gt; (Stockfish chess evaluation)&lt;/li&gt; 
 &lt;li&gt;üìä &lt;strong&gt;Real-time streaming&lt;/strong&gt; with live move updates and scoring&lt;/li&gt; 
 &lt;li&gt;üé® &lt;strong&gt;Modern React UI&lt;/strong&gt; with interactive chess boards&lt;/li&gt; 
 &lt;li&gt;üîÑ &lt;strong&gt;Event-driven workflows&lt;/strong&gt; connecting TypeScript APIs to Python processors&lt;/li&gt; 
 &lt;li&gt;üìà &lt;strong&gt;Live leaderboards&lt;/strong&gt; with move-by-move quality scoring&lt;/li&gt; 
 &lt;li&gt;üöÄ &lt;strong&gt;Production deployment&lt;/strong&gt; on Motia Cloud&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üìö &lt;strong&gt;More Examples&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples"&gt;View all 20+ examples ‚Üí&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/ai-deep-research-agent"&gt;AI Research Agent&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Web research with iterative analysis&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/streaming-ai-chatbot"&gt;Streaming Chatbot&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Real-time AI responses&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/gmail-workflow"&gt;Gmail Automation&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Smart email processing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/github-integration-workflow"&gt;GitHub PR Manager&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Automated PR workflows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/finance-agent"&gt;Finance Agent&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Real-time market analysis&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Features demonstrated:&lt;/strong&gt; Multi-language workflows ‚Ä¢ Real-time streaming ‚Ä¢ AI integration ‚Ä¢ Production deployment&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üåê Language Support&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Stable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Stable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Stable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;üöß Beta&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Go&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;üîÑ Soon&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;üìö Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://motia.dev/docs"&gt;üìñ Documentation&lt;/a&gt;&lt;/strong&gt; - Complete guides and API reference&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://discord.gg/motia"&gt;üí¨ Discord&lt;/a&gt;&lt;/strong&gt; - Community support and discussions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia/issues"&gt;üêõ GitHub Issues&lt;/a&gt;&lt;/strong&gt; - Bug reports and feature requests&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/orgs/MotiaDev/projects/2"&gt;üó∫Ô∏è Roadmap&lt;/a&gt;&lt;/strong&gt; - Upcoming features and progress&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üöß Roadmap&lt;/h2&gt; 
&lt;p&gt;We have a public roadmap for Motia, you can view it &lt;a href="https://github.com/orgs/MotiaDev/projects/2/views/4"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Feel free to add comments to the issues, or create a new issue if you have a feature request.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Link&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Python Types&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/485"&gt;#485&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Python types&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Streams: RBAC&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/495"&gt;#495&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for RBAC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Streams: Workbench UI&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/497"&gt;#497&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Workbench UI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Queue Strategies&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/476"&gt;#476&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Queue Strategies&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Reactive Steps&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/477"&gt;#477&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Reactive Steps&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Point in time triggers&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/480"&gt;#480&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Point in time triggers&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Workbench plugins&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/481"&gt;#481&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Workbench plugins&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rewrite our Core in either Go or Rust&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/482"&gt;#482&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Rewrite our Core in either Go or Rust&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Decrease deployment time&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/483"&gt;#483&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Decrease deployment time&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Built-in database support&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/484"&gt;#484&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for built-in database&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Check our &lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia/raw/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;&lt;/strong&gt; to get started.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://motia.dev"&gt;üöÄ Get Started&lt;/a&gt;&lt;/strong&gt; ‚Ä¢ &lt;strong&gt;&lt;a href="https://motia.dev/docs"&gt;üìñ Docs&lt;/a&gt;&lt;/strong&gt; ‚Ä¢ &lt;strong&gt;&lt;a href="https://discord.gg/motia"&gt;üí¨ Discord&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://www.star-history.com/#motiadev/motia&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=motiadev/motia&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;sub&gt;‚≠ê &lt;strong&gt;Star us if you find Motia useful!&lt;/strong&gt;&lt;/sub&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>mantinedev/mantine</title>
      <link>https://github.com/mantinedev/mantine</link>
      <description>&lt;p&gt;A fully featured React components library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mantine&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/mantinedev/mantine/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/npm/l/@mantine/core" alt="NPM" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/mantinedev"&gt;&lt;img src="https://opencollective.com/mantinedev/backers/badge.svg?sanitize=true" alt="Backers" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mantinedev/mantine/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/mantinedev/mantine" alt="GitHub contributors" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@mantine/core"&gt;&lt;img src="https://img.shields.io/npm/v/@mantine/core" alt="npm" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@mantine/hooks"&gt;&lt;img src="https://img.shields.io/npm/dm/@mantine/hooks" alt="npm" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mantinedev/mantine/labels/help%20wanted"&gt;&lt;img src="https://img.shields.io/github/labels/mantinedev/mantine/help%20wanted?label=Contribute" alt="Help wanted" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/wbH82zuWMN"&gt;&lt;img src="https://img.shields.io/badge/Chat%20on-Discord-%235865f2" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://x.com/mantinedev"&gt;&lt;img src="https://img.shields.io/twitter/follow/mantinedev?style=social" alt="X Follow" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://mantine.dev/"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mantine.dev/contribute"&gt;Contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mantinedev/mantine/discussions"&gt;Ask question or give feedback&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mantine.dev/changelog/all-releases"&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/mantinedev"&gt;Follow on X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/wbH82zuWMN"&gt;Join Discord community&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Packages&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@mantine/hooks&lt;/code&gt; ‚Äì collection of 50+ hooks for state and UI management&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@mantine/core&lt;/code&gt; ‚Äì core components library ‚Äì 100+ components&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mantine.dev/form/use-form"&gt;&lt;code&gt;@mantine/form&lt;/code&gt;&lt;/a&gt; ‚Äì forms management library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mantine.dev/charts/getting-started/"&gt;&lt;code&gt;@mantine/charts&lt;/code&gt;&lt;/a&gt; ‚Äì recharts based charts library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mantine.dev/x/notifications"&gt;&lt;code&gt;@mantine/notifications&lt;/code&gt;&lt;/a&gt; ‚Äì a fully featured notifications system&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mantine.dev/x/spotlight"&gt;&lt;code&gt;@mantine/spotlight&lt;/code&gt;&lt;/a&gt; ‚Äì &lt;code&gt;Ctrl + K&lt;/code&gt; command center for your application&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mantine.dev/x/code-highlight/"&gt;&lt;code&gt;@mantine/code-highlight&lt;/code&gt;&lt;/a&gt; ‚Äì code highlight built with &lt;a href="https://highlightjs.org/"&gt;highlight.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mantine.dev/x/tiptap"&gt;&lt;code&gt;@mantine/tiptap&lt;/code&gt;&lt;/a&gt; ‚Äì a Tiptap based rich text editor&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mantine.dev/x/dropzone"&gt;&lt;code&gt;@mantine/dropzone&lt;/code&gt;&lt;/a&gt; ‚Äì manages files drag 'n' drop to an area or entire screen&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mantine.dev/x/carousel"&gt;&lt;code&gt;@mantine/carousel&lt;/code&gt;&lt;/a&gt; ‚Äì Carousel component&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mantine.dev/x/nprogress"&gt;&lt;code&gt;@mantine/nprogress&lt;/code&gt;&lt;/a&gt; ‚Äì navigation progress&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mantine.dev/x/modals"&gt;&lt;code&gt;@mantine/modals&lt;/code&gt;&lt;/a&gt; ‚Äì centralized modals manager&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting help&lt;/h2&gt; 
&lt;p&gt;Mantine has a very friendly community, we are always happy to help you get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/wbH82zuWMN"&gt;Join Discord community&lt;/a&gt; ‚Äì it is the easiest way to get help, all questions are usually answered in about 30 minutes&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mantinedev/mantine/discussions"&gt;GitHub Discussions&lt;/a&gt; ‚Äì ask anything about the project or give feedback&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/mantinedev/mantine/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=mantinedev/mantine" /&gt; &lt;/a&gt; 
&lt;p&gt;&lt;a href="https://mantine.dev/contribute"&gt;Become a contributor&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support development&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/mantinedev"&gt;&lt;img src="https://opencollective.com/mantinedev/backers/badge.svg?sanitize=true" alt="Backers" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Mantine is a MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome &lt;a href="https://opencollective.com/mantinedev"&gt;backers&lt;/a&gt;. If you'd like to join them, please consider contributing financially on &lt;a href="https://opencollective.com/mantinedev"&gt;OpenCollective&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/mantinedev"&gt;&lt;img src="https://opencollective.com/mantinedev/individuals.svg?width=890" alt="Backers" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>prisma/prisma</title>
      <link>https://github.com/prisma/prisma</link>
      <description>&lt;p&gt;Next-generation ORM for Node.js &amp; TypeScript | PostgreSQL, MySQL, MariaDB, SQL Server, SQLite, MongoDB and CockroachDB&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://i.imgur.com/h6UIYTu.png" alt="Prisma" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;Prisma&lt;/h1&gt; 
 &lt;a href="https://www.npmjs.com/package/prisma"&gt;&lt;img src="https://img.shields.io/npm/v/prisma.svg?style=flat" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/prisma/prisma/raw/main/CONTRIBUTING.md"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/prisma/prisma/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-Apache%202-blue" /&gt;&lt;/a&gt; 
 &lt;a href="https://pris.ly/discord"&gt;&lt;img alt="Discord" src="https://img.shields.io/discord/937751382725886062?label=Discord" /&gt;&lt;/a&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.prisma.io/docs/getting-started/quickstart"&gt;Quickstart&lt;/a&gt; 
 &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; 
 &lt;a href="https://www.prisma.io/"&gt;Website&lt;/a&gt; 
 &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; 
 &lt;a href="https://www.prisma.io/docs/"&gt;Docs&lt;/a&gt; 
 &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; 
 &lt;a href="https://github.com/prisma/prisma-examples/"&gt;Examples&lt;/a&gt; 
 &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; 
 &lt;a href="https://www.prisma.io/blog"&gt;Blog&lt;/a&gt; 
 &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; 
 &lt;a href="https://pris.ly/discord?utm_source=github&amp;amp;utm_medium=prisma&amp;amp;utm_content=repo_readme"&gt;Discord&lt;/a&gt; 
 &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; 
 &lt;a href="https://pris.ly/x?utm_source=github&amp;amp;utm_medium=prisma&amp;amp;utm_content=repo_readme"&gt;Twitter&lt;/a&gt; 
 &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; 
 &lt;a href="https://pris.ly/youtube?utm_source=github&amp;amp;utm_medium=prisma&amp;amp;utm_content=repo_readme"&gt;Youtube&lt;/a&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
&lt;/div&gt; 
&lt;h2&gt;What is Prisma?&lt;/h2&gt; 
&lt;p&gt;Prisma ORM is a &lt;strong&gt;next-generation ORM&lt;/strong&gt; that consists of these tools:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.prisma.io/docs/concepts/components/prisma-client"&gt;&lt;strong&gt;Prisma Client&lt;/strong&gt;&lt;/a&gt;: Auto-generated and type-safe query builder for Node.js &amp;amp; TypeScript&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.prisma.io/docs/concepts/components/prisma-migrate"&gt;&lt;strong&gt;Prisma Migrate&lt;/strong&gt;&lt;/a&gt;: Declarative data modeling &amp;amp; migration system&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prisma/studio"&gt;&lt;strong&gt;Prisma Studio&lt;/strong&gt;&lt;/a&gt;: GUI to view and edit data in your database&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Prisma Client can be used in &lt;em&gt;any&lt;/em&gt; Node.js or TypeScript backend application (including serverless applications and microservices). This can be a &lt;a href="https://www.prisma.io/docs/concepts/overview/prisma-in-your-stack/rest"&gt;REST API&lt;/a&gt;, a &lt;a href="https://www.prisma.io/docs/concepts/overview/prisma-in-your-stack/graphql"&gt;GraphQL API&lt;/a&gt;, a gRPC API, or anything else that needs a database.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;If you need a database to use with Prisma ORM, check out &lt;a href="https://www.prisma.io/docs/getting-started/quickstart-prismaPostgres?utm_source=github&amp;amp;utm_medium=prisma-readme"&gt;Prisma Postgres&lt;/a&gt; or if you are looking for our MCP Server, head &lt;a href="https://github.com/prisma/mcp"&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Quickstart (5min)&lt;/h3&gt; 
&lt;p&gt;The fastest way to get started with Prisma is by following the quickstart guides. You can choose either of two databases:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.prisma.io/docs/getting-started/quickstart-prismaPostgres"&gt;Prisma Postgres&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.prisma.io/docs/getting-started/quickstart-sqlite"&gt;SQLite&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bring your own database&lt;/h3&gt; 
&lt;p&gt;If you already have your own database, you can follow these guides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.prisma.io/docs/getting-started/setup-prisma/add-to-existing-project/relational-databases-typescript-postgresql"&gt;Add Prisma to an existing project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.prisma.io/docs/getting-started/setup-prisma/start-from-scratch/relational-databases-typescript-postgresql"&gt;Set up a new project with Prisma from scratch&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How Prisma ORM works&lt;/h2&gt; 
&lt;p&gt;This section provides a high-level overview of how Prisma ORM works and its most important technical components. For a more thorough introduction, visit the &lt;a href="https://www.prisma.io/docs/"&gt;Prisma documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;The Prisma schema&lt;/h3&gt; 
&lt;p&gt;Every project that uses a tool from the Prisma toolkit starts with a &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-schema"&gt;Prisma schema file&lt;/a&gt;. The Prisma schema allows developers to define their &lt;em&gt;application models&lt;/em&gt; in an intuitive data modeling language. It also contains the connection to a database and defines a &lt;em&gt;generator&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-prisma"&gt;// Data source
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Generator
generator client {
  provider = "prisma-client-js"
}

// Data model
model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields:  [authorId], references: [id])
  authorId  Int?
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  posts Post[]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In this schema, you configure three things:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Data source&lt;/strong&gt;: Specifies your database connection (via an environment variable)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generator&lt;/strong&gt;: Indicates that you want to generate Prisma Client&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data model&lt;/strong&gt;: Defines your application models&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h3&gt;The Prisma data model&lt;/h3&gt; 
&lt;p&gt;On this page, the focus is on the data model. You can learn more about &lt;a href="https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/data-sources"&gt;Data sources&lt;/a&gt; and &lt;a href="https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/generators"&gt;Generators&lt;/a&gt; on the respective docs pages.&lt;/p&gt; 
&lt;h4&gt;Functions of Prisma models&lt;/h4&gt; 
&lt;p&gt;The data model is a collection of &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-schema/data-model#defining-models"&gt;models&lt;/a&gt;. A model has two major functions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Represent a table in the underlying database&lt;/li&gt; 
 &lt;li&gt;Provide the foundation for the queries in the Prisma Client API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Getting a data model&lt;/h4&gt; 
&lt;p&gt;There are two major workflows for "getting" a data model into your Prisma schema:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Generate the data model from &lt;a href="https://www.prisma.io/docs/concepts/components/introspection"&gt;introspecting&lt;/a&gt; a database&lt;/li&gt; 
 &lt;li&gt;Manually writing the data model and mapping it to the database with &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-migrate"&gt;Prisma Migrate&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Once the data model is defined, you can &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-client/generating-prisma-client"&gt;generate Prisma Client&lt;/a&gt; which will expose CRUD and more queries for the defined models. If you're using TypeScript, you'll get full type-safety for all queries (even when only retrieving the subsets of a model's fields).&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Accessing your database with Prisma Client&lt;/h3&gt; 
&lt;h4&gt;Generating Prisma Client&lt;/h4&gt; 
&lt;p&gt;The first step when using Prisma Client is installing its npm package:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install @prisma/client
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the installation of this package invokes the &lt;code&gt;prisma generate&lt;/code&gt; command which reads your Prisma schema and &lt;em&gt;generates&lt;/em&gt; the Prisma Client code. The code will be located in &lt;code&gt;node_modules/.prisma/client&lt;/code&gt;, which is exported by &lt;code&gt;node_modules/@prisma/client/index.d.ts&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;After you change your data model, you'll need to manually re-generate Prisma Client to ensure the code inside &lt;code&gt;node_modules/.prisma/client&lt;/code&gt; gets updated:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx prisma generate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Refer to the documentation for more information about &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-client/generating-prisma-client"&gt;"generating the Prisma client"&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Using Prisma Client to send queries to your database&lt;/h4&gt; 
&lt;p&gt;Once the Prisma Client is generated, you can import it in your code and send queries to your database. This is what the setup code looks like.&lt;/p&gt; 
&lt;h5&gt;Import and instantiate Prisma Client&lt;/h5&gt; 
&lt;p&gt;You can import and instantiate Prisma Client as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you can start sending queries via the generated Prisma Client API, here are a few sample queries. Note that all Prisma Client queries return &lt;em&gt;plain old JavaScript objects&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;Learn more about the available operations in the &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-client"&gt;Prisma Client docs&lt;/a&gt; or watch this &lt;a href="https://www.youtube.com/watch?v=LggrE5kJ75I&amp;amp;list=PLn2e1F9Rfr6k9PnR_figWOcSHgc_erDr5&amp;amp;index=4"&gt;demo video&lt;/a&gt; (2 min).&lt;/p&gt; 
&lt;h5&gt;Retrieve all &lt;code&gt;User&lt;/code&gt; records from the database&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const allUsers = await prisma.user.findMany()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Include the &lt;code&gt;posts&lt;/code&gt; relation on each returned &lt;code&gt;User&lt;/code&gt; object&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const allUsers = await prisma.user.findMany({
  include: { posts: true },
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Filter all &lt;code&gt;Post&lt;/code&gt; records that contain &lt;code&gt;"prisma"&lt;/code&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const filteredPosts = await prisma.post.findMany({
  where: {
    OR: [{ title: { contains: 'prisma' } }, { content: { contains: 'prisma' } }],
  },
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Create a new &lt;code&gt;User&lt;/code&gt; and a new &lt;code&gt;Post&lt;/code&gt; record in the same query&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const user = await prisma.user.create({
  data: {
    name: 'Alice',
    email: 'alice@prisma.io',
    posts: {
      create: { title: 'Join us for Prisma Day 2021' },
    },
  },
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Update an existing &lt;code&gt;Post&lt;/code&gt; record&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const post = await prisma.post.update({
  where: { id: 42 },
  data: { published: true },
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Usage with TypeScript&lt;/h4&gt; 
&lt;p&gt;Note that when using TypeScript, the result of this query will be &lt;em&gt;statically typed&lt;/em&gt; so that you can't accidentally access a property that doesn't exist (and any typos are caught at compile-time). Learn more about leveraging Prisma Client's generated types on the &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-client/advanced-usage-of-generated-types"&gt;Advanced usage of generated types&lt;/a&gt; page in the docs.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Prisma has a large and supportive &lt;a href="https://www.prisma.io/community"&gt;community&lt;/a&gt; of enthusiastic application developers. You can join us on &lt;a href="https://pris.ly/discord"&gt;Discord&lt;/a&gt; and here on &lt;a href="https://github.com/prisma/prisma/discussions"&gt;GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Badges&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://prisma.io"&gt;&lt;img src="http://made-with.prisma.io/dark.svg?sanitize=true" alt="Made with Prisma" /&gt;&lt;/a&gt; &lt;a href="https://prisma.io"&gt;&lt;img src="http://made-with.prisma.io/indigo.svg?sanitize=true" alt="Made with Prisma" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Built something awesome with Prisma? üåü Show it off with these &lt;a href="https://github.com/prisma/presskit?tab=readme-ov-file#badges"&gt;badges&lt;/a&gt;, perfect for your readme or website.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[![Made with Prisma](http://made-with.prisma.io/dark.svg)](https://prisma.io)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;[![Made with Prisma](http://made-with.prisma.io/indigo.svg)](https://prisma.io)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you have a security issue to report, please contact us at &lt;a href="mailto:security@prisma.io?subject=%5BGitHub%5D%20Prisma%202%20Security%20Report%20"&gt;security@prisma.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;h3&gt;Ask a question about Prisma&lt;/h3&gt; 
&lt;p&gt;You can ask questions and initiate &lt;a href="https://github.com/prisma/prisma/discussions/"&gt;discussions&lt;/a&gt; about Prisma-related topics in the &lt;code&gt;prisma&lt;/code&gt; repository on GitHub.&lt;/p&gt; 
&lt;p&gt;üëâ &lt;a href="https://github.com/prisma/prisma/discussions/new"&gt;&lt;strong&gt;Ask a question&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Create a bug report for Prisma&lt;/h3&gt; 
&lt;p&gt;If you see an error message or run into an issue, please make sure to create a bug report! You can find &lt;a href="https://www.prisma.io/docs/guides/other/troubleshooting-orm/creating-bug-reports"&gt;best practices for creating bug reports&lt;/a&gt; (like including additional debugging output) in the docs.&lt;/p&gt; 
&lt;p&gt;üëâ &lt;a href="https://pris.ly/prisma-prisma-bug-report"&gt;&lt;strong&gt;Create bug report&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Submit a feature request&lt;/h3&gt; 
&lt;p&gt;If Prisma currently doesn't have a certain feature, be sure to check out the &lt;a href="https://www.prisma.io/docs/more/roadmap"&gt;roadmap&lt;/a&gt; to see if this is already planned for the future.&lt;/p&gt; 
&lt;p&gt;If the feature on the roadmap is linked to a GitHub issue, please make sure to leave a üëç reaction on the issue and ideally a comment with your thoughts about the feature!&lt;/p&gt; 
&lt;p&gt;üëâ &lt;a href="https://github.com/prisma/prisma/issues/new?assignees=&amp;amp;labels=&amp;amp;template=feature_request.md&amp;amp;title="&gt;&lt;strong&gt;Submit feature request&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Refer to our &lt;a href="https://github.com/prisma/prisma/raw/main/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; and &lt;a href="https://github.com/prisma/prisma/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct for contributors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Tests Status&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prisma Tests Status: &lt;a href="https://github.com/prisma/prisma/actions/workflows/test.yml?query=branch%3Amain"&gt;&lt;img src="https://github.com/prisma/prisma/workflows/CI/badge.svg?sanitize=true" alt="Prisma Tests Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Ecosystem Tests Status: &lt;a href="https://github.com/prisma/ecosystem-tests/actions/workflows/test.yaml?query=branch%3Adev"&gt;&lt;img src="https://github.com/prisma/ecosystem-tests/workflows/test/badge.svg?sanitize=true" alt="Ecosystem Tests Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>huggingface/aisheets</title>
      <link>https://github.com/huggingface/aisheets</link>
      <description>&lt;p&gt;Build, enrich, and transform datasets using AI models with no code&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt;ü§ó Hugging Face AI Sheets&lt;/h1&gt; 
 &lt;p&gt;&lt;em&gt;Build, enrich, and transform datasets using AI models with no code. Deploy locally or on the Hub with access to thousands of open models.&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://huggingface.co/blog/aisheets"&gt;Introduction&lt;/a&gt; ‚Ä¢ &lt;a href="https://huggingface.co/spaces/aisheets/sheets"&gt;Try it out&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;
  &lt;video width="400" src="https://github.com/user-attachments/assets/a284e4d4-3c11-4885-96cc-2f6f0314f2a1"&gt;&lt;/video&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;What's AI Sheets?&lt;/h2&gt; 
&lt;p&gt;Hugging Face AI Sheets is an open-source tool for building, enriching, and transforming datasets using AI models with no code. The tool can be deployed locally or on the Hub. It lets you use thousands of open models from the Hugging Face Hub via Inference Providers or local models, including &lt;code&gt;gpt-oss&lt;/code&gt; from OpenAI!&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Using the AI Sheets Space&lt;/h3&gt; 
&lt;p&gt;Try it instantly at &lt;a href="https://huggingface.co/spaces/aisheets/sheets"&gt;https://huggingface.co/spaces/aisheets/sheets&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Using Docker&lt;/h3&gt; 
&lt;p&gt;First, get your Hugging Face token from &lt;a href="https://huggingface.co/settings/tokens"&gt;https://huggingface.co/settings/tokens&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export HF_TOKEN=your_token_here
docker run -p 3000:3000 \
-e HF_TOKEN=HF_TOKEN \
aisheets/sheets
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open &lt;code&gt;http://localhost:3000&lt;/code&gt; in your browser.&lt;/p&gt; 
&lt;h3&gt;Using pnpm&lt;/h3&gt; 
&lt;p&gt;First, &lt;a href="https://pnpm.io/installation"&gt;install pnpm&lt;/a&gt; if you haven't already.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/huggingface/aisheets.git
cd sheets
export HF_TOKEN=your_token_here
pnpm install --frozen-lockfile
pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open &lt;code&gt;http://localhost:5173&lt;/code&gt; in your browser.&lt;/p&gt; 
&lt;h4&gt;Building for production&lt;/h4&gt; 
&lt;p&gt;To build the production application, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will create a production build in the &lt;code&gt;dist&lt;/code&gt; directory.&lt;/p&gt; 
&lt;p&gt;Then, you can launch the built-in Express server to serve the production build:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export HF_TOKEN=your_token_here
pnpm serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running data generation scripts using HF Jobs&lt;/h2&gt; 
&lt;p&gt;If you want to generate a larger dataset, you can use the above-mentioned config and script, like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;hf jobs uv run \
-s HF_TOKEN=$HF_TOKEN \
https://github.com/huggingface/aisheets/raw/refs/heads/main/scripts/extend_dataset/with_inference_client.py \ # script for running the pipeline
nvidia/Nemotron-Personas dvilasuero/nemotron-kimi-qa-distilled \
--config https://huggingface.co/datasets/dvilasuero/nemotron-personas-kimi-questions/raw/main/config.yml \ # config with prompts
--num-rows 100 # limit to 100 rows, leave empty for the full dataset
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can use a script that utilizes vllm inference instead of the inference client. This script helps you to save on inference costs, but it requires you to set up a vllm-compatible flavor when running the job:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;hf jobs uv run --flavor l4x1 \
-s HF_TOKEN=$HF_TOKEN \
https://github.com/huggingface/aisheets/raw/refs/heads/main/scripts/extend_dataset/with_vllm.py \ # script for running the pipeline
nvidia/Nemotron-Personas dvilasuero/nemotron-kimi-qa-distilled \
--config https://huggingface.co/datasets/dvilasuero/nemotron-personas-kimi-questions/raw/main/config.yml \ # config with prompts
--num-rows 100 \ # limit to 100 rows, leave empty for the full dataset
--vllm-model deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running AI Sheets with custom (and local) LLMs&lt;/h2&gt; 
&lt;p&gt;By default, AI Sheets is configured to use the Huggingface Inference Providers API to run inference on the latest open-source models. However, you can also run Sheets with own custom LLMs, such as those hosted on your own infrastructure or other cloud providers. The only requirement is that your LLMs must support the &lt;a href="https://platform.openai.com/docs/api-reference/introduction"&gt;OpenAI API specification&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Steps&lt;/h3&gt; 
&lt;p&gt;When running AI Sheets with custom LLMs, you need to set some environment variables to point the inference calls to your custom LLMs. Here are the steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Set the &lt;code&gt;MODEL_ENDPOINT_URL&lt;/code&gt; environment variable&lt;/strong&gt;: This variable should point to the base URL of your custom LLM's API endpoint. For example, if you are using Ollama to run your LLM locally, you would set it like this:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export MODEL_ENDPOINT_URL=http://localhost:11434
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Since Ollama starts a local server on port &lt;code&gt;11434&lt;/code&gt; by default, this URL will point to your local Ollama instance.&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;Set the &lt;code&gt;MODEL_ENDPOINT_NAME&lt;/code&gt; environment variable&lt;/strong&gt;: This variable should specify the name of the model you want to use. For example, if you are using the &lt;code&gt;llama3&lt;/code&gt; model, you would set it like this:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export MODEL_ENDPOINT_NAME=llama3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is a crucial step to conform to the OpenAI API specification. The model name is a required parameter in the &lt;a href="https://platform.openai.com/docs/api-reference/responses/create#responses-create-model"&gt;OpenAI API&lt;/a&gt;, and it is used to identify which model to use for inference.&lt;/p&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;strong&gt;Run the AI Sheets app&lt;/strong&gt;: After setting the environment variables, you can run the Sheets app as usual. The app will now use your custom LLM for inference instead of the default Huggingface Inference Providers API as the default behavior. Anyway, all the models provided by the Huggingface Inference Providers API will still be available when selecting a model in the column settings.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Note: The text-to-image generation feature cannot be customized yet. It will always utilize the Hugging Face Inference Providers API to generate images. Take this into account when running AI Sheets with custom LLMs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Example of running AI Sheets with Ollama&lt;/h3&gt; 
&lt;p&gt;To run AI Sheets with Ollama, you can follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start the Ollama server, and run the model of your choice&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export OLLAMA_NOHISTORY=1
ollama serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;ollama run llama3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(Visit the Ollama &lt;a href="https://github.com/ollama/ollama/raw/main/docs/faq.md#how-can-i-specify-the-context-window-size"&gt;FAQ&lt;/a&gt; page to know more about Ollama server configuration)&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Set the environment variables:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export MODEL_ENDPOINT_URL=http://localhost:11434
export MODEL_ENDPOINT_NAME=llama3
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Run the AI Sheets app:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pnpm serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will start the AI Sheets app and use the &lt;code&gt;llama3&lt;/code&gt; model running on your local Ollama instance for inference.&lt;/p&gt; 
&lt;h2&gt;Advanced configuration&lt;/h2&gt; 
&lt;p&gt;AI Sheets defines some environment variables that can be used to customize the behavior of the application. In the following sections, we will describe the available environment variables and their usage.&lt;/p&gt; 
&lt;h3&gt;&amp;nbsp;Authentication&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;OAUTH_CLIENT_ID&lt;/code&gt;: The Hugging Face OAuth client ID for the application. This is used to authenticate users via the Hugging Face OAuth. If this variable is defined, it will be used to authenticate users. (See how to setup the Hugging Face OAuth &lt;a href="https://huggingface.co/blog/frascuchon/running-sheets-locally#oauth-authentication"&gt;here&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;HF_TOKEN&lt;/code&gt;: A Hugging Face token to use for authentication. If this variable is defined, it will be used for authenticated inference calls, instead of the OAuth token.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;OAUTH_SCOPES&lt;/code&gt;: The scopes to request during the OAuth authentication. The default value is &lt;code&gt;openid profile inference-api manage-repos&lt;/code&gt;. This variable is used to request the necessary permissions for the application to function correctly, and normally does not need to be changed.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&amp;nbsp;Inference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;DEFAULT_MODEL&lt;/code&gt;: The default model id to use when calling the inference API for text generation. The default value is &lt;code&gt;meta-llama/Llama-3.3-70B-Instruct&lt;/code&gt;. This variable can be used to change the default model used for text generation and must be a valid model id from the &lt;a href="https://huggingface.co/models?pipeline_tag=text-generation&amp;amp;inference_provider=all&amp;amp;sort=trending"&gt;Hugging Face Hub&lt;/a&gt;,&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;DEFAULT_MODEL_PROVIDER&lt;/code&gt;: The default model provider to use when calling the inference API for text generation. The default value is &lt;code&gt;nebius&lt;/code&gt;. This variable can be used to change the default model provider used for text generation and must be a valid provider from the &lt;a href="https://huggingface.co/docs/inference-providers/en/index"&gt;Hugging Face Inference Providers&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ORG_BILLING&lt;/code&gt;: The organization billing to use for inference calls. If this variable is defined, the inference calls will be billed to the specified organization. This is useful for organizations that want to manage their inference costs and usage. Remember that users must be part of the organization to use this feature, or an &lt;code&gt;HF_TOKEN&lt;/code&gt; of a user that is part of the organization must be defined.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;MODEL_ENDPOINT_URL&lt;/code&gt;: The URL of a custom inference endpoint to use for text generation. If this variable is defined, it will be used instead of the default Hugging Face Inference API. This is useful for using custom inference endpoints that are not hosted on the Hugging Face Hub, such as Ollama or LLM Studio. The URL must be a valid endpoint that supports the &lt;a href="https://platform.openai.com/docs/api-reference/chat/create"&gt;OpenAI API format&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;MODEL_ENDPOINT_NAME&lt;/code&gt;: The model id to use when calling the custom inference endpoint defined by &lt;code&gt;MODEL_ENDPOINT_URL&lt;/code&gt;. This variable is required if &lt;code&gt;MODEL_ENDPOINT_URL&lt;/code&gt; is defined for custom inference endpoints that require a model id, such as Ollama or LLM Studio. The model id must correspond to the model deployed on the custom inference endpoint.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;NUM_CONCURRENT_REQUESTS&lt;/code&gt;: The number of concurrent requests to allow when calling the inference API in the column cells generation process. The default value is &lt;code&gt;5&lt;/code&gt;, and the maximum value is &lt;code&gt;10&lt;/code&gt;. This is useful to control the number of concurrent requests made to the inference API and avoid hitting rate limits defined by the provider.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Miscellaneous&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;DATA_DIR&lt;/code&gt;: The directory where the application will store all its data. The default value is &lt;code&gt;./data&lt;/code&gt;. This variable can be used to change the data directory used by the application. The directory must be writable by the application.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;SERPER_API_KEY&lt;/code&gt;: The API key to use for the Serper web search API. If this variable is defined, it will be used to authenticate web search requests. If this variable is not defined, web search will be disabled. The Serper API key can be obtained from the &lt;a href="https://serper.dev/"&gt;Serper website&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;TELEMETRY_ENABLED&lt;/code&gt;: A boolean value that indicates whether telemetry is enabled or not. The default value is &lt;code&gt;1&lt;/code&gt;. This variable can be used to disable telemetry if desired. Telemetry is used to collect anonymous usage data to help improve the application.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;EXAMPLES_PROMPT_MAX_CONTEXT_SIZE&lt;/code&gt;: The maximum context size (in characters) for the examples section in the prompt for text generation. The default value is &lt;code&gt;8192&lt;/code&gt;. If the examples section exceeds this size, it will be truncated. This variable can be used when the examples section is too large and needs to be reduced to fit within the context size limits of the model.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;SOURCES_PROMPT_MAX_CONTEXT_SIZE&lt;/code&gt;: The maximum context size (in characters) for the sources section in the prompt for text generation. The default value is &lt;code&gt;61440&lt;/code&gt;. If the sources section exceeds this size, it will be truncated. This variable can be used when the sources section is too large and needs to be reduced to fit within the context size limits of the model.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Developer docs&lt;/h2&gt; 
&lt;h3&gt;Dev dependencies on your vscode&lt;/h3&gt; 
&lt;h4&gt;vitest runner&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=rluvaton.vscode-vitest"&gt;https://marketplace.visualstudio.com/items?itemName=rluvaton.vscode-vitest&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;biome&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=biomejs.biome"&gt;https://marketplace.visualstudio.com/items?itemName=biomejs.biome&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Project Structure&lt;/h3&gt; 
&lt;p&gt;This project is using Qwik with &lt;a href="https://qwik.dev/qwikcity/overview/"&gt;QwikCity&lt;/a&gt;. QwikCity is just an extra set of tools on top of Qwik to make it easier to build a full site, including directory-based routing, layouts, and more.&lt;/p&gt; 
&lt;p&gt;Inside your project, you'll see the following directory structure:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;‚îú‚îÄ‚îÄ public/
‚îÇ   ‚îî‚îÄ‚îÄ ...
‚îî‚îÄ‚îÄ src/
    ‚îú‚îÄ‚îÄ components/ --&amp;gt; Stateless components
    ‚îÇ   ‚îî‚îÄ‚îÄ ...
    ‚îú‚îÄ‚îÄ features/ --&amp;gt; Components with business logic
    ‚îÇ   ‚îî‚îÄ‚îÄ ...
    ‚îî‚îÄ‚îÄ routes/
        ‚îî‚îÄ‚îÄ ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;src/routes&lt;/code&gt;: Provides the directory-based routing, which can include a hierarchy of &lt;code&gt;layout.tsx&lt;/code&gt; layout files, and an &lt;code&gt;index.tsx&lt;/code&gt; file as the page. Additionally, &lt;code&gt;index.ts&lt;/code&gt; files are endpoints. Please see the &lt;a href="https://qwik.dev/qwikcity/routing/overview/"&gt;routing docs&lt;/a&gt; for more info.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;src/components&lt;/code&gt;: Recommended directory for components.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;public&lt;/code&gt;: Any static assets, like images, can be placed in the public directory. Please see the &lt;a href="https://vitejs.dev/guide/assets.html#the-public-directory"&gt;Vite public directory&lt;/a&gt; for more info.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development&lt;/h3&gt; 
&lt;p&gt;Run this on your root folder&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;touch .env
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add in your &lt;code&gt;.env&lt;/code&gt; file the following variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;HF_TOKEN=your_hugging_face_token
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Development mode uses &lt;a href="https://vitejs.dev/"&gt;Vite's development server&lt;/a&gt;. The &lt;code&gt;dev&lt;/code&gt; command will server-side render (SSR) the output during development.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: during dev mode, Vite may request a significant number of &lt;code&gt;.js&lt;/code&gt; files. This does not represent a Qwik production build.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Preview&lt;/h3&gt; 
&lt;p&gt;The preview command will create a production build of the client modules, a production build of &lt;code&gt;src/entry.preview.tsx&lt;/code&gt;, and run a local server. The preview server is only for convenience to preview a production build locally and should not be used as a production server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm preview
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Production&lt;/h3&gt; 
&lt;p&gt;The production build will generate client and server modules by running both client and server build commands. The build command will use Typescript to run a type check on the source code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Express Server&lt;/h3&gt; 
&lt;p&gt;This app has a minimal &lt;a href="https://expressjs.com/"&gt;Express server&lt;/a&gt; implementation. After running a full build, you can preview the build using the command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;pnpm serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>