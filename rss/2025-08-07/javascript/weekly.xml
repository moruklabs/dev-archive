<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Weekly Trending</title>
    <description>Weekly Trending of JavaScript in GitHub</description>
    <pubDate>Wed, 06 Aug 2025 01:44:25 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>FortAwesome/Font-Awesome</title>
      <link>https://github.com/FortAwesome/Font-Awesome</link>
      <description>&lt;p&gt;The iconic SVG, font, and CSS toolkit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src="https://img.fortawesome.com/349cfdf6/fa-free-logo.svg?sanitize=true" alt="Font Awesome Free" width="50%"&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Version 7&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Font Awesome is the Internet's icon library and toolkit, used by millions of designers, developers, and content creators.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Learn how to get started with Font Awesome and then dive deeper into other and advanced topics:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://fontawesome.com/docs"&gt;Docs for version 7&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Where did Font Awesome 6, 5, 4 (or 3) go?&lt;/h3&gt; 
&lt;p&gt;Now that Font Awesome 7 has been released we are marking version 6 as Long Term Support (LTS). Version 6 will get critical bug fixes only. Version 3, 4, and 5 are now end-of-life and we don't plan on releasing any further versions of these.&lt;/p&gt; 
&lt;p&gt;You can see a complete list of versions on &lt;a href="https://fontawesome.com/versions"&gt;our Versions page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Change log&lt;/h2&gt; 
&lt;p&gt;The change log for releases is now &lt;a href="https://fontawesome.com/docs/changelog/"&gt;available directly on our site&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Looking for older versions of Font Awesome? Check the &lt;a href="https://github.com/FortAwesome/Font-Awesome/releases"&gt;releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Upgrading&lt;/h2&gt; 
&lt;p&gt;From time-to-time we'll have special upgrading instructions from one version to the next.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.fontawesome.com/upgrade/upgrade-on-web"&gt;Web upgrading guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.fontawesome.com/upgrade/upgrade-on-desktop"&gt;Desktop upgrading guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Code of conduct&lt;/h2&gt; 
&lt;p&gt;We will behave ourselves if you behave yourselves. For more details see our &lt;a href="https://raw.githubusercontent.com/FortAwesome/Font-Awesome/7.x/CODE_OF_CONDUCT.md"&gt;CODE_OF_CONDUCT.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read through our &lt;a href="https://raw.githubusercontent.com/FortAwesome/Font-Awesome/7.x/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt;. Included are directions for opening issues.&lt;/p&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;Font Awesome will be maintained under the Semantic Versioning guidelines as much as possible. Releases will be numbered with the following format:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.&amp;lt;patch&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For more information on SemVer, please visit &lt;a href="https://semver.org"&gt;https://semver.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The major version "7" is part of an umbrella release. It includes many different types of files and technologies. Therefore we deviate from normal SemVer in the following ways:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Any release may update the design, look-and-feel, or branding of an existing icon&lt;/li&gt; 
 &lt;li&gt;We will never intentionally release a &lt;code&gt;patch&lt;/code&gt; version update that breaks backward compatibility&lt;/li&gt; 
 &lt;li&gt;A &lt;code&gt;minor&lt;/code&gt; release &lt;strong&gt;may include backward-incompatible changes&lt;/strong&gt; but we will write clear upgrading instructions in UPGRADING.md&lt;/li&gt; 
 &lt;li&gt;A &lt;code&gt;minor&lt;/code&gt; or &lt;code&gt;patch&lt;/code&gt; release will never remove icons&lt;/li&gt; 
 &lt;li&gt;Bug fixes will be addressed as &lt;code&gt;patch&lt;/code&gt; releases unless they include backward incompatibility then they will be &lt;code&gt;minor&lt;/code&gt; releases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Font Awesome Free is free, open source, and GPL friendly. You can use it for commercial projects, open source projects, or really almost whatever you want.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Icons ‚Äî CC BY 4.0 License 
  &lt;ul&gt; 
   &lt;li&gt;In the Font Awesome Free download, the CC BY 4.0 license applies to all icons packaged as .svg and .js files types.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Fonts ‚Äî SIL OFL 1.1 License 
  &lt;ul&gt; 
   &lt;li&gt;In the Font Awesome Free download, the SIL OLF license applies to all icons packaged as web and desktop font files.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Code ‚Äî MIT License 
  &lt;ul&gt; 
   &lt;li&gt;In the Font Awesome Free download, the MIT license applies to all non-font and non-icon files.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Attribution is required by MIT, SIL OLF, and CC BY licenses. Downloaded Font Awesome Free files already contain embedded comments with sufficient attribution, so you shouldn't need to do anything additional when using these files normally.&lt;/p&gt; 
&lt;p&gt;We've kept attribution comments terse, so we ask that you do not actively work to remove them from files, especially code. They're a great way for folks to learn about Font Awesome.&lt;/p&gt; 
&lt;h2&gt;Team&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/orgs/FortAwesome/people"&gt;https://github.com/orgs/FortAwesome/people&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nodejs/node</title>
      <link>https://github.com/nodejs/node</link>
      <description>&lt;p&gt;Node.js JavaScript runtime ‚ú®üê¢üöÄ‚ú®&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node.js&lt;/h1&gt; 
&lt;p&gt;Node.js is an open-source, cross-platform JavaScript runtime environment.&lt;/p&gt; 
&lt;p&gt;For information on using Node.js, see the &lt;a href="https://nodejs.org/"&gt;Node.js website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Node.js project uses an &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/GOVERNANCE.md"&gt;open governance model&lt;/a&gt;. The &lt;a href="https://openjsf.org/"&gt;OpenJS Foundation&lt;/a&gt; provides support for the project.&lt;/p&gt; 
&lt;p&gt;Contributors are expected to act in a collaborative manner to move the project forward. We encourage the constructive exchange of contrary opinions and compromise. The &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/GOVERNANCE.md#technical-steering-committee"&gt;TSC&lt;/a&gt; reserves the right to limit or block contributors who repeatedly act in ways that discourage, exhaust, or otherwise negatively affect other participants.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This project has a &lt;a href="https://github.com/nodejs/admin/raw/HEAD/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#support"&gt;Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#release-types"&gt;Release types&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#download"&gt;Download&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#current-and-lts-releases"&gt;Current and LTS releases&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#nightly-releases"&gt;Nightly releases&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#api-documentation"&gt;API documentation&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#verifying-binaries"&gt;Verifying binaries&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#building-nodejs"&gt;Building Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#security"&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#contributing-to-nodejs"&gt;Contributing to Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#current-project-team-members"&gt;Current project team members&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#tsc-technical-steering-committee"&gt;TSC (Technical Steering Committee)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#collaborators"&gt;Collaborators&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#triagers"&gt;Triagers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#release-keys"&gt;Release keys&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Looking for help? Check out the &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/.github/SUPPORT.md"&gt;instructions for getting support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Release types&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Current&lt;/strong&gt;: Under active development. Code for the Current release is in the branch for its major version number (for example, &lt;a href="https://github.com/nodejs/node/tree/v22.x"&gt;v22.x&lt;/a&gt;). Node.js releases a new major version every 6 months, allowing for breaking changes. This happens in April and October every year. Releases appearing each October have a support life of 8 months. Releases appearing each April convert to LTS (see below) each October.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LTS&lt;/strong&gt;: Releases that receive Long Term Support, with a focus on stability and security. Every even-numbered major version will become an LTS release. LTS releases receive 12 months of &lt;em&gt;Active LTS&lt;/em&gt; support and a further 18 months of &lt;em&gt;Maintenance&lt;/em&gt;. LTS release lines have alphabetically-ordered code names, beginning with v4 Argon. There are no breaking changes or feature additions, except in some special circumstances.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nightly&lt;/strong&gt;: Code from the Current branch built every 24-hours when there are changes. Use with caution.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Current and LTS releases follow &lt;a href="https://semver.org"&gt;semantic versioning&lt;/a&gt;. A member of the Release Team &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#release-keys"&gt;signs&lt;/a&gt; each Current and LTS release. For more information, see the &lt;a href="https://github.com/nodejs/Release#readme"&gt;Release README&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Download&lt;/h3&gt; 
&lt;p&gt;Binaries, installers, and source tarballs are available at &lt;a href="https://nodejs.org/en/download/"&gt;https://nodejs.org/en/download/&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Current and LTS releases&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://nodejs.org/download/release/"&gt;https://nodejs.org/download/release/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://nodejs.org/download/release/latest/"&gt;latest&lt;/a&gt; directory is an alias for the latest Current release. The latest-&lt;em&gt;codename&lt;/em&gt; directory is an alias for the latest release from an LTS line. For example, the &lt;a href="https://nodejs.org/download/release/latest-hydrogen/"&gt;latest-hydrogen&lt;/a&gt; directory contains the latest Hydrogen (Node.js 18) release.&lt;/p&gt; 
&lt;h4&gt;Nightly releases&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://nodejs.org/download/nightly/"&gt;https://nodejs.org/download/nightly/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Each directory and filename includes the version (e.g., &lt;code&gt;v22.0.0&lt;/code&gt;), followed by the UTC date (e.g., &lt;code&gt;20240424&lt;/code&gt; for April 24, 2024), and the short commit SHA of the HEAD of the release (e.g., &lt;code&gt;ddd0a9e494&lt;/code&gt;). For instance, a full directory name might look like &lt;code&gt;v22.0.0-nightly20240424ddd0a9e494&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;API documentation&lt;/h4&gt; 
&lt;p&gt;Documentation for the latest Current release is at &lt;a href="https://nodejs.org/api/"&gt;https://nodejs.org/api/&lt;/a&gt;. Version-specific documentation is available in each release directory in the &lt;em&gt;docs&lt;/em&gt; subdirectory. Version-specific documentation is also at &lt;a href="https://nodejs.org/download/docs/"&gt;https://nodejs.org/download/docs/&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Verifying binaries&lt;/h3&gt; 
&lt;p&gt;Download directories contain a &lt;code&gt;SHASUMS256.txt.asc&lt;/code&gt; file with SHA checksums for the files and the releaser PGP signature.&lt;/p&gt; 
&lt;p&gt;You can get a trusted keyring from nodejs/release-keys, e.g. using &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsLo "/path/to/nodejs-keyring.kbx" "https://github.com/nodejs/release-keys/raw/HEAD/gpg/pubring.kbx"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can import the releaser keys in your default keyring, see &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#release-keys"&gt;Release keys&lt;/a&gt; for commands to how to do that.&lt;/p&gt; 
&lt;p&gt;Then, you can verify the files you've downloaded locally (if you're using your default keyring, pass &lt;code&gt;--keyring="${GNUPGHOME:-~/.gnupg}/pubring.kbx"&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsO "https://nodejs.org/dist/${VERSION}/SHASUMS256.txt.asc" \
&amp;amp;&amp;amp; gpgv --keyring="/path/to/nodejs-keyring.kbx" --output SHASUMS256.txt &amp;lt; SHASUMS256.txt.asc \
&amp;amp;&amp;amp; shasum --check SHASUMS256.txt --ignore-missing
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Building Node.js&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/BUILDING.md"&gt;BUILDING.md&lt;/a&gt; for instructions on how to build Node.js from source and a list of supported platforms.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;For information on reporting security vulnerabilities in Node.js, see &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/SECURITY.md"&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing to Node.js&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/CONTRIBUTING.md"&gt;Contributing to the project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nodejs/TSC/raw/HEAD/WORKING_GROUPS.md"&gt;Working Groups&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/strategic-initiatives.md"&gt;Strategic initiatives&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/technical-values.md"&gt;Technical values and prioritization&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Current project team members&lt;/h2&gt; 
&lt;p&gt;For information about the governance of the Node.js project, see &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/GOVERNANCE.md"&gt;GOVERNANCE.md&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- node-core-utils and find-inactive-tsc.mjs depend on the format of the TSC
     list. If the format changes, those utilities need to be tested and
     updated. --&gt; 
&lt;h3&gt;TSC (Technical Steering Committee)&lt;/h3&gt; 
&lt;h4&gt;TSC voting members&lt;/h4&gt; 
&lt;!--lint disable prohibited-strings--&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aduh95"&gt;aduh95&lt;/a&gt; - &lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:duhamelantoine1995@gmail.com"&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anonrig"&gt;anonrig&lt;/a&gt; - &lt;strong&gt;Yagiz Nizipli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yagiz@nizipli.com"&gt;yagiz@nizipli.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benjamingr"&gt;benjamingr&lt;/a&gt; - &lt;strong&gt;Benjamin Gruenbaum&lt;/strong&gt; &amp;lt;&lt;a href="mailto:benjamingr@gmail.com"&gt;benjamingr@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BridgeAR"&gt;BridgeAR&lt;/a&gt; - &lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruben@bridgewater.de"&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gireeshpunathil"&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gpunathi@in.ibm.com"&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jasnell"&gt;jasnell&lt;/a&gt; - &lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasnell@gmail.com"&gt;jasnell@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joyeecheung"&gt;joyeecheung&lt;/a&gt; - &lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:joyeec9h3@gmail.com"&gt;joyeec9h3@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/legendecas"&gt;legendecas&lt;/a&gt; - &lt;strong&gt;Chengzhong Wu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:legendecas@gmail.com"&gt;legendecas@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marco-ippolito"&gt;marco-ippolito&lt;/a&gt; - &lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href="mailto:marcoippolito54@gmail.com"&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mcollina"&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href="mailto:matteo.collina@gmail.com"&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mhdawson"&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:midawson@redhat.com"&gt;midawson@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/panva"&gt;panva&lt;/a&gt; - &lt;strong&gt;Filip Skokan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:panva.ip@gmail.com"&gt;panva.ip@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RafaelGSS"&gt;RafaelGSS&lt;/a&gt; - &lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rafael.nunu@hotmail.com"&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RaisinTen"&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:raisinten@gmail.com"&gt;raisinten@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/richardlau"&gt;richardlau&lt;/a&gt; - &lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:richard.lau@ibm.com"&gt;richard.lau@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ronag"&gt;ronag&lt;/a&gt; - &lt;strong&gt;Robert Nagy&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ronagy@icloud.com"&gt;ronagy@icloud.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ruyadorno"&gt;ruyadorno&lt;/a&gt; - &lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruy@vlt.sh"&gt;ruy@vlt.sh&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ShogunPanda"&gt;ShogunPanda&lt;/a&gt; - &lt;strong&gt;Paolo Insogna&lt;/strong&gt; &amp;lt;&lt;a href="mailto:paolo@cowtech.it"&gt;paolo@cowtech.it&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/targos"&gt;targos&lt;/a&gt; - &lt;strong&gt;Micha√´l Zasso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:targos@protonmail.com"&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tniessen"&gt;tniessen&lt;/a&gt; - &lt;strong&gt;Tobias Nie√üen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:tniessen@tnie.de"&gt;tniessen@tnie.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;TSC regular members&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BethGriggs"&gt;BethGriggs&lt;/a&gt; - &lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bethanyngriggs@gmail.com"&gt;bethanyngriggs@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bnoordhuis"&gt;bnoordhuis&lt;/a&gt; - &lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:info@bnoordhuis.nl"&gt;info@bnoordhuis.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cjihrig"&gt;cjihrig&lt;/a&gt; - &lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjihrig@gmail.com"&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codebytere"&gt;codebytere&lt;/a&gt; - &lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shelley.vohr@gmail.com"&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GeoffreyBooth"&gt;GeoffreyBooth&lt;/a&gt; - &lt;strong&gt;Geoffrey Booth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:webadmin@geoffreybooth.com"&gt;webadmin@geoffreybooth.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MoLow"&gt;MoLow&lt;/a&gt; - &lt;strong&gt;Moshe Atlow&lt;/strong&gt; &amp;lt;&lt;a href="mailto:moshe@atlow.co.il"&gt;moshe@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Trott"&gt;Trott&lt;/a&gt; - &lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rtrott@gmail.com"&gt;rtrott@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;TSC emeriti members&lt;/summary&gt; 
 &lt;h4&gt;TSC emeriti members&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/addaleax"&gt;addaleax&lt;/a&gt; - &lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anna@addaleax.net"&gt;anna@addaleax.net&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/apapirovski"&gt;apapirovski&lt;/a&gt; - &lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:apapirovski@mac.com"&gt;apapirovski@mac.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ChALkeR"&gt;ChALkeR&lt;/a&gt; - &lt;strong&gt;–°–∫–æ–≤–æ—Ä–æ–¥–∞ –ù–∏–∫–∏—Ç–∞ –ê–Ω–¥—Ä–µ–µ–≤–∏—á&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chalkerx@gmail.com"&gt;chalkerx@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/chrisdickinson"&gt;chrisdickinson&lt;/a&gt; - &lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christopher.s.dickinson@gmail.com"&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/danbev"&gt;danbev&lt;/a&gt; - &lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daniel.bevenius@gmail.com"&gt;daniel.bevenius@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/danielleadams"&gt;danielleadams&lt;/a&gt; - &lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href="mailto:adamzdanielle@gmail.com"&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/evanlucas"&gt;evanlucas&lt;/a&gt; - &lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:evanlucas@me.com"&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/fhinkel"&gt;fhinkel&lt;/a&gt; - &lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;&lt;a href="mailto:franziska.hinkelmann@gmail.com"&gt;franziska.hinkelmann@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Fishrock123"&gt;Fishrock123&lt;/a&gt; - &lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fishrock123@rocketmail.com"&gt;fishrock123@rocketmail.com&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gabrielschulhof"&gt;gabrielschulhof&lt;/a&gt; - &lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gabrielschulhof@gmail.com"&gt;gabrielschulhof@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gibfahn"&gt;gibfahn&lt;/a&gt; - &lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gibfahn@gmail.com"&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/indutny"&gt;indutny&lt;/a&gt; - &lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fedor@indutny.com"&gt;fedor@indutny.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/isaacs"&gt;isaacs&lt;/a&gt; - &lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@izs.me"&gt;i@izs.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joshgav"&gt;joshgav&lt;/a&gt; - &lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;&lt;a href="mailto:josh.gavant@outlook.com"&gt;josh.gavant@outlook.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mmarchini"&gt;mmarchini&lt;/a&gt; - &lt;strong&gt;Mary Marchini&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oss@mmarchini.me"&gt;oss@mmarchini.me&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mscdex"&gt;mscdex&lt;/a&gt; - &lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mscdex@mscdex.net"&gt;mscdex@mscdex.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MylesBorins"&gt;MylesBorins&lt;/a&gt; - &lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href="mailto:myles.borins@gmail.com"&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/nebrius"&gt;nebrius&lt;/a&gt; - &lt;strong&gt;Bryan Hughes&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@nebri.us"&gt;bryan@nebri.us&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ofrobots"&gt;ofrobots&lt;/a&gt; - &lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ofrobots@google.com"&gt;ofrobots@google.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/orangemocha"&gt;orangemocha&lt;/a&gt; - &lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;&lt;a href="mailto:orangemocha@nodejs.org"&gt;orangemocha@nodejs.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/piscisaureus"&gt;piscisaureus&lt;/a&gt; - &lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bertbelder@gmail.com"&gt;bertbelder@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rvagg"&gt;rvagg&lt;/a&gt; - &lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href="mailto:r@va.gg"&gt;r@va.gg&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sam-github"&gt;sam-github&lt;/a&gt; - &lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vieuxtech@gmail.com"&gt;vieuxtech@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/shigeki"&gt;shigeki&lt;/a&gt; - &lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ohtsu@ohtsu.org"&gt;ohtsu@ohtsu.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/thefourtheye"&gt;thefourtheye&lt;/a&gt; - &lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;&lt;a href="mailto:thechargingvolcano@gmail.com"&gt;thechargingvolcano@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/TimothyGu"&gt;TimothyGu&lt;/a&gt; - &lt;strong&gt;Tiancheng "Timothy" Gu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:timothygu99@gmail.com"&gt;timothygu99@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/trevnorris"&gt;trevnorris&lt;/a&gt; - &lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;&lt;a href="mailto:trev.norris@gmail.com"&gt;trev.norris@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;!-- node-core-utils and find-inactive-collaborators.mjs depend on the format
     of the collaborator list. If the format changes, those utilities need to be
     tested and updated. --&gt; 
&lt;h3&gt;Collaborators&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abmusse"&gt;abmusse&lt;/a&gt; - &lt;strong&gt;Abdirahim Musse&lt;/strong&gt; &amp;lt;&lt;a href="mailto:abdirahim.musse@ibm.com"&gt;abdirahim.musse@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/addaleax"&gt;addaleax&lt;/a&gt; - &lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anna@addaleax.net"&gt;anna@addaleax.net&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aditi-1400"&gt;Aditi-1400&lt;/a&gt; - &lt;strong&gt;Aditi Singh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:aditisingh1400@gmail.com"&gt;aditisingh1400@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aduh95"&gt;aduh95&lt;/a&gt; - &lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:duhamelantoine1995@gmail.com"&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/aduh95"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anonrig"&gt;anonrig&lt;/a&gt; - &lt;strong&gt;Yagiz Nizipli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yagiz@nizipli.com"&gt;yagiz@nizipli.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/anonrig"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atlowChemi"&gt;atlowChemi&lt;/a&gt; - &lt;strong&gt;Chemi Atlow&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chemi@atlow.co.il"&gt;chemi@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ayase-252"&gt;Ayase-252&lt;/a&gt; - &lt;strong&gt;Qingyu Deng&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@ayase-lab.com"&gt;i@ayase-lab.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bengl"&gt;bengl&lt;/a&gt; - &lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@bryanenglish.com"&gt;bryan@bryanenglish.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benjamingr"&gt;benjamingr&lt;/a&gt; - &lt;strong&gt;Benjamin Gruenbaum&lt;/strong&gt; &amp;lt;&lt;a href="mailto:benjamingr@gmail.com"&gt;benjamingr@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BethGriggs"&gt;BethGriggs&lt;/a&gt; - &lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bethanyngriggs@gmail.com"&gt;bethanyngriggs@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bnb"&gt;bnb&lt;/a&gt; - &lt;strong&gt;Tierney Cyren&lt;/strong&gt; &amp;lt;&lt;a href="mailto:hello@bnb.im"&gt;hello@bnb.im&lt;/a&gt;&amp;gt; (they/them)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bnoordhuis"&gt;bnoordhuis&lt;/a&gt; - &lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:info@bnoordhuis.nl"&gt;info@bnoordhuis.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BridgeAR"&gt;BridgeAR&lt;/a&gt; - &lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruben@bridgewater.de"&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cclauss"&gt;cclauss&lt;/a&gt; - &lt;strong&gt;Christian Clauss&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cclauss@me.com"&gt;cclauss@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cjihrig"&gt;cjihrig&lt;/a&gt; - &lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjihrig@gmail.com"&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codebytere"&gt;codebytere&lt;/a&gt; - &lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shelley.vohr@gmail.com"&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cola119"&gt;cola119&lt;/a&gt; - &lt;strong&gt;Kohei Ueno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kohei.ueno119@gmail.com"&gt;kohei.ueno119@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daeyeon"&gt;daeyeon&lt;/a&gt; - &lt;strong&gt;Daeyeon Jeong&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daeyeon.dev@gmail.com"&gt;daeyeon.dev@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dario-piotrowicz"&gt;dario-piotrowicz&lt;/a&gt; - &lt;strong&gt;Dario Piotrowicz&lt;/strong&gt; &amp;lt;&lt;a href="mailto:dario.piotrowicz@gmail.com"&gt;dario.piotrowicz@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/debadree25"&gt;debadree25&lt;/a&gt; - &lt;strong&gt;Debadree Chatterjee&lt;/strong&gt; &amp;lt;&lt;a href="mailto:debadree333@gmail.com"&gt;debadree333@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deokjinkim"&gt;deokjinkim&lt;/a&gt; - &lt;strong&gt;Deokjin Kim&lt;/strong&gt; &amp;lt;&lt;a href="mailto:deokjin81.kim@gmail.com"&gt;deokjin81.kim@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/edsadr"&gt;edsadr&lt;/a&gt; - &lt;strong&gt;Adrian Estrada&lt;/strong&gt; &amp;lt;&lt;a href="mailto:edsadr@gmail.com"&gt;edsadr@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ErickWendel"&gt;ErickWendel&lt;/a&gt; - &lt;strong&gt;Erick Wendel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:erick.workspace@gmail.com"&gt;erick.workspace@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ethan-Arrowood"&gt;Ethan-Arrowood&lt;/a&gt; - &lt;strong&gt;Ethan Arrowood&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ethan@arrowood.dev"&gt;ethan@arrowood.dev&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/F3n67u"&gt;F3n67u&lt;/a&gt; - &lt;strong&gt;Feng Yu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:F3n67u@outlook.com"&gt;F3n67u@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fhinkel"&gt;fhinkel&lt;/a&gt; - &lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;&lt;a href="mailto:franziska.hinkelmann@gmail.com"&gt;franziska.hinkelmann@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Flarna"&gt;Flarna&lt;/a&gt; - &lt;strong&gt;Gerhard St√∂bich&lt;/strong&gt; &amp;lt;&lt;a href="mailto:deb2001-github@yahoo.de"&gt;deb2001-github@yahoo.de&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gabrielschulhof"&gt;gabrielschulhof&lt;/a&gt; - &lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gabrielschulhof@gmail.com"&gt;gabrielschulhof@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/geeksilva97"&gt;geeksilva97&lt;/a&gt; - &lt;strong&gt;Edy Silva&lt;/strong&gt; &amp;lt;&lt;a href="mailto:edigleyssonsilva@gmail.com"&gt;edigleyssonsilva@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gengjiawen"&gt;gengjiawen&lt;/a&gt; - &lt;strong&gt;Jiawen Geng&lt;/strong&gt; &amp;lt;&lt;a href="mailto:technicalcute@gmail.com"&gt;technicalcute@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GeoffreyBooth"&gt;GeoffreyBooth&lt;/a&gt; - &lt;strong&gt;Geoffrey Booth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:webadmin@geoffreybooth.com"&gt;webadmin@geoffreybooth.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gireeshpunathil"&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gpunathi@in.ibm.com"&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/guybedford"&gt;guybedford&lt;/a&gt; - &lt;strong&gt;Guy Bedford&lt;/strong&gt; &amp;lt;&lt;a href="mailto:guybedford@gmail.com"&gt;guybedford@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/H4ad"&gt;H4ad&lt;/a&gt; - &lt;strong&gt;Vin√≠cius Louren√ßo Claro Cardoso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:contact@viniciusl.com.br"&gt;contact@viniciusl.com.br&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HarshithaKP"&gt;HarshithaKP&lt;/a&gt; - &lt;strong&gt;Harshitha K P&lt;/strong&gt; &amp;lt;&lt;a href="mailto:harshitha014@gmail.com"&gt;harshitha014@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/himself65"&gt;himself65&lt;/a&gt; - &lt;strong&gt;Zeyu "Alex" Yang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:himself65@outlook.com"&gt;himself65@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/IlyasShabi"&gt;IlyasShabi&lt;/a&gt; - &lt;strong&gt;Ilyas Shabi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ilyasshabi94@gmail.com"&gt;ilyasshabi94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/islandryu"&gt;islandryu&lt;/a&gt; - &lt;strong&gt;Ryuhei Shima&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shimaryuhei@gmail.com"&gt;shimaryuhei@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jakecastelli"&gt;jakecastelli&lt;/a&gt; - &lt;strong&gt;Jake Yuesong Li&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jake.yuesong@gmail.com"&gt;jake.yuesong@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JakobJingleheimer"&gt;JakobJingleheimer&lt;/a&gt; - &lt;strong&gt;Jacob Smith&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jacob@frende.me"&gt;jacob@frende.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jasnell"&gt;jasnell&lt;/a&gt; - &lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasnell@gmail.com"&gt;jasnell@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jazelly"&gt;jazelly&lt;/a&gt; - &lt;strong&gt;Jason Zhang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:xzha4350@gmail.com"&gt;xzha4350@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jkrems"&gt;jkrems&lt;/a&gt; - &lt;strong&gt;Jan Martin&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jan.krems@gmail.com"&gt;jan.krems@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JonasBa"&gt;JonasBa&lt;/a&gt; - &lt;strong&gt;Jonas Badalic&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jonas.badalic@gmail.com"&gt;jonas.badalic@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joyeecheung"&gt;joyeecheung&lt;/a&gt; - &lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:joyeec9h3@gmail.com"&gt;joyeec9h3@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/juanarbol"&gt;juanarbol&lt;/a&gt; - &lt;strong&gt;Juan Jos√© Arboleda&lt;/strong&gt; &amp;lt;&lt;a href="mailto:soyjuanarbol@gmail.com"&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JungMinu"&gt;JungMinu&lt;/a&gt; - &lt;strong&gt;Minwoo Jung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:nodecorelab@gmail.com"&gt;nodecorelab@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KhafraDev"&gt;KhafraDev&lt;/a&gt; - &lt;strong&gt;Matthew Aitken&lt;/strong&gt; &amp;lt;&lt;a href="mailto:maitken033380023@gmail.com"&gt;maitken033380023@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/legendecas"&gt;legendecas&lt;/a&gt; - &lt;strong&gt;Chengzhong Wu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:legendecas@gmail.com"&gt;legendecas@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lemire"&gt;lemire&lt;/a&gt; - &lt;strong&gt;Daniel Lemire&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daniel@lemire.me"&gt;daniel@lemire.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LiviaMedeiros"&gt;LiviaMedeiros&lt;/a&gt; - &lt;strong&gt;LiviaMedeiros&lt;/strong&gt; &amp;lt;&lt;a href="mailto:livia@cirno.name"&gt;livia@cirno.name&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ljharb"&gt;ljharb&lt;/a&gt; - &lt;strong&gt;Jordan Harband&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ljharb@gmail.com"&gt;ljharb@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lpinca"&gt;lpinca&lt;/a&gt; - &lt;strong&gt;Luigi Pinca&lt;/strong&gt; &amp;lt;&lt;a href="mailto:luigipinca@gmail.com"&gt;luigipinca@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lukekarrys"&gt;lukekarrys&lt;/a&gt; - &lt;strong&gt;Luke Karrys&lt;/strong&gt; &amp;lt;&lt;a href="mailto:luke@lukekarrys.com"&gt;luke@lukekarrys.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Lxxyx"&gt;Lxxyx&lt;/a&gt; - &lt;strong&gt;Zijian Liu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:lxxyxzj@gmail.com"&gt;lxxyxzj@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marco-ippolito"&gt;marco-ippolito&lt;/a&gt; - &lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href="mailto:marcoippolito54@gmail.com"&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/marco-ippolito"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marsonya"&gt;marsonya&lt;/a&gt; - &lt;strong&gt;Akhil Marsonya&lt;/strong&gt; &amp;lt;&lt;a href="mailto:akhil.marsonya27@gmail.com"&gt;akhil.marsonya27@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MattiasBuelens"&gt;MattiasBuelens&lt;/a&gt; - &lt;strong&gt;Mattias Buelens&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mattias@buelens.com"&gt;mattias@buelens.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mcollina"&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href="mailto:matteo.collina@gmail.com"&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/mcollina"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/meixg"&gt;meixg&lt;/a&gt; - &lt;strong&gt;Xuguang Mei&lt;/strong&gt; &amp;lt;&lt;a href="mailto:meixuguang@gmail.com"&gt;meixuguang@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mhdawson"&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:midawson@redhat.com"&gt;midawson@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MoLow"&gt;MoLow&lt;/a&gt; - &lt;strong&gt;Moshe Atlow&lt;/strong&gt; &amp;lt;&lt;a href="mailto:moshe@atlow.co.il"&gt;moshe@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MrJithil"&gt;MrJithil&lt;/a&gt; - &lt;strong&gt;Jithil P Ponnan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jithil@outlook.com"&gt;jithil@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ovflowd"&gt;ovflowd&lt;/a&gt; - &lt;strong&gt;Claudio Wunder&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cwunder@gnome.org"&gt;cwunder@gnome.org&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/panva"&gt;panva&lt;/a&gt; - &lt;strong&gt;Filip Skokan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:panva.ip@gmail.com"&gt;panva.ip@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/panva"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pimterry"&gt;pimterry&lt;/a&gt; - &lt;strong&gt;Tim Perry&lt;/strong&gt; &amp;lt;&lt;a href="mailto:pimterry@gmail.com"&gt;pimterry@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pmarchini"&gt;pmarchini&lt;/a&gt; - &lt;strong&gt;Pietro Marchini&lt;/strong&gt; &amp;lt;&lt;a href="mailto:pietro.marchini94@gmail.com"&gt;pietro.marchini94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/puskin"&gt;puskin&lt;/a&gt; - &lt;strong&gt;Giovanni Bucci&lt;/strong&gt; &amp;lt;&lt;a href="mailto:github@puskin.it"&gt;github@puskin.it&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Qard"&gt;Qard&lt;/a&gt; - &lt;strong&gt;Stephen Belanger&lt;/strong&gt; &amp;lt;&lt;a href="mailto:admin@stephenbelanger.com"&gt;admin@stephenbelanger.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RafaelGSS"&gt;RafaelGSS&lt;/a&gt; - &lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rafael.nunu@hotmail.com"&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/RafaelGSS"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RaisinTen"&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:raisinten@gmail.com"&gt;raisinten@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/RaisinTen"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/richardlau"&gt;richardlau&lt;/a&gt; - &lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:richard.lau@ibm.com"&gt;richard.lau@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rluvaton"&gt;rluvaton&lt;/a&gt; - &lt;strong&gt;Raz Luvaton&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rluvaton@gmail.com"&gt;rluvaton@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ronag"&gt;ronag&lt;/a&gt; - &lt;strong&gt;Robert Nagy&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ronagy@icloud.com"&gt;ronagy@icloud.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ruyadorno"&gt;ruyadorno&lt;/a&gt; - &lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruy@vlt.sh"&gt;ruy@vlt.sh&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/santigimeno"&gt;santigimeno&lt;/a&gt; - &lt;strong&gt;Santiago Gimeno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:santiago.gimeno@gmail.com"&gt;santiago.gimeno@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ShogunPanda"&gt;ShogunPanda&lt;/a&gt; - &lt;strong&gt;Paolo Insogna&lt;/strong&gt; &amp;lt;&lt;a href="mailto:paolo@cowtech.it"&gt;paolo@cowtech.it&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/srl295"&gt;srl295&lt;/a&gt; - &lt;strong&gt;Steven R Loomis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:srl295@gmail.com"&gt;srl295@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/StefanStojanovic"&gt;StefanStojanovic&lt;/a&gt; - &lt;strong&gt;Stefan Stojanovic&lt;/strong&gt; &amp;lt;&lt;a href="mailto:stefan.stojanovic@janeasystems.com"&gt;stefan.stojanovic@janeasystems.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sxa"&gt;sxa&lt;/a&gt; - &lt;strong&gt;Stewart X Addison&lt;/strong&gt; &amp;lt;&lt;a href="mailto:sxa@redhat.com"&gt;sxa@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/targos"&gt;targos&lt;/a&gt; - &lt;strong&gt;Micha√´l Zasso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:targos@protonmail.com"&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/theanarkh"&gt;theanarkh&lt;/a&gt; - &lt;strong&gt;theanarkh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:theratliter@gmail.com"&gt;theratliter@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tniessen"&gt;tniessen&lt;/a&gt; - &lt;strong&gt;Tobias Nie√üen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:tniessen@tnie.de"&gt;tniessen@tnie.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trivikr"&gt;trivikr&lt;/a&gt; - &lt;strong&gt;Trivikram Kamat&lt;/strong&gt; &amp;lt;&lt;a href="mailto:trivikr.dev@gmail.com"&gt;trivikr.dev@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Trott"&gt;Trott&lt;/a&gt; - &lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rtrott@gmail.com"&gt;rtrott@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/UlisesGascon"&gt;UlisesGascon&lt;/a&gt; - &lt;strong&gt;Ulises Gasc√≥n&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ulisesgascongonzalez@gmail.com"&gt;ulisesgascongonzalez@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vmoroz"&gt;vmoroz&lt;/a&gt; - &lt;strong&gt;Vladimir Morozov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vmorozov@microsoft.com"&gt;vmorozov@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VoltrexKeyva"&gt;VoltrexKeyva&lt;/a&gt; - &lt;strong&gt;Mohammed Keyvanzadeh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mohammadkeyvanzade94@gmail.com"&gt;mohammadkeyvanzade94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zcbenz"&gt;zcbenz&lt;/a&gt; - &lt;strong&gt;Cheng Zhao&lt;/strong&gt; &amp;lt;&lt;a href="mailto:zcbenz@gmail.com"&gt;zcbenz@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ZYSzys"&gt;ZYSzys&lt;/a&gt; - &lt;strong&gt;Yongsheng Zhang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:zyszys98@gmail.com"&gt;zyszys98@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Emeriti&lt;/summary&gt; 
 &lt;!-- find-inactive-collaborators.mjs depends on the format of the emeriti list.
     If the format changes, those utilities need to be tested and updated. --&gt; 
 &lt;h3&gt;Collaborator emeriti&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ak239"&gt;ak239&lt;/a&gt; - &lt;strong&gt;Aleksei Koziatinskii&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ak239spb@gmail.com"&gt;ak239spb@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/andrasq"&gt;andrasq&lt;/a&gt; - &lt;strong&gt;Andras&lt;/strong&gt; &amp;lt;&lt;a href="mailto:andras@kinvey.com"&gt;andras@kinvey.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AndreasMadsen"&gt;AndreasMadsen&lt;/a&gt; - &lt;strong&gt;Andreas Madsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:amwebdk@gmail.com"&gt;amwebdk@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AnnaMag"&gt;AnnaMag&lt;/a&gt; - &lt;strong&gt;Anna M. Kedzierska&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anna.m.kedzierska@gmail.com"&gt;anna.m.kedzierska@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/antsmartian"&gt;antsmartian&lt;/a&gt; - &lt;strong&gt;Anto Aravinth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anto.aravinth.cse@gmail.com"&gt;anto.aravinth.cse@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/apapirovski"&gt;apapirovski&lt;/a&gt; - &lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:apapirovski@mac.com"&gt;apapirovski@mac.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/aqrln"&gt;aqrln&lt;/a&gt; - &lt;strong&gt;Alexey Orlenko&lt;/strong&gt; &amp;lt;&lt;a href="mailto:eaglexrlnk@gmail.com"&gt;eaglexrlnk@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AshCripps"&gt;AshCripps&lt;/a&gt; - &lt;strong&gt;Ash Cripps&lt;/strong&gt; &amp;lt;&lt;a href="mailto:email@ashleycripps.co.uk"&gt;email@ashleycripps.co.uk&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bcoe"&gt;bcoe&lt;/a&gt; - &lt;strong&gt;Ben Coe&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bencoe@gmail.com"&gt;bencoe@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bmeck"&gt;bmeck&lt;/a&gt; - &lt;strong&gt;Bradley Farias&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bradley.meck@gmail.com"&gt;bradley.meck@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bmeurer"&gt;bmeurer&lt;/a&gt; - &lt;strong&gt;Benedikt Meurer&lt;/strong&gt; &amp;lt;&lt;a href="mailto:benedikt.meurer@gmail.com"&gt;benedikt.meurer@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/boneskull"&gt;boneskull&lt;/a&gt; - &lt;strong&gt;Christopher Hiller&lt;/strong&gt; &amp;lt;&lt;a href="mailto:boneskull@boneskull.com"&gt;boneskull@boneskull.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/brendanashworth"&gt;brendanashworth&lt;/a&gt; - &lt;strong&gt;Brendan Ashworth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:brendan.ashworth@me.com"&gt;brendan.ashworth@me.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bzoz"&gt;bzoz&lt;/a&gt; - &lt;strong&gt;Bartosz Sosnowski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bartosz@janeasystems.com"&gt;bartosz@janeasystems.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/calvinmetcalf"&gt;calvinmetcalf&lt;/a&gt; - &lt;strong&gt;Calvin Metcalf&lt;/strong&gt; &amp;lt;&lt;a href="mailto:calvin.metcalf@gmail.com"&gt;calvin.metcalf@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ChALkeR"&gt;ChALkeR&lt;/a&gt; - &lt;strong&gt;–°–∫–æ–≤–æ—Ä–æ–¥–∞ –ù–∏–∫–∏—Ç–∞ –ê–Ω–¥—Ä–µ–µ–≤–∏—á&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chalkerx@gmail.com"&gt;chalkerx@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/chrisdickinson"&gt;chrisdickinson&lt;/a&gt; - &lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christopher.s.dickinson@gmail.com"&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/claudiorodriguez"&gt;claudiorodriguez&lt;/a&gt; - &lt;strong&gt;Claudio Rodriguez&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjrodr@yahoo.com"&gt;cjrodr@yahoo.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/danbev"&gt;danbev&lt;/a&gt; - &lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daniel.bevenius@gmail.com"&gt;daniel.bevenius@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/danielleadams"&gt;danielleadams&lt;/a&gt; - &lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href="mailto:adamzdanielle@gmail.com"&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/DavidCai1993"&gt;DavidCai1993&lt;/a&gt; - &lt;strong&gt;David Cai&lt;/strong&gt; &amp;lt;&lt;a href="mailto:davidcai1993@yahoo.com"&gt;davidcai1993@yahoo.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/davisjam"&gt;davisjam&lt;/a&gt; - &lt;strong&gt;Jamie Davis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:davisjam@vt.edu"&gt;davisjam@vt.edu&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/devnexen"&gt;devnexen&lt;/a&gt; - &lt;strong&gt;David Carlier&lt;/strong&gt; &amp;lt;&lt;a href="mailto:devnexen@gmail.com"&gt;devnexen@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/devsnek"&gt;devsnek&lt;/a&gt; - &lt;strong&gt;Gus Caplan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@gus.host"&gt;me@gus.host&lt;/a&gt;&amp;gt; (they/them)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/digitalinfinity"&gt;digitalinfinity&lt;/a&gt; - &lt;strong&gt;Hitesh Kanwathirtha&lt;/strong&gt; &amp;lt;&lt;a href="mailto:digitalinfinity@gmail.com"&gt;digitalinfinity@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dmabupt"&gt;dmabupt&lt;/a&gt; - &lt;strong&gt;Xu Meng&lt;/strong&gt; &amp;lt;&lt;a href="mailto:dmabupt@gmail.com"&gt;dmabupt@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dnlup"&gt;dnlup&lt;/a&gt; - &lt;strong&gt;dnlup&lt;/strong&gt; &amp;lt;&lt;a href="mailto:dnlup.dev@gmail.com"&gt;dnlup.dev@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/eljefedelrodeodeljefe"&gt;eljefedelrodeodeljefe&lt;/a&gt; - &lt;strong&gt;Robert Jefe Lindstaedt&lt;/strong&gt; &amp;lt;&lt;a href="mailto:robert.lindstaedt@gmail.com"&gt;robert.lindstaedt@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/estliberitas"&gt;estliberitas&lt;/a&gt; - &lt;strong&gt;Alexander Makarenko&lt;/strong&gt; &amp;lt;&lt;a href="mailto:estliberitas@gmail.com"&gt;estliberitas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/eugeneo"&gt;eugeneo&lt;/a&gt; - &lt;strong&gt;Eugene Ostroukhov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:eostroukhov@google.com"&gt;eostroukhov@google.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/evanlucas"&gt;evanlucas&lt;/a&gt; - &lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:evanlucas@me.com"&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/firedfox"&gt;firedfox&lt;/a&gt; - &lt;strong&gt;Daniel Wang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:wangyang0123@gmail.com"&gt;wangyang0123@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Fishrock123"&gt;Fishrock123&lt;/a&gt; - &lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fishrock123@rocketmail.com"&gt;fishrock123@rocketmail.com&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gdams"&gt;gdams&lt;/a&gt; - &lt;strong&gt;George Adams&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gadams@microsoft.com"&gt;gadams@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/geek"&gt;geek&lt;/a&gt; - &lt;strong&gt;Wyatt Preul&lt;/strong&gt; &amp;lt;&lt;a href="mailto:wpreul@gmail.com"&gt;wpreul@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gibfahn"&gt;gibfahn&lt;/a&gt; - &lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gibfahn@gmail.com"&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/glentiki"&gt;glentiki&lt;/a&gt; - &lt;strong&gt;Glen Keane&lt;/strong&gt; &amp;lt;&lt;a href="mailto:glenkeane.94@gmail.com"&gt;glenkeane.94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hashseed"&gt;hashseed&lt;/a&gt; - &lt;strong&gt;Yang Guo&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yangguo@chromium.org"&gt;yangguo@chromium.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hiroppy"&gt;hiroppy&lt;/a&gt; - &lt;strong&gt;Yuta Hiroto&lt;/strong&gt; &amp;lt;&lt;a href="mailto:hello@hiroppy.me"&gt;hello@hiroppy.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/iansu"&gt;iansu&lt;/a&gt; - &lt;strong&gt;Ian Sutherland&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ian@iansutherland.ca"&gt;ian@iansutherland.ca&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/iarna"&gt;iarna&lt;/a&gt; - &lt;strong&gt;Rebecca Turner&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@re-becca.org"&gt;me@re-becca.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/imran-iq"&gt;imran-iq&lt;/a&gt; - &lt;strong&gt;Imran Iqbal&lt;/strong&gt; &amp;lt;&lt;a href="mailto:imran@imraniqbal.org"&gt;imran@imraniqbal.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/imyller"&gt;imyller&lt;/a&gt; - &lt;strong&gt;Ilkka Myller&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ilkka.myller@nodefield.com"&gt;ilkka.myller@nodefield.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/indutny"&gt;indutny&lt;/a&gt; - &lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fedor@indutny.com"&gt;fedor@indutny.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/isaacs"&gt;isaacs&lt;/a&gt; - &lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@izs.me"&gt;i@izs.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/italoacasas"&gt;italoacasas&lt;/a&gt; - &lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@italoacasas.com"&gt;me@italoacasas.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/JacksonTian"&gt;JacksonTian&lt;/a&gt; - &lt;strong&gt;Jackson Tian&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shyvo1987@gmail.com"&gt;shyvo1987@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jasongin"&gt;jasongin&lt;/a&gt; - &lt;strong&gt;Jason Ginchereau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasongin@microsoft.com"&gt;jasongin@microsoft.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jbergstroem"&gt;jbergstroem&lt;/a&gt; - &lt;strong&gt;Johan Bergstr√∂m&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bugs@bergstroem.nu"&gt;bugs@bergstroem.nu&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jdalton"&gt;jdalton&lt;/a&gt; - &lt;strong&gt;John-David Dalton&lt;/strong&gt; &amp;lt;&lt;a href="mailto:john.david.dalton@gmail.com"&gt;john.david.dalton@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jhamhader"&gt;jhamhader&lt;/a&gt; - &lt;strong&gt;Yuval Brik&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yuval@brik.org.il"&gt;yuval@brik.org.il&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joaocgreis"&gt;joaocgreis&lt;/a&gt; - &lt;strong&gt;Jo√£o Reis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:reis@janeasystems.com"&gt;reis@janeasystems.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joesepi"&gt;joesepi&lt;/a&gt; - &lt;strong&gt;Joe Sepi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:sepi@joesepi.com"&gt;sepi@joesepi.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joshgav"&gt;joshgav&lt;/a&gt; - &lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;&lt;a href="mailto:josh.gavant@outlook.com"&gt;josh.gavant@outlook.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/julianduque"&gt;julianduque&lt;/a&gt; - &lt;strong&gt;Julian Duque&lt;/strong&gt; &amp;lt;&lt;a href="mailto:julianduquej@gmail.com"&gt;julianduquej@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kfarnung"&gt;kfarnung&lt;/a&gt; - &lt;strong&gt;Kyle Farnung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kfarnung@microsoft.com"&gt;kfarnung@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kunalspathak"&gt;kunalspathak&lt;/a&gt; - &lt;strong&gt;Kunal Pathak&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kunal.pathak@microsoft.com"&gt;kunal.pathak@microsoft.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kuriyosh"&gt;kuriyosh&lt;/a&gt; - &lt;strong&gt;Yoshiki Kurihara&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yosyos0306@gmail.com"&gt;yosyos0306@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kvakil"&gt;kvakil&lt;/a&gt; - &lt;strong&gt;Keyhan Vakil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kvakil@sylph.kvakil.me"&gt;kvakil@sylph.kvakil.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lance"&gt;lance&lt;/a&gt; - &lt;strong&gt;Lance Ball&lt;/strong&gt; &amp;lt;&lt;a href="mailto:lball@redhat.com"&gt;lball@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Leko"&gt;Leko&lt;/a&gt; - &lt;strong&gt;Shingo Inoue&lt;/strong&gt; &amp;lt;&lt;a href="mailto:leko.noor@gmail.com"&gt;leko.noor@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Linkgoron"&gt;Linkgoron&lt;/a&gt; - &lt;strong&gt;Nitzan Uziely&lt;/strong&gt; &amp;lt;&lt;a href="mailto:linkgoron@gmail.com"&gt;linkgoron@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lucamaraschi"&gt;lucamaraschi&lt;/a&gt; - &lt;strong&gt;Luca Maraschi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:luca.maraschi@gmail.com"&gt;luca.maraschi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lundibundi"&gt;lundibundi&lt;/a&gt; - &lt;strong&gt;Denys Otrishko&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shishugi@gmail.com"&gt;shishugi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lxe"&gt;lxe&lt;/a&gt; - &lt;strong&gt;Aleksey Smolenchuk&lt;/strong&gt; &amp;lt;&lt;a href="mailto:lxe@lxe.co"&gt;lxe@lxe.co&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/maclover7"&gt;maclover7&lt;/a&gt; - &lt;strong&gt;Jon Moss&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@jonathanmoss.me"&gt;me@jonathanmoss.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mafintosh"&gt;mafintosh&lt;/a&gt; - &lt;strong&gt;Mathias Buus&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mathiasbuus@gmail.com"&gt;mathiasbuus@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/matthewloring"&gt;matthewloring&lt;/a&gt; - &lt;strong&gt;Matthew Loring&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mattloring@google.com"&gt;mattloring@google.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Mesteery"&gt;Mesteery&lt;/a&gt; - &lt;strong&gt;Mestery&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mestery@protonmail.com"&gt;mestery@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/micnic"&gt;micnic&lt;/a&gt; - &lt;strong&gt;Nicu Micleu»ôanu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:micnic90@gmail.com"&gt;micnic90@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mikeal"&gt;mikeal&lt;/a&gt; - &lt;strong&gt;Mikeal Rogers&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mikeal.rogers@gmail.com"&gt;mikeal.rogers@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/miladfarca"&gt;miladfarca&lt;/a&gt; - &lt;strong&gt;Milad Fa&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mfarazma@redhat.com"&gt;mfarazma@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mildsunrise"&gt;mildsunrise&lt;/a&gt; - &lt;strong&gt;Alba Mendez&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@alba.sh"&gt;me@alba.sh&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/misterdjules"&gt;misterdjules&lt;/a&gt; - &lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jgilli@netflix.com"&gt;jgilli@netflix.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mmarchini"&gt;mmarchini&lt;/a&gt; - &lt;strong&gt;Mary Marchini&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oss@mmarchini.me"&gt;oss@mmarchini.me&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/monsanto"&gt;monsanto&lt;/a&gt; - &lt;strong&gt;Christopher Monsanto&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chris@monsan.to"&gt;chris@monsan.to&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MoonBall"&gt;MoonBall&lt;/a&gt; - &lt;strong&gt;Chen Gang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gangc.cxy@foxmail.com"&gt;gangc.cxy@foxmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mscdex"&gt;mscdex&lt;/a&gt; - &lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mscdex@mscdex.net"&gt;mscdex@mscdex.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MylesBorins"&gt;MylesBorins&lt;/a&gt; - &lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href="mailto:myles.borins@gmail.com"&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/not-an-aardvark"&gt;not-an-aardvark&lt;/a&gt; - &lt;strong&gt;Teddy Katz&lt;/strong&gt; &amp;lt;&lt;a href="mailto:teddy.katz@gmail.com"&gt;teddy.katz@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ofrobots"&gt;ofrobots&lt;/a&gt; - &lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ofrobots@google.com"&gt;ofrobots@google.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Olegas"&gt;Olegas&lt;/a&gt; - &lt;strong&gt;Oleg Elifantiev&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oleg@elifantiev.ru"&gt;oleg@elifantiev.ru&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/orangemocha"&gt;orangemocha&lt;/a&gt; - &lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;&lt;a href="mailto:orangemocha@nodejs.org"&gt;orangemocha@nodejs.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/othiym23"&gt;othiym23&lt;/a&gt; - &lt;strong&gt;Forrest L Norvell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ogd@aoaioxxysz.net"&gt;ogd@aoaioxxysz.net&lt;/a&gt;&amp;gt; (they/them/themself)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/oyyd"&gt;oyyd&lt;/a&gt; - &lt;strong&gt;Ouyang Yadong&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oyydoibh@gmail.com"&gt;oyydoibh@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/petkaantonov"&gt;petkaantonov&lt;/a&gt; - &lt;strong&gt;Petka Antonov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:petka_antonov@hotmail.com"&gt;petka_antonov@hotmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/phillipj"&gt;phillipj&lt;/a&gt; - &lt;strong&gt;Phillip Johnsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:johphi@gmail.com"&gt;johphi@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/piscisaureus"&gt;piscisaureus&lt;/a&gt; - &lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bertbelder@gmail.com"&gt;bertbelder@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pmq20"&gt;pmq20&lt;/a&gt; - &lt;strong&gt;Minqi Pan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:pmq2001@gmail.com"&gt;pmq2001@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/PoojaDurgad"&gt;PoojaDurgad&lt;/a&gt; - &lt;strong&gt;Pooja D P&lt;/strong&gt; &amp;lt;&lt;a href="mailto:Pooja.D.P@ibm.com"&gt;Pooja.D.P@ibm.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/princejwesley"&gt;princejwesley&lt;/a&gt; - &lt;strong&gt;Prince John Wesley&lt;/strong&gt; &amp;lt;&lt;a href="mailto:princejohnwesley@gmail.com"&gt;princejohnwesley@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/psmarshall"&gt;psmarshall&lt;/a&gt; - &lt;strong&gt;Peter Marshall&lt;/strong&gt; &amp;lt;&lt;a href="mailto:petermarshall@chromium.org"&gt;petermarshall@chromium.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/puzpuzpuz"&gt;puzpuzpuz&lt;/a&gt; - &lt;strong&gt;Andrey Pechkurov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:apechkurov@gmail.com"&gt;apechkurov@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/refack"&gt;refack&lt;/a&gt; - &lt;strong&gt;Refael Ackermann (◊®◊§◊ê◊ú ◊§◊ú◊ó◊ô)&lt;/strong&gt; &amp;lt;&lt;a href="mailto:refack@gmail.com"&gt;refack@gmail.com&lt;/a&gt;&amp;gt; (he/him/◊î◊ï◊ê/◊ê◊™◊î)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rexagod"&gt;rexagod&lt;/a&gt; - &lt;strong&gt;Pranshu Srivastava&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rexagod@gmail.com"&gt;rexagod@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rickyes"&gt;rickyes&lt;/a&gt; - &lt;strong&gt;Ricky Zhou&lt;/strong&gt; &amp;lt;&lt;a href="mailto:0x19951125@gmail.com"&gt;0x19951125@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rlidwka"&gt;rlidwka&lt;/a&gt; - &lt;strong&gt;Alex Kocharin&lt;/strong&gt; &amp;lt;&lt;a href="mailto:alex@kocharin.ru"&gt;alex@kocharin.ru&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rmg"&gt;rmg&lt;/a&gt; - &lt;strong&gt;Ryan Graham&lt;/strong&gt; &amp;lt;&lt;a href="mailto:r.m.graham@gmail.com"&gt;r.m.graham@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/robertkowalski"&gt;robertkowalski&lt;/a&gt; - &lt;strong&gt;Robert Kowalski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rok@kowalski.gd"&gt;rok@kowalski.gd&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/romankl"&gt;romankl&lt;/a&gt; - &lt;strong&gt;Roman Klauke&lt;/strong&gt; &amp;lt;&lt;a href="mailto:romaaan.git@gmail.com"&gt;romaaan.git@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ronkorving"&gt;ronkorving&lt;/a&gt; - &lt;strong&gt;Ron Korving&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ron@ronkorving.nl"&gt;ron@ronkorving.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/RReverser"&gt;RReverser&lt;/a&gt; - &lt;strong&gt;Ingvar Stepanyan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@rreverser.com"&gt;me@rreverser.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rubys"&gt;rubys&lt;/a&gt; - &lt;strong&gt;Sam Ruby&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rubys@intertwingly.net"&gt;rubys@intertwingly.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rvagg"&gt;rvagg&lt;/a&gt; - &lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rod@vagg.org"&gt;rod@vagg.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ryzokuken"&gt;ryzokuken&lt;/a&gt; - &lt;strong&gt;Ujjwal Sharma&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ryzokuken@disroot.org"&gt;ryzokuken@disroot.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/saghul"&gt;saghul&lt;/a&gt; - &lt;strong&gt;Sa√∫l Ibarra Corretg√©&lt;/strong&gt; &amp;lt;&lt;a href="mailto:s@saghul.net"&gt;s@saghul.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sam-github"&gt;sam-github&lt;/a&gt; - &lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vieuxtech@gmail.com"&gt;vieuxtech@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sebdeckers"&gt;sebdeckers&lt;/a&gt; - &lt;strong&gt;Sebastiaan Deckers&lt;/strong&gt; &amp;lt;&lt;a href="mailto:sebdeckers83@gmail.com"&gt;sebdeckers83@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/seishun"&gt;seishun&lt;/a&gt; - &lt;strong&gt;Nikolai Vavilov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vvnicholas@gmail.com"&gt;vvnicholas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/shigeki"&gt;shigeki&lt;/a&gt; - &lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ohtsu@ohtsu.org"&gt;ohtsu@ohtsu.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/shisama"&gt;shisama&lt;/a&gt; - &lt;strong&gt;Masashi Hirano&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shisama07@gmail.com"&gt;shisama07@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/silverwind"&gt;silverwind&lt;/a&gt; - &lt;strong&gt;Roman Reiss&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@silverwind.io"&gt;me@silverwind.io&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/starkwang"&gt;starkwang&lt;/a&gt; - &lt;strong&gt;Weijia Wang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:starkwang@126.com"&gt;starkwang@126.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/stefanmb"&gt;stefanmb&lt;/a&gt; - &lt;strong&gt;Stefan Budeanu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:stefan@budeanu.com"&gt;stefan@budeanu.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tellnes"&gt;tellnes&lt;/a&gt; - &lt;strong&gt;Christian Tellnes&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christian@tellnes.no"&gt;christian@tellnes.no&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/thefourtheye"&gt;thefourtheye&lt;/a&gt; - &lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;&lt;a href="mailto:thechargingvolcano@gmail.com"&gt;thechargingvolcano@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/thlorenz"&gt;thlorenz&lt;/a&gt; - &lt;strong&gt;Thorsten Lorenz&lt;/strong&gt; &amp;lt;&lt;a href="mailto:thlorenz@gmx.de"&gt;thlorenz@gmx.de&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/TimothyGu"&gt;TimothyGu&lt;/a&gt; - &lt;strong&gt;Tiancheng "Timothy" Gu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:timothygu99@gmail.com"&gt;timothygu99@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/trevnorris"&gt;trevnorris&lt;/a&gt; - &lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;&lt;a href="mailto:trev.norris@gmail.com"&gt;trev.norris@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tunniclm"&gt;tunniclm&lt;/a&gt; - &lt;strong&gt;Mike Tunnicliffe&lt;/strong&gt; &amp;lt;&lt;a href="mailto:m.j.tunnicliffe@gmail.com"&gt;m.j.tunnicliffe@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/vdeturckheim"&gt;vdeturckheim&lt;/a&gt; - &lt;strong&gt;Vladimir de Turckheim&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vlad2t@hotmail.com"&gt;vlad2t@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/vkurchatkin"&gt;vkurchatkin&lt;/a&gt; - &lt;strong&gt;Vladimir Kurchatkin&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vladimir.kurchatkin@gmail.com"&gt;vladimir.kurchatkin@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/vsemozhetbyt"&gt;vsemozhetbyt&lt;/a&gt; - &lt;strong&gt;Vse Mozhet Byt&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vsemozhetbyt@gmail.com"&gt;vsemozhetbyt@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/watilde"&gt;watilde&lt;/a&gt; - &lt;strong&gt;Daijiro Wachi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daijiro.wachi@gmail.com"&gt;daijiro.wachi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/watson"&gt;watson&lt;/a&gt; - &lt;strong&gt;Thomas Watson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:w@tson.dk"&gt;w@tson.dk&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/whitlockjc"&gt;whitlockjc&lt;/a&gt; - &lt;strong&gt;Jeremy Whitlock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jwhitlock@apache.org"&gt;jwhitlock@apache.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/XadillaX"&gt;XadillaX&lt;/a&gt; - &lt;strong&gt;Khaidi Chu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@2333.moe"&gt;i@2333.moe&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/yashLadha"&gt;yashLadha&lt;/a&gt; - &lt;strong&gt;Yash Ladha&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yash@yashladha.in"&gt;yash@yashladha.in&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/yhwang"&gt;yhwang&lt;/a&gt; - &lt;strong&gt;Yihong Wang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yh.wang@ibm.com"&gt;yh.wang@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/yorkie"&gt;yorkie&lt;/a&gt; - &lt;strong&gt;Yorkie Liu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yorkiefixer@gmail.com"&gt;yorkiefixer@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/yosuke-furukawa"&gt;yosuke-furukawa&lt;/a&gt; - &lt;strong&gt;Yosuke Furukawa&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yosuke.furukawa@gmail.com"&gt;yosuke.furukawa@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;!--lint enable prohibited-strings--&gt; 
&lt;p&gt;Collaborators follow the &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/collaborator-guide.md"&gt;Collaborator Guide&lt;/a&gt; in maintaining the Node.js project.&lt;/p&gt; 
&lt;h3&gt;Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1ilsang"&gt;1ilsang&lt;/a&gt; - &lt;strong&gt;Sangchul Lee&lt;/strong&gt; &amp;lt;&lt;a href="mailto:1ilsang.dev@gmail.com"&gt;1ilsang.dev@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atlowChemi"&gt;atlowChemi&lt;/a&gt; - &lt;strong&gt;Chemi Atlow&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chemi@atlow.co.il"&gt;chemi@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ayase-252"&gt;Ayase-252&lt;/a&gt; - &lt;strong&gt;Qingyu Deng&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@ayase-lab.com"&gt;i@ayase-lab.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bjohansebas"&gt;bjohansebas&lt;/a&gt; - &lt;strong&gt;Sebastian Beltran&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bjohansebas@gmail.com"&gt;bjohansebas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bmuenzenmeyer"&gt;bmuenzenmeyer&lt;/a&gt; - &lt;strong&gt;Brian Muenzenmeyer&lt;/strong&gt; &amp;lt;&lt;a href="mailto:brian.muenzenmeyer@gmail.com"&gt;brian.muenzenmeyer@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CanadaHonk"&gt;CanadaHonk&lt;/a&gt; - &lt;strong&gt;Oliver Medhurst&lt;/strong&gt; &amp;lt;&lt;a href="mailto:honk@goose.icu"&gt;honk@goose.icu&lt;/a&gt;&amp;gt; (they/them)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daeyeon"&gt;daeyeon&lt;/a&gt; - &lt;strong&gt;Daeyeon Jeong&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daeyeon.dev@gmail.com"&gt;daeyeon.dev@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/F3n67u"&gt;F3n67u&lt;/a&gt; - &lt;strong&gt;Feng Yu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:F3n67u@outlook.com"&gt;F3n67u@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gireeshpunathil"&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gpunathi@in.ibm.com"&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gurgunday"&gt;gurgunday&lt;/a&gt; - &lt;strong&gt;G√ºrg√ºn Dayƒ±oƒülu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:hey@gurgun.day"&gt;hey@gurgun.day&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HBSPS"&gt;HBSPS&lt;/a&gt; - &lt;strong&gt;Wiyeong Seo&lt;/strong&gt; &amp;lt;&lt;a href="mailto:hbsps.dev@gmail.com"&gt;hbsps.dev@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iam-frankqiu"&gt;iam-frankqiu&lt;/a&gt; - &lt;strong&gt;Frank Qiu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:iam.frankqiu@gmail.com"&gt;iam.frankqiu@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KevinEady"&gt;KevinEady&lt;/a&gt; - &lt;strong&gt;Kevin Eady&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kevin.c.eady@gmail.com"&gt;kevin.c.eady@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marsonya"&gt;marsonya&lt;/a&gt; - &lt;strong&gt;Akhil Marsonya&lt;/strong&gt; &amp;lt;&lt;a href="mailto:akhil.marsonya27@gmail.com"&gt;akhil.marsonya27@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/meixg"&gt;meixg&lt;/a&gt; - &lt;strong&gt;Xuguang Mei&lt;/strong&gt; &amp;lt;&lt;a href="mailto:meixuguang@gmail.com"&gt;meixuguang@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/preveen-stack"&gt;preveen-stack&lt;/a&gt; - &lt;strong&gt;Preveen Padmanabhan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:wide4head@gmail.com"&gt;wide4head@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RaisinTen"&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:raisinten@gmail.com"&gt;raisinten@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VoltrexKeyva"&gt;VoltrexKeyva&lt;/a&gt; - &lt;strong&gt;Mohammed Keyvanzadeh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mohammadkeyvanzade94@gmail.com"&gt;mohammadkeyvanzade94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Triagers follow the &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/issues.md#triaging-a-bug-report"&gt;Triage Guide&lt;/a&gt; when responding to new issues.&lt;/p&gt; 
&lt;h3&gt;Release keys&lt;/h3&gt; 
&lt;p&gt;Primary GPG keys for Node.js Releasers (some Releasers sign with subkeys):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:duhamelantoine1995@gmail.com"&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;5BE8A3F6C8A5C01D106C0AD820B1A390B168D356&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Juan Jos√© Arboleda&lt;/strong&gt; &amp;lt;&lt;a href="mailto:soyjuanarbol@gmail.com"&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href="mailto:marcoippolito54@gmail.com"&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;CC68F5A3106FF448322E48ED27F5E38D5B0A215F&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Micha√´l Zasso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:targos@protonmail.com"&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rafael.nunu@hotmail.com"&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:richard.lau@ibm.com"&gt;richard.lau@ibm.com&lt;/a&gt;&amp;gt; &lt;code&gt;C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruyadorno@hotmail.com"&gt;ruyadorno@hotmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;108F52B48DB57BB0CC439B2997B01419BD92F80A&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ulises Gasc√≥n&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ulisesgascongonzalez@gmail.com"&gt;ulisesgascongonzalez@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;A363A499291CBBC940DD62E41F10027AF002F8B0&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can use the keyring the project maintains at &lt;a href="https://github.com/nodejs/release-keys/raw/refs/heads/main/gpg-only-active-keys/pubring.kbx"&gt;https://github.com/nodejs/release-keys/raw/refs/heads/main/gpg-only-active-keys/pubring.kbx&lt;/a&gt;. Alternatively, you can import them from a public key server. Have in mind that the project cannot guarantee the availability of the server nor the keys on that server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gpg --keyserver hkps://keys.openpgp.org --recv-keys 5BE8A3F6C8A5C01D106C0AD820B1A390B168D356 # Antoine du Hamel
gpg --keyserver hkps://keys.openpgp.org --recv-keys DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7 # Juan Jos√© Arboleda
gpg --keyserver hkps://keys.openpgp.org --recv-keys CC68F5A3106FF448322E48ED27F5E38D5B0A215F # Marco Ippolito
gpg --keyserver hkps://keys.openpgp.org --recv-keys 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 # Micha√´l Zasso
gpg --keyserver hkps://keys.openpgp.org --recv-keys 890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4 # Rafael Gonzaga
gpg --keyserver hkps://keys.openpgp.org --recv-keys C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C # Richard Lau
gpg --keyserver hkps://keys.openpgp.org --recv-keys 108F52B48DB57BB0CC439B2997B01419BD92F80A # Ruy Adorno
gpg --keyserver hkps://keys.openpgp.org --recv-keys A363A499291CBBC940DD62E41F10027AF002F8B0 # Ulises Gasc√≥n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#verifying-binaries"&gt;Verifying binaries&lt;/a&gt; for how to use these keys to verify a downloaded file.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Other keys used to sign some previous releases&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:duhamelantoine1995@gmail.com"&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;C0D6248439F1D5604AAFFB4021D900FFDB233756&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bethanyngriggs@gmail.com"&gt;bethanyngriggs@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;4ED778F539E3634C779C87C6D7062848A1AB005C&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@bryanenglish.com"&gt;bryan@bryanenglish.com&lt;/a&gt;&amp;gt; &lt;code&gt;141F07595B7B3FFE74309A937405533BE57C7D57&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christopher.s.dickinson@gmail.com"&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;9554F04D7259F04124DE6B476D5A82AC7E37093B&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjihrig@gmail.com"&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;94AE36675C464D64BAFA68DD7434390BDBE9B9C5&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href="mailto:adamzdanielle@gmail.com"&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;1C050899334244A8AF75E53792EF661D867B9DFA&lt;/code&gt; &lt;code&gt;74F12602B6F1C4E913FAA37AD3A89613643B6201&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:evanlucas@me.com"&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; &lt;code&gt;B9AE9905FFD7803F25714661B63B535A4C206CA9&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gibfahn@gmail.com"&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;77984A986EBC2AA786BC0F66B01FBB92821C587A&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@izs.me"&gt;i@izs.me&lt;/a&gt;&amp;gt; &lt;code&gt;93C7E9E91B49E432C2F75674B0A78B0A6C481CF6&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@italoacasas.com"&gt;me@italoacasas.com&lt;/a&gt;&amp;gt; &lt;code&gt;56730D5401028683275BD23C23EFEFE93C4CFFFE&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasnell@keybase.io"&gt;jasnell@keybase.io&lt;/a&gt;&amp;gt; &lt;code&gt;71DCFD284A79C3B38668286BC97EC7A07EDE3FC1&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fishrock@keybase.io"&gt;fishrock@keybase.io&lt;/a&gt;&amp;gt; &lt;code&gt;FD3A5288F042B6850C66B31F09FE44734EB7990E&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Juan Jos√© Arboleda&lt;/strong&gt; &amp;lt;&lt;a href="mailto:soyjuanarbol@gmail.com"&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;61FC681DFB92A079F1685E77973F295594EC4689&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jgilli@fastmail.fm"&gt;jgilli@fastmail.fm&lt;/a&gt;&amp;gt; &lt;code&gt;114F43EE0176B71C7BC219DD50A3051F888C628D&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href="mailto:myles.borins@gmail.com"&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rod@vagg.org"&gt;rod@vagg.org&lt;/a&gt;&amp;gt; &lt;code&gt;DD8F2338BAE7501E3DD5AC78C273792F7D83545D&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruben@bridgewater.de"&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; &lt;code&gt;A48C2BEE680E841632CD4E44F07496B3EB3C1762&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shelley.vohr@gmail.com"&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;B9E2F5981AA6E0CD28160D9FF13993A75599653C&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Timothy J Fontaine&lt;/strong&gt; &amp;lt;&lt;a href="mailto:tjfontaine@gmail.com"&gt;tjfontaine@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;7937DFD2AB06298B2293C3187D33FF9D0246406D&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;The project maintains a keyring able to verify all past releases of Node.js at &lt;a href="https://github.com/nodejs/release-keys/raw/refs/heads/main/gpg/pubring.kbx"&gt;https://github.com/nodejs/release-keys/raw/refs/heads/main/gpg/pubring.kbx&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Security release stewards&lt;/h3&gt; 
&lt;p&gt;When possible, the commitment to take slots in the security release steward rotation is made by companies in order to ensure individuals who act as security stewards have the support and recognition from their employer to be able to prioritize security releases. Security release stewards manage security releases on a rotation basis as outlined in the &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/security-release-process.md"&gt;security release process&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.datadoghq.com/"&gt;Datadog&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bengl"&gt;bengl&lt;/a&gt; - &lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@bryanenglish.com"&gt;bryan@bryanenglish.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.herodevs.com/"&gt;HeroDevs&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/marco-ippolito"&gt;marco-ippolito&lt;/a&gt; - &lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href="mailto:marcoippolito54@gmail.com"&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodesource.com/"&gt;NodeSource&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/juanarbol"&gt;juanarbol&lt;/a&gt; - &lt;strong&gt;Juan Jos√© Arboleda&lt;/strong&gt; &amp;lt;&lt;a href="mailto:soyjuanarbol@gmail.com"&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/RafaelGSS"&gt;RafaelGSS&lt;/a&gt; - &lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rafael.nunu@hotmail.com"&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://platformatic.dev/"&gt;Platformatic&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mcollina"&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href="mailto:matteo.collina@gmail.com"&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://redhat.com"&gt;Red Hat&lt;/a&gt; / &lt;a href="https://ibm.com"&gt;IBM&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/joesepi"&gt;joesepi&lt;/a&gt; - &lt;strong&gt;Joe Sepi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:joesepi@ibm.com"&gt;joesepi@ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mhdawson"&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:midawson@redhat.com"&gt;midawson@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Node.js is available under the &lt;a href="https://opensource.org/licenses/MIT"&gt;MIT License&lt;/a&gt;. Node.js also includes external libraries that are available under a variety of licenses. See &lt;a href="https://github.com/nodejs/node/raw/HEAD/LICENSE"&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>denysdovhan/wtfjs</title>
      <link>https://github.com/denysdovhan/wtfjs</link>
      <description>&lt;p&gt;ü§™ A list of funny and tricky JavaScript examples&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://stand-with-ukraine.pp.ua/"&gt;&lt;img src="https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner-direct-single.svg?sanitize=true" alt="SWUbanner"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;What the f*ck JavaScript?&lt;/h1&gt; 
&lt;p&gt;&lt;a href="http://www.wtfpl.net"&gt;&lt;img src="https://img.shields.io/badge/License-WTFPL%202.0-lightgrey.svg?style=flat-square" alt="WTFPL 2.0"&gt;&lt;/a&gt; &lt;a href="https://npmjs.org/package/wtfjs"&gt;&lt;img src="https://img.shields.io/npm/v/wtfjs.svg?style=flat-square" alt="NPM version"&gt;&lt;/a&gt; &lt;a href="https://patreon.com/denysdovhan"&gt;&lt;img src="https://img.shields.io/badge/support-patreon-F96854.svg?style=flat-square" alt="Patreon"&gt;&lt;/a&gt; &lt;a href="https://patreon.com/denysdovhan"&gt;&lt;img src="https://img.shields.io/badge/support-buymeacoffee-222222.svg?style=flat-square" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A list of funny and tricky JavaScript examples&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;JavaScript is a great language. It has a simple syntax, large ecosystem and, what is most important, a great community.&lt;/p&gt; 
&lt;p&gt;At the same time, we all know that JavaScript is quite a funny language with tricky parts. Some of them can quickly turn our everyday job into hell, and some of them can make us laugh out loud.&lt;/p&gt; 
&lt;p&gt;The original idea for WTFJS belongs to &lt;a href="https://twitter.com/brianleroux"&gt;Brian Leroux&lt;/a&gt;. This list is highly inspired by his talk &lt;a href="https://www.youtube.com/watch?v=et8xNAc2ic8"&gt;&lt;strong&gt;‚ÄúWTFJS‚Äù&lt;/strong&gt; at dotJS 2012&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=et8xNAc2ic8"&gt;&lt;img src="https://img.youtube.com/vi/et8xNAc2ic8/0.jpg" alt="dotJS 2012 - Brian Leroux - WTFJS"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Node Packaged Manuscript&lt;/h1&gt; 
&lt;p&gt;You can install this handbook using &lt;code&gt;npm&lt;/code&gt;. Just run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install -g wtfjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should be able to run &lt;code&gt;wtfjs&lt;/code&gt; at the command line now. This will open the manual in your selected &lt;code&gt;$PAGER&lt;/code&gt;. Otherwise, you may continue reading on here.&lt;/p&gt; 
&lt;p&gt;The source is available here: &lt;a href="https://github.com/denysdovhan/wtfjs"&gt;https://github.com/denysdovhan/wtfjs&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Translations&lt;/h1&gt; 
&lt;p&gt;Currently, there are these translations of &lt;strong&gt;wtfjs&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-zh-cn.md"&gt;‰∏≠Êñá&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-hi.md"&gt;‡§π‡§ø‡§Ç‡§¶‡•Ä&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-fr-fr.md"&gt;Fran√ßais&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-pt-br.md"&gt;Portugu√™s do Brasil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-pl-pl.md"&gt;Polski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-it-it.md"&gt;Italiano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-kr.md"&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/denysdovhan/wtfjs/raw/master/CONTRIBUTING.md#translations"&gt;&lt;strong&gt;Help translating to your language&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Translations are maintained by their translators. They may not contain every example, and existing examples may be outdated.&lt;/p&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-motivation"&gt;üí™üèª Motivation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-notation"&gt;‚úçüèª Notation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-examples"&gt;üëÄ Examples&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-equal-"&gt;&lt;code&gt;[]&lt;/code&gt; is equal &lt;code&gt;![]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#true-is-not-equal--but-not-equal--too"&gt;&lt;code&gt;true&lt;/code&gt; is not equal &lt;code&gt;![]&lt;/code&gt;, but not equal &lt;code&gt;[]&lt;/code&gt; too&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#true-is-false"&gt;true is false&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#banana"&gt;baNaNa&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#nan-is-not-a-nan"&gt;&lt;code&gt;NaN&lt;/code&gt; is not a &lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#objectis-and--weird-cases"&gt;&lt;code&gt;Object.is()&lt;/code&gt; and &lt;code&gt;===&lt;/code&gt; weird cases&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#its-a-fail"&gt;It's a fail&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-truthy-but-not-true"&gt;&lt;code&gt;[]&lt;/code&gt; is truthy, but not &lt;code&gt;true&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#null-is-falsy-but-not-false"&gt;&lt;code&gt;null&lt;/code&gt; is falsy, but not &lt;code&gt;false&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#documentall-is-an-object-but-it-is-undefined"&gt;&lt;code&gt;document.all&lt;/code&gt; is an object, but it is undefined&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#minimal-value-is-greater-than-zero"&gt;Minimal value is greater than zero&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#function-is-not-a-function"&gt;function is not a function&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#adding-arrays"&gt;Adding arrays&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#trailing-commas-in-array"&gt;Trailing commas in array&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#array-equality-is-a-monster"&gt;Array equality is a monster&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#undefined-and-number"&gt;&lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#parseint-is-a-bad-guy"&gt;&lt;code&gt;parseInt&lt;/code&gt; is a bad guy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#math-with-true-and-false"&gt;Math with &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#html-comments-are-valid-in-javascript"&gt;HTML comments are valid in JavaScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#nan-is-not-a-number"&gt;&lt;code&gt;NaN&lt;/code&gt; is &lt;del&gt;not&lt;/del&gt; a number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-and-null-are-objects"&gt;&lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; are objects&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#magically-increasing-numbers"&gt;Magically increasing numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#precision-of-01--02"&gt;Precision of &lt;code&gt;0.1 + 0.2&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#patching-numbers"&gt;Patching numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#comparison-of-three-numbers"&gt;Comparison of three numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#funny-math"&gt;Funny math&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#addition-of-regexps"&gt;Addition of RegExps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#strings-arent-instances-of-string"&gt;Strings aren't instances of &lt;code&gt;String&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#calling-functions-with-backticks"&gt;Calling functions with backticks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#call-call-call"&gt;Call call call&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-constructor-property"&gt;A &lt;code&gt;constructor&lt;/code&gt; property&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#object-as-a-key-of-objects-property"&gt;Object as a key of object's property&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#accessing-prototypes-with-__proto__"&gt;Accessing prototypes with &lt;code&gt;__proto__&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-object-"&gt;&lt;code&gt;`${{Object}}`&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#destructuring-with-default-values"&gt;Destructuring with default values&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#dots-and-spreading"&gt;Dots and spreading&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#labels"&gt;Labels&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#nested-labels"&gt;Nested labels&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#insidious-trycatch"&gt;Insidious &lt;code&gt;try..catch&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#is-this-multiple-inheritance"&gt;Is this multiple inheritance?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-generator-which-yields-itself"&gt;A generator which yields itself&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-class-of-class"&gt;A class of class&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#non-coercible-objects"&gt;Non-coercible objects&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#tricky-arrow-functions"&gt;Tricky arrow functions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#arrow-functions-can-not-be-a-constructor"&gt;Arrow functions can not be a constructor&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#arguments-and-arrow-functions"&gt;&lt;code&gt;arguments&lt;/code&gt; and arrow functions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#tricky-return"&gt;Tricky return&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#chaining-assignments-on-object"&gt;Chaining assignments on object&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#accessing-object-properties-with-arrays"&gt;Accessing object properties with arrays&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#numbertofixed-display-different-numbers"&gt;&lt;code&gt;Number.toFixed()&lt;/code&gt; display different numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#mathmax-less-than-mathmin"&gt;&lt;code&gt;Math.max()&lt;/code&gt; less than &lt;code&gt;Math.min()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#comparing-null-to-0"&gt;Comparing &lt;code&gt;null&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#same-variable-redeclaration"&gt;Same variable redeclaration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#default-behavior-arrayprototypesort"&gt;Default behavior Array.prototype.sort()&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#resolve-wont-return-promise-instance"&gt;resolve() won't return Promise instance&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-undefined"&gt;&lt;code&gt;{}{}&lt;/code&gt; is undefined&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#arguments-binding"&gt;&lt;code&gt;arguments&lt;/code&gt; binding&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#an-alert-from-hell"&gt;An &lt;code&gt;alert&lt;/code&gt; from hell&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#an-infinite-timeout"&gt;An infinite timeout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-settimeout-object"&gt;A &lt;code&gt;setTimeout&lt;/code&gt; object&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#double-dot"&gt;Double dot&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#extra-newness"&gt;Extra Newness&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#why-you-should-use-semicolons"&gt;Why you should use semicolons&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#split-a-string-by-a-space"&gt;Split a string by a space&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-stringified-string"&gt;A stringified string&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#non-strict-comparison-of-a-number-to-true"&gt;Non-strict comparison of a number to &lt;code&gt;true&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-other-resources"&gt;üìö Other resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-supporting"&gt;ü§ù Supporting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-license"&gt;üéì License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;h1&gt;üí™üèª Motivation&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Just for fun&lt;/p&gt; 
 &lt;p&gt;‚Äî &lt;em&gt;&lt;a href="https://en.wikipedia.org/wiki/Just_for_Fun"&gt;&lt;strong&gt;‚ÄúJust for Fun: The Story of an Accidental Revolutionary‚Äù&lt;/strong&gt;&lt;/a&gt;, Linus Torvalds&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The primary goal of this list is to collect some crazy examples and explain how they work, if possible. Just because it's fun to learn something that we didn't know before.&lt;/p&gt; 
&lt;p&gt;If you are a beginner, you can use these notes to get a deeper dive into JavaScript. I hope these notes will motivate you to spend more time reading the specification.&lt;/p&gt; 
&lt;p&gt;If you are a professional developer, you can consider these examples as a great reference for all of the quirks and unexpected edges of our beloved JavaScript.&lt;/p&gt; 
&lt;p&gt;In any case, just read this. You're probably going to find something new.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;‚ö†Ô∏è Note:&lt;/strong&gt; If you enjoy reading this document, please, &lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-supporting"&gt;consider supporting the author of this collection&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;‚úçüèª Notation&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;// -&amp;gt;&lt;/code&gt;&lt;/strong&gt; is used to show the result of an expression. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;1 + 1; // -&amp;gt; 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;// &amp;gt;&lt;/code&gt;&lt;/strong&gt; means the result of &lt;code&gt;console.log&lt;/code&gt; or another output. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;console.log("hello, world!"); // &amp;gt; hello, world!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;//&lt;/code&gt;&lt;/strong&gt; is just a comment used for explanations. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Assigning a function to foo constant
const foo = function() {};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;üëÄ Examples&lt;/h1&gt; 
&lt;h2&gt;&lt;code&gt;[]&lt;/code&gt; is equal &lt;code&gt;![]&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Array is equal not array:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[] == ![]; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;The abstract equality operator converts both sides to numbers to compare them, and both sides become the number &lt;code&gt;0&lt;/code&gt; for different reasons. Arrays are truthy, so on the right, the opposite of a truthy value is &lt;code&gt;false&lt;/code&gt;, which is then coerced to &lt;code&gt;0&lt;/code&gt;. On the left, however, an empty array is coerced to a number without becoming a boolean first, and empty arrays are coerced to &lt;code&gt;0&lt;/code&gt;, despite being truthy.&lt;/p&gt; 
&lt;p&gt;Here is how this expression simplifies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;+[] == +![];
0 == +false;
0 == 0;
true;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See also &lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-truthy-but-not-true"&gt;&lt;code&gt;[]&lt;/code&gt; is truthy, but not &lt;code&gt;true&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-logical-not-operator"&gt;&lt;strong&gt;12.5.9&lt;/strong&gt; Logical NOT Operator (&lt;code&gt;!&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;true&lt;/code&gt; is not equal &lt;code&gt;![]&lt;/code&gt;, but not equal &lt;code&gt;[]&lt;/code&gt; too&lt;/h2&gt; 
&lt;p&gt;Array is not equal &lt;code&gt;true&lt;/code&gt;, but not Array is not equal &lt;code&gt;true&lt;/code&gt; too; Array is equal &lt;code&gt;false&lt;/code&gt;, not Array is equal &lt;code&gt;false&lt;/code&gt; too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;true == []; // -&amp;gt; false
true == ![]; // -&amp;gt; false

false == []; // -&amp;gt; true
false == ![]; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;true == []; // -&amp;gt; false
true == ![]; // -&amp;gt; false

// According to the specification

true == []; // -&amp;gt; false

toNumber(true); // -&amp;gt; 1
toNumber([]); // -&amp;gt; 0

1 == 0; // -&amp;gt; false

true == ![]; // -&amp;gt; false

![]; // -&amp;gt; false

true == false; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;false == []; // -&amp;gt; true
false == ![]; // -&amp;gt; true

// According to the specification

false == []; // -&amp;gt; true

toNumber(false); // -&amp;gt; 0
toNumber([]); // -&amp;gt; 0

0 == 0; // -&amp;gt; true

false == ![]; // -&amp;gt; true

![]; // -&amp;gt; false

false == false; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;true is false&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;!!"false" == !!"true"; // -&amp;gt; true
!!"false" === !!"true"; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Consider this step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// true is 'truthy' and represented by value 1 (number), 'true' in string form is NaN.
true == "true"; // -&amp;gt; false
false == "false"; // -&amp;gt; false

// 'false' is not the empty string, so it's a truthy value
!!"false"; // -&amp;gt; true
!!"true"; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;baNaNa&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;"b" + "a" + +"a" + "a"; // -&amp;gt; 'baNaNa'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is an old-school joke in JavaScript, but remastered. Here's the original one:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;"foo" + +"bar"; // -&amp;gt; 'fooNaN'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;The expression is evaluated as &lt;code&gt;'foo' + (+'bar')&lt;/code&gt;, which converts &lt;code&gt;'bar'&lt;/code&gt; to not a number.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-addition-operator-plus"&gt;&lt;strong&gt;12.8.3&lt;/strong&gt; The Addition Operator (&lt;code&gt;+&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-unary-plus-operator"&gt;12.5.6 Unary + Operator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;NaN&lt;/code&gt; is not a &lt;code&gt;NaN&lt;/code&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;NaN === NaN; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;The specification strictly defines the logic behind this behavior:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;ol&gt; 
  &lt;li&gt;If &lt;code&gt;Type(x)&lt;/code&gt; is different from &lt;code&gt;Type(y)&lt;/code&gt;, return &lt;strong&gt;false&lt;/strong&gt;.&lt;/li&gt; 
  &lt;li&gt;If &lt;code&gt;Type(x)&lt;/code&gt; is Number, then 
   &lt;ol&gt; 
    &lt;li&gt;If &lt;code&gt;x&lt;/code&gt; is &lt;strong&gt;NaN&lt;/strong&gt;, return &lt;strong&gt;false&lt;/strong&gt;.&lt;/li&gt; 
    &lt;li&gt;If &lt;code&gt;y&lt;/code&gt; is &lt;strong&gt;NaN&lt;/strong&gt;, return &lt;strong&gt;false&lt;/strong&gt;.&lt;/li&gt; 
    &lt;li&gt;‚Ä¶ ‚Ä¶ ‚Ä¶&lt;/li&gt; 
   &lt;/ol&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;‚Äî &lt;a href="https://www.ecma-international.org/ecma-262/#sec-strict-equality-comparison"&gt;&lt;strong&gt;7.2.14&lt;/strong&gt; Strict Equality Comparison&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Following the definition of &lt;code&gt;NaN&lt;/code&gt; from the IEEE:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Four mutually exclusive relations are possible: less than, equal, greater than, and unordered. The last case arises when at least one operand is NaN. Every NaN shall compare unordered with everything, including itself.&lt;/p&gt; 
 &lt;p&gt;‚Äî &lt;a href="https://stackoverflow.com/questions/1565164/1573715#1573715"&gt;‚ÄúWhat is the rationale for all comparisons returning false for IEEE754 NaN values?‚Äù&lt;/a&gt; at StackOverflow&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;code&gt;Object.is()&lt;/code&gt; and &lt;code&gt;===&lt;/code&gt; weird cases&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Object.is()&lt;/code&gt; determines if two values have the same value or not. It works similar to the &lt;code&gt;===&lt;/code&gt; operator but there are a few weird cases:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;Object.is(NaN, NaN); // -&amp;gt; true
NaN === NaN; // -&amp;gt; false

Object.is(-0, 0); // -&amp;gt; false
-0 === 0; // -&amp;gt; true

Object.is(NaN, 0 / 0); // -&amp;gt; true
NaN === 0 / 0; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;In JavaScript lingo, &lt;code&gt;NaN&lt;/code&gt; and &lt;code&gt;NaN&lt;/code&gt; are the same value but they're not strictly equal. &lt;code&gt;NaN === NaN&lt;/code&gt; being false is apparently due to historical reasons so it would probably be better to accept it as it is.&lt;/p&gt; 
&lt;p&gt;Similarly, &lt;code&gt;-0&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; are strictly equal, but they're not the same value.&lt;/p&gt; 
&lt;p&gt;For more details about &lt;code&gt;NaN === NaN&lt;/code&gt;, see the above case.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://tc39.es/ecma262/#sec-object.is"&gt;Here are the TC39 specs about Object.is&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness"&gt;Equality comparisons and sameness&lt;/a&gt; on MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;It's a fail&lt;/h2&gt; 
&lt;p&gt;You would not believe, but ‚Ä¶&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(![] + [])[+[]] +
  (![] + [])[+!+[]] +
  ([![]] + [][[]])[+!+[] + [+[]]] +
  (![] + [])[!+[] + !+[]];
// -&amp;gt; 'fail'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;By breaking that mass of symbols into pieces, we notice that the following pattern occurs often:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;![] + []; // -&amp;gt; 'false'
![]; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So we try adding &lt;code&gt;[]&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. But due to a number of internal function calls (&lt;code&gt;binary + Operator&lt;/code&gt; -&amp;gt; &lt;code&gt;ToPrimitive&lt;/code&gt; -&amp;gt; &lt;code&gt;[[DefaultValue]]&lt;/code&gt;) we end up converting the right operand to a string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;![] + [].toString(); // 'false'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Thinking of a string as an array we can access its first character via &lt;code&gt;[0]&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;"false"[0]; // -&amp;gt; 'f'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The rest is obvious, but the &lt;code&gt;i&lt;/code&gt; is tricky. The &lt;code&gt;i&lt;/code&gt; in &lt;code&gt;fail&lt;/code&gt; is grabbed by generating the string &lt;code&gt;'falseundefined'&lt;/code&gt; and grabbing the element on index &lt;code&gt;['10']&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;More examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;+![]          // -&amp;gt; 0
+!![]         // -&amp;gt; 1
!![]          // -&amp;gt; true
![]           // -&amp;gt; false
[][[]]        // -&amp;gt; undefined
+!![] / +![]  // -&amp;gt; Infinity
[] + {}       // -&amp;gt; "[object Object]"
+{}           // -&amp;gt; NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://patriciopalladino.com/blog/2012/08/09/non-alphanumeric-javascript.html"&gt;Brainfuck beware: JavaScript is after you!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bluewings.github.io/en/writing-a-sentence-without-using-the-alphabet/#weird-javascript-generator"&gt;Writing a sentence without using the Alphabet&lt;/a&gt; ‚Äî generate any phrase using JavaScript&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;[]&lt;/code&gt; is truthy, but not &lt;code&gt;true&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;An array is a truthy value, however, it's not equal to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;!![]       // -&amp;gt; true
[] == true // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Here are links to the corresponding sections in the ECMA-262 specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-logical-not-operator"&gt;&lt;strong&gt;12.5.9&lt;/strong&gt; Logical NOT Operator (&lt;code&gt;!&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;null&lt;/code&gt; is falsy, but not &lt;code&gt;false&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Despite the fact that &lt;code&gt;null&lt;/code&gt; is a falsy value, it's not equal to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;!!null; // -&amp;gt; false
null == false; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At the same time, other falsy values, like &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;''&lt;/code&gt; are equal to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;0 == false; // -&amp;gt; true
"" == false; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;The explanation is the same as for previous example. Here's the corresponding link:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;document.all&lt;/code&gt; is an object, but it is undefined&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è This is part of the Browser API and won't work in a Node.js environment ‚ö†Ô∏è&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Despite the fact that &lt;code&gt;document.all&lt;/code&gt; is an array-like object and it gives access to the DOM nodes in the page, it responds to the &lt;code&gt;typeof&lt;/code&gt; function as &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;document.all instanceof Object; // -&amp;gt; true
typeof document.all; // -&amp;gt; 'undefined'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At the same time, &lt;code&gt;document.all&lt;/code&gt; is not equal to &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;document.all === undefined; // -&amp;gt; false
document.all === null; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But at the same time:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;document.all == null; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;document.all&lt;/code&gt; used to be a way to access DOM elements, in particular with old versions of IE. While it has never been a standard it was broadly used in the old age JS code. When the standard progressed with new APIs (such as &lt;code&gt;document.getElementById&lt;/code&gt;) this API call became obsolete and the standard committee had to decide what to do with it. Because of its broad use they decided to keep the API but introduce a willful violation of the JavaScript specification. The reason why it responds to &lt;code&gt;false&lt;/code&gt; when using the &lt;a href="https://www.ecma-international.org/ecma-262/#sec-strict-equality-comparison"&gt;Strict Equality Comparison&lt;/a&gt; with &lt;code&gt;undefined&lt;/code&gt; while &lt;code&gt;true&lt;/code&gt; when using the &lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;Abstract Equality Comparison&lt;/a&gt; is due to the willful violation of the specification that explicitly allows that.&lt;/p&gt; 
 &lt;p&gt;‚Äî &lt;a href="https://html.spec.whatwg.org/multipage/obsolete.html#dom-document-all"&gt;‚ÄúObsolete features - document.all‚Äù&lt;/a&gt; at WhatWG - HTML spec ‚Äî &lt;a href="https://github.com/getify/You-Dont-Know-JS/raw/0d79079b61dad953bbfde817a5893a49f7e889fb/types%20%26%20grammar/ch4.md#falsy-objects"&gt;‚ÄúChapter 4 - ToBoolean - Falsy values‚Äù&lt;/a&gt; at YDKJS - Types &amp;amp; Grammar&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Minimal value is greater than zero&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Number.MIN_VALUE&lt;/code&gt; is the smallest number, which is greater than zero:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Number.MIN_VALUE &amp;gt; 0; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;Number.MIN_VALUE&lt;/code&gt; is &lt;code&gt;5e-324&lt;/code&gt;, i.e. the smallest positive number that can be represented within float precision, i.e. that's as close as you can get to zero. It defines the best resolution that floats can give you.&lt;/p&gt; 
 &lt;p&gt;Now the overall smallest value is &lt;code&gt;Number.NEGATIVE_INFINITY&lt;/code&gt; although it's not really numeric in a strict sense.&lt;/p&gt; 
 &lt;p&gt;‚Äî &lt;a href="https://stackoverflow.com/questions/26614728/why-is-0-less-than-number-min-value-in-javascript"&gt;‚ÄúWhy is &lt;code&gt;0&lt;/code&gt; less than &lt;code&gt;Number.MIN_VALUE&lt;/code&gt; in JavaScript?‚Äù&lt;/a&gt; at StackOverflow&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-number.min_value"&gt;&lt;strong&gt;20.1.2.9&lt;/strong&gt; Number.MIN_VALUE&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;function is not a function&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è A bug present in V8 v5.5 or lower (Node.js &amp;lt;=7) ‚ö†Ô∏è&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;All of you know about the annoying &lt;em&gt;undefined is not a function&lt;/em&gt;, but what about this?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Declare a class which extends null
class Foo extends null {}
// -&amp;gt; [Function: Foo]

new Foo() instanceof null;
// &amp;gt; TypeError: function is not a function
// &amp;gt;     at ‚Ä¶ ‚Ä¶ ‚Ä¶
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;This is not a part of the specification. It's just a bug that has now been fixed, so there shouldn't be a problem with it in the future.&lt;/p&gt; 
&lt;h3&gt;Super constructor null of Foo is not a constructor&lt;/h3&gt; 
&lt;p&gt;It's continuation of story with previous bug in modern environment (tested with Chrome 71 and Node.js v11.8.0).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class Foo extends null {}
new Foo() instanceof null;
// &amp;gt; TypeError: Super constructor null of Foo is not a constructor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;This is not a bug because:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Object.getPrototypeOf(Foo.prototype); // -&amp;gt; null
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the class has no constructor the call from prototype chain. But in the parent has no constructor. Just in case, I‚Äôll clarify that &lt;code&gt;null&lt;/code&gt; is an object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;typeof null === "object";
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Therefore, you can inherit from it (although in the world of the OOP for such terms would have beaten me). So you can't call the null constructor. If you change this code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class Foo extends null {
  constructor() {
    console.log("something");
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You see the error:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ReferenceError: Must call super constructor in derived class before accessing 'this' or returning from derived constructor
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And if you add &lt;code&gt;super&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class Foo extends null {
  constructor() {
    console.log(111);
    super();
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;JS throws an error:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TypeError: Super constructor null of Foo is not a constructor
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/denysdovhan/wtfjs/pull/102#discussion_r259143582"&gt;An explanation of this issue&lt;/a&gt; by &lt;a href="https://github.com/geekjob"&gt;@geekjob&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Adding arrays&lt;/h2&gt; 
&lt;p&gt;What if you try to add two arrays?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[1, 2, 3] + [4, 5, 6]; // -&amp;gt; '1,2,34,5,6'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;The concatenation happens. Step-by-step, it looks like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[1, 2, 3] +
  [4, 5, 6][
    // call toString()
    (1, 2, 3)
  ].toString() +
  [4, 5, 6].toString();
// concatenation
"1,2,3" + "4,5,6";
// -&amp;gt;
("1,2,34,5,6");
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Trailing commas in array&lt;/h2&gt; 
&lt;p&gt;You've created an array with 4 empty elements. Despite all, you'll get an array with three elements, because of trailing commas:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let a = [, , ,];
a.length; // -&amp;gt; 3
a.toString(); // -&amp;gt; ',,'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Trailing commas&lt;/strong&gt; (sometimes called "final commas") can be useful when adding new elements, parameters, or properties to JavaScript code. If you want to add a new property, you can simply add a new line without modifying the previously last line if that line already uses a trailing comma. This makes version-control diffs cleaner and editing code might be less troublesome.&lt;/p&gt; 
 &lt;p&gt;‚Äî &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Trailing_commas"&gt;Trailing commas&lt;/a&gt; at MDN&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Array equality is a monster&lt;/h2&gt; 
&lt;p&gt;Array equality is a monster in JS, as you can see below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[] == ''   // -&amp;gt; true
[] == 0    // -&amp;gt; true
[''] == '' // -&amp;gt; true
[0] == 0   // -&amp;gt; true
[0] == ''  // -&amp;gt; false
[''] == 0  // -&amp;gt; true

[null] == ''      // true
[null] == 0       // true
[undefined] == '' // true
[undefined] == 0  // true

[[]] == 0  // true
[[]] == '' // true

[[[[[[]]]]]] == '' // true
[[[[[[]]]]]] == 0  // true

[[[[[[ null ]]]]]] == 0  // true
[[[[[[ null ]]]]]] == '' // true

[[[[[[ undefined ]]]]]] == 0  // true
[[[[[[ undefined ]]]]]] == '' // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;You should watch very carefully for the above examples! The behaviour is described in section &lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt; of the specification.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;Number&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;If we don't pass any arguments into the &lt;code&gt;Number&lt;/code&gt; constructor, we'll get &lt;code&gt;0&lt;/code&gt;. The value &lt;code&gt;undefined&lt;/code&gt; is assigned to formal arguments when there are no actual arguments, so you might expect that &lt;code&gt;Number&lt;/code&gt; without arguments takes &lt;code&gt;undefined&lt;/code&gt; as a value of its parameter. However, when we pass &lt;code&gt;undefined&lt;/code&gt;, we will get &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Number(); // -&amp;gt; 0
Number(undefined); // -&amp;gt; NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;According to the specification:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If no arguments were passed to this function's invocation, let &lt;code&gt;n&lt;/code&gt; be &lt;code&gt;+0&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Else, let &lt;code&gt;n&lt;/code&gt; be ? &lt;code&gt;ToNumber(value)&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;In case of &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;ToNumber(undefined)&lt;/code&gt; should return &lt;code&gt;NaN&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Here's the corresponding section:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-number-constructor"&gt;&lt;strong&gt;20.1.1&lt;/strong&gt; The Number Constructor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-tonumber"&gt;&lt;strong&gt;7.1.3&lt;/strong&gt; ToNumber(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;parseInt&lt;/code&gt; is a bad guy&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;parseInt&lt;/code&gt; is famous by its quirks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;parseInt("f*ck"); // -&amp;gt; NaN
parseInt("f*ck", 16); // -&amp;gt; 15
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;üí° Explanation:&lt;/strong&gt; This happens because &lt;code&gt;parseInt&lt;/code&gt; will continue parsing character-by-character until it hits a character it doesn't know. The &lt;code&gt;f&lt;/code&gt; in &lt;code&gt;'f*ck'&lt;/code&gt; is the hexadecimal digit &lt;code&gt;15&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Parsing &lt;code&gt;Infinity&lt;/code&gt; to integer is something‚Ä¶&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;//
parseInt("Infinity", 10); // -&amp;gt; NaN
// ...
parseInt("Infinity", 18); // -&amp;gt; NaN...
parseInt("Infinity", 19); // -&amp;gt; 18
// ...
parseInt("Infinity", 23); // -&amp;gt; 18...
parseInt("Infinity", 24); // -&amp;gt; 151176378
// ...
parseInt("Infinity", 29); // -&amp;gt; 385849803
parseInt("Infinity", 30); // -&amp;gt; 13693557269
// ...
parseInt("Infinity", 34); // -&amp;gt; 28872273981
parseInt("Infinity", 35); // -&amp;gt; 1201203301724
parseInt("Infinity", 36); // -&amp;gt; 1461559270678...
parseInt("Infinity", 37); // -&amp;gt; NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be careful with parsing &lt;code&gt;null&lt;/code&gt; too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;parseInt(null, 24); // -&amp;gt; 23
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;üí° Explanation:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It's converting &lt;code&gt;null&lt;/code&gt; to the string &lt;code&gt;"null"&lt;/code&gt; and trying to convert it. For radixes 0 through 23, there are no numerals it can convert, so it returns NaN. At 24, &lt;code&gt;"n"&lt;/code&gt;, the 14th letter, is added to the numeral system. At 31, &lt;code&gt;"u"&lt;/code&gt;, the 21st letter, is added and the entire string can be decoded. At 37 on there is no longer any valid numeral set that can be generated and &lt;code&gt;NaN&lt;/code&gt; is returned.&lt;/p&gt; 
 &lt;p&gt;‚Äî &lt;a href="https://stackoverflow.com/questions/6459758/parseintnull-24-23-wait-what"&gt;‚ÄúparseInt(null, 24) === 23‚Ä¶ wait, what?‚Äù&lt;/a&gt; at StackOverflow&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Don't forget about octals:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;parseInt("06"); // 6
parseInt("08"); // 8 if support ECMAScript 5
parseInt("08"); // 0 if not support ECMAScript 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;üí° Explanation:&lt;/strong&gt; If the input string begins with "0", radix is eight (octal) or 10 (decimal). Exactly which radix is chosen is implementation-dependent. ECMAScript 5 specifies that 10 (decimal) is used, but not all browsers support this yet. For this reason always specify a radix when using &lt;code&gt;parseInt&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;parseInt&lt;/code&gt; always convert input to string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;parseInt({ toString: () =&amp;gt; 2, valueOf: () =&amp;gt; 1 }); // -&amp;gt; 2
Number({ toString: () =&amp;gt; 2, valueOf: () =&amp;gt; 1 }); // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be careful while parsing floating point values&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;parseInt(0.000001); // -&amp;gt; 0
parseInt(0.0000001); // -&amp;gt; 1
parseInt(1 / 1999999); // -&amp;gt; 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;üí° Explanation:&lt;/strong&gt; &lt;code&gt;ParseInt&lt;/code&gt; takes a string argument and returns an integer of the specified radix. &lt;code&gt;ParseInt&lt;/code&gt; also strips anything after and including the first non-digit in the string parameter. &lt;code&gt;0.000001&lt;/code&gt; is converted to a string &lt;code&gt;"0.000001"&lt;/code&gt; and the &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;. When &lt;code&gt;0.0000001&lt;/code&gt; is converted to a string it is treated as &lt;code&gt;"1e-7"&lt;/code&gt; and hence &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt;. &lt;code&gt;1/1999999&lt;/code&gt; is interpreted as &lt;code&gt;5.00000250000125e-7&lt;/code&gt; and &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;5&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Math with &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Let's do some math:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;true + true; // -&amp;gt; 2
(true + true) * (true + true) - true; // -&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Hmmm‚Ä¶ ü§î&lt;/p&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;We can coerce values to numbers with the &lt;code&gt;Number&lt;/code&gt; constructor. It's quite obvious that &lt;code&gt;true&lt;/code&gt; will be coerced to &lt;code&gt;1&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Number(true); // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The unary plus operator attempts to convert its value into a number. It can convert string representations of integers and floats, as well as the non-string values &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, and &lt;code&gt;null&lt;/code&gt;. If it cannot parse a particular value, it will evaluate to &lt;code&gt;NaN&lt;/code&gt;. That means we can coerce &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; easier:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;+true; // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you're performing addition or multiplication, the &lt;code&gt;ToNumber&lt;/code&gt; method is invoked. According to the specification, this method returns:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If &lt;code&gt;argument&lt;/code&gt; is &lt;strong&gt;true&lt;/strong&gt;, return &lt;strong&gt;1&lt;/strong&gt;. If &lt;code&gt;argument&lt;/code&gt; is &lt;strong&gt;false&lt;/strong&gt;, return &lt;strong&gt;+0&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;That's why we can add boolean values as regular numbers and get correct results.&lt;/p&gt; 
&lt;p&gt;Corresponding sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-unary-plus-operator"&gt;&lt;strong&gt;12.5.6&lt;/strong&gt; Unary &lt;code&gt;+&lt;/code&gt; Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-addition-operator-plus"&gt;&lt;strong&gt;12.8.3&lt;/strong&gt; The Addition Operator (&lt;code&gt;+&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-tonumber"&gt;&lt;strong&gt;7.1.3&lt;/strong&gt; ToNumber(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;HTML comments are valid in JavaScript&lt;/h2&gt; 
&lt;p&gt;You will be impressed, but &lt;code&gt;&amp;lt;!--&lt;/code&gt; (which is known as HTML comment) is a valid comment in JavaScript.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// valid comment
&amp;lt;!-- valid comment too
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Impressed? HTML-like comments were intended to allow browsers that didn't understand the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag to degrade gracefully. These browsers, e.g. Netscape 1.x are no longer popular. So there is really no point in putting HTML comments in your script tags anymore.&lt;/p&gt; 
&lt;p&gt;Since Node.js is based on the V8 engine, HTML-like comments are supported by the Node.js runtime too. Moreover, they're a part of the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-html-like-comments"&gt;&lt;strong&gt;B.1.3&lt;/strong&gt; HTML-like Comments&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;NaN&lt;/code&gt; is &lt;del&gt;not&lt;/del&gt; a number&lt;/h2&gt; 
&lt;p&gt;Type of &lt;code&gt;NaN&lt;/code&gt; is a &lt;code&gt;'number'&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;typeof NaN; // -&amp;gt; 'number'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Explanations of how &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt; operators work:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-typeof-operator"&gt;&lt;strong&gt;12.5.5&lt;/strong&gt; The &lt;code&gt;typeof&lt;/code&gt; Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-instanceofoperator"&gt;&lt;strong&gt;12.10.4&lt;/strong&gt; Runtime Semantics: InstanceofOperator(&lt;code&gt;O&lt;/code&gt;,&lt;code&gt;C&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; are objects&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;typeof []; // -&amp;gt; 'object'
typeof null; // -&amp;gt; 'object'

// however
null instanceof Object; // false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;The behavior of &lt;code&gt;typeof&lt;/code&gt; operator is defined in this section of the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/12.0/#sec-typeof-operator"&gt;&lt;strong&gt;13.5.3&lt;/strong&gt; The &lt;code&gt;typeof&lt;/code&gt; Operator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;According to the specification, the &lt;code&gt;typeof&lt;/code&gt; operator returns a string according to &lt;a href="https://262.ecma-international.org/12.0/#table-typeof-operator-results"&gt;Table 37: &lt;code&gt;typeof&lt;/code&gt; Operator Results&lt;/a&gt;. For &lt;code&gt;null&lt;/code&gt;, ordinary, standard exotic and non-standard exotic objects, which do not implement &lt;code&gt;[[Call]]&lt;/code&gt;, it returns the string &lt;code&gt;"object"&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;However, you can check the type of an object by using the &lt;code&gt;toString&lt;/code&gt; method.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Object.prototype.toString.call([]);
// -&amp;gt; '[object Array]'

Object.prototype.toString.call(new Date());
// -&amp;gt; '[object Date]'

Object.prototype.toString.call(null);
// -&amp;gt; '[object Null]'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Magically increasing numbers&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;999999999999999; // -&amp;gt; 999999999999999
9999999999999999; // -&amp;gt; 10000000000000000

10000000000000000; // -&amp;gt; 10000000000000000
10000000000000000 + 1; // -&amp;gt; 10000000000000000
10000000000000000 + 1.1; // -&amp;gt; 10000000000000002
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;This is caused by IEEE 754-2008 standard for Binary Floating-Point Arithmetic. At this scale, it rounds to the nearest even number. Read more:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-ecmascript-language-types-number-type"&gt;&lt;strong&gt;6.1.6&lt;/strong&gt; The Number Type&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/IEEE_754"&gt;IEEE 754&lt;/a&gt; on Wikipedia&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Precision of &lt;code&gt;0.1 + 0.2&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;A well-known joke. An addition of &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;0.2&lt;/code&gt; is deadly precise:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;0.1 + 0.2; // -&amp;gt; 0.30000000000000004
0.1 + 0.2 === 0.3; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;The answer for the &lt;a href="https://stackoverflow.com/questions/588004/is-floating-point-math-broken"&gt;‚ÄùIs floating point math broken?‚Äù&lt;/a&gt; question on StackOverflow:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The constants &lt;code&gt;0.2&lt;/code&gt; and &lt;code&gt;0.3&lt;/code&gt; in your program will also be approximations to their true values. It happens that the closest &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;0.2&lt;/code&gt; is larger than the rational number &lt;code&gt;0.2&lt;/code&gt; but that the closest &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;0.3&lt;/code&gt; is smaller than the rational number &lt;code&gt;0.3&lt;/code&gt;. The sum of &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;0.2&lt;/code&gt; winds up being larger than the rational number &lt;code&gt;0.3&lt;/code&gt; and hence disagreeing with the constant in your code.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This problem is so known that there is even a website called &lt;a href="http://0.30000000000000004.com/"&gt;0.30000000000000004.com&lt;/a&gt;. It occurs in every language that uses floating-point math, not just JavaScript.&lt;/p&gt; 
&lt;h2&gt;Patching numbers&lt;/h2&gt; 
&lt;p&gt;You can add your own methods to wrapper objects like &lt;code&gt;Number&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Number.prototype.isOne = function() {
  return Number(this) === 1;
};

(1.0).isOne(); // -&amp;gt; true
(1).isOne(); // -&amp;gt; true
(2.0).isOne(); // -&amp;gt; false
(7).isOne(); // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Obviously, you can extend the &lt;code&gt;Number&lt;/code&gt; object like any other object in JavaScript. However, it's not recommended if the behavior of the defined method is not a part of the specification. Here is the list of &lt;code&gt;Number&lt;/code&gt;'s properties:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-number-objects"&gt;&lt;strong&gt;20.1&lt;/strong&gt; Number Objects&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Comparison of three numbers&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;1 &amp;lt; 2 &amp;lt; 3; // -&amp;gt; true
3 &amp;gt; 2 &amp;gt; 1; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Why does this work that way? Well, the problem is in the first part of an expression. Here's how it works:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;1 &amp;lt; 2 &amp;lt; 3; // 1 &amp;lt; 2 -&amp;gt; true
true &amp;lt; 3; // true -&amp;gt; 1
1 &amp;lt; 3; // -&amp;gt; true

3 &amp;gt; 2 &amp;gt; 1; // 3 &amp;gt; 2 -&amp;gt; true
true &amp;gt; 1; // true -&amp;gt; 1
1 &amp;gt; 1; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can fix this with &lt;em&gt;Greater than or equal operator (&lt;code&gt;&amp;gt;=&lt;/code&gt;)&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;3 &amp;gt; 2 &amp;gt;= 1; // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about Relational operators in the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-relational-operators"&gt;&lt;strong&gt;12.10&lt;/strong&gt; Relational Operators&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Funny math&lt;/h2&gt; 
&lt;p&gt;Often the results of arithmetic operations in JavaScript might be quite unexpected. Consider these examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt; 3  - 1  // -&amp;gt; 2
 3  + 1  // -&amp;gt; 4
'3' - 1  // -&amp;gt; 2
'3' + 1  // -&amp;gt; '31'

'' + '' // -&amp;gt; ''
[] + [] // -&amp;gt; ''
{} + [] // -&amp;gt; 0
[] + {} // -&amp;gt; '[object Object]'
{} + {} // -&amp;gt; '[object Object][object Object]'

'222' - -'111' // -&amp;gt; 333

[4] * [4]       // -&amp;gt; 16
[] * []         // -&amp;gt; 0
[4, 4] * [4, 4] // NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;What's happening in the first four examples? Here's a small table to understand addition in JavaScript:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Number  + Number  -&amp;gt; addition
Boolean + Number  -&amp;gt; addition
Boolean + Boolean -&amp;gt; addition
Number  + String  -&amp;gt; concatenation
String  + Boolean -&amp;gt; concatenation
String  + String  -&amp;gt; concatenation
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;What about other examples? A &lt;code&gt;ToPrimitive&lt;/code&gt; and &lt;code&gt;ToString&lt;/code&gt; methods are being implicitly called for &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;{}&lt;/code&gt; before addition. Read more about evaluation process in the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-addition-operator-plus"&gt;&lt;strong&gt;12.8.3&lt;/strong&gt; The Addition Operator (&lt;code&gt;+&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-toprimitive"&gt;&lt;strong&gt;7.1.1&lt;/strong&gt; ToPrimitive(&lt;code&gt;input&lt;/code&gt; [,&lt;code&gt;PreferredType&lt;/code&gt;])&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-tostring"&gt;&lt;strong&gt;7.1.12&lt;/strong&gt; ToString(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Notably, &lt;code&gt;{} + []&lt;/code&gt; here is the exception. The reason why it differs from &lt;code&gt;[] + {}&lt;/code&gt; is that, without parenthesis, it is interpreted as a code block and then a unary +, converting &lt;code&gt;[]&lt;/code&gt; into a number. It sees the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;{
  // a code block here
}
+[]; // -&amp;gt; 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get the same output as &lt;code&gt;[] + {}&lt;/code&gt; we can wrap it in parenthesis.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;({} + []); // -&amp;gt; [object Object]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Addition of RegExps&lt;/h2&gt; 
&lt;p&gt;Did you know you can add numbers like this?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Patch a toString method
RegExp.prototype.toString =
  function() {
    return this.source;
  } /
  7 /
  -/5/; // -&amp;gt; 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-get-regexp.prototype.source"&gt;&lt;strong&gt;21.2.5.10&lt;/strong&gt; get RegExp.prototype.source&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Strings aren't instances of &lt;code&gt;String&lt;/code&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;"str"; // -&amp;gt; 'str'
typeof "str"; // -&amp;gt; 'string'
"str" instanceof String; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;String&lt;/code&gt; constructor returns a string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;typeof String("str"); // -&amp;gt; 'string'
String("str"); // -&amp;gt; 'str'
String("str") == "str"; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Let's try with a &lt;code&gt;new&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;new String("str") == "str"; // -&amp;gt; true
typeof new String("str"); // -&amp;gt; 'object'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Object? What's that?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;new String("str"); // -&amp;gt; [String: 'str']
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More information about the String constructor in the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-string-constructor"&gt;&lt;strong&gt;21.1.1&lt;/strong&gt; The String Constructor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Calling functions with backticks&lt;/h2&gt; 
&lt;p&gt;Let's declare a function which logs all params into the console:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;function f(...args) {
  return args;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;No doubt, you know you can call this function like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;f(1, 2, 3); // -&amp;gt; [ 1, 2, 3 ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But did you know you can call any function with backticks?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;f`true is ${true}, false is ${false}, array is ${[1, 2, 3]}`;
// -&amp;gt; [ [ 'true is ', ', false is ', ', array is ', '' ],
// -&amp;gt;   true,
// -&amp;gt;   false,
// -&amp;gt;   [ 1, 2, 3 ] ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Well, this is not magic at all if you're familiar with &lt;em&gt;Tagged template literals&lt;/em&gt;. In the example above, &lt;code&gt;f&lt;/code&gt; function is a tag for template literal. Tags before template literal allow you to parse template literals with a function. The first argument of a tag function contains an array of string values. The remaining arguments are related to the expressions. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;function template(strings, ...keys) {
  // do something with strings and keys‚Ä¶
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is the &lt;a href="http://mxstbr.blog/2016/11/styled-components-magic-explained/"&gt;magic behind&lt;/a&gt; famous library called &lt;a href="https://www.styled-components.com/"&gt;üíÖ styled-components&lt;/a&gt;, which is popular in the React community.&lt;/p&gt; 
&lt;p&gt;Link to the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-tagged-templates"&gt;&lt;strong&gt;12.3.7&lt;/strong&gt; Tagged Templates&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Call call call&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Found by &lt;a href="http://twitter.com/cramforce"&gt;@cramforce&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;console.log.call.call.call.call.call.apply(a =&amp;gt; a, [1, 2]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Attention, it could break your mind! Try to reproduce this code in your head: we're applying the &lt;code&gt;call&lt;/code&gt; method using the &lt;code&gt;apply&lt;/code&gt; method. Read more:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-function.prototype.call"&gt;&lt;strong&gt;19.2.3.3&lt;/strong&gt; Function.prototype.call(&lt;code&gt;thisArg&lt;/code&gt;, ...&lt;code&gt;args&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-function.prototype.apply"&gt;**19.2.3.1 ** Function.prototype.apply(&lt;code&gt;thisArg&lt;/code&gt;, &lt;code&gt;argArray&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A &lt;code&gt;constructor&lt;/code&gt; property&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const c = "constructor";
c[c][c]('console.log("WTF?")')(); // &amp;gt; WTF?
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Let's consider this example step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Declare a new constant which is a string 'constructor'
const c = "constructor";

// c is a string
c; // -&amp;gt; 'constructor'

// Getting a constructor of string
c[c]; // -&amp;gt; [Function: String]

// Getting a constructor of constructor
c[c][c]; // -&amp;gt; [Function: Function]

// Call the Function constructor and pass
// the body of new function as an argument
c[c][c]('console.log("WTF?")'); // -&amp;gt; [Function: anonymous]

// And then call this anonymous function
// The result is console-logging a string 'WTF?'
c[c][c]('console.log("WTF?")')(); // &amp;gt; WTF?
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;An &lt;code&gt;Object.prototype.constructor&lt;/code&gt; returns a reference to the &lt;code&gt;Object&lt;/code&gt; constructor function that created the instance object. In case with strings it is &lt;code&gt;String&lt;/code&gt;, in case with numbers it is &lt;code&gt;Number&lt;/code&gt; and so on.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor"&gt;&lt;code&gt;Object.prototype.constructor&lt;/code&gt;&lt;/a&gt; at MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-object.prototype.constructor"&gt;&lt;strong&gt;19.1.3.1&lt;/strong&gt; Object.prototype.constructor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Object as a key of object's property&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;{ [{}]: {} } // -&amp;gt; { '[object Object]': {} }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Why does this work so? Here we're using a &lt;em&gt;Computed property name&lt;/em&gt;. When you pass an object between those brackets, it coerces object to a string, so we get the property key &lt;code&gt;'[object Object]'&lt;/code&gt; and the value &lt;code&gt;{}&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;We can make "brackets hell" like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;({ [{}]: { [{}]: {} } }[{}][{}]); // -&amp;gt; {}

// structure:
// {
//   '[object Object]': {
//     '[object Object]': {}
//   }
// }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about object literals here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer"&gt;Object initializer&lt;/a&gt; at MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.ecma-international.org/ecma-262/6.0/#sec-object-initializer"&gt;&lt;strong&gt;12.2.6&lt;/strong&gt; Object Initializer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Accessing prototypes with &lt;code&gt;__proto__&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;As we know, primitives don't have prototypes. However, if we try to get a value of &lt;code&gt;__proto__&lt;/code&gt; for primitives, we would get this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(1).__proto__.__proto__.__proto__; // -&amp;gt; null
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;This happens because when something doesn't have a prototype, it will be wrapped into a wrapper object using the &lt;code&gt;ToObject&lt;/code&gt; method. So, step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(1).__proto__; // -&amp;gt; [Number: 0]
(1).__proto__.__proto__; // -&amp;gt; {}
(1).__proto__.__proto__.__proto__; // -&amp;gt; null
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here is more information about &lt;code&gt;__proto__&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-object.prototype.__proto__"&gt;&lt;strong&gt;B.2.2.1&lt;/strong&gt; Object.prototype.&lt;strong&gt;proto&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-toobject"&gt;&lt;strong&gt;7.1.13&lt;/strong&gt; ToObject(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;`${{Object}}`&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;What is the result of the expression below?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;`${{ Object }}`;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The answer is:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// -&amp;gt; '[object Object]'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;We defined an object with a property &lt;code&gt;Object&lt;/code&gt; using &lt;em&gt;Shorthand property notation&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;{
  Object: Object;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then we've passed this object to the template literal, so the &lt;code&gt;toString&lt;/code&gt; method calls for that object. That's why we get the string &lt;code&gt;'[object Object]'&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-template-literals"&gt;&lt;strong&gt;12.2.9&lt;/strong&gt; Template Literals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer"&gt;Object initializer&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Destructuring with default values&lt;/h2&gt; 
&lt;p&gt;Consider this example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let x,
  { x: y = 1 } = { x };
y;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The example above is a great task for an interview. What the value of &lt;code&gt;y&lt;/code&gt;? The answer is:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let x,
  { x: y = 1 } = { x };
y;
//  ‚Üë       ‚Üë           ‚Üë    ‚Üë
//  1       3           2    4
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the example above:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;We declare &lt;code&gt;x&lt;/code&gt; with no value, so it's &lt;code&gt;undefined&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Then we pack the value of &lt;code&gt;x&lt;/code&gt; into the object property &lt;code&gt;x&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Then we extract the value of &lt;code&gt;x&lt;/code&gt; using destructuring and want to assign it to &lt;code&gt;y&lt;/code&gt;. If the value is not defined, then we're going to use &lt;code&gt;1&lt;/code&gt; as the default value.&lt;/li&gt; 
 &lt;li&gt;Return the value of &lt;code&gt;y&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer"&gt;Object initializer&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Dots and spreading&lt;/h2&gt; 
&lt;p&gt;Interesting examples could be composed with spreading of arrays. Consider this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[...[..."..."]].length; // -&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Why &lt;code&gt;3&lt;/code&gt;? When we use the &lt;a href="http://www.ecma-international.org/ecma-262/6.0/#sec-array-initializer"&gt;spread operator&lt;/a&gt;, the &lt;code&gt;@@iterator&lt;/code&gt; method is called, and the returned iterator is used to obtain the values to be iterated. The default iterator for string spreads a string into characters. After spreading, we pack these characters into an array. Then we spread this array again and pack it back to an array.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;'...'&lt;/code&gt; string consists with three &lt;code&gt;.&lt;/code&gt; characters, so the length of resulting array is &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Now, step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[...'...']             // -&amp;gt; [ '.', '.', '.' ]
[...[...'...']]        // -&amp;gt; [ '.', '.', '.' ]
[...[...'...']].length // -&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Obviously, we can spread and wrap the elements of an array as many times as we want:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[...'...']                 // -&amp;gt; [ '.', '.', '.' ]
[...[...'...']]            // -&amp;gt; [ '.', '.', '.' ]
[...[...[...'...']]]       // -&amp;gt; [ '.', '.', '.' ]
[...[...[...[...'...']]]]  // -&amp;gt; [ '.', '.', '.' ]
// and so on ‚Ä¶
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Labels&lt;/h2&gt; 
&lt;p&gt;Not many programmers know about labels in JavaScript. They are kind of interesting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;foo: {
  console.log("first");
  break foo;
  console.log("second");
}

// &amp;gt; first
// -&amp;gt; undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;The labeled statement is used with &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; statements. You can use a label to identify a loop, and then use the &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; statements to indicate whether a program should interrupt the loop or continue its execution.&lt;/p&gt; 
&lt;p&gt;In the example above, we identify a label &lt;code&gt;foo&lt;/code&gt;. After that &lt;code&gt;console.log('first');&lt;/code&gt; executes and then we interrupt the execution.&lt;/p&gt; 
&lt;p&gt;Read more about labels in JavaScript:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://tc39.github.io/ecma262/#sec-labelled-statements"&gt;&lt;strong&gt;13.13&lt;/strong&gt; Labelled Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label"&gt;Labeled statements&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Nested labels&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;a: b: c: d: e: f: g: 1, 2, 3, 4, 5; // -&amp;gt; 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Similar to previous examples, follow these links:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-comma-operator"&gt;&lt;strong&gt;12.16&lt;/strong&gt; Comma Operator (&lt;code&gt;,&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tc39.github.io/ecma262/#sec-labelled-statements"&gt;&lt;strong&gt;13.13&lt;/strong&gt; Labelled Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label"&gt;Labeled statements&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Insidious &lt;code&gt;try..catch&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;What will this expression return? &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;3&lt;/code&gt;?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(() =&amp;gt; {
  try {
    return 2;
  } finally {
    return 3;
  }
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The answer is &lt;code&gt;3&lt;/code&gt;. Surprised?&lt;/p&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-try-statement"&gt;&lt;strong&gt;13.15&lt;/strong&gt; The &lt;code&gt;try&lt;/code&gt; Statement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Is this multiple inheritance?&lt;/h2&gt; 
&lt;p&gt;Take a look at the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;new class F extends (String, Array) {}(); // -&amp;gt; F []
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Is this a multiple inheritance? Nope.&lt;/p&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;The interesting part is the value of the &lt;code&gt;extends&lt;/code&gt; clause (&lt;code&gt;(String, Array)&lt;/code&gt;). The grouping operator always returns its last argument, so &lt;code&gt;(String, Array)&lt;/code&gt; is actually just &lt;code&gt;Array&lt;/code&gt;. That means we've just created a class which extends &lt;code&gt;Array&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-class-definitions"&gt;&lt;strong&gt;14.5&lt;/strong&gt; Class Definitions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-comma-operator"&gt;&lt;strong&gt;12.16&lt;/strong&gt; Comma Operator (&lt;code&gt;,&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A generator which yields itself&lt;/h2&gt; 
&lt;p&gt;Consider this example of a generator which yields itself:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(function* f() {
  yield f;
})().next();
// -&amp;gt; { value: [GeneratorFunction: f], done: false }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see, the returned value is an object with its &lt;code&gt;value&lt;/code&gt; equal to &lt;code&gt;f&lt;/code&gt;. In that case, we can do something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(function* f() {
  yield f;
})()
  .next()
  .value()
  .next()(
    // -&amp;gt; { value: [GeneratorFunction: f], done: false }

    // and again
    function* f() {
      yield f;
    }
  )()
  .next()
  .value()
  .next()
  .value()
  .next()(
    // -&amp;gt; { value: [GeneratorFunction: f], done: false }

    // and again
    function* f() {
      yield f;
    }
  )()
  .next()
  .value()
  .next()
  .value()
  .next()
  .value()
  .next();
// -&amp;gt; { value: [GeneratorFunction: f], done: false }

// and so on
// ‚Ä¶
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;To understand why this works that way, read these sections of the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-control-abstraction-objects"&gt;&lt;strong&gt;25&lt;/strong&gt; Control Abstraction Objects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-generator-objects"&gt;&lt;strong&gt;25.3&lt;/strong&gt; Generator Objects&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A class of class&lt;/h2&gt; 
&lt;p&gt;Consider this obfuscated syntax playing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;typeof new class {
  class() {}
}(); // -&amp;gt; 'object'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It seems like we're declaring a class inside of class. Should be an error, however, we get the string &lt;code&gt;'object'&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Since ECMAScript 5 era, &lt;em&gt;keywords&lt;/em&gt; are allowed as &lt;em&gt;property names&lt;/em&gt;. So think about it as this simple object example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const foo = {
  class: function() {}
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And ES6 standardized shorthand method definitions. Also, classes can be anonymous. So if we drop &lt;code&gt;: function&lt;/code&gt; part, we're going to get:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class {
  class() {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The result of a default class is always a simple object. And its typeof should return &lt;code&gt;'object'&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Read more here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-method-definitions"&gt;&lt;strong&gt;14.3&lt;/strong&gt; Method Definitions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-class-definitions"&gt;&lt;strong&gt;14.5&lt;/strong&gt; Class Definitions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Non-coercible objects&lt;/h2&gt; 
&lt;p&gt;With well-known symbols, there's a way to get rid of type coercion. Take a look:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;function nonCoercible(val) {
  if (val == null) {
    throw TypeError("nonCoercible should not be called with null or undefined");
  }

  const res = Object(val);

  res[Symbol.toPrimitive] = () =&amp;gt; {
    throw TypeError("Trying to coerce non-coercible object");
  };

  return res;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now we can use this like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// objects
const foo = nonCoercible({ foo: "foo" });

foo * 10; // -&amp;gt; TypeError: Trying to coerce non-coercible object
foo + "evil"; // -&amp;gt; TypeError: Trying to coerce non-coercible object

// strings
const bar = nonCoercible("bar");

bar + "1"; // -&amp;gt; TypeError: Trying to coerce non-coercible object
bar.toString() + 1; // -&amp;gt; bar1
bar === "bar"; // -&amp;gt; false
bar.toString() === "bar"; // -&amp;gt; true
bar == "bar"; // -&amp;gt; TypeError: Trying to coerce non-coercible object

// numbers
const baz = nonCoercible(1);

baz == 1; // -&amp;gt; TypeError: Trying to coerce non-coercible object
baz === 1; // -&amp;gt; false
baz.valueOf() === 1; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/chicoxyzzy/5dd24608e886adf5444499896dff1197"&gt;A gist by Sergey Rubanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-well-known-symbols"&gt;&lt;strong&gt;6.1.5.1&lt;/strong&gt; Well-Known Symbols&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tricky arrow functions&lt;/h2&gt; 
&lt;p&gt;Consider the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = () =&amp;gt; 10;
f(); // -&amp;gt; 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Okay, fine, but what about this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = () =&amp;gt; {};
f(); // -&amp;gt; undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;You might expect &lt;code&gt;{}&lt;/code&gt; instead of &lt;code&gt;undefined&lt;/code&gt;. This is because the curly braces are part of the syntax of the arrow functions, so &lt;code&gt;f&lt;/code&gt; will return undefined. It is however possible to return the &lt;code&gt;{}&lt;/code&gt; object directly from an arrow function, by enclosing the return value with brackets.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = () =&amp;gt; ({});
f(); // -&amp;gt; {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Arrow functions can not be a constructor&lt;/h2&gt; 
&lt;p&gt;Consider the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = function() {
  this.a = 1;
};
new f(); // -&amp;gt; f { 'a': 1 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, try do to the same with an arrow function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = () =&amp;gt; {
  this.a = 1;
};
new f(); // -&amp;gt; TypeError: f is not a constructor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Arrow functions cannot be used as constructors and will throw an error when used with &lt;code&gt;new&lt;/code&gt;. Because they have a lexical &lt;code&gt;this&lt;/code&gt;, and do not have a &lt;code&gt;prototype&lt;/code&gt; property, so it would not make much sense.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;arguments&lt;/code&gt; and arrow functions&lt;/h2&gt; 
&lt;p&gt;Consider the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = function() {
  return arguments;
};
f("a"); // -&amp;gt; { '0': 'a' }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, try do to the same with an arrow function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = () =&amp;gt; arguments;
f("a"); // -&amp;gt; Uncaught ReferenceError: arguments is not defined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Arrow functions are a lightweight version of regular functions with a focus on being short and lexical &lt;code&gt;this&lt;/code&gt;. At the same time arrow functions do not provide a binding for the &lt;code&gt;arguments&lt;/code&gt; object. As a valid alternative use the &lt;code&gt;rest parameters&lt;/code&gt; to achieve the same result:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = (...args) =&amp;gt; args;
f("a");
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions"&gt;Arrow functions&lt;/a&gt; at MDN.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tricky return&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;return&lt;/code&gt; statement is also tricky. Consider this:&lt;/p&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(function() {
  return
  {
    b: 10;
  }
})(); // -&amp;gt; undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;return&lt;/code&gt; and the returned expression must be in the same line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(function() {
  return {
    b: 10
  };
})(); // -&amp;gt; { b: 10 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is because of a concept called Automatic Semicolon Insertion, which automagically inserts semicolons after most newlines. In the first example, there is a semicolon inserted between the &lt;code&gt;return&lt;/code&gt; statement and the object literal, so the function returns &lt;code&gt;undefined&lt;/code&gt; and the object literal is never evaluated.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-rules-of-automatic-semicolon-insertion"&gt;&lt;strong&gt;11.9.1&lt;/strong&gt; Rules of Automatic Semicolon Insertion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-return-statement"&gt;&lt;strong&gt;13.10&lt;/strong&gt; The &lt;code&gt;return&lt;/code&gt; Statement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Chaining assignments on object&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;var foo = { n: 1 };
var bar = foo;

foo.x = foo = { n: 2 };

foo.x; // -&amp;gt; undefined
foo; // -&amp;gt; {n: 2}
bar; // -&amp;gt; {n: 1, x: {n: 2}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;From right to left, &lt;code&gt;{n: 2}&lt;/code&gt; is assigned to foo, and the result of this assignment &lt;code&gt;{n: 2}&lt;/code&gt; is assigned to foo.x, that's why bar is &lt;code&gt;{n: 1, x: {n: 2}}&lt;/code&gt; as bar is a reference to foo. But why foo.x is undefined while bar.x is not ?&lt;/p&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Foo and bar references the same object &lt;code&gt;{n: 1}&lt;/code&gt;, and lvalues are resolved before assignations. &lt;code&gt;foo = {n: 2}&lt;/code&gt; is creating a new object, and so foo is updated to reference that new object. The trick here is foo in &lt;code&gt;foo.x = ...&lt;/code&gt; as a lvalue was resolved beforehand and still reference the old &lt;code&gt;foo = {n: 1}&lt;/code&gt; object and update it by adding the x value. After that chain assignments, bar still reference the old foo object, but foo reference the new &lt;code&gt;{n: 2}&lt;/code&gt; object, where x is not existing.&lt;/p&gt; 
&lt;p&gt;It's equivalent to:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;var foo = { n: 1 };
var bar = foo;

foo = { n: 2 }; // -&amp;gt; {n: 2}
bar.x = foo; // -&amp;gt; {n: 1, x: {n: 2}}
// bar.x point to the address of the new foo object
// it's not equivalent to: bar.x = {n: 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Accessing object properties with arrays&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;var obj = { property: 1 };
var array = ["property"];

obj[array]; // -&amp;gt; 1

// this also works with nested arrays
var nestedArray = [[[[[[[[[["property"]]]]]]]]]];
obj[nestedArray]; // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;What about pseudo-multidimensional arrays?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;var map = {};
var x = 1;
var y = 2;
var z = 3;

map[[x, y, z]] = true;
map[[x + 10, y, z]] = true;

map["1,2,3"]; // -&amp;gt; true
map["11,2,3"]; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;The brackets &lt;code&gt;[]&lt;/code&gt; operator converts the passed expression using &lt;code&gt;toString&lt;/code&gt;. Converting a one-element array to a string is akin to converting the contained element to the string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;["property"].toString(); // -&amp;gt; 'property'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;code&gt;Number.toFixed()&lt;/code&gt; display different numbers&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Number.toFixed()&lt;/code&gt; can behave a bit strange in different browsers. Check out this example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(0.7875).toFixed(3);
// Firefox: -&amp;gt; 0.787
// Chrome: -&amp;gt; 0.787
// IE11: -&amp;gt; 0.788
(0.7876).toFixed(3);
// Firefox: -&amp;gt; 0.788
// Chrome: -&amp;gt; 0.788
// IE11: -&amp;gt; 0.788
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;While your first instinct may be that IE11 is correct and Firefox/Chrome are wrong, the reality is that Firefox/Chrome are more directly obeying standards for numbers (IEEE-754 Floating Point), while IE11 is minutely disobeying them in (what is probably) an effort to give clearer results.&lt;/p&gt; 
&lt;p&gt;You can see why this occurs with a few quick tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Confirm the odd result of rounding a 5 down
(0.7875).toFixed(3); // -&amp;gt; 0.787
// It looks like it's just a 5 when you expand to the
// limits of 64-bit (double-precision) float accuracy
(0.7875).toFixed(14); // -&amp;gt; 0.78750000000000
// But what if you go beyond the limit?
(0.7875).toFixed(20); // -&amp;gt; 0.78749999999999997780
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Floating point numbers are not stored as a list of decimal digits internally, but through a more complicated methodology that produces tiny inaccuracies that are usually rounded away by toString and similar calls, but are actually present internally.&lt;/p&gt; 
&lt;p&gt;In this case, that "5" on the end was actually an extremely tiny fraction below a true 5. Rounding it at any reasonable length will render it as a 5... but it is actually not a 5 internally.&lt;/p&gt; 
&lt;p&gt;IE11, however, will report the value input with only zeros appended to the end even in the toFixed(20) case, as it seems to be forcibly rounding the value to reduce the troubles from hardware limits.&lt;/p&gt; 
&lt;p&gt;See for reference &lt;code&gt;NOTE 2&lt;/code&gt; on the ECMA-262 definition for &lt;code&gt;toFixed&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262//#sec-number.prototype.tofixed"&gt;&lt;strong&gt;20.1.3.3&lt;/strong&gt; Number.prototype.toFixed (&lt;code&gt;fractionDigits&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;Math.max()&lt;/code&gt; less than &lt;code&gt;Math.min()&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;I find this example hilarious:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Math.min() &amp;gt; Math.max(); // -&amp;gt; true
Math.min() &amp;lt; Math.max(); // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;This is a simple one. Let's consider each part of this expression separately:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Math.min(); // -&amp;gt; Infinity
Math.max(); // -&amp;gt; -Infinity
Infinity &amp;gt; -Infinity; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Why so? Well, &lt;code&gt;Math.max()&lt;/code&gt; is not the same thing as &lt;code&gt;Number.MAX_VALUE&lt;/code&gt;. It does not return the largest possible number.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Math.max&lt;/code&gt; takes arguments, tries to convert the to numbers, compares each one and then returns the largest remaining. If no arguments are given, the result is ‚àí‚àû. If any value is &lt;code&gt;NaN&lt;/code&gt;, the result is &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The opposite is happening for &lt;code&gt;Math.min&lt;/code&gt;. &lt;code&gt;Math.min&lt;/code&gt; returns ‚àû, if no arguments are given.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/5.1/#sec-15.8.2.11"&gt;&lt;strong&gt;15.8.2.11&lt;/strong&gt; Math.max&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/5.1/#sec-15.8.2.12"&gt;&lt;strong&gt;15.8.2.11&lt;/strong&gt; Math.min&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://charlieharvey.org.uk/page/why_math_max_is_less_than_math_min"&gt;Why is &lt;code&gt;Math.max()&lt;/code&gt; less than &lt;code&gt;Math.min()&lt;/code&gt;?&lt;/a&gt; by Charlie Harvey&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Comparing &lt;code&gt;null&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;The following expressions seem to introduce a contradiction:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;null == 0; // -&amp;gt; false
null &amp;gt; 0; // -&amp;gt; false
null &amp;gt;= 0; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;How can &lt;code&gt;null&lt;/code&gt; be neither equal to nor greater than &lt;code&gt;0&lt;/code&gt;, if &lt;code&gt;null &amp;gt;= 0&lt;/code&gt; is actually &lt;code&gt;true&lt;/code&gt;? (This also works with less than in the same way.)&lt;/p&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;The way these three expressions are evaluated are all different and are responsible for producing this unexpected behavior.&lt;/p&gt; 
&lt;p&gt;First, the abstract equality comparison &lt;code&gt;null == 0&lt;/code&gt;. Normally, if this operator can't compare the values on either side properly, it converts both to numbers and compares the numbers. Then, you might expect the following behavior:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// This is not what happens
(null == 0 + null) == +0;
0 == 0;
true;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, according to a close reading of the spec, the number conversion doesn't actually happen on a side that is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;. Therefore, if you have &lt;code&gt;null&lt;/code&gt; on one side of the equal sign, the other side must be &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; for the expression to return &lt;code&gt;true&lt;/code&gt;. Since this is not the case, &lt;code&gt;false&lt;/code&gt; is returned.&lt;/p&gt; 
&lt;p&gt;Next, the relational comparison &lt;code&gt;null &amp;gt; 0&lt;/code&gt;. The algorithm here, unlike that of the abstract equality operator, &lt;em&gt;will&lt;/em&gt; convert &lt;code&gt;null&lt;/code&gt; to a number. Therefore, we get this behavior:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;null &amp;gt; 0
+null = +0
0 &amp;gt; 0
false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, the relational comparison &lt;code&gt;null &amp;gt;= 0&lt;/code&gt;. You could argue that this expression should be the result of &lt;code&gt;null &amp;gt; 0 || null == 0&lt;/code&gt;; if this were the case, then the above results would mean that this would also be &lt;code&gt;false&lt;/code&gt;. However, the &lt;code&gt;&amp;gt;=&lt;/code&gt; operator in fact works in a very different way, which is basically to take the opposite of the &lt;code&gt;&amp;lt;&lt;/code&gt; operator. Because our example with the greater than operator above also holds for the less than operator, that means this expression is actually evaluated like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;null &amp;gt;= 0;
!(null &amp;lt; 0);
!(+null &amp;lt; +0);
!(0 &amp;lt; 0);
!false;
true;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-abstract-relational-comparison"&gt;&lt;strong&gt;7.2.12&lt;/strong&gt; Abstract Relational Comparison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.campvanilla.com/javascript-the-curious-case-of-null-0-7b131644e274"&gt;An in-depth explanation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Same variable redeclaration&lt;/h2&gt; 
&lt;p&gt;JS allows to redeclare variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;a;
a;
// This is also valid
a, a;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Works also in strict mode:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;var a, a, a;
var a;
var a;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;All definitions are merged into one definition.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-variable-statement"&gt;&lt;strong&gt;13.3.2&lt;/strong&gt; Variable Statement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Default behavior Array.prototype.sort()&lt;/h2&gt; 
&lt;p&gt;Imagine that you need to sort an array of numbers.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[10, 1, 3].sort(); // -&amp;gt; [ 1, 10, 3 ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;The default sort order is built upon converting the elements into strings, then comparing their sequences of UTF-16 code units values.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-array.prototype.sort"&gt;&lt;strong&gt;22.1.3.25&lt;/strong&gt; Array.prototype.sort ( comparefn )&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hint&lt;/h3&gt; 
&lt;p&gt;Pass &lt;code&gt;compareFn&lt;/code&gt; if you try to sort anything but string.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[10, 1, 3].sort((a, b) =&amp;gt; a - b); // -&amp;gt; [ 1, 3, 10 ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;resolve() won't return Promise instance&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const theObject = {
  a: 7
};
const thePromise = new Promise((resolve, reject) =&amp;gt; {
  resolve(theObject);
}); // Promise instance object

thePromise.then(value =&amp;gt; {
  console.log(value === theObject); // &amp;gt; true
  console.log(value); // &amp;gt; { a: 7 }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;value&lt;/code&gt; which is resolved from &lt;code&gt;thePromise&lt;/code&gt; is exactly &lt;code&gt;theObject&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;How about input another &lt;code&gt;Promise&lt;/code&gt; into the &lt;code&gt;resolve&lt;/code&gt; function?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const theObject = new Promise((resolve, reject) =&amp;gt; {
  resolve(7);
}); // Promise instance object
const thePromise = new Promise((resolve, reject) =&amp;gt; {
  resolve(theObject);
}); // Promise instance object

thePromise.then(value =&amp;gt; {
  console.log(value === theObject); // &amp;gt; false
  console.log(value); // &amp;gt; 7
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This function flattens nested layers of promise-like objects (e.g. a promise that resolves to a promise that resolves to something) into a single layer.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve"&gt;Promise.resolve() on MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The specification is &lt;a href="https://tc39.es/ecma262/#sec-promise-resolve-functions"&gt;ECMAScript 25.6.1.3.2 Promise Resolve Functions&lt;/a&gt;. But it is not quite human-friendly.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;{}{}&lt;/code&gt; is undefined&lt;/h2&gt; 
&lt;p&gt;Write them in the console. They will return the value defined in the last object.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;{}{}; // -&amp;gt; undefined
{}{}{}; // -&amp;gt; undefined
{}{}{}{}; // -&amp;gt; undefined
{foo: 'bar'}{}; // -&amp;gt; 'bar'
{}{foo: 'bar'}; // -&amp;gt; 'bar'
{}{foo: 'bar'}{}; // -&amp;gt; 'bar'
{a: 'b'}{c:' d'}{}; // -&amp;gt; 'd'
{a: 'b', c: 'd'}{}; // &amp;gt; SyntaxError: Unexpected token ':'
({}{}); // &amp;gt; SyntaxError: Unexpected token '{'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;When inspecting each &lt;code&gt;{}&lt;/code&gt;, they returns undefined. If you inspect &lt;code&gt;{foo: 'bar'}{}&lt;/code&gt;, you will find &lt;code&gt;{foo: 'bar'}&lt;/code&gt; is &lt;code&gt;'bar'&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;There are two meanings for &lt;code&gt;{}&lt;/code&gt;: an object or a block. For example, the &lt;code&gt;{}&lt;/code&gt; in &lt;code&gt;() =&amp;gt; {}&lt;/code&gt; means block. So we need to use &lt;code&gt;() =&amp;gt; ({})&lt;/code&gt; to return an object.&lt;/p&gt; 
&lt;p&gt;Let's use &lt;code&gt;{foo: 'bar'}&lt;/code&gt; as a block. Write this snippet in your console:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;if (true) {
  foo: "bar";
} // -&amp;gt; 'bar'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Surprisingly, it behaviors the same! You can guess here that &lt;code&gt;{foo: 'bar'}{}&lt;/code&gt; is a block.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;arguments&lt;/code&gt; binding&lt;/h2&gt; 
&lt;p&gt;Consider this function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;function a(x) {
  arguments[0] = "hello";
  console.log(x);
}

a(); // &amp;gt; undefined
a(1); // &amp;gt; "hello"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;arguments&lt;/code&gt; is an Array-like object that contains the values of the arguments passed to that function. When no arguments are passed, then there's no &lt;code&gt;x&lt;/code&gt; to override.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments"&gt;The arguments object&lt;/a&gt; on MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;An &lt;code&gt;alert&lt;/code&gt; from hell&lt;/h2&gt; 
&lt;p&gt;This on is literally from hell:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[666]["\155\141\160"]["\143\157\156\163\164\162\165\143\164\157\162"](
  "\141\154\145\162\164(666)"
)(666); // alert(666)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;This one is based on octal escape sequences and multiple strings.&lt;/p&gt; 
&lt;p&gt;Any character with a character code lower than 256 (i.e. any character in the extended ASCII range) can be escaped using its octal-encoded character code, prefixed with &lt;code&gt;\&lt;/code&gt;. An example above is basically and &lt;code&gt;alert&lt;/code&gt; ecoded by octal escape sequances.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/aemkei/status/897172907222237185"&gt;Martin Kleppe tweet about it&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mathiasbynens.be/notes/javascript-escapes#octal"&gt;JavaScript character escape sequences&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://davidwalsh.name/multiline-javascript-strings"&gt;Multi-Line JavaScript Strings&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;An infinite timeout&lt;/h2&gt; 
&lt;p&gt;Guess what would happen if we set an infinite timeout?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;setTimeout(() =&amp;gt; console.log("called"), Infinity); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; 'called'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It will executed immediately instead of infinity delay.&lt;/p&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Usually, runtime stores the delay as a 32-bit signed integer internally. This causes an integer overflow, resulting in the timeout being executed immediately.&lt;/p&gt; 
&lt;p&gt;For example, in Node.js we will get this warning:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;(node:1731) TimeoutOverflowWarning: Infinity does not fit into a 32-bit signed integer.
Timeout duration was set to 1.
(Use `node --trace-warnings ...` to show where the warning was created)
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout"&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/a&gt; on MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/api/timers.html#timers_settimeout_callback_delay_args"&gt;Node.js Documentation on Timers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.w3.org/TR/2011/WD-html5-20110525/timers.html"&gt;Timers&lt;/a&gt; on W3C&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A &lt;code&gt;setTimeout&lt;/code&gt; object&lt;/h2&gt; 
&lt;p&gt;Guess what would happen if we set an callback that's not a function to &lt;code&gt;setTimeout&lt;/code&gt;?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;setTimeout(123, 100); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; 'called'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is fine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;setTimeout('{a: 1}', 100); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; 'called'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is also fine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;setTimeout({a: 1}, 100); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; 'Uncaught SyntaxError: Unexpected identifier               setTimeout (async) (anonymous) @ VM__:1'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This throws an &lt;strong&gt;SyntaxError&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Note that this can easily happen if your function returns an object and you call it here instead of passing it! What if the content - policy is set to &lt;code&gt;self&lt;/code&gt;?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;setTimeout(123, 100); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; console.error("[Report Only] Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of script in the following Content Security Policy directive: "script-src 'report-sample' 'self' ")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The console refuses to run it at all!&lt;/p&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/code&gt; can be called with &lt;code&gt;code&lt;/code&gt; as first argument, which will be passed on to &lt;code&gt;eval&lt;/code&gt;, which is bad. Eval will coerce her input to String, and evaluate what is produced, so Objects becomes &lt;code&gt;'[object Object]'&lt;/code&gt; which has hmmm ... an &lt;code&gt;'Unexpected identifier'&lt;/code&gt;!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval"&gt;eval()&lt;/a&gt; on MDN (don't use this)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout"&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/a&gt; on MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy"&gt;Content Security Policy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.w3.org/TR/2011/WD-html5-20110525/timers.html"&gt;Timers&lt;/a&gt; on W3C&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Double dot&lt;/h2&gt; 
&lt;p&gt;Let's try to coerce a number to a string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;27.toString() // &amp;gt; Uncaught SyntaxError: Invalid or unexpected token
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Maybe we should try with two dots?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;27..toString(); // -&amp;gt; '27'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But why doesn't first example work?&lt;/p&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;It's just a language grammar limitation.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;.&lt;/code&gt; character presents an ambiguity. It can be understood to be the member operator, or a decimal, depending on its placement.&lt;/p&gt; 
&lt;p&gt;The specification's interpretation of the &lt;code&gt;.&lt;/code&gt; character in that particular position is that it will be a decimal. This is defined by the numeric literal syntax of ECMAScript.&lt;/p&gt; 
&lt;p&gt;You must always use parenthesis or an addition dot to make such expression valid.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(27).toString(); // -&amp;gt; '27'
// or
27..toString(); // -&amp;gt; '27'
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/6853865/usage-of-tostring-in-javascript/6853910#6853910"&gt;Usage of toString in JavaScript&lt;/a&gt; on StackOverflow&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/13149282/why-does-10-tostring-work-but-10-tostring-does-not/13149301#13149301"&gt;Why does 10..toString() work, but 10.toString() does not?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Extra Newness&lt;/h2&gt; 
&lt;p&gt;I present this as an oddity for your amusement.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class Foo extends Function {
  constructor(val) {
    super();
    this.prototype.val = val;
  }
}

new new Foo(":D")().val; // -&amp;gt; ':D'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Constructors in JavaScript are just functions with some special treatment. By extending Function using the class syntax you create a class that, when instantiated, is now a function, which you can then additionally instantiate.&lt;/p&gt; 
&lt;p&gt;While not exhaustively tested, I believe the last statement can be analyzed thus:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;new new Foo(":D")().val(new newFooInstance()).val;
veryNewFooInstance.val;
// -&amp;gt; ':D'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As a tiny addendum, doing &lt;code&gt;new Function('return "bar";')&lt;/code&gt; of course creates a function with the body &lt;code&gt;return "bar";&lt;/code&gt;. Since &lt;code&gt;super()&lt;/code&gt; in the constructor of our &lt;code&gt;Foo&lt;/code&gt; class is calling &lt;code&gt;Function&lt;/code&gt;'s constructor, it should come as no surprise now to see that we can additionally manipulate things in there.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class Foo extends Function {
  constructor(val) {
    super(`
      this.val = arguments[0];
    `);
    this.prototype.val = val;
  }
}

var foo = new new Foo(":D")("D:");
foo.val; // -&amp;gt; 'D:'
delete foo.val; // remove the instance prop 'val', deferring back to the prototype's 'val'.
foo.val; // -&amp;gt; ':D'
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/denysdovhan/wtfjs/issues/78"&gt;Class Extends Function: Extra Newness&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why you should use semicolons&lt;/h2&gt; 
&lt;p&gt;Writing some standard JavaScript‚Ä¶ and then BOOM!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class SomeClass {
  ["array"] = []
  ["string"] = "str"
}

new SomeClass().array; // -&amp;gt; 'str'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;What the ‚Ä¶?&lt;/p&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Once again, this is all thanks to the Automatic Semicolon Insertion.&lt;/p&gt; 
&lt;p&gt;An example above is basically the same as:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class SomeClass {
  ["array"] = ([]["string"] = "str");
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You basically assign a string &lt;code&gt;str&lt;/code&gt; into an &lt;code&gt;array&lt;/code&gt; property.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/SeaRyanC/status/1148726605222535168"&gt;An original tweet with an example&lt;/a&gt; by Ryan Cavanaugh&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tc39/notes/raw/master/meetings/2017-09/sept-26.md"&gt;TC39 meeting when they debated about it&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Split a string by a space&lt;/h2&gt; 
&lt;p&gt;Have you ever tried to split a string by a space?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;"".split(""); // -&amp;gt; []
// but‚Ä¶
"".split(" "); // -&amp;gt; [""]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;This is expected behaviour. Its responsibility is to divide the input string every time a separator occurs in that input string. When you pass in an empty string it'll never find a separator and thus return that string.&lt;/p&gt; 
&lt;p&gt;Let's quote the specification:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The substrings are determined by searching from left to right for occurrences of &lt;code&gt;separator&lt;/code&gt;; these occurrences are not part of any String in the returned array, but serve to divide up the String value.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://tc39.es/ecma262/#sec-string.prototype.split"&gt;&lt;strong&gt;22.1.3.21&lt;/strong&gt; String.prototype.split&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/SeaRyanC/status/1331656278104440833"&gt;An original tween with an example&lt;/a&gt; by Ryan Cavanaugh&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/kl13nt/status/1331742810932916227?s=20"&gt;A tween with an explanation&lt;/a&gt; by Nabil Tharwat&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A stringified string&lt;/h2&gt; 
&lt;p&gt;This caused a bug that I've been solving for a few days:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;JSON.stringify("production") === "production"; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;Let's see what &lt;code&gt;JSON.stringify&lt;/code&gt; is returning:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;JSON.stringify("production"); // -&amp;gt; '"production"'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is actually a stringified string, so it's true:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;'"production"' === "production"; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.json.org/json-en.html"&gt;ECMA-404 The JSON Data Interchange Standard.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Non-strict comparison of a number to &lt;code&gt;true&lt;/code&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;1 == true; // -&amp;gt; true
// but‚Ä¶
Boolean(1.1); // -&amp;gt; true
1.1 == true; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí° Explanation:&lt;/h3&gt; 
&lt;p&gt;According to the specification:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The comparison x == y, where x and y are values, produces true or false. Such a comparison is performed as follows:&lt;/p&gt; 
 &lt;ol start="4"&gt; 
  &lt;li&gt;If &lt;code&gt;Type(x)&lt;/code&gt; is Number and &lt;code&gt;Type(y)&lt;/code&gt; is String, return the result of the comparison &lt;code&gt;x == ! ToNumber(y)&lt;/code&gt;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;So this comparison is performed like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;1 == true;
1 == Number(true);
1 == 1; // -&amp;gt; true
// but‚Ä¶
1.1 == true;
1.1 == Number(true);
1.1 == 1; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;üìö Other resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://wtfjs.com/"&gt;wtfjs.com&lt;/a&gt; ‚Äî a collection of those very special irregularities, inconsistencies and just plain painfully unintuitive moments for the language of the web.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.destroyallsoftware.com/talks/wat"&gt;Wat&lt;/a&gt; ‚Äî A lightning talk by Gary Bernhardt from CodeMash 2012&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2pL28CcEijU"&gt;What the... JavaScript?&lt;/a&gt; ‚Äî Kyle Simpsons talk for Forward 2 attempts to ‚Äúpull out the crazy‚Äù from JavaScript. He wants to help you produce cleaner, more elegant, more readable code, then inspire people to contribute to the open source community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://zero.milosz.ca/"&gt;Zeros in JavaScript&lt;/a&gt; ‚Äî a comparison table of &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;===&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in JavaScript.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;ü§ù Supporting&lt;/h1&gt; 
&lt;p&gt;Hi! I work on this project in my spare time, in addition to my primary job. I hope you enjoy reading it. If you do, please, consider supporting me üôè.&lt;/p&gt; 
&lt;p&gt;Every single donation is important. Your donation is gonna make a clear statement: My work is valued.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;üôè Thank you for your support! üôè&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Service&lt;/th&gt; 
   &lt;th align="center"&gt;Link&lt;/th&gt; 
   &lt;th align="center"&gt;Action&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Patreon&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://patreon.com/denysdovhan"&gt;Become a patron&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://patreon.com/denysdovhan"&gt;&lt;img src="https://c5.patreon.com/external/logo/become_a_patron_button@2x.png" width="120px"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;BuyMeACoffee&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://patreon.com/denysdovhan"&gt;Buy me a cup of ‚òïÔ∏è or ü•§&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://buymeacoffee.com/denysdovhan"&gt;&lt;img src="https://cdn.buymeacoffee.com/buttons/default-black.png" width="120px"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Bitcoin&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;code&gt;1EJsKs6rPsqa7QLoVLpe3wgcdL9Q8WmDxE&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://user-images.githubusercontent.com/3459374/107130426-0ae4f800-68d6-11eb-9b86-15bf33467615.png" width="120px"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Ethereum&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;code&gt;0x6aF39C917359897ae6969Ad682C14110afe1a0a1&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://user-images.githubusercontent.com/3459374/107130370-55b24000-68d5-11eb-93f5-075355c7fcd4.png" width="120px"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;‚ö†Ô∏è Note:&lt;/strong&gt; I live in Ukraine and services like PayPal and Stripe don't work with Ukrainian bank accounts. This means there's no way for me to set up GitHub Sponsors, OpenCollective, or services relied on them. Sorry, those are the only ways you can support me for now.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;üéì License&lt;/h1&gt; 
&lt;p&gt;&lt;a href="http://www.wtfpl.net"&gt;&lt;img src="https://img.shields.io/badge/License-WTFPL%202.0-lightgrey.svg?style=flat-square" alt="CC 4.0"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;¬© &lt;a href="http://denysdovhan.com"&gt;Denys Dovhan&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>juliangarnier/anime</title>
      <link>https://github.com/juliangarnier/anime</link>
      <description>&lt;p&gt;JavaScript animation engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Anime.js&lt;/h1&gt; 
&lt;p align="center"&gt; 
 &lt;picture align="center"&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/images/animejs-v4-logo-animation-dark.gif"&gt; 
  &lt;img align="center" alt="Anime.js V4 logo animation" src="https://raw.githubusercontent.com/juliangarnier/anime/master/assets/images/animejs-v4-logo-animation.gif" width="560"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;strong&gt; &lt;em&gt;Anime.js&lt;/em&gt; is a fast, multipurpose and lightweight JavaScript animation library with a simple, yet powerful API.&lt;br&gt; It works with CSS properties, SVG, DOM attributes and JavaScript Objects. &lt;/strong&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img alt="NPM Downloads" src="https://img.shields.io/npm/dm/animejs?style=flat-square&amp;amp;logo=npm"&gt; &lt;img alt="jsDelivr hits (npm)" src="https://img.shields.io/jsdelivr/npm/hm/animejs?style=flat-square&amp;amp;logo=jsdeliver"&gt; &lt;img alt="GitHub Sponsors" src="https://img.shields.io/github/sponsors/juliangarnier?style=flat-square&amp;amp;logo=github"&gt; &lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Anime.js is 100% free and is only made possible with the help of our sponsors. Help the project become sustainable by sponsoring us on &lt;a target="_blank" href="https://github.com/sponsors/juliangarnier"&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Platinum sponsors&lt;/h3&gt; 
&lt;p&gt; &lt;a target="_blank" href="https://ice.io/?ref=animejs"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/sponsors/ice-open-network-logomark.png"&gt; 
   &lt;img align="center" src="https://raw.githubusercontent.com/juliangarnier/anime/master/assets/sponsors/ice-open-network-logomark-dark.png" width="250"&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3&gt;Silver sponsors&lt;/h3&gt; 
&lt;p&gt; &lt;a target="_blank" href="https://www.lambdatest.com?utm_source=animeJS&amp;amp;utm_medium=organic&amp;amp;utm_campaign=july_08&amp;amp;utm_term=sk&amp;amp;utm_content=opensource"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/sponsors/lambdatest-logomark.png"&gt; 
   &lt;img align="center" src="https://raw.githubusercontent.com/juliangarnier/anime/master/assets/sponsors/lambdatest-logomark-dark.png" width="150"&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a target="_blank" href="https://inspatialapp.com/?ref=animejs"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/sponsors/inspatial-logomark.png"&gt; 
   &lt;img align="center" src="https://raw.githubusercontent.com/juliangarnier/anime/master/assets/sponsors/inspatial-logomark-dark.png" width="150"&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Anime.js V4 works by importing ES modules like so:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import {
  animate,
  stagger,
} from 'animejs';

animate('.square', {
  x: 320,
  rotate: { from: -180 },
  duration: 1250,
  delay: stagger(65, { from: 'center' }),
  ease: 'inOutQuint',
  loop: true,
  alternate: true
});
&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img align="center" alt="Anime.js code example" src="https://raw.githubusercontent.com/juliangarnier/anime/master/assets/images/usage-example-result.gif"&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;V4 Documentation&lt;/h2&gt; 
&lt;p&gt;The full documentation is available &lt;a href="https://animejs.com/documentation"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;V3 Migration guide&lt;/h2&gt; 
&lt;p&gt;You can find the v3 to v4 migration guide &lt;a href="https://github.com/juliangarnier/anime/wiki/Migrating-from-v3-to-v4"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;NPM development scripts&lt;/h2&gt; 
&lt;p&gt;First, run &lt;code&gt;npm i&lt;/code&gt; to install all the necessary packages. Then, execute the following scripts with &lt;code&gt;npm run &amp;lt;script&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;script&lt;/th&gt; 
   &lt;th&gt;action&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Watch any changes in &lt;code&gt;src/&lt;/code&gt; and compiles the esm version to &lt;code&gt;lib/anime.esm.js&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;dev-types&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Same as &lt;code&gt;dev&lt;/code&gt;, but also run TypeScript and generate the &lt;code&gt;types/index.d.ts&lt;/code&gt; file&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;build&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Generate types definition and compiles ESM / UMD / IIFE versions to &lt;code&gt;lib/&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;test-browser&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Start a local server and start all browser related tests&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;test-node&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Start all Node related tests&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;open-examples&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Start a local server to browse the examples locally&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;¬© &lt;a href="http://juliangarnier.com"&gt;Julian Garnier&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/juliangarnier/anime/master/LICENSE.md"&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>playcanvas/engine</title>
      <link>https://github.com/playcanvas/engine</link>
      <description>&lt;p&gt;Powerful web graphics runtime built on WebGL, WebGPU, WebXR and glTF&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img width="200" src="https://s3-eu-west-1.amazonaws.com/static.playcanvas.com/platform/images/logo/playcanvas-logo-medium.png"&gt; 
 &lt;h1&gt;PlayCanvas WebGL Game Engine&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://api.playcanvas.com/engine/"&gt;API Reference&lt;/a&gt; | &lt;a href="https://developer.playcanvas.com"&gt;User Manual&lt;/a&gt; | &lt;a href="https://playcanvas.github.io"&gt;Examples&lt;/a&gt; | &lt;a href="https://forum.playcanvas.com"&gt;Forum&lt;/a&gt; | &lt;a href="https://blog.playcanvas.com"&gt;Blog&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;PlayCanvas is an open-source game engine. It uses HTML5 and WebGL to run games and other interactive 3D content in any mobile or desktop browser.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://www.npmjs.com/package/playcanvas"&gt;&lt;img src="https://img.shields.io/npm/v/playcanvas" alt="NPM version"&gt;&lt;/a&gt; &lt;a href="https://bundlephobia.com/result?p=playcanvas"&gt;&lt;img src="https://img.shields.io/bundlephobia/minzip/playcanvas" alt="Minzipped size"&gt;&lt;/a&gt; &lt;a href="https://isitmaintained.com/project/playcanvas/engine"&gt;&lt;img src="https://isitmaintained.com/badge/resolution/playcanvas/engine.svg?sanitize=true" alt="Average time to resolve an issue"&gt;&lt;/a&gt; &lt;a href="https://isitmaintained.com/project/playcanvas/engine"&gt;&lt;img src="https://isitmaintained.com/badge/open/playcanvas/engine.svg?sanitize=true" alt="Percentage of issues still open"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=playcanvas"&gt;&lt;img src="https://img.shields.io/twitter/follow/playcanvas.svg?style=social&amp;amp;label=Follow" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/playcanvas/engine/raw/dev/README.md"&gt;English&lt;/a&gt; &lt;a href="https://github.com/playcanvas/engine/raw/dev/README-zh.md"&gt;‰∏≠Êñá&lt;/a&gt; &lt;a href="https://github.com/playcanvas/engine/raw/dev/README-ja.md"&gt;Êó•Êú¨Ë™û&lt;/a&gt; &lt;a href="https://github.com/playcanvas/engine/raw/dev/README-kr.md"&gt;ÌïúÍ∏Ä&lt;/a&gt;&lt;/p&gt; 
 &lt;h2&gt;Project Showcase&lt;/h2&gt; 
 &lt;p&gt;&lt;a href="https://github.com/playcanvas/awesome-playcanvas"&gt;Many games and apps&lt;/a&gt; have been published using the PlayCanvas engine. Here is a small selection:&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://playcanv.as/p/MflWvdTW/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/14705/319531/O4J4VU-image-25.jpg" alt="Seemore"&gt;&lt;/a&gt; &lt;a href="https://playcanv.as/p/44MRmJRU/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/14928/440410/98554E-image-25.jpg" alt="After The Flood"&gt;&lt;/a&gt; &lt;a href="https://playcanv.as/p/LpmXGUe6/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/14928/349824/U88HJQ-image-25.jpg" alt="Casino"&gt;&lt;/a&gt;&lt;br&gt; &lt;a href="https://playcanv.as/p/JtL2iqIH/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/4763/TKYXB8-image-25.jpg" alt="Swooop"&gt;&lt;/a&gt; &lt;a href="https://playcanv.as/p/JERg21J8/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/415995/10A5A9-image-25.jpg" alt="dev Archer"&gt;&lt;/a&gt; &lt;a href="https://playcanv.as/p/2OlkUaxF/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/8/375389/23PRTL-image-25.jpg" alt="Flappy Bird"&gt;&lt;/a&gt;&lt;br&gt; &lt;a href="https://playcanv.as/p/RqJJ9oU9/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/347824/7ULQ3Y-image-25.jpg" alt="Car"&gt;&lt;/a&gt; &lt;a href="https://playcanv.as/p/SA7hVBLt/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/333626/BGQN9H-image-25.jpg" alt="Star-Lord"&gt;&lt;/a&gt; &lt;a href="https://playcanv.as/p/ZV4PW6wr/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/4373/625081/6AB32D-image-25.jpg" alt="Global Illumination"&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;You can see more games on the &lt;a href="https://playcanvas.com/explore"&gt;PlayCanvas website&lt;/a&gt;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Users&lt;/h2&gt; 
&lt;p&gt;PlayCanvas is used by leading companies in video games, advertising and visualization such as:&lt;br&gt; &lt;strong&gt;Animech, Arm, BMW, Disney, Facebook, Famobi, Funday Factory, IGT, King, Miniclip, Leapfrog, Mojiworks, Mozilla, Nickelodeon, Nordeus, NOWWA, PikPok, PlaySide Studios, Polaris, Product Madness, Samsung, Snap, Spry Fox, Zeptolab, Zynga&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;PlayCanvas is a fully-featured game engine.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üßä &lt;strong&gt;Graphics&lt;/strong&gt; - Advanced 2D + 3D graphics engine built on WebGL2 &amp;amp; WebGPU.&lt;/li&gt; 
 &lt;li&gt;üèÉ &lt;strong&gt;Animation&lt;/strong&gt; - Powerful state-based animations for characters and arbitrary scene properties&lt;/li&gt; 
 &lt;li&gt;‚öõÔ∏è &lt;strong&gt;Physics&lt;/strong&gt; - Full integration with 3D rigid-body physics engine &lt;a href="https://github.com/kripken/ammo.js"&gt;ammo.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üéÆ &lt;strong&gt;Input&lt;/strong&gt; - Mouse, keyboard, touch, gamepad and VR controller APIs&lt;/li&gt; 
 &lt;li&gt;üîä &lt;strong&gt;Sound&lt;/strong&gt; - 3D positional sounds built on the Web Audio API&lt;/li&gt; 
 &lt;li&gt;üì¶ &lt;strong&gt;Assets&lt;/strong&gt; - Asynchronous streaming system built on &lt;a href="https://www.khronos.org/gltf/"&gt;glTF 2.0&lt;/a&gt;, &lt;a href="https://google.github.io/draco/"&gt;Draco&lt;/a&gt; and &lt;a href="https://github.com/BinomialLLC/basis_universal"&gt;Basis&lt;/a&gt; compression&lt;/li&gt; 
 &lt;li&gt;üìú &lt;strong&gt;Scripts&lt;/strong&gt; - Write game behaviors in Typescript or JavaScript&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Here's a super-simple Hello World example - a spinning cube!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import * as pc from 'playcanvas';

const canvas = document.createElement('canvas');
document.body.appendChild(canvas);

const app = new pc.Application(canvas);

// fill the available space at full resolution
app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);
app.setCanvasResolution(pc.RESOLUTION_AUTO);

// ensure canvas is resized when window changes size
window.addEventListener('resize', () =&amp;gt; app.resizeCanvas());

// create box entity
const box = new pc.Entity('cube');
box.addComponent('model', {
  type: 'box'
});
app.root.addChild(box);

// create camera entity
const camera = new pc.Entity('camera');
camera.addComponent('camera', {
  clearColor: new pc.Color(0.1, 0.2, 0.3)
});
app.root.addChild(camera);
camera.setPosition(0, 0, 3);

// create directional light entity
const light = new pc.Entity('light');
light.addComponent('light');
app.root.addChild(light);
light.setEulerAngles(45, 0, 0);

// rotate the box according to the delta time since the last frame
app.on('update', dt =&amp;gt; box.rotate(10 * dt, 20 * dt, 30 * dt));

app.start();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Want to play with the code yourself? Edit it on &lt;a href="https://codepen.io/playcanvas/pen/NPbxMj"&gt;CodePen&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A full guide to setting up a local development environment based on the PlayCanvas Engine can be found &lt;a href="https://developer.playcanvas.com/user-manual/engine/standalone/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How to build&lt;/h2&gt; 
&lt;p&gt;Ensure you have &lt;a href="https://nodejs.org"&gt;Node.js 18+&lt;/a&gt; installed. Then, install all of the required Node.js dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you can run various build options:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Outputs To&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;npm run build&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Build all engine flavors and type declarations&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;build&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;npm run docs&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Build engine &lt;a href="https://api.playcanvas.com/modules/Engine.html"&gt;API reference docs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;PlayCanvas Editor&lt;/h2&gt; 
&lt;p&gt;The PlayCanvas Engine is an open-source engine that you can use to create HTML5 apps/games. In addition to the engine, we also make the &lt;a href="https://playcanvas.com/"&gt;PlayCanvas Editor&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/playcanvas/editor"&gt;&lt;img src="https://github.com/playcanvas/editor/raw/main/images/editor.png?raw=true" alt="Editor"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For Editor-related bugs and issues, please refer to the &lt;a href="https://github.com/playcanvas/editor"&gt;Editor's repo&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>songquanpeng/one-api</title>
      <link>https://github.com/songquanpeng/one-api</link>
      <description>&lt;p&gt;LLM API ÁÆ°ÁêÜ &amp; ÂàÜÂèëÁ≥ªÁªüÔºåÊîØÊåÅ OpenAI„ÄÅAzure„ÄÅAnthropic Claude„ÄÅGoogle Gemini„ÄÅDeepSeek„ÄÅÂ≠óËäÇË±ÜÂåÖ„ÄÅChatGLM„ÄÅÊñáÂøÉ‰∏ÄË®Ä„ÄÅËÆØÈ£ûÊòüÁÅ´„ÄÅÈÄö‰πâÂçÉÈóÆ„ÄÅ360 Êô∫ËÑë„ÄÅËÖæËÆØÊ∑∑ÂÖÉÁ≠â‰∏ªÊµÅÊ®°ÂûãÔºåÁªü‰∏Ä API ÈÄÇÈÖçÔºåÂèØÁî®‰∫é key ÁÆ°ÁêÜ‰∏é‰∫åÊ¨°ÂàÜÂèë„ÄÇÂçïÂèØÊâßË°åÊñá‰ª∂ÔºåÊèê‰æõ Docker ÈïúÂÉèÔºå‰∏ÄÈîÆÈÉ®ÁΩ≤ÔºåÂºÄÁÆ±Âç≥Áî®„ÄÇLLM API management &amp; key redistribution system, unifying multiple providers under a single API. Single binary, Docker-ready, with an English UI.&lt;/p&gt;&lt;hr&gt;&lt;p align="right"&gt; &lt;strong&gt;‰∏≠Êñá&lt;/strong&gt; | &lt;a href="https://raw.githubusercontent.com/songquanpeng/one-api/main/README.en.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/songquanpeng/one-api/main/README.ja.md"&gt;Êó•Êú¨Ë™û&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/songquanpeng/one-api"&gt;&lt;img src="https://raw.githubusercontent.com/songquanpeng/one-api/main/web/default/public/logo.png" width="150" height="150" alt="one-api logo"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;One API&lt;/h1&gt; 
 &lt;p&gt;&lt;em&gt;‚ú® ÈÄöËøáÊ†áÂáÜÁöÑ OpenAI API Ê†ºÂºèËÆøÈóÆÊâÄÊúâÁöÑÂ§ßÊ®°ÂûãÔºåÂºÄÁÆ±Âç≥Áî® ‚ú®&lt;/em&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/songquanpeng/one-api/main/LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/songquanpeng/one-api?color=brightgreen" alt="license"&gt; &lt;/a&gt; &lt;a href="https://github.com/songquanpeng/one-api/releases/latest"&gt; &lt;img src="https://img.shields.io/github/v/release/songquanpeng/one-api?color=brightgreen&amp;amp;include_prereleases" alt="release"&gt; &lt;/a&gt; &lt;a href="https://hub.docker.com/repository/docker/justsong/one-api"&gt; &lt;img src="https://img.shields.io/docker/pulls/justsong/one-api?color=brightgreen" alt="docker pull"&gt; &lt;/a&gt; &lt;a href="https://github.com/songquanpeng/one-api/releases/latest"&gt; &lt;img src="https://img.shields.io/github/downloads/songquanpeng/one-api/total?color=brightgreen&amp;amp;include_prereleases" alt="release"&gt; &lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/songquanpeng/one-api"&gt; &lt;img src="https://goreportcard.com/badge/github.com/songquanpeng/one-api" alt="GoReportCard"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/songquanpeng/one-api#%E9%83%A8%E7%BD%B2"&gt;ÈÉ®ÁΩ≤ÊïôÁ®ã&lt;/a&gt; ¬∑ &lt;a href="https://github.com/songquanpeng/one-api#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95"&gt;‰ΩøÁî®ÊñπÊ≥ï&lt;/a&gt; ¬∑ &lt;a href="https://github.com/songquanpeng/one-api/issues"&gt;ÊÑèËßÅÂèçÈ¶à&lt;/a&gt; ¬∑ &lt;a href="https://github.com/songquanpeng/one-api#%E6%88%AA%E5%9B%BE%E5%B1%95%E7%A4%BA"&gt;Êà™ÂõæÂ±ïÁ§∫&lt;/a&gt; ¬∑ &lt;a href="https://openai.justsong.cn/"&gt;Âú®Á∫øÊºîÁ§∫&lt;/a&gt; ¬∑ &lt;a href="https://github.com/songquanpeng/one-api#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98"&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/a&gt; ¬∑ &lt;a href="https://github.com/songquanpeng/one-api#%E7%9B%B8%E5%85%B3%E9%A1%B9%E7%9B%AE"&gt;Áõ∏ÂÖ≥È°πÁõÆ&lt;/a&gt; ¬∑ &lt;a href="https://iamazing.cn/page/reward"&gt;ËµûËµèÊîØÊåÅ&lt;/a&gt; &lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Êú¨È°πÁõÆ‰∏∫ÂºÄÊ∫êÈ°πÁõÆÔºå‰ΩøÁî®ËÄÖÂøÖÈ°ªÂú®ÈÅµÂæ™ OpenAI ÁöÑ&lt;a href="https://openai.com/policies/terms-of-use"&gt;‰ΩøÁî®Êù°Ê¨æ&lt;/a&gt;‰ª•Âèä&lt;strong&gt;Ê≥ïÂæãÊ≥ïËßÑ&lt;/strong&gt;ÁöÑÊÉÖÂÜµ‰∏ã‰ΩøÁî®Ôºå‰∏çÂæóÁî®‰∫éÈùûÊ≥ïÁî®ÈÄî„ÄÇ&lt;/p&gt; 
 &lt;p&gt;Ê†πÊçÆ&lt;a href="http://www.cac.gov.cn/2023-07/13/c_1690898327029107.htm"&gt;„ÄäÁîüÊàêÂºè‰∫∫Â∑•Êô∫ËÉΩÊúçÂä°ÁÆ°ÁêÜÊöÇË°åÂäûÊ≥ï„Äã&lt;/a&gt;ÁöÑË¶ÅÊ±ÇÔºåËØ∑ÂãøÂØπ‰∏≠ÂõΩÂú∞Âå∫ÂÖ¨‰ºóÊèê‰æõ‰∏ÄÂàáÊú™ÁªèÂ§áÊ°àÁöÑÁîüÊàêÂºè‰∫∫Â∑•Êô∫ËÉΩÊúçÂä°„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Á®≥ÂÆöÁâà / È¢ÑËßàÁâàÈïúÂÉèÂú∞ÂùÄÔºö&lt;a href="https://hub.docker.com/repository/docker/justsong/one-api"&gt;justsong/one-api&lt;/a&gt; ÊàñËÄÖ &lt;a href="https://github.com/songquanpeng/one-api/pkgs/container/one-api"&gt;ghcr.io/songquanpeng/one-api&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;alpha ÁâàÈïúÂÉèÂú∞ÂùÄÔºö&lt;a href="https://hub.docker.com/repository/docker/justsong/one-api-alpha"&gt;justsong/one-api-alpha&lt;/a&gt; ÊàñËÄÖ &lt;a href="https://github.com/songquanpeng/one-api/pkgs/container/one-api-alpha"&gt;ghcr.io/songquanpeng/one-api-alpha&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] ‰ΩøÁî® root Áî®Êà∑ÂàùÊ¨°ÁôªÂΩïÁ≥ªÁªüÂêéÔºåÂä°ÂøÖ‰øÆÊîπÈªòËÆ§ÂØÜÁ†Å &lt;code&gt;123456&lt;/code&gt;ÔºÅ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;ÂäüËÉΩ&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;ÊîØÊåÅÂ§öÁßçÂ§ßÊ®°ÂûãÔºö 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://platform.openai.com/docs/guides/gpt/chat-completions-api"&gt;OpenAI ChatGPT Á≥ªÂàóÊ®°Âûã&lt;/a&gt;ÔºàÊîØÊåÅ &lt;a href="https://learn.microsoft.com/en-us/azure/ai-services/openai/reference"&gt;Azure OpenAI API&lt;/a&gt;Ôºâ&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://anthropic.com"&gt;Anthropic Claude Á≥ªÂàóÊ®°Âûã&lt;/a&gt; (ÊîØÊåÅ AWS Claude)&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://developers.generativeai.google"&gt;Google PaLM2/Gemini Á≥ªÂàóÊ®°Âûã&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://mistral.ai/"&gt;Mistral Á≥ªÂàóÊ®°Âûã&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://www.volcengine.com/experience/ark?utm_term=202502dsinvite&amp;amp;ac=DSASUQY5&amp;amp;rc=2QXCA1VI"&gt;Â≠óËäÇË∑≥Âä®Ë±ÜÂåÖÂ§ßÊ®°ÂûãÔºàÁÅ´Â±±ÂºïÊìéÔºâ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://cloud.baidu.com/doc/WENXINWORKSHOP/index.html"&gt;ÁôæÂ∫¶ÊñáÂøÉ‰∏ÄË®ÄÁ≥ªÂàóÊ®°Âûã&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://help.aliyun.com/document_detail/2400395.html"&gt;ÈòøÈáåÈÄö‰πâÂçÉÈóÆÁ≥ªÂàóÊ®°Âûã&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://www.xfyun.cn/doc/spark/Web.html"&gt;ËÆØÈ£ûÊòüÁÅ´ËÆ§Áü•Â§ßÊ®°Âûã&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://bigmodel.cn"&gt;Êô∫Ë∞± ChatGLM Á≥ªÂàóÊ®°Âûã&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://ai.360.cn"&gt;360 Êô∫ËÑë&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://cloud.tencent.com/document/product/1729"&gt;ËÖæËÆØÊ∑∑ÂÖÉÂ§ßÊ®°Âûã&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://platform.moonshot.cn/"&gt;Moonshot AI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://platform.baichuan-ai.com"&gt;ÁôæÂ∑ùÂ§ßÊ®°Âûã&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://api.minimax.chat/"&gt;MINIMAX&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://wow.groq.com/"&gt;Groq&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://github.com/ollama/ollama"&gt;Ollama&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://platform.lingyiwanwu.com/"&gt;Èõ∂‰∏Ä‰∏áÁâ©&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://platform.stepfun.com/"&gt;Èò∂Ë∑ÉÊòüËæ∞&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://www.coze.com/"&gt;Coze&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://cohere.com/"&gt;Cohere&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://www.deepseek.com/"&gt;DeepSeek&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://developers.cloudflare.com/workers-ai/"&gt;Cloudflare Workers AI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://www.deepl.com/"&gt;DeepL&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://www.together.ai/"&gt;together.ai&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://www.novita.ai/"&gt;novita.ai&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://cloud.siliconflow.cn/i/rKXmRobW"&gt;Á°ÖÂü∫ÊµÅÂä® SiliconCloud&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;a href="https://x.ai/"&gt;xAI&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅÈÖçÁΩÆÈïúÂÉè‰ª•Âèä‰ºóÂ§ö&lt;a href="https://iamazing.cn/page/openai-api-third-party-services"&gt;Á¨¨‰∏âÊñπ‰ª£ÁêÜÊúçÂä°&lt;/a&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅÈÄöËøá&lt;strong&gt;Ë¥üËΩΩÂùáË°°&lt;/strong&gt;ÁöÑÊñπÂºèËÆøÈóÆÂ§ö‰∏™Ê∏†ÈÅì„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅ &lt;strong&gt;stream Ê®°Âºè&lt;/strong&gt;ÔºåÂèØ‰ª•ÈÄöËøáÊµÅÂºè‰º†ËæìÂÆûÁé∞ÊâìÂ≠óÊú∫ÊïàÊûú„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅ&lt;strong&gt;Â§öÊú∫ÈÉ®ÁΩ≤&lt;/strong&gt;Ôºå&lt;a href="https://raw.githubusercontent.com/songquanpeng/one-api/main/#%E5%A4%9A%E6%9C%BA%E9%83%A8%E7%BD%B2"&gt;ËØ¶ËßÅÊ≠§Â§Ñ&lt;/a&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅ&lt;strong&gt;‰ª§ÁâåÁÆ°ÁêÜ&lt;/strong&gt;ÔºåËÆæÁΩÆ‰ª§ÁâåÁöÑËøáÊúüÊó∂Èó¥„ÄÅÈ¢ùÂ∫¶„ÄÅÂÖÅËÆ∏ÁöÑ IP ËåÉÂõ¥‰ª•ÂèäÂÖÅËÆ∏ÁöÑÊ®°ÂûãËÆøÈóÆ„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅ&lt;strong&gt;ÂÖëÊç¢Á†ÅÁÆ°ÁêÜ&lt;/strong&gt;ÔºåÊîØÊåÅÊâπÈáèÁîüÊàêÂíåÂØºÂá∫ÂÖëÊç¢Á†ÅÔºåÂèØ‰ΩøÁî®ÂÖëÊç¢Á†Å‰∏∫Ë¥¶Êà∑ËøõË°åÂÖÖÂÄº„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅ&lt;strong&gt;Ê∏†ÈÅìÁÆ°ÁêÜ&lt;/strong&gt;ÔºåÊâπÈáèÂàõÂª∫Ê∏†ÈÅì„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅ&lt;strong&gt;Áî®Êà∑ÂàÜÁªÑ&lt;/strong&gt;‰ª•Âèä&lt;strong&gt;Ê∏†ÈÅìÂàÜÁªÑ&lt;/strong&gt;ÔºåÊîØÊåÅ‰∏∫‰∏çÂêåÂàÜÁªÑËÆæÁΩÆ‰∏çÂêåÁöÑÂÄçÁéá„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅÊ∏†ÈÅì&lt;strong&gt;ËÆæÁΩÆÊ®°ÂûãÂàóË°®&lt;/strong&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅ&lt;strong&gt;Êü•ÁúãÈ¢ùÂ∫¶ÊòéÁªÜ&lt;/strong&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅ&lt;strong&gt;Áî®Êà∑ÈÇÄËØ∑Â•ñÂä±&lt;/strong&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅ‰ª•ÁæéÂÖÉ‰∏∫Âçï‰ΩçÊòæÁ§∫È¢ùÂ∫¶„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅÂèëÂ∏ÉÂÖ¨ÂëäÔºåËÆæÁΩÆÂÖÖÂÄºÈìæÊé•ÔºåËÆæÁΩÆÊñ∞Áî®Êà∑ÂàùÂßãÈ¢ùÂ∫¶„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅÊ®°ÂûãÊò†Â∞ÑÔºåÈáçÂÆöÂêëÁî®Êà∑ÁöÑËØ∑Ê±ÇÊ®°ÂûãÔºåÂ¶ÇÊó†ÂøÖË¶ÅËØ∑‰∏çË¶ÅËÆæÁΩÆÔºåËÆæÁΩÆ‰πãÂêé‰ºöÂØºËá¥ËØ∑Ê±Ç‰ΩìË¢´ÈáçÊñ∞ÊûÑÈÄ†ËÄåÈùûÁõ¥Êé•ÈÄè‰º†Ôºå‰ºöÂØºËá¥ÈÉ®ÂàÜËøòÊú™Ê≠£ÂºèÊîØÊåÅÁöÑÂ≠óÊÆµÊó†Ê≥ï‰º†ÈÄíÊàêÂäü„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅÂ§±Ë¥•Ëá™Âä®ÈáçËØï„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅÁªòÂõæÊé•Âè£„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅ &lt;a href="https://developers.cloudflare.com/ai-gateway/providers/openai/"&gt;Cloudflare AI Gateway&lt;/a&gt;ÔºåÊ∏†ÈÅìËÆæÁΩÆÁöÑ‰ª£ÁêÜÈÉ®ÂàÜÂ°´ÂÜô &lt;code&gt;https://gateway.ai.cloudflare.com/v1/ACCOUNT_TAG/GATEWAY/openai&lt;/code&gt; Âç≥ÂèØ„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅ‰∏∞ÂØåÁöÑ&lt;strong&gt;Ëá™ÂÆö‰πâ&lt;/strong&gt;ËÆæÁΩÆÔºå 
  &lt;ol&gt; 
   &lt;li&gt;ÊîØÊåÅËá™ÂÆö‰πâÁ≥ªÁªüÂêçÁß∞Ôºålogo ‰ª•ÂèäÈ°µËÑö„ÄÇ&lt;/li&gt; 
   &lt;li&gt;ÊîØÊåÅËá™ÂÆö‰πâÈ¶ñÈ°µÂíåÂÖ≥‰∫éÈ°µÈù¢ÔºåÂèØ‰ª•ÈÄâÊã©‰ΩøÁî® HTML &amp;amp; Markdown ‰ª£Á†ÅËøõË°åËá™ÂÆö‰πâÔºåÊàñËÄÖ‰ΩøÁî®‰∏Ä‰∏™ÂçïÁã¨ÁöÑÁΩëÈ°µÈÄöËøá iframe ÂµåÂÖ•„ÄÇ&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅÈÄöËøáÁ≥ªÁªüËÆøÈóÆ‰ª§ÁâåË∞ÉÁî®ÁÆ°ÁêÜ APIÔºåËøõËÄå&lt;strong&gt;Âú®Êó†ÈúÄ‰∫åÂºÄÁöÑÊÉÖÂÜµ‰∏ãÊâ©Â±ïÂíåËá™ÂÆö‰πâ&lt;/strong&gt; One API ÁöÑÂäüËÉΩÔºåËØ¶ÊÉÖËØ∑ÂèÇËÄÉÊ≠§Â§Ñ &lt;a href="https://raw.githubusercontent.com/songquanpeng/one-api/main/docs/API.md"&gt;API ÊñáÊ°£&lt;/a&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅ Cloudflare Turnstile Áî®Êà∑Ê†°È™å„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅÁî®Êà∑ÁÆ°ÁêÜÔºåÊîØÊåÅ&lt;strong&gt;Â§öÁßçÁî®Êà∑ÁôªÂΩïÊ≥®ÂÜåÊñπÂºè&lt;/strong&gt;Ôºö 
  &lt;ul&gt; 
   &lt;li&gt;ÈÇÆÁÆ±ÁôªÂΩïÊ≥®ÂÜåÔºàÊîØÊåÅÊ≥®ÂÜåÈÇÆÁÆ±ÁôΩÂêçÂçïÔºâ‰ª•ÂèäÈÄöËøáÈÇÆÁÆ±ËøõË°åÂØÜÁ†ÅÈáçÁΩÆ„ÄÇ&lt;/li&gt; 
   &lt;li&gt;ÊîØÊåÅ&lt;a href="https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/authen-v1/authorize/get"&gt;È£û‰π¶ÊéàÊùÉÁôªÂΩï&lt;/a&gt;Ôºà&lt;a href="https://iamazing.cn/page/feishu-oauth-login"&gt;ËøôÈáåÊúâ One API ÁöÑÂÆûÁé∞ÁªÜËäÇÈòêËø∞‰æõÂèÇËÄÉ&lt;/a&gt;Ôºâ„ÄÇ&lt;/li&gt; 
   &lt;li&gt;ÊîØÊåÅ &lt;a href="https://github.com/settings/applications/new"&gt;GitHub ÊéàÊùÉÁôªÂΩï&lt;/a&gt;„ÄÇ&lt;/li&gt; 
   &lt;li&gt;ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÊéàÊùÉÔºàÈúÄË¶ÅÈ¢ùÂ§ñÈÉ®ÁΩ≤ &lt;a href="https://github.com/songquanpeng/wechat-server"&gt;WeChat Server&lt;/a&gt;Ôºâ„ÄÇ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅ‰∏ªÈ¢òÂàáÊç¢ÔºåËÆæÁΩÆÁéØÂ¢ÉÂèòÈáè &lt;code&gt;THEME&lt;/code&gt; Âç≥ÂèØÔºåÈªòËÆ§‰∏∫ &lt;code&gt;default&lt;/code&gt;ÔºåÊ¨¢Ëøé PR Êõ¥Â§ö‰∏ªÈ¢òÔºåÂÖ∑‰ΩìÂèÇËÄÉ&lt;a href="https://raw.githubusercontent.com/songquanpeng/one-api/main/web/README.md"&gt;Ê≠§Â§Ñ&lt;/a&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÈÖçÂêà &lt;a href="https://github.com/songquanpeng/message-pusher"&gt;Message Pusher&lt;/a&gt; ÂèØÂ∞ÜÊä•Ë≠¶‰ø°ÊÅØÊé®ÈÄÅÂà∞Â§öÁßç App ‰∏ä„ÄÇ&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;ÈÉ®ÁΩ≤&lt;/h2&gt; 
&lt;h3&gt;Âü∫‰∫é Docker ËøõË°åÈÉ®ÁΩ≤&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# ‰ΩøÁî® SQLite ÁöÑÈÉ®ÁΩ≤ÂëΩ‰ª§Ôºö
docker run --name one-api -d --restart always -p 3000:3000 -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api
# ‰ΩøÁî® MySQL ÁöÑÈÉ®ÁΩ≤ÂëΩ‰ª§ÔºåÂú®‰∏äÈù¢ÁöÑÂü∫Á°Ä‰∏äÊ∑ªÂä† `-e SQL_DSN="root:123456@tcp(localhost:3306)/oneapi"`ÔºåËØ∑Ëá™Ë°å‰øÆÊîπÊï∞ÊçÆÂ∫ìËøûÊé•ÂèÇÊï∞Ôºå‰∏çÊ∏ÖÊ•öÂ¶Ç‰Ωï‰øÆÊîπËØ∑ÂèÇËßÅ‰∏ãÈù¢ÁéØÂ¢ÉÂèòÈáè‰∏ÄËäÇ„ÄÇ
# ‰æãÂ¶ÇÔºö
docker run --name one-api -d --restart always -p 3000:3000 -e SQL_DSN="root:123456@tcp(localhost:3306)/oneapi" -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;ÂÖ∂‰∏≠Ôºå&lt;code&gt;-p 3000:3000&lt;/code&gt; ‰∏≠ÁöÑÁ¨¨‰∏Ä‰∏™ &lt;code&gt;3000&lt;/code&gt; ÊòØÂÆø‰∏ªÊú∫ÁöÑÁ´ØÂè£ÔºåÂèØ‰ª•Ê†πÊçÆÈúÄË¶ÅËøõË°å‰øÆÊîπ„ÄÇ&lt;/p&gt; 
&lt;p&gt;Êï∞ÊçÆÂíåÊó•ÂøóÂ∞Ü‰ºö‰øùÂ≠òÂú®ÂÆø‰∏ªÊú∫ÁöÑ &lt;code&gt;/home/ubuntu/data/one-api&lt;/code&gt; ÁõÆÂΩïÔºåËØ∑Á°Æ‰øùËØ•ÁõÆÂΩïÂ≠òÂú®‰∏îÂÖ∑ÊúâÂÜôÂÖ•ÊùÉÈôêÔºåÊàñËÄÖÊõ¥Êîπ‰∏∫ÂêàÈÄÇÁöÑÁõÆÂΩï„ÄÇ&lt;/p&gt; 
&lt;p&gt;Â¶ÇÊûúÂêØÂä®Â§±Ë¥•ÔºåËØ∑Ê∑ªÂä† &lt;code&gt;--privileged=true&lt;/code&gt;ÔºåÂÖ∑‰ΩìÂèÇËÄÉ &lt;a href="https://github.com/songquanpeng/one-api/issues/482"&gt;https://github.com/songquanpeng/one-api/issues/482&lt;/a&gt; „ÄÇ&lt;/p&gt; 
&lt;p&gt;Â¶ÇÊûú‰∏äÈù¢ÁöÑÈïúÂÉèÊó†Ê≥ïÊãâÂèñÔºåÂèØ‰ª•Â∞ùËØï‰ΩøÁî® GitHub ÁöÑ Docker ÈïúÂÉèÔºåÂ∞Ü‰∏äÈù¢ÁöÑ &lt;code&gt;justsong/one-api&lt;/code&gt; ÊõøÊç¢‰∏∫ &lt;code&gt;ghcr.io/songquanpeng/one-api&lt;/code&gt; Âç≥ÂèØ„ÄÇ&lt;/p&gt; 
&lt;p&gt;Â¶ÇÊûú‰Ω†ÁöÑÂπ∂ÂèëÈáèËæÉÂ§ßÔºå&lt;strong&gt;Âä°ÂøÖ&lt;/strong&gt;ËÆæÁΩÆ &lt;code&gt;SQL_DSN&lt;/code&gt;ÔºåËØ¶ËßÅ‰∏ãÈù¢&lt;a href="https://raw.githubusercontent.com/songquanpeng/one-api/main/#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F"&gt;ÁéØÂ¢ÉÂèòÈáè&lt;/a&gt;‰∏ÄËäÇ„ÄÇ&lt;/p&gt; 
&lt;p&gt;Êõ¥Êñ∞ÂëΩ‰ª§Ôºö&lt;code&gt;docker run --rm -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower -cR&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Nginx ÁöÑÂèÇËÄÉÈÖçÁΩÆÔºö&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;server{
   server_name openai.justsong.cn;  # ËØ∑Ê†πÊçÆÂÆûÈôÖÊÉÖÂÜµ‰øÆÊîπ‰Ω†ÁöÑÂüüÂêç

   location / {
          client_max_body_size  64m;
          proxy_http_version 1.1;
          proxy_pass http://localhost:3000;  # ËØ∑Ê†πÊçÆÂÆûÈôÖÊÉÖÂÜµ‰øÆÊîπ‰Ω†ÁöÑÁ´ØÂè£
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $remote_addr;
          proxy_cache_bypass $http_upgrade;
          proxy_set_header Accept-Encoding gzip;
          proxy_read_timeout 300s;  # GPT-4 ÈúÄË¶ÅËæÉÈïøÁöÑË∂ÖÊó∂Êó∂Èó¥ÔºåËØ∑Ëá™Ë°åË∞ÉÊï¥
   }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;‰πãÂêé‰ΩøÁî® Let's Encrypt ÁöÑ certbot ÈÖçÁΩÆ HTTPSÔºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Ubuntu ÂÆâË£Ö certbotÔºö
sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot
# ÁîüÊàêËØÅ‰π¶ &amp;amp; ‰øÆÊîπ Nginx ÈÖçÁΩÆ
sudo certbot --nginx
# Ê†πÊçÆÊåáÁ§∫ËøõË°åÊìç‰Ωú
# ÈáçÂêØ Nginx
sudo service nginx restart
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;ÂàùÂßãË¥¶Âè∑Áî®Êà∑Âêç‰∏∫ &lt;code&gt;root&lt;/code&gt;ÔºåÂØÜÁ†Å‰∏∫ &lt;code&gt;123456&lt;/code&gt;„ÄÇ&lt;/p&gt; 
&lt;h3&gt;ÈÄöËøáÂÆùÂ°îÈù¢ÊùøËøõË°å‰∏ÄÈîÆÈÉ®ÁΩ≤&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;ÂÆâË£ÖÂÆùÂ°îÈù¢Êùø9.2.0Âèä‰ª•‰∏äÁâàÊú¨ÔºåÂâçÂæÄ &lt;a href="https://www.bt.cn/new/download.html?r=dk_oneapi"&gt;ÂÆùÂ°îÈù¢Êùø&lt;/a&gt; ÂÆòÁΩëÔºåÈÄâÊã©Ê≠£ÂºèÁâàÁöÑËÑöÊú¨‰∏ãËΩΩÂÆâË£ÖÔºõ&lt;/li&gt; 
 &lt;li&gt;ÂÆâË£ÖÂêéÁôªÂΩïÂÆùÂ°îÈù¢ÊùøÔºåÂú®Â∑¶‰æßËèúÂçïÊ†è‰∏≠ÁÇπÂáª &lt;code&gt;Docker&lt;/code&gt;ÔºåÈ¶ñÊ¨°ËøõÂÖ•‰ºöÊèêÁ§∫ÂÆâË£Ö &lt;code&gt;Docker&lt;/code&gt; ÊúçÂä°ÔºåÁÇπÂáªÁ´ãÂç≥ÂÆâË£ÖÔºåÊåâÊèêÁ§∫ÂÆåÊàêÂÆâË£ÖÔºõ&lt;/li&gt; 
 &lt;li&gt;ÂÆâË£ÖÂÆåÊàêÂêéÂú®Â∫îÁî®ÂïÜÂ∫ó‰∏≠ÊêúÁ¥¢ &lt;code&gt;One-API&lt;/code&gt;ÔºåÁÇπÂáªÂÆâË£ÖÔºåÈÖçÁΩÆÂüüÂêçÁ≠âÂü∫Êú¨‰ø°ÊÅØÂç≥ÂèØÂÆåÊàêÂÆâË£ÖÔºõ&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Âü∫‰∫é Docker Compose ËøõË°åÈÉ®ÁΩ≤&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‰ªÖÂêØÂä®ÊñπÂºè‰∏çÂêåÔºåÂèÇÊï∞ËÆæÁΩÆ‰∏çÂèòÔºåËØ∑ÂèÇËÄÉÂü∫‰∫é Docker ÈÉ®ÁΩ≤ÈÉ®ÂàÜ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# ÁõÆÂâçÊîØÊåÅ MySQL ÂêØÂä®ÔºåÊï∞ÊçÆÂ≠òÂÇ®Âú® ./data/mysql Êñá‰ª∂Â§πÂÜÖ
docker-compose up -d

# Êü•ÁúãÈÉ®ÁΩ≤Áä∂ÊÄÅ
docker-compose ps
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ÊâãÂä®ÈÉ®ÁΩ≤&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;‰ªé &lt;a href="https://github.com/songquanpeng/one-api/releases/latest"&gt;GitHub Releases&lt;/a&gt; ‰∏ãËΩΩÂèØÊâßË°åÊñá‰ª∂ÊàñËÄÖ‰ªéÊ∫êÁ†ÅÁºñËØëÔºö &lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/songquanpeng/one-api.git

# ÊûÑÂª∫ÂâçÁ´Ø
cd one-api/web/default
npm install
npm run build

# ÊûÑÂª∫ÂêéÁ´Ø
cd ../..
go mod download
go build -ldflags "-s -w" -o one-api
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;ËøêË°åÔºö &lt;pre&gt;&lt;code class="language-shell"&gt;chmod u+x one-api
./one-api --port 3000 --log-dir ./logs
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;ËÆøÈóÆ &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt; Âπ∂ÁôªÂΩï„ÄÇÂàùÂßãË¥¶Âè∑Áî®Êà∑Âêç‰∏∫ &lt;code&gt;root&lt;/code&gt;ÔºåÂØÜÁ†Å‰∏∫ &lt;code&gt;123456&lt;/code&gt;„ÄÇ&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Êõ¥Âä†ËØ¶ÁªÜÁöÑÈÉ®ÁΩ≤ÊïôÁ®ã&lt;a href="https://iamazing.cn/page/how-to-deploy-a-website"&gt;ÂèÇËßÅÊ≠§Â§Ñ&lt;/a&gt;„ÄÇ&lt;/p&gt; 
&lt;h3&gt;Â§öÊú∫ÈÉ®ÁΩ≤&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;ÊâÄÊúâÊúçÂä°Âô® &lt;code&gt;SESSION_SECRET&lt;/code&gt; ËÆæÁΩÆ‰∏ÄÊ†∑ÁöÑÂÄº„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÂøÖÈ°ªËÆæÁΩÆ &lt;code&gt;SQL_DSN&lt;/code&gt;Ôºå‰ΩøÁî® MySQL Êï∞ÊçÆÂ∫ìËÄåÈùû SQLiteÔºåÊâÄÊúâÊúçÂä°Âô®ËøûÊé•Âêå‰∏Ä‰∏™Êï∞ÊçÆÂ∫ì„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊâÄÊúâ‰ªéÊúçÂä°Âô®ÂøÖÈ°ªËÆæÁΩÆ &lt;code&gt;NODE_TYPE&lt;/code&gt; ‰∏∫ &lt;code&gt;slave&lt;/code&gt;Ôºå‰∏çËÆæÁΩÆÂàôÈªòËÆ§‰∏∫‰∏ªÊúçÂä°Âô®„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ËÆæÁΩÆ &lt;code&gt;SYNC_FREQUENCY&lt;/code&gt; ÂêéÊúçÂä°Âô®Â∞ÜÂÆöÊúü‰ªéÊï∞ÊçÆÂ∫ìÂêåÊ≠•ÈÖçÁΩÆÔºåÂú®‰ΩøÁî®ËøúÁ®ãÊï∞ÊçÆÂ∫ìÁöÑÊÉÖÂÜµ‰∏ãÔºåÊé®ËçêËÆæÁΩÆËØ•È°πÂπ∂ÂêØÁî® RedisÔºåÊó†ËÆ∫‰∏ª‰ªé„ÄÇ&lt;/li&gt; 
 &lt;li&gt;‰ªéÊúçÂä°Âô®ÂèØ‰ª•ÈÄâÊã©ËÆæÁΩÆ &lt;code&gt;FRONTEND_BASE_URL&lt;/code&gt;Ôºå‰ª•ÈáçÂÆöÂêëÈ°µÈù¢ËØ∑Ê±ÇÂà∞‰∏ªÊúçÂä°Âô®„ÄÇ&lt;/li&gt; 
 &lt;li&gt;‰ªéÊúçÂä°Âô®‰∏ä&lt;strong&gt;ÂàÜÂà´&lt;/strong&gt;Ë£ÖÂ•Ω RedisÔºåËÆæÁΩÆÂ•Ω &lt;code&gt;REDIS_CONN_STRING&lt;/code&gt;ÔºåËøôÊ†∑ÂèØ‰ª•ÂÅöÂà∞Âú®ÁºìÂ≠òÊú™ËøáÊúüÁöÑÊÉÖÂÜµ‰∏ãÊï∞ÊçÆÂ∫ìÈõ∂ËÆøÈóÆÔºåÂèØ‰ª•ÂáèÂ∞ëÂª∂ËøüÔºàRedis ÈõÜÁæ§ÊàñËÄÖÂì®ÂÖµÊ®°ÂºèÁöÑÊîØÊåÅËØ∑ÂèÇËÄÉÁéØÂ¢ÉÂèòÈáèËØ¥ÊòéÔºâ„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Â¶ÇÊûú‰∏ªÊúçÂä°Âô®ËÆøÈóÆÊï∞ÊçÆÂ∫ìÂª∂Ëøü‰πüÊØîËæÉÈ´òÔºåÂàô‰πüÈúÄË¶ÅÂêØÁî® RedisÔºåÂπ∂ËÆæÁΩÆ &lt;code&gt;SYNC_FREQUENCY&lt;/code&gt;Ôºå‰ª•ÂÆöÊúü‰ªéÊï∞ÊçÆÂ∫ìÂêåÊ≠•ÈÖçÁΩÆ„ÄÇ&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;ÁéØÂ¢ÉÂèòÈáèÁöÑÂÖ∑‰Ωì‰ΩøÁî®ÊñπÊ≥ïËØ¶ËßÅ&lt;a href="https://raw.githubusercontent.com/songquanpeng/one-api/main/#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F"&gt;Ê≠§Â§Ñ&lt;/a&gt;„ÄÇ&lt;/p&gt; 
&lt;h3&gt;ÂÆùÂ°îÈÉ®ÁΩ≤ÊïôÁ®ã&lt;/h3&gt; 
&lt;p&gt;ËØ¶ËßÅ &lt;a href="https://github.com/songquanpeng/one-api/issues/175"&gt;#175&lt;/a&gt;„ÄÇ&lt;/p&gt; 
&lt;p&gt;Â¶ÇÊûúÈÉ®ÁΩ≤ÂêéËÆøÈóÆÂá∫Áé∞Á©∫ÁôΩÈ°µÈù¢ÔºåËØ¶ËßÅ &lt;a href="https://github.com/songquanpeng/one-api/issues/97"&gt;#97&lt;/a&gt;„ÄÇ&lt;/p&gt; 
&lt;h3&gt;ÈÉ®ÁΩ≤Á¨¨‰∏âÊñπÊúçÂä°ÈÖçÂêà One API ‰ΩøÁî®&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Ê¨¢Ëøé PR Ê∑ªÂä†Êõ¥Â§öÁ§∫‰æã„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;ChatGPT Next Web&lt;/h4&gt; 
&lt;p&gt;È°πÁõÆ‰∏ªÈ°µÔºö&lt;a href="https://github.com/Yidadaa/ChatGPT-Next-Web"&gt;https://github.com/Yidadaa/ChatGPT-Next-Web&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --name chat-next-web -d -p 3001:3000 yidadaa/chatgpt-next-web
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ê≥®ÊÑè‰øÆÊîπÁ´ØÂè£Âè∑Ôºå‰πãÂêéÂú®È°µÈù¢‰∏äËÆæÁΩÆÊé•Âè£Âú∞ÂùÄÔºà‰æãÂ¶ÇÔºö&lt;a href="https://openai.justsong.cn/"&gt;https://openai.justsong.cn/&lt;/a&gt; ÔºâÂíå API Key Âç≥ÂèØ„ÄÇ&lt;/p&gt; 
&lt;h4&gt;ChatGPT Web&lt;/h4&gt; 
&lt;p&gt;È°πÁõÆ‰∏ªÈ°µÔºö&lt;a href="https://github.com/Chanzhaoyu/chatgpt-web"&gt;https://github.com/Chanzhaoyu/chatgpt-web&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --name chatgpt-web -d -p 3002:3002 -e OPENAI_API_BASE_URL=https://openai.justsong.cn -e OPENAI_API_KEY=sk-xxx chenzhaoyu94/chatgpt-web
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ê≥®ÊÑè‰øÆÊîπÁ´ØÂè£Âè∑„ÄÅ&lt;code&gt;OPENAI_API_BASE_URL&lt;/code&gt; Âíå &lt;code&gt;OPENAI_API_KEY&lt;/code&gt;„ÄÇ&lt;/p&gt; 
&lt;h4&gt;QChatGPT - QQÊú∫Âô®‰∫∫&lt;/h4&gt; 
&lt;p&gt;È°πÁõÆ‰∏ªÈ°µÔºö&lt;a href="https://github.com/RockChinQ/QChatGPT"&gt;https://github.com/RockChinQ/QChatGPT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Ê†πÊçÆ&lt;a href="https://qchatgpt.rockchin.top"&gt;ÊñáÊ°£&lt;/a&gt;ÂÆåÊàêÈÉ®ÁΩ≤ÂêéÔºåÂú® &lt;code&gt;data/provider.json&lt;/code&gt;ËÆæÁΩÆ&lt;code&gt;requester.openai-chat-completions.base-url&lt;/code&gt;‰∏∫ One API ÂÆû‰æãÂú∞ÂùÄÔºåÂπ∂Â°´ÂÜô API Key Âà∞ &lt;code&gt;keys.openai&lt;/code&gt; ÁªÑ‰∏≠ÔºåËÆæÁΩÆ &lt;code&gt;model&lt;/code&gt; ‰∏∫Ë¶Å‰ΩøÁî®ÁöÑÊ®°ÂûãÂêçÁß∞„ÄÇ&lt;/p&gt; 
&lt;p&gt;ËøêË°åÊúüÈó¥ÂèØ‰ª•ÈÄöËøá&lt;code&gt;!model&lt;/code&gt;ÂëΩ‰ª§Êü•Áúã„ÄÅÂàáÊç¢ÂèØÁî®Ê®°Âûã„ÄÇ&lt;/p&gt; 
&lt;h3&gt;ÈÉ®ÁΩ≤Âà∞Á¨¨‰∏âÊñπÂπ≥Âè∞&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;ÈÉ®ÁΩ≤Âà∞ Sealos &lt;/strong&gt;&lt;/summary&gt; 
 &lt;div&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Sealos ÁöÑÊúçÂä°Âô®Âú®ÂõΩÂ§ñÔºå‰∏çÈúÄË¶ÅÈ¢ùÂ§ñÂ§ÑÁêÜÁΩëÁªúÈóÆÈ¢òÔºåÊîØÊåÅÈ´òÂπ∂Âèë &amp;amp; Âä®ÊÄÅ‰º∏Áº©„ÄÇ&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;p&gt;ÁÇπÂáª‰ª•‰∏ãÊåâÈíÆ‰∏ÄÈîÆÈÉ®ÁΩ≤ÔºàÈÉ®ÁΩ≤ÂêéËÆøÈóÆÂá∫Áé∞ 404 ËØ∑Á≠âÂæÖ 3~5 ÂàÜÈíüÔºâÔºö&lt;/p&gt; 
  &lt;p&gt;&lt;a href="https://cloud.sealos.io/?openapp=system-fastdeploy?templateName=one-api"&gt;&lt;img src="https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg?sanitize=true" alt="Deploy-on-Sealos.svg"&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;ÈÉ®ÁΩ≤Âà∞ Zeabur&lt;/strong&gt;&lt;/summary&gt; 
 &lt;div&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Zeabur ÁöÑÊúçÂä°Âô®Âú®ÂõΩÂ§ñÔºåËá™Âä®Ëß£ÂÜ≥‰∫ÜÁΩëÁªúÁöÑÈóÆÈ¢òÔºåÂêåÊó∂ÂÖçË¥πÁöÑÈ¢ùÂ∫¶‰πüË∂≥Â§ü‰∏™‰∫∫‰ΩøÁî®&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;p&gt;&lt;a href="https://zeabur.com/templates/7Q0KO3"&gt;&lt;img src="https://zeabur.com/button.svg?sanitize=true" alt="Deploy on Zeabur"&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;È¶ñÂÖà fork ‰∏Ä‰ªΩ‰ª£Á†Å„ÄÇ&lt;/li&gt; 
   &lt;li&gt;ËøõÂÖ• &lt;a href="https://zeabur.com?referralCode=songquanpeng"&gt;Zeabur&lt;/a&gt;ÔºåÁôªÂΩïÔºåËøõÂÖ•ÊéßÂà∂Âè∞„ÄÇ&lt;/li&gt; 
   &lt;li&gt;Êñ∞Âª∫‰∏Ä‰∏™ ProjectÔºåÂú® Service -&amp;gt; Add Service ÈÄâÊã© MarketplaceÔºåÈÄâÊã© MySQLÔºåÂπ∂ËÆ∞‰∏ãËøûÊé•ÂèÇÊï∞ÔºàÁî®Êà∑Âêç„ÄÅÂØÜÁ†Å„ÄÅÂú∞ÂùÄ„ÄÅÁ´ØÂè£Ôºâ„ÄÇ&lt;/li&gt; 
   &lt;li&gt;Â§çÂà∂ÈìæÊé•ÂèÇÊï∞ÔºåËøêË°å &lt;code&gt;create database `one-api` &lt;/code&gt; ÂàõÂª∫Êï∞ÊçÆÂ∫ì„ÄÇ&lt;/li&gt; 
   &lt;li&gt;ÁÑ∂ÂêéÂú® Service -&amp;gt; Add ServiceÔºåÈÄâÊã© GitÔºàÁ¨¨‰∏ÄÊ¨°‰ΩøÁî®ÈúÄË¶ÅÂÖàÊéàÊùÉÔºâÔºåÈÄâÊã©‰Ω† fork ÁöÑ‰ªìÂ∫ì„ÄÇ&lt;/li&gt; 
   &lt;li&gt;Deploy ‰ºöËá™Âä®ÂºÄÂßãÔºåÂÖàÂèñÊ∂à„ÄÇËøõÂÖ•‰∏ãÊñπ VariableÔºåÊ∑ªÂä†‰∏Ä‰∏™ &lt;code&gt;PORT&lt;/code&gt;ÔºåÂÄº‰∏∫ &lt;code&gt;3000&lt;/code&gt;ÔºåÂÜçÊ∑ªÂä†‰∏Ä‰∏™ &lt;code&gt;SQL_DSN&lt;/code&gt;ÔºåÂÄº‰∏∫ &lt;code&gt;&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@tcp(&amp;lt;addr&amp;gt;:&amp;lt;port&amp;gt;)/one-api&lt;/code&gt; ÔºåÁÑ∂Âêé‰øùÂ≠ò„ÄÇ Ê≥®ÊÑèÂ¶ÇÊûú‰∏çÂ°´ÂÜô &lt;code&gt;SQL_DSN&lt;/code&gt;ÔºåÊï∞ÊçÆÂ∞ÜÊó†Ê≥ïÊåÅ‰πÖÂåñÔºåÈáçÊñ∞ÈÉ®ÁΩ≤ÂêéÊï∞ÊçÆ‰ºö‰∏¢Â§±„ÄÇ&lt;/li&gt; 
   &lt;li&gt;ÈÄâÊã© Redeploy„ÄÇ&lt;/li&gt; 
   &lt;li&gt;ËøõÂÖ•‰∏ãÊñπ DomainsÔºåÈÄâÊã©‰∏Ä‰∏™ÂêàÈÄÇÁöÑÂüüÂêçÂâçÁºÄÔºåÂ¶Ç "my-one-api"ÔºåÊúÄÁªàÂüüÂêç‰∏∫ "my-one-api.zeabur.app"Ôºå‰πüÂèØ‰ª• CNAME Ëá™Â∑±ÁöÑÂüüÂêç„ÄÇ&lt;/li&gt; 
   &lt;li&gt;Á≠âÂæÖÈÉ®ÁΩ≤ÂÆåÊàêÔºåÁÇπÂáªÁîüÊàêÁöÑÂüüÂêçËøõÂÖ• One API„ÄÇ&lt;/li&gt; 
  &lt;/ol&gt; 
 &lt;/div&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;ÈÉ®ÁΩ≤Âà∞ Render&lt;/strong&gt;&lt;/summary&gt; 
 &lt;div&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Render Êèê‰æõÂÖçË¥πÈ¢ùÂ∫¶ÔºåÁªëÂç°ÂêéÂèØ‰ª•Ëøõ‰∏ÄÊ≠•ÊèêÂçáÈ¢ùÂ∫¶&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;p&gt;Render ÂèØ‰ª•Áõ¥Êé•ÈÉ®ÁΩ≤ docker ÈïúÂÉèÔºå‰∏çÈúÄË¶Å fork ‰ªìÂ∫ìÔºö&lt;a href="https://dashboard.render.com"&gt;https://dashboard.render.com&lt;/a&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/details&gt; 
&lt;h2&gt;ÈÖçÁΩÆ&lt;/h2&gt; 
&lt;p&gt;Á≥ªÁªüÊú¨Ë∫´ÂºÄÁÆ±Âç≥Áî®„ÄÇ&lt;/p&gt; 
&lt;p&gt;‰Ω†ÂèØ‰ª•ÈÄöËøáËÆæÁΩÆÁéØÂ¢ÉÂèòÈáèÊàñËÄÖÂëΩ‰ª§Ë°åÂèÇÊï∞ËøõË°åÈÖçÁΩÆ„ÄÇ&lt;/p&gt; 
&lt;p&gt;Á≠âÂà∞Á≥ªÁªüÂêØÂä®ÂêéÔºå‰ΩøÁî® &lt;code&gt;root&lt;/code&gt; Áî®Êà∑ÁôªÂΩïÁ≥ªÁªüÂπ∂ÂÅöËøõ‰∏ÄÊ≠•ÁöÑÈÖçÁΩÆ„ÄÇ&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;ÔºöÂ¶ÇÊûú‰Ω†‰∏çÁü•ÈÅìÊüê‰∏™ÈÖçÁΩÆÈ°πÁöÑÂê´‰πâÔºåÂèØ‰ª•‰∏¥Êó∂Âà†ÊéâÂÄº‰ª•ÁúãÂà∞Ëøõ‰∏ÄÊ≠•ÁöÑÊèêÁ§∫ÊñáÂ≠ó„ÄÇ&lt;/p&gt; 
&lt;h2&gt;‰ΩøÁî®ÊñπÊ≥ï&lt;/h2&gt; 
&lt;p&gt;Âú®&lt;code&gt;Ê∏†ÈÅì&lt;/code&gt;È°µÈù¢‰∏≠Ê∑ªÂä†‰Ω†ÁöÑ API KeyÔºå‰πãÂêéÂú®&lt;code&gt;‰ª§Áâå&lt;/code&gt;È°µÈù¢‰∏≠Êñ∞Â¢ûËÆøÈóÆ‰ª§Áâå„ÄÇ&lt;/p&gt; 
&lt;p&gt;‰πãÂêéÂ∞±ÂèØ‰ª•‰ΩøÁî®‰Ω†ÁöÑ‰ª§ÁâåËÆøÈóÆ One API ‰∫ÜÔºå‰ΩøÁî®ÊñπÂºè‰∏é &lt;a href="https://platform.openai.com/docs/api-reference/introduction"&gt;OpenAI API&lt;/a&gt; ‰∏ÄËá¥„ÄÇ&lt;/p&gt; 
&lt;p&gt;‰Ω†ÈúÄË¶ÅÂú®ÂêÑÁßçÁî®Âà∞ OpenAI API ÁöÑÂú∞ÊñπËÆæÁΩÆ API Base ‰∏∫‰Ω†ÁöÑ One API ÁöÑÈÉ®ÁΩ≤Âú∞ÂùÄÔºå‰æãÂ¶ÇÔºö&lt;code&gt;https://openai.justsong.cn&lt;/code&gt;ÔºåAPI Key Âàô‰∏∫‰Ω†Âú® One API ‰∏≠ÁîüÊàêÁöÑ‰ª§Áâå„ÄÇ&lt;/p&gt; 
&lt;p&gt;Ê≥®ÊÑèÔºåÂÖ∑‰ΩìÁöÑ API Base ÁöÑÊ†ºÂºèÂèñÂÜ≥‰∫é‰Ω†ÊâÄ‰ΩøÁî®ÁöÑÂÆ¢Êà∑Á´Ø„ÄÇ&lt;/p&gt; 
&lt;p&gt;‰æãÂ¶ÇÂØπ‰∫é OpenAI ÁöÑÂÆòÊñπÂ∫ìÔºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;OPENAI_API_KEY="sk-xxxxxx"
OPENAI_API_BASE="https://&amp;lt;HOST&amp;gt;:&amp;lt;PORT&amp;gt;/v1"
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-mermaid"&gt;graph LR
    A(Áî®Êà∑)
    A ---&amp;gt;|‰ΩøÁî® One API ÂàÜÂèëÁöÑ key ËøõË°åËØ∑Ê±Ç| B(One API)
    B --&amp;gt;|‰∏≠ÁªßËØ∑Ê±Ç| C(OpenAI)
    B --&amp;gt;|‰∏≠ÁªßËØ∑Ê±Ç| D(Azure)
    B --&amp;gt;|‰∏≠ÁªßËØ∑Ê±Ç| E(ÂÖ∂‰ªñ OpenAI API Ê†ºÂºè‰∏ãÊ∏∏Ê∏†ÈÅì)
    B --&amp;gt;|‰∏≠ÁªßÂπ∂‰øÆÊîπËØ∑Ê±Ç‰ΩìÂíåËøîÂõû‰Ωì| F(Èùû OpenAI API Ê†ºÂºè‰∏ãÊ∏∏Ê∏†ÈÅì)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;ÂèØ‰ª•ÈÄöËøáÂú®‰ª§ÁâåÂêéÈù¢Ê∑ªÂä†Ê∏†ÈÅì ID ÁöÑÊñπÂºèÊåáÂÆö‰ΩøÁî®Âì™‰∏Ä‰∏™Ê∏†ÈÅìÂ§ÑÁêÜÊú¨Ê¨°ËØ∑Ê±ÇÔºå‰æãÂ¶ÇÔºö&lt;code&gt;Authorization: Bearer ONE_API_KEY-CHANNEL_ID&lt;/code&gt;„ÄÇ Ê≥®ÊÑèÔºåÈúÄË¶ÅÊòØÁÆ°ÁêÜÂëòÁî®Êà∑ÂàõÂª∫ÁöÑ‰ª§ÁâåÊâçËÉΩÊåáÂÆöÊ∏†ÈÅì ID„ÄÇ&lt;/p&gt; 
&lt;p&gt;‰∏çÂä†ÁöÑËØùÂ∞Ü‰ºö‰ΩøÁî®Ë¥üËΩΩÂùáË°°ÁöÑÊñπÂºè‰ΩøÁî®Â§ö‰∏™Ê∏†ÈÅì„ÄÇ&lt;/p&gt; 
&lt;h3&gt;ÁéØÂ¢ÉÂèòÈáè&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;One API ÊîØÊåÅ‰ªé &lt;code&gt;.env&lt;/code&gt; Êñá‰ª∂‰∏≠ËØªÂèñÁéØÂ¢ÉÂèòÈáèÔºåËØ∑ÂèÇÁÖß &lt;code&gt;.env.example&lt;/code&gt; Êñá‰ª∂Ôºå‰ΩøÁî®Êó∂ËØ∑Â∞ÜÂÖ∂ÈáçÂëΩÂêç‰∏∫ &lt;code&gt;.env&lt;/code&gt;„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;REDIS_CONN_STRING&lt;/code&gt;ÔºöËÆæÁΩÆ‰πãÂêéÂ∞Ü‰ΩøÁî® Redis ‰Ωú‰∏∫ÁºìÂ≠ò‰ΩøÁî®„ÄÇ 
  &lt;ul&gt; 
   &lt;li&gt;‰æãÂ≠êÔºö&lt;code&gt;REDIS_CONN_STRING=redis://default:redispw@localhost:49153&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Â¶ÇÊûúÊï∞ÊçÆÂ∫ìËÆøÈóÆÂª∂ËøüÂæà‰ΩéÔºåÊ≤°ÊúâÂøÖË¶ÅÂêØÁî® RedisÔºåÂêØÁî®ÂêéÂèçËÄå‰ºöÂá∫Áé∞Êï∞ÊçÆÊªûÂêéÁöÑÈóÆÈ¢ò„ÄÇ&lt;/li&gt; 
   &lt;li&gt;Â¶ÇÊûúÈúÄË¶Å‰ΩøÁî®Âì®ÂÖµÊàñËÄÖÈõÜÁæ§Ê®°ÂºèÔºö 
    &lt;ul&gt; 
     &lt;li&gt;ÂàôÈúÄË¶ÅÊääËØ•ÁéØÂ¢ÉÂèòÈáèËÆæÁΩÆ‰∏∫ËäÇÁÇπÂàóË°®Ôºå‰æãÂ¶ÇÔºö&lt;code&gt;localhost:49153,localhost:49154,localhost:49155&lt;/code&gt;„ÄÇ&lt;/li&gt; 
     &lt;li&gt;Èô§Ê≠§‰πãÂ§ñËøòÈúÄË¶ÅËÆæÁΩÆ‰ª•‰∏ãÁéØÂ¢ÉÂèòÈáèÔºö 
      &lt;ul&gt; 
       &lt;li&gt;&lt;code&gt;REDIS_PASSWORD&lt;/code&gt;ÔºöRedis ÈõÜÁæ§ÊàñËÄÖÂì®ÂÖµÊ®°Âºè‰∏ãÁöÑÂØÜÁ†ÅËÆæÁΩÆ„ÄÇ&lt;/li&gt; 
       &lt;li&gt;&lt;code&gt;REDIS_MASTER_NAME&lt;/code&gt;ÔºöRedis Âì®ÂÖµÊ®°Âºè‰∏ã‰∏ªËäÇÁÇπÁöÑÂêçÁß∞„ÄÇ&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SESSION_SECRET&lt;/code&gt;ÔºöËÆæÁΩÆ‰πãÂêéÂ∞Ü‰ΩøÁî®Âõ∫ÂÆöÁöÑ‰ºöËØùÂØÜÈí•ÔºåËøôÊ†∑Á≥ªÁªüÈáçÊñ∞ÂêØÂä®ÂêéÂ∑≤ÁôªÂΩïÁî®Êà∑ÁöÑ cookie Â∞Ü‰æùÊóßÊúâÊïà„ÄÇ 
  &lt;ul&gt; 
   &lt;li&gt;‰æãÂ≠êÔºö&lt;code&gt;SESSION_SECRET=random_string&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SQL_DSN&lt;/code&gt;ÔºöËÆæÁΩÆ‰πãÂêéÂ∞Ü‰ΩøÁî®ÊåáÂÆöÊï∞ÊçÆÂ∫ìËÄåÈùû SQLiteÔºåËØ∑‰ΩøÁî® MySQL Êàñ PostgreSQL„ÄÇ 
  &lt;ul&gt; 
   &lt;li&gt;‰æãÂ≠êÔºö 
    &lt;ul&gt; 
     &lt;li&gt;MySQLÔºö&lt;code&gt;SQL_DSN=root:123456@tcp(localhost:3306)/oneapi&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;PostgreSQLÔºö&lt;code&gt;SQL_DSN=postgres://postgres:123456@localhost:5432/oneapi&lt;/code&gt;ÔºàÈÄÇÈÖç‰∏≠ÔºåÊ¨¢ËøéÂèçÈ¶àÔºâ&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Ê≥®ÊÑèÈúÄË¶ÅÊèêÂâçÂª∫Á´ãÊï∞ÊçÆÂ∫ì &lt;code&gt;oneapi&lt;/code&gt;ÔºåÊó†ÈúÄÊâãÂä®Âª∫Ë°®ÔºåÁ®ãÂ∫èÂ∞ÜËá™Âä®Âª∫Ë°®„ÄÇ&lt;/li&gt; 
   &lt;li&gt;Â¶ÇÊûú‰ΩøÁî®Êú¨Âú∞Êï∞ÊçÆÂ∫ìÔºöÈÉ®ÁΩ≤ÂëΩ‰ª§ÂèØÊ∑ªÂä† &lt;code&gt;--network="host"&lt;/code&gt; ‰ª•‰ΩøÂæóÂÆπÂô®ÂÜÖÁöÑÁ®ãÂ∫èÂèØ‰ª•ËÆøÈóÆÂà∞ÂÆø‰∏ªÊú∫‰∏äÁöÑ MySQL„ÄÇ&lt;/li&gt; 
   &lt;li&gt;Â¶ÇÊûú‰ΩøÁî®‰∫ëÊï∞ÊçÆÂ∫ìÔºöÂ¶ÇÊûú‰∫ëÊúçÂä°Âô®ÈúÄË¶ÅÈ™åËØÅË∫´‰ªΩÔºåÈúÄË¶ÅÂú®ËøûÊé•ÂèÇÊï∞‰∏≠Ê∑ªÂä† &lt;code&gt;?tls=skip-verify&lt;/code&gt;„ÄÇ&lt;/li&gt; 
   &lt;li&gt;ËØ∑Ê†πÊçÆ‰Ω†ÁöÑÊï∞ÊçÆÂ∫ìÈÖçÁΩÆ‰øÆÊîπ‰∏ãÂàóÂèÇÊï∞ÔºàÊàñËÄÖ‰øùÊåÅÈªòËÆ§ÂÄºÔºâÔºö 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;SQL_MAX_IDLE_CONNS&lt;/code&gt;ÔºöÊúÄÂ§ßÁ©∫Èó≤ËøûÊé•Êï∞ÔºåÈªòËÆ§‰∏∫ &lt;code&gt;100&lt;/code&gt;„ÄÇ&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;SQL_MAX_OPEN_CONNS&lt;/code&gt;ÔºöÊúÄÂ§ßÊâìÂºÄËøûÊé•Êï∞ÔºåÈªòËÆ§‰∏∫ &lt;code&gt;1000&lt;/code&gt;„ÄÇ 
      &lt;ul&gt; 
       &lt;li&gt;Â¶ÇÊûúÊä•Èîô &lt;code&gt;Error 1040: Too many connections&lt;/code&gt;ÔºåËØ∑ÈÄÇÂΩìÂáèÂ∞èËØ•ÂÄº„ÄÇ&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;SQL_CONN_MAX_LIFETIME&lt;/code&gt;ÔºöËøûÊé•ÁöÑÊúÄÂ§ßÁîüÂëΩÂë®ÊúüÔºåÈªòËÆ§‰∏∫ &lt;code&gt;60&lt;/code&gt;ÔºåÂçï‰ΩçÂàÜÈíü„ÄÇ&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LOG_SQL_DSN&lt;/code&gt;ÔºöËÆæÁΩÆ‰πãÂêéÂ∞Ü‰∏∫ &lt;code&gt;logs&lt;/code&gt; Ë°®‰ΩøÁî®Áã¨Á´ãÁöÑÊï∞ÊçÆÂ∫ìÔºåËØ∑‰ΩøÁî® MySQL Êàñ PostgreSQL„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;FRONTEND_BASE_URL&lt;/code&gt;ÔºöËÆæÁΩÆ‰πãÂêéÂ∞ÜÈáçÂÆöÂêëÈ°µÈù¢ËØ∑Ê±ÇÂà∞ÊåáÂÆöÁöÑÂú∞ÂùÄÔºå‰ªÖÈôê‰ªéÊúçÂä°Âô®ËÆæÁΩÆ„ÄÇ 
  &lt;ul&gt; 
   &lt;li&gt;‰æãÂ≠êÔºö&lt;code&gt;FRONTEND_BASE_URL=https://openai.justsong.cn&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MEMORY_CACHE_ENABLED&lt;/code&gt;ÔºöÂêØÁî®ÂÜÖÂ≠òÁºìÂ≠òÔºå‰ºöÂØºËá¥Áî®Êà∑È¢ùÂ∫¶ÁöÑÊõ¥Êñ∞Â≠òÂú®‰∏ÄÂÆöÁöÑÂª∂ËøüÔºåÂèØÈÄâÂÄº‰∏∫ &lt;code&gt;true&lt;/code&gt; Âíå &lt;code&gt;false&lt;/code&gt;ÔºåÊú™ËÆæÁΩÆÂàôÈªòËÆ§‰∏∫ &lt;code&gt;false&lt;/code&gt;„ÄÇ 
  &lt;ul&gt; 
   &lt;li&gt;‰æãÂ≠êÔºö&lt;code&gt;MEMORY_CACHE_ENABLED=true&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SYNC_FREQUENCY&lt;/code&gt;ÔºöÂú®ÂêØÁî®ÁºìÂ≠òÁöÑÊÉÖÂÜµ‰∏ã‰∏éÊï∞ÊçÆÂ∫ìÂêåÊ≠•ÈÖçÁΩÆÁöÑÈ¢ëÁéáÔºåÂçï‰Ωç‰∏∫ÁßíÔºåÈªòËÆ§‰∏∫ &lt;code&gt;600&lt;/code&gt; Áßí„ÄÇ 
  &lt;ul&gt; 
   &lt;li&gt;‰æãÂ≠êÔºö&lt;code&gt;SYNC_FREQUENCY=60&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NODE_TYPE&lt;/code&gt;ÔºöËÆæÁΩÆ‰πãÂêéÂ∞ÜÊåáÂÆöËäÇÁÇπÁ±ªÂûãÔºåÂèØÈÄâÂÄº‰∏∫ &lt;code&gt;master&lt;/code&gt; Âíå &lt;code&gt;slave&lt;/code&gt;ÔºåÊú™ËÆæÁΩÆÂàôÈªòËÆ§‰∏∫ &lt;code&gt;master&lt;/code&gt;„ÄÇ 
  &lt;ul&gt; 
   &lt;li&gt;‰æãÂ≠êÔºö&lt;code&gt;NODE_TYPE=slave&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CHANNEL_UPDATE_FREQUENCY&lt;/code&gt;ÔºöËÆæÁΩÆ‰πãÂêéÂ∞ÜÂÆöÊúüÊõ¥Êñ∞Ê∏†ÈÅì‰ΩôÈ¢ùÔºåÂçï‰Ωç‰∏∫ÂàÜÈíüÔºåÊú™ËÆæÁΩÆÂàô‰∏çËøõË°åÊõ¥Êñ∞„ÄÇ 
  &lt;ul&gt; 
   &lt;li&gt;‰æãÂ≠êÔºö&lt;code&gt;CHANNEL_UPDATE_FREQUENCY=1440&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CHANNEL_TEST_FREQUENCY&lt;/code&gt;ÔºöËÆæÁΩÆ‰πãÂêéÂ∞ÜÂÆöÊúüÊ£ÄÊü•Ê∏†ÈÅìÔºåÂçï‰Ωç‰∏∫ÂàÜÈíüÔºåÊú™ËÆæÁΩÆÂàô‰∏çËøõË°åÊ£ÄÊü•„ÄÇ +‰æãÂ≠êÔºö&lt;code&gt;CHANNEL_TEST_FREQUENCY=1440&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POLLING_INTERVAL&lt;/code&gt;ÔºöÊâπÈáèÊõ¥Êñ∞Ê∏†ÈÅì‰ΩôÈ¢ù‰ª•ÂèäÊµãËØïÂèØÁî®ÊÄßÊó∂ÁöÑËØ∑Ê±ÇÈó¥ÈöîÔºåÂçï‰Ωç‰∏∫ÁßíÔºåÈªòËÆ§Êó†Èó¥Èöî„ÄÇ 
  &lt;ul&gt; 
   &lt;li&gt;‰æãÂ≠êÔºö&lt;code&gt;POLLING_INTERVAL=5&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BATCH_UPDATE_ENABLED&lt;/code&gt;ÔºöÂêØÁî®Êï∞ÊçÆÂ∫ìÊâπÈáèÊõ¥Êñ∞ËÅöÂêàÔºå‰ºöÂØºËá¥Áî®Êà∑È¢ùÂ∫¶ÁöÑÊõ¥Êñ∞Â≠òÂú®‰∏ÄÂÆöÁöÑÂª∂ËøüÂèØÈÄâÂÄº‰∏∫ &lt;code&gt;true&lt;/code&gt; Âíå &lt;code&gt;false&lt;/code&gt;ÔºåÊú™ËÆæÁΩÆÂàôÈªòËÆ§‰∏∫ &lt;code&gt;false&lt;/code&gt;„ÄÇ 
  &lt;ul&gt; 
   &lt;li&gt;‰æãÂ≠êÔºö&lt;code&gt;BATCH_UPDATE_ENABLED=true&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Â¶ÇÊûú‰Ω†ÈÅáÂà∞‰∫ÜÊï∞ÊçÆÂ∫ìËøûÊé•Êï∞ËøáÂ§öÁöÑÈóÆÈ¢òÔºåÂèØ‰ª•Â∞ùËØïÂêØÁî®ËØ•ÈÄâÈ°π„ÄÇ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BATCH_UPDATE_INTERVAL=5&lt;/code&gt;ÔºöÊâπÈáèÊõ¥Êñ∞ËÅöÂêàÁöÑÊó∂Èó¥Èó¥ÈöîÔºåÂçï‰Ωç‰∏∫ÁßíÔºåÈªòËÆ§‰∏∫ &lt;code&gt;5&lt;/code&gt;„ÄÇ 
  &lt;ul&gt; 
   &lt;li&gt;‰æãÂ≠êÔºö&lt;code&gt;BATCH_UPDATE_INTERVAL=5&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ËØ∑Ê±ÇÈ¢ëÁéáÈôêÂà∂Ôºö 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;GLOBAL_API_RATE_LIMIT&lt;/code&gt;ÔºöÂÖ®Â±Ä API ÈÄüÁéáÈôêÂà∂ÔºàÈô§‰∏≠ÁªßËØ∑Ê±ÇÂ§ñÔºâÔºåÂçï ip ‰∏âÂàÜÈíüÂÜÖÁöÑÊúÄÂ§ßËØ∑Ê±ÇÊï∞ÔºåÈªòËÆ§‰∏∫ &lt;code&gt;180&lt;/code&gt;„ÄÇ&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;GLOBAL_WEB_RATE_LIMIT&lt;/code&gt;ÔºöÂÖ®Â±Ä Web ÈÄüÁéáÈôêÂà∂ÔºåÂçï ip ‰∏âÂàÜÈíüÂÜÖÁöÑÊúÄÂ§ßËØ∑Ê±ÇÊï∞ÔºåÈªòËÆ§‰∏∫ &lt;code&gt;60&lt;/code&gt;„ÄÇ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ÁºñÁ†ÅÂô®ÁºìÂ≠òËÆæÁΩÆÔºö 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;TIKTOKEN_CACHE_DIR&lt;/code&gt;ÔºöÈªòËÆ§Á®ãÂ∫èÂêØÂä®Êó∂‰ºöËÅîÁΩë‰∏ãËΩΩ‰∏Ä‰∫õÈÄöÁî®ÁöÑËØçÂÖÉÁöÑÁºñÁ†ÅÔºåÂ¶ÇÔºö&lt;code&gt;gpt-3.5-turbo&lt;/code&gt;ÔºåÂú®‰∏Ä‰∫õÁΩëÁªúÁéØÂ¢É‰∏çÁ®≥ÂÆöÔºåÊàñËÄÖÁ¶ªÁ∫øÊÉÖÂÜµÔºåÂèØËÉΩ‰ºöÂØºËá¥ÂêØÂä®ÊúâÈóÆÈ¢òÔºåÂèØ‰ª•ÈÖçÁΩÆÊ≠§ÁõÆÂΩïÁºìÂ≠òÊï∞ÊçÆÔºåÂèØËøÅÁßªÂà∞Á¶ªÁ∫øÁéØÂ¢É„ÄÇ&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;DATA_GYM_CACHE_DIR&lt;/code&gt;ÔºöÁõÆÂâçËØ•ÈÖçÁΩÆ‰ΩúÁî®‰∏é &lt;code&gt;TIKTOKEN_CACHE_DIR&lt;/code&gt; ‰∏ÄËá¥Ôºå‰ΩÜÊòØ‰ºòÂÖàÁ∫ßÊ≤°ÊúâÂÆÉÈ´ò„ÄÇ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;RELAY_TIMEOUT&lt;/code&gt;Ôºö‰∏≠ÁªßË∂ÖÊó∂ËÆæÁΩÆÔºåÂçï‰Ωç‰∏∫ÁßíÔºåÈªòËÆ§‰∏çËÆæÁΩÆË∂ÖÊó∂Êó∂Èó¥„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;RELAY_PROXY&lt;/code&gt;ÔºöËÆæÁΩÆÂêé‰ΩøÁî®ËØ•‰ª£ÁêÜÊù•ËØ∑Ê±Ç API„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;USER_CONTENT_REQUEST_TIMEOUT&lt;/code&gt;ÔºöÁî®Êà∑‰∏ä‰º†ÂÜÖÂÆπ‰∏ãËΩΩË∂ÖÊó∂Êó∂Èó¥ÔºåÂçï‰Ωç‰∏∫Áßí„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;USER_CONTENT_REQUEST_PROXY&lt;/code&gt;ÔºöËÆæÁΩÆÂêé‰ΩøÁî®ËØ•‰ª£ÁêÜÊù•ËØ∑Ê±ÇÁî®Êà∑‰∏ä‰º†ÁöÑÂÜÖÂÆπÔºå‰æãÂ¶ÇÂõæÁâá„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SQLITE_BUSY_TIMEOUT&lt;/code&gt;ÔºöSQLite ÈîÅÁ≠âÂæÖË∂ÖÊó∂ËÆæÁΩÆÔºåÂçï‰Ωç‰∏∫ÊØ´ÁßíÔºåÈªòËÆ§ &lt;code&gt;3000&lt;/code&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GEMINI_SAFETY_SETTING&lt;/code&gt;ÔºöGemini ÁöÑÂÆâÂÖ®ËÆæÁΩÆÔºåÈªòËÆ§ &lt;code&gt;BLOCK_NONE&lt;/code&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GEMINI_VERSION&lt;/code&gt;ÔºöOne API ÊâÄ‰ΩøÁî®ÁöÑ Gemini ÁâàÊú¨ÔºåÈªòËÆ§‰∏∫ &lt;code&gt;v1&lt;/code&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;THEME&lt;/code&gt;ÔºöÁ≥ªÁªüÁöÑ‰∏ªÈ¢òËÆæÁΩÆÔºåÈªòËÆ§‰∏∫ &lt;code&gt;default&lt;/code&gt;ÔºåÂÖ∑‰ΩìÂèØÈÄâÂÄºÂèÇËÄÉ&lt;a href="https://raw.githubusercontent.com/songquanpeng/one-api/main/web/README.md"&gt;Ê≠§Â§Ñ&lt;/a&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ENABLE_METRIC&lt;/code&gt;ÔºöÊòØÂê¶Ê†πÊçÆËØ∑Ê±ÇÊàêÂäüÁéáÁ¶ÅÁî®Ê∏†ÈÅìÔºåÈªòËÆ§‰∏çÂºÄÂêØÔºåÂèØÈÄâÂÄº‰∏∫ &lt;code&gt;true&lt;/code&gt; Âíå &lt;code&gt;false&lt;/code&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;METRIC_QUEUE_SIZE&lt;/code&gt;ÔºöËØ∑Ê±ÇÊàêÂäüÁéáÁªüËÆ°ÈòüÂàóÂ§ßÂ∞èÔºåÈªòËÆ§‰∏∫ &lt;code&gt;10&lt;/code&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;METRIC_SUCCESS_RATE_THRESHOLD&lt;/code&gt;ÔºöËØ∑Ê±ÇÊàêÂäüÁéáÈòàÂÄºÔºåÈªòËÆ§‰∏∫ &lt;code&gt;0.8&lt;/code&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;INITIAL_ROOT_TOKEN&lt;/code&gt;ÔºöÂ¶ÇÊûúËÆæÁΩÆ‰∫ÜËØ•ÂÄºÔºåÂàôÂú®Á≥ªÁªüÈ¶ñÊ¨°ÂêØÂä®Êó∂‰ºöËá™Âä®ÂàõÂª∫‰∏Ä‰∏™ÂÄº‰∏∫ËØ•ÁéØÂ¢ÉÂèòÈáèÂÄºÁöÑ root Áî®Êà∑‰ª§Áâå„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;INITIAL_ROOT_ACCESS_TOKEN&lt;/code&gt;ÔºöÂ¶ÇÊûúËÆæÁΩÆ‰∫ÜËØ•ÂÄºÔºåÂàôÂú®Á≥ªÁªüÈ¶ñÊ¨°ÂêØÂä®Êó∂‰ºöËá™Âä®ÂàõÂª∫‰∏Ä‰∏™ÂÄº‰∏∫ËØ•ÁéØÂ¢ÉÂèòÈáèÁöÑ root Áî®Êà∑ÂàõÂª∫Á≥ªÁªüÁÆ°ÁêÜ‰ª§Áâå„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ENFORCE_INCLUDE_USAGE&lt;/code&gt;ÔºöÊòØÂê¶Âº∫Âà∂Âú® stream Ê®°Âûã‰∏ãËøîÂõû usageÔºåÈªòËÆ§‰∏çÂºÄÂêØÔºåÂèØÈÄâÂÄº‰∏∫ &lt;code&gt;true&lt;/code&gt; Âíå &lt;code&gt;false&lt;/code&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;TEST_PROMPT&lt;/code&gt;ÔºöÊµãËØïÊ®°ÂûãÊó∂ÁöÑÁî®Êà∑ promptÔºåÈªòËÆ§‰∏∫ &lt;code&gt;Print your model name exactly and do not output without any other text.&lt;/code&gt;„ÄÇ&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;ÂëΩ‰ª§Ë°åÂèÇÊï∞&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;--port &amp;lt;port_number&amp;gt;&lt;/code&gt;: ÊåáÂÆöÊúçÂä°Âô®ÁõëÂê¨ÁöÑÁ´ØÂè£Âè∑ÔºåÈªòËÆ§‰∏∫ &lt;code&gt;3000&lt;/code&gt;„ÄÇ 
  &lt;ul&gt; 
   &lt;li&gt;‰æãÂ≠êÔºö&lt;code&gt;--port 3000&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--log-dir &amp;lt;log_dir&amp;gt;&lt;/code&gt;: ÊåáÂÆöÊó•ÂøóÊñá‰ª∂Â§πÔºåÂ¶ÇÊûúÊ≤°ÊúâËÆæÁΩÆÔºåÈªòËÆ§‰øùÂ≠òËá≥Â∑•‰ΩúÁõÆÂΩïÁöÑ &lt;code&gt;logs&lt;/code&gt; Êñá‰ª∂Â§π‰∏ã„ÄÇ 
  &lt;ul&gt; 
   &lt;li&gt;‰æãÂ≠êÔºö&lt;code&gt;--log-dir ./logs&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--version&lt;/code&gt;: ÊâìÂç∞Á≥ªÁªüÁâàÊú¨Âè∑Âπ∂ÈÄÄÂá∫„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--help&lt;/code&gt;: Êü•ÁúãÂëΩ‰ª§ÁöÑ‰ΩøÁî®Â∏ÆÂä©ÂíåÂèÇÊï∞ËØ¥Êòé„ÄÇ&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;ÊºîÁ§∫&lt;/h2&gt; 
&lt;h3&gt;Âú®Á∫øÊºîÁ§∫&lt;/h3&gt; 
&lt;p&gt;Ê≥®ÊÑèÔºåËØ•ÊºîÁ§∫Á´ô‰∏çÊèê‰æõÂØπÂ§ñÊúçÂä°Ôºö &lt;a href="https://openai.justsong.cn"&gt;https://openai.justsong.cn&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Êà™ÂõæÂ±ïÁ§∫&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/39998050/233837954-ae6683aa-5c4f-429f-a949-6645a83c9490.png" alt="channel"&gt; &lt;img src="https://user-images.githubusercontent.com/39998050/233837971-dab488b7-6d96-43af-b640-a168e8d1c9bf.png" alt="token"&gt;&lt;/p&gt; 
&lt;h2&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;È¢ùÂ∫¶ÊòØ‰ªÄ‰πàÔºüÊÄé‰πàËÆ°ÁÆóÁöÑÔºüOne API ÁöÑÈ¢ùÂ∫¶ËÆ°ÁÆóÊúâÈóÆÈ¢òÔºü 
  &lt;ul&gt; 
   &lt;li&gt;È¢ùÂ∫¶ = ÂàÜÁªÑÂÄçÁéá * Ê®°ÂûãÂÄçÁéá * ÔºàÊèêÁ§∫ token Êï∞ + Ë°•ÂÖ® token Êï∞ * Ë°•ÂÖ®ÂÄçÁéáÔºâ&lt;/li&gt; 
   &lt;li&gt;ÂÖ∂‰∏≠Ë°•ÂÖ®ÂÄçÁéáÂØπ‰∫é GPT3.5 Âõ∫ÂÆö‰∏∫ 1.33ÔºåGPT4 ‰∏∫ 2Ôºå‰∏éÂÆòÊñπ‰øùÊåÅ‰∏ÄËá¥„ÄÇ&lt;/li&gt; 
   &lt;li&gt;Â¶ÇÊûúÊòØÈùûÊµÅÊ®°ÂºèÔºåÂÆòÊñπÊé•Âè£‰ºöËøîÂõûÊ∂àËÄóÁöÑÊÄª tokenÔºå‰ΩÜÊòØ‰Ω†Ë¶ÅÊ≥®ÊÑèÊèêÁ§∫ÂíåË°•ÂÖ®ÁöÑÊ∂àËÄóÂÄçÁéá‰∏ç‰∏ÄÊ†∑„ÄÇ&lt;/li&gt; 
   &lt;li&gt;Ê≥®ÊÑèÔºåOne API ÁöÑÈªòËÆ§ÂÄçÁéáÂ∞±ÊòØÂÆòÊñπÂÄçÁéáÔºåÊòØÂ∑≤ÁªèË∞ÉÊï¥ËøáÁöÑ„ÄÇ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Ë¥¶Êà∑È¢ùÂ∫¶Ë∂≥Â§ü‰∏∫‰ªÄ‰πàÊèêÁ§∫È¢ùÂ∫¶‰∏çË∂≥Ôºü 
  &lt;ul&gt; 
   &lt;li&gt;ËØ∑Ê£ÄÊü•‰Ω†ÁöÑ‰ª§ÁâåÈ¢ùÂ∫¶ÊòØÂê¶Ë∂≥Â§üÔºåËøô‰∏™ÂíåË¥¶Êà∑È¢ùÂ∫¶ÊòØÂàÜÂºÄÁöÑ„ÄÇ&lt;/li&gt; 
   &lt;li&gt;‰ª§ÁâåÈ¢ùÂ∫¶‰ªÖ‰æõÁî®Êà∑ËÆæÁΩÆÊúÄÂ§ß‰ΩøÁî®ÈáèÔºåÁî®Êà∑ÂèØËá™Áî±ËÆæÁΩÆ„ÄÇ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ÊèêÁ§∫Êó†ÂèØÁî®Ê∏†ÈÅìÔºü 
  &lt;ul&gt; 
   &lt;li&gt;ËØ∑Ê£ÄÊü•ÁöÑÁî®Êà∑ÂàÜÁªÑÂíåÊ∏†ÈÅìÂàÜÁªÑËÆæÁΩÆ„ÄÇ&lt;/li&gt; 
   &lt;li&gt;‰ª•ÂèäÊ∏†ÈÅìÁöÑÊ®°ÂûãËÆæÁΩÆ„ÄÇ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Ê∏†ÈÅìÊµãËØïÊä•ÈîôÔºö&lt;code&gt;invalid character '&amp;lt;' looking for beginning of value&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;ËøôÊòØÂõ†‰∏∫ËøîÂõûÂÄº‰∏çÊòØÂêàÊ≥ïÁöÑ JSONÔºåËÄåÊòØ‰∏Ä‰∏™ HTML È°µÈù¢„ÄÇ&lt;/li&gt; 
   &lt;li&gt;Â§ßÊ¶ÇÁéáÊòØ‰Ω†ÁöÑÈÉ®ÁΩ≤Á´ôÁöÑ IP Êàñ‰ª£ÁêÜÁöÑËäÇÁÇπË¢´ CloudFlare Â∞ÅÁ¶Å‰∫Ü„ÄÇ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ChatGPT Next Web Êä•ÈîôÔºö&lt;code&gt;Failed to fetch&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;ÈÉ®ÁΩ≤ÁöÑÊó∂ÂÄô‰∏çË¶ÅËÆæÁΩÆ &lt;code&gt;BASE_URL&lt;/code&gt;„ÄÇ&lt;/li&gt; 
   &lt;li&gt;Ê£ÄÊü•‰Ω†ÁöÑÊé•Âè£Âú∞ÂùÄÂíå API Key ÊúâÊ≤°ÊúâÂ°´ÂØπ„ÄÇ&lt;/li&gt; 
   &lt;li&gt;Ê£ÄÊü•ÊòØÂê¶ÂêØÁî®‰∫Ü HTTPSÔºåÊµèËßàÂô®‰ºöÊã¶Êà™ HTTPS ÂüüÂêç‰∏ãÁöÑ HTTP ËØ∑Ê±Ç„ÄÇ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Êä•ÈîôÔºö&lt;code&gt;ÂΩìÂâçÂàÜÁªÑË¥üËΩΩÂ∑≤È•±ÂíåÔºåËØ∑Á®çÂêéÂÜçËØï&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;‰∏äÊ∏∏Ê∏†ÈÅì 429 ‰∫Ü„ÄÇ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ÂçáÁ∫ß‰πãÂêéÊàëÁöÑÊï∞ÊçÆ‰ºö‰∏¢Â§±ÂêóÔºü 
  &lt;ul&gt; 
   &lt;li&gt;Â¶ÇÊûú‰ΩøÁî® MySQLÔºå‰∏ç‰ºö„ÄÇ&lt;/li&gt; 
   &lt;li&gt;Â¶ÇÊûú‰ΩøÁî® SQLiteÔºåÈúÄË¶ÅÊåâÁÖßÊàëÊâÄÁªôÁöÑÈÉ®ÁΩ≤ÂëΩ‰ª§ÊåÇËΩΩ volume ÊåÅ‰πÖÂåñ one-api.db Êï∞ÊçÆÂ∫ìÊñá‰ª∂ÔºåÂê¶ÂàôÂÆπÂô®ÈáçÂêØÂêéÊï∞ÊçÆ‰ºö‰∏¢Â§±„ÄÇ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ÂçáÁ∫ß‰πãÂâçÊï∞ÊçÆÂ∫ìÈúÄË¶ÅÂÅöÂèòÊõ¥ÂêóÔºü 
  &lt;ul&gt; 
   &lt;li&gt;‰∏ÄËà¨ÊÉÖÂÜµ‰∏ã‰∏çÈúÄË¶ÅÔºåÁ≥ªÁªüÂ∞ÜÂú®ÂàùÂßãÂåñÁöÑÊó∂ÂÄôËá™Âä®Ë∞ÉÊï¥„ÄÇ&lt;/li&gt; 
   &lt;li&gt;Â¶ÇÊûúÈúÄË¶ÅÁöÑËØùÔºåÊàë‰ºöÂú®Êõ¥Êñ∞Êó•Âøó‰∏≠ËØ¥ÊòéÔºåÂπ∂ÁªôÂá∫ËÑöÊú¨„ÄÇ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ÊâãÂä®‰øÆÊîπÊï∞ÊçÆÂ∫ìÂêéÊä•ÈîôÔºö&lt;code&gt;Êï∞ÊçÆÂ∫ì‰∏ÄËá¥ÊÄßÂ∑≤Ë¢´Á†¥ÂùèÔºåËØ∑ËÅîÁ≥ªÁÆ°ÁêÜÂëò&lt;/code&gt;Ôºü 
  &lt;ul&gt; 
   &lt;li&gt;ËøôÊòØÊ£ÄÊµãÂà∞ ability Ë°®ÈáåÊúâ‰∫õËÆ∞ÂΩïÁöÑÊ∏†ÈÅì id ÊòØ‰∏çÂ≠òÂú®ÁöÑÔºåËøôÂ§ßÊ¶ÇÁéáÊòØÂõ†‰∏∫‰Ω†Âà†‰∫Ü channel Ë°®ÈáåÁöÑËÆ∞ÂΩï‰ΩÜÊòØÊ≤°ÊúâÂêåÊ≠•Âú® ability Ë°®ÈáåÊ∏ÖÁêÜÊó†ÊïàÁöÑÊ∏†ÈÅì„ÄÇ&lt;/li&gt; 
   &lt;li&gt;ÂØπ‰∫éÊØè‰∏Ä‰∏™Ê∏†ÈÅìÔºåÂÖ∂ÊâÄÊîØÊåÅÁöÑÊ®°ÂûãÈÉΩÈúÄË¶ÅÊúâ‰∏Ä‰∏™‰∏ìÈó®ÁöÑ ability Ë°®ÁöÑËÆ∞ÂΩïÔºåË°®Á§∫ËØ•Ê∏†ÈÅìÊîØÊåÅËØ•Ê®°Âûã„ÄÇ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Áõ∏ÂÖ≥È°πÁõÆ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/labring/FastGPT"&gt;FastGPT&lt;/a&gt;: Âü∫‰∫é LLM Â§ßËØ≠Ë®ÄÊ®°ÂûãÁöÑÁü•ËØÜÂ∫ìÈóÆÁ≠îÁ≥ªÁªü&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Yidadaa/ChatGPT-Next-Web"&gt;ChatGPT Next Web&lt;/a&gt;: ‰∏ÄÈîÆÊã•Êúâ‰Ω†Ëá™Â∑±ÁöÑË∑®Âπ≥Âè∞ ChatGPT Â∫îÁî®&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VisActor/VChart"&gt;VChart&lt;/a&gt;: ‰∏çÂè™ÊòØÂºÄÁÆ±Âç≥Áî®ÁöÑÂ§öÁ´ØÂõæË°®Â∫ìÔºåÊõ¥ÊòØÁîüÂä®ÁÅµÊ¥ªÁöÑÊï∞ÊçÆÊïÖ‰∫ãËÆ≤Ëø∞ËÄÖ„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VisActor/VMind"&gt;VMind&lt;/a&gt;: ‰∏ç‰ªÖËá™Âä®ÔºåËøòÂæàÊô∫ËÉΩ„ÄÇÂºÄÊ∫êÊô∫ËÉΩÂèØËßÜÂåñËß£ÂÜ≥ÊñπÊ°à„ÄÇ&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CherryHQ/cherry-studio"&gt;CherryStudio&lt;/a&gt;: ÂÖ®Âπ≥Âè∞ÊîØÊåÅÁöÑAIÂÆ¢Êà∑Á´Ø, Â§öÊúçÂä°ÂïÜÈõÜÊàêÁÆ°ÁêÜ„ÄÅÊú¨Âú∞Áü•ËØÜÂ∫ìÊîØÊåÅ„ÄÇ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ê≥®ÊÑè&lt;/h2&gt; 
&lt;p&gt;Êú¨È°πÁõÆ‰ΩøÁî® MIT ÂçèËÆÆËøõË°åÂºÄÊ∫êÔºå&lt;strong&gt;Âú®Ê≠§Âü∫Á°Ä‰∏ä&lt;/strong&gt;ÔºåÂøÖÈ°ªÂú®È°µÈù¢Â∫ïÈÉ®‰øùÁïôÁΩ≤Âêç‰ª•ÂèäÊåáÂêëÊú¨È°πÁõÆÁöÑÈìæÊé•„ÄÇÂ¶ÇÊûú‰∏çÊÉ≥‰øùÁïôÁΩ≤ÂêçÔºåÂøÖÈ°ªÈ¶ñÂÖàËé∑ÂæóÊéàÊùÉ„ÄÇ&lt;/p&gt; 
&lt;p&gt;ÂêåÊ†∑ÈÄÇÁî®‰∫éÂü∫‰∫éÊú¨È°πÁõÆÁöÑ‰∫åÂºÄÈ°πÁõÆ„ÄÇ&lt;/p&gt; 
&lt;p&gt;‰æùÊçÆ MIT ÂçèËÆÆÔºå‰ΩøÁî®ËÄÖÈúÄËá™Ë°åÊâøÊãÖ‰ΩøÁî®Êú¨È°πÁõÆÁöÑÈ£éÈô©‰∏éË¥£‰ªªÔºåÊú¨ÂºÄÊ∫êÈ°πÁõÆÂºÄÂèëËÄÖ‰∏éÊ≠§Êó†ÂÖ≥„ÄÇ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hakimel/reveal.js</title>
      <link>https://github.com/hakimel/reveal.js</link>
      <description>&lt;p&gt;The HTML Presentation Framework&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://revealjs.com"&gt; &lt;img src="https://hakim-static.s3.amazonaws.com/reveal-js/logo/v1/reveal-black-text-sticker.png" alt="reveal.js" width="500"&gt; &lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;a href="https://github.com/hakimel/reveal.js/actions"&gt;&lt;img src="https://github.com/hakimel/reveal.js/workflows/tests/badge.svg?sanitize=true"&gt;&lt;/a&gt; &lt;a href="https://slides.com/"&gt;&lt;img src="https://static.slid.es/images/slides-github-banner-320x40.png?1" alt="Slides" width="160" height="20"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;reveal.js is an open source HTML presentation framework. It enables anyone with a web browser to create beautiful presentations for free. Check out the live demo at &lt;a href="https://revealjs.com/"&gt;revealjs.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The framework comes with a powerful feature set including &lt;a href="https://revealjs.com/vertical-slides/"&gt;nested slides&lt;/a&gt;, &lt;a href="https://revealjs.com/markdown/"&gt;Markdown support&lt;/a&gt;, &lt;a href="https://revealjs.com/auto-animate/"&gt;Auto-Animate&lt;/a&gt;, &lt;a href="https://revealjs.com/pdf-export/"&gt;PDF export&lt;/a&gt;, &lt;a href="https://revealjs.com/speaker-view/"&gt;speaker notes&lt;/a&gt;, &lt;a href="https://revealjs.com/math/"&gt;LaTeX typesetting&lt;/a&gt;, &lt;a href="https://revealjs.com/code/"&gt;syntax highlighted code&lt;/a&gt; and an &lt;a href="https://revealjs.com/api/"&gt;extensive API&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Want to create reveal.js presentation in a graphical editor? Try &lt;a href="https://slides.com"&gt;https://slides.com&lt;/a&gt;. It's made by the same people behind reveal.js.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Getting started&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üöÄ &lt;a href="https://revealjs.com/installation"&gt;Install reveal.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üëÄ &lt;a href="https://revealjs.com/demo"&gt;View the demo presentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üìñ &lt;a href="https://revealjs.com/markup/"&gt;Read the documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üñå &lt;a href="https://slides.com/"&gt;Try the visual editor for reveal.js at Slides.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé¨ &lt;a href="https://revealjs.com/course"&gt;Watch the reveal.js video course (paid)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;div align="center"&gt;
  MIT licensed | Copyright ¬© 2011-2024 Hakim El Hattab, https://hakim.se 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>HeyPuter/puter</title>
      <link>https://github.com/HeyPuter/puter</link>
      <description>&lt;p&gt;üåê The Internet OS! Free, Open-Source, and Self-Hostable.&lt;/p&gt;&lt;hr&gt;&lt;h3 align="center"&gt;&lt;img width="80" alt="Puter.com, The Personal Cloud Computer: All your files, apps, and games in one place accessible from anywhere at any time." src="https://assets.puter.site/puter-logo.png"&gt;&lt;/h3&gt; 
&lt;h3 align="center"&gt;The Internet OS! Free, Open-Source, and Self-Hostable.&lt;/h3&gt; 
&lt;p align="center"&gt; &lt;a href="https://puter.com/?ref=github.com"&gt;&lt;strong&gt;¬´ LIVE DEMO ¬ª&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href="https://puter.com/?ref=github.com"&gt;Puter.com&lt;/a&gt; ¬∑ &lt;a href="https://puter.com/app/app-center"&gt;App Store&lt;/a&gt; ¬∑ &lt;a href="https://developer.puter.com" target="_blank"&gt;Developers&lt;/a&gt; ¬∑ &lt;a href="https://github.com/heyputer/puter-cli" target="_blank"&gt;CLI&lt;/a&gt; ¬∑ &lt;a href="https://discord.com/invite/PQcx7Teh8u"&gt;Discord&lt;/a&gt; ¬∑ &lt;a href="https://reddit.com/r/puter"&gt;Reddit&lt;/a&gt; ¬∑ &lt;a href="https://twitter.com/HeyPuter"&gt;X&lt;/a&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt;&lt;img width="800" style="border-radius:5px;" alt="screenshot" src="https://assets.puter.site/puter.com-screenshot-3.webp"&gt;&lt;/h3&gt; 
&lt;br&gt; 
&lt;h2&gt;Puter&lt;/h2&gt; 
&lt;p&gt;Puter is an advanced, open-source internet operating system designed to be feature-rich, exceptionally fast, and highly extensible. Puter can be used as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A privacy-first personal cloud to keep all your files, apps, and games in one secure place, accessible from anywhere at any time.&lt;/li&gt; 
 &lt;li&gt;A platform for building and publishing websites, web apps, and games.&lt;/li&gt; 
 &lt;li&gt;An alternative to Dropbox, Google Drive, OneDrive, etc. with a fresh interface and powerful features.&lt;/li&gt; 
 &lt;li&gt;A remote desktop environment for servers and workstations.&lt;/li&gt; 
 &lt;li&gt;A friendly, open-source project and community to learn about web development, cloud computing, distributed systems, and much more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;üíª Local Development&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/HeyPuter/puter
cd puter
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;‚Üí&lt;/strong&gt; This should launch Puter at &lt;font color="red"&gt; &lt;a href="http://puter.localhost:4100"&gt;http://puter.localhost:4100&lt;/a&gt; (or the next available port). &lt;/font&gt;&lt;/p&gt; 
&lt;p&gt;If this does not work, see &lt;a href="https://raw.githubusercontent.com/HeyPuter/puter/main/doc/self-hosters/first-run-issues.md"&gt;First Run Issues&lt;/a&gt; for troubleshooting steps.&lt;/p&gt; 
&lt;br&gt; 
&lt;h3&gt;üê≥ Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mkdir puter &amp;amp;&amp;amp; cd puter &amp;amp;&amp;amp; mkdir -p puter/config puter/data &amp;amp;&amp;amp; sudo chown -R 1000:1000 puter &amp;amp;&amp;amp; docker run --rm -p 4100:4100 -v `pwd`/puter/config:/etc/puter -v `pwd`/puter/data:/var/puter  ghcr.io/heyputer/puter
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;‚Üí&lt;/strong&gt; This should launch Puter at &lt;font color="red"&gt; &lt;a href="http://puter.localhost:4100"&gt;http://puter.localhost:4100&lt;/a&gt; (or the next available port). &lt;/font&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h3&gt;üêô Docker Compose&lt;/h3&gt; 
&lt;h4&gt;Linux/macOS&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mkdir -p puter/config puter/data
sudo chown -R 1000:1000 puter
wget https://raw.githubusercontent.com/HeyPuter/puter/main/docker-compose.yml
docker compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;‚Üí&lt;/strong&gt; This should be available at &lt;font color="red"&gt; &lt;a href="http://puter.localhost:4100"&gt;http://puter.localhost:4100&lt;/a&gt; (or the next available port). &lt;/font&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h4&gt;Windows&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;mkdir -p puter
cd puter
New-Item -Path "puter\config" -ItemType Directory -Force
New-Item -Path "puter\data" -ItemType Directory -Force
Invoke-WebRequest -Uri "https://raw.githubusercontent.com/HeyPuter/puter/main/docker-compose.yml" -OutFile "docker-compose.yml"
docker compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;‚Üí&lt;/strong&gt; This should launch Puter at &lt;font color="red"&gt; &lt;a href="http://puter.localhost:4100"&gt;http://puter.localhost:4100&lt;/a&gt; (or the next available port). &lt;/font&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h3&gt;üöÄ Self-Hosting&lt;/h3&gt; 
&lt;p&gt;For detailed guides on self-hosting Puter, including configuration options and best practices, see our &lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/self-hosters/instructions.md"&gt;Self-Hosting Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;br&gt; 
&lt;h3&gt;‚òÅÔ∏è Puter.com&lt;/h3&gt; 
&lt;p&gt;Puter is available as a hosted service at &lt;a href="https://puter.com"&gt;&lt;strong&gt;puter.com&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Operating Systems:&lt;/strong&gt; Linux, macOS, Windows&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RAM:&lt;/strong&gt; 2GB minimum (4GB recommended)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Disk Space:&lt;/strong&gt; 1GB free space&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js:&lt;/strong&gt; Version 16+ (Version 23+ recommended)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;npm:&lt;/strong&gt; Latest stable version&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Connect with the maintainers and community through these channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bug report or feature request? Please &lt;a href="https://github.com/HeyPuter/puter/issues/new/choose"&gt;open an issue&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Discord: &lt;a href="https://discord.com/invite/PQcx7Teh8u"&gt;discord.com/invite/PQcx7Teh8u&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;X (Twitter): &lt;a href="https://x.com/HeyPuter"&gt;x.com/HeyPuter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Reddit: &lt;a href="https://www.reddit.com/r/puter/"&gt;reddit.com/r/puter/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mastodon: &lt;a href="https://mastodon.social/@puter"&gt;mastodon.social/@puter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Security issues? &lt;a href="mailto:security@puter.com"&gt;security@puter.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Email maintainers at &lt;a href="mailto:hi@puter.com"&gt;hi@puter.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We are always happy to help you with any questions you may have. Don't hesitate to ask!&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repository, including all its contents, sub-projects, modules, and components, is licensed under &lt;a href="https://github.com/HeyPuter/puter/raw/main/LICENSE.txt"&gt;AGPL-3.0&lt;/a&gt; unless explicitly stated otherwise. Third-party libraries included in this repository may be subject to their own licenses.&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ar.md"&gt;Arabic / ÿßŸÑÿπÿ±ÿ®Ÿäÿ©&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.hy.md"&gt;Armenian / ’Ä’°’µ’•÷Ä’•’∂&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.bn.md"&gt;Bengali / ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.zh.md"&gt;Chinese / ‰∏≠Êñá&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.da.md"&gt;Danish / Dansk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/README.md"&gt;English&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.fa.md"&gt;Farsi / ŸÅÿßÿ±ÿ≥€å&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.fi.md"&gt;Finnish / Suomi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.fr.md"&gt;French / Fran√ßais&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.de.md"&gt;German/ Deutsch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.he.md"&gt;Hebrew/ ◊¢◊ë◊®◊ô◊™&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.hi.md"&gt;Hindi / ‡§π‡§ø‡§Ç‡§¶‡•Ä&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.hu.md"&gt;Hungarian / Magyar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.id.md"&gt;Indonesian / Bahasa Indonesia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.it.md"&gt;Italian / Italiano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.jp.md"&gt;Japanese / Êó•Êú¨Ë™û&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ko.md"&gt;Korean / ÌïúÍµ≠Ïñ¥&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ml.md"&gt;Malayalam / ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.pl.md"&gt;Polish / Polski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.pt.md"&gt;Portuguese / Portugu√™s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ro.md"&gt;Romanian / Rom√¢nƒÉ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ru.md"&gt;Russian / –†—É—Å—Å–∫–∏–π&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.es.md"&gt;Spanish / Espa√±ol&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.sv.md"&gt;Swedish / Svenska&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ta.md"&gt;Tamil / ‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.te.md"&gt;Telugu / ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.th.md"&gt;Thai / ‡πÑ‡∏ó‡∏¢&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.tr.md"&gt;Turkish / T√ºrk√ße&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ua.md"&gt;Ukrainian / –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ur.md"&gt;Urdu / ÿßÿ±ÿØŸà&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.vi.md"&gt;Vietnamese / Ti·∫øng Vi·ªát&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>zumerlab/snapdom</title>
      <link>https://github.com/zumerlab/snapdom</link>
      <description>&lt;p&gt;snapDOM captures HTML elements to images with exceptional speed and accuracy.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="http://zumerlab.github.io/snapdom"&gt; &lt;img src="https://raw.githubusercontent.com/zumerlab/snapdom/main/docs/assets/newhero.png" width="70%"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.npmjs.com/package/@zumer/snapdom"&gt; &lt;img alt="NPM version" src="https://img.shields.io/npm/v/@zumer/snapdom?style=flat-square&amp;amp;label=Version"&gt; &lt;/a&gt; &lt;a href="https://github.com/zumerlab/snapdom/graphs/contributors"&gt; &lt;img alt="GitHub contributors" src="https://img.shields.io/github/contributors/zumerlab/snapdom?style=flat-square&amp;amp;label=Contributors"&gt; &lt;/a&gt; &lt;a href="https://github.com/zumerlab/snapdom/stargazers"&gt; &lt;img alt="GitHub stars" src="https://img.shields.io/github/stars/zumerlab/snapdom?style=flat-square&amp;amp;label=Stars"&gt; &lt;/a&gt; &lt;a href="https://github.com/zumerlab/snapdom/network/members"&gt; &lt;img alt="GitHub forks" src="https://img.shields.io/github/forks/zumerlab/snapdom?style=flat-square&amp;amp;label=Forks"&gt; &lt;/a&gt; &lt;a href="https://github.com/sponsors/tinchox5"&gt; &lt;img alt="Sponsor tinchox5" src="https://img.shields.io/github/sponsors/tinchox5?style=flat-square&amp;amp;label=Sponsor"&gt; &lt;/a&gt; &lt;a href="https://github.com/zumerlab/snapdom/raw/main/LICENSE"&gt; &lt;img alt="License" src="https://img.shields.io/github/license/zumerlab/snapdom?style=flat-square"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;snapDOM&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;snapDOM&lt;/strong&gt; is a fast and accurate DOM-to-image capture tool built for &lt;strong&gt;Zumly&lt;/strong&gt;, a zoom-based view transition framework.&lt;/p&gt; 
&lt;p&gt;It captures any HTML element as a scalable SVG image, preserving styles, fonts, background images, pseudo-elements, and even shadow DOM. It also supports export to raster image formats and canvas.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üì∏ Full DOM capture&lt;/li&gt; 
 &lt;li&gt;üé® Embedded styles, pseudo-elements, and fonts&lt;/li&gt; 
 &lt;li&gt;üñºÔ∏è Export to SVG, PNG, JPG, WebP, &lt;code&gt;canvas&lt;/code&gt;, or Blob&lt;/li&gt; 
 &lt;li&gt;‚ö° Ultra fast, no dependencies&lt;/li&gt; 
 &lt;li&gt;üì¶ 100% based on standard Web APIs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://zumerlab.github.io/snapdom/"&gt;https://zumerlab.github.io/snapdom/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;NPM / Yarn&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm i @zumer/snapdom
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;yarn add @zumer/snapdom
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then import it in your code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { snapdom } from '@zumer/snapdom';
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CDN&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;script src="https://cdn.jsdelivr.net/npm/@zumer/snapdom/dist/snapdom.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Script tag (local)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;script src="snapdom.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ES Module&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { snapdom } from './snapdom.mjs';
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Module via CDN&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;script type="module"&amp;gt;
  import { snapdom } from 'https://cdn.jsdelivr.net/npm/@zumer/snapdom/dist/snapdom.mjs';
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Basic usage&lt;/h2&gt; 
&lt;h3&gt;Reusable capture&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const el = document.querySelector('#target');
const result = await snapdom(el, { scale: 2 });

const img = await result.toPng();
document.body.appendChild(img);

await result.download({ format: 'jpg', filename: 'my-capture' });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;One-step shortcuts&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const el = document.querySelector('#target');
const png = await snapdom.toPng(el);
document.body.appendChild(png);

const blob = await snapdom.toBlob(el);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;h3&gt;&lt;code&gt;snapdom(el, options?)&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Returns an object with reusable export methods:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;{
  url: string;
  toRaw(): string;
  toImg(): Promise&amp;lt;HTMLImageElement&amp;gt;;
  toCanvas(): Promise&amp;lt;HTMLCanvasElement&amp;gt;;
  toBlob(options?): Promise&amp;lt;Blob&amp;gt;;
  toPng(options?): Promise&amp;lt;HTMLImageElement&amp;gt;;
  toJpg(options?): Promise&amp;lt;HTMLImageElement&amp;gt;;
  toWebp(options?): Promise&amp;lt;HTMLImageElement&amp;gt;;
  download(options?): Promise&amp;lt;void&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Shortcut methods&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Method&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;snapdom.toImg(el, options?)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Returns an &lt;code&gt;HTMLImageElement&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;snapdom.toCanvas(el, options?) &lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Returns a &lt;code&gt;Canvas&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;snapdom.toBlob(el, options?)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Returns an SVG &lt;code&gt;Blob&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;snapdom.toPng(el, options?)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Returns a PNG image&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;snapdom.toJpg(el, options?)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Returns a JPG image&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;snapdom.toWebp(el, options?)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Returns a WebP image&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;snapdom.download(el, options?) &lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Triggers download in specified format&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Options&lt;/h2&gt; 
&lt;p&gt;All capture methods accept an &lt;code&gt;options&lt;/code&gt; object:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Option&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;compress&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Removes redundant styles&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;fast&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Skips idle delay for faster results&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;embedFonts&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Inlines fonts (icon fonts always embedded)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;scale&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Output scale multiplier&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;dpr&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;devicePixelRatio&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Device pixel ratio&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;width&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Output specific width size&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;height&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Output specific height size&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;backgroundColor&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;"#fff"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Fallback color for JPG/WebP&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;quality&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Quality for JPG/WebP (0 to 1)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;useProxy&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;''&lt;/td&gt; 
   &lt;td&gt;Specify a proxy for handling CORS images as fallback&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;type&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;svg&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Select &lt;code&gt;png&lt;/code&gt;, &lt;code&gt;jpg&lt;/code&gt;, &lt;code&gt;webp&lt;/code&gt; Blob type&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;exclude&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;string[]&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;CSS selectors for elements to exclude&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;function&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Custom filter function ie &lt;code&gt;(el) =&amp;gt; !el.classList.contains('hidden')&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Setting custom dimensions with width and height options&lt;/h3&gt; 
&lt;p&gt;Use the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; options to generate an image with specific dimensions.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. Fixed width (proportional height)&lt;/strong&gt; Sets a specific width while maintaining the aspect ratio. Height adjusts proportionally.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const result = await snapdom(element, {
  width: 400 // Outputs a 400px-wide image with auto-scaled height
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;2. Fixed height (proportional width)&lt;/strong&gt; Sets a specific height while maintaining the aspect ratio. Width adjusts proportionally.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const result = await snapdom(element, {
  height: 200 // Outputs a 200px-tall image with auto-scaled width
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;3. Fixed width and height (may distort image)&lt;/strong&gt; Forces exact dimensions, potentially distorting the image if the aspect ratio differs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const result = await snapdom(element, {
  width: 800,  // Outputs an 800px √ó 200px image (may stretch/squish content)
  height: 200
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If &lt;code&gt;scale&lt;/code&gt; is different from 1, it takes priority over width and height. Example: &lt;code&gt;{ scale: 3, width: 500 }&lt;/code&gt; ignores width and scales the image 3x instead.&lt;/p&gt; 
&lt;h3&gt;Cross-Origin Images&lt;/h3&gt; 
&lt;p&gt;By default, snapDOM loads images with &lt;code&gt;crossOrigin="anonymous"&lt;/code&gt; or &lt;code&gt;crossOrigin="use-credentials"&lt;/code&gt;. In case fails to get the images, &lt;code&gt;useProxy&lt;/code&gt; can be used to deal with CORS images:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const result = await snapdom(element, {
  useProxy: 'your/proxy/' //Example: 'https://corsproxy.io/?url=' or 'https://api.allorigins.win/raw?url='
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Download options&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;{
  format?: "svg" | "png" | "jpg" | "jpeg" | "webp"; // default: "png"
  filename?: string;         // default: "capture"
  backgroundColor?: string;  // optional override
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;preCache()&lt;/code&gt; ‚Äì Optional helper&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;preCache()&lt;/code&gt; function can be used to load external resources (like images and fonts) in advance. It is specially useful when the element to capture is big and complex.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { preCache } from '@zumer/snapdom';

await preCache(document.body);
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { snapdom, preCache } from './snapdom.mjs';
    window.addEventListener('load', async () =&amp;gt; {
    await preCache();
    console.log('üì¶ Resources preloaded');
    });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Options for &lt;code&gt;preCache()&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;embedFonts&lt;/code&gt; &lt;em&gt;(boolean, default: true)&lt;/em&gt; ‚Äî Inlines non-icon fonts during preload.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;useProxy&lt;/code&gt; &lt;em&gt;(string)&lt;/em&gt; ‚Äî Proxy for handling CORS images as fallback.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Captures &lt;strong&gt;shadow DOM&lt;/strong&gt; and Web Components&lt;/li&gt; 
 &lt;li&gt;Supports &lt;code&gt;::before&lt;/code&gt;, &lt;code&gt;::after&lt;/code&gt; and &lt;code&gt;::first-letter&lt;/code&gt; pseudo-elements&lt;/li&gt; 
 &lt;li&gt;Inlines background images and fonts&lt;/li&gt; 
 &lt;li&gt;Handles &lt;strong&gt;Font Awesome&lt;/strong&gt;, &lt;strong&gt;Material Icons&lt;/strong&gt;, and more&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;data-capture="exclude"&lt;/code&gt; to ignore an element&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;data-capture="placeholder"&lt;/code&gt; with &lt;code&gt;data-placeholder-text&lt;/code&gt; for masked replacements&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Limitations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;External images should be CORS-accessible (use &lt;code&gt;useProxy&lt;/code&gt; option for handling CORS denied)&lt;/li&gt; 
 &lt;li&gt;Iframes are not supported&lt;/li&gt; 
 &lt;li&gt;When WebP format is used on Safari, it will fallback to PNG rendering.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@font-face&lt;/code&gt; CSS rule is well supported, but if need to use JS &lt;code&gt;FontFace()&lt;/code&gt;, see this workaround &lt;a href="https://github.com/zumerlab/snapdom/issues/43"&gt;&lt;code&gt;#43&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚ö° Performance Benchmarks&lt;/h2&gt; 
&lt;p&gt;Snapdom has received &lt;strong&gt;significant performance improvements&lt;/strong&gt; since version &lt;code&gt;v1.8.0&lt;/code&gt;. The following benchmarks compare:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Snapdom (current)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Snapdom v1.8.0&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;html2canvas&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;html-to-image&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Simple elements&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Scenario&lt;/th&gt; 
   &lt;th&gt;Snapdom (current)&lt;/th&gt; 
   &lt;th&gt;Snapdom v1.8.0&lt;/th&gt; 
   &lt;th&gt;html2canvas&lt;/th&gt; 
   &lt;th&gt;html-to-image&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Small (200√ó100)&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;0.4 ms&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.2 ms&lt;/td&gt; 
   &lt;td&gt;70.3 ms&lt;/td&gt; 
   &lt;td&gt;3.6 ms&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Modal (400√ó300)&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;0.4 ms&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.1 ms&lt;/td&gt; 
   &lt;td&gt;68.8 ms&lt;/td&gt; 
   &lt;td&gt;3.6 ms&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Page View (1200√ó800)&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;0.4 ms&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.0 ms&lt;/td&gt; 
   &lt;td&gt;100.5 ms&lt;/td&gt; 
   &lt;td&gt;3.4 ms&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Large Scroll (2000√ó1500)&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;0.4 ms&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.0 ms&lt;/td&gt; 
   &lt;td&gt;153.1 ms&lt;/td&gt; 
   &lt;td&gt;3.4 ms&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Very Large (4000√ó2000)&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;0.4 ms&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.0 ms&lt;/td&gt; 
   &lt;td&gt;278.9 ms&lt;/td&gt; 
   &lt;td&gt;4.3 ms&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Complex elements&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Scenario&lt;/th&gt; 
   &lt;th&gt;Snapdom (current)&lt;/th&gt; 
   &lt;th&gt;Snapdom v1.8.0&lt;/th&gt; 
   &lt;th&gt;html2canvas&lt;/th&gt; 
   &lt;th&gt;html-to-image&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Small (200√ó100)&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1.1 ms&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;3.2 ms&lt;/td&gt; 
   &lt;td&gt;76.0 ms&lt;/td&gt; 
   &lt;td&gt;15.3 ms&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Modal (400√ó300)&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;4.5 ms&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;14.0 ms&lt;/td&gt; 
   &lt;td&gt;133.2 ms&lt;/td&gt; 
   &lt;td&gt;55.4 ms&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Page View (1200√ó800)&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;32.9 ms&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;113.6 ms&lt;/td&gt; 
   &lt;td&gt;303.4 ms&lt;/td&gt; 
   &lt;td&gt;369.1 ms&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Large Scroll (2000√ó1500)&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;133.9 ms&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;387.4 ms&lt;/td&gt; 
   &lt;td&gt;594.4 ms&lt;/td&gt; 
   &lt;td&gt;1,163.0 ms&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Very Large (4000√ó2000)&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;364.0 ms&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1,200.4 ms&lt;/td&gt; 
   &lt;td&gt;1,380.8 ms&lt;/td&gt; 
   &lt;td&gt;3,023.9 ms&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Summary&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Snapdom (current) is &lt;strong&gt;2√ó‚Äì6√ó faster&lt;/strong&gt; than &lt;code&gt;v1.8.0&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Up to &lt;strong&gt;150√ó faster&lt;/strong&gt; than &lt;code&gt;html2canvas&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Up to &lt;strong&gt;8√ó faster&lt;/strong&gt; than &lt;code&gt;html-to-image&lt;/code&gt; in large scenarios&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;sub&gt;Benchmarks run in Chromium using Vitest.&lt;br&gt; Hardware: MacBook Air 2018.&lt;br&gt; ‚ö†Ô∏è Performance may vary depending on device.&lt;/sub&gt;&lt;/p&gt; 
&lt;h3&gt;Run the benchmarks&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/zumerlab/snapdom.git
cd snapdom
npm install
npm run test:benchmark
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;Planned improvements for future versions of SnapDOM:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled&gt; &lt;p&gt;&lt;strong&gt;Implement plugin system&lt;/strong&gt; SnapDOM will support external plugins to extend or override internal behavior (e.g. custom node transformers, exporters, or filters).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled&gt; &lt;p&gt;&lt;strong&gt;Refactor to modular architecture&lt;/strong&gt; Internal logic will be split into smaller, focused modules to improve maintainability and code reuse.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; &lt;p&gt;&lt;strong&gt;Decouple internal logic from global options&lt;/strong&gt; Functions will be redesigned to avoid relying directly on &lt;code&gt;options&lt;/code&gt;. A centralized capture context will improve clarity, autonomy, and testability. See &lt;a href="https://github.com/zumerlab/snapdom/tree/main"&gt;&lt;code&gt;next&lt;/code&gt; branch&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled&gt; &lt;p&gt;&lt;strong&gt;Expose cache control&lt;/strong&gt; Users will be able to manually clear image and font caches or configure their own caching strategies.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled&gt; &lt;p&gt;&lt;strong&gt;Auto font preloading&lt;/strong&gt; Required fonts will be automatically detected and preloaded before capture, reducing the need for manual &lt;code&gt;preCache()&lt;/code&gt; calls.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled&gt; &lt;p&gt;&lt;strong&gt;Document plugin development&lt;/strong&gt; A full guide will be provided for creating and registering custom SnapDOM plugins.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled&gt; &lt;p&gt;&lt;strong&gt;Make export utilities tree-shakeable&lt;/strong&gt; Export functions like &lt;code&gt;toPng&lt;/code&gt;, &lt;code&gt;toJpg&lt;/code&gt;, &lt;code&gt;toBlob&lt;/code&gt;, etc. will be restructured into independent modules to support tree shaking and minimal builds.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Have ideas or feature requests? Feel free to share suggestions or feedback in &lt;a href="https://github.com/zumerlab/snapdom/discussions"&gt;GitHub Discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;To contribute or build snapDOM locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Clone the repository
git clone https://github.com/zumerlab/snapdom.git
cd snapdom

# Switch to dev branch
git checkout dev

# Install dependencies
npm install

# Compile the library (ESM, CJS, and minified versions)
npm run compile

# Install playwright browsers (necessary for running tests)
npx playwright install

# Run tests
npm test

# Run Benchmarks
npm run test:benchmark
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The main entry point is in &lt;code&gt;src/&lt;/code&gt;, and output bundles are generated in the &lt;code&gt;dist/&lt;/code&gt; folder.&lt;/p&gt; 
&lt;p&gt;For detailed contribution guidelines, please see &lt;a href="https://github.com/zumerlab/snapdom/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributors üôå&lt;/h2&gt; 
&lt;!-- CONTRIBUTORS:START --&gt; 
&lt;p&gt; &lt;a href="https://github.com/tinchox5" title="tinchox5"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11557901?v=4&amp;amp;s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="tinchox5"&gt;&lt;/a&gt; &lt;a href="https://github.com/tarwin" title="tarwin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/646149?v=4&amp;amp;s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="tarwin"&gt;&lt;/a&gt; &lt;a href="https://github.com/17biubiu" title="17biubiu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13295895?v=4&amp;amp;s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="17biubiu"&gt;&lt;/a&gt; &lt;a href="https://github.com/av01d" title="av01d"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6247646?v=4&amp;amp;s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="av01d"&gt;&lt;/a&gt; &lt;a href="https://github.com/CHOYSEN" title="CHOYSEN"&gt;&lt;img src="https://avatars.githubusercontent.com/u/25995358?v=4&amp;amp;s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="CHOYSEN"&gt;&lt;/a&gt; &lt;a href="https://github.com/pedrocateexte" title="pedrocateexte"&gt;&lt;img src="https://avatars.githubusercontent.com/u/207524750?v=4&amp;amp;s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="pedrocateexte"&gt;&lt;/a&gt; &lt;a href="https://github.com/domialex" title="domialex"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4694217?v=4&amp;amp;s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="domialex"&gt;&lt;/a&gt; &lt;a href="https://github.com/elliots" title="elliots"&gt;&lt;img src="https://avatars.githubusercontent.com/u/622455?v=4&amp;amp;s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="elliots"&gt;&lt;/a&gt; &lt;a href="https://github.com/jswhisperer" title="jswhisperer"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1177690?v=4&amp;amp;s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="jswhisperer"&gt;&lt;/a&gt; &lt;a href="https://github.com/sharuzzaman" title="sharuzzaman"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7421941?v=4&amp;amp;s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="sharuzzaman"&gt;&lt;/a&gt; &lt;a href="https://github.com/simon1uo" title="simon1uo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/60037549?v=4&amp;amp;s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="simon1uo"&gt;&lt;/a&gt; &lt;a href="https://github.com/titoBouzout" title="titoBouzout"&gt;&lt;img src="https://avatars.githubusercontent.com/u/64156?v=4&amp;amp;s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="titoBouzout"&gt;&lt;/a&gt; &lt;a href="https://github.com/jhbae200" title="jhbae200"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20170610?v=4&amp;amp;s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="jhbae200"&gt;&lt;/a&gt; &lt;a href="https://github.com/miusuncle" title="miusuncle"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7549857?v=4&amp;amp;s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="miusuncle"&gt;&lt;/a&gt; &lt;a href="https://github.com/rbbydotdev" title="rbbydotdev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/101137670?v=4&amp;amp;s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="rbbydotdev"&gt;&lt;/a&gt; &lt;a href="https://github.com/kohaiy" title="kohaiy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15622127?v=4&amp;amp;s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="kohaiy"&gt;&lt;/a&gt; &lt;a href="https://github.com/fu050409" title="fu050409"&gt;&lt;img src="https://avatars.githubusercontent.com/u/46275354?v=4&amp;amp;s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="fu050409"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;!-- CONTRIBUTORS:END --&gt; 
&lt;h2&gt;üíñ Sponsors&lt;/h2&gt; 
&lt;p&gt;Special thanks to &lt;a href="https://github.com/megaphonecolin"&gt;@megaphonecolin&lt;/a&gt; for supporting this project!&lt;/p&gt; 
&lt;p&gt;If you'd like to support this project too, you can &lt;a href="https://github.com/sponsors/tinchox5"&gt;become a sponsor&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT ¬© Zumerlab&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>modood/Administrative-divisions-of-China</title>
      <link>https://github.com/modood/Administrative-divisions-of-China</link>
      <description>&lt;p&gt;‰∏≠Âçé‰∫∫Ê∞ëÂÖ±ÂíåÂõΩË°åÊîøÂå∫ÂàíÔºöÁúÅÁ∫ßÔºàÁúÅ‰ªΩÔºâ„ÄÅ Âú∞Á∫ßÔºàÂüéÂ∏ÇÔºâ„ÄÅ ÂéøÁ∫ßÔºàÂå∫ÂéøÔºâ„ÄÅ ‰π°Á∫ßÔºà‰π°ÈïáË°óÈÅìÔºâ„ÄÅ ÊùëÁ∫ßÔºàÊùëÂßî‰ºöÂ±ÖÂßî‰ºöÔºâ Ôºå‰∏≠ÂõΩÁúÅÂ∏ÇÂå∫ÈïáÊùë‰∫åÁ∫ß‰∏âÁ∫ßÂõõÁ∫ß‰∫îÁ∫ßËÅîÂä®Âú∞ÂùÄÊï∞ÊçÆ„ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Administrative-divisions-of-China&lt;/h1&gt; 
&lt;p&gt;&lt;a href="http://standardjs.com/"&gt;&lt;img src="https://img.shields.io/badge/code%20style-standard-brightgreen.svg?sanitize=true" alt="code style"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/china-division"&gt;&lt;img src="https://img.shields.io/npm/v/china-division.svg?sanitize=true" alt="npm"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/china-division"&gt;&lt;img src="https://img.shields.io/npm/dt/china-division.svg?sanitize=true" alt="downloads"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/modood/Administrative-divisions-of-China/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-WTFPL%20--%20Do%20What%20the%20Fuck%20You%20Want%20to%20Public%20License-green.svg?sanitize=true" alt="license"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;‰∏≠Âçé‰∫∫Ê∞ëÂÖ±ÂíåÂõΩË°åÊîøÂå∫ÂàíÔºà‰∫îÁ∫ßÔºâÔºöÁúÅÁ∫ß„ÄÅÂú∞Á∫ß„ÄÅÂéøÁ∫ß„ÄÅ‰π°Á∫ßÂíåÊùëÁ∫ß„ÄÇ&lt;/p&gt; 
&lt;h2&gt;Êï∞ÊçÆÊù•Ê∫ê&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÂõΩÂÆ∂ÁªüËÆ°Â±ÄÔºö 
  &lt;ul&gt; 
   &lt;li&gt;‰∏≠Âçé‰∫∫Ê∞ëÂÖ±ÂíåÂõΩÂõΩÂÆ∂ÁªüËÆ°Â±Ä-ÁªüËÆ°Áî®Âå∫ÂàíÂíåÂüé‰π°ÂàíÂàÜ‰ª£Á†Å&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://www.stats.gov.cn/sj/tjbz/gjtjbz/202302/t20230213_1902741.html"&gt;‰∏≠Âçé‰∫∫Ê∞ëÂÖ±ÂíåÂõΩÂõΩÂÆ∂ÁªüËÆ°Â±Ä-ÁªüËÆ°Áî®Âå∫Âàí‰ª£Á†ÅÂíåÂüé‰π°ÂàíÂàÜ‰ª£Á†ÅÁºñÂà∂ËßÑÂàô&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Êú¨È°πÁõÆÂ∑≤Êõ¥Êñ∞Ëá≥Ôºö 
  &lt;ul&gt; 
   &lt;li&gt;2023Âπ¥ÁªüËÆ°Áî®Âå∫Âàí‰ª£Á†ÅÂíåÂüé‰π°ÂàíÂàÜ‰ª£Á†ÅÔºàÊà™Ê≠¢Êó∂Èó¥Ôºö2023-06-30ÔºåÂèëÂ∏ÉÊó∂Èó¥Ôºö2023-09-11Ôºâ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Êï∞ÊçÆ‰∏ãËΩΩ&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Êñá‰ª∂ÂàóË°®&lt;/th&gt; 
   &lt;th align="left"&gt;JSON&lt;/th&gt; 
   &lt;th align="left"&gt;CSV&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;ÁúÅÁ∫ßÔºàÁúÅ‰ªΩ„ÄÅÁõ¥ËæñÂ∏Ç„ÄÅËá™Ê≤ªÂå∫Ôºâ&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/provinces.json"&gt;provinces.json&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/provinces.csv"&gt;provinces.csv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Âú∞Á∫ßÔºàÂüéÂ∏ÇÔºâ&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/cities.json"&gt;cities.json&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/cities.csv"&gt;cities.csv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;ÂéøÁ∫ßÔºàÂå∫ÂéøÔºâ&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/areas.json"&gt;areas.json&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/areas.csv"&gt;areas.csv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;‰π°Á∫ßÔºà‰π°Èïá„ÄÅË°óÈÅìÔºâ&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/streets.json"&gt;streets.json&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/streets.csv"&gt;streets.csv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;ÊùëÁ∫ßÔºàÊùëÂßî‰ºö„ÄÅÂ±ÖÂßî‰ºöÔºâ&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/villages.json"&gt;villages.json&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/villages.csv"&gt;villages.csv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Êñá‰ª∂ÂàóË°®&lt;/th&gt; 
   &lt;th align="left"&gt;ÊôÆÈÄö&lt;/th&gt; 
   &lt;th align="left"&gt;Â∏¶ÁºñÁ†Å&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;‚ÄúÁúÅ‰ªΩ„ÄÅÂüéÂ∏Ç‚Äù ‰∫åÁ∫ßËÅîÂä®Êï∞ÊçÆ&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pc.json"&gt;pc.json&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pc-code.json"&gt;pc-code.json&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;‚ÄúÁúÅ‰ªΩ„ÄÅÂüéÂ∏Ç„ÄÅÂå∫Âéø‚Äù ‰∏âÁ∫ßËÅîÂä®Êï∞ÊçÆ&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pca.json"&gt;pca.json&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pca-code.json"&gt;pca-code.json&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;‚ÄúÁúÅ‰ªΩ„ÄÅÂüéÂ∏Ç„ÄÅÂå∫Âéø„ÄÅ‰π°Èïá‚Äù ÂõõÁ∫ßËÅîÂä®Êï∞ÊçÆ&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pcas.json"&gt;pcas.json&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pcas-code.json"&gt;pcas-code.json&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;‚ÄúÁúÅ‰ªΩ„ÄÅÂüéÂ∏Ç„ÄÅÂå∫Âéø„ÄÅ‰π°Èïá„ÄÅÊùëÂ∫Ñ‚Äù ‰∫îÁ∫ßËÅîÂä®Êï∞ÊçÆ&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ÊèêÁ§∫ÔºöÈúÄË¶ÅÊâìÂåÖ‰∏ãËΩΩÂÖ®ÈÉ®Êñá‰ª∂ÔºåËØ∑Áúã &lt;a href="https://github.com/modood/Administrative-divisions-of-China/releases"&gt;Releases&lt;/a&gt;„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Êï∞ÊçÆÂ∫ìÊîØÊåÅ&lt;/h2&gt; 
&lt;p&gt;ÁõÆÂâçÊú¨È°πÁõÆÊï∞ÊçÆ‰øùÂ≠òÂú® sqlite3ÔºåÊï∞ÊçÆÊñá‰ª∂‰∏ãËΩΩÔºö&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/data.sqlite"&gt;data.sqlite&lt;/a&gt;„ÄÇ&lt;/p&gt; 
&lt;p&gt;ÂèØ‰ª•Ëá™Â∑±Â∞ÜÊï∞ÊçÆËøÅÁßªÂà∞ÂÖ∂‰ªñÊï∞ÊçÆÂ∫ìÁÆ°ÁêÜÁ≥ªÁªü‰∏≠ÔºàMySQL, Oracle, MSSQL Á≠âÔºâ„ÄÇ&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ÁúÅÁ∫ßÊï∞ÊçÆÈ¢ÑËßà&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;code&lt;/th&gt; 
   &lt;th align="left"&gt;name&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;13&lt;/td&gt; 
   &lt;td align="left"&gt;Ê≤≥ÂåóÁúÅ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;14&lt;/td&gt; 
   &lt;td align="left"&gt;Â±±Ë•øÁúÅ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;15&lt;/td&gt; 
   &lt;td align="left"&gt;ÂÜÖËíôÂè§Ëá™Ê≤ªÂå∫&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;45&lt;/td&gt; 
   &lt;td align="left"&gt;ÂπøË•øÂ£ÆÊóèËá™Ê≤ªÂå∫&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Âú∞Á∫ßÊï∞ÊçÆÈ¢ÑËßà&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;code&lt;/th&gt; 
   &lt;th align="left"&gt;name&lt;/th&gt; 
   &lt;th align="left"&gt;provinceCode&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;1301&lt;/td&gt; 
   &lt;td align="left"&gt;Áü≥ÂÆ∂Â∫ÑÂ∏Ç&lt;/td&gt; 
   &lt;td align="left"&gt;13&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;1401&lt;/td&gt; 
   &lt;td align="left"&gt;Â§™ÂéüÂ∏Ç&lt;/td&gt; 
   &lt;td align="left"&gt;14&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;1525&lt;/td&gt; 
   &lt;td align="left"&gt;Èî°ÊûóÈÉ≠ÂãíÁõü&lt;/td&gt; 
   &lt;td align="left"&gt;15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;4503&lt;/td&gt; 
   &lt;td align="left"&gt;Ê°ÇÊûóÂ∏Ç&lt;/td&gt; 
   &lt;td align="left"&gt;45&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;ÂéøÁ∫ßÊï∞ÊçÆÈ¢ÑËßà&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;code&lt;/th&gt; 
   &lt;th align="left"&gt;name&lt;/th&gt; 
   &lt;th align="left"&gt;cityCode&lt;/th&gt; 
   &lt;th align="left"&gt;provinceCode&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;130111&lt;/td&gt; 
   &lt;td align="left"&gt;Ê†æÂüéÂå∫&lt;/td&gt; 
   &lt;td align="left"&gt;1301&lt;/td&gt; 
   &lt;td align="left"&gt;13&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;140121&lt;/td&gt; 
   &lt;td align="left"&gt;Ê∏ÖÂæêÂéø&lt;/td&gt; 
   &lt;td align="left"&gt;1401&lt;/td&gt; 
   &lt;td align="left"&gt;14&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;152527&lt;/td&gt; 
   &lt;td align="left"&gt;Â§™‰ªÜÂØ∫Êóó&lt;/td&gt; 
   &lt;td align="left"&gt;1525&lt;/td&gt; 
   &lt;td align="left"&gt;15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;450305&lt;/td&gt; 
   &lt;td align="left"&gt;‰∏ÉÊòüÂå∫&lt;/td&gt; 
   &lt;td align="left"&gt;4503&lt;/td&gt; 
   &lt;td align="left"&gt;45&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;‰π°Á∫ßÊï∞ÊçÆÈ¢ÑËßà&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;code&lt;/th&gt; 
   &lt;th align="left"&gt;name&lt;/th&gt; 
   &lt;th align="left"&gt;areaCode&lt;/th&gt; 
   &lt;th align="left"&gt;cityCode&lt;/th&gt; 
   &lt;th align="left"&gt;provinceCode&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;130111200&lt;/td&gt; 
   &lt;td align="left"&gt;ÂçóÈ´ò‰π°&lt;/td&gt; 
   &lt;td align="left"&gt;130111&lt;/td&gt; 
   &lt;td align="left"&gt;1301&lt;/td&gt; 
   &lt;td align="left"&gt;13&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;140121102&lt;/td&gt; 
   &lt;td align="left"&gt;‰∏ú‰∫éÈïá&lt;/td&gt; 
   &lt;td align="left"&gt;140121&lt;/td&gt; 
   &lt;td align="left"&gt;1401&lt;/td&gt; 
   &lt;td align="left"&gt;14&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;152527201&lt;/td&gt; 
   &lt;td align="left"&gt;Ë¥°ÂÆùÊãâÊ†ºËãèÊú®&lt;/td&gt; 
   &lt;td align="left"&gt;152527&lt;/td&gt; 
   &lt;td align="left"&gt;1525&lt;/td&gt; 
   &lt;td align="left"&gt;15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;450305004&lt;/td&gt; 
   &lt;td align="left"&gt;Êºì‰∏úË°óÈÅìÂäû‰∫ãÂ§Ñ&lt;/td&gt; 
   &lt;td align="left"&gt;450305&lt;/td&gt; 
   &lt;td align="left"&gt;4503&lt;/td&gt; 
   &lt;td align="left"&gt;45&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;ÊùëÁ∫ßÊï∞ÊçÆÈ¢ÑËßà&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;code&lt;/th&gt; 
   &lt;th align="left"&gt;name&lt;/th&gt; 
   &lt;th align="left"&gt;streetCode&lt;/th&gt; 
   &lt;th align="left"&gt;areaCode&lt;/th&gt; 
   &lt;th align="left"&gt;cityCode&lt;/th&gt; 
   &lt;th align="left"&gt;provinceCode&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;130111200201&lt;/td&gt; 
   &lt;td align="left"&gt;ÂçóÈ´òÊùëÂßî‰ºö&lt;/td&gt; 
   &lt;td align="left"&gt;130111200&lt;/td&gt; 
   &lt;td align="left"&gt;130111&lt;/td&gt; 
   &lt;td align="left"&gt;1301&lt;/td&gt; 
   &lt;td align="left"&gt;13&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;140121102001&lt;/td&gt; 
   &lt;td align="left"&gt;‰∏ú‰∫éÁ§æÂå∫Â±ÖÂßî‰ºö&lt;/td&gt; 
   &lt;td align="left"&gt;140121102&lt;/td&gt; 
   &lt;td align="left"&gt;140121&lt;/td&gt; 
   &lt;td align="left"&gt;1401&lt;/td&gt; 
   &lt;td align="left"&gt;14&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;152527201206&lt;/td&gt; 
   &lt;td align="left"&gt;Êï¶Ëææ‰πåËãèÂòéÊü•&lt;/td&gt; 
   &lt;td align="left"&gt;152527201&lt;/td&gt; 
   &lt;td align="left"&gt;152527&lt;/td&gt; 
   &lt;td align="left"&gt;1525&lt;/td&gt; 
   &lt;td align="left"&gt;15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;450305004006&lt;/td&gt; 
   &lt;td align="left"&gt;Ê®™Â°òÁ§æÂå∫&lt;/td&gt; 
   &lt;td align="left"&gt;450305004&lt;/td&gt; 
   &lt;td align="left"&gt;450305&lt;/td&gt; 
   &lt;td align="left"&gt;4503&lt;/td&gt; 
   &lt;td align="left"&gt;45&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>crocodilestick/Calibre-Web-Automated</title>
      <link>https://github.com/crocodilestick/Calibre-Web-Automated</link>
      <description>&lt;p&gt;Calibre-Web but automated and with Calibre features! Fully automate and simplify your eBook set up!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Calibre-Web Automated &lt;em&gt;(formerly Calibre-Web Automator)&lt;/em&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/CWA-banner.png" alt="Calibre-Web Automated" title="Calibre-Web Automated"&gt;&lt;/p&gt; 
&lt;h2&gt;Making Calibre-Web your &lt;em&gt;dream&lt;/em&gt;, all-in-one self-hosted digital library solution.&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/docker/pulls/crocodilestick/calibre-web-automated" alt="Docker Pulls"&gt; &lt;img src="https://img.shields.io/github/v/release/crocodilestick/calibre-web-automated" alt="GitHub Release"&gt; &lt;img src="https://img.shields.io/github/commits-since/crocodilestick/calibre-web-automated/latest" alt="GitHub commits since latest release"&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;em&gt;Quick Access&lt;/em&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#features"&gt;Features&lt;/a&gt; ü™Ñ&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/crocodilestick/Calibre-Web-Automated/releases"&gt;Releases&lt;/a&gt; üÜï&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#features-currently-under-active-development-and-on-our-roadmap-%EF%B8%8F%EF%B8%8F"&gt;Roadmap&lt;/a&gt; üõ£Ô∏è&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#how-to-install-"&gt;How to Install&lt;/a&gt;: üìñ 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#quick-install-"&gt;Quick Install&lt;/a&gt; üöÄ&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#using-docker-compose-recommended"&gt;Docker-Compose&lt;/a&gt; üêã‚≠ê(Recommended)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#users-migrating-from-stock-calibre-web"&gt;Users Migrating from stock Calibre Web&lt;/a&gt; üîÑ&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#post-install-tasks"&gt;Post-Install Tasks&lt;/a&gt; üèÅ 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#default-admin-login"&gt;Default Login Credentials üîë&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#usage-"&gt;Usage&lt;/a&gt; üîß 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#adding-books-to-your-library"&gt;Adding Books to Your Library&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#koreader-syncing-kosync-"&gt;KOReader Syncing (KOSync)&lt;/a&gt; üìñ‚ö°&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#for-developers---building-custom-docker-image"&gt;For Developers&lt;/a&gt; üöÄ&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#further-development-%EF%B8%8F"&gt;Further Development&lt;/a&gt; üèóÔ∏è&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ko-fi.com/crocodilestick"&gt;Support / Buy me a Coffee&lt;/a&gt; ‚òï&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;em&gt;Affiliated Projects&lt;/em&gt; üë¨&lt;/h2&gt; 
&lt;h3&gt;Calibre-Web Automated Book Downloader&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;An intuitive web interface for searching and requesting book downloads, designed to work seamlessly with Calibre-Web-Automated. This project streamlines the process of downloading books and preparing them for integration into your Calibre library&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/calibrain/calibre-web-automated-book-downloader"&gt;&lt;img src="https://raw.githubusercontent.com/vadret/android/master/assets/get-github.png" alt="Get it on GitHub" height="80"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Calibre-Web Companion&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Built with &lt;strong&gt;Flutter&lt;/strong&gt; and using &lt;strong&gt;Material You&lt;/strong&gt;, &lt;a href="https://github.com/doen1el/calibre-web-companion"&gt;&lt;strong&gt;Calibre Web Companion&lt;/strong&gt;&lt;/a&gt; is an &lt;strong&gt;unofficial companion application&lt;/strong&gt; for &lt;strong&gt;Calibre Web&lt;/strong&gt; &amp;amp; &lt;strong&gt;Calibre Web Automated&lt;/strong&gt; that allows you to browse your book collection and download books directly on your device, providing a much &lt;strong&gt;more modern, mobile-friendly UX&lt;/strong&gt; than either service can currently provide on its own&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;a href="https://github.com/doen1el/calibre-web-companion"&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/cw-companion-screenshots.png" alt="Calibre Web Companion Preview"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=de.doen1el.calibreWebCompanion"&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/google-play.png" alt="Get it on Google Play" height="80"&gt;&lt;/a&gt; &lt;a href="https://f-droid.org/en/packages/de.doen1el.calibreWebCompanion/"&gt;&lt;img src="https://fdroid.gitlab.io/artwork/badge/get-it-on.png" alt="Get it on F-Droid" height="80"&gt;&lt;/a&gt; &lt;a href="https://github.com/doen1el/calibre-web-companion"&gt;&lt;img src="https://raw.githubusercontent.com/vadret/android/master/assets/get-github.png" alt="Get it on GitHub" height="80"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Why does it exist? üîì&lt;/h2&gt; 
&lt;p&gt;Calibre, while a fantastic tool for its age, has several problems when containerised, including its reliance on a KasmVNC server instance for the UI, which is near impossible to use on mobile and is relatively resource-heavy if you're running a small, lower power server like I am.&lt;/p&gt; 
&lt;p&gt;For many, Calibre-Web has really swooped in to save the day, offering an alternative to a containerised Calibre instance that's resource-light and with a much more modern UI to boot.&lt;/p&gt; 
&lt;p&gt;However, when compared to full-fat Calibre, it unfortunately lacks a few core features leading many to run both services in parallel, each serving to fill in where the other lacks, resulting in an often clunky, imperfect solution.&lt;/p&gt; 
&lt;h2&gt;Goal of the Project üéØ&lt;/h2&gt; 
&lt;p&gt;Calibre-Web Automated aims to be an all-in-one solution, combining the modern lightweight web UI from Calibre-Web with the robust, versatile feature set of Calibre, with a slew of extra features and automations thrown in on top.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/CWA-Homepage.png" alt="Calibre-Web Automated Example Homepage"&gt;&lt;/p&gt; 
&lt;p style="text-align:center;"&gt;&lt;i&gt;CWA allows you to keep your ebook library accessible &amp;amp; organised and looks good while doing it&lt;/i&gt; üòéü¶ö&lt;/p&gt; 
&lt;h2&gt;Join our Community! ‚ù§Ô∏è&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;I want to say a &lt;strong&gt;big thanks&lt;/strong&gt; üôè to all the members of this community that have taken the time to participate in the testing and development of this project and we encourage anyone who would like to to contribute in some way. Anyone of any level is welcome and every little helps!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For anyone that wish to contribute to this project in some way&lt;/strong&gt;, please reach out on our Discord Server and see how you can best get involved:&lt;br&gt; &lt;br&gt; &lt;a href="https://discord.gg/EjgSeek94R"&gt;&lt;img src="https://dcbadge.limes.pink/api/server/https://discord.gg/EjgSeek94R" alt=""&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Or alternativly make your own companion project, come hang out and or come get help if you're facing issues :)&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üö® To users planning to deploy via Network Shares (particularly NFS) üö®&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Calibre, Calibre-Web and CWA are all SQLite3 based applications and as a result &lt;strong&gt;don't like being run over network shares (especially NFS)&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;SQLite is designed as a lightweight, file-based database system, and it assumes the underlying file system supports certain guarantees about &lt;strong&gt;file locking, atomic writes, and consistency&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Network file systems (e.g., NFS, SMB/CIFS, etc.) often do not meet these assumptions, which can lead to issues.&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;Some users are successful in deploying CWA across NFS shares however doing so &lt;strong&gt;can produce a lot of hard to diagnose issues&lt;/strong&gt; that take time away from users with actual issues&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Therefore as of V3.0.0, deployments over NFS shares are "unsupported"&lt;/strong&gt;, meaning &lt;strong&gt;you are free to do so&lt;/strong&gt;, but &lt;strong&gt;support will not be provided for users facing issues&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;em&gt;Features:&lt;/em&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;CWA supports all Stock CW Features:&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Modern &amp;amp; responsive Bootstrap 3 HTML5 interface&lt;/td&gt; 
   &lt;td align="center"&gt;Comprehensive user management with per-user permissions&lt;/td&gt; 
   &lt;td align="center"&gt;OPDS feed for ereader apps&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;eBook metadata editing and deletion support&lt;/td&gt; 
   &lt;td align="center"&gt;Metadata download from various sources (extensible via plugins)&lt;/td&gt; 
   &lt;td align="center"&gt;eBook download restriction to logged-in users&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Public user registration support&lt;/td&gt; 
   &lt;td align="center"&gt;Send eBooks to E-Readers with a single click&lt;/td&gt; 
   &lt;td align="center"&gt;Sync Kobo devices with your Calibre library&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;In-browser eBook reading support for multiple formats&lt;/td&gt; 
   &lt;td align="center"&gt;Content hiding based on categories and Custom Column content per user&lt;/td&gt; 
   &lt;td align="center"&gt;"Magic Link" login for easy access on eReaders&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;LDAP, Google/GitHub OAuth, and proxy authentication support&lt;/td&gt; 
   &lt;td align="center"&gt;Advanced search and filtering options&lt;/td&gt; 
   &lt;td align="center"&gt;Multilingual user interface supporting 20+ &lt;a href="https://github.com/janeczku/calibre-web/wiki/Translation-Status"&gt;languages&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Plus these &lt;em&gt;&lt;strong&gt;CWA Specific Features&lt;/strong&gt;&lt;/em&gt; on top:&lt;/h2&gt; 
&lt;h4&gt;Click a feature below to read about it in more detail:&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#automatic-ingest-service-"&gt;Automatic Ingest Service ‚ú®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#automatic-conversion-service-"&gt;Automatic Conversion Service üîÉ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#automatic-enforcement-of-changes-made-to-covers--metadata-through-the-calibre-web-ui-"&gt;Automatic Enforcement of Covers &amp;amp; Metadata üëÄüìî&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#batch-editing--deletion-%EF%B8%8F%EF%B8%8F"&gt;Batch Editing &amp;amp; Deletion üóÇÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#automated-back-up-service-"&gt;Automated Back Up Service üîí&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#library-auto-detect-%EF%B8%8F"&gt;Automated Setup Experience for New Users ü¶Æ&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#automatic-epub-fixer-service-"&gt;Automatic EPUB Fixer Service üî®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#simple-to-use-multi-format-conversion-service-"&gt;Multi-Format Conversion Service üåå&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#library-auto-detect-%EF%B8%8F"&gt;Library Auto-Detect üìöüïµÔ∏è&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#server-stats-tracking-page-"&gt;Server Stats Tracking Page üìç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#server-stats-tracking-page-"&gt;Server Stats Tracking üìä&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#easy-dark-light-mode-switching-%EF%B8%8F"&gt;Easy Dark/ Light Mode Switching ‚òÄÔ∏èüåô&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#internal-update-notification-system-%EF%B8%8F"&gt;Internal Update Notification System üõéÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#auto-compression-of-backed-up-files-"&gt;Auto-Compression of Backed Up Files ü§ê&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#additional-metadata-providers-%EF%B8%8F"&gt;Additional Metadata Providers üóÉÔ∏è&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#koreader-syncing-kosync-"&gt;KOReader Syncing (KOSync) üìñ‚ö°&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;&lt;strong&gt;Automatic Ingest Service&lt;/strong&gt; ‚ú®&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;CWA currently supports automatic ingest of 27 different popular ebook formats&lt;/li&gt; 
 &lt;li&gt;Users can configure the services behavior to ignore and/or have certain formats automatically converted to other formats in the Admin Panel&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- - A **Weighted Conversion Algorithm:** ‚öñÔ∏è
  - Using the information provided in the Calibre eBook-converter documentation on which formats convert best into epubs, CWA is able to determine from downloads containing multiple eBook formats, which format will convert most optimally, ignoring the other formats to ensure the **best possible quality** and no **duplicate imports** --&gt; 
&lt;h4&gt;&lt;strong&gt;Automatic Conversion Service&lt;/strong&gt; üîÉ&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;On by default though can be toggled of in the CWA Settings page, with EPUB as the default target format 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Available target formats include:&lt;/em&gt; &lt;strong&gt;EPUB&lt;/strong&gt;, &lt;strong&gt;MOBI&lt;/strong&gt;, &lt;strong&gt;AZW3&lt;/strong&gt;, &lt;strong&gt;KEPUB&lt;/strong&gt; &amp;amp; &lt;strong&gt;PDF&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Upon detecting new files in the Ingest Directory, if any of the files are in formats the user has configured CWA to auto-convert to the current target format,&lt;/li&gt; 
 &lt;li&gt;The following &lt;strong&gt;28 file types are currently supported:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;.azw, .azw3, .azw4, .mobi, .cbz, .cbr, .cb7, .cbc, .chm, .djvu, .docx, .epub, .fb2, .fbz, .html, .htmlz, .lit, .lrf, .odt, .pdf, .prc, .pdb, .pml, .rb, .rtf, .snb, .tcr, .txtz&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Automatic Enforcement of Changes made to Covers &amp;amp; Metadata through the Calibre-Web UI!&lt;/strong&gt; üëÄüìî&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;In stock Calibre-Web, any changes made to a book's &lt;strong&gt;Cover and/or Metadata&lt;/strong&gt; are only applied to how the book appears in the Calibre-Web UI, changing nothing in the ebook's files like you would expect&lt;/li&gt; 
 &lt;li&gt;This results in a frustrating situation for many CW users who utilise CW's Send-To-Kindle function, and are disappointed to find that the High-Quality Covers they picked out and carefully chosen Metadata they sourced are completely absent on all their other devices! UGH!&lt;/li&gt; 
 &lt;li&gt;CWA's &lt;strong&gt;Automatic Cover &amp;amp; Metadata Enforcement Feature&lt;/strong&gt; makes it so that &lt;strong&gt;WHATEVER&lt;/strong&gt; you changes you make to &lt;strong&gt;YOUR&lt;/strong&gt; books, &lt;strong&gt;&lt;em&gt;are made to the books themselves&lt;/em&gt;&lt;/strong&gt;, as well as in the Web UI, &lt;strong&gt;making what you see, what you get.&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/cwa-enforcer-diagram.png" alt="Cover Enforcement CWA" title="CWA 1.2.0 Cover Enforcement Diagram"&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Batch Editing &amp;amp; Deletion!&lt;/strong&gt; üóÇÔ∏èüóÑÔ∏è&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Say goodbye to clicking that edit button again, and again, and again just to remove or edit a single series!&lt;/li&gt; 
 &lt;li&gt;To use, simply navigate to the &lt;code&gt;Books List&lt;/code&gt;page on the left hand side of the Web UI, select the books you wish to edit/ delete and use the buttons either above the table or within the headers to do whatever you need!&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Courtesy of &lt;a href="https://github.com/jmarmstrong1207"&gt;@jmarmstrong1207&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/cwa-bulk-editting-diagram.png" alt=""&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Automated Back Up Service&lt;/strong&gt; üîí&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Worried what will happen if something goes wrong during one of CWA's automated functions? Don't be!&lt;/li&gt; 
 &lt;li&gt;By default, the originals all files processed by CWA are stored in &lt;code&gt;/config/processed_books&lt;/code&gt; though this can be toggled in the CWA Settings panel&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Automatic EPUB Fixer Service&lt;/strong&gt; üî®&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Ever had it where you're super excited to start reading your next book but for some reason, Amazon's Send-to-Kindle service just keeps rejecting it? Well no more!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Originally developed by &lt;a href="https://github.com/innocenat/kindle-epub-fix"&gt;innocenat&lt;/a&gt;, this tool corrects the following potential issues for every EPUB processed by CWA:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Fixes UTF-8 encoding problem by adding UTF-8 declaration if no encoding is specified&lt;/li&gt; 
   &lt;li&gt;Fixes hyperlink problem (result in Amazon rejecting the EPUB) when NCX table of content link to &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; with ID hash.&lt;/li&gt; 
   &lt;li&gt;Detect invalid and/or missing language tag in metadata, and prompt user to select new language.&lt;/li&gt; 
   &lt;li&gt;Remove stray &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tags with no source field.&lt;/li&gt; 
   &lt;li&gt;Resolves several EPUB compatibility issues, such as UTF-8 encoding, hyperlink problems, invalid/missing language tags, and stray image tags.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;This &lt;strong&gt;ensures maximum comparability&lt;/strong&gt; for each EPUB file with the Amazon &lt;strong&gt;Send-to-Kindle&lt;/strong&gt; service and for those who don't use Amazon devices, has the side benefit of cleaning up your lower quality files!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enabled by default but can be toggled in settings.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Files processed by the EPUB-Fixer service are by default automatically backed up to &lt;code&gt;/config/processed_books&lt;/code&gt; however this can also be toggled in the settings.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Bulk processing of whole library with progress tracking available in the Admin Panel&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Available via both the Web UI and CLI&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Simple to use Multi-Format Conversion Service&lt;/strong&gt; üåå&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;This utility gives the user the option to either keep a copy of the original of all converted files in &lt;code&gt;/config/processed_books&lt;/code&gt; or to trust the process and have CWA simply convert and replace those files (not recommended)&lt;/li&gt; 
 &lt;li&gt;Full usage details can be found &lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#the-convert-library-tool"&gt;here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/CWA-new-process-ui.gif" alt="CWA Convert Library Web UI"&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Additional Metadata Providers&lt;/strong&gt; üóÉÔ∏è&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Users can now make use of &lt;a href="https://isbndb.com/"&gt;isbndb.com&lt;/a&gt;'s huge database when fetching metadata for the books in their library!&lt;/li&gt; 
 &lt;li&gt;Access is being provided via &lt;a href="https://ibdb.dev/"&gt;ibdb.dev&lt;/a&gt; thanks to a generous donation to the community by &lt;a href="https://www.github.com/chad3814"&gt;@chad3814&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hardcover.app/"&gt;Hardcover&lt;/a&gt; is also currently in the process of being added to CWA as a Metadata Provider&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;KOReader Syncing (KOSync)&lt;/strong&gt; üìñ‚ö°&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;CWA now includes built-in KOReader syncing functionality, providing a modern alternative to traditional KOReader sync servers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Universal KOReader Syncer:&lt;/strong&gt; Works across all KOReader-compatible devices, storing sync data in a readable format for future CWA features&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modern Authentication:&lt;/strong&gt; Uses RFC 7617 compliant header-based authentication instead of legacy MD5 hashing for enhanced security&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CWA Integration:&lt;/strong&gt; Leverages your existing CWA user accounts and permissions - no additional server setup required&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy Installation:&lt;/strong&gt; Plugin and setup instructions are available directly from your CWA instance at &lt;code&gt;/kosync&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Server Stats Tracking Page&lt;/strong&gt; üìçüìä&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ever wondered how many times CWA has been there for you in the background? Check out the CWA Stats page to see a fun list of statistics showing how many times CWA has been there to make your life just that little bit easier&lt;/li&gt; 
 &lt;li&gt;A database also exists to keep track of any and all enforcements, imports, conversions &amp;amp; fixes both for peace of mind and to make the checking of any bugs or weird behaviour easier 
  &lt;!-- - Full documentation can be found below [here](#checking-the-cover-enforcement-logs) --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/cwa-server-stats-page.png" alt="CWA Server Stats Page"&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Library Auto-Detect&lt;/strong&gt; üìöüïµÔ∏è&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Made to &lt;strong&gt;MASSIVELY&lt;/strong&gt; simplify the setup process for both &lt;strong&gt;new and existing users&lt;/strong&gt; alike&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;New Users without existing Libraries:&lt;/strong&gt; üÜï 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;No library? No problem!&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;New users without existing Calibre Libraries no longer need to copy and paste &lt;code&gt;metadata.db&lt;/code&gt; files and point to their location in the Web UI, CWA will now automatically detect the lack of Library in your given bind and automatically create a new one for you! It will even automatically register it with the Web UI so you can really hit the ground running&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;New or Existing Users with Existing Libraries:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Simply bind a directory containing your Calibre Library (search is done recursively so it doesn't matter how deep in the directory it is) and CWA will now automatically find it and mount it to the Web UI&lt;/li&gt; 
   &lt;li&gt;Should you bind a directory with more than 1 Calibre Library in it, CWA will intelligently compare the disk sizes of all discovered libraries and mount the largest one 
    &lt;ul&gt; 
     &lt;li&gt;&lt;em&gt;CWA supports only one library per instance though support for multiple libraries is being investigated for future releases&lt;/em&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;em&gt;In the meantime, users with multiple libraries who don't want to consolidate them are advised to run multiple, parallel instances&lt;/em&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Easy Dark/ Light Mode Switching&lt;/strong&gt; ‚òÄÔ∏èüåô&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Switch between Light &amp;amp; Dark Modes in just one click from anywhere in the Web UI!&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Simply click/tap the üï∂Ô∏è icon on the Web UI's navbar and switch between themes at your leisure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Internal Update Notification System&lt;/strong&gt; üõéÔ∏è&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Users will now be automatically notified of the availability of new updates from within the Web UI&lt;/li&gt; 
 &lt;li&gt;Automatically triggered by a difference between the version number of the most recent GitHub release and the version installed&lt;/li&gt; 
 &lt;li&gt;Set to only show once per calendar day until updated as to not be annoying&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Visible to Admin users only&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Manual Library Refresh&lt;/strong&gt; ‚ôªÔ∏è&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ever had books get stuck in the ingest folder after an unexpected power-cut ect.? Well say goodbye to having to manually copy the books to be ingested back in and out of the ingest folder, simply press the &lt;code&gt;Refresh Library&lt;/code&gt; button on the navbar of the Web UI and anything still sitting in the ingest folder will be automatically ingested!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Auto-Compression of Backed Up Files&lt;/strong&gt; ü§ê&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Just before midnight each day, the CWA-Auto-Zipper service will automatically zip together all files processed that day.&lt;/li&gt; 
 &lt;li&gt;Minimises disk space usage and helps keep back up files as organised as possible&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enabled by default but can be disabled in the CWA Settings page in the Admin panel&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/cwa-bulk-editting-diagram.png" alt="Calibre-Web Automated" title="Calibre-Web Automated Bulk Editing &amp;amp; Bulk Deletion"&gt;&lt;/p&gt; 
&lt;h1&gt;Features Currently Under Active Development and on our Roadmap üèóÔ∏èüõ£Ô∏è&lt;/h1&gt; 
&lt;h4&gt;High Priority üö®&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Integration of CWA with &lt;a href="https://hardcover.app/"&gt;Hardcover&lt;/a&gt; üìö 
  &lt;ul&gt; 
   &lt;li&gt;Ability to use Hardcover as a Metadata Provider&lt;/li&gt; 
   &lt;li&gt;Ability to sync read progress with your Hardcover account! (Kobo users only)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;A companion project to integrate CWA with the Friendliest &amp;amp; Warmest Place on the Internet üê≠üßÄ&lt;/li&gt; 
 &lt;li&gt;Support for Calibre Plugins e.g. deDRM üîå&lt;/li&gt; 
 &lt;li&gt;Split Libraries (having your Calibre Library and books in separate locations)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Lower Priority üå±&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Notification system integrations e.g. Telegram, Gotify, ntfy ect. üìß&lt;/li&gt; 
 &lt;li&gt;Possible Prowlarr Integration üêØ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please suggest any ideas or wishes you might have! we're open to anything!&lt;/p&gt; 
&lt;h1&gt;How To Install üìñ&lt;/h1&gt; 
&lt;h2&gt;Quick Install üöÄ&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the Docker Compose template file using the command below:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;curl -OL https://raw.githubusercontent.com/crocodilestick/calibre-web-automated/main/docker-compose.yml
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt; &lt;p&gt;Move the compose file to an empty folder (e.g. ~/docker/calibre-web-automated/docker-compose.yml). This will be used to store the server data and library&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Edit the compose file using the comments to help, filling in your Timezone (optional) and desired binds&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Navigate to where you downloaded the Compose file using &lt;code&gt;cd&lt;/code&gt; and run:&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And that's you off to the races! ü•≥ HOWEVER to avoid potential problems and ensure maximum functionality, we recommend carrying out these &lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#post-install-tasks"&gt;Post-Install Tasks Here&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Using Docker Compose üêã‚≠ê(Recommended)&lt;/h2&gt; 
&lt;h3&gt;1. Setup the container using the Docker Compose template below: üêãüìú&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;---
services:
  calibre-web-automated:
    image: crocodilestick/calibre-web-automated:latest
    container_name: calibre-web-automated
    environment:
      # Only change these if you know what you're doing
      - PUID=1000
      - PGID=1000
      # Edit to match your current timezone https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
      - TZ=UTC
    volumes:
      # CW users migrating should stop their existing CW instance, make a copy of the config folder, and bind that here to carry over all of their user settings ect.
      - /path/to/config/folder:/config
      # This is an ingest dir, NOT a library one. Anything added here will be automatically added to your library according to the settings you have configured in CWA Settings page. All files placed here are REMOVED AFTER PROCESSING
      - /path/to/the/folder/you/want/to/use/for/book/ingest:/cwa-book-ingest
      # If you don't have an existing library, CWA will automatically create one at the bind provided here
      - /path/to/your/calibre/library:/calibre-library
    ports:
      # Change the first number to change the port you want to access the Web UI, not the second
      - 8083:8083
    restart: unless-stopped
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Explanation of the Container Bindings:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure all 3 of the main bindings are separate directories, errors can occur when binds are made within other binds&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/config&lt;/code&gt; - This is used to store logs and other miscellaneous files that keep CWA running 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;New Users&lt;/strong&gt; - Use any empty folder (if you run into any issues, make sure the ownership of said folder isn't &lt;code&gt;root:root&lt;/code&gt; in your main os)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Existing/ CW Users&lt;/strong&gt; - Those with existing Calibre-Web setups, map this to your existing &lt;code&gt;/config&lt;/code&gt; directory containing &lt;code&gt;app.db&lt;/code&gt; to ensure settings and users are pulled in&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/cwa-book-ingest&lt;/code&gt; - &lt;strong&gt;ATTENTION&lt;/strong&gt; ‚ö†Ô∏è - All files within this folder will be &lt;strong&gt;DELETED&lt;/strong&gt; after being processed. This folder should only be used to dump new books into for import and automatic conversion&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/calibre-library&lt;/code&gt; - This should be bound to your Calibre library folder where the &lt;code&gt;metadata.db&lt;/code&gt; &amp;amp; book(s) files reside. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;New Users&lt;/strong&gt; - Use any empty folder (if you run into any issues, make sure the ownership of said folder isn't &lt;code&gt;root:root&lt;/code&gt; in your main os)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Existing/ CW Users&lt;/strong&gt; - If there are multiple libraries in the mounted directory, CWA will automatically find and mount the largest one - check the logs for more details on which &lt;code&gt;metadata.db&lt;/code&gt; was utilised&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- - `/books` _(Optional)_ Utilise if you have a separate collection of book files somewhere and want to be able to access within the container. For the majority of users, this is not required and mounting`/calibre-library' is sufficient --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;/app/calibre-web-automated/gmail.json&lt;/code&gt; &lt;em&gt;(Optional)&lt;/em&gt; - This is used to setup Calibre-Web and/or CWA with your gmail account for sending books via email. Follow the guide &lt;a href="https://github.com/janeczku/calibre-web/wiki/Setup-Mailserver#gmail"&gt;here&lt;/a&gt; if this is something you're interested in but be warned it can be a very fiddly process, I would personally recommend a simple SMTP Server&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And just like that, Calibre-Web Automated should be up and running! &lt;strong&gt;HOWEVER&lt;/strong&gt; to avoid potential problems and ensure maximum functionality,we recommend carrying out these &lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#post-install-tasks"&gt;Post-Install Tasks Here&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Users migrating from stock Calibre-Web&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;CWA has been designed to make switching over as easy as possible. To migrate your CW instance to CWA, simply: 
  &lt;ol&gt; 
   &lt;li&gt;Stop your instance of CW if it's still running&lt;/li&gt; 
   &lt;li&gt;Whatever your &lt;code&gt;/books&lt;/code&gt; bind was in Calibre-Web, should be your &lt;code&gt;/calibre-library&lt;/code&gt; bind for CWA&lt;/li&gt; 
   &lt;li&gt;Mount the same &lt;code&gt;/config&lt;/code&gt; folder in your Docker Compose that you were using for CW (or a copy of it to be extra safe)&lt;/li&gt; 
   &lt;li&gt;Mount the same folder containing your Calibre Library (the Docker Compose for the Linuxserver image of Calibre Web has this as &lt;code&gt;/books&lt;/code&gt; by default)&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;And then you're done! All of your users, settings ect. should be automatically carried over into your new CWA instance! Enjoy!&lt;/li&gt; 
 &lt;li&gt;If you run into an issue where the Web UI won't load, trying using the same port as you did for CW and then reconfiguring if you want to once you've got everything set up&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Post-Install Tasks:&lt;/h1&gt; 
&lt;h2&gt;&lt;em&gt;Calibre-Web Quick Start Guide&lt;/em&gt;&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open your browser and navigate to &lt;a href="http://localhost:8083"&gt;http://localhost:8083&lt;/a&gt; or &lt;a href="http://localhost:8083/opds"&gt;http://localhost:8083/opds&lt;/a&gt; for the OPDS catalog&lt;/li&gt; 
 &lt;li&gt;Log in with the default admin credentials (&lt;em&gt;below&lt;/em&gt;)&lt;/li&gt; 
 &lt;li&gt;Configure your Calibre-Web Automated instance via the Admin Page&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;A guide to what all of the stock CW Settings do can be found &lt;a href="https://github.com/janeczku/calibre-web/wiki/Configuration#basic-configuration"&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Make sure &lt;code&gt;Enable Uploads&lt;/code&gt; is enabled in &lt;code&gt;Settings -&amp;gt; Basic Configuration -&amp;gt; Feature Configuration&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Configure CWA to behave as you would like it to in the CWA Settings panel&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Here you can turn certain features on and off, set your Target Format, which file formats should be ignored and which should be auto-converted ect.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="6"&gt; 
 &lt;li&gt;Drop a book into your ingest folder to check everything is working and enjoy!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Default Admin Login:&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Username:&lt;/strong&gt; admin&lt;br&gt; &lt;strong&gt;Password:&lt;/strong&gt; admin123&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Usage üîß&lt;/h1&gt; 
&lt;h2&gt;Adding Books to Your Library&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simply move your newly downloaded or existing eBook files to the ingest folder which is &lt;code&gt;/cwa-book-ingest&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Anything you place in this folder will be automatically analysed, converted if necessary and then imported into your Calibre-Web library if not in a format you have told CWA to ignore in the CWA Settings Panel 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;‚ö†Ô∏è ATTENTION ‚ö†Ô∏è&lt;/strong&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;em&gt;Downloading files directly into &lt;code&gt;/cwa-book-ingest&lt;/code&gt; is not supported. It can cause duplicate imports and potentially a corrupt database. It is recommended to first download the books completely, then transfer them to &lt;code&gt;/cwa-book-ingest&lt;/code&gt; to avoid any issues&lt;/em&gt;&lt;/li&gt; 
     &lt;li&gt;Be sure that the books you are transferring to &lt;code&gt;/cwa-book-ingest&lt;/code&gt; are owned by your user rather than root. Otherwise, permission errors may occur and may result in incomplete importing.&lt;/li&gt; 
     &lt;li&gt;In the event you're expecting a book to be ingested and it hasn't been, use the "Library Refresh" button on the Upper Navbar to manually trigger the ingest process&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;KOReader Syncing (KOSync) üìñ‚ö°&lt;/h2&gt; 
&lt;p&gt;CWA now includes built-in KOReader syncing functionality, allowing you to sync your reading progress across devices using KOReader. This feature provides a modern, secure alternative to traditional KOReader sync servers. Navigate to &lt;code&gt;http://your-cwa-instance:8083/kosync&lt;/code&gt; in your browser where you'll find download links and installation instructions for the CWA KOReader plugin.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;For Developers - Building Custom Docker Image&lt;/h2&gt; 
&lt;p&gt;If you want to contribute to this project, you can build a local version with your changes by running &lt;code&gt;build.sh&lt;/code&gt; in the repository.&lt;/p&gt; 
&lt;p&gt;The resultant image will then be automatically deployed using the &lt;code&gt;docker-compose.yml.dev&lt;/code&gt; (make changes as necessary beforehand) in the directory and the &lt;code&gt;build/&lt;/code&gt; folder will be created, primarily housing the development docker-compose.yml file and its mount points. Add a calibre library here for testing if necessary.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ chmod +x build.sh
$ ./build.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check out &lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#post-install-tasks"&gt;Post-Install Tasks Here&lt;/a&gt; when necessary.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h1&gt;Further Development üèóÔ∏è&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;CWA is really lucky to have a very passionate and active community of people that really help shape CWA into what it is today&lt;/li&gt; 
 &lt;li&gt;If you have any ideas or want to contribute to the project, you're more than welcome to! We accept anyone regardless of skill level of expertise!&lt;/li&gt; 
 &lt;li&gt;If you've got a good idea or want to simply suggest improvements, simply get in touch with us on the Discord Server &lt;a href="https://discord.gg/EjgSeek94R"&gt;here&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>trekhleb/javascript-algorithms</title>
      <link>https://github.com/trekhleb/javascript-algorithms</link>
      <description>&lt;p&gt;üìù Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaScript Algorithms and Data Structures&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üá∫üá¶ UKRAINE &lt;a href="https://war.ukraine.ua/"&gt;IS BEING ATTACKED&lt;/a&gt; BY RUSSIAN ARMY. CIVILIANS ARE GETTING KILLED. RESIDENTIAL AREAS ARE GETTING BOMBED.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Help Ukraine via: 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://prytulafoundation.org/en/"&gt;Serhiy Prytula Charity Foundation&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://savelife.in.ua/en/donate-en/"&gt;Come Back Alive Charity Foundation&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://bank.gov.ua/en/news/all/natsionalniy-bank-vidkriv-spetsrahunok-dlya-zboru-koshtiv-na-potrebi-armiyi"&gt;National Bank of Ukraine&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;More info on &lt;a href="https://war.ukraine.ua/"&gt;war.ukraine.ua&lt;/a&gt; and &lt;a href="https://twitter.com/MFA_Ukraine"&gt;MFA of Ukraine&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster"&gt;&lt;img src="https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg?sanitize=true" alt="CI"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/trekhleb/javascript-algorithms"&gt;&lt;img src="https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg?sanitize=true" alt="codecov"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/repo-size/trekhleb/javascript-algorithms.svg?sanitize=true" alt="repo size"&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt; 
&lt;p&gt;Each algorithm and data structure has its own separate README with related explanations and links for further reading (including ones to YouTube videos).&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-CN.md"&gt;&lt;em&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-TW.md"&gt;&lt;em&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ko-KR.md"&gt;&lt;em&gt;ÌïúÍµ≠Ïñ¥&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ja-JP.md"&gt;&lt;em&gt;Êó•Êú¨Ë™û&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pl-PL.md"&gt;&lt;em&gt;Polski&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.fr-FR.md"&gt;&lt;em&gt;Fran√ßais&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.es-ES.md"&gt;&lt;em&gt;Espa√±ol&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pt-BR.md"&gt;&lt;em&gt;Portugu√™s&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ru-RU.md"&gt;&lt;em&gt;–†—É—Å—Å–∫–∏–π&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.tr-TR.md"&gt;&lt;em&gt;T√ºrk√ße&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.it-IT.md"&gt;&lt;em&gt;Italiano&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.id-ID.md"&gt;&lt;em&gt;Bahasa Indonesia&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.uk-UA.md"&gt;&lt;em&gt;–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ar-AR.md"&gt;&lt;em&gt;Arabic&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.vi-VN.md"&gt;&lt;em&gt;Ti·∫øng Vi·ªát&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.de-DE.md"&gt;&lt;em&gt;Deutsch&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.uz-UZ.md"&gt;&lt;em&gt;Uzbek&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.he-IL.md"&gt;&lt;em&gt;◊¢◊ë◊®◊ô◊™&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;‚òù Note that this project is meant to be used for learning and researching purposes only, and it is &lt;strong&gt;not&lt;/strong&gt; meant to be used for production.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Data Structures&lt;/h2&gt; 
&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can be accessed and modified efficiently. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data.&lt;/p&gt; 
&lt;p&gt;Remember that each data has its own trade-offs. And you need to pay attention more to why you're choosing a certain data structure than to how to implement it.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/linked-list"&gt;Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/doubly-linked-list"&gt;Doubly Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/queue"&gt;Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/stack"&gt;Stack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/hash-table"&gt;Hash Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/heap"&gt;Heap&lt;/a&gt; - max and min heap versions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/priority-queue"&gt;Priority Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/trie"&gt;Trie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree"&gt;Tree&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/binary-search-tree"&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/avl-tree"&gt;AVL Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/red-black-tree"&gt;Red-Black Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/segment-tree"&gt;Segment Tree&lt;/a&gt; - with min/max/sum range queries examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/fenwick-tree"&gt;Fenwick Tree&lt;/a&gt; (Binary Indexed Tree)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/graph"&gt;Graph&lt;/a&gt; (both directed and undirected)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/disjoint-set"&gt;Disjoint Set&lt;/a&gt; - a union‚Äìfind data structure or merge‚Äìfind set&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/bloom-filter"&gt;Bloom Filter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/lru-cache/"&gt;LRU Cache&lt;/a&gt; - Least Recently Used (LRU) cache&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Algorithms&lt;/h2&gt; 
&lt;p&gt;An algorithm is an unambiguous specification of how to solve a class of problems. It is a set of rules that precisely define a sequence of operations.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;h3&gt;Algorithms by Topic&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Math&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/bits"&gt;Bit Manipulation&lt;/a&gt; - set/get/update/clear bits, multiplication/division by two, make negative etc.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/binary-floating-point"&gt;Binary Floating Point&lt;/a&gt; - binary representation of the floating-point numbers.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/factorial"&gt;Factorial&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci"&gt;Fibonacci Number&lt;/a&gt; - classic and closed-form versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/prime-factors"&gt;Prime Factors&lt;/a&gt; - finding prime factors and counting them using Hardy-Ramanujan's theorem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/primality-test"&gt;Primality Test&lt;/a&gt; (trial division method)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm"&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/least-common-multiple"&gt;Least Common Multiple&lt;/a&gt; (LCM)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/sieve-of-eratosthenes"&gt;Sieve of Eratosthenes&lt;/a&gt; - finding all prime numbers up to any given limit&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/is-power-of-two"&gt;Is Power of Two&lt;/a&gt; - check if the number is power of two (naive and bitwise algorithms)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle"&gt;Pascal's Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/complex-number"&gt;Complex Number&lt;/a&gt; - complex numbers and basic operations with them&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/radian"&gt;Radian &amp;amp; Degree&lt;/a&gt; - radians to degree and backwards conversion&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering"&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/horner-method"&gt;Horner's method&lt;/a&gt; - polynomial evaluation&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix"&gt;Matrices&lt;/a&gt; - matrices and basic matrix operations (multiplication, transposition, etc.)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-distance"&gt;Euclidean Distance&lt;/a&gt; - distance between two points/vectors/matrices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition"&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/square-root"&gt;Square Root&lt;/a&gt; - Newton's method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/liu-hui"&gt;Liu Hui œÄ Algorithm&lt;/a&gt; - approximate œÄ calculations based on N-gons&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform"&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sets&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/cartesian-product"&gt;Cartesian Product&lt;/a&gt; - product of multiple sets&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/fisher-yates"&gt;Fisher‚ÄìYates Shuffle&lt;/a&gt; - random permutation of a finite sequence&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set"&gt;Power Set&lt;/a&gt; - all subsets of a set (bitwise, backtracking, and cascading solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations"&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations"&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence"&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence"&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence"&gt;Shortest Common Supersequence&lt;/a&gt; (SCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem"&gt;Knapsack Problem&lt;/a&gt; - "0/1" and "Unbound" ones&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray"&gt;Maximum Subarray&lt;/a&gt; - "Brute Force" and "Dynamic Programming" (Kadane's) versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum"&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/hamming-distance"&gt;Hamming Distance&lt;/a&gt; - number of positions at which the symbols are different&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/palindrome"&gt;Palindrome&lt;/a&gt; - check if the string is the same in reverse&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance"&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/knuth-morris-pratt"&gt;Knuth‚ÄìMorris‚ÄìPratt Algorithm&lt;/a&gt; (KMP Algorithm) - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/z-algorithm"&gt;Z Algorithm&lt;/a&gt; - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/rabin-karp"&gt;Rabin Karp Algorithm&lt;/a&gt; - substring search&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring"&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching"&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Searches&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search"&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/jump-search"&gt;Jump Search&lt;/a&gt; (or Block Search) - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search"&gt;Binary Search&lt;/a&gt; - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/interpolation-search"&gt;Interpolation Search&lt;/a&gt; - search in uniformly distributed sorted array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/bubble-sort"&gt;Bubble Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/selection-sort"&gt;Selection Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/insertion-sort"&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/heap-sort"&gt;Heap Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort"&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort"&gt;Quicksort&lt;/a&gt; - in-place and non-in-place implementations&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/shell-sort"&gt;Shellsort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/counting-sort"&gt;Counting Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/radix-sort"&gt;Radix Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/bucket-sort"&gt;Bucket Sort&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linked Lists&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/traversal"&gt;Straight Traversal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/reverse-traversal"&gt;Reverse Traversal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trees&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search"&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/breadth-first-search"&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Graphs&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search"&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/breadth-first-search"&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal"&gt;Kruskal‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra"&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford"&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall"&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/detect-cycle"&gt;Detect Cycle&lt;/a&gt; - for both directed and undirected graphs (DFS and Disjoint Set based versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim"&gt;Prim‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/topological-sorting"&gt;Topological Sorting&lt;/a&gt; - DFS method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/articulation-points"&gt;Articulation Points&lt;/a&gt; - Tarjan's algorithm (DFS based)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bridges"&gt;Bridges&lt;/a&gt; - DFS based algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/eulerian-path"&gt;Eulerian Path and Eulerian Circuit&lt;/a&gt; - Fleury's algorithm - Visit every edge exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle"&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/strongly-connected-components"&gt;Strongly Connected Components&lt;/a&gt; - Kosaraju's algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman"&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cryptography&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/polynomial-hash"&gt;Polynomial Hash&lt;/a&gt; - rolling hash function based on polynomial&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/rail-fence-cipher"&gt;Rail Fence Cipher&lt;/a&gt; - a transposition cipher algorithm for encoding messages&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/caesar-cipher"&gt;Caesar Cipher&lt;/a&gt; - simple substitution cipher&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/hill-cipher"&gt;Hill Cipher&lt;/a&gt; - substitution cipher based on linear algebra&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://github.com/trekhleb/nano-neuron"&gt;NanoNeuron&lt;/a&gt; - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/knn"&gt;k-NN&lt;/a&gt; - k-nearest neighbors classification algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/k-means"&gt;k-Means&lt;/a&gt; - k-Means clustering algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Image Processing&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving"&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Statistics&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/statistics/weighted-random"&gt;Weighted Random&lt;/a&gt; - select the random item from the list based on items' weights&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evolutionary algorithms&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://github.com/trekhleb/self-parking-car-evolution"&gt;Genetic algorithm&lt;/a&gt; - example of how the genetic algorithm may be applied for training the self-parking cars&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Uncategorized&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower"&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/square-matrix-rotation"&gt;Square Matrix Rotation&lt;/a&gt; - in-place algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game"&gt;Jump Game&lt;/a&gt; - backtracking, dynamic programming (top-down + bottom-up) and greedy examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths"&gt;Unique Paths&lt;/a&gt; - backtracking, dynamic programming and Pascal's Triangle based examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces"&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem (dynamic programming and brute force versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase"&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top (4 solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks"&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/stack/valid-parentheses"&gt;Valid Parentheses&lt;/a&gt; - check if a string has valid parentheses (using stack)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens"&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour"&gt;Knight's Tour&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Algorithms by Paradigm&lt;/h3&gt; 
&lt;p&gt;An algorithmic paradigm is a generic method or approach which underlies the design of a class of algorithms. It is an abstraction higher than the notion of an algorithm, just as an algorithm is an abstraction higher than a computer program.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Brute Force&lt;/strong&gt; - look at all the possibilities and selects the best solution 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search"&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces"&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase"&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray"&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman"&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform"&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Greedy&lt;/strong&gt; - choose the best option at the current time, without any consideration for the future 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game"&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem"&gt;Unbound Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra"&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim"&gt;Prim‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal"&gt;Kruskal‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Divide and Conquer&lt;/strong&gt; - divide the problem into smaller parts and then solve those parts 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search"&gt;Binary Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower"&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle"&gt;Pascal's Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm"&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort"&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort"&gt;Quicksort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search"&gt;Tree Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search"&gt;Graph Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix"&gt;Matrices&lt;/a&gt; - generating and traversing the matrices of different shapes&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game"&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering"&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks"&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations"&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations"&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray"&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Programming&lt;/strong&gt; - build up a solution using previously found sub-solutions 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci"&gt;Fibonacci Number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game"&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths"&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces"&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase"&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving"&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance"&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence"&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring"&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence"&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence"&gt;Shortest Common Supersequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem"&gt;0/1 Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition"&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray"&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford"&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall"&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching"&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backtracking&lt;/strong&gt; - similarly to brute force, try to generate all possible solutions, but each time you generate the next solution, you test if it satisfies all conditions and only then continue generating subsequent solutions. Otherwise, backtrack and go on a different path to finding a solution. Normally the DFS traversal of state-space is being used. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game"&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths"&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set"&gt;Power Set&lt;/a&gt; - all subsets of a set&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle"&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens"&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour"&gt;Knight's Tour&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum"&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Branch &amp;amp; Bound&lt;/strong&gt; - remember the lowest-cost solution found at each stage of the backtracking search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of a least-cost solution to the problem in order to discard partial solutions with costs larger than the lowest-cost solution found so far. Normally, BFS traversal in combination with DFS traversal of state-space tree is being used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use this repository&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Install all dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run ESLint&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may want to run it to check code quality.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run all tests&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run tests by name&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- 'LinkedList'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Troubleshooting&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If linting or testing is failing, try to delete the &lt;code&gt;node_modules&lt;/code&gt; folder and re-install npm packages:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;rm -rf ./node_modules
npm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also, make sure that you're using the correct Node version (&lt;code&gt;&amp;gt;=16&lt;/code&gt;). If you're using &lt;a href="https://github.com/nvm-sh/nvm"&gt;nvm&lt;/a&gt; for Node version management you may run &lt;code&gt;nvm use&lt;/code&gt; from the root folder of the project and the correct version will be picked up.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Playground&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may play with data-structures and algorithms in &lt;code&gt;./src/playground/playground.js&lt;/code&gt; file and write tests for it in &lt;code&gt;./src/playground/__test__/playground.test.js&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then just, simply run the following command to test if your playground code works as expected:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- 'playground'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Useful Information&lt;/h2&gt; 
&lt;h3&gt;References&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8"&gt;‚ñ∂ Data Structures and Algorithms on YouTube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://okso.app/showcase/data-structures"&gt;‚úçüèª Data Structure Sketches&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Big O Notation&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Big O notation&lt;/em&gt; is used to classify algorithms according to how their running time or space requirements grow as the input size grows. On the chart below, you may find the most common orders of growth of algorithms specified in Big O notation.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/assets/big-o-graph.png" alt="Big O graphs"&gt;&lt;/p&gt; 
&lt;p&gt;Source: &lt;a href="http://bigocheatsheet.com/"&gt;Big O Cheat Sheet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Below is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Big O Notation&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Computations for 10 elements&lt;/th&gt; 
   &lt;th&gt;Computations for 100 elements&lt;/th&gt; 
   &lt;th&gt;Computations for 1000 elements&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(1)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Constant&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(log N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Logarithmic&lt;/td&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Linear&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;100&lt;/td&gt; 
   &lt;td&gt;1000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N log N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;n log(n)&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;600&lt;/td&gt; 
   &lt;td&gt;9000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N^2)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Quadratic&lt;/td&gt; 
   &lt;td&gt;100&lt;/td&gt; 
   &lt;td&gt;10000&lt;/td&gt; 
   &lt;td&gt;1000000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(2^N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Exponential&lt;/td&gt; 
   &lt;td&gt;1024&lt;/td&gt; 
   &lt;td&gt;1.26e+29&lt;/td&gt; 
   &lt;td&gt;1.07e+301&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N!)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Factorial&lt;/td&gt; 
   &lt;td&gt;3628800&lt;/td&gt; 
   &lt;td&gt;9.3e+157&lt;/td&gt; 
   &lt;td&gt;4.02e+2567&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Data Structure Operations Complexity&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Data Structure&lt;/th&gt; 
   &lt;th align="center"&gt;Access&lt;/th&gt; 
   &lt;th align="center"&gt;Search&lt;/th&gt; 
   &lt;th align="center"&gt;Insertion&lt;/th&gt; 
   &lt;th align="center"&gt;Deletion&lt;/th&gt; 
   &lt;th align="left"&gt;Comments&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Array&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Stack&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Queue&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Linked List&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Hash Table&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="left"&gt;In case of perfect hash function costs would be O(1)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Binary Search Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="left"&gt;In case of balanced tree costs would be O(log(n))&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;B-Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Red-Black Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AVL Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Bloom Filter&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;False positives are possible while searching&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Array Sorting Algorithms Complexity&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th align="center"&gt;Best&lt;/th&gt; 
   &lt;th align="center"&gt;Average&lt;/th&gt; 
   &lt;th align="center"&gt;Worst&lt;/th&gt; 
   &lt;th align="center"&gt;Memory&lt;/th&gt; 
   &lt;th align="center"&gt;Stable&lt;/th&gt; 
   &lt;th align="left"&gt;Comments&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Bubble sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;Yes&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Insertion sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;Yes&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Selection sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;No&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Heap sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;No&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Merge sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;Yes&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Quick sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;No&lt;/td&gt; 
   &lt;td align="left"&gt;Quicksort is usually done in-place with O(log(n)) stack space&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Shell sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;depends on gap sequence&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;(log(n))&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;No&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Counting sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n + r&lt;/td&gt; 
   &lt;td align="center"&gt;n + r&lt;/td&gt; 
   &lt;td align="center"&gt;n + r&lt;/td&gt; 
   &lt;td align="center"&gt;n + r&lt;/td&gt; 
   &lt;td align="center"&gt;Yes&lt;/td&gt; 
   &lt;td align="left"&gt;r - biggest number in array&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Radix sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n * k&lt;/td&gt; 
   &lt;td align="center"&gt;n * k&lt;/td&gt; 
   &lt;td align="center"&gt;n * k&lt;/td&gt; 
   &lt;td align="center"&gt;n + k&lt;/td&gt; 
   &lt;td align="center"&gt;Yes&lt;/td&gt; 
   &lt;td align="left"&gt;k - length of longest key&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Project Backers&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You may support this project via ‚ù§Ô∏èÔ∏è &lt;a href="https://github.com/sponsors/trekhleb"&gt;GitHub&lt;/a&gt; or ‚ù§Ô∏èÔ∏è &lt;a href="https://www.patreon.com/trekhleb"&gt;Patreon&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms/raw/master/BACKERS.md"&gt;Folks who are backing this project&lt;/a&gt; &lt;code&gt;‚àë = 1&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://trekhleb.dev"&gt;@trekhleb&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A few more &lt;a href="https://trekhleb.dev/projects/"&gt;projects&lt;/a&gt; and &lt;a href="https://trekhleb.dev/blog/"&gt;articles&lt;/a&gt; about JavaScript and algorithms on &lt;a href="https://trekhleb.dev"&gt;trekhleb.dev&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>leonardomso/33-js-concepts</title>
      <link>https://github.com/leonardomso/33-js-concepts</link>
      <description>&lt;p&gt;üìú 33 JavaScript concepts every developer should know.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;br&gt; &lt;a href="https://github.com/leonardomso/33"&gt;&lt;img src="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/github-image.png" alt="33 Concepts Every JS Developer Should Know"&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;33 Concepts Every JavaScript Developer Should Know&lt;/strong&gt; &lt;br&gt;&lt;br&gt; &lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt; &lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#introduction"&gt;Introduction&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#community"&gt;Community&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;Table of Contents&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#license"&gt;License&lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;strong&gt;üöÄ Considered by GitHub as one of the &lt;a href="https://blog.github.com/2018-12-13-new-open-source-projects/"&gt;top open source projects of 2018!&lt;/a&gt;&lt;/strong&gt; 
&lt;/div&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This repository was created with the intention of helping developers master their concepts in JavaScript. It is not a requirement, but a guide for future studies. It is based on an article written by Stephen Curtis and you can read it &lt;a href="https://medium.com/@stephenthecurt/33-fundamentals-every-javascript-developer-should-know-13dd720a90d1"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Feel free to submit a PR by adding a link to your own recaps or reviews. If you want to translate the repo into your native language, please feel free to do so.&lt;/p&gt; 
&lt;p&gt;All the translations for this repo will be listed below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amrsekilly/33-js-concepts"&gt;ÿßŸéŸÑŸíÿπŸéÿ±Ÿéÿ®ŸêŸäŸéŸëÿ©Ÿè‚Äé (Arabic)&lt;/a&gt; ‚Äî Amr Elsekilly&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thewebmasterp/33-js-concepts"&gt;–ë—ä–ª–≥–∞—Ä—Å–∫–∏ (Bulgarian)&lt;/a&gt; - thewebmasterp&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stephentian/33-js-concepts"&gt;Ê±âËØ≠ (Chinese)&lt;/a&gt; ‚Äî Re Tian&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tiagoboeing/33-js-concepts"&gt;Portugu√™s do Brasil (Brazilian Portuguese)&lt;/a&gt; ‚Äî Tiago Boeing&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yjs03057/33-js-concepts.git"&gt;ÌïúÍµ≠Ïñ¥ (Korean)&lt;/a&gt; ‚Äî Suin Lee&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adonismendozaperez/33-js-conceptos"&gt;Espa√±ol (Spanish)&lt;/a&gt; ‚Äî Adonis Mendoza&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ilker0/33-js-concepts"&gt;T√ºrk√ße (Turkish)&lt;/a&gt; ‚Äî ƒ∞lker Demir&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gumennii/33-js-concepts"&gt;—Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ (Russian)&lt;/a&gt; ‚Äî Mihail Gumennii&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nguyentranchung/33-js-concepts"&gt;Ti·∫øng Vi·ªát (Vietnamese)&lt;/a&gt; ‚Äî Nguy·ªÖn Tr·∫ßn Chung&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lip3k/33-js-concepts"&gt;Polski (Polish)&lt;/a&gt; ‚Äî Dawid Lipinski&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/majidalavizadeh/33-js-concepts"&gt;ŸÅÿßÿ±ÿ≥€å (Persian)&lt;/a&gt; ‚Äî Majid Alavizadeh&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rijdz/33-js-concepts"&gt;Bahasa Indonesia (Indonesian)&lt;/a&gt; ‚Äî Rijdzuan Sampoerna&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/robinmetral/33-concepts-js"&gt;Fran√ßais (French)&lt;/a&gt; ‚Äî Robin M√©tral&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vikaschauhan/33-js-concepts"&gt;‡§π‡§ø‡§®‡•ç‡§¶‡•Ä (Hindi)&lt;/a&gt; ‚Äî Vikas Chauhan&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DimitrisZx/33-js-concepts"&gt;ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨ (Greek)&lt;/a&gt; ‚Äî Dimitris Zarachanis&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oimo23/33-js-concepts"&gt;Êó•Êú¨Ë™û (Japanese)&lt;/a&gt; ‚Äî oimo23&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/burhannn/33-js-concepts"&gt;Deutsch (German)&lt;/a&gt; ‚Äî burhannn&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AndrewSavetchuk/33-js-concepts-ukrainian-translation"&gt;—É–∫—Ä–∞—óÃÅ–Ω—Å—å–∫–∞ –º–æÃÅ–≤–∞ (Ukrainian)&lt;/a&gt; ‚Äî Andrew Savetchuk&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ududsha/33-js-concepts"&gt;‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω (Sinhala)&lt;/a&gt; ‚Äî Udaya Shamendra&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Donearm/33-js-concepts"&gt;Italiano (Italian)&lt;/a&gt; ‚Äî Gianluca Fiore&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ANormalStick/33-js-concepts"&gt;Latvie≈°u (Latvian)&lt;/a&gt; - JƒÅnis ƒ™vƒÅns&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Amandagne/33-js-concepts"&gt;Afaan Oromoo (Oromo)&lt;/a&gt; - Amanuel Dagnachew&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ninearif/33-js-concepts"&gt;‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ (Thai)&lt;/a&gt; ‚Äî Arif Waram&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marioestradaf/33-js-concepts"&gt;Catal√† (Catalan)&lt;/a&gt; ‚Äî Mario Estrada&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/FenixHongell/33-js-concepts/"&gt;Svenska (Swedish)&lt;/a&gt; ‚Äî Fenix Hongell&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Chhunneng/33-js-concepts"&gt;·ûÅ·üí·ûò·üÇ·ûö (Khmer)&lt;/a&gt; ‚Äî Chrea Chanchhunneng&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hmhard/33-js-concepts"&gt;·ä†·àõ·à≠·äõ (Ethiopian)&lt;/a&gt; - Miniyahil Kebede(·àù·äï·ã´·àÖ·àç ·ä®·â†·ã∞)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Yafimau/33-js-concepts"&gt;–ë–µ–ª–∞—Ä—É—Å–∫–∞—è –º–æ–≤–∞ (Belarussian)&lt;/a&gt; ‚Äî Dzianis Yafimau&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/smnv-shokh/33-js-concepts"&gt;O'zbekcha (Uzbek)&lt;/a&gt; ‚Äî Shokhrukh Usmonov&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sudoyasir/33-js-concepts"&gt;Urdu (ÿßÿ±ÿØŸà)&lt;/a&gt; ‚Äî Yasir Nawaz&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/milostivyy/33-js-concepts"&gt;‡§π‡§ø‡§®‡•ç‡§¶‡•Ä (Hindi)&lt;/a&gt; ‚Äî Mahima Chauhan&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jisan-mia/33-js-concepts"&gt;‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ (Bengali)&lt;/a&gt; ‚Äî Jisan Mia&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VatsalBhuva11/33-js-concepts"&gt;‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä (Gujarati)&lt;/a&gt; ‚Äî Vatsal Bhuva&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Sunny-unik/33-js-concepts"&gt;ÿ≥ŸÜ⁄åŸä (Sindhi)&lt;/a&gt; ‚Äî Sunny Gandhwani&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/debnath003/33-js-concepts"&gt;‡§≠‡•ã‡§ú‡§™‡•Å‡§∞‡•Ä (Bhojpuri)&lt;/a&gt; ‚Äî Pronay Debnath&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Harshdev098/33-js-concepts"&gt;‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä (Punjabi)&lt;/a&gt; ‚Äî Harsh Dev Pathak&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Harshdev098/33-js-concepts"&gt;Latin (Latin)&lt;/a&gt; ‚Äî Harsh Dev Pathak&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Stark-Akshay/33-js-concepts"&gt;‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç (Malayalam)&lt;/a&gt; ‚Äî Akshay Manoj&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ayobaj/33-js-concepts"&gt;Yor√πb√° (Yoruba)&lt;/a&gt; - Ayomide Bajulaye&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafyzg/33-js-concepts"&gt;◊¢◊ë◊®◊ô◊™‚Äé (Hebrew)&lt;/a&gt; ‚Äî Refael Yzgea&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;img align="center" width="35" height="35" src="https://media4.giphy.com/media/3hoLIVAJYkz6T0Ichp/giphy.gif"&gt; &lt;a id="table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#1-call-stack"&gt;&lt;strong&gt;Call Stack&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#2-primitive-types"&gt;&lt;strong&gt;Primitive Types&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#3-value-types-and-reference-types"&gt;&lt;strong&gt;Value Types and Reference Types&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#4-implicit-explicit-nominal-structuring-and-duck-typing"&gt;&lt;strong&gt;Implicit, Explicit, Nominal, Structuring and Duck Typing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#5--vs--vs-typeof"&gt;&lt;strong&gt;== vs === vs typeof&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#6-function-scope-block-scope-and-lexical-scope"&gt;&lt;strong&gt;Function Scope, Block Scope and Lexical Scope&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#7-expression-vs-statement"&gt;&lt;strong&gt;Expression vs Statement&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#8-iife-modules-and-namespaces"&gt;&lt;strong&gt;IIFE, Modules and Namespaces&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#9-message-queue-and-event-loop"&gt;&lt;strong&gt;Message Queue and Event Loop&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#10-settimeout-setinterval-and-requestanimationframe"&gt;&lt;strong&gt;setTimeout, setInterval and requestAnimationFrame&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#11-javascript-engines"&gt;&lt;strong&gt;JavaScript Engines&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#12-bitwise-operators-type-arrays-and-array-buffers"&gt;&lt;strong&gt;Bitwise Operators, Type Arrays and Array Buffers&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#13-dom-and-layout-trees"&gt;&lt;strong&gt;DOM and Layout Trees&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#14-factories-and-classes"&gt;&lt;strong&gt;Factories and Classes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#15-this-call-apply-and-bind"&gt;&lt;strong&gt;this, call, apply and bind&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#16-new-constructor-instanceof-and-instances"&gt;&lt;strong&gt;new, Constructor, instanceof and Instances&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#17-prototype-inheritance-and-prototype-chain"&gt;&lt;strong&gt;Prototype Inheritance and Prototype Chain&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#18-objectcreate-and-objectassign"&gt;&lt;strong&gt;Object.create and Object.assign&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#19-map-reduce-filter"&gt;&lt;strong&gt;map, reduce, filter&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#20-pure-functions-side-effects-state-mutation-and-event-propagation"&gt;&lt;strong&gt;Pure Functions, Side Effects, State Mutation and Event Propagation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#21-closures"&gt;&lt;strong&gt;Closures&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#22-high-order-functions"&gt;&lt;strong&gt;High Order Functions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#23-recursion"&gt;&lt;strong&gt;Recursion&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#24-collections-and-generators"&gt;&lt;strong&gt;Collections and Generators&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#25-promises"&gt;&lt;strong&gt;Promises&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#26-asyncawait"&gt;&lt;strong&gt;async/await&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#27-data-structures"&gt;&lt;strong&gt;Data Structures&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#28-expensive-operation-and-big-o-notation"&gt;&lt;strong&gt;Expensive Operation and Big O Notation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#29-algorithms"&gt;&lt;strong&gt;Algorithms&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#30-inheritance-polymorphism-and-code-reuse"&gt;&lt;strong&gt;Inheritance, Polymorphism and Code Reuse&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#31-design-patterns"&gt;&lt;strong&gt;Design Patterns&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#32-partial-applications-currying-compose-and-pipe"&gt;&lt;strong&gt;Partial Applications, Currying, Compose and Pipe&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#33-clean-code"&gt;&lt;strong&gt;Clean Code&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h2&gt;1. Call Stack&lt;/h2&gt; 
&lt;p&gt;The call stack is a mechanism that the JavaScript interpreter uses to keep track of function execution within a program. In JavaScript, functions are executed in the order they are called. The call stack follows the Last In, First Out (LIFO) principle, meaning that the last function pushed onto the stack is the first one to be executed.&lt;/p&gt; 
&lt;p&gt;According to the ECMAScript specification, the call stack is defined as part of the execution context. Whenever a function is called, a new execution context is created and placed at the top of the stack. Once the function completes, its execution context is removed from the stack, and control returns to the previous context. This helps manage synchronous code execution, as each function call must complete before the next one can begin.&lt;/p&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Call_stack"&gt;Call Stack ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@gaurav.pandvia/understanding-javascript-function-executions-tasks-event-loop-call-stack-more-part-1-5683dea1f5ec"&gt;Understanding Javascript Call Stack, Event Loops ‚Äî Gaurav Pandvia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/understanding-the-javascript-call-stack-861e41ae61d4"&gt;Understanding the JavaScript Call Stack ‚Äî Charles Freeborn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@valentinog/javascript-what-is-the-execution-context-what-is-the-call-stack-bd23c78f10d1"&gt;Javascript: What Is The Execution Context? What Is The Call Stack? ‚Äî Valentino Gagliardi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/jesstelford/9a35d20a2aa044df8bf241e00d7bc2d0"&gt;What is the JS Event Loop and Call Stack? ‚Äî Jess Telford&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0"&gt;Understanding Execution Context and Execution Stack in Javascript ‚Äî Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/bipinrajbhar/how-javascript-works-under-the-hood-an-overview-of-javascript-engine-heap-and-call-stack-1j5o"&gt;How JavaScript Works Under The Hood: An Overview of JavaScript Engine, Heap and, Call Stack ‚Äî Bipin Rajbhar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=W8AeMrVtFLY"&gt;The JS Call stack Explained in 9 minutes&lt;/a&gt; - Colt Steel (YouTube)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=w6QGEiQceOM"&gt;Javascript: the Call Stack explained ‚Äî Coding Blocks India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=W8AeMrVtFLY"&gt;The JS Call Stack Explained In 9 Minutes ‚Äî Colt Steele&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=w7QWQlkLY_s"&gt;What is the Call Stack? ‚Äî Eric Traub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Q2sFmqvpBe0"&gt;The Call Stack ‚Äî Kevin Drumm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Z6a1cLyq7Ac&amp;amp;list=PLWrQZnG8l0E4kd1T_nyuVoxQUaYEWFgcD"&gt;Understanding JavaScript Execution ‚Äî Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ"&gt;What the heck is the event loop anyway? ‚Äî Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=iLWTnMzWtj4&amp;amp;list=PLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP"&gt;How JavaScript Code is executed? ‚ù§Ô∏è&amp;amp; Call Stack ‚Äî Akshay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aCPkszeKRa4"&gt;Call Stacks - CS50&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HXqXPGS96rw"&gt;Learn the JavaScript Call Stack - codecupdev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=P6H-T4cUDR4"&gt;JavaScript Functions and the Call Stack | How does the Call stack work - Chidre'sTechTutorials&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;2. Primitive Types&lt;/h2&gt; 
&lt;p&gt;According to the ECMAScript specification, JavaScript has six primitive data types: string, number, bigint, boolean, undefined, and symbol. These types are immutable, meaning their values cannot be altered. There is also a special primitive type called null, which represents the intentional absence of any object value.&lt;/p&gt; 
&lt;p&gt;Primitive values are directly assigned to a variable, and when you manipulate a primitive type, you're working directly on the value. Unlike objects, primitives do not have properties or methods, but JavaScript automatically wraps primitive values with object counterparts when necessary (e.g., when calling methods on strings).&lt;/p&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values"&gt;JavaScript data types and data structures ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/primitive-and-non-primitive-data-types-in-javascript"&gt;Primitive and Non-primitive data-types in JavaScript - GeeksforGeeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://2ality.com/2012/04/number-encoding.html"&gt;How numbers are encoded in JavaScript ‚Äî Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.chewxy.com/2014/02/24/what-every-javascript-developer-should-know-about-floating-point-numbers/"&gt;What Every JavaScript Developer Should Know About Floating Point Numbers ‚Äî Chewxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascriptweblog.wordpress.com/2010/09/27/the-secret-life-of-javascript-primitives/"&gt;The Secret Life of JavaScript Primitives ‚Äî Angus Croll&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flow.org/en/docs/types/primitives/"&gt;Primitive Types ‚Äî Flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/d4nyll/not-everything-in-javascript-is-an-object"&gt;(Not) Everything in JavaScript is an Object ‚Äî Daniel Li&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values"&gt;JavaScript data types and data structures ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/diving-deeper-in-javascripts-objects-318b1e13dc12"&gt;Diving Deeper in JavaScripts Objects ‚Äî Arfat Salman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@bolajiayodeji/the-differences-between-object-freeze-vs-const-in-javascript-4eacea534d7c"&gt;The differences between Object.freeze() vs Const in JavaScript ‚Äî Bolaji Ayodeji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/object-toprimitive"&gt;Object to primitive conversion ‚Äî JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/primitives-methods"&gt;Methods of primitives - Javascript.info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9ooYYRLdg_g"&gt;JavaScript Reference vs Primitive Types ‚Äî Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HsbWQsSCE5Y"&gt;JavaScript Primitive Types ‚Äî Simon Sez IT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=e-_mDyqm2oU"&gt;Value Types and Reference Types in JavaScript ‚Äî Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qw3j0A3DIzQ"&gt;JavaScript Primitive Data Types ‚Äî Avelx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=MqHDDtVYJRI"&gt;Everything you never wanted to know about JavaScript numbers ‚Äî Bartek Szopka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=B4Bbmei_thw"&gt;What are variables in Javascript? ‚Äî JS For Everyone&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cC65D2q5f8I"&gt;TIPOS DE DATOS PRIMITIVOS en JAVASCRIPT - La Cocina del C√≥digo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aFDvBjVjCh8"&gt;Data Type in JavaScript - ScholarHat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;3. Value Types and Reference Types&lt;/h2&gt; 
&lt;p&gt;According to the ECMAScript specification, value types are stored directly in the location that the variable accesses. These include types like number, string, boolean, undefined, bigint, symbol, and null. When you assign a value type to a variable, the value itself is stored.&lt;/p&gt; 
&lt;p&gt;Reference types, on the other hand, are objects stored in the heap. Variables assigned to reference types actually store references (pointers) to the objects, not the objects themselves. When you assign a reference type to another variable, both variables reference the same object in memory.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/explaining-value-vs-reference-in-javascript-647a975e12a0"&gt;Explaining Value vs. Reference in Javascript ‚Äî Arnav Aggarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/branneman/7fb06d8a74d7e6d4cbcf75c50fec599c"&gt;Primitive Types &amp;amp; Reference Types in JavaScript ‚Äî Bran van der Meer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@benastontweet/lesson-1b-javascript-fundamentals-380f601ba851"&gt;Value Types, Reference Types and Scope in JavaScript ‚Äî Ben Aston&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/back-to-roots-javascript-value-vs-reference-8fb69d587a18"&gt;Back to roots: JavaScript Value vs Reference ‚Äî Miro Koczka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/grasp-by-value-and-by-reference-in-javascript-7ed75efa1293"&gt;Grasp "By Value" and "By Reference" in JavaScript ‚Äî L√©na Faure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/javascript-reference-and-copy-variables-b0103074fdf0"&gt;JavaScript Reference and Copy Variables ‚Äî V√≠tor Capretz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.javascripttutorial.net/javascript-primitive-vs-reference-values/"&gt;JavaScript Primitive vs Reference Values&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/6605640/javascript-by-reference-vs-by-value"&gt;JavaScript by Reference vs. by Value ‚Äî nrabinowitz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/mostlyfocusedmike/javascript-interview-prep-primitive-vs-reference-types-3o4f"&gt;JavaScript Interview Prep: Primitive vs. Reference Types ‚Äî Mike Cronin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.tutsplus.com/tutorials/javascript-map-vs-foreach-when-to-use-each-one--cms-38365"&gt;JavaScript map vs. forEach: When to Use Each One - Sajal Soni&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=E-dAnFdq8k8"&gt;Javascript Pass by Value vs Pass by Reference ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=fD0t_DKREbE"&gt;JavaScript Value vs Reference Types ‚Äî Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=AvkyOrWkuQc"&gt;VALORES vs REFERENCIAS en JAVASCRIPT - La Cocina del C√≥digo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9ooYYRLdg_g"&gt;JavaScript - Reference vs Primitive Values/ Types - Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=e-_mDyqm2oU"&gt;Value Types and Reference Types in JavaScript - Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;4. Implicit, Explicit, Nominal, Structuring and Duck Typing&lt;/h2&gt; 
&lt;p&gt;The ECMAScript specification defines JavaScript as a dynamically typed language, meaning that types are associated with values rather than variables, and type checking occurs at runtime. There are various ways JavaScript manages types:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Implicit Typing (or Type Coercion):&lt;/strong&gt; This occurs when JavaScript automatically converts one data type to another when required. For instance, JavaScript might convert a string to a number during an arithmetic operation. While this can simplify some code, it can also lead to unexpected results if not handled carefully.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Explicit Typing:&lt;/strong&gt; Unlike implicit typing, explicit typing involves manually converting a value from one type to another using functions like Number(), String(), or Boolean().&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Nominal Typing:&lt;/strong&gt; JavaScript doesn't natively support nominal typing, where types are explicitly declared and checked. However, TypeScript, a superset of JavaScript, brings this feature to help catch type errors during development.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structural Typing:&lt;/strong&gt; In this type system, types are based on the structure or properties of the data. JavaScript is a structurally typed language where objects are compatible if they share the same structure (i.e., the same set of properties and methods).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Duck Typing:&lt;/strong&gt; This is a concept where an object's suitability is determined by the presence of certain properties and methods, rather than by the actual type of the object. JavaScript relies heavily on duck typing, where behavior is inferred from an object's properties rather than its declared type.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/promhize/what-you-need-to-know-about-javascripts-implicit-coercion-e23"&gt;What you need to know about Javascript's Implicit Coercion ‚Äî Promise Tochi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/js-type-coercion-explained-27ba3d9a2839"&gt;JavaScript Type Coercion Explained ‚Äî Alexey Samoshkin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/javascript-coercion-explained-545c895213d3"&gt;Javascript Coercion Explained ‚Äî Ben Garrison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/19915688/what-exactly-is-type-coercion-in-javascript"&gt;What exactly is Type Coercion in Javascript? - Stack Overflow&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qGyqzN0bjhc&amp;amp;t"&gt;== ? === ??? ...#@^% - Shirmung Bielefeld&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=b04Q_vyqEG8"&gt;Coercion in Javascript - Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=z4-8wMSPJyI"&gt;JavaScript Questions: What is Coercion? - Steven Hancock&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=C5fr0LZLMAs"&gt;Typing: Static vs Dynamic, Weak vs. Strong - Codexpanse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0ei4nb49GKo"&gt;EL SISTEMA de TIPOS DE JAVASCRIPT - La Cocina del C√≥digo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oEpgyoMEkrM"&gt;Duck Typing in Javascript - Techmaker Studio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/e4X1KAuk6Bs?si=krZKbsM2i3tmIl2G"&gt;Duck Typing in Javascript - Programming with Kartik&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS/tree/1st-ed"&gt;You Don't Know JS, 1st Edition: Types &amp;amp; Grammar ‚Äî Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;5. == vs === vs typeof&lt;/h2&gt; 
&lt;p&gt;According to the ECMAScript specification, JavaScript includes both strict (===) and loose (==) equality operators, which behave differently when comparing values. Here's a breakdown:&lt;/p&gt; 
&lt;p&gt;== (Loose Equality): This operator performs type coercion before comparing two values. If the values are of different types, JavaScript will attempt to convert one or both values to a common type before comparison, which can lead to unexpected results.&lt;/p&gt; 
&lt;p&gt;=== (Strict Equality): This operator compares both the value and the type without any type coercion. If the two values are not of the same type, the comparison will return false.&lt;/p&gt; 
&lt;p&gt;typeof Operator: The typeof operator is used to check the data type of a variable. While it's generally reliable, there are certain quirks, like how typeof null returns "object" instead of "null", due to a long-standing behavior in JavaScript's implementation.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-double-equals-vs-triple-equals-61d4ce5a121a"&gt;JavaScript Double Equals vs. Triple Equals ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bytearcher.com/articles/equality-comparison-operator-javascript/"&gt;Should I use === or == equality comparison operator in JavaScript? ‚Äî Panu Pitkamaki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.impressivewebs.com/why-use-triple-equals-javascipt/"&gt;Why Use the Triple-Equals Operator in JavaScript? ‚Äî Louis Lazaris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oreilly.com/learning/what-is-the-difference-between-and-in-javascript"&gt;What is the difference between == and === in JavaScript? ‚Äî Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/3787901/why-javascripts-typeof-always-return-object"&gt;Why javascript's typeof always return "object"? ‚Äî Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://tobyho.com/2011/01/28/checking-types-in-javascript/"&gt;Checking Types in Javascript ‚Äî Toby Ho&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://webbjocke.com/javascript-check-data-types/"&gt;How to better check data types in JavaScript ‚Äî Webbjocke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tomeraberba.ch/html/post/checking-for-the-absence-of-a-value-in-javascript.html"&gt;Checking for the Absence of a Value in JavaScript ‚Äî Tomer Aberbach&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.scaler.com/topics/javascript/difference-between-double-equals-and-triple-equals-in-javascript/"&gt;Difference Between == and === in Javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/difference-between-double-equal-vs-triple-equal-javascript/"&gt;Difference between == and === in JavaScript ‚Äî GeeksforGeeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-triple-equals-sign-vs-double-equals-sign-comparison-operators-explained-with-examples/"&gt;=== vs == Comparision in JavaScript ‚Äî FreeCodeCamp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ol_su88I3kw"&gt;JavaScript - The typeof operator ‚Äî Java Brains&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qPYhTPt_SbQ"&gt;Javascript typeof operator ‚Äî DevDelight&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=C5ZVC4HHgIg"&gt;JavaScript "==" VS "===" ‚Äî Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=a0S1iG3TgP0"&gt;=== vs == in javascript - Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=NSS5WRcv7yM"&gt;The typeof operator in JS - CodeVault&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;6. Function Scope, Block Scope and Lexical Scope&lt;/h2&gt; 
&lt;p&gt;The ECMAScript specification outlines three key types of scope:&lt;/p&gt; 
&lt;p&gt;Function Scope: Variables declared within a function using var are only accessible within that function. This scope isolates variables from being accessed outside of the function where they are declared.&lt;/p&gt; 
&lt;p&gt;Block Scope: Introduced with ES6, variables declared with let and const are block-scoped. This means they are only accessible within the specific block {} in which they are defined, such as inside loops or conditionals.&lt;/p&gt; 
&lt;p&gt;Lexical Scope: Refers to how variable access is determined based on the physical location of the variables in the code. Functions are lexically scoped, meaning that they can access variables from their parent scope.&lt;/p&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS/tree/2nd-ed/scope-closures"&gt;You Don't Know JS Yet, 2nd Edition: Scope &amp;amp; Closures ‚Äî Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-functions-understanding-the-basics-207dbf42ed99"&gt;JavaScript Functions ‚Äî Understanding The Basics ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/var-let-and-const-whats-the-difference/"&gt;Var, Let, and Const ‚Äì What's the Difference?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.scaler.com/topics/javascript/javascript-functions/"&gt;Functions in JavaScript - Deepa Pandey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://adripofjavascript.com/blog/drips/emulating-block-scope-in-javascript.html"&gt;Emulating Block Scope in JavaScript ‚Äî Josh Clanton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@josephcardillo/the-difference-between-function-and-block-scope-in-javascript-4296b2322abe"&gt;The Difference Between Function and Block Scope in JavaScript ‚Äî Joseph Cardillo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://ryanmorr.com/understanding-scope-and-context-in-javascript/"&gt;Understanding Scope and Context in JavaScript ‚Äî Ryan Morr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://css-tricks.com/javascript-scope-closures/"&gt;JavaScript Scope and Closures ‚Äî Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.telerik.com/topics/web-development/understanding-scope-in-javascript/"&gt;Understanding Scope in JavaScript ‚Äî Wissam Abirached&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/understanding-scope-in-javascript"&gt;Understanding Scope in JavaScript ‚Äï Hammad Ahmed&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/when-to-use-a-function-declarations-vs-a-function-expression-70f15152a0a0"&gt;When to use a function declaration vs. a function expression ‚Äï Amber Wilkie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/alexandrafren/a-javascript-fundamentals-cheat-sheet-scope-context-and-this-28ai"&gt;A JavaScript Fundamentals Cheat Sheet: Scope, Context, and "this" ‚Äï Alexandra Fren&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions#function_scope"&gt;Functions / Function scope ‚Äï MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=SBwoFkRjZvE"&gt;What Makes Javascript Weird ... and Awesome pt. 4 ‚Äî LearnCode.academy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dhp57T3p760"&gt;Variable Scope in JavaScript ‚Äî Kirupa Chinnathambi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aK_nuUAdr8E"&gt;JavaScript Block Scope and Function Scope ‚Äî mmtuts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GhNA0r10MmA"&gt;What the Heck is Lexical Scope? ‚Äî NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=FyWdrCZZavQ"&gt;Variable Scope ‚Äî Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=W6NZfCO5SIk"&gt;Javascript Tutorials for Beginners ‚Äî Mosh Hemadani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=IaTztAtoNEY"&gt;JavaScript Block scope vs Function scope - nivek&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qT5S7GgIioE"&gt;Lexical scoping in javascript - Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zMseUdOR7z8"&gt;Modern Scope Handling in JavaScript (ES6 and Beyond) -Prashant Dewangan &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;7. Expression vs Statement&lt;/h2&gt; 
&lt;p&gt;According to the ECMAScript specification, expressions produce a value, and statements are instructions to perform an action, such as variable assignment or control flow. Function declarations are hoisted and can be called before they are defined in the code, while function expressions are not hoisted and must be defined before being invoked.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/promhize/javascript-in-depth-all-you-need-to-know-about-expressions-statements-and-expression-statements-5k2"&gt;All you need to know about Javascript's Expressions, Statements and Expression Statements ‚Äî Promise Tochi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/function-expressions-vs-declarations/"&gt;Function Expressions vs Function Declarations ‚Äî Paul Wilkins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@raviroshan.talk/javascript-function-declaration-vs-expression-f5873b8c7b38"&gt;JavaScript Function ‚Äî Declaration vs Expression ‚Äî Ravi Roshan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@mandeep1012/function-declarations-vs-function-expressions-b43646042052"&gt;Function Declarations vs. Function Expressions ‚Äî Mandeep Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascriptweblog.wordpress.com/2010/07/06/function-declarations-vs-function-expressions/"&gt;Function Declarations vs. Function Expressions ‚Äî Anguls Croll&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/Expression_statement"&gt;Expression statement ‚Äî MDN web docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=WVyCrI1cHi8"&gt;Expressions vs. Statements in JavaScript ‚Äî Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3jDpNGJkupA"&gt;JavaScript - Expression vs. Statement ‚Äî WebTunings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qz7Nq1tV7Io"&gt;Javascript Function Expression Vs Declaration For Beginners ‚Äî Dev Material&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/eWTuFoBYiwg"&gt;The difference between an expression and a statement in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cVDs3TZ-kXs"&gt;Expression in javascript | Statement in javascript - Sathelli Srikanth&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;8. IIFE, Modules and Namespaces&lt;/h2&gt; 
&lt;p&gt;With the introduction of ES6 modules, the role of IIFEs in scope isolation has diminished but they still remain relevant.&lt;/p&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/IIFE"&gt;IIFE ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/modularity"&gt;Modularity ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Namespace"&gt;Namespace ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@vvkchandra/essential-javascript-mastering-immediately-invoked-function-expressions-67791338ddc6"&gt;Mastering Immediately-Invoked Function Expressions ‚Äï Chandra Gundamaraju&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.javascripttutorial.net/javascript-immediately-invoked-function-expression-iife/"&gt;JavaScript Immediately Invoked Function Expression ‚Äî javascripttutorial.net&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.jvandemo.com/a-10-minute-primer-to-javascript-modules-module-formats-module-loaders-and-module-bundlers/"&gt;A 10 minute primer to JavaScript modules, module formats, module loaders and module bundlers ‚Äï Jurgen Van de Moere&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://exploringjs.com/es6/ch_modules.html"&gt;Modules ‚Äï Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/understanding-es6-modules/"&gt;Understanding ES6 Modules ‚Äî Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.cloud66.com/an-overview-of-es6-modules-in-javascript/"&gt;An overview of ES6 Modules in JavaScript ‚Äî Brent Graham&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/es6-modules-in-depth"&gt;ES6 Modules in Depth ‚Äî Nicol√°s Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/es6-modules-node-js-and-the-michael-jackson-solution-828dc244b8b"&gt;ES6 modules, Node.js and the Michael Jackson Solution ‚Äî Alberto Gimeno&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/javascript-modules-a-beginner-s-guide-783f7d7a5fcc"&gt;JavaScript Modules: A Beginner's Guide ‚Äî Preethi Kasireddy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.google.com/web/fundamentals/primers/modules"&gt;Using JavaScript modules on the web ‚Äî Addy Osmani &amp;amp; Mathias Bynens&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/bhagatparwinder/iife-immediately-invoked-function-expressions-49c5"&gt;IIFE: Immediately Invoked Function Expressions ‚Äî Parwinder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sassy-butter-197.notion.site/Javascript-bundlers-016932b17b0744e983c2cc0db31e6f02"&gt;Javascript Module Bundlers ‚Äî Vanshu Hassija&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3cbiZV4H22c"&gt;Immediately Invoked Function Expression - Beau teaches JavaScript ‚Äî freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=I5EntfMeIIQ"&gt;Understanding JavaScript IIFE ‚Äî Sheo Narayan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_3oSWwapPKQ"&gt;JavaScript Modules: ES6 Import and Export ‚Äî Kyle Robinson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aQr2bV1BPyE"&gt;ES6 - Modules ‚Äî Ryan Christiani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=fIP4pjAqCtQ"&gt;ES6 Modules in the Real World ‚Äî Sam Thorogood&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5P04OK6KlXA"&gt;ES6 Modules ‚Äî TempleCoding&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Xd7zgPFwVX8&amp;amp;"&gt;JavaScript IIFE (Immediately Invoked Function Expressions) ‚Äî Steve Griffith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;9. Message Queue and Event Loop&lt;/h2&gt; 
&lt;p&gt;The Event Loop is a critical part of JavaScript's concurrency model, ensuring non-blocking behavior by processing tasks in an asynchronous manner. Understanding how it interacts with the Message Queue and Microtasks is key to mastering JavaScript behavior.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/javascript-event-loop-explained-4cd26af121d4"&gt;JavaScript Event Loop Explained ‚Äî Anoop Raveendran&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-js-the-event-loop-959beae3ac40"&gt;Understanding JS: The Event Loop ‚Äî Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flaviocopes.com/javascript-event-loop/"&gt;The JavaScript Event Loop ‚Äî Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/"&gt;Tasks, microtasks, queues and schedules ‚Äî Jake Archibald&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/presto412/visualising-the-javascript-event-loop-with-a-pizza-restaurant-analogy-47a8"&gt;Visualising the JavaScript Event Loop with a Pizza Restaurant analogy ‚Äî Priyansh Jain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lydiahallie/javascript-visualized-event-loop-3dif"&gt;JavaScript Visualized: Event Loop ‚Äî Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-zone/understanding-and-optimizing-javascripts-event-loop-717ae0095038#:~:text=The%20event%20loop%20is%20the,%2Dblocking%20I%2FO%20operations."&gt;Understanding and Optimizing JavaScript's Event Loop ‚Äî Xiuer Old&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ"&gt;What the heck is the event loop anyway? | JSConf EU ‚Äî Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XzXIMZMN9k4"&gt;JavaScript Event Loop ‚Äî ComScience Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6MXRNXXgP_0"&gt;I'm stuck in an Event Loop ‚Äî Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cCOL7MC4Pl0"&gt;In The Loop - Jake Archibald | JSConf.Asia 2018&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Eqq2Rb7LzYE"&gt;Desmitificando el Event Loop (Spanish)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6lbBaM18X3g"&gt;Callbacks, Sincrono, Ass√≠ncrono e Event Loop (PT-BR)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6lbBaM18X3g"&gt;JavaScript Event Loop: How it Works and Why it Matters in 5 Minutes - James Q Quick&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;10. setTimeout, setInterval and requestAnimationFrame&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/settimeout-setinterval"&gt;setTimeout and setInterval ‚Äî JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/akanksha_9560/why-not-to-use-setinterval--2na9"&gt;Why not to use setInterval ‚Äî Akanksha Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://develoger.com/settimeout-vs-setinterval-cff85142555b"&gt;setTimeout VS setInterval ‚Äî Develoger&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://css-tricks.com/using-requestanimationframe/"&gt;Using requestAnimationFrame ‚Äî Chris Coyier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.javascriptkit.com/javatutors/requestanimationframe.shtml"&gt;Understanding JavaScript's requestAnimationFrame() ‚Äî JavaScript Kit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amitmerchant.com/Handling-Time-Intervals-In-Javascript/"&gt;Handling time intervals in JavaScript - Amit Merchant&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-debounce-example/"&gt;Debounce ‚Äì How to Delay a Function in JavaScript - Ondrej Polesny&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6bPKyl8WYWI"&gt;Javascript: How setTimeout and setInterval works ‚Äî Coding Blocks India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/nqsPmuicJJc?si=4FXKlZfqiJUqO2Y4"&gt;TRUST ISSUES with setTimeout() ‚Äî Akshay Saini &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=TbCgGWe8LN8"&gt;setTimeout and setInterval in JavaScript ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0VVJSvlUgtg"&gt;JavaScript Timers ‚Äî Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mVKfrWCOB60"&gt;JavaScript setTimeOut and setInterval Explained ‚Äî Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;11. JavaScript Engines&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://www.softwaremag.com/javascript-engines/"&gt;JavaScript Engines ‚Äî Jen Looper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/understanding-the-core-of-nodejs-the-powerful-chrome-v8-engine-79e7eb8af964"&gt;Understanding How the Chrome V8 Engine Translates JavaScript into Machine Code ‚Äî DroidHead&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/understanding-v8s-bytecode-317d46c94775"&gt;Understanding V8's Bytecode ‚Äî Franziska Hinkelmann&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-essentials-why-you-should-know-how-the-engine-works-c2cc0d321553"&gt;JavaScript essentials: why you should know how the engine works - Rainer Hahnekamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mathiasbynens.be/notes/shapes-ics"&gt;JavaScript engine fundamentals: Shapes and Inline Caches&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mathiasbynens.be/notes/prototypes"&gt;JavaScript engine fundamentals: optimizing prototypes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://v8.dev/blog/elements-kinds"&gt;How V8 optimizes array operations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/javascript-internals-javascript-engine-run-time-environment-settimeout-web-api-eeed263b1617"&gt;JavaScript Internals: JavaScript engine, Run-time environment &amp;amp; setTimeout Web API ‚Äî Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5nmpokoRaZI"&gt;JavaScript Engines: The Good Parts‚Ñ¢ ‚Äî Mathias Bynens &amp;amp; Benedikt Meurer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2WJL19wDH68"&gt;JS Engine EXPOSED üî• Google's V8 Architecture üöÄ | Namaste JavaScript Ep. 16 - Akshay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/iLWTnMzWtj4"&gt;How JavaScript Code is executed? How Javascript works behind the scenes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=xckH5s3UuX4"&gt;Understanding the V8 JavaScript Engine - freeCodeCamp Talks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oc6faXVc54E"&gt;JavaScript Under The Hood - JavaScript Engine Overview - Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QyUFheng6J0"&gt;Arindam Paul - JavaScript VM internals, EventLoop, Async and ScopeChains&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;12. Bitwise Operators, Type Arrays and Array Buffers&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/programming-with-js-bitwise-operations-393eb0745dc4"&gt;Programming with JS: Bitwise Operations ‚Äî Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/using-javascript-bitwise-operators-in-real-life-f551a731ff5"&gt;Using JavaScript's Bitwise Operators in Real Life ‚Äî ian m&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.w3resource.com/javascript/operators/bitwise-operator.php"&gt;JavaScript Bitwise Operators ‚Äî w3resource&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/bother7-blog/bitwise-operators-in-javascript-65c4c69be0d3"&gt;Bitwise Operators in Javascript ‚Äî Joe Cha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/techtrument/a-comprehensive-primer-on-binary-computation-and-bitwise-operators-in-javascript-81acf8341f04"&gt;A Comprehensive Primer on Binary Computation and Bitwise Operators in javascript ‚Äî Paul Brown&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.quora.com/How-can-I-understand-Bitwise-operation-in-JavaScript"&gt;How can I understand Bitwise operation in JavaScript?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mesu75PTDC8"&gt;JavaScript Bitwise Operators ‚Äî Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=igIjGxF2J-w"&gt;Bitwise Operators and WHY we use them ‚Äî Alex Hyett&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RRyxCmLX_ag"&gt;JS Bitwise Operators and Binary Numbers ‚Äî Steve Griffith - Prof3ssorSt3v3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ScZZoHj7mqY"&gt;Deep Dive into Blobs, Files, and ArrayBuffers ‚Äî Steve Griffith - Prof3ssorSt3v3&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;13. DOM and Layout Trees&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model"&gt;Document Object Model (DOM) ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://eloquentjavascript.net/14_dom.html"&gt;Eloquent JavaScript, 3rd Edition: Ch. 14 - The Document Object Model&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/introduction-to-the-dom"&gt;How To Understand and Modify the DOM in JavaScript ‚Äî Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/whats-the-document-object-model-and-why-you-should-know-how-to-use-it-1a2d0bc5429d"&gt;What's the Document Object Model, and why you should know how to use it ‚Äî Leonardo Maldonado&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.guru99.com/how-to-use-dom-and-events-in-javascript.html"&gt;JavaScript DOM Tutorial with Example ‚Äî Guru99&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://css-tricks.com/dom/"&gt;What is the DOM? ‚Äî Chris Coyier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zellwk.com/blog/dom-traversals/"&gt;Traversing the DOM with JavaScript ‚Äî Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/dom-nodes"&gt;DOM Tree&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-in-plain-english/how-to-traverse-the-dom-in-javascript-d6555c335b4e"&gt;How to traverse the DOM in Javascript ‚Äî Vojislav Grujiƒá&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction"&gt;Render Tree Construction ‚Äî Ilya Grigorik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitsofco.de/what-exactly-is-the-dom/"&gt;What exactly is the DOM?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.javascripttutorial.net/javascript-dom/"&gt;JavaScript DOM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Pr4LLrmDLLo"&gt;Traversing the Dom with Javascript&lt;/a&gt; - Steve Griffith (YouTube)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=FIORjGvT0kk"&gt;JavaScript DOM ‚Äî The Net Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0ik6X4DJKCc"&gt;JavaScript DOM Crash Course ‚Äî Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=y17RuWkWdn8"&gt;JavaScript DOM Manipulation Methods ‚Äî Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=v7rSSy8CaYE"&gt;JavaScript DOM Traversal Methods ‚Äî Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;14. Factories and Classes&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/understanding-classes-in-javascript"&gt;How To Use Classes in JavaScript ‚Äî Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/tech-tajawal/javascript-classes-under-the-hood-6b26d2667677"&gt;Javascript Classes ‚Äî Under The Hood ‚Äî Majid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/better-javascript-with-es6-pt-ii-a-deep-dive-into-classes"&gt;Better JavaScript with ES6, Pt. II: A Deep Dive into Classes ‚Äï Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/understand-the-factory-design-pattern-in-plain-javascript-20b348c832bd"&gt;Understand the Factory Design Pattern in Plain JavaScript ‚Äî Aditya Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://atendesigngroup.com/blog/factory-functions-javascript"&gt;Factory Functions in JavaScript ‚Äî Josh Miller&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@SntsDev/the-factory-pattern-in-js-es6-78f0afad17e9"&gt;The Factory Pattern in JS ES6 ‚Äî SnstsDev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/class-vs-factory-function-exploring-the-way-forward-73258b6a8d15"&gt;Class vs Factory function: exploring the way forward ‚Äî Cristi Salcescu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@robertgrosse/how-es6-classes-really-work-and-how-to-build-your-own-fd6085eb326a"&gt;How ES6 classes really work and how to build your own ‚Äî Robert Grosse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jordankasper.com/understanding-super-in-javascript"&gt;Understanding &lt;code&gt;super&lt;/code&gt; in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lawrence_eagles/an-easy-guide-to-understanding-classes-in-javascript-3bcm"&gt;An Easy Guide To Understanding Classes In JavaScript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jpegXpQpb3o"&gt;JavaScript Factory Functions ‚Äî Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ImwrezYhw4w"&gt;Factory Functions in JavaScript ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=R7-IwpH80UE"&gt;Javascript Tutorial Function Factories ‚Äî Crypto Chan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;15. this, call, apply and bind&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call"&gt;call() ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind"&gt;bind() ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply"&gt;apply() ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://levelup.gitconnected.com/grokking-call-apply-and-bind-methods-in-javascript-392351a4be8b"&gt;Grokking call(), apply() and bind() methods in JavaScript ‚Äî Aniket Kudale&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://javascriptissexy.com/javascript-apply-call-and-bind-methods-are-essential-for-javascript-professionals/"&gt;JavaScript's Apply, Call, and Bind Methods are Essential for JavaScript Professionals ‚Äî Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@omergoldberg/javascript-call-apply-and-bind-e5c27301f7bb"&gt;Javascript: call(), apply() and bind() ‚Äî Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@ivansifrim/the-differences-between-call-apply-bind-276724bb825b"&gt;The difference between call / apply / bind ‚Äî Ivan Sifrim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ritik_dev_js/what-the-hack-is-call-apply-bind-in-javascript-11ce"&gt;What the hack is call, apply, bind in JavaScript ‚Äî Ritik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://thenewstack.io/mastering-javascript-callbacks-bind-apply-call/"&gt;Mastering 'this' in JavaScript: Callbacks and bind(), apply(), call() ‚Äî Michelle Gienow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/kbk0125/javascripts-apply-call-and-bind-explained-by-hosting-a-cookout-32jo"&gt;JavaScript's apply, call, and bind explained by hosting a cookout ‚Äî Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.eigenx.com/blog/https/mediumcom/eigen-x/how-and-when-to-use-bind-call-and-apply-in-javascript-77b6f42898fb"&gt;How AND When to use bind, call, and apply in Javascript ‚Äî Eigen X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ycmjason/let-me-explain-to-you-what-is-this-javascript-44ja"&gt;Let me explain to you what is &lt;code&gt;this&lt;/code&gt;. (Javascript) ‚Äî Jason Yu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/quick-code/understanding-the-this-keyword-in-javascript-cb76d4c7c5e8"&gt;Understanding the "this" Keyword in JavaScript ‚Äî Pavan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-understand-the-keyword-this-and-context-in-javascript-cd624c6b74b8"&gt;How to understand the keyword this and context in JavaScript ‚Äî Lukas Gisder-Dub√©&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/_hridaysharma/what-the-heck-is-this-in-javascript-37n1"&gt;What the heck is this in Javascript? ‚Äî Hridayesh Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/steelvoltage/this-and-bind-in-javascript-2pam"&gt;This and Bind In Javascript ‚Äî Brian Barbour&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/canderson93/3-techniques-for-maintaining-your-sanity-using-this-in-javascript-3idf"&gt;3 Techniques for Maintaining Your Sanity Using "This" in JavaScript ‚Äî Carl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/aakashsr/mastering-the-javascript-this-keyword-4pfa"&gt;Mastering the JavaScript "this" Keyword ‚Äî Aakash Srivastav&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/sargalias/this-binding-in-javascript-4-new-binding-2p1n"&gt;This binding in JavaScript ‚Äì 4. New binding ‚Äî Spyros Argalias&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/thatgalnatalie/a-quick-intro-to-this-in-javascript-2mhp"&gt;A quick intro to 'this' in JavaScript ‚Äî Natalie Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/developerkaren/a-conversation-with-the-this-keyword-in-javascript-3j6g"&gt;A conversation with the 'this' keyword in Javascript ‚Äî Karen Efereyan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jscurious.com/what-are-call-apply-and-bind-in-javascript/"&gt;What are call(), apply() and bind() in JavaScript ‚Äî Amitav Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yasemincidem.medium.com/understanding-this-binding-in-javascript-86687397c76d"&gt;Understanding 'this' binding in JavaScript ‚Äî Yasemin Cidem&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dmitripavlutin.com/javascript-this-interview-questions/"&gt;Top 7 tricky questions of 'this' keyword&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=c0mLRpw-9rI"&gt;JavaScript call, apply and bind ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=AYVYxezrMWA"&gt;JavaScript Practical Applications of Call, Apply and Bind functions‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Uy0NOXLBraE"&gt;JavaScript (call, bind, apply) ‚Äî curious aatma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=AOSYY1_np_4"&gt;Understanding Functions and 'this' In The World of ES2017 ‚Äî Bryan Hughes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GhbhD1HR5vk"&gt;bind and this - Object Creation in JavaScript - FunFunFunction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uBdH0iB1VDM"&gt;JS Function Methods call(), apply(), and bind() ‚Äî Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=75W8UPQ5l7k&amp;amp;t=261s"&gt;call, apply and bind method in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;.[Javascript Interview Questions ( Call, Bind and Apply ) - Polyfills, Output Based, Explicit Binding - Roadside Coder] (&lt;a href="https://youtu.be/VkmUOktYDAU?si=SdvLZ8FBmephPxjS"&gt;https://youtu.be/VkmUOktYDAU?si=SdvLZ8FBmephPxjS&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;16. new, Constructor, instanceof and Instances&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-for-beginners-the-new-operator-cee35beb669e"&gt;JavaScript For Beginners: the 'new' operator ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/demystifying-javascripts-new-keyword-874df126184c"&gt;Let's demystify JavaScript's 'new' keyword ‚Äî Cynthia Lee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/constructor-new"&gt;Constructor, operator "new" ‚Äî JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://css-tricks.com/understanding-javascript-constructors/"&gt;Understanding JavaScript Constructors ‚Äî Faraz Kelhini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://openclassrooms.com/en/courses/3523231-learn-to-code-with-javascript/4379006-use-constructor-functions"&gt;Use Constructor Functions ‚Äî Openclassrooms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://2ality.com/2017/08/type-right.html"&gt;Beyond &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;: simplifying dynamic type checks ‚Äî Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascriptrefined.io/function-and-object-instances-of-each-other-1e1095d5faac"&gt;Function and Object, instances of each other ‚Äî Kiro Risk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flexiple.com/javascript/instanceof-javascript"&gt;JavaScript instanceof operator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;17. Prototype Inheritance and Prototype Chain&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain"&gt;Inheritance and the prototype chain ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@parsyval/javascript-prototype-vs-class-a7015d5473b"&gt;Javascript : Prototype vs Class ‚Äî Valentin PARSY&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mathiasbynens.be/notes/prototypes"&gt;JavaScript engine fundamentals: optimizing prototypes ‚Äî Mathias Bynens&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-prototype-cb29d82b8809"&gt;JavaScript Prototype ‚Äî NC Patro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/prototypes-in-javascript-5bba2990e04b"&gt;Prototypes in JavaScript ‚Äî Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/prototype-in-js-busted-5547ec68872"&gt;Prototype in JavaScript: it's quirky, but here's how it works ‚Äî Pranav Jindal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-javascript-prototype-and-inheritance-d55a9a23bde2"&gt;Understanding JavaScript: Prototype and Inheritance ‚Äî Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/_hridaysharma/understanding-classes-es5-and-prototypal-inheritance-in-javascript-n8d"&gt;Understanding Classes (ES5) and Prototypal Inheritance in JavaScript ‚Äî Hridayesh Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/varundey/prototype-proto-and-prototypal-inheritance-in-javascript-2inl"&gt;prototype, &lt;strong&gt;proto&lt;/strong&gt; and Prototypal inheritance in JavaScript ‚Äî Varun Dey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/prototype-inheritance"&gt;Prototypal Inheritance ‚Äî JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/understanding-prototypes-and-inheritance-in-javascript"&gt;How To Work with Prototypes and Inheritance in JavaScript ‚Äî Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/master-javascript-prototypes-inheritance-d0a9a5a75c4e"&gt;Master JavaScript Prototypes &amp;amp; Inheritance ‚Äî Arnav Aggarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/understanding-prototypal-inheritance-in-javascript-with-css-93b2fcda75e4"&gt;JavaScript's Prototypal Inheritance Explained Using CSS ‚Äî Nash Vail&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/derhuerst/a585c4916b1c361cc6f0"&gt;Prototypal Inheritance in JavaScript ‚Äî Jannis Redmann&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/demystifying-es6-classes-and-prototypal-inheritance"&gt;Demystifying ES6 Classes And Prototypal Inheritance ‚Äï Neo Ighodaro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/danny/intro-to-prototypal-inheritance---js-9di"&gt;Intro To Prototypal Inheritance ‚Äî Dharani Jayakanthan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/varche/let-s-build-prototypal-inheritance-in-js-56mm"&gt;Let's Build Prototypal Inheritance in JS ‚Äî var-che&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/attacomsian/objects-prototypes-and-classes-in-javascript-3i9b"&gt;Objects, Prototypes and Classes in JavaScript ‚Äî Atta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ladybenko/the-magical-world-of-javascript-prototypes-1mhg"&gt;The magical world of JavaScript prototypes ‚Äî Bel√©n&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lawrence_eagles/understanding-prototypal-inheritance-in-javascript-4f31#chp-4"&gt;Understanding Prototypal Inheritance In JavaScript ‚Äî Lawrence Eagles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/irenejpopova/objects-and-prototypes-in-javascript-2eie"&gt;Objects and Prototypes in JavaScript ‚Äî Irena Popova&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=sOrtAjyk4lQ"&gt;Javascript Prototype Inheritance ‚Äî Avelx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=7oNWNlMrkpc"&gt;JavaScript Prototype Inheritance Explained pt. I ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uIlj6_z_wL8"&gt;JavaScript Prototype Inheritance Explained pt. II ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qMO-LTOrJaE"&gt;JavaScript Prototype Inheritance Explained ‚Äî Kyle Robinson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=G6l5CHl67HQ"&gt;Advanced Javascript - Prototypal Inheritance In 1 Minute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=phwzuiJJPpQ"&gt;An Overview Of Classical Javascript Classes and Prototypal Inheritance ‚Äî Pentacode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4jb4AYEyhRc"&gt;Object Oriented JavaScript - Prototype ‚Äî The Net Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2rkEbcptR64"&gt;Prototype in JavaScript ‚Äî kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oCwCcNvaXAQ"&gt;JavaScript Using Prototypes ‚Äî O'Reilly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XskMWBXNbp0"&gt;A Beginner's Guide to Javascript's Prototype ‚Äî Tyler Mcginnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hS_WqkyUah8"&gt;Prototypes in Javascript - p5.js Tutorial ‚Äî The Coding Train&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS/tree/1st-ed"&gt;You Don't Know JS, 1st Edition: this &amp;amp; Object Prototypes ‚Äî Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.google.com.pk/books/edition/The_Principles_of_Object_Oriented_JavaSc/rorlAwAAQBAJ?hl=en&amp;amp;gbpv=1&amp;amp;pg=PP1&amp;amp;printsec=frontcover"&gt;The Principles of Object-Oriented JavaScript - Nicholas C. Zakas&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;18. Object.create and Object.assign&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create"&gt;Object.create() ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign"&gt;Object.assign() ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@happymishra66/object-create-in-javascript-fa8674df6ed2"&gt;Object.create in JavaScript ‚Äî Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.htmlgoodies.com/beyond/javascript/object.create-the-new-way-to-create-objects-in-javascript.html"&gt;Object.create(): the New Way to Create Objects in JavaScript ‚Äî Rob Gravelle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://adripofjavascript.com/blog/drips/basic-inheritance-with-object-create.html"&gt;Basic Inheritance with Object.create ‚Äî Joshua Clanton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/object-create-javascript/"&gt;Object.create() In JavaScript ‚Äî GeeksforGeeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@jonathanvox01/understanding-the-difference-between-object-create-and-the-new-operator-b2a2f4749358"&gt;Understanding the difference between Object.create() and the new operator ‚Äî Jonathan Voxland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/javascript-object-creation-patterns-best-practises/"&gt;JavaScript Object Creation: Patterns and Best Practices ‚Äî Jeff Mott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/js-dealing-with-objects"&gt;Dealing With Objects in JavaScript With Object.assign, Object.keys and hasOwnProperty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/bar-talk/copying-objects-in-javascript"&gt;Copying Objects in JavaScript ‚Äï Orinami Olatunji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-object-assign-bc9696dcbb6e"&gt;JavaScript: Object.assign() ‚Äî Thiago S. Adriano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flaviocopes.com/how-to-clone-javascript-object/"&gt;How to deep clone a JavaScript Object ‚Äî Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/vzing/object-create-when-and-why-to-use-20m9"&gt;Object.create(): When and Why to Use ‚Äî VZing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aw7NfYhR5rc"&gt;Object.assign() explained ‚Äî Aaron Writes Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9Ky4X6inpi4"&gt;Object.assign() Method ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;19. map, reduce, filter&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/jsguru/javascript-functional-programming-map-filter-and-reduce-846ff9ba492d"&gt;JavaScript Functional Programming ‚Äî map, filter and reduce ‚Äî Bojan Gvozderac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@joomiguelcunha/learn-map-filter-and-reduce-in-javascript-ea59009593c4"&gt;Learn map, filter and reduce in Javascript ‚Äî Jo√£o Miguel Cunha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://danmartensen.svbtle.com/javascripts-map-reduce-and-filter"&gt;JavaScript's Map, Reduce, and Filter ‚Äî Dan Martensen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.tutsplus.com/tutorials/how-to-use-map-filter-reduce-in-javascript--cms-26209"&gt;How to Use Map, Filter, &amp;amp; Reduce in JavaScript ‚Äî Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-learn-to-chain-map-filter-and-reduce-acd2d0562cd4"&gt;JavaScript ‚Äî Learn to Chain Map, Filter, and Reduce ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/write-beautiful-javascript-with-%CE%BB-fp-es6-350cd64ab5bf"&gt;Javascript data structure with map, reduce, filter and ES6 ‚Äî Deepak Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-map-filter-and-reduce-in-javascript-5df1c7eee464"&gt;Understanding map, filter and reduce in Javascript ‚Äî Luuk Gruijs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/functional-programming-in-js-map-filter-reduce-pt-5-308a205fdd5f"&gt;Functional Programming in JS: map, filter, reduce (Pt. 5) ‚Äî Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wsvincent.com/functional-javascript-map-filter-reduce/"&gt;JavaScript: Map, Filter, Reduce ‚Äî William S. Vincent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/es6-arrow-functions-new-fat-concise-syntax-javascript/"&gt;Arrow Functions: Fat and Concise Syntax in JavaScript ‚Äî Kyle Pennell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-arrow-functions-for-beginners-926947fc0cdc"&gt;JavaScript: Arrow Functions for Beginners ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/when-and-why-you-should-use-es6-arrow-functions-and-when-you-shouldnt-3d851d7f0b26"&gt;When (and why) you should use ES6 arrow functions ‚Äî and when you shouldn't ‚Äî Cynthia Lee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-learn-understand-arrow-functions-fe2083533946"&gt;JavaScript ‚Äî Learn &amp;amp; Understand Arrow Functions ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/podiihq/javascript-arrow-functions-27d4c3334b83"&gt;(JavaScript )=&amp;gt; Arrow functions ‚Äî sigu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@panderson.dev/javascript-reduce-79aab078da23"&gt;Javascript.reduce() ‚Äî Paul Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gofore.com/en/why-you-should-replace-foreach/"&gt;Why you should replace forEach with map and filter in JavaScript ‚Äî Roope Hakulinen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/poka-techblog/simplify-your-javascript-use-map-reduce-and-filter-bd02c593cc2d"&gt;Simplify your JavaScript ‚Äì Use .map(), .reduce(), and .filter() ‚Äî Etienne Talbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.codeanalogies.com/2018/07/24/javascripts-reduce-method-explained-by-going-on-a-diet/"&gt;JavaScript's Reduce Method Explained By Going On a Diet ‚Äî Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@amiratak88/difference-between-map-filter-and-reduce-in-javascript-822ff79d5160"&gt;Difference between map, filter and reduce in JavaScript ‚Äî Amirata Khodaparast&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/map-filter-reduce-ebbed4be4201"&gt;Map‚áÑFilter‚áÑReduce‚Üª ‚Äî ashay mandwarya&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/finding-your-way-with-map-aecb8ca038f6"&gt;Finding Your Way With .map() ‚Äî Brandon Wozniewicz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-write-your-own-map-filter-and-reduce-functions-in-javascript-ab1e35679d26"&gt;How to write your own map, filter and reduce functions in JavaScript ‚Äî Hemand Nair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/manipulating-arrays-in-javascript/"&gt;How to Manipulate Arrays in JavaScript ‚Äî Bolaji Ayodeji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/15-useful-javascript-examples-of-map-reduce-and-filter-74cbbb5e0a1f"&gt;How to simplify your codebase with map(), reduce(), and filter() in JavaScript ‚Äî Alex Permyakov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/pickleat/map-filter-and-reduce-2efb"&gt;.map(), .filter(), and .reduce() ‚Äî Andy Pickle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/chrisachard/map-filter-reduce-crash-course-5gan"&gt;Map/Filter/Reduce Crash Course ‚Äî Chris Achard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@js_tut/map-filter-and-reduce-animated-7fe391a35a47"&gt;Map, Filter and Reduce ‚Äì Animated ‚Äî JavaScript Teacher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/uptheirons78/map-filter-reduce-and-others-arrays-iterators-you-must-know-to-become-an-algorithms-wizard-4209"&gt;Map, Filter, Reduce and others Arrays Iterators You Must Know to Become an Algorithms Wizard ‚Äî Mauro Bono&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://betterprogramming.pub/how-to-javascripts-map-vs-filter-vs-reduce-80d87a5a0a24"&gt;How to Use JavaScript's .map, .filter, and .reduce ‚Äî Avery Duffin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-in-plain-english/using-map-filter-and-reduce-properly-50e07f80c8b2"&gt;Using .map(), .filter() and .reduce() properly ‚Äî Sasanka Kudagoda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/sanderdebr/mastering-the-javascript-reduce-method-2foj"&gt;Mastering the JavaScript Reduce method ‚úÇÔ∏è ‚Äî sanderdebr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-map-how-to-use-the-js-map-function-array-method/"&gt;JavaScript Map ‚Äì How to Use the JS .map() Function (Array Method) ‚Äî FreeCodeCamp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=UXiYii0Y7Nw"&gt;Map, Filter and Reduce ‚Äî Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/zdp0zrpKzIE?si=6QusFzD6tmwn-el4"&gt;Map, Filter and Reduce - Akshaay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=vytzLlY_wmU"&gt;Functional JavaScript: Map, forEach, Reduce, Filter ‚Äî Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qTeeVd8hOFY"&gt;JavaScript Array superpowers: Map, Filter, Reduce (part I) ‚Äî Michael Rosata&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=gIm9xLYudL0"&gt;JavaScript Array superpowers: Map, Filter, Reduce (part 2) ‚Äî Michael Rosata&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zYBeEPxNSbw"&gt;JavaScript Higher Order Functions - Filter, Map, Sort &amp;amp; Reduce ‚Äî Epicop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4qWlqD0yYTU"&gt;[Array Methods 2/3] .filter + .map + .reduce ‚Äî CodeWithNick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6sQDTgOqh-I"&gt;Arrow functions in JavaScript - What, Why and How ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=e-5obm1G_FY&amp;amp;t=1521s"&gt;Learning Functional Programming with JavaScript ‚Äî Anjana Vakil - JSUnconf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=bCqtb-Z5YGQ&amp;amp;t=17s"&gt;Map - Parte 2 JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Wl98eZpkp-c"&gt;Reduce basics - Part 3 of FP in JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1DMolJ2FrNY&amp;amp;t=621s"&gt;Reduce Advanced - Part 4 of FP in JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=IXp06KekEjM"&gt;reduce Array Method | JavaScript Tutorial - Florin Pop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=P4RAFdZDn3M"&gt;map Array Method | JavaScript Tutorial - Florin Pop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/Ah7-PPjQ5Ls"&gt;Different array methods in 1 minute | Midudev (Spanish)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;20. Pure Functions, Side Effects, State Mutation and Event Propagation&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/javascript-and-functional-programming-pt-3-pure-functions-d572bb52e21c"&gt;Javascript and Functional Programming ‚Äî Pure Functions ‚Äî Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976"&gt;Master the JavaScript Interview: What is a Pure Function? ‚Äî Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@jamesjefferyuk/javascript-what-are-pure-functions-4d4d5392d49c"&gt;JavaScript: What Are Pure Functions And Why Use Them? ‚Äî James Jeffery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.nicoespeon.com/en/2015/01/pure-functions-javascript/"&gt;Pure functions in JavaScript ‚Äî @nicoespeon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/functional-programming-pure-functions/"&gt;Functional Programming: Pure Functions ‚Äî Arne Brasseur&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://alistapart.com/article/making-your-javascript-pure"&gt;Making your JavaScript Pure ‚Äî Jack Franklin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@fknussel/arrays-objects-and-mutations-6b23348b54aa"&gt;Arrays, Objects and Mutations ‚Äî Federico Kn√ºssel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/the-state-of-immutability-169d2cd11310"&gt;The State of Immutability ‚Äî Maciej Sikora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/zurvin/hablemos-de-inmutabilidad-3dc65d290783"&gt;Hablemos de Inmutabilidad ‚Äî Kike Sanchez&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jrsinclair.com/articles/2018/how-to-deal-with-dirty-side-effects-in-your-pure-functional-javascript/"&gt;How to deal with dirty side effects in your pure functional JavaScript ‚Äî James Sinclair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://davidwalsh.name/preventing-sideeffects-javascript"&gt;Preventing Side Effects in JavaScript ‚Äî David Walsh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wsvincent.com/javascript-pure-functions/"&gt;JavaScript: Pure Functions ‚Äî William S. Vincent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/functional-programming-paradigms-in-modern-javascript-pure-functions-797d9abbee1"&gt;Functional programming paradigms in modern JavaScript: Pure functions ‚Äî Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/understanding-javascript-mutation-and-pure-functions-7231cc2180d3"&gt;Understanding Javascript Mutation and Pure Functions ‚Äî Chidume Nnamdi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@bluepnume/functional-ish-javascript-205c05d0ed08"&gt;Functional-ish JavaScript ‚Äî Daniel Brain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events"&gt;Event Propagation ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/bubbling-and-capturing"&gt;Event Propagation ‚Äî Bubbling and capturing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dZ41D6LDSBg"&gt;Pure Functions ‚Äî Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Jh_Uzqzz_wM"&gt;Pure Functions - Functional Programming in JavaScript ‚Äî Paul McBride&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=frT3H-eBmPc"&gt;JavaScript Pure Functions ‚Äî Seth Alexander&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=AHbRVJzpB54"&gt;JavaScript Pure vs Impure Functions Explained ‚Äî Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BMUiFMZr7vk"&gt;Pure Functions - Programa√ß√£o Funcional: Parte 1 - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JYc7gr9Ehl0"&gt;Event Propagation - JavaScript Event Bubbling and Propagation - Steve Griffith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;21. Closures&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures"&gt;Closures ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/closure"&gt;Closure ‚Äî JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/i-never-understood-javascript-closures-9663703368e8"&gt;I never understood JavaScript closures ‚Äî Olivier De Meulder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://javascriptissexy.com/understand-javascript-closures-with-ease/"&gt;Understand JavaScript Closures With Ease ‚Äî Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/understanding-javascript-closures-da6aab330302"&gt;Understanding JavaScript Closures ‚Äî Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/understand-closures-in-javascript-d07852fa51e7"&gt;Understand Closures in JavaScript ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/javascript-closures-simplified-d0d23fa06ba4"&gt;A simple guide to help you understand closures in JavaScript ‚Äî Prashant Ram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/understanding-javascript-closures-a-practical-approach"&gt;Understanding JavaScript Closures: A Practical Approach ‚Äî Paul Upendo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-javascript-closures-4188edf5ea1b"&gt;Understanding JavaScript: Closures ‚Äî Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/how-to-use-javascript-closures-with-confidence-85cd1f841a6b"&gt;How to use JavaScript closures with confidence ‚Äî L√©na Faure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://howchoo.com/g/mge2mji2mtq/javascript-closures-by-example"&gt;JavaScript closures by example ‚Äî tyler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-closures-and-scope-3784c75b9290"&gt;JavaScript‚Ää‚Äî‚ÄäClosures and Scope ‚Äî Alex Aitken&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/discover-the-power-of-closures-in-javascript-5c472a7765d7"&gt;Discover the power of closures in JavaScript‚Ää‚Äî‚ÄäCristi Salcescu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reallifejs.com/the-meat/getting-closure/"&gt;Getting Closure‚Ää‚Äî‚ÄäRealLifeJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ritik_dev_js/what-the-hack-is-closure-currying-and-iife-in-javascript-32m9"&gt;Closure, Currying and IIFE in JavaScript‚Ää‚Äî‚ÄäRitik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/a-beginners-guide-to-closures-in-javascript-97d372284dda"&gt;Understanding Closures in JavaScript‚Ää‚Äî‚ÄäSukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/a-basic-guide-to-closures-in-javascript-9fc8b7e3463e"&gt;A basic guide to Closures in JavaScript‚Ää‚Äî‚ÄäParathan Thiyagalingam&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/steelvoltage/closures-using-memoization-3597"&gt;Closures: Using Memoization‚Ää‚Äî‚ÄäBrian Barbour&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://betterprogramming.pub/a-brief-introduction-to-closures-and-lexical-scoping-in-javascript-8a5866496232"&gt;A Brief Introduction to Closures and Lexical Scoping in JavaScript‚Ää‚Äî‚ÄäAshutosh K Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/stereobooster/demystify-closures-5g42"&gt;Demystify Closures‚Ää‚Äî‚Äästereobooster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/boywithsilverwings/scopes-and-closures-javascript-concepts-4dfj"&gt;Scopes and Closures - JavaScript Concepts‚Ää‚Äî‚ÄäAgney Menon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/mattpopovich/understanding-closures-in-javascript-3k0d"&gt;Understanding Closures in JavaScript‚Ää‚Äî‚ÄäMatt Popovich&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://whatthefuck.is/closure"&gt;whatthefuck.is ¬∑ A Closure - Dan Abramov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/brandonleboeuf/closure-in-javascript-49n7"&gt;Closures in JavaScript can... - Brandon LeBoeuf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/this_mkhy/do-you-know-es6-part-3-advanced-3fcl#Closures-2"&gt;Do you know Closures - Mohamed Khaled&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XTAzsODSCsM"&gt;JavaScript The Hard Parts: Closure, Scope &amp;amp; Execution Context - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/qikxEIxsXco?si=fGFgUHuaOW49Wg9p"&gt;Namaste Javascript by Akshay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=71AtaJpJHw0"&gt;Javascript Closure ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=CQqwU2Ixu-U"&gt;Closures ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-xqJo5VRP4A"&gt;Closures in JavaScript ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yiEeiMN2Khs"&gt;JavaScript Closures 101: What is a closure? ‚Äî JavaScript Tutorials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1JsJx1x35c0"&gt;Closures ‚Äî freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-rLrGAXK8WE"&gt;JavaScript Closures ‚Äî CodeWorkr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qikxEIxsXco"&gt;Closures in JS - Akshay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/xa8lhVwQBw4"&gt;CLOSURES en JavaScript: Qu√© son y c√≥mo funcionan - Carlos Azaustre&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3a0I8ICR1Vg"&gt;Learn Closures In 7 Minutes - Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;22. High Order Functions&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://eloquentjavascript.net/05_higher_order.html"&gt;Eloquent JavaScript, 3rd Edition: Ch. 5 - Higher-order Functions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/higher-order-functions-javascript/"&gt;Higher-Order Functions in JavaScript ‚Äî M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/higher-order-functions-in-javascript-d9101f9cf528"&gt;Higher Order Functions: Using Filter, Map and Reduce for More Maintainable Code ‚Äî Guido Schmitz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/effective-functional-javascript-first-class-and-higher-order-functions-713fde8df50a"&gt;First-class and Higher Order Functions: Effective Functional JavaScript ‚Äî Hugo Di Francesco&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.lullabot.com/articles/higher-order-functions-in-javascript"&gt;Higher Order Functions in JavaScript ‚Äî John Hannah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pedroapfilho/high-order-functions"&gt;Just a reminder on how to use high order functions ‚Äî Pedro Filho&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/understanding-higher-order-functions-in-javascript-75461803bad"&gt;Understanding Higher-Order Functions in JavaScript ‚Äî Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/nuel_ikwuoma/higher-order-functions-a-pragmatic-approach-51fb"&gt;Higher Order Functions - A pragmatic approach ‚Äî emmanuel ikwuoma&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=rRgD1yVwIvE"&gt;JavaScript Higher Order Functions &amp;amp; Arrays ‚Äî Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BMUiFMZr7vk"&gt;Higher Order Functions ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dTlpYnmBW9I"&gt;Higher Order Functions in Javascript ‚Äî Raja Yogan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GYRMNp1SKXA"&gt;Higher Order Iterators in JavaScript ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=H4awPsyugS0"&gt;Higher Order Functions in JavaScript ‚Äî The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=7E8ctomPQJw"&gt;Part 1: An Introduction to Callbacks and Higher Order Functions - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=28MXziDZkE4"&gt;Part 2: Understanding Why We Need Higher Order Functions - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HkWxvB1RJq0"&gt;Higher-Order Functions ft. Functional Programming - Akshay Saini&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;23. Recursion&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/recursion-in-javascript-1608032c7a1f"&gt;Recursion in JavaScript ‚Äî Kevin Ennis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@zfrisch/understanding-recursion-in-javascript-992e96449e03"&gt;Understanding Recursion in JavaScript ‚Äî Zak Frisch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/learn-and-understand-recursion-in-javascript-b588218e87ea"&gt;Learn and Understand Recursion in JavaScript ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/recursion-functional-javascript/"&gt;Recursion in Functional JavaScript ‚Äî M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/programming-with-js-recursion-31371e2bf808"&gt;Programming with JS: Recursion ‚Äî Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/simov/anonymous-recursion-in-javascript"&gt;Anonymous Recursion in JavaScript ‚Äî simo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.jstips.co/en/javascript/recursion-iteration-and-tail-calls-in-js/"&gt;Recursion, iteration and tail calls in JS ‚Äî loverajoel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/what-is-recursion-in-javascript/"&gt;What is Recursion? A Recursive Function Explained with JavaScript Code Examples ‚Äî Nathan Sebhastian&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@newmanbradm/intro-to-recursion-984a8bd50f4b"&gt;Intro to Recursion ‚Äî Brad Newman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.datadriveninvestor.com/accio-recursion-your-new-favorite-javascript-spell-7e10d3125fb3"&gt;Accio Recursion!: Your New Favorite JavaScript Spell ‚Äî Leanne Cabey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/christinamcmahon/recursion-explained-with-examples-4k1m"&gt;Recursion Explained (with Examples) ‚Äî Christina&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=VtG0WAUvq2w"&gt;Recursion In JavaScript ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=k7-N8R0-KY4"&gt;Recursion ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=vLhHyGTkjCs"&gt;Recursion and Recursive Functions ‚Äî Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=kGXVsd8pBLw"&gt;Recursion: Recursion() ‚Äî JS Monthly ‚Äî Lucas da Costa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uyjsR9eNTIw"&gt;Recursive Function in JavaScript ‚Äî kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Mv9NEXX1VHc"&gt;What on Earth is Recursion? ‚Äî Computerphile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9NO5dXSlbv8"&gt;Javascript Tutorial 34: Introduction To Recursion ‚Äî codedamn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=FmiQr4nfoPQ"&gt;Recursion, Iteration, and JavaScript: A Love Story | JSHeroes 2018 ‚Äî Anjana Vakil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=lMBVwYrmFZQ&amp;amp;ab_channel=ColtSteele"&gt;Recursion crash course - Colt Steele&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6oDQaB2one8"&gt;What Is Recursion - In Depth - Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;24. Collections and Generators&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator"&gt;Generator ‚Äî MDN web docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/es6-collections-map-set-weakmap-weakset/"&gt;ES6 Collections: Using Map, Set, WeakMap, WeakSet ‚Äî Kyle Pennell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/es6-weakmaps-sets-and-weaksets-in-depth"&gt;ES6 WeakMaps, Sets, and WeakSets in Depth ‚Äî Nicol√°s Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/map-set-weakmap-weakset"&gt;Map, Set, WeakMap and WeakSet ‚Äî JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/mildrenben/maps-in-es6---a-quick-guide-35pk"&gt;Maps in ES6 - A Quick Guide ‚Äî Ben Mildren&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/es6-set-vs-array-what-and-when-efc055655e1a"&gt;ES6 ‚Äî Set vs Array ‚Äî What and when? ‚Äî Maya Shavin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/es6-map-vs-object-what-and-when-b80621932373"&gt;ES6 ‚Äî Map vs Object ‚Äî What and when? ‚Äî Maya Shavin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/array-vs-set-vs-map-vs-object-real-time-use-cases-in-javascript-es6-47ee3295329b"&gt;Array vs Set vs Map vs Object ‚Äî Real-time use cases in Javascript (ES6/ES7) ‚Äî Rajesh Babu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/claireparker/how-to-create-an-array-of-unique-values-in-javascript-using-sets-5dg6"&gt;How to create an array of unique values in JavaScript using Sets ‚Äî Claire Parker-Jones&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/what-you-should-know-about-es6-maps-dc66af6b9a1e"&gt;What You Should Know About ES6 Maps ‚Äî Just Chris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/es6-maps-in-depth"&gt;ES6 Maps in Depth ‚Äî Nicol√°s Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/what-are-javascript-generators-and-how-to-use-them-c6f2713fd12e"&gt;What are JavaScript Generators and how to use them ‚Äî Vladislav Stepanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/understanding-generators-in-es6-javascript-with-examples-6728834016d5"&gt;Understanding JavaScript Generators With Examples ‚Äî Arfat Salman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://davidwalsh.name/es6-generators"&gt;The Basics of ES6 Generators ‚Äî Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/kallaugher/an-introduction-to-javascript-generators-1224"&gt;An Introduction to JavaScript Generators ‚Äî Alice Kallaugher&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ycohYSx5h9w"&gt;JavaScript ES6 / ES2015 Set, Map, WeakSet and WeakMap ‚Äî Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dcP039DYzmE"&gt;JavaScript ES6 / ES2015 - [11] Generators - Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=m4abICrldQI"&gt;The Differences between ES6 Maps and Sets ‚Äî Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QO07THdLWQo"&gt;Javascript Generators - THEY CHANGE EVERYTHING - ES6 Generators Harmony Generators ‚Äî LearnCode.academy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;25. Promises&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"&gt;Promise ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/javascript-promises-for-dummies"&gt;JavaScript Promises for Dummies ‚Äï Jecelyn Yeen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-promises-in-javascript-13d99df067c1"&gt;Understanding promises in JavaScript ‚Äî Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-promise-27fc71e77261"&gt;Master the JavaScript Interview: What is a Promise? ‚Äî Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/overview-javascript-promises/"&gt;An Overview of JavaScript Promises ‚Äî Sandeep Panda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/promises-in-javascript-explained-277b98850de"&gt;How to use Promises in JavaScript ‚Äî Prashant Ram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-implement-promises-in-javascript-1ce2680a7f51"&gt;Implementing Promises In JavaScript ‚Äî Maciej Cieslar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-promises-explained-with-simple-real-life-analogies-dd6908092138"&gt;JavaScript: Promises explained with simple real life analogies ‚Äî Shruti Kapoor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://exploringjs.com/es6/ch_promises.html"&gt;Promises for Asynchronous Programming ‚Äî Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.codeanalogies.com/2018/08/26/javascript-promises-explained-by-gambling-at-a-casino/"&gt;JavaScript Promises Explained By Gambling At A Casino ‚Äî Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/datafire-io/es6-promises-patterns-and-anti-patterns-bbb21a5d0918"&gt;ES6 Promises: Patterns and Anti-Patterns ‚Äî Bobby Brennan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/a-simple-guide-to-es6-promises-d71bacd2e13a"&gt;A Simple Guide to ES6 Promises ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/the-es6-promises-87a979ab27e4"&gt;The ES6 Promises ‚Äî Manoj Singh Negi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/es6-promises-in-depth"&gt;ES6 Promises in Depth ‚Äî Nicol√°s Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/playing-with-javascript-promises-a-comprehensive-approach-25ab752c78c3"&gt;Playing with Javascript Promises: A Comprehensive Approach ‚Äî Rajesh Babu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-write-a-javascript-promise-4ed8d44292b8"&gt;How to Write a JavaScript Promise ‚Äî Brandon Wozniewicz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@andrewly07/a-coding-writers-guide-an-introduction-to-es6-promises-9ff9f9e88f6c"&gt;A Coding Writer's Guide: An Introduction To ES6 Promises ‚Äî Andrew Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/itnext/reverse-engineering-understand-promises-1jfc"&gt;Understanding Promises in JavaScript ‚Äî Chris Noring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/zellwk/converting-callbacks-to-promises-nhn"&gt;Converting callbacks to promises ‚Äî Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/javascript-promises-zero-to-hero-plus-cheat-sheet-64d75051cffa"&gt;JavaScript Promises: Zero To Hero Plus Cheat Sheet ‚Äî Joshua Saunders&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/boywithsilverwings/promises-javascript-concepts-293c"&gt;Promises - JavaScript concepts ‚Äî Agney Menon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/iggredible/javascript-promise-101-3idl"&gt;Javascript &lt;code&gt;Promise&lt;/code&gt; 101 ‚Äî Igor Irianto&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/sunnysingh/simplify-javascript-promises-4djb"&gt;Simplify JavaScript Promises ‚Äî Sunny Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lydiahallie/javascript-visualized-promises-async-await-5gke"&gt;JavaScript Visualized: Promises &amp;amp; Async/Await ‚Äî Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/peterklingelhofer/promises-in-javascript-3h5k"&gt;Promises in JavaScript ‚Äî Peter Klingelhofer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/somedood/best-practices-for-es6-promises-36da"&gt;Best Practices for ES6 Promises ‚Äî Basti Ortiz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/zurvin/lo-que-debemos-saber-de-escript-2020-5fc61da5e4cd"&gt;Lo que debemos saber de EScript 2020 ‚Äî Kike Sanchez&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/promise-basics"&gt;Promise Basics - javascript.info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.webdevsimplified.com/2021-09/javascript-promises"&gt;The Complete JavaScript Promise Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/promise-chaining"&gt;Promise Chaining - javascript.info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=vQ3MoXnKfuQ"&gt;Let's Learn ES6 - Promises ‚Äî Ryan Christiani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XJEHuBZQ5dU"&gt;JavaScript ES6 / ES2015 Promises ‚Äî Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2d7s3spWAzo"&gt;Promises ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=f8IgdnYIwOU"&gt;Error Handling Promises in JavaScript ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QO4NXhWo_NM"&gt;Promises Part 1 - Topics of JavaScript/ES6 ‚Äî The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RvYYCGs45L4"&gt;JavaScript Promise in 100 Seconds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/3NjdOtHpcBM"&gt;JavaScript Promise in 9 Minutes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DHvZLI7Db8E"&gt;JavaScript Promises In 10 Minutes ‚Äî Web Dev Simplified &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/ap-6PPAuK1Y?si=Ri1fopXeYjlrHzpf"&gt;Promises | Ep 02 Season 02 - Namaste JavaScript - Akshay Saini &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;26. async/await&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/async-await"&gt;async/await ‚Äî JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://eloquentjavascript.net/11_async.html"&gt;Eloquent JavaScript, 3rd Edition: Ch. 11 - Asynchronous Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://exploringjs.com/es6/ch_async.html"&gt;Exploring JS: Asynchronous Programming&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-async-await-in-javascript-1d81bb079b2c"&gt;Understanding async/await in Javascript ‚Äî Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/asynchronous-javascript-using-async-await"&gt;Asynchronous Javascript using async/await ‚Äî Joy Warugu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flaviocopes.com/javascript-async-await/"&gt;Modern Asynchronous JavaScript with async/await ‚Äî Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@_bengarrison/javascript-es8-introducing-async-await-functions-7a471ec7de8a"&gt;Javascript ‚Äî ES8 Introducing async/await Functions ‚Äî Ben Garrison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/avoiding-the-async-await-hell-c77a0fb71c4c"&gt;How to escape async/await hell ‚Äî Aditya Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/understanding-javascript-async-await"&gt;Understanding JavaScript's async await ‚Äî Nicol√°s Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://techbrij.com/javascript-async-await-parallel-sequence"&gt;JavaScript Async/Await: Serial, Parallel and Complex Flow ‚Äî TechBrij&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.pusher.com/promises-async-await/"&gt;From JavaScript Promises to Async/Await: why bother? ‚Äî Chris Nwamba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/flow-control-callbacks-promises-async-await/"&gt;Flow Control in Modern JS: Callbacks to Promises to Async/Await ‚Äî Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/improve-your-asynchronous-javascript-code-with-async-and-await-c02fc3813eda"&gt;How to improve your asynchronous Javascript code with async and await ‚Äî Indrek Lasn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@micksheridan.24/making-fetches-easy-with-async-await-8a1246efa1f6"&gt;Making Fetches Easy With Async Await ‚Äî Mickey Sheridan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/gafi/7-reasons-to-always-use-async-await-over-plain-promises-tutorial-4ej9"&gt;7 Reasons Why JavaScript Async/Await Is Better Than Plain Promises ‚Äî Mostafa Gaafar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/jscrambler/asynchronous-operations-in-javascript-2p6b"&gt;Asynchronous Operations in JavaScript ‚Äî Jscrambler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/better-programming/should-i-use-promises-or-async-await-126ab5c98789"&gt;JavaScript: Promises or async-await ‚Äî Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/zhiyuanamos/async-await-from-zero-to-hero-a22"&gt;Async / Await: From Zero to Hero ‚Äî Zhi Yuan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lydiahallie/javascript-visualized-promises-async-await-5gke"&gt;JavaScript Visualized: Promises &amp;amp; Async/Await ‚Äî Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Async_await"&gt;Making asynchronous programming easier with async and await ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-async-await-tutorial-learn-callbacks-promises-async-await-by-making-icecream/"&gt;JavaScript Async/Await Tutorial ‚Äì Learn Callbacks, Promises, and Async/Await in JS by Making Ice Cream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.webdevsimplified.com/2021-11/async-await/"&gt;Better Than Promises - JavaScript Async/Await&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=exBgWAIeIeg"&gt;Asynchronous JavaScript Crash Course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9YkUCxvaLEk"&gt;Async + Await ‚Äî Wes Bos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=SrNQS8J67zc"&gt;Asynchrony: Under the Hood ‚Äî Shelley Vohr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=568g8hxJJp4&amp;amp;index=3&amp;amp;list=PL0zVEGEvSaeHJppaRLrqjeTPnCH6"&gt;async/await in JavaScript - What, Why and How ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XO77Fib9tSI&amp;amp;index=3&amp;amp;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx"&gt;async/await Part 1 - Topics of JavaScript/ES8 ‚Äî The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=chavThlNz3s&amp;amp;index=4&amp;amp;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx"&gt;async/await Part 2 - Topics of JavaScript/ES8 ‚Äî The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=krAYA4rvbdA"&gt;Complete Guide to JS Async &amp;amp; Await ES2017/ES8 ‚Äî Colt Steele&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_9vgd9XKlDQ"&gt;Tips for using async/await in JavaScript ‚Äî James Q Quick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=V_Kr9OSfDeU"&gt;JavaScript Async Await ‚Äî Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/Gjbr21JLfgg?si=SDCVKr9ONw2GsNdT"&gt;Promise async and await in javascript ‚Äî Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;27. Data Structures&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/siliconwat/data-structures-in-javascript-1b9aed0ea17c"&gt;Data Structures in JavaScript ‚Äî Thon Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://itnext.io/algorithms-and-data-structures-in-javascript-a71548f902cb"&gt;Algorithms and Data Structures in JavaScript ‚Äî Oleksii Trekhleb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/courses/10-need-to-know-javascript-concepts/data-structures-objects-and-arrays"&gt;Data Structures: Objects and Arrays ‚Äï Chris Nwamba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://blog.benoitvallon.com/data-structures-in-javascript/data-structures-in-javascript/"&gt;Data structures in JavaScript ‚Äî Benoit Vallon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.cloudboost.io/playing-with-data-structures-in-javascript-stack-a55ebe50f29d"&gt;Playing with Data Structures in Javascript ‚Äî Anish K.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/the-little-guide-of-queue-in-javascript-4f67e79260d9"&gt;The Little Guide of Queue in JavaScript ‚Äî Germ√°n Cutraro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/barretlee/algorithms"&gt;All algorithms writing with JavaScript in the book 'Algorithms Fourth Edition'&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nzakas/computer-science-in-javascript"&gt;Collection of classic computer science paradigms in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jamiebuilds/itsy-bitsy-data-structures"&gt;All the things you didn't know you wanted to know about data structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/miku86/series/3259"&gt;JavaScript Data Structures: 40 Part Series ‚Äî miku86&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-in-plain-english/data-structures-understanding-graphs-82509d35e6b5"&gt;Data Structures: Understanding Graphs ‚Äî Rachel Hawa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/freddieduffield/data-structures-two-ways-linked-list-2n61"&gt;Data Structures Two Ways: Linked List (Pt 1) ‚Äî Freddie Duffield&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/freddieduffield/data-structures-two-ways-linked-list-pt2-2i60"&gt;Data Structures Two Ways: Linked List (Pt 2) ‚Äî Freddie Duffield&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/amejiarosario/graph-data-structures-for-beginners-5edn"&gt;Graph Data Structures Explained in JavaScript ‚Äî Adrian Mejia&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=H_EBPZgiAas&amp;amp;list=PLDmvslp_VR0zYUSth_8O69p4_cmvZEgLa"&gt;Algorithms In Javascript | Ace Your Interview ‚Äî Eduonix Learning Solutions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Gj5qBheGOEo&amp;amp;list=PLWKjhJtqVAbkso-IbgiiP48n-O-JQA9PJ"&gt;Data Structures and Algorithms in JavaScript ‚Äî freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Ymh_AurrMbA"&gt;Learning JavaScript Data Structures and Algorithms: Sorting ‚Äî Packt Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=41GSinwoMYA&amp;amp;ab_channel=Academind"&gt;JavaScript Data Structures: Getting Started ‚Äî Academind&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;28. Expensive Operation and Big O Notation&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/cesars-tech-insights/big-o-notation-javascript-25c79f50b19b"&gt;Big O Notation in Javascript ‚Äî C√©sar Ant√≥n Dorantes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-scene/time-complexity-big-o-notation-1a4310c3ee4b"&gt;Time Complexity/Big O Notation ‚Äî Tim Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@gmedina229/big-o-in-javascript-36ff67766051"&gt;Big O in JavaScript ‚Äî Gabriela Medina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bradoncode.com/blog/2012/04/big-o-algorithm-examples-in-javascript.html"&gt;Big O Search Algorithms in JavaScript ‚Äî Bradley Braithwaite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/time-is-complex-but-priceless-f0abd015063c"&gt;Algorithms in plain English: time complexity and Big-O Notation ‚Äî Michael Olorunnisola&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lofiandcode/an-introduction-to-big-o-notation-210o"&gt;An Introduction to Big O Notation ‚Äî Joseph Trettevik&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HgA5VOFan5E"&gt;JavaScript: Intro to Big O Notation and Function Runtime ‚Äî Eric Traub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=KatlvCFHPRo"&gt;Essential Big O for JavaScript Developers ‚Äî Dave Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ALl86xJiTD8"&gt;Big O Notation - Time Complexity Analysis ‚Äî WebTunings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=itn09C2ZB9Y"&gt;Learn Big O Notation In 12 Minutes - Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3yUuo7TqMW8"&gt;JavaScript Algorithms: Big-O Notation - Codevolution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JgWm6sQwS_I"&gt;JavaScript Algorithms Crash Course: Learn Algorithms &amp;amp; "Big O" from the Ground Up! - Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=LaexPVi1VRE"&gt;Big O Notation - Data Structures and Algorithms in Javascript - RoadSideCoder&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;29. Algorithms&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Crizstian/data-structure-and-algorithms-with-ES6"&gt;Data Structures and Algorithms using ES6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.thatjsdude.com/interview/js1.html"&gt;JS: Interview Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/siliconwat/algorithms-in-javascript-b0bed68f4038"&gt;Algorithms in JavaScript ‚Äî Thon Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/javascript-objects-square-brackets-and-algorithms-e9a2916dc158"&gt;JavaScript Objects, Square Brackets and Algorithms ‚Äî Dmitri Grabov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/felipernb/algorithms.js"&gt;Atwood's Law applied to CS101 - Classic algorithms and data structures implemented in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yangshun/lago"&gt;Data Structures and Algorithms library in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/idosela/algorithms-in-javascript"&gt;Collection of computer science algorithms and data structures written in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/trekhleb/algorithms-and-data-structures-in-javascript-49i3"&gt;Algorithms and Data Structures in JavaScript ‚Äî Oleksii Trekhleb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/playlist?list=PLC3y8-rFHvwiRYB4-HHKHblh3_bQNJTMa"&gt;JavaScript Algorithms - Codevolution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/watch?v=oBt53YbR9Kk&amp;amp;t=1021s"&gt;Dynamic Programming - Learn to Solve Algorithmic Problems &amp;amp; Coding Challenges - FreeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/playlist?list=PLKhlp2qtUcSZtJefDThsXcsAbRBCSTgW4"&gt;Data Structures and Algorithms in Javascript | DSA with JS - RoadsideCoder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/playlist?list=PLn2ipk-jqgZiAHiA70hOxAj8RMUeqYNK3"&gt;Javascript Algorithms + Data Structures - KodingKevin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/watch?v=41GSinwoMYA"&gt;JavaScript Data Structures: Getting Started - Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/playlist?list=PLRqwX-V7Uu6ZiZxtDDRCi6uhfTH4FilpH"&gt;Algorithms and Data Structures - The Coding Train (Daniel Shiffman)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;30. Inheritance, Polymorphism and Code Reuse&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Inheritance"&gt;Inheritance in JavaScript ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/class-inheritance"&gt;Class inheritance, super ‚Äî JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/inheritance-in-javascript-21d2b82ffa6f"&gt;Inheritance in JavaScript ‚Äî Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/simple-inheritance-javascript/"&gt;Simple Inheritance with JavaScript ‚Äî David Catuhe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-inheritance-25fe61ab9f85"&gt;JavaScript ‚Äî Inheritance, delegation patterns and Object linking ‚Äî NC Patro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.knoldus.com/object-oriented-javascript-polymorphism-with-examples/"&gt;Object Oriented JavaScript: Polymorphism with examples ‚Äî Knoldus Blogs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/yld-blog/program-like-proteus-a-beginners-guide-to-polymorphism-in-javascript-867bea7c8be2"&gt;Program Like Proteus ‚Äî A beginner's guide to polymorphism in Javascript ‚Äî Sam Galson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/object-oriented-javascript-deep-dive-es6-classes/"&gt;Object-oriented JavaScript: A Deep Dive into ES6 Classes ‚Äî Jeff Mott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://prototypr.io/post/unlocking-the-power-of-polymorphism-in-javascript-a-deep-dive"&gt;Unlocking the Power of Polymorphism in JavaScript: A Deep Dive&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yXlFR81tDBM"&gt;Inheritance in JavaScript ‚Äî kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RBLIm5LMrmc"&gt;JavaScript ES6 Classes and Inheritance ‚Äî Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zdovG9cuEBA"&gt;Polymorphism in JavaScript ‚Äî kudvenkat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;31. Design Patterns&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://addyosmani.com/resources/essentialjsdesignpatterns/book/"&gt;Learning JavaScript Design Patterns ‚Äî Addy Osmani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pepa.holla.cz/wp-content/uploads/2016/08/Pro-JavaScript-Design-Patterns.pdf"&gt;Pro JavaScript Design Patterns ‚Äî Ross Harmes and Dustin Diaz&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-design-patterns-explained/"&gt;JavaScript Design Patterns ‚Äì Explained with Examples ‚Äî Germ√°n Cocca&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know"&gt;4 JavaScript Design Patterns You Should Know ‚Äî Devan Patel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/beginners-guide-to-mobile-web-development/javascript-design-patterns-25f0faaaa15"&gt;JavaScript Design Patterns ‚Äì Beginner's Guide to Mobile Web Development ‚Äî Soumyajit Pathak&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/javascript-design-patterns-ed9d4c144c81"&gt;JavaScript Design Patterns ‚Äî Akash Pal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/understanding-design-patterns-in-javascript-13345223f2dd"&gt;JavaScript Design Patterns: Understanding Design Patterns in JavaScript - Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fbeline/Design-Patterns-JS"&gt;All the 23 (GoF) design patterns implemented in Javascript ‚Äî Felipe Beline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/better-programming/the-power-of-the-module-pattern-in-javascript-3c73f7cd10e8"&gt;The Power of the Module Pattern in JavaScript ‚Äî jsmanifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/omensah/design-patterns-for-developers-using-javascript----part-one--b3e"&gt;Design Patterns for Developers using JavaScript pt. I ‚Äî Oliver Mensah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/omensah/design-patterns-for-developers-using-javascript---part-two--3p39"&gt;Design Patterns for Developers using JavaScript pt. II ‚Äî Oliver Mensah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://levelup.gitconnected.com/design-patterns-in-modern-javascript-development-ec84d8be06ca"&gt;Design patterns in modern JavaScript development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/carlillo/understanding-design-patterns-iterator-using-dev-to-and-medium-social-networks-3bdd"&gt;Understanding Design Patterns: Iterator using Dev.to and Medium social networks! ‚Äî Carlos Caballero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/kristijanfistrek/javascript-design-patterns-factory-pattern-562p"&gt;JavaScript Design Patterns - Factory Pattern ‚Äî KristijanFi≈°trek&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-in-plain-english/javascript-design-pattern-module-pattern-555737eccecd"&gt;JavaScript Design Pattern ‚Äî Module Pattern - Factory Pattern ‚Äî Moon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/better-programming/design-patterns-null-object-5ee839e37892"&gt;Design Patterns: Null Object - Carlos Caballero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/francescoxx/strategy-pattern-5oh"&gt;Strategy Pattern - Francesco Ciulla&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/francescoxx/adapter-pattern-5bjk"&gt;Adapter Pattern - Francesco Ciulla&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/jsmanifest/the-power-of-composite-pattern-in-javascript-2732"&gt;The Power of Composite Pattern in JavaScript - jsmanifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/bytebodger/in-defense-of-defensive-programming-k45"&gt;In Defense of Defensive Programming - Adam Nathaniel Davis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascriptpatterns.vercel.app/patterns"&gt;JavaScript Patterns Workshop ‚Äî Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.udacity.com/course/javascript-design-patterns--ud989"&gt;JavaScript Design Patterns ‚Äî Udacity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hO7mzO83N1Q"&gt;JavaScript Patterns for 2017 ‚Äî Scott Allen&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;32. Partial Applications, Currying, Compose and Pipe&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getify/Functional-Light-JS/raw/master/manuscript/ch3.md"&gt;Functional-Light JavaScript: Ch. 3 - Managing Function Inputs ‚Äî Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@pragyan88/writing-middleware-composition-and-currying-elegance-in-javascript-8b15c98a541b"&gt;Composition and Currying Elegance in JavaScript ‚Äî Pragyan Das&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/javascript-functional-composition-for-every-day-use-22421ef65a10"&gt;Functional JavaScript: Function Composition For Every Day Use ‚Äî Joel Thoms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@acparas/what-i-learned-today-july-2-2017-ab9a46dbf85f"&gt;Functional Composition: compose() and pipe() ‚Äî Anton Paras&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://busypeoples.github.io/post/functional-composing-javascript/"&gt;Why The Hipsters Compose Everything: Functional Composing In JavaScript ‚Äî A. Sharif&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jrsinclair.com/articles/2016/gentle-introduction-to-functional-javascript-functions/"&gt;A Gentle Introduction to Functional JavaScript pt III: Functions for making functions ‚Äî James Sinclair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jsleao.wordpress.com/2015/02/22/curry-and-compose-why-you-should-be-using-something-like-ramda-in-your-code/"&gt;Curry And Compose (why you should be using something like ramda in your code) ‚Äî jsanchesleao&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vanslaars.io/post/create-pipe-function/"&gt;Function Composition in JavaScript with Pipe ‚Äî Andy Van Slaars&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.telerik.com/featured/practical-functional-javascript-ramda/"&gt;Practical Functional JavaScript with Ramda ‚Äî Andrew D'Amelio, Yuri Takhteyev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/the-beauty-in-partial-application-currying-and-function-composition-d885bdf0d574"&gt;The beauty in Partial Application, Currying, and Function Composition ‚Äî Joel Thoms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-scene/curry-or-partial-application-8150044c78b8"&gt;Curry or Partial Application? ‚Äî Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://benalman.com/news/2012/09/partial-application-in-javascript/"&gt;Partial Application in JavaScript ‚Äî Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/partial-application-of-functions-dbe7d9b80760"&gt;Partial Application of Functions ‚Äî Functional Reactive Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://raganwald.com/2015/04/01/partial-application.html"&gt;Partial Application in ECMAScript 2015 ‚Äî Ragan Wald&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1-1f15e387e536"&gt;So You Want to be a Functional Programmer pt. I ‚Äî Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-2-7005682cec4a"&gt;So You Want to be a Functional Programmer pt. II ‚Äî Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-3-1b0fd14eb1a7"&gt;So You Want to be a Functional Programmer pt. III ‚Äî Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-4-18fbe3ea9e49"&gt;So You Want to be a Functional Programmer pt. IV ‚Äî Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-5-c70adc9cf56a"&gt;So You Want to be a Functional Programmer pt. V ‚Äî Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/an-introduction-to-the-basic-principles-of-functional-programming-a2c2a15c84"&gt;An introduction to the basic principles of Functional Programming ‚Äî TK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/the-renaissance-developer/concepts-of-functional-programming-in-javascript-6bc84220d2aa"&gt;Concepts of Functional Programming in javascript ‚Äî TK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/an-introduction-to-functional-programming-style-in-javascript-71fcc050f064"&gt;An Introduction to Functional Programming Style in JavaScript ‚Äî JavaScript Teacher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/a-practical-guide-to-writing-more-functional-javascript-db49409f71"&gt;A practical guide to writing more functional JavaScript ‚Äî Nadeesha Cabral&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/benlesh/a-simple-explanation-of-functional-pipe-in-javascript-2hbj"&gt;A simple explanation of functional pipe in JavaScript ‚Äî Ben Lesh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Wl2ejJOqHUU"&gt;Compose vs Pipe: Functional Programming in JavaScript ‚Äî Chyld Studios&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jigHxo9YR30"&gt;JavaScript Functional Programing: Compose ‚Äî Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mth5WpEc4Qs"&gt;Function Composition - Functional JavaScript ‚Äî NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Uam37AlzPYw"&gt;JavaScript Function Composition Explained ‚Äî Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=VGB9HbL1GHk"&gt;Let's code with function composition ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DzLkRsUN2vE"&gt;Partial Application vs. Currying ‚Äî NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jkebgHEcvac"&gt;JavaScript Partial Application ‚Äî Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=75W8UPQ5l7k&amp;amp;t=261s"&gt;call, apply and bind method in JavaScript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;33. Clean Code&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png"&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/clean-coding-for-beginners/"&gt;Clean Code Explained ‚Äì A Practical Introduction to Clean Coding for Beginners ‚Äî freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;Clean Code concepts adapted for JavaScript ‚Äî Ryan McDermott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@kevin_peters/function-parameters-in-javascript-clean-code-4caac109159b"&gt;Function parameters in JavaScript Clean Code ‚Äî Kevin Peters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/keeping-your-code-clean-d30bcffd1a10"&gt;Keeping your code clean ‚Äî Samuel James&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/modern-javascript-best-practices/"&gt;Best Practices for Using Modern JavaScript Syntax ‚Äî M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cross-js/cross-js"&gt;best practices for cross node/web development - Jimmy W√§rting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ganderzz/on-writing-clean-code-57cm"&gt;Writing Clean Code - Dylan Paulus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/nityeshaga/writing-clean-code-and-the-practice-of-programming-actionable-advice-for-beginners-5f0k"&gt;Writing Clean Code and The Practice of Programming - Nityesh Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/d_ir/clean-code-dirty-code-human-code-6nm"&gt;Clean code, dirty code, human code - Daniel Irvine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/taillogs/practical-ways-to-write-better-javascript-26d4"&gt;Practical Ways to Write Better JavaScript - Ryland G&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/swlh/the-must-know-clean-code-principles-1371a14a2e75"&gt;The Must-Know Clean Code Principles - Kesk on Medium&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882/"&gt;The Clean Code Book - Robert C Martin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/how-to-use-destructuring-in-javascript-to-write-cleaner-more-powerful-code-9d1b38794050/"&gt;How to use destructuring in JavaScript to write cleaner, more powerful code - freecodecamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://betterprogramming.pub/write-clean-code-using-javascript-object-destructuring-3551302130e7"&gt;Write Clean Code Using JavaScript Object Destructuring - Asel Siriwardena&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video"&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/watch?v=Mus_vwhTCq0"&gt;JavaScript Pro Tips - Code This, NOT That&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/watch?v=b9c5GmmS7ks&amp;amp;list=PLWKjhJtqVAbkK24EaPurzMq0-kw5U9pJh&amp;amp;index=1"&gt;Clean Code playlist - Beau teaches&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://youtu.be/RMN_bkZ1KM0?si=Ssg3cNZ_DB7CIwKQ"&gt;JavaScript Best Practices and Coding Conventions - Write Clean Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://youtu.be/vPXzVNmCPg4?si=QR1k4E6Zx5H4mfcs"&gt;JavaScript Clean Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/watch?v=0wHyoBPc6zs"&gt;Tips On Learning How To Code&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img align="center" width="35" height="35" src="https://moein.video/wp-content/uploads/2022/05/license-GIF-Certificate-Royalty-Free-Animated-Icon-350px-after-effects-project.gif"&gt; &lt;a id="license"&gt;License&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;This software is licensed under MIT License. See &lt;a href="https://github.com/leonardomso/33-js-concepts/raw/master/LICENSE"&gt;License&lt;/a&gt; for more information ¬©Leonardo Maldonado.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;div align="center"&gt; 
 &lt;strong&gt;Happy Learning! ‚≠ê&lt;/strong&gt; 
 &lt;p&gt;If you find this repository helpful, please consider giving it a star!&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>SillyTavern/SillyTavern</title>
      <link>https://github.com/SillyTavern/SillyTavern</link>
      <description>&lt;p&gt;LLM Frontend for Power Users.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name="readme-top"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/01a6ae9a-16aa-45f2-8bff-32b5dc587e44" alt=""&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-de_de.md"&gt;German&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-zh_cn.md"&gt;‰∏≠Êñá&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-zh_tw.md"&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-ja_jp.md"&gt;Êó•Êú¨Ë™û&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-ru_ru.md"&gt;–†—É—Å—Å–∫–∏–π&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-ko_kr.md"&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/SillyTavern/SillyTavern/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/SillyTavern/SillyTavern.svg?sanitize=true" alt="GitHub Stars"&gt;&lt;/a&gt; &lt;a href="https://github.com/SillyTavern/SillyTavern/forks"&gt;&lt;img src="https://img.shields.io/github/forks/SillyTavern/SillyTavern.svg?sanitize=true" alt="GitHub Forks"&gt;&lt;/a&gt; &lt;a href="https://github.com/SillyTavern/SillyTavern/issues"&gt;&lt;img src="https://img.shields.io/github/issues/SillyTavern/SillyTavern.svg?sanitize=true" alt="GitHub Issues"&gt;&lt;/a&gt; &lt;a href="https://github.com/SillyTavern/SillyTavern/pulls"&gt;&lt;img src="https://img.shields.io/github/issues-pr/SillyTavern/SillyTavern.svg?sanitize=true" alt="GitHub Pull Requests"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;p&gt;SillyTavern provides a single unified interface for many LLM APIs (KoboldAI/CPP, Horde, NovelAI, Ooba, Tabby, OpenAI, OpenRouter, Claude, Mistral and more), a mobile-friendly layout, Visual Novel Mode, Automatic1111 &amp;amp; ComfyUI API image generation integration, TTS, WorldInfo (lorebooks), customizable UI, auto-translate, more prompt options than you'd ever want or need, and endless growth potential via third-party extensions.&lt;/p&gt; 
&lt;p&gt;We have a &lt;a href="https://docs.sillytavern.app/"&gt;Documentation website&lt;/a&gt; to answer most of your questions and help you get started.&lt;/p&gt; 
&lt;h2&gt;What is SillyTavern?&lt;/h2&gt; 
&lt;p&gt;SillyTavern (or ST for short) is a locally installed user interface that allows you to interact with text generation LLMs, image generation engines, and TTS voice models.&lt;/p&gt; 
&lt;p&gt;Beginning in February 2023 as a fork of TavernAI 1.2.8, SillyTavern now has over 200 contributors and 2 years of independent development under its belt, and continues to serve as a leading software for savvy AI hobbyists.&lt;/p&gt; 
&lt;h2&gt;Our Vision&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;We aim to empower users with as much utility and control over their LLM prompts as possible. The steep learning curve is part of the fun!&lt;/li&gt; 
 &lt;li&gt;We do not provide any online or hosted services, nor programmatically track any user data.&lt;/li&gt; 
 &lt;li&gt;SillyTavern is a passion project brought to you by a dedicated community of LLM enthusiasts, and will always be free and open sourced.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Do I need a powerful PC to run SillyTavern?&lt;/h2&gt; 
&lt;p&gt;The hardware requirements are minimal: it will run on anything that can run NodeJS 18 or higher. If you intend to do LLM inference on your local machine, we recommend a 3000-series NVIDIA graphics card with at least 6GB of VRAM, but actual requirements may vary depending on the model and backend you choose to use.&lt;/p&gt; 
&lt;h2&gt;Questions or suggestions?&lt;/h2&gt; 
&lt;h3&gt;Discord server&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;&lt;a href="https://discord.gg/sillytavern"&gt;&lt;img src="https://img.shields.io/discord/1100685673633153084?color=5865F2&amp;amp;label=discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=for-the-badge" alt=""&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align="left"&gt;&lt;a href="https://discord.gg/sillytavern"&gt;Join our Discord community!&lt;/a&gt; Get support, share favorite characters and prompts.&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
&lt;/table&gt; 
&lt;p&gt;Or get in touch with the developers directly:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discord: cohee, rossascends, wolfsblvt&lt;/li&gt; 
 &lt;li&gt;Reddit: &lt;a href="https://www.reddit.com/user/RossAscends/"&gt;/u/RossAscends&lt;/a&gt;, &lt;a href="https://www.reddit.com/user/sillylossy/"&gt;/u/sillylossy&lt;/a&gt;, &lt;a href="https://www.reddit.com/user/Wolfsblvt/"&gt;u/Wolfsblvt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SillyTavern/SillyTavern/issues"&gt;Post a GitHub issue&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;I like your project! How do I contribute?&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Send pull requests. Learn how to contribute: &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Send feature suggestions and issue reports using the provided templates.&lt;/li&gt; 
 &lt;li&gt;Read this entire readme file and check the documentation website first, to avoid sending duplicate issues.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;img width="500" alt="image" src="https://github.com/user-attachments/assets/9b5f32f0-c3b3-4102-b3f5-0e9213c0f50f"&gt; 
&lt;img width="500" alt="image" src="https://github.com/user-attachments/assets/913fdbaa-7d33-42f1-ae2c-89dca41c53d1"&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;For detailed installation instructions, please visit our documentation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.sillytavern.app/installation/windows/"&gt;Windows Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.sillytavern.app/installation/linuxmacos/"&gt;MacOS/Linux Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.sillytavern.app/installation/android-(termux)/"&gt;Android (Termux) Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.sillytavern.app/installation/docker/"&gt;Docker Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License and credits&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TavernAI/TavernAI"&gt;TavernAI&lt;/a&gt; 1.2.8 by Humi: MIT License&lt;/li&gt; 
 &lt;li&gt;Portions of CncAnon's TavernAITurbo mod used with permission&lt;/li&gt; 
 &lt;li&gt;Visual Novel Mode inspired by the work of PepperTaco (&lt;a href="https://github.com/peppertaco/Tavern/"&gt;https://github.com/peppertaco/Tavern/&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Noto Sans font by Google (OFL license)&lt;/li&gt; 
 &lt;li&gt;Icon theme by Font Awesome &lt;a href="https://fontawesome.com"&gt;https://fontawesome.com&lt;/a&gt; (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)&lt;/li&gt; 
 &lt;li&gt;Default content by @OtisAlejandro (Seraphina character and lorebook) and @kallmeflocc (10K Discord Users Celebratory Background)&lt;/li&gt; 
 &lt;li&gt;Docker guide by &lt;a href="https://github.com/mrguymiah"&gt;@mrguymiah&lt;/a&gt; and &lt;a href="https://github.com/Bronya-Rand"&gt;@Bronya-Rand&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;kokoro-js library by &lt;a href="https://github.com/hexgrad"&gt;@hexgrad&lt;/a&gt; (Apache-2.0 License)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Top Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/SillyTavern/SillyTavern/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=SillyTavern/SillyTavern" alt="Contributors"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- LINK GROUP --&gt;</description>
    </item>
    
    <item>
      <title>LeCoupa/awesome-cheatsheets</title>
      <link>https://github.com/LeCoupa/awesome-cheatsheets</link>
      <description>&lt;p&gt;üë©‚Äçüíªüë®‚Äçüíª Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://lecoupa.github.io/awesome-cheatsheets/"&gt;&lt;img src="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/_design/cover_github@2x.png" alt="AWESOME CHEATSHEETS LOGO"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://awesome.re"&gt;&lt;img src="https://awesome.re/badge.svg?sanitize=true" alt="Awesome"&gt;&lt;/a&gt; &lt;a href="https://github.com/LeCoupa/awesome-cheatsheets/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="GitHub license"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WEBSITE DIRECTORY&lt;/strong&gt;: &lt;a href="https://lecoupa.github.io/awesome-cheatsheets/"&gt;Available here&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìö Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;ü§î Why Awesome-Cheatsheets?&lt;/h2&gt; 
&lt;p&gt;I usually make a cheat sheet when I want to improve my skills in a programming language, a framework or a development tool. &lt;a href="https://gist.github.com/LeCoupa"&gt;I started doing these kinds of things a long time ago on Gist&lt;/a&gt;. To better keep track of the history and to let people contribute, I re-organized all of them into this single repository. Most of the content is coming from official documentation and some books I have read.&lt;/p&gt; 
&lt;p&gt;Feel free to take a look. You might learn new things. They have been designed to provide a quick way to assess your knowledge and to save you time.&lt;/p&gt; 
&lt;h2&gt;üìö Table of Contents&lt;/h2&gt; 
&lt;h3&gt;üìÉ Languages&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Command line interface&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/bash.sh"&gt;Bash&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Imperative&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C.txt"&gt;C&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C%23.txt"&gt;C#&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/golang.md"&gt;Go&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/java.md"&gt;Java&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/php.php"&gt;PHP&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/python.md"&gt;Python&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Functional&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/javascript.js"&gt;JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;üì¶ Backend&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;PHP&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/laravel.php"&gt;Laravel&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Python&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/django.py"&gt;Django&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Javascript&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/adonis.js"&gt;Adonis.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/express.js"&gt;Express.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/feathers.js"&gt;Feathers.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/moleculer.js"&gt;Moleculer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/node.js"&gt;Node.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/sails.js"&gt;Sails.js&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;üåê Frontend&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Basics&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/html5.html"&gt;HTML5&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/css3.css"&gt;CSS3&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Frameworks&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/react.js"&gt;React.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/vue.js"&gt;Vue.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/tailwind.css"&gt;Tailwind.css&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/ember.js"&gt;Ember.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angular.js"&gt;Angular (2+)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angularjs.js"&gt;AngularJS&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;üóÉÔ∏è Databases&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;SQL&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/mysql.sh"&gt;MySQL&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;NoSQL&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/redis.sh"&gt;Redis&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;üîß Tools&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Development&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/curl.sh"&gt;cURL&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/drush.sh"&gt;Drush&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/elasticsearch.js"&gt;Elasticsearch&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/emmet.md"&gt;Emmet&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/git.sh"&gt;Git&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/puppeteer.js"&gt;Puppeteer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/sublime_text.md"&gt;Sublime Text&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vim.txt"&gt;VIM&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vscode.md"&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/xcode.txt"&gt;Xcode&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Infrastructure&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/aws.sh"&gt;AWS CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/docker.sh"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/heroku.sh"&gt;Heroku CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/kubernetes.md"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_boxfile.yml"&gt;Nanobox Boxfile&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_cli.sh"&gt;Nanobox CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nginx.sh"&gt;Nginx&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/pm2.sh"&gt;PM2&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/ubuntu.sh"&gt;Ubuntu&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/firebase_cli.md"&gt;Firebase CLI&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h2&gt;üôåüèº How to Contribute?&lt;/h2&gt; 
&lt;p&gt;You are more than welcome to contribute and build your own cheat sheet for your favorite programming language, framework or development tool. Just submit changes via pull request and I will review them before merging.&lt;/p&gt; 
&lt;h2&gt;üë©‚Äçüíªüë®‚Äçüíª Our valuable Contributors&lt;/h2&gt; 
&lt;p align="center"&gt;&lt;a href="https://github.com/LeCoupa/awesome-cheatsheets/graphs/contributors"&gt; &lt;img src="https://contributors-img.web.app/image?repo=LeCoupa/awesome-cheatsheets"&gt; &lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fanmingming/live</title>
      <link>https://github.com/fanmingming/live</link>
      <description>&lt;p&gt;‚úØ ÂèØÁõ¥ËøûËÆøÈóÆÁöÑÁîµËßÜ/ÂπøÊí≠ÂõæÊ†áÂ∫ì‰∏éÁõ∏ÂÖ≥Â∑•ÂÖ∑È°πÁõÆ ‚úØ üîï Ê∞∏‰πÖÂÖçË¥π Áõ¥ËøûËÆøÈóÆ ÂÆåÊï¥ÂºÄÊ∫ê ‰∏çÊñ≠ÂÆåÂñÑÁöÑÂè∞Ê†á ÊîØÊåÅIPv4/IPv6ÂèåÊ†àËÆøÈóÆ üîï&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt;&lt;img alt="live.fanmingming.com" src="https://live.fanmingming.com/logo.png"&gt;&lt;/p&gt; 
&lt;h1 align="center"&gt; ‚úØ ‰∏Ä‰∏™ÂèØÁõ¥ËøûËÆøÈóÆÁöÑÁîµËßÜ/ÂπøÊí≠ÂõæÊ†áÂ∫ì‰∏éÁõ∏ÂÖ≥Â∑•ÂÖ∑È°πÁõÆ ‚úØ &lt;/h1&gt; 
&lt;h3 align="center"&gt;üîï Ê∞∏‰πÖÂÖçË¥π Áõ¥ËøûËÆøÈóÆ ÂÆåÊï¥ÂºÄÊ∫ê ‰∏çÊñ≠ÂÆåÂñÑÁöÑÂè∞Ê†á ÊîØÊåÅIPv4/IPv6ÂèåÊ†àËÆøÈóÆ üîï&lt;/h3&gt; 
&lt;p align="center"&gt; &lt;img alt="GitHub Repo stars" src="https://img.shields.io/github/stars/fanmingming/live?style=flat-square"&gt; &lt;img alt="GitHub forks" src="https://img.shields.io/github/forks/fanmingming/live?style=flat-square"&gt; &lt;img alt="GitHub issues" src="https://img.shields.io/github/issues/fanmingming/live?style=flat-square"&gt; &lt;img alt="GitHub watchers" src="https://img.shields.io/github/watchers/fanmingming/live?style=flat-square"&gt; &lt;img alt="GitHub contributors" src="https://img.shields.io/github/contributors/fanmingming/live?style=flat-square"&gt; &lt;img alt="GitHub" src="https://img.shields.io/github/license/fanmingming/live?style=flat-square"&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;ü§π‚Äç‚ôÇÔ∏è‰ΩøÁî®ÊñπÊ≥ï:&lt;/h2&gt; 
&lt;h3&gt;üåáÁîµËßÜ/ÂπøÊí≠ÂõæÊ†áÂ∫ìÔºö&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Á±ª Âà´&lt;/th&gt; 
   &lt;th&gt;Ë∞ÉÁî®Ë∑ØÂæÑ&lt;/th&gt; 
   &lt;th&gt;ÊúÄÂêéÊõ¥Êñ∞&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;üì∫ÁîµËßÜ&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/fanmingming/live/tree/main/tv"&gt;https://live.fanmingming.cn/tv/{name}.png&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;2025.04.01&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;üìªÂπøÊí≠&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/fanmingming/live/tree/main/radio"&gt;https://live.fanmingming.cn/radio/{name}.png&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;2024.8.29&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;‚õìÔ∏èÂàõÂª∫ÊÇ®ÁöÑm3uËÆ¢ÈòÖÈìæÊé•Ôºö&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;‰∏ãËΩΩ &lt;code&gt;demo.m3u&lt;/code&gt; Á©∫ÁôΩÁ§∫‰æãÊñá‰ª∂Âπ∂‰ΩøÁî®ÊñáÊú¨ÁºñËæëËΩØ‰ª∂ÊâìÂºÄ„ÄÇ&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://live.fanmingming.cn/tv/m3u/demo.m3u"&gt;https://live.fanmingming.cn/tv/m3u/demo.m3u&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ÂèÇËÄÉ‰∏ãÊñπÁ§∫‰æã‰ª£Á†ÅÂ∞Ü&lt;code&gt;ÂèØÁî®ÁöÑCCTV1ËäÇÁõÆÊ∫ê&lt;/code&gt;ÊõøÊç¢‰∏∫ÊÇ®ÂΩìÂú∞ÂèØÁî®ÁöÑÁõ¥Êí≠Ê∫êÈìæÊé•Ôºå‰æùÊ≠§Á±ªÊé®ÈÄê‰∏™ÊõøÊç¢„ÄÇ&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;#EXTM3U x-tvg-url="https://live.fanmingming.cn/e.xml"
#EXTINF:-1 tvg-name="CCTV1" tvg-logo="https://live.fanmingming.cn/tv/CCTV1.png" group-title="Â§ÆËßÜ",CCTV-1 ÁªºÂêà
ÂèØÁî®ÁöÑCCTV1ËäÇÁõÆÊ∫ê
Ê≠§Â§ÑÁúÅÁï•...
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Â∞ÜÁºñËæëÂÆåÊàêÁöÑm3uÊñá‰ª∂‰∏ä‰º†Âà∞ÊÇ®ÁöÑGithub‰ªìÂ∫ì„ÄÇ&lt;/li&gt; 
 &lt;li&gt;‰∏∫ÊÇ®ÁöÑGithub‰ªìÂ∫ìÂºÄÂêØPages„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÈÄöËøáÊí≠ÊîæÂô®ËÆ¢ÈòÖÊÇ®ÁöÑm3uÈìæÊé•„ÄÇ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ÂÖ≥‰∫éGithub PagesÔºö&lt;a href="https://docs.github.com/en/enterprise-cloud@latest/pages/quickstart"&gt;https://docs.github.com/en/enterprise-cloud@latest/pages/quickstart&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üõ†Ô∏èÂ∑•ÂÖ∑&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;üìÜ&lt;strong&gt;EPGÊé•Âè£Âú∞ÂùÄ&lt;/strong&gt;Ôºö 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://live.fanmingming.cn/e.xml"&gt;https://live.fanmingming.cn/e.xml&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;üèûÔ∏è&lt;strong&gt;BingÊØèÊó•ÂõæÁâá&lt;/strong&gt;Ôºö 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://fanmingming.com/bing"&gt;https://fanmingming.com/bing&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;üéûÔ∏è&lt;strong&gt;m3u8Âú®Á∫ø‰∏ãËΩΩ&lt;/strong&gt;Ôºö 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://live.fanmingming.cn/m3u8"&gt;https://live.fanmingming.cn/m3u8&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;üÜï&lt;strong&gt;TXTËΩ¨M3UÊ†ºÂºè&lt;/strong&gt;Ôºö 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://live.fanmingming.cn/txt2m3u"&gt;https://live.fanmingming.cn/txt2m3u&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;üìÑ&lt;strong&gt;Âú®Á∫øM3UËΩ¨TXT&lt;/strong&gt;Ôºö 
  &lt;ul&gt; 
   &lt;li&gt;Demoüîó &lt;a href="https://fanmingming.com/txt?url=https://live.fanmingming.cn/tv/m3u/ipv6.m3u"&gt;https://fanmingming.com/txt?url=https://live.fanmingming.com/tv/m3u/ipv6.m3u&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;üåê&lt;strong&gt;M3U8 Web Player&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Demoüîó &lt;a href="https://live.fanmingming.cn/player/?vurl=https://0472.org/hls/cgtn.m3u8"&gt;https://live.fanmingming.cn/player/?vurl=https://0472.org/hls/cgtn.m3u8&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìñËØ¥Êòé&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;È°πÁõÆEPGÊé•Âè£‰∏∫112114.xyzÁ´ôÁÇπÂàÜÂèëÔºåÊú¨È°πÁõÆÊó†Ê≥ïÁ°Æ‰øùÂÖ∂ÂáÜÁ°ÆÊÄß„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÈÄöËøáM3U8 Web PlayerÊµãËØïÁõ¥Êí≠Ê∫êÈúÄ‰ΩøÁî®httpsÂçèËÆÆÁöÑÁõ¥Êí≠Ê∫êÈìæÊé•„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Âú®Á∫øM3UËΩ¨TXTÂ∑•ÂÖ∑ÊûÑÂª∫Âú®VercelÔºå‰∏ç‰ºöËÆ∞ÂΩïÊÇ®ÁöÑËÆøÈóÆÊó•ÂøóËØ∑ÊîæÂøÉ‰ΩøÁî®„ÄÇ&lt;/li&gt; 
 &lt;li&gt;TXTËΩ¨M3UÂ∑•ÂÖ∑‰∏∫ÂâçÁ´ØÁΩëÈ°µËΩ¨Êç¢ÔºåÊó†ÈúÄ‰∏ä‰º†Êñá‰ª∂ÔºåÁ≤òË¥¥Âç≥ËΩ¨Êç¢ÔºåÂÆâÂÖ®‰∏çÂÅ∑Ê∫ê„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Êú¨È°πÁõÆ‰∏çÂ≠òÂÇ®‰ªª‰ΩïÁöÑÊµÅÂ™í‰ΩìÂÜÖÂÆπÔºåÊâÄÊúâÁöÑÊ≥ïÂæãË¥£‰ªª‰∏éÂêéÊûúÂ∫îÁî±‰ΩøÁî®ËÄÖËá™Ë°åÊâøÊãÖ„ÄÇ&lt;/li&gt; 
 &lt;li&gt;È°πÁõÆ&lt;code&gt;/tv/m3u/&lt;/code&gt;Âíå&lt;code&gt;/radio/m3u/&lt;/code&gt;ÁõÆÂΩï‰∏ãÁöÑÂÜÖÂÆπÊî∂ÈõÜ‰∫é‰∫íËÅîÁΩëÔºå‰ªÖ‰æõÊµãËØïÁ†îÁ©∂‰ΩøÁî®ÔºåÊú¨È°πÁõÆÊó†Ê≥ï‰øùËØÅÂÖ∂ÊúâÊïàÊÄß„ÄÇ&lt;/li&gt; 
 &lt;li&gt;‰∏ªÂüüÂêç„Äê&lt;code&gt;live.fanmingming.com&lt;/code&gt;„ÄëÁöÑWEBËÆøÈóÆÈÄöËøáGithub PagesËá™Âä®ÊûÑÂª∫ÔºåÁî±CloudFlareÊèê‰æõCDNÂíåÂÆâÂÖ®Èò≤Êä§„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÈïúÂÉèÂüüÂêç„Äê&lt;code&gt;live.fanmingming.cn&lt;/code&gt;„ÄëÊèê‰æõÂÆåÊï¥ÁöÑËµÑÊ∫êWEBËÆøÈóÆÔºåÈÄöËøáGithub ActionsËá™Âä®ÊûÑÂª∫Âú®CloudFlare Pages„ÄÇ&lt;/li&gt; 
 &lt;li&gt;È°πÁõÆÊâÄÊúâÊñá‰ª∂ÂùáÊâòÁÆ°Âú®&lt;a href="https://github.com/fanmingming/live"&gt;GitHub&lt;/a&gt;‰∏îËá™Âä®ÊûÑÂª∫ÔºåÁî±È°πÁõÆÂèëËµ∑‰∫∫ÂÖ¨ÁõäÁª¥Êä§ÔºåÊ¨¢ËøéStarÊú¨È°πÁõÆÊàñÁÇπÂáª&lt;a href="https://github.com/fanmingming/live/issues/new/choose"&gt;Issues&lt;/a&gt;ÂèçÈ¶àÊÇ®ÁöÑÈóÆÈ¢ò„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÊÇ®ÂèØ‰ª•FrokÊú¨È°πÁõÆÂà∞ÊÇ®ÁöÑGithubË¥¶Êà∑ÔºåÂ∞ÜÁº∫Â§±ÁöÑÈ¢ëÈÅìLogo‰∏ä‰º†Âà∞&lt;code&gt;tv&lt;/code&gt;Êàñ&lt;code&gt;radio&lt;/code&gt;ÁõÆÂΩï‰∏ãÂπ∂ÂèëËµ∑ÊãâÂèñËØ∑Ê±ÇÔºåÊî∂Âà∞ËØ∑Ê±ÇÂêéÊàë‰ª¨‰ºöÂØπÊÇ®Êèê‰∫§ÁöÑÂÜÖÂÆπËøõË°åÈ™åËØÅÔºåÂÆ°Ê†∏ÈÄöËøáÂêé‰ºöËá™Âä®‰∏∫ÊÇ®ÁΩ≤ÂêçÂπ∂ÂèëÂ∏É„ÄÇ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üì±ËÅîÁ≥ª&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Telegram: &lt;a href="https://t.me/AirfoneBot"&gt;@AirfoneBot&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Â¶ÇÈÅáËµÑÊ∫êËÆøÈóÆÈóÆÈ¢òËØ∑ÈÄöËøáTelegramÂèçÈ¶à„ÄÇ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìîÊõ¥Êñ∞&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;2025.04.01 
  &lt;ul&gt; 
   &lt;li&gt;Êñ∞Â¢ûÂåó‰∫¨Âç´ËßÜ4KÂè∞Ê†á„ÄÇ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>