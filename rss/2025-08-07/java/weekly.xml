<rss version="2.0">
  <channel>
    <title>GitHub Java Weekly Trending</title>
    <description>Weekly Trending of Java in GitHub</description>
    <pubDate>Wed, 06 Aug 2025 01:44:20 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>Anuken/Mindustry</title>
      <link>https://github.com/Anuken/Mindustry</link>
      <description>&lt;p&gt;The automation tower defense RTS&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Anuken/Mindustry/master/core/assets-raw/sprites/ui/logo.png" alt="Logo"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/Anuken/Mindustry/actions"&gt;&lt;img src="https://github.com/Anuken/Mindustry/workflows/Tests/badge.svg?event=push" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/mindustry"&gt;&lt;img src="https://img.shields.io/discord/391020510269669376.svg?logo=discord&amp;amp;logoColor=white&amp;amp;logoWidth=20&amp;amp;labelColor=7289DA&amp;amp;label=Discord&amp;amp;color=17cf48" alt="Discord"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The automation tower defense RTS, written in Java.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://trello.com/b/aE2tcUwF/mindustry-40-plans"&gt;Trello Board&lt;/a&gt;&lt;/em&gt;&lt;br&gt; &lt;em&gt;&lt;a href="https://mindustrygame.github.io/wiki"&gt;Wiki&lt;/a&gt;&lt;/em&gt;&lt;br&gt; &lt;em&gt;&lt;a href="https://mindustrygame.github.io/docs/"&gt;Javadoc&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/Anuken/Mindustry/master/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;Bleeding-edge builds are generated automatically for every commit. You can see them &lt;a href="https://github.com/Anuken/MindustryBuilds/releases"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you'd rather compile on your own, follow these instructions. First, make sure you have &lt;a href="https://adoptium.net/temurin/releases/?os=any&amp;amp;arch=any&amp;amp;version=17"&gt;JDK 17&lt;/a&gt; installed. &lt;strong&gt;Other JDK versions will not work.&lt;/strong&gt; Open a terminal in the Mindustry directory and run the following commands:&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Running:&lt;/em&gt; &lt;code&gt;gradlew desktop:run&lt;/code&gt;&lt;br&gt; &lt;em&gt;Building:&lt;/em&gt; &lt;code&gt;gradlew desktop:dist&lt;/code&gt;&lt;br&gt; &lt;em&gt;Sprite Packing:&lt;/em&gt; &lt;code&gt;gradlew tools:pack&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Linux/Mac OS&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Running:&lt;/em&gt; &lt;code&gt;./gradlew desktop:run&lt;/code&gt;&lt;br&gt; &lt;em&gt;Building:&lt;/em&gt; &lt;code&gt;./gradlew desktop:dist&lt;/code&gt;&lt;br&gt; &lt;em&gt;Sprite Packing:&lt;/em&gt; &lt;code&gt;./gradlew tools:pack&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Server&lt;/h3&gt; 
&lt;p&gt;Server builds are bundled with each released build (in Releases). If you'd rather compile on your own, replace 'desktop' with 'server', e.g. &lt;code&gt;gradlew server:dist&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Android&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the Android SDK &lt;a href="https://developer.android.com/studio#command-tools"&gt;here.&lt;/a&gt; Make sure you're downloading the "Command line tools only", as Android Studio is not required.&lt;/li&gt; 
 &lt;li&gt;In the unzipped Android SDK folder, find the cmdline-tools directory. Then create a folder inside of it called &lt;code&gt;latest&lt;/code&gt; and put all of its contents into the newly created folder.&lt;/li&gt; 
 &lt;li&gt;In the same directory run the command &lt;code&gt;sdkmanager --licenses&lt;/code&gt; (or &lt;code&gt;./sdkmanager --licenses&lt;/code&gt; if on linux/mac)&lt;/li&gt; 
 &lt;li&gt;Set the &lt;code&gt;ANDROID_HOME&lt;/code&gt; environment variable to point to your unzipped Android SDK directory.&lt;/li&gt; 
 &lt;li&gt;Enable developer mode on your device/emulator. If you are on testing on a phone you can follow &lt;a href="https://developer.android.com/studio/command-line/adb#Enabling"&gt;these instructions&lt;/a&gt;, otherwise you need to google how to enable your emulator's developer mode specifically.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;gradlew android:assembleDebug&lt;/code&gt; (or &lt;code&gt;./gradlew&lt;/code&gt; if on linux/mac). This will create an unsigned APK in &lt;code&gt;android/build/outputs/apk&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;To debug the application on a connected device/emulator, run &lt;code&gt;gradlew android:installDebug android:run&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;h4&gt;Permission Denied&lt;/h4&gt; 
&lt;p&gt;If the terminal returns &lt;code&gt;Permission denied&lt;/code&gt; or &lt;code&gt;Command not found&lt;/code&gt; on Mac/Linux, run &lt;code&gt;chmod +x ./gradlew&lt;/code&gt; before running &lt;code&gt;./gradlew&lt;/code&gt;. &lt;em&gt;This is a one-time procedure.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Where is the &lt;code&gt;mindustry.gen&lt;/code&gt; package?&lt;/h4&gt; 
&lt;p&gt;As the name implies, &lt;code&gt;mindustry.gen&lt;/code&gt; is generated &lt;em&gt;at build time&lt;/em&gt; based on other code. You will not find source code for this package in the repository, and it should not be edited by hand.&lt;/p&gt; 
&lt;p&gt;The following is a non-exhaustive list of the "source" of generated code in &lt;code&gt;mindustry.gen&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Call&lt;/code&gt;, &lt;code&gt;*Packet&lt;/code&gt; classes: Generated from methods marked with &lt;code&gt;@Remote&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;All entity classes (&lt;code&gt;Unit&lt;/code&gt;, &lt;code&gt;EffectState&lt;/code&gt;, &lt;code&gt;Posc&lt;/code&gt;, etc): Generated from component classes in the &lt;code&gt;mindustry.entities.comp&lt;/code&gt; package, and combined using definitions in &lt;code&gt;mindustry.content.UnitTypes&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Sounds&lt;/code&gt;, &lt;code&gt;Musics&lt;/code&gt;, &lt;code&gt;Tex&lt;/code&gt;, &lt;code&gt;Icon&lt;/code&gt;, etc: Generated based on files in the respective asset folders.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;Gradle may take up to several minutes to download files. Be patient. &lt;br&gt; After building, the output .JAR file should be in &lt;code&gt;/desktop/build/libs/Mindustry.jar&lt;/code&gt; for desktop builds, and in &lt;code&gt;/server/build/libs/server-release.jar&lt;/code&gt; for server builds.&lt;/p&gt; 
&lt;h2&gt;Feature Requests&lt;/h2&gt; 
&lt;p&gt;Post feature requests and feedback &lt;a href="https://github.com/Anuken/Mindustry-Suggestions/issues/new/choose"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href="https://anuke.itch.io/mindustry"&gt;&lt;img src="https://static.itch.io/images/badge.svg?sanitize=true" alt=""&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://play.google.com/store/apps/details?id=io.anuke.mindustry"&gt;&lt;img src="https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png" alt=""&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://f-droid.org/packages/io.anuke.mindustry"&gt;&lt;img src="https://fdroid.gitlab.io/artwork/badge/get-it-on.png" alt=""&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://flathub.org/apps/details/com.github.Anuken.Mindustry"&gt;&lt;img src="https://flathub.org/assets/badges/flathub-badge-en.svg?sanitize=true" alt=""&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>MuntashirAkon/AppManager</title>
      <link>https://github.com/MuntashirAkon/AppManager</link>
      <description>&lt;p&gt;A full-featured package manager and viewer for Android&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/docs/raw/images/icon.png" alt="App Manager Logo" height="150dp"&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;App Manager&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://muntashirakon.github.io/AppManager"&gt;Docs&lt;/a&gt; · &lt;a href="https://github.com/MuntashirAkon/AppManager/releases"&gt;Releases&lt;/a&gt; · &lt;a href="https://t.me/AppManagerChannel"&gt;Telegram Channel&lt;/a&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;General features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fully reproducible, copylefted libre software (GPLv3+)&lt;/li&gt; 
 &lt;li&gt;Material 3 with dynamic colours&lt;/li&gt; 
 &lt;li&gt;Display as much information as possible in the main page&lt;/li&gt; 
 &lt;li&gt;List activities, broadcast receivers, services, providers, app ops, permissions, signatures, shared libraries, etc. of an application&lt;/li&gt; 
 &lt;li&gt;Launch activities and services&lt;/li&gt; 
 &lt;li&gt;Create shortcuts of activities&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://muntashirakon.github.io/AppManager/#sec:interceptor-page"&gt;Intercept activities&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Scan for trackers and libraries in apps and list (all or only) tracking classes (and their code dump)&lt;/li&gt; 
 &lt;li&gt;View/save the manifest of an app&lt;/li&gt; 
 &lt;li&gt;Display app usage, data usage (mobile and Wi-Fi), and app storage info (requires “Usage Access” permission)&lt;/li&gt; 
 &lt;li&gt;Install/uninstall APK files (including APKS, APKM and XAPK with OBB files)&lt;/li&gt; 
 &lt;li&gt;Share APK files&lt;/li&gt; 
 &lt;li&gt;Back up/restore APK files&lt;/li&gt; 
 &lt;li&gt;Batch operations&lt;/li&gt; 
 &lt;li&gt;Single-click operations&lt;/li&gt; 
 &lt;li&gt;Logcat viewer, manager and exporter&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://muntashirakon.github.io/AppManager/#sec:profiles-page"&gt;Profiles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Debloater&lt;/li&gt; 
 &lt;li&gt;Code editor&lt;/li&gt; 
 &lt;li&gt;File manager&lt;/li&gt; 
 &lt;li&gt;Simple terminal emulator&lt;/li&gt; 
 &lt;li&gt;Open an app in Aurora Store or in your favourite F-Droid client&lt;/li&gt; 
 &lt;li&gt;Sign APK files with custom signatures before installing&lt;/li&gt; 
 &lt;li&gt;Backup encryption: OpenPGP via OpenKeychain, RSA, ECC (hybrid encryption with AES) and AES.&lt;/li&gt; 
 &lt;li&gt;Track foreground UI components&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Root/ADB-only features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Revoke runtime (AKA dangerous) and development permissions&lt;/li&gt; 
 &lt;li&gt;Change the mode of an app op&lt;/li&gt; 
 &lt;li&gt;Display/kill/force-stop running apps or processes&lt;/li&gt; 
 &lt;li&gt;Clear app data or app cache&lt;/li&gt; 
 &lt;li&gt;View/change net policy&lt;/li&gt; 
 &lt;li&gt;Control battery optimization&lt;/li&gt; 
 &lt;li&gt;Freeze/unfreeze apps&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Root-only features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Block any activities, broadcast receivers, services, or providers of an app with native import/export as well as Watt and Blocker import support&lt;/li&gt; 
 &lt;li&gt;View/edit/delete shared preferences of any app&lt;/li&gt; 
 &lt;li&gt;Back up/restore apps with data, rules and extras (such as permissions, battery optimization, SSAID, etc.)&lt;/li&gt; 
 &lt;li&gt;View system configurations including blacklisted or whitelisted apps, permissions, etc.&lt;/li&gt; 
 &lt;li&gt;View/change SSAID.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;…and many more! This single app combines the features of 5 or 6 apps any tech-savvy person needs!&lt;/p&gt; 
&lt;h3&gt;Upcoming features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Finder: Find app components, permissions etc. in all apps&lt;/li&gt; 
 &lt;li&gt;Basic APK editing&lt;/li&gt; 
 &lt;li&gt;Routine operations&lt;/li&gt; 
 &lt;li&gt;Enable/disable app actions such as launch on boot&lt;/li&gt; 
 &lt;li&gt;Crash monitor&lt;/li&gt; 
 &lt;li&gt;Systemless disabling/uninstalling of the system apps&lt;/li&gt; 
 &lt;li&gt;Import app list exported by App Manager&lt;/li&gt; 
 &lt;li&gt;More advance terminal emulator&lt;/li&gt; 
 &lt;li&gt;Database viewer and editor, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://f-droid.org/packages/io.github.muntashirakon.AppManager"&gt;&lt;img src="https://fdroid.gitlab.io/artwork/badge/get-it-on.png" alt="Get it on F-Droid" height="80"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;Help translate &lt;a href="https://hosted.weblate.org/engage/app-manager/"&gt;the app strings&lt;/a&gt; and &lt;a href="https://hosted.weblate.org/projects/app-manager/docs/"&gt;the docs&lt;/a&gt; at Hosted Weblate.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hosted.weblate.org/engage/app-manager/"&gt;&lt;img src="https://hosted.weblate.org/widgets/app-manager/-/multi-auto.svg?sanitize=true" alt="Translation status"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Mirrors&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://codeberg.org/muntashir/AppManager"&gt;Codeberg&lt;/a&gt; · &lt;a href="https://gitlab.com/muntashir/AppManager"&gt;GitLab&lt;/a&gt; · &lt;a href="https://0xacab.org/muntashir/AppManager"&gt;Riseup&lt;/a&gt; · &lt;a href="https://git.sr.ht/~muntashir/AppManager"&gt;sourcehut&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/1.png" height="500dp"&gt;&lt;img src="https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/2.png" height="500dp"&gt;&lt;img src="https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/3.png" height="500dp"&gt;&lt;img src="https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/4.png" height="500dp"&gt;&lt;img src="https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/5.png" height="500dp"&gt;&lt;img src="https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/6.png" height="500dp"&gt;&lt;img src="https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/7.png" height="500dp"&gt;&lt;img src="https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/8.png" height="500dp"&gt;&lt;img src="https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/9.png" height="500dp"&gt;&lt;/p&gt; 
&lt;h2&gt;Build Instructions&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/BUILDING.rst"&gt;BUILDING.rst&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/CONTRIBUTING.rst"&gt;CONTRIBUTING.rst&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Donation and Funding&lt;/h2&gt; 
&lt;p&gt;As of September 2024, App Manager is not accepting any financial support until further notice. But you may still be able to send gifts (e.g., gift cards, subscriptions, food and drink, flowers, or even cash). Please contact the maintainer at muntashirakon [at] riseup [dot] net for further assistance.&lt;/p&gt; 
&lt;p&gt;In addition, the maintainers and contributors of this project DO NOT consent to the creation, sale, or promotion of tokens, cryptocurrencies, NFTs, or any other financial instruments that claim to represent this project, its code, or its community. Any such attempts are unauthorized and not affiliated with this project in any way.&lt;/p&gt; 
&lt;h2&gt;Credits and Libraries&lt;/h2&gt; 
&lt;p&gt;A list of credits and libraries are available in the &lt;strong&gt;About&lt;/strong&gt; section of the app.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dataease/dataease</title>
      <link>https://github.com/dataease/dataease</link>
      <description>&lt;p&gt;🔥 人人可用的开源 BI 工具，数据可视化神器。An open-source BI tool alternative to Tableau.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt;&lt;a href="https://dataease.cn"&gt;&lt;img src="https://dataease.oss-cn-hangzhou.aliyuncs.com/img/dataease-logo.png" alt="DataEase" width="300"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3 align="center"&gt;人人可用的开源 BI 工具&lt;/h3&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.gnu.org/licenses/gpl-3.0.html"&gt;&lt;img src="https://img.shields.io/github/license/dataease/dataease?color=%231890FF" alt="License: GPL v3"&gt;&lt;/a&gt; &lt;a href="https://app.codacy.com/gh/dataease/dataease?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=dataease/dataease&amp;amp;utm_campaign=Badge_Grade_Dashboard"&gt;&lt;img src="https://app.codacy.com/project/badge/Grade/da67574fd82b473992781d1386b937ef" alt="Codacy"&gt;&lt;/a&gt; &lt;a href="https://github.com/dataease/dataease"&gt;&lt;img src="https://img.shields.io/github/stars/dataease/dataease?color=%231890FF&amp;amp;style=flat-square" alt="GitHub Stars"&gt;&lt;/a&gt; &lt;a href="https://github.com/dataease/dataease/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/dataease/dataease" alt="GitHub release"&gt;&lt;/a&gt; &lt;a href="https://gitee.com/fit2cloud-feizhiyun/DataEase"&gt;&lt;img src="https://gitee.com/fit2cloud-feizhiyun/DataEase/badge/star.svg?theme=gvp" alt="Gitee Stars"&gt;&lt;/a&gt; &lt;a href="https://gitcode.com/feizhiyun/DataEase"&gt;&lt;img src="https://gitcode.com/feizhiyun/DataEase/star/badge.svg?sanitize=true" alt="GitCode Stars"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/dataease/dataease/dev-v2/README.md"&gt;&lt;img alt="中文(简体)" src="https://img.shields.io/badge/%E4%B8%AD%E6%96%87(%E7%AE%80%E4%BD%93)-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/dataease/dataease/dev-v2/docs/README.en.md"&gt;&lt;img alt="English" src="https://img.shields.io/badge/English-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/dataease/dataease/dev-v2/docs/README.zh-Hant.md"&gt;&lt;img alt="中文(繁體)" src="https://img.shields.io/badge/%E4%B8%AD%E6%96%87(%E7%B9%81%E9%AB%94)-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/dataease/dataease/dev-v2/docs/README.ja.md"&gt;&lt;img alt="日本語" src="https://img.shields.io/badge/%E6%97%A5%E6%9C%AC%E8%AA%9E-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/dataease/dataease/dev-v2/docs/README.pt-br.md"&gt;&lt;img alt="Português (Brasil)" src="https://img.shields.io/badge/Portugu%C3%AAs%20(Brasil)-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/dataease/dataease/dev-v2/docs/README.ar.md"&gt;&lt;img alt="العربية" src="https://img.shields.io/badge/%D8%A7%D9%84%D8%B9%D8%B1%D8%A8%D9%8A%D8%A9-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/dataease/dataease/dev-v2/docs/README.de.md"&gt;&lt;img alt="Deutsch" src="https://img.shields.io/badge/Deutsch-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/dataease/dataease/dev-v2/docs/README.es.md"&gt;&lt;img alt="Español" src="https://img.shields.io/badge/Espa%C3%B1ol-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/dataease/dataease/dev-v2/docs/README.fr.md"&gt;&lt;img alt="français" src="https://img.shields.io/badge/fran%C3%A7ais-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/dataease/dataease/dev-v2/docs/README.ko.md"&gt;&lt;img alt="한국어" src="https://img.shields.io/badge/%ED%95%9C%EA%B5%AD%EC%96%B4-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/dataease/dataease/dev-v2/docs/README.id.md"&gt;&lt;img alt="Bahasa Indonesia" src="https://img.shields.io/badge/Bahasa%20Indonesia-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/dataease/dataease/dev-v2/docs/README.tr.md"&gt;&lt;img alt="Türkçe" src="https://img.shields.io/badge/T%C3%BCrk%C3%A7e-d9d9d9"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;什么是 DataEase？&lt;/h2&gt; 
&lt;p&gt;DataEase 是开源的 BI 工具，帮助用户快速分析数据并洞察业务趋势，从而实现业务的改进与优化。DataEase 支持丰富的数据源连接，能够通过拖拉拽方式快速制作图表，并可以方便的与他人分享。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;DataEase 的优势：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;开源开放：零门槛，线上快速获取和安装，按月迭代；&lt;/li&gt; 
 &lt;li&gt;简单易用：极易上手，通过鼠标点击和拖拽即可完成分析；&lt;/li&gt; 
 &lt;li&gt;全场景支持：多平台安装和多样化嵌入支持；&lt;/li&gt; 
 &lt;li&gt;安全分享：支持多种数据分享方式，确保数据安全。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;DataEase 支持的数据源：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OLTP 数据库： MySQL、Oracle、SQL Server、PostgreSQL、MariaDB、Db2、TiDB、MongoDB-BI 等；&lt;/li&gt; 
 &lt;li&gt;OLAP 数据库： ClickHouse、Apache Doris、Apache Impala、StarRocks 等；&lt;/li&gt; 
 &lt;li&gt;数据仓库/数据湖： Amazon RedShift 等；&lt;/li&gt; 
 &lt;li&gt;数据文件： Excel、CSV 等；&lt;/li&gt; 
 &lt;li&gt;API 数据源。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;如果您需要向团队介绍 DataEase，可以使用这个 &lt;a href="https://fit2cloud.com/dataease/download/introduce-dataease_202506.pdf"&gt;官方 PPT 材料&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;桌面版：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;你可以在 PC 上安装 DataEasae 桌面版，下载地址为：&lt;a href="https://dataease.cn/desktop/index.html"&gt;https://dataease.cn/desktop/index.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;服务器版：&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# 准备一台 2 核 4G 以上的 Linux 服务器，并以 root 用户运行以下一键安装脚本：

curl -sSL https://dataease.oss-cn-hangzhou.aliyuncs.com/quick_start_v2.sh | bash

# 用户名: admin
# 密码: DataEase@123456
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;你也可以通过 &lt;a href="https://dataease.io/docs/v2/installation/1panel_installation/"&gt;1Panel 应用商店&lt;/a&gt; 快速部署 DataEase。如果是用于生产环境，推荐使用 &lt;a href="https://dataease.io/docs/v2/installation/offline_INSTL_and_UPG/"&gt;离线安装包方式&lt;/a&gt; 进行安装部署。&lt;/p&gt; 
&lt;p&gt;如你有更多问题，可以查看在线文档，或者通过论坛与我们交流。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.bilibili.com/video/BV1Y8dAYLErb/"&gt;视频介绍&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dataease.io/docs/"&gt;在线文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bbs.fit2cloud.com/c/de/6"&gt;社区论坛&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;UI 展示&lt;/h2&gt; 
&lt;table style="border-collapse: collapse; border: 1px solid black;"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td style="padding: 5px;background-color:#fff;"&gt;&lt;img src="https://github.com/dataease/dataease/assets/41712985/8dbed4e1-39f0-4392-aa8c-d1fd83ba42eb" alt="DataEase 工作台"&gt;&lt;/td&gt; 
   &lt;td style="padding: 5px;background-color:#fff;"&gt;&lt;img src="https://github.com/dataease/dataease/assets/41712985/7c54cb07-51ef-4bb6-a931-8a95c64c7e11" alt="DataEase 仪表板"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="padding: 5px;background-color:#fff;"&gt;&lt;img src="https://github.com/dataease/dataease/assets/41712985/ffa79361-a7b3-4486-b14a-f3fd3a28f01a" alt="DataEase 数据源"&gt;&lt;/td&gt; 
   &lt;td style="padding: 5px;background-color:#fff;"&gt;&lt;img src="https://github.com/dataease/dataease/assets/41712985/bb28f4e4-636e-4ab0-85c5-1dfbd7a5397e" alt="DataEase 模板中心"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;技术栈&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;前端：&lt;a href="https://vuejs.org/"&gt;Vue.js&lt;/a&gt;、&lt;a href="https://element.eleme.cn/"&gt;Element&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;图库：&lt;a href="https://antv.vision/zh"&gt;AntV&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;后端：&lt;a href="https://spring.io/projects/spring-boot"&gt;Spring Boot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;数据库：&lt;a href="https://www.mysql.com/"&gt;MySQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;数据处理：&lt;a href="https://github.com/apache/calcite/"&gt;Apache Calcite&lt;/a&gt;、&lt;a href="https://github.com/apache/seatunnel"&gt;Apache SeaTunnel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;基础设施：&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;飞致云的其他明星项目&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1panel-dev/1panel/"&gt;1Panel&lt;/a&gt; - 现代化、开源的 Linux 服务器运维管理面板&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1panel-dev/MaxKB/"&gt;MaxKB&lt;/a&gt; - 基于 LLM 大语言模型的开源知识库问答系统&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jumpserver/jumpserver/"&gt;JumpServer&lt;/a&gt; - 广受欢迎的开源堡垒机&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/halo-dev/halo/"&gt;Halo&lt;/a&gt; - 强大易用的开源建站工具&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/metersphere/metersphere/"&gt;MeterSphere&lt;/a&gt; - 新一代的开源持续测试工具&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2014-2025 &lt;a href="https://fit2cloud.com/"&gt;FIT2CLOUD 飞致云&lt;/a&gt;, All rights reserved.&lt;/p&gt; 
&lt;p&gt;Licensed under The GNU General Public License version 3 (GPLv3) (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.gnu.org/licenses/gpl-3.0.html"&gt;https://www.gnu.org/licenses/gpl-3.0.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>datahub-project/datahub</title>
      <link>https://github.com/datahub-project/datahub</link>
      <description>&lt;p&gt;The Metadata Platform for your Data and AI Stack&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://datahub.com"&gt; &lt;img alt="DataHub" src="https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/datahub-logo-color-mark.svg?sanitize=true" height="150"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;!-- --&gt; 
&lt;h1&gt;DataHub: The Data Discovery Platform for the Modern Data Stack&lt;/h1&gt; 
&lt;h3&gt;Built with ❤️ by &lt;img src="https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/datahub-logo-color-mark.svg?sanitize=true" width="20"&gt; &lt;a href="https://datahub.com"&gt;DataHub&lt;/a&gt; and &lt;img src="https://docs.datahub.com/img/LI-In-Bug.png" width="20"&gt; &lt;a href="https://engineering.linkedin.com"&gt;LinkedIn&lt;/a&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;a target="_blank" href="https://github.com/datahub-project/datahub/raw/master/LICENSE"&gt; &lt;img alt="Apache 2.0 License" src="https://img.shields.io/badge/License-Apache_2.0-blue.svg?label=license&amp;amp;labelColor=133554&amp;amp;color=1890ff"&gt;&lt;/a&gt; 
 &lt;a target="_blank" href="https://pypi.org/project/acryl-datahub/"&gt; &lt;img alt="PyPI" src="https://img.shields.io/pypi/dm/acryl-datahub?label=downloads&amp;amp;labelColor=133554&amp;amp;color=1890ff"&gt;&lt;/a&gt; 
 &lt;a target="_blank" href="https://github.com/datahub-project/datahub/pulse"&gt; &lt;img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/datahub-project/datahub?label=commits&amp;amp;labelColor=133554&amp;amp;color=1890ff"&gt;&lt;/a&gt; 
 &lt;br&gt; 
 &lt;a target="_blank" href="https://datahub.com/slack?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=github_readme"&gt; &lt;img alt="Slack" src="https://img.shields.io/badge/slack-join_community-red.svg?logo=slack&amp;amp;labelColor=133554&amp;amp;color=1890ff"&gt;&lt;/a&gt; 
 &lt;a href="https://www.youtube.com/channel/UC3qFQC5IiwR5fvWEqi_tJ5w"&gt; &lt;img alt="YouTube" src="https://img.shields.io/youtube/channel/subscribers/UC3qFQC5IiwR5fvWEqi_tJ5w?style=flat&amp;amp;logo=youtube&amp;amp;label=subscribers&amp;amp;labelColor=133554&amp;amp;color=1890ff"&gt;&lt;/a&gt; 
 &lt;a href="https://medium.com/datahub-project/"&gt; &lt;img alt="Medium" src="https://img.shields.io/badge/blog-DataHub-red.svg?style=flat&amp;amp;logo=medium&amp;amp;logoColor=white&amp;amp;labelColor=133554&amp;amp;color=1890ff"&gt;&lt;/a&gt; 
 &lt;a href="https://x.com/datahubproject"&gt; &lt;img alt="X (formerly Twitter) Follow" src="https://img.shields.io/badge/follow-datahubproject-red.svg?style=flat&amp;amp;logo=x&amp;amp;labelColor=133554&amp;amp;color=1890ff"&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h3&gt;🏠 Docs: &lt;a href="https://docs.datahub.com/"&gt;docs.datahub.com&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://docs.datahub.com/docs/quickstart"&gt;Quickstart&lt;/a&gt; | &lt;a href="https://docs.datahub.com/docs/features"&gt;Features&lt;/a&gt; | &lt;a href="https://feature-requests.datahubproject.io/roadmap"&gt;Roadmap&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/datahub-project/datahub/master/#adoption"&gt;Adoption&lt;/a&gt; | &lt;a href="https://demo.datahub.com/"&gt;Demo&lt;/a&gt; | &lt;a href="https://docs.datahub.com/docs/townhalls"&gt;Town Hall&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📣 DataHub Town Hall is the 4th Thursday at 9am US PT of every month - &lt;a href="https://lu.ma/datahubevents/"&gt;add it to your calendar!&lt;/a&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Town-hall Zoom link: &lt;a href="https://zoom.datahubproject.io"&gt;zoom.datahubproject.io&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/datahub-project/datahub/master/docs/townhalls.md"&gt;Meeting details&lt;/a&gt; &amp;amp; &lt;a href="https://raw.githubusercontent.com/datahub-project/datahub/master/docs/townhall-history.md"&gt;past recordings&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;✨ DataHub Community Highlights:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Read our Monthly Project Updates &lt;a href="https://medium.com/datahub-project/tagged/project-updates"&gt;here&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;Bringing The Power Of The DataHub Real-Time Metadata Graph To Everyone At DataHub: &lt;a href="https://www.dataengineeringpodcast.com/acryl-data-datahub-metadata-graph-episode-230/"&gt;Data Engineering Podcast&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Check out our most-read blog post, &lt;a href="https://engineering.linkedin.com/blog/2020/datahub-popular-metadata-architectures-explained"&gt;DataHub: Popular Metadata Architectures Explained&lt;/a&gt; @ LinkedIn Engineering Blog.&lt;/li&gt; 
  &lt;li&gt;Join us on &lt;a href="https://raw.githubusercontent.com/datahub-project/datahub/master/docs/slack.md"&gt;Slack&lt;/a&gt;! Ask questions and keep up with the latest announcements.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;DataHub is an open-source data catalog for the modern data stack. Read about the architectures of different metadata systems and why DataHub excels &lt;a href="https://engineering.linkedin.com/blog/2020/datahub-popular-metadata-architectures-explained"&gt;here&lt;/a&gt;. Also read our &lt;a href="https://engineering.linkedin.com/blog/2019/data-hub"&gt;LinkedIn Engineering blog post&lt;/a&gt;, check out our &lt;a href="https://speakerdeck.com/shirshanka/the-evolution-of-metadata-linkedins-journey-strata-nyc-2019"&gt;Strata presentation&lt;/a&gt; and watch our &lt;a href="https://www.youtube.com/watch?v=OB-O0Y6OYDE"&gt;Crunch Conference Talk&lt;/a&gt;. You should also visit &lt;a href="https://raw.githubusercontent.com/datahub-project/datahub/master/docs/architecture/architecture.md"&gt;DataHub Architecture&lt;/a&gt; to get a better understanding of how DataHub is implemented.&lt;/p&gt; 
&lt;h2&gt;Features &amp;amp; Roadmap&lt;/h2&gt; 
&lt;p&gt;Check out DataHub's &lt;a href="https://raw.githubusercontent.com/datahub-project/datahub/master/docs/features.md"&gt;Features&lt;/a&gt; &amp;amp; &lt;a href="https://feature-requests.datahubproject.io/roadmap"&gt;Roadmap&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Demo and Screenshots&lt;/h2&gt; 
&lt;p&gt;There's a &lt;a href="https://demo.datahub.com/"&gt;hosted demo environment&lt;/a&gt; courtesy of DataHub where you can explore DataHub without installing it locally.&lt;/p&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;Please follow the &lt;a href="https://docs.datahub.com/docs/quickstart"&gt;DataHub Quickstart Guide&lt;/a&gt; to run DataHub locally using &lt;a href="https://docker.com"&gt;Docker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;If you're looking to build &amp;amp; modify datahub please take a look at our &lt;a href="https://docs.datahub.com/docs/developers"&gt;Development Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://demo.datahub.com/"&gt; &lt;img width="70%" src="https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/entity.png"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Source Code and Repositories&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/datahub-project/datahub"&gt;datahub-project/datahub&lt;/a&gt;: This repository contains the complete source code for DataHub's metadata model, metadata services, integration connectors and the web application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/acryldata/datahub-actions"&gt;acryldata/datahub-actions&lt;/a&gt;: DataHub Actions is a framework for responding to changes to your DataHub Metadata Graph in real time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/acryldata/datahub-helm"&gt;acryldata/datahub-helm&lt;/a&gt;: Helm charts for deploying DataHub on a Kubernetes cluster&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/acryldata/meta-world"&gt;acryldata/meta-world&lt;/a&gt;: A repository to store recipes, custom sources, transformations and other things to make your DataHub experience magical.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/acryldata/dbt-impact-action"&gt;dbt-impact-action&lt;/a&gt;: A github action for commenting on your PRs with a summary of the impact of changes within a dbt project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/makenotion/datahub-tools"&gt;datahub-tools&lt;/a&gt;: Additional python tools to interact with the DataHub GraphQL endpoints, built by Notion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/acryldata/business-glossary-sync-action"&gt;business-glossary-sync-action&lt;/a&gt;: A github action that opens PRs to update your business glossary yaml file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/acryldata/mcp-server-datahub"&gt;mcp-server-datahub&lt;/a&gt;: A &lt;a href="https://modelcontextprotocol.io/"&gt;Model Context Protocol&lt;/a&gt; server implementation for DataHub.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://github.com/datahub-project/datahub/releases"&gt;Releases&lt;/a&gt; page for more details. We follow the &lt;a href="https://semver.org"&gt;SemVer Specification&lt;/a&gt; when versioning the releases and adopt the &lt;a href="https://keepachangelog.com/"&gt;Keep a Changelog convention&lt;/a&gt; for the changelog format.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from the community. Please refer to our &lt;a href="https://raw.githubusercontent.com/datahub-project/datahub/master/docs/CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt; for more details. We also have a &lt;a href="https://raw.githubusercontent.com/datahub-project/datahub/master/contrib"&gt;contrib&lt;/a&gt; directory for incubating experimental features.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join our &lt;a href="https://datahub.com/slack?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=github_readme"&gt;Slack workspace&lt;/a&gt; for discussions and important announcements. You can also find out more about our upcoming &lt;a href="https://raw.githubusercontent.com/datahub-project/datahub/master/docs/townhalls.md"&gt;town hall meetings&lt;/a&gt; and view past recordings.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/datahub-project/datahub/master/docs/SECURITY_STANCE.md"&gt;Security Stance&lt;/a&gt; for information on DataHub's Security.&lt;/p&gt; 
&lt;h2&gt;Adoption&lt;/h2&gt; 
&lt;p&gt;Here are the companies that have officially adopted DataHub. Please feel free to add yours to the list if we missed it.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://ably.team/"&gt;ABLY&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.adevinta.com/"&gt;Adevinta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.banksalad.com"&gt;Banksalad&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cabify.tech/"&gt;Cabify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.classdojo.com/"&gt;ClassDojo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coursera.org/"&gt;Coursera&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cvshealth.com/"&gt;CVS Health&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.definedcrowd.com"&gt;DefinedCrowd&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.dfds.com/"&gt;DFDS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalturbine.com/"&gt;Digital Turbine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://expedia.com"&gt;Expedia Group&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.experius.nl"&gt;Experius&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.geotab.com"&gt;Geotab&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grofers.com"&gt;Grofers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.botech.com.cn"&gt;Haibo Technology&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hipages.com.au/"&gt;hipages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.inovex.de/"&gt;inovex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://inter.co/"&gt;Inter&amp;amp;Co&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://iomed.health"&gt;IOMED&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.klarna.com"&gt;Klarna&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://linkedin.com"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.moloco.com/en"&gt;Moloco&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://n26brasil.com/"&gt;N26&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.optum.com/"&gt;Optum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.onepeloton.com"&gt;Peloton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.pitsdatarecovery.net/"&gt;PITS Global Data Recovery Services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.razer.com"&gt;Razer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.rippling.com/"&gt;Rippling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.showroomprive.com/"&gt;Showroomprive&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://spothero.com"&gt;SpotHero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.stash.com"&gt;Stash&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.shrbank.com"&gt;Shanghai HuaRui Bank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.s7.ru/"&gt;s7 Airlines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.thoughtworks.com"&gt;ThoughtWorks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://typeform.com"&gt;TypeForm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.udemy.com/"&gt;Udemy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://uphold.com"&gt;Uphold&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://viasat.com"&gt;Viasat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.wealthsimple.com"&gt;Wealthsimple&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.wikimedia.org"&gt;Wikimedia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wolt.com"&gt;Wolt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.zynga.com"&gt;Zynga&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Select Articles &amp;amp; Talks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/datahub-project/"&gt;DataHub Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC3qFQC5IiwR5fvWEqi_tJ5w"&gt;DataHub YouTube Channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://opensource.optum.com/blog/2022/03/23/data-mesh-via-datahub"&gt;Optum: Data Mesh via DataHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/datahub-project/enabling-data-discovery-in-a-data-mesh-the-saxo-journey-451b06969c8f"&gt;Saxo Bank: Enabling Data Discovery in Data Mesh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.dataengineeringpodcast.com/acryl-data-datahub-metadata-graph-episode-230/"&gt;Bringing The Power Of The DataHub Real-Time Metadata Graph To Everyone At DataHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2020/datahub-popular-metadata-architectures-explained"&gt;DataHub: Popular Metadata Architectures Explained&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ccsIKK9nVxk"&gt;Driving DataOps Culture with LinkedIn DataHub&lt;/a&gt; @ &lt;a href="https://dataopsunleashed.com/#shirshanka-session"&gt;DataOps Unleashed 2021&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://speakerdeck.com/shirshanka/the-evolution-of-metadata-linkedins-journey-strata-nyc-2019"&gt;The evolution of metadata: LinkedIn’s story&lt;/a&gt; @ &lt;a href="https://conferences.oreilly.com/strata/strata-ny-2019.html"&gt;Strata Data Conference 2019&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=OB-O0Y6OYDE"&gt;Journey of metadata at LinkedIn&lt;/a&gt; @ &lt;a href="https://crunchconf.com/2019"&gt;Crunch Data Conference 2019&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ajcRdB22s5o"&gt;DataHub Journey with Expedia Group&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.slideshare.net/MaggieHays/data-discoverability-at-spothero"&gt;Data Discoverability at SpotHero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/albert-franzi/data-catalogue-knowing-your-data-15f7d0724900"&gt;Data Catalogue — Knowing your data&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2019/data-hub"&gt;DataHub: A Generalized Metadata Search &amp;amp; Discovery Tool&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2020/open-sourcing-datahub--linkedins-metadata-search-and-discovery-p"&gt;Open sourcing DataHub: LinkedIn’s metadata search and discovery platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://future.com/emerging-architectures-for-modern-data-infrastructure-2020/"&gt;Emerging Architectures for Modern Data Infrastructure&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the full list &lt;a href="https://raw.githubusercontent.com/datahub-project/datahub/master/docs/links.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/datahub-project/datahub/master/LICENSE"&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>coze-dev/coze-java</title>
      <link>https://github.com/coze-dev/coze-java</link>
      <description>&lt;p&gt;The Java SDK for the Coze API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Coze Java API SDK&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://central.sonatype.com/artifact/com.coze/coze-api"&gt;&lt;img src="https://img.shields.io/maven-central/v/com.coze/coze-api" alt="Maven Central Version"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/github/coze-dev/coze-java"&gt;&lt;img src="https://codecov.io/github/coze-dev/coze-java/graph/badge.svg?token=UXitaQ0wp7" alt="codecov"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;The Coze API SDK for Java is a powerful tool designed to seamlessly integrate Coze's open APIs into your projects.&lt;/p&gt; 
&lt;p&gt;Key Features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Full support for Coze open APIs and authentication APIs&lt;/li&gt; 
 &lt;li&gt;Both synchronous and asynchronous SDK calls&lt;/li&gt; 
 &lt;li&gt;Optimized streaming APIs with Stream object returns&lt;/li&gt; 
 &lt;li&gt;Optimized list APIs with Iterator Page object returns&lt;/li&gt; 
 &lt;li&gt;Simple and intuitive API design for ease of use&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Importing&lt;/h2&gt; 
&lt;h3&gt;Gradle&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;dependencies {
    implementation 'com.coze:coze-api:+'
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Maven&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;com.coze&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;coze-api&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;version&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Examples&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
   &lt;th&gt;File&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pat auth&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/auth/TokenAuthExample.java"&gt;TokenAuthExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;oauth by web code&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/auth/WebOAuthExample.java"&gt;WebOAuthExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;oauth by jwt flow&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/auth/JWTOAuthExample.java"&gt;JWTsOauthExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;oauth by pkce flow&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/auth/PKCEOAuthExample.java"&gt;PKCEOauthExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;oauth by device flow&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/auth/DeviceOAuthExample.java"&gt;DevicesOAuthExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;handle auth exception&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/auth/HandlerExceptionExample.java"&gt;HandlerExceptionExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;bot create, publish and chat&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/bot/BotPublishExample.java"&gt;PublishBotExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;get bot and bot list&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/bot/BotRetrieveExample.java"&gt;GetBotExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;non-stream chat&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/chat/ChatExample.java"&gt;ChatExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;steam chat&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/chat/StreamChatExample.java"&gt;StreamChatExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;chat with local plugin&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/chat/SubmitToolOutputExample.java"&gt;SubmitToolOutputExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;chat with image&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/chat/ChatWithImageExample.java"&gt;ChatWithImageExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;non-stream workflow chat&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/workflow/RunWorkflowExample.java"&gt;RunWorkflowExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;stream workflow chat&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/workflow/StreamWorkflowExample.java"&gt;StreamWorkflowExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;stream workflow chat with rx&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/workflow/StreamWorkflowChatExample.java"&gt;StreamWorkflowChatExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;async workflow run&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/workflow/AsyncRunWorkflowExample.java"&gt;AsyncRunWorkflowExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;conversation&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/conversation/ConversationCreateExample.java"&gt;CreateConversationExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;list conversation&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/conversation/ConversationsListExample.java"&gt;ListConversationsExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;workspace&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/workspace/WorkspaceListExample.java"&gt;ListWorkspaceExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;create update delete message&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/conversation/message/MessageCrudExample.java"&gt;ListWorkspaceExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;list message&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/conversation/message/MessageListExample.java"&gt;ListWorkspaceExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;create update delete document&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/datasets/document/DocumentCrudExample.java"&gt;DocumentCrudExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;list document&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/datasets/document/DocumentListExample.java"&gt;DocumentListExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;create update delete dataset&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/datasets/DatasetCrudExample.java"&gt;DatasetCrudExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;list dataset&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/datasets/DatasetListExample.java"&gt;DatasetListExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;update image caption&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/datasets/image/ImageCrudExample.java"&gt;ImageCrudExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;list image&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/datasets/image/ImageListExample.java"&gt;ImageListExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;duplicate template&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/template/TemplateDuplicateExample.java"&gt;TemplateDuplicateExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;initial client&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/service/InitClientExample.java"&gt;InitServiceExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;how to handle exception&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/service/HandlerExceptionExample.java"&gt;HandlerExceptionExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;get request log id&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/service/GetLogExample.java"&gt;GetLogExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;set timeout&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/service/SetRequestTimeoutExample.java"&gt;SetRequestTimeoutExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;websocket chat&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/websocket/chat/ChatExample.java"&gt;ChatExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;websocket speech synthesis&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/websocket/audio/speech/WebsocketAudioSpeechExample.java"&gt;WebsocketAudioSpeechExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;websocket transcription&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/websocket/audio/transcriptions/WebsocketTranscriptionsExample.java"&gt;WebsocketTranscriptionsExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Initialize the Coze Client&lt;/h3&gt; 
&lt;p&gt;To get started, visit &lt;a href="https://www.coze.com/open/oauth/pats"&gt;https://www.coze.com/open/oauth/pats&lt;/a&gt; (or &lt;a href="https://www.coze.cn/open/oauth/pats"&gt;https://www.coze.cn/open/oauth/pats&lt;/a&gt; for the CN environment).&lt;/p&gt; 
&lt;p&gt;Create a new token by clicking "Add Token". Configure the token name, expiration time, and required permissions. Click OK to generate your personal access token.&lt;/p&gt; 
&lt;p&gt;Important: Store your personal access token securely to prevent unauthorized access.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void example() {
    // Get an access_token through personal access token or oauth.
    String token = System.getenv("COZE_API_TOKEN");
    TokenAuth authCli = new TokenAuth(token);
    /*
     * The default access is api.coze.com, but if you need to access api.coze.cn
     * please use baseUrl to configure the API endpoint to access
     */
    String baseUrl = System.getenv("COZE_API_BASE");
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(baseUrl)
            .auth(authCli)
            .client(new OkHttpClient.Builder().build()) 
            .build();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Chat&lt;/h3&gt; 
&lt;p&gt;First, create a bot instance in Coze. The bot ID is the last number in the web link URL.&lt;/p&gt; 
&lt;h4&gt;Non-Stream Chat&lt;/h4&gt; 
&lt;p&gt;The SDK provides a convenient wrapper function for non-streaming chat operations. It handles polling and message retrieval automatically. Use createAndPoll to simplify the process:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void example() throws Exception {
    String token = System.getenv("COZE_API_TOKEN");
    String botID = System.getenv("PUBLISHED_BOT_ID");
    String uid = System.getenv("USER_ID");
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(System.getenv("COZE_API_BASE"))
            .auth(new TokenAuth(token))
            .readTimeout(10000)
            .build();
    ChatReq req = ChatReq.builder()
                         .botID(botID)
                         .userID(uid)
                         .messages(Collections.singletonList(Message.buildUserQuestionText("What can you do?")))
                         .build();
    ChatPoll chat = coze.chat().createAndPoll(req);
    for (Message message : chat.messages) {
        System.out.println(message.content);
    }
    if (chat.chat.status == ChatStatus.COMPLETED) {
        System.out.println("token usage:" + chat.chat.usage.tokenCount);
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Stream Chat&lt;/h4&gt; 
&lt;p&gt;Use coze.chat.stream() to create a streaming chat session. This returns a Chat Iterator that you can use to process chat events as they arrive:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;
public void example() {
    String token = System.getenv("COZE_API_TOKEN");
    String botID = System.getenv("PUBLISHED_BOT_ID");
    String userID = System.getenv("USER_ID");
    TokenAuth authCli = new TokenAuth(token);
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(System.getenv("COZE_API_BASE"))
            .auth(authCli)
            .build();
    ChatReq req = ChatReq.builder()
            .botID(botID)
            .userID(userID)
            .messages(Collections.singletonList(Message.buildUserQuestionText("What can you do?")))
            .build();
    Flowable&amp;lt;ChatEvent&amp;gt; resp = coze.chat().stream(req);
    resp.blockingForEach(event -&amp;gt; {
        if (ChatEventType.CONVERSATION_MESSAGE_DELTA.equals(event.getEvent())) {
            System.out.print(event.getMessage().getContent());
        }
        if (ChatEventType.CONVERSATION_CHAT_COMPLETED.equals(event.getEvent())) {
            System.out.println("Token usage:" + event.getChat().getUsage().getTokenCount());
        }
    });
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Bots&lt;/h3&gt; 
&lt;p&gt;The SDK enables you to programmatically create, update, publish and list bots:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void example() {
    // Get an access_token through personal access token or oauth.
    String token = System.getenv("COZE_API_TOKEN");
    TokenAuth authCli = new TokenAuth(token);
    // Init the Coze client through the access_token.
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(System.getenv("COZE_API_BASE"))
            .auth(authCli)
            .build();
    /*
    * step one, create a bot
    * */
    String workspaceID = System.getenv("WORKSPACE_ID");
    // set the prompt of your bot
    BotPromptInfo promptInfo = new BotPromptInfo("your prompt");
    // set the onboarding info of your bot
    BotOnboardingInfo onboardingInfo = BotOnboardingInfo.builder()
            .prologue("the prologue of your bot")
            .suggestedQuestions(Arrays.asList("question 1", "question 2"))
            .build();
    // Call the upload file interface to get the avatar id.
    String avatarPath = "/path/avatar.jpg";
    FileInfo avatarInfo = coze.files().upload(avatarPath);
    // build the request
    CreateBotReq createReq = CreateBotReq.builder()
            .spaceID(workspaceID)
            .description("the description of your bot")
            .name("the name of your bot")
            .promptInfo(promptInfo)
            .onboardingInfo(onboardingInfo)
            .iconFileID(avatarInfo.getID())
            .build();
    // Invoke the creation interface to create a bot in the draft status, and you can get the bot id.
    String botID = coze.bots().create(createReq).getBotID();
    /*
     * step two, update the bot, you can update the bot after being created
     * in this example, we will update the avatar of the bot
     */
    // Call the publishing interface to publish the bot on the api channel.
    PublishBotResult updateResp = coze.bots().publish(PublishBotReq.of(botID));
    /*
     * step three, you can also modify the bot configuration and republish it.
     * in this example, we will update the avatar of the bot
     */
    // set the onboarding info of your bot
    // Call the upload file interface to get the avatar id.
    String newAvatarPath = "/path/new_avatar.jpg";
    FileInfo newAvatarInfo = coze.files().upload(newAvatarPath);
    // build the request
    UpdateBotReq updateReq = UpdateBotReq.builder()
            .botID(botID)
            .iconFileID(newAvatarInfo.getID())
            .build();
    // Invoke the update interface to update a bot, It means success that no exception has been thrown.
    coze.bots().update(updateReq);
    updateResp = coze.bots().publish(PublishBotReq.of(botID));
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Conversations&lt;/h3&gt; 
&lt;p&gt;The SDK provides comprehensive conversation management capabilities, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Creating new conversations&lt;/li&gt; 
 &lt;li&gt;Conducting chat sessions&lt;/li&gt; 
 &lt;li&gt;Retrieving message history&lt;/li&gt; 
 &lt;li&gt;Managing conversation state&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;
public void example() {
    // Get an access_token through personal access token or oauth.
    String token = System.getenv("COZE_API_TOKEN");
    TokenAuth authCli = new TokenAuth(token);
    // Init the Coze client through the access_token.
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(System.getenv("COZE_API_BASE"))
            .auth(authCli)
            .readTimeout(10000)
            .build();
    // create conversation
    Conversation resp = coze.conversations().create(new CreateConversationReq());
    System.out.println("create conversations" + resp);
    // retrieve conversation
    String conversationID = resp.getId();
    Conversation getResp = coze.conversations().retrieve(RetrieveConversationReq.of(conversationID));
    System.out.println("retrieve conversations:" + getResp);
    // append message to conversation
    Message msgs = coze.conversations().messages().create(CreateMessageReq
            .builder()
            .conversationID(conversationID)
            // if you want to create object content, you can use followed method to simplify your code
            .objectContent(
                    Arrays.asList(MessageObjectString.buildText("hello"),
                            MessageObjectString.buildImageByURL(System.getenv("PICTURE_URL")),
                            MessageObjectString.buildFileByURL(System.getenv("FILE_URL"))))
            .build());
    System.out.println(msgs);
    /*
    * retrieve message
    * */
    Message retrievedMsg = coze.conversations().messages().retrieve(RetrieveMessageReq.builder()
            .conversationID(conversationID)
            .messageID(message.getId())
            .build());
    System.out.println(retrievedMsg);
    /*
    * update message
    * */
    UpdateMessageReq updateReq = UpdateMessageReq.builder()
            .conversationID(conversationID).messageID(message.getId())
            .content(String.format("modified message content:%s", message.getContent()))
            .contentType(MessageContentType.TEXT).build();
    Message resp = coze.conversations().messages().update(updateReq);
    System.out.println(resp);
    /*
    * delete message
    * */
    Message deletedMsg = coze.conversations().messages().delete(DeleteMessageReq.builder()
            .conversationID(conversationID)
            .messageID(message.getId())
            .build());
    System.out.println(deletedMsg);
    // list messages
    ListMessageReq req = ListMessageReq.builder()
            .conversationID(conversationID)
            .limit(limit)
            .build();
    PageResult&amp;lt;Message&amp;gt; messages = coze.conversations().messages().list(req);
    Iterator&amp;lt;Message&amp;gt; iter = messages.getIterator();
    iter.forEachRemaining(System.out::println);
    // clear conversation
    ClearConversationResult clearResp = coze.conversations().clear(ClearConversationReq.of(conversationID));
    System.out.println(clearResp);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Files&lt;/h3&gt; 
&lt;p&gt;The SDK supports file and image uploads. You can use uploaded files for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bot avatars&lt;/li&gt; 
 &lt;li&gt;Multimodal conversations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void example() {
    String token = System.getenv("COZE_API_TOKEN");
    TokenAuth authCli = new TokenAuth(token);
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(System.getenv("COZE_API_BASE"))
            .auth(authCli)
            .readTimeout(10000)
            .build();
    String filePath = System.getenv("FILE_PATH");
    //*** upload file ***//
    FileInfo fileInfo = coze.files().upload(filePath);
    // you can also upload file in byte array
    FileInfo fileInfo = coze.files().upload(new byte[1024]);
    //*** retrive file ***//
    FileInfo retrievedInfo = coze.files().retrieve(fileInfo.getID());
    System.out.println(retrievedInfo);
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Workflows&lt;/h3&gt; 
&lt;p&gt;Coze also enables users to directly invoke the workflow.&lt;/p&gt; 
&lt;h4&gt;Non-stream workflow run&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public static void main(String[] args) {
// Get an access_token through personal access token or oauth.
    String token = System.getenv("COZE_API_TOKEN");
    TokenAuth authCli = new TokenAuth(token);
    // Init the Coze client through the access_token.
    CozeAPI coze = new CozeAPI.Builder()
        .baseURL(System.getenv("COZE_API_BASE"))
        .auth(authCli)
        .readTimeout(10000)
        .build();
    String workflowID = System.getenv("WORKSPACE_ID");
    // if your workflow need input params, you can send them by map
    Map&amp;lt;String, Object&amp;gt; data = new HashMap&amp;lt;&amp;gt;();
    data.put("param name", "param values");
    RunWorkflowReq.RunWorkflowReqBuilder builder = RunWorkflowReq.builder();
    builder.workflowID(workflowID).parameters(data);
    RunWorkflowResp resp = coze.workflows().runs().run(builder.build());
    System.out.println(resp);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Stream workflow run&lt;/h4&gt; 
&lt;p&gt;The returned result of the streaming interface is an iterator and can be directly iterated.&lt;/p&gt; 
&lt;p&gt;When the workflow incorporates question-and-answer nodes, the streaming interface will return the INTERRUPT event.&lt;/p&gt; 
&lt;p&gt;Users should call the resume interface to submit the results of the question-and-answer.&lt;/p&gt; 
&lt;p&gt;The return value of resume remains an iterator, so recursive processing might be necessary here.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public static void main(String[] args) {
    // Get an access_token through personal access token or oauth.
    String token = System.getenv("COZE_API_TOKEN");
    TokenAuth authCli = new TokenAuth(token);
    // Init the Coze client through the access_token.
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(System.getenv("COZE_API_BASE"))
            .auth(authCli)
            .readTimeout(10000)
            .build();
    String workflowID = System.getenv("WORKSPACE_ID");
    // if your workflow need input params, you can send them by map
    Map&amp;lt;String, Object&amp;gt; data = new HashMap&amp;lt;&amp;gt;();
    data.put("param name", "param values");
    RunWorkflowReq.RunWorkflowReqBuilder builder = RunWorkflowReq.builder();
    builder.workflowID(workflowID).parameters(data);
    Flowable&amp;lt;WorkflowEvent&amp;gt; flowable = coze.workflows().runs().stream(builder.build());
    handleEvent(flowable, coze, workflowID);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Dataset&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public static void main(String[] args) {
    // Get an access_token through personal access token or oauth.
    String token = System.getenv("COZE_API_TOKEN");
    TokenAuth authCli = new TokenAuth(token);
    // Init the Coze client through the access_token.
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(System.getenv("COZE_API_BASE"))
            .auth(authCli)
            .readTimeout(10000)
            .build();
    Long datasetID = Long.parseLong(System.getenv("DATASET_ID"));
    /*
     * create document in to specific dataset
     * */
    CreateDocumentReq createReq = CreateDocumentReq.builder()
            .datasetID(datasetID)
            .documentBases(Arrays.asList(
                    DocumentBase.buildWebPage("web doc example", "https://your-website.com"), //create datasets documents by web page
                    DocumentBase.buildLocalFile("file doc example", "your file content", "txt"))) //create datasets documents by local file
            .build();
    CreateDocumentResp creatResp = coze.datasets().documents().create(createReq);
    List&amp;lt;Long&amp;gt; documentIDs = new ArrayList&amp;lt;&amp;gt;();
    for (Document documentBase : creatResp.getDocumentInfos()) {
        documentIDs.add(Long.parseLong(documentBase.getDocumentID()));
    }
    /*
     * update document. It means success that no exception has been thrown
     * */
    UpdateDocumentReq updateReq = UpdateDocumentReq.builder()
            .documentID(documentIDs.get(0))
            .documentName("new name")
            .build();
    coze.datasets().documents().update(updateReq);
    /*
     * delete document. It means success that no exception has been thrown
     * */
    coze.datasets().documents().delete(DeleteDocumentReq.builder().documentIDs(Collections.singletonList(documentIDs.get(0))).build());

    /*
     * list documents
     * */
    ListDocumentReq req = ListDocumentReq.builder()
                .size(2)
                .datasetID(datasetID)
                .page(1)
                .build();

    // you can use iterator to automatically retrieve next page
    PageResult&amp;lt;Document&amp;gt; documents = coze.datasets().documents().list(req);
    Iterator&amp;lt;Document&amp;gt; iter = documents.getIterator();
    iter.forEachRemaining(System.out::println);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;OAuth App&lt;/h3&gt; 
&lt;h4&gt;Web OAuth App&lt;/h4&gt; 
&lt;p&gt;To create a Web OAuth application:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Visit &lt;a href="https://www.coze.com/open/oauth/apps"&gt;https://www.coze.com/open/oauth/apps&lt;/a&gt; (or &lt;a href="https://www.coze.cn/open/oauth/apps"&gt;https://www.coze.cn/open/oauth/apps&lt;/a&gt; for CN environment)&lt;/li&gt; 
 &lt;li&gt;Create a new OAuth App of type "Web application"&lt;/li&gt; 
 &lt;li&gt;Follow the setup guide at &lt;a href="https://www.coze.com/docs/developer_guides/oauth_code"&gt;https://www.coze.com/docs/developer_guides/oauth_code&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Upon completion, you'll receive three critical parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Client ID&lt;/li&gt; 
 &lt;li&gt;Client secret (store securely)&lt;/li&gt; 
 &lt;li&gt;Redirect URI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void initOAuthClient() {
    String clientSecret = System.getenv("COZE_WEB_OAUTH_CLIENT_SECRET");
    String clientID = System.getenv("COZE_WEB_OAUTH_CLIENT_ID");
    
    String cozeAPIBase = System.getenv("COZE_API_BASE");
    if (cozeAPIBase == null || cozeAPIBase.isEmpty()) {
        cozeAPIBase = Consts.COZE_COM_BASE_URL;
    }
    
    WebOAuthClient oauth = new WebOAuthClient.WebOAuthBuilder()
            .clientID(clientID)
            .clientSecret(clientSecret)
            .baseURL(cozeAPIBase)
            .build();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The WebOAuth authorization process is to first generate a coze authorization link and send it to the coze user requiring authorization.&lt;/p&gt; 
&lt;p&gt;Once the coze user opens the link, they can see the authorization consent button.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;
public void genAuthLink() {
    String redirectURI = System.getenv("COZE_WEB_OAUTH_REDIRECT_URI");
    // Generate the authorization link and direct the user to open it.
    String oauthURL = oauth.getOAuthURL(redirectURI, null);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After the user clicks the authorization consent button, the coze web page will redirect to the redirect address configured in the authorization link and carry the authorization code and state parameters in the address via the query string.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void getAccessToken() {
    /*
    After the user clicks the authorization consent button, the Coze web page will redirect
    to the redirect address configured in the authorization link and carry the authorization
    code and state parameters in the address via the query string.
    Get from the query of the redirect interface: query.get('code')
    */
    String code = "mock code";

    /*
    After obtaining the code after redirection, the interface to exchange the code for a
    token can be invoked to generate the Coze access_token of the authorized user.
    */
    OAuthToken resp = oauth.getAccessToken(code, redirectURI);
    System.out.println(resp);

    // Use the access token to init Coze client
    CozeAPI coze = new CozeAPI.Builder().auth(new TokenAuth(resp.getAccessToken())).baseURL(cozeAPIBase).build();

    // When the token expires, you can also refresh and re-obtain the token
    resp = oauth.refreshToken(resp.getRefreshToken());
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;JWT OAuth App&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The SDK uses jjwt version 0.11.5. If you are using jjwt version 0.12.x or above:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;You need to exclude jjwt dependencies when importing the SDK:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;for Maven:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;com.coze&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;coze-api&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;0.1.0&amp;lt;/version&amp;gt;
    &amp;lt;exclusions&amp;gt;
        &amp;lt;exclusion&amp;gt;
            &amp;lt;groupId&amp;gt;io.jsonwebtoken&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jjwt-api&amp;lt;/artifactId&amp;gt;
        &amp;lt;/exclusion&amp;gt;
        &amp;lt;exclusion&amp;gt;
            &amp;lt;groupId&amp;gt;io.jsonwebtoken&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jjwt-impl&amp;lt;/artifactId&amp;gt;
        &amp;lt;/exclusion&amp;gt;
        &amp;lt;exclusion&amp;gt;
            &amp;lt;groupId&amp;gt;io.jsonwebtoken&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jjwt-jackson&amp;lt;/artifactId&amp;gt;
        &amp;lt;/exclusion&amp;gt;
    &amp;lt;/exclusions&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;for Gradle:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;implementation('com.coze:coze-api:0.1.0') {
    exclude group: 'io.jsonwebtoken'
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt; &lt;p&gt;Please refer to &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/auth/ExampleJWTBuilder.java"&gt;ExampleJWTBuilder.java&lt;/a&gt; to implement your own JWT builder.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set your jwt builder to JWTOAuthClient when initialize it&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;JWTOAuthClient oauth = (new JWTOAuthClient.JWTOAuthBuilder())
              .privateKey(config.getPrivateKey())
              .publicKey(config.getPublicKeyId())
              .clientID(config.getClientId())
              .baseURL(config.getCozeApiBase())
              .jwtBuilder(new ExampleJWTBuilder()) // set your jwt builder
              .build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Firstly, users need to access &lt;a href="https://www.coze.com/open/oauth/apps"&gt;https://www.coze.com/open/oauth/apps&lt;/a&gt;. For the cn environment, users need to access &lt;a href="https://www.coze.cn/open/oauth/apps"&gt;https://www.coze.cn/open/oauth/apps&lt;/a&gt; to create an OAuth App of the type of Service application.&lt;/p&gt; 
&lt;p&gt;The specific creation process can be referred to in the document: &lt;a href="https://www.coze.com/docs/developer_guides/oauth_jwt"&gt;https://www.coze.com/docs/developer_guides/oauth_jwt&lt;/a&gt;. For the cn environment, it can be accessed at &lt;a href="https://www.coze.cn/docs/developer_guides/oauth_jwt"&gt;https://www.coze.cn/docs/developer_guides/oauth_jwt&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;After the creation is completed, three parameters, namely the client ID, private key, and public key id, can be obtained. For the client secret and public key id, users need to keep it securely to avoid leakage.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void initOAuthClient() {
    String cozeAPIBase = System.getenv("COZE_API_BASE");
    if (cozeAPIBase == null || cozeAPIBase.isEmpty()) {
        cozeAPIBase = "api.coze.cn";
    }
    String jwtOauthClientID = System.getenv("COZE_JWT_OAUTH_CLIENT_ID");
    String jwtOauthPrivateKey = System.getenv("COZE_JWT_OAUTH_PRIVATE_KEY");
    String jwtOauthPrivateKeyFilePath = System.getenv("COZE_JWT_OAUTH_PRIVATE_KEY_FILE_PATH");
    String jwtOauthPublicKeyID = System.getenv("COZE_JWT_OAUTH_PUBLIC_KEY_ID");
    JWTOAuthClient oauth = null;
    try {
        jwtOauthPrivateKey = new String(Files.readAllBytes(Paths.get(jwtOauthPrivateKeyFilePath)), StandardCharsets.UTF_8);
    } catch (IOException e) {
        e.printStackTrace();
    }
    /*
    The jwt oauth type requires using private to be able to issue a jwt token, and through
    the jwt token, apply for an access_token from the coze service. The sdk encapsulates
    this procedure, and only needs to use get_access_token to obtain the access_token under
    the jwt oauth process.
    Generate the authorization token
    The default ttl is 900s, and developers can customize the expiration time, which can be
    set up to 24 hours at most.
    */
    try {
        oauth = new JWTOAuthClient.JWTOAuthBuilder()
                .clientID(jwtOauthClientID)
                .privateKey(jwtOauthPrivateKey)
                .publicKey(jwtOauthPublicKeyID)
                .baseURL(cozeAPIBase)
                .build();
    } catch (Exception e) {
        e.printStackTrace();
        return;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The jwt oauth type requires using private to be able to issue a jwt token, and through the jwt token, apply for an access_token from the coze service.&lt;/p&gt; 
&lt;p&gt;The sdk encapsulates this procedure, and only needs to use get_access_token to obtain the access_token under the jwt oauth process.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;# The jwt process does not require any other operations, you can directly apply for a token
oauth_token = jwt_oauth_app.get_access_token(ttl=3600)

public void getAccessToken() {
    // The jwt process does not require any other operations, you can directly apply for a token
    OAuthToken resp = oauth.getAccessToken(3600);

    // Use the access token to init Coze client
    CozeAPI coze = new CozeAPI.Builder().auth(new TokenAuth(resp.getAccessToken())).baseURL(cozeAPIBase).build();

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;PKCE OAuth App&lt;/h4&gt; 
&lt;p&gt;PKCE stands for Proof Key for Code Exchange, and it's an extension to the OAuth 2.0 authorization code flow designed to enhance security for public clients, such as mobile and single-page applications.&lt;/p&gt; 
&lt;p&gt;Firstly, users need to access &lt;a href="https://www.coze.com/open/oauth/apps"&gt;https://www.coze.com/open/oauth/apps&lt;/a&gt;. For the cn environment, users need to access &lt;a href="https://www.coze.cn/open/oauth/apps"&gt;https://www.coze.cn/open/oauth/apps&lt;/a&gt; to create an OAuth App of the type of Mobile/PC/Single-page application.&lt;/p&gt; 
&lt;p&gt;The specific creation process can be referred to in the document: &lt;a href="https://www.coze.com/docs/developer_guides/oauth_pkce"&gt;https://www.coze.com/docs/developer_guides/oauth_pkce&lt;/a&gt;. For the cn environment, it can be accessed at &lt;a href="https://www.coze.cn/docs/developer_guides/oauth_pkce"&gt;https://www.coze.cn/docs/developer_guides/oauth_pkce&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;After the creation is completed, three parameters, namely the client ID can be obtained.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void initOAuthClient() {
    String clientID = System.getenv("COZE_PKCE_OAUTH_CLIENT_ID");
    /*
     * The default access is api.coze.com, but if you need to access api.coze.cn,
     * please use base_url to configure the api endpoint to access
     */
    String cozeAPIBase = System.getenv("COZE_API_BASE");
    if (cozeAPIBase == null || cozeAPIBase.isEmpty()) {
        cozeAPIBase = Consts.COZE_COM_BASE_URL;
    }
    PKCEOAuthClient oauth = new PKCEOAuthClient.PKCEOAuthBuilder()
            .clientID(clientID)
            .baseURL(cozeAPIBase)
            .build();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the pkce oauth process, first, need to select a suitable code_challenge_method. Coze supports two types: plain and s256.&lt;/p&gt; 
&lt;p&gt;Then, based on the selected code_challenge_method type, hash the code_verifier into the code_challenge. Finally, based on the callback address, code_challenge, and code_challenge_method, an authorization link can be generated.&lt;/p&gt; 
&lt;p&gt;The sdk will automatically handle the code_challenge process, and return the code verifier.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;
public void genAuthLink() {
    String redirectURI = System.getenv("COZE_WEB_OAUTH_REDIRECT_URI");
    PKCEAuthParam oauthURL = oauth.genOAuthURL(redirectURI, "state", PKCEOAuthClient.CodeChallengeMethod.S256);
    System.out.println(oauthURL);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Developers should lead users to open up this authorization link.&lt;/p&gt; 
&lt;p&gt;When the user consents to the authorization, Coze will redirect with the code to the callback address configured by the developer, and the developer can obtain this code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void getAccessToken() {
    /*
    Open the authorization link in your browser and authorize this OAuth App
    After authorization, you can exchange code_verifier for access token
    */
    String code = "mock code";
    /*
    After obtaining the code after redirection, the interface to exchange the code for a
    token can be invoked to generate the Coze access_token of the authorized user.
    */
    OAuthToken resp = oauth.getAccessToken(code, redirectURI, "");
    System.out.println(resp);
    // Use the access token to init Coze client
    CozeAPI coze = new CozeAPI.Builder().auth(new TokenAuth(resp.getAccessToken())).baseURL(cozeAPIBase).build();
    // When the token expires, you can also refresh and re-obtain the token
    resp = oauth.refreshToken(resp.getRefreshToken());
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Device OAuth App&lt;/h4&gt; 
&lt;p&gt;The Device Flow is designed for devices with limited input capabilities or no browser access. This OAuth 2.0 extension enables secure authorization for IoT devices, CLI tools, and other limited-input scenarios.&lt;/p&gt; 
&lt;p&gt;Firstly, users need to access &lt;a href="https://www.coze.com/open/oauth/apps"&gt;https://www.coze.com/open/oauth/apps&lt;/a&gt;. For the cn environment, users need to access &lt;a href="https://www.coze.cn/open/oauth/apps"&gt;https://www.coze.cn/open/oauth/apps&lt;/a&gt; to create an OAuth App of the type of TVs/Limited Input devices/Command line programs.&lt;/p&gt; 
&lt;p&gt;The specific creation process can be referred to in the document: &lt;a href="https://www.coze.com/docs/developer_guides/oauth_device_code"&gt;https://www.coze.com/docs/developer_guides/oauth_device_code&lt;/a&gt;. For the cn environment, it can be accessed at &lt;a href="https://www.coze.cn/docs/developer_guides/oauth_device_code"&gt;https://www.coze.cn/docs/developer_guides/oauth_device_code&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;After the creation is completed, three parameters, namely the client ID can be obtained.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void initOAuthClient() {
    String clientID = System.getenv("COZE_PKCE_OAUTH_CLIENT_ID");
    /*
     * The default access is api.coze.com, but if you need to access api.coze.cn,
     * please use base_url to configure the api endpoint to access
     */
    String cozeAPIBase = System.getenv("COZE_API_BASE");
    if (cozeAPIBase == null || cozeAPIBase.isEmpty()) {
        cozeAPIBase = Consts.COZE_COM_BASE_URL;
    }
    DeviceOAuthClient oauth = new DeviceOAuthClient.DeviceOAuthBuilder()
        .clientID(clientID)
        .baseURL(cozeAPIBase)
        .build();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the device oauth authorization process, developers need to first call the interface of Coze to generate the device code to obtain the user_code and device_code.&lt;/p&gt; 
&lt;p&gt;Then generate the authorization link through the user_code, guide the user to open the link, fill in the user_code, and consent to the authorization.&lt;/p&gt; 
&lt;p&gt;Developers need to call the interface of Coze to generate the token through the device_code.&lt;/p&gt; 
&lt;p&gt;When the user has not authorized or rejected the authorization, the interface will throw an error and return a specific error code.&lt;/p&gt; 
&lt;p&gt;After the user consents to the authorization, the interface will succeed and return the access_token.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;// First, you need to request the server to obtain the device code required in the device auth flow
DeviceAuthCode codeResp = oauth.getDeviceCode();

// The returned device_code contains an authorization link. Developers need to guide users
// to open up this link.
// open device_code.verification_url
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The developers then need to use the device_code to poll Coze's interface to obtain the token.&lt;/p&gt; 
&lt;p&gt;The SDK has encapsulated this part of the code in and handled the different returned error codes. The developers only need to invoke get_access_token.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;try {
    OAuthToken resp = oauth.getAccessToken(codeResp.getDeviceCode());
    System.out.println(resp);

    // Use the access token to init Coze client
    CozeAPI coze = new CozeAPI.Builder().auth(new TokenAuth(resp.getAccessToken())).baseURL(cozeAPIBase).build();
    // When the token expires, you can also refresh and re-obtain the token
    resp = oauth.refreshToken(resp.getRefreshToken());
} catch (CozeAuthException e) {
    switch (e.getCode()) {
        case AccessDenied:
            /*
            The user rejected the authorization.
            Developers need to guide the user to open the authorization link again.
            */
            break;
        case ExpiredToken:
            /*
            The token has expired. Developers need to guide the user to open
            the authorization link again.
            */
        default:
            e.printStackTrace();
            break;
    }
} catch (Exception e) {
    e.printStackTrace();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Streaming usage&lt;/h3&gt; 
&lt;p&gt;Bot chat and workflow run support running in streaming mode.&lt;/p&gt; 
&lt;p&gt;chat streaming example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;String token = System.getenv("COZE_API_TOKEN");
String botID = System.getenv("PUBLISHED_BOT_ID");
String userID = System.getenv("USER_ID");

TokenAuth authCli = new TokenAuth(token);

// Init the Coze client through the access_token.
CozeAPI coze = new CozeAPI.Builder()
        .baseURL(System.getenv("COZE_API_BASE"))
        .auth(authCli)
        .readTimeout(10000)
        .build();;

/*
 * Step one, create chat
 * Call the coze.chat().stream() method to create a chat. The create method is a streaming
 * chat and will return a Flowable ChatEvent. Developers should iterate the iterator to get
 * chat event and handle them.
 * */
ChatReq req = ChatReq.builder()
        .botID(botID)
        .userID(userID)
        .messages(Collections.singletonList(Message.buildUserQuestionText("What can you do?")))
        .build();

Flowable&amp;lt;ChatEvent&amp;gt; resp = coze.chat().stream(req);
resp.blockingForEach(event -&amp;gt; {
    if (ChatEventType.CONVERSATION_MESSAGE_DELTA.equals(event.getEvent())) {
        System.out.print(event.getMessage().getContent());
    }
    if (ChatEventType.CONVERSATION_CHAT_COMPLETED.equals(event.getEvent())) {
        System.out.println("Token usage:" + event.getChat().getUsage().getTokenCount());
    }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;workflow streaming example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void streamRun() {
    // Get an access_token through personal access token or oauth.
    String token = System.getenv("COZE_API_TOKEN");
    TokenAuth authCli = new TokenAuth(token);

    // Init the Coze client through the access_token.
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(System.getenv("COZE_API_BASE"))
            .auth(authCli)
            .readTimeout(10000)
            .build();

    String workflowID = System.getenv("WORKSPACE_ID");

    // if your workflow need input params, you can send them by map
    Map&amp;lt;String, Object&amp;gt; data = new HashMap&amp;lt;&amp;gt;();
    data.put("param name", "param values");

    RunWorkflowReq.RunWorkflowReqBuilder builder = RunWorkflowReq.builder();
    builder.workflowID(workflowID).parameters(data);

    Flowable&amp;lt;WorkflowEvent&amp;gt; flowable = coze.workflows().runs().stream(builder.build());
    handleEvent(flowable, coze, workflowID);
}

private void handleEvent(Flowable&amp;lt;WorkflowEvent&amp;gt; events, CozeAPI coze, String workflowID) {
    events.subscribe(event -&amp;gt; {
        switch (event.getEvent()) {
            case MESSAGE:
                System.out.println("Got message" + event.getMessage());
                break;
            case ERROR:
                System.out.println("Got error" + event.getError());
                break;
            case INTERRUPT:
                handleEvent(coze.workflows().runs().resume(
                        ResumeRunReq.builder()
                                .workflowID(workflowID)
                                .eventID(event.getInterrupt().getInterruptData().getEventID())
                                .resumeData("your data")
                                .interruptType(event.getInterrupt().getInterruptData().getType())
                                .build()), coze, workflowID);
                break;
            default:
                break;
        }
    }, Throwable::printStackTrace);
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Paginator Iterator&lt;/h3&gt; 
&lt;p&gt;The result returned by all list interfaces is a paginator, which supports iteration.&lt;/p&gt; 
&lt;p&gt;Take the example of listing the bots in a space to explain the three ways to use the paginator iterator:&lt;/p&gt; 
&lt;h4&gt;1. Not using iterators&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;String token = System.getenv("COZE_API_TOKEN");
TokenAuth authCli = new TokenAuth(token);

// Init the Coze client through the access_token.
CozeAPI coze = new CozeAPI.Builder()
        .baseURL(System.getenv("COZE_API_BASE"))
        .auth(authCli)
        .readTimeout(10000)
        .build();;

Integer pageNum = 1;
String workspaceID = System.getenv("WORKSPACE_ID");
ListBotReq listBotReq = ListBotReq.builder()
        .spaceID(workspaceID)
        .pageNum(pageNum)
        .pageSize(10)
        .build();
PageResult&amp;lt;SimpleBot&amp;gt; botList = coze.bots().list(listBotReq);

// the api provides two ways for developers to turn pages for all paging interfaces.
// 1. The first way is to let developers manually call the API to request the next page.
while (botList.getHasMore()) {
    pageNum++;
    listBotReq.setPageNum(pageNum);
    botList = coze.bots().list(listBotReq);
}

// 2. The SDK encapsulates an iterator, which can be used to turn pages backward automatically.

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;2. Iterate over the paginator, getting T&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;String token = System.getenv("COZE_API_TOKEN");
TokenAuth authCli = new TokenAuth(token);

// Init the Coze client through the access_token.
CozeAPI coze = new CozeAPI.Builder()
        .baseURL(System.getenv("COZE_API_BASE"))
        .auth(authCli)
        .readTimeout(10000)
        .build();;

Integer pageNum = 1;
String workspaceID = System.getenv("WORKSPACE_ID");
ListBotReq listBotReq = ListBotReq.builder()
        .spaceID(workspaceID)
        .pageNum(pageNum)
        .pageSize(10)
        .build();
PageResult&amp;lt;SimpleBot&amp;gt; botList = coze.bots().list(listBotReq);

// the api provides two ways for developers to turn pages for all paging interfaces.
// 1. The first way is to let developers manually call the API to request the next page.
Iterator&amp;lt;SimpleBot&amp;gt; iterator = botList.getIterator();
while (iterator.hasNext()) {
    iterator.forEachRemaining(System.out::println);
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WebSocket&lt;/h3&gt; 
&lt;p&gt;The SDK provides WebSocket interfaces for real-time chat, speech synthesis and speech transcription.&lt;/p&gt; 
&lt;p&gt;You can check the official documentation for more information: &lt;a href="https://www.coze.cn/open/docs/guides/websocket_openapi"&gt;https://www.coze.cn/open/docs/guides/websocket_openapi&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;WebSocket Chat&lt;/h4&gt; 
&lt;p&gt;WebSocket chat allows real-time communication with bots, including text and audio interactions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;WebsocketChatClient client = coze.websocket()
    .chat()
    .create(new WebsocketChatCreateReq(botID, new CallbackHandler()));

// Send audio data
String audioData = "..."; // Base64 encoded audio data
client.inputAudioBufferAppend(audioData);
client.inputAudioBufferComplete();

// Handle responses in callback
class CallbackHandler extends WebsocketChatCallbackHandler {
    // Handle text responses
    @Override
    public void onConversationMessageDelta(WebsocketChatClient client, ConversationMessageDeltaEvent event) {
        System.out.printf("Received: %s\n", event.getData().getContent());
    }

    // Handle audio responses  
    @Override
    public void onConversationAudioDelta(WebsocketChatClient client, ConversationAudioDeltaEvent event) {
        byte[] audioData = event.getData().getAudio();
        // Process audio data...
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Speech Synthesis&lt;/h4&gt; 
&lt;p&gt;WebSocket speech synthesis allows real-time text-to-speech conversion:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;WebsocketAudioSpeechClient client = coze.websocket()
    .audio()
    .speech()
    .create(new WebsocketAudioSpeechCreateReq(new CallbackHandler()));

// Configure audio output
OutputAudio outputAudio = OutputAudio.builder()
    .voiceId(voiceID)
    .codec("pcm")
    .speechRate(50)
    .pcmConfig(PCMConfig.builder().sampleRate(24000).build())
    .build();
client.speechUpdate(new SpeechUpdateEventData(outputAudio));

// Send text for synthesis
client.inputTextBufferAppend("Hello world!");
client.inputTextBufferComplete();

// Handle synthesized audio in callback
class CallbackHandler extends WebsocketAudioSpeechCallbackHandler {
    @Override
    public void onSpeechAudioUpdate(WebsocketAudioSpeechClient client, SpeechAudioUpdateEvent event) {
        byte[] audioData = event.getDelta();
        // Process audio data...
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Speech Transcription&lt;/h4&gt; 
&lt;p&gt;WebSocket speech transcription provides real-time speech-to-text conversion:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;WebsocketAudioTranscriptionsClient client = coze.websocket()
    .audio()
    .transcriptions()
    .create(new WebsocketAudioTranscriptionsCreateReq(new CallbackHandler()));

// Configure audio input
InputAudio inputAudio = InputAudio.builder()
    .sampleRate(24000)
    .codec("pcm")
    .format("wav")
    .channel(2)
    .build();
client.transcriptionsUpdate(new TranscriptionsUpdateEventData(inputAudio));

// Send audio for transcription
String audioData = "..."; // Base64 encoded audio data
client.inputAudioBufferAppend(audioData);
client.inputAudioBufferComplete();

// Handle transcription results in callback
class CallbackHandler extends WebsocketAudioTranscriptionsCallbackHandler {
    @Override
    public void onTranscriptionsMessageUpdate(
        WebsocketAudioTranscriptionsClient client, 
        TranscriptionsMessageUpdateEvent event) {
        System.out.println(event.getData().getContent());
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All WebSocket clients support proper resource cleanup:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;try {
    // Use the client...
} finally {
    if (client != null) {
        client.close();
    }
    coze.shutdownExecutor();
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>ageerle/ruoyi-ai</title>
      <link>https://github.com/ageerle/ruoyi-ai</link>
      <description>&lt;p&gt;RuoYi AI 是一个全栈式 AI 开发平台，旨在帮助开发者快速构建和部署个性化的 AI 应用。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RuoYi AI&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/ageerle/ruoyi-ai/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/ageerle/ruoyi-ai.svg?style=flat-square" alt="Contributors"&gt;&lt;/a&gt; &lt;a href="https://github.com/ageerle/ruoyi-ai/network/members"&gt;&lt;img src="https://img.shields.io/github/forks/ageerle/ruoyi-ai.svg?style=flat-square" alt="Forks"&gt;&lt;/a&gt; &lt;a href="https://github.com/ageerle/ruoyi-ai/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/ageerle/ruoyi-ai.svg?style=flat-square" alt="Stargazers"&gt;&lt;/a&gt; &lt;a href="https://github.com/ageerle/ruoyi-ai/issues"&gt;&lt;img src="https://img.shields.io/github/issues/ageerle/ruoyi-ai.svg?style=flat-square" alt="Issues"&gt;&lt;/a&gt; &lt;a href="https://github.com/ageerle/ruoyi-ai/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/ageerle/ruoyi-ai.svg?style=flat-square" alt="MIT License"&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;img src="https://raw.githubusercontent.com/ageerle/ruoyi-ai/main/image/00.png" alt="RuoYi AI Logo" width="120" height="120"&gt; 
 &lt;h3&gt;企业级AI助手平台&lt;/h3&gt; 
 &lt;p&gt;&lt;em&gt;开箱即用的智能AI平台，深度集成 FastGPT、扣子(Coze)、DIFY 等主流AI平台，提供先进的RAG技术和多模型支持&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ageerle/ruoyi-ai/main/README_EN.md"&gt;🇺🇸 English&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://doc.pandarobot.chat"&gt;📖 使用文档&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://web.pandarobot.chat"&gt;🚀 在线体验&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://github.com/ageerle/ruoyi-ai/issues"&gt;🐛 问题反馈&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://github.com/ageerle/ruoyi-ai/issues"&gt;💡 功能建议&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;✨ 核心亮点&lt;/h2&gt; 
&lt;h3&gt;🤖 智能AI引擎&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;多模型接入&lt;/strong&gt;：支持 OpenAI GPT-4、Azure、ChatGLM、通义千问、智谱AI 等主流模型&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI平台集成&lt;/strong&gt;：深度集成 &lt;strong&gt;FastGPT&lt;/strong&gt;、&lt;strong&gt;扣子(Coze)&lt;/strong&gt;、&lt;strong&gt;DIFY&lt;/strong&gt; 等主流AI应用平台&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Spring AI MCP 集成&lt;/strong&gt;：基于模型上下文协议，打造可扩展的AI工具生态系统&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;实时流式对话&lt;/strong&gt;：采用 SSE/WebSocket 技术，提供丝滑的对话体验&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI 编程助手&lt;/strong&gt;：内置智能代码分析和项目脚手架生成能力&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🌟 AI平台生态集成&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;FastGPT 深度集成&lt;/strong&gt;：原生支持 FastGPT API，包括知识库检索、工作流编排和上下文管理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;扣子(Coze) 官方SDK&lt;/strong&gt;：集成字节跳动扣子平台官方SDK，支持Bot对话和流式响应&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DIFY 完整兼容&lt;/strong&gt;：使用 DIFY Java Client，支持应用编排、工作流和知识库管理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;统一聊天接口&lt;/strong&gt;：提供统一的聊天服务接口，支持多平台无缝切换和负载均衡&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🧠 本地化RAG方案&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;私有知识库&lt;/strong&gt;：基于 Langchain4j 框架 + BGE-large-zh-v1.5 中文向量模型&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;多种向量库&lt;/strong&gt;：支持 Milvus、Weaviate、Qdrant 等主流向量数据库&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;数据安全可控&lt;/strong&gt;：支持完全本地部署，保护企业数据隐私&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;灵活模型部署&lt;/strong&gt;：兼容 Ollama、vLLM 等本地推理框架&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎨 AI创作工具&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AI 绘画创作&lt;/strong&gt;：深度集成 DALL·E-3、MidJourney、Stable Diffusion&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;智能PPT生成&lt;/strong&gt;：一键将文本内容转换为精美演示文稿&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;多模态理解&lt;/strong&gt;：支持文本、图片、文档等多种格式的智能处理&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 快速体验&lt;/h2&gt; 
&lt;h3&gt;在线演示&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;用户端体验&lt;/strong&gt;：&lt;a href="https://web.pandarobot.chat"&gt;web.pandarobot.chat&lt;/a&gt; (账号：demo 密码：demo123)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;管理后台&lt;/strong&gt;：&lt;a href="https://admin.pandarobot.chat"&gt;admin.pandarobot.chat&lt;/a&gt; (账号：admin 密码：admin123)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;项目源码&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;项目模块&lt;/th&gt; 
   &lt;th&gt;GitHub 仓库&lt;/th&gt; 
   &lt;th&gt;Gitee 仓库&lt;/th&gt; 
   &lt;th&gt;GitCode 仓库&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🔧 后端服务&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ageerle/ruoyi-ai"&gt;ruoyi-ai&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gitee.com/ageerle/ruoyi-ai"&gt;ruoyi-ai&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gitcode.com/ageerle/ruoyi-ai"&gt;ruoyi-ai&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🎨 用户前端&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ageerle/ruoyi-web"&gt;ruoyi-web&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gitee.com/ageerle/ruoyi-web"&gt;ruoyi-web&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gitcode.com/ageerle/ruoyi-web"&gt;ruoyi-web&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🛠️ 管理后台&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ageerle/ruoyi-admin"&gt;ruoyi-admin&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gitee.com/ageerle/ruoyi-admin"&gt;ruoyi-admin&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gitcode.com/ageerle/ruoyi-admin"&gt;ruoyi-admin&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;合作项目&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;项目介绍&lt;/th&gt; 
   &lt;th align="center"&gt;GitHub 仓库&lt;/th&gt; 
   &lt;th align="center"&gt;Gitee 仓库&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;前端简化版&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/element-plus-x/ruoyi-element-ai"&gt;ruoyi-element-ai&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://gitee.com/he-jiayue/ruoyi-element-ai"&gt;ruoyi-element-ai&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🛠️ 技术架构&lt;/h2&gt; 
&lt;h3&gt;🏗️ 核心框架&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;后端架构&lt;/strong&gt;：Spring Boot 3.4 + Spring AI + Langchain4j&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;数据存储&lt;/strong&gt;：MySQL 8.0 + Redis + 向量数据库（Milvus/Weaviate/Qdrant）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;前端技术&lt;/strong&gt;：Vue 3 + Vben Admin + Naive UI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;安全认证&lt;/strong&gt;：Sa-Token + JWT 双重保障&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔧 系统组件&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;文档处理&lt;/strong&gt;：PDF、Word、Excel 解析，图像智能分析&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;实时通信&lt;/strong&gt;：WebSocket 实时通信，SSE 流式响应&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;系统监控&lt;/strong&gt;：完善的日志体系、性能监控、服务健康检查&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📚 使用文档&lt;/h2&gt; 
&lt;p&gt;想要深入了解安装部署、功能配置和二次开发？&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;👉 &lt;a href="https://doc.pandarobot.chat"&gt;完整使用文档&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;🤝 参与贡献&lt;/h2&gt; 
&lt;p&gt;我们热烈欢迎社区贡献！无论您是资深开发者还是初学者，都可以为项目贡献力量 💪&lt;/p&gt; 
&lt;h3&gt;贡献方式&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork&lt;/strong&gt; 项目到您的账户&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;创建分支&lt;/strong&gt; (&lt;code&gt;git checkout -b feature/新功能名称&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;提交代码&lt;/strong&gt; (&lt;code&gt;git commit -m '添加某某功能'&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;推送分支&lt;/strong&gt; (&lt;code&gt;git push origin feature/新功能名称&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;发起 Pull Request&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 &lt;strong&gt;小贴士&lt;/strong&gt;：建议将 PR 提交到 GitHub，我们会自动同步到其他代码托管平台&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;📄 开源协议&lt;/h2&gt; 
&lt;p&gt;本项目采用 &lt;strong&gt;MIT 开源协议&lt;/strong&gt;，详情请查看 &lt;a href="https://raw.githubusercontent.com/ageerle/ruoyi-ai/main/LICENSE"&gt;LICENSE&lt;/a&gt; 文件。&lt;/p&gt; 
&lt;h2&gt;🙏 特别鸣谢&lt;/h2&gt; 
&lt;p&gt;感谢以下优秀的开源项目为本项目提供支持：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/springaialibaba/spring-ai-alibaba-copilot"&gt;Spring AI Alibaba Copilot&lt;/a&gt; - 基于spring-ai-alibaba 的智能编码助手&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://spring.io/projects/spring-ai"&gt;Spring AI&lt;/a&gt; - Spring 官方 AI 集成框架&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langchain4j/langchain4j"&gt;Langchain4j&lt;/a&gt; - 强大的 Java LLM 开发框架&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/dromara/RuoYi-Vue-Plus"&gt;RuoYi-Vue-Plus&lt;/a&gt; - 成熟的企业级快速开发框架&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vbenjs/vue-vben-admin"&gt;Vben Admin&lt;/a&gt; - 现代化的 Vue 后台管理模板&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Grt1228/chatgpt-java"&gt;chatgpt-java&lt;/a&gt; - 优秀的 ChatGPT Java SDK&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🌐 生态伙伴&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://ppinfra.com/user/register?invited_by=P8QTUY&amp;amp;utm_source=github_ruoyi-ai"&gt;PPIO 派欧云&lt;/a&gt; - 提供高性价比的 GPU 算力和模型 API 服务&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.compshare.cn/?ytag=GPU_YY-gh_ruoyi"&gt;优云智算&lt;/a&gt; - 万卡RTX40系GPU+海内外主流模型API服务，秒级响应，按量计费，新客免费用。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💬 社区交流&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ageerle/ruoyi-ai/main/image/wx.png" alt="微信二维码" width="200" height="200"&gt;&lt;br&gt; &lt;strong&gt;扫码添加作者微信&lt;/strong&gt;&lt;br&gt; &lt;em&gt;邀请进群学习&lt;/em&gt; &lt;/td&gt; 
    &lt;td align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ageerle/ruoyi-ai/main/image/qq.png" alt="QQ群二维码" width="200" height="200"&gt;&lt;br&gt; &lt;strong&gt;QQ技术交流群&lt;/strong&gt;&lt;br&gt; &lt;em&gt;技术讨论&lt;/em&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/ageerle/ruoyi-ai"&gt;⭐ 点个Star支持一下&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href="https://github.com/ageerle/ruoyi-ai/fork"&gt;🍴 Fork 开始贡献&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ageerle/ruoyi-ai/main/README_EN.md"&gt;📚 English&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href="https://doc.pandarobot.chat"&gt;📖 查看完整文档&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;用 ❤️ 打造，由 RuoYi AI 开源社区维护&lt;/em&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;!-- Badge Links --&gt;</description>
    </item>
    
    <item>
      <title>halo-dev/halo</title>
      <link>https://github.com/halo-dev/halo</link>
      <description>&lt;p&gt;强大易用的开源建站工具。&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://www.halo.run" target="_blank" rel="noopener noreferrer"&gt; &lt;img width="100" src="https://www.halo.run/logo" alt="Halo logo"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;&lt;b&gt;Halo&lt;/b&gt; [ˈheɪloʊ]，强大易用的开源建站工具。&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/halo-dev/halo/releases"&gt;&lt;img alt="GitHub release" src="https://img.shields.io/github/release/halo-dev/halo.svg?style=flat-square&amp;amp;include_prereleases"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/halohub/halo"&gt;&lt;img alt="Docker pulls" src="https://img.shields.io/docker/pulls/halohub/halo?style=flat-square"&gt;&lt;/a&gt; &lt;a href="https://github.com/halo-dev/halo/commits"&gt;&lt;img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/halo-dev/halo.svg?style=flat-square"&gt;&lt;/a&gt; &lt;a href="https://github.com/halo-dev/halo/actions"&gt;&lt;img alt="GitHub Workflow Status" src="https://img.shields.io/github/actions/workflow/status/halo-dev/halo/halo.yaml?branch=main&amp;amp;style=flat-square"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/halo-dev/halo"&gt;&lt;img alt="Codecov percentage" src="https://img.shields.io/codecov/c/github/halo-dev/halo/main?style=flat-square&amp;amp;token=YsRUg9fall"&gt;&lt;/a&gt; &lt;a href="https://gitcode.com/feizhiyun/Halo"&gt;&lt;img src="https://gitcode.com/feizhiyun/Halo/star/badge.svg?sanitize=true" alt="GitCode Stars"&gt;&lt;/a&gt; &lt;a href="https://www.producthunt.com/posts/halo-6b401e75-bb58-4dff-9fe9-2ada3323c874?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-halo-6b401e75-bb58-4dff-9fe9-2ada3323c874" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=407442&amp;amp;theme=light" alt="Halo - Powerful and easy-to-use Open-Source website building tool | Product Hunt" style="height: 20px;" height="20px"&gt;&lt;/a&gt; &lt;br&gt; &lt;a href="https://www.halo.run"&gt;官网&lt;/a&gt; &lt;a href="https://docs.halo.run"&gt;文档&lt;/a&gt; &lt;a href="https://bbs.halo.run"&gt;社区&lt;/a&gt; &lt;a href="https://gitee.com/halo-dev"&gt;Gitee&lt;/a&gt; &lt;a href="https://t.me/halo_dev"&gt;Telegram 频道&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV15x4y1U7RU/?share_source=copy_web&amp;amp;vd_source=0ab6cf86ca512a363f04f18b86f55b86"&gt;&lt;img src="https://www.halo.run/upload/halo-github-screenshot.png" alt="Watch the video"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;p&gt;如果你的设备有 Docker 环境，可以使用以下命令快速启动一个 Halo 的体验环境：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d --name halo -p 8090:8090 -v ~/.halo2:/root/.halo2 halohub/halo:2.21
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;或者点击下方按钮使用 &lt;a href="https://gitpod.io/"&gt;Gitpod&lt;/a&gt; 或 &lt;a href="https://template.us-west-1.run.claw.cloud/deploy?templateName=halo"&gt;ClawCloud Run&lt;/a&gt; 启动一个体验环境：&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/halo-sigs/gitpod-demo"&gt;&lt;img src="https://gitpod.io/button/open-in-gitpod.svg?sanitize=true" alt="Open in Gitpod"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://template.us-west-1.run.claw.cloud/deploy?templateName=halo"&gt;&lt;img src="https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/Run-on-ClawCloud.svg?sanitize=true" alt="Run on ClawCloud"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;以上方式仅作为体验使用，推荐使用开源 Linux 服务器运维管理面板 &lt;a href="https://github.com/1Panel-dev/1Panel"&gt;1Panel&lt;/a&gt; 进行部署（&lt;a href="https://docs.halo.run/getting-started/install/1panel"&gt;查看文档&lt;/a&gt;），轻松搞定反向代理、SSL 证书及升级备份任务。更多部署方式，请&lt;a href="https://docs.halo.run/category/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97"&gt;查看文档&lt;/a&gt;。&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;在线体验&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;环境地址：&lt;a href="https://demo.halo.run"&gt;https://demo.halo.run&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;后台地址：&lt;a href="https://demo.halo.run/console"&gt;https://demo.halo.run/console&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;用户名：&lt;code&gt;demo&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;密码：&lt;code&gt;P@ssw0rd123..&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;专业版&lt;/h2&gt; 
&lt;p&gt;相比于社区版，Halo 专业版为用户提供了大量增强功能及技术支持服务，增强功能包括短信验证码注册登录、全站私有化、LDAP 登录、三方账号登录及自定义 LOGO 等。 &lt;a href="https://www.lxware.cn/halo"&gt;点击查看专业版详细介绍&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;生态&lt;/h2&gt; 
&lt;p&gt;可访问 &lt;a href="https://www.halo.run/store/apps"&gt;官方应用市场&lt;/a&gt; 或 &lt;a href="https://github.com/halo-sigs/awesome-halo"&gt;awesome-halo 仓库&lt;/a&gt; 查看适用于 Halo 2.x 的主题和插件。&lt;/p&gt; 
&lt;h2&gt;许可证&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/halo-dev/halo/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/halo-dev/halo.svg?style=flat-square" alt="license"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Halo 使用 GPL-v3.0 协议开源，请遵守开源协议。&lt;/p&gt; 
&lt;h2&gt;赞助&lt;/h2&gt; 
&lt;p&gt;如果 Halo 对你有帮助，欢迎&lt;a href="https://afdian.com/a/halo-dev"&gt;赞助我们&lt;/a&gt;，感谢以下赞助者对 Halo 项目的支持：&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a target="_blank" href="https://afdian.com/a/halo-dev"&gt; &lt;img alt="sponsors" src="https://github.com/halo-sigs/sponsor-images/raw/main/sponsorkit/sponsors.svg?raw=true"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;贡献&lt;/h2&gt; 
&lt;p&gt;参考 &lt;a href="https://github.com/halo-dev/halo/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/halo-dev/halo/graphs/contributors"&gt;&lt;img src="https://opencollective.com/halo/contributors.svg?width=890&amp;amp;button=false"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;状态&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/ad008b2151c22e7cf734d2688befaa795d593b95.svg?sanitize=true" alt="Repobeats analytics" title="Repobeats analytics image"&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>traccar/traccar</title>
      <link>https://github.com/traccar/traccar</link>
      <description>&lt;p&gt;Traccar GPS Tracking System&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href="https://www.traccar.org"&gt;Traccar&lt;/a&gt;&lt;/h1&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Traccar is an open source GPS tracking system. This repository contains Java-based back-end service. It supports more than 200 GPS protocols and more than 2000 models of GPS tracking devices. Traccar can be used with any major SQL database system. It also provides easy to use &lt;a href="https://www.traccar.org/traccar-api/"&gt;REST API&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Other parts of Traccar solution include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/traccar/traccar-web"&gt;Traccar web app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/traccar/traccar-manager-android"&gt;Traccar Manager Android app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/traccar/traccar-manager-ios"&gt;Traccar Manager iOS app&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There is also a set of mobile apps that you can use for tracking mobile devices:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/traccar/traccar-client-android"&gt;Traccar Client Android app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/traccar/traccar-client-ios"&gt;Traccar Client iOS app&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Some of the available features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Real-time GPS tracking&lt;/li&gt; 
 &lt;li&gt;Driver behaviour monitoring&lt;/li&gt; 
 &lt;li&gt;Detailed and summary reports&lt;/li&gt; 
 &lt;li&gt;Geofencing functionality&lt;/li&gt; 
 &lt;li&gt;Alarms and notifications&lt;/li&gt; 
 &lt;li&gt;Account and device management&lt;/li&gt; 
 &lt;li&gt;Email and SMS support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build&lt;/h2&gt; 
&lt;p&gt;Please read &lt;a href="https://www.traccar.org/build/"&gt;build from source documentation&lt;/a&gt; on the official website.&lt;/p&gt; 
&lt;h2&gt;Team&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Anton Tananaev (&lt;a href="mailto:anton@traccar.org"&gt;anton@traccar.org&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Andrey Kunitsyn (&lt;a href="mailto:andrey@traccar.org"&gt;andrey@traccar.org&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Apache License, Version 2.0

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Eanya-Tonic/CCTV_Viewer</title>
      <link>https://github.com/Eanya-Tonic/CCTV_Viewer</link>
      <description>&lt;p&gt;电视浏览器，一款简易电视视频收看软件，用于方便的在机顶盒上收看网页视频&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://github.com/Eanya-Tonic/CCTV_Viewer/raw/master/app/src/main/res/drawable/icon.png" style="width:200px;"&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;电视浏览器&lt;/h1&gt; 
&lt;p align="center"&gt;一个电视机顶盒及Android TV收看网页视频的浏览器 &lt;/p&gt; 
&lt;h2&gt;下载安装包&lt;/h2&gt; 
&lt;p&gt;从Github Release下载：&lt;a href="https://github.com/Eanya-Tonic/CCTV_Viewer/releases/latest"&gt;https://github.com/Eanya-Tonic/CCTV_Viewer/releases/latest&lt;/a&gt; &lt;br&gt; 从百度网盘下载：&lt;a href="https://pan.baidu.com/s/1e5wMCorJIp9oi5yN8mJ1KA?pwd=qozp"&gt;https://pan.baidu.com/s/1e5wMCorJIp9oi5yN8mJ1KA?pwd=qozp&lt;/a&gt; 提取码：qozp &lt;br&gt; 从 VoidTech 实验室下载（X5 内核 1.7.4 测试版）：&lt;a href="https://void-tech.cn/wp-content/uploads/2024/10/CCTV_Viewer_1.7.4-X5Beta.zip"&gt;https://void-tech.cn/wp-content/uploads/2024/10/CCTV_Viewer_1.7.4-X5Beta.zip&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;使用方法&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;电视盒子：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/9dbda531-1976-438a-b293-fd5b5fa002e6#pic_center" alt="2024-10-03_23-09-27"&gt;&lt;/p&gt; 
&lt;div align="center"&gt;
 &lt;p&gt;频道切换列表界面&lt;/p&gt;
&lt;/div&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/0771c85a-9957-4554-bb98-ebab6f49dba8#pic_center" alt="2024-10-03_23-09-43"&gt;&lt;/p&gt; 
&lt;div align="center"&gt;
 &lt;p&gt;菜单键功能菜单&lt;/p&gt;
&lt;/div&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/bca3b30b-7ca4-4fa3-a975-05230011ff2f#pic_center" alt="2024-10-03_23-09-51"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/a9f3b5a8-5546-4e95-9eef-ba0e389fd22d#pic_center" alt="2024-10-03_23-09-59"&gt;&lt;/p&gt; 
&lt;div align="center"&gt;
 &lt;p&gt;设置界面&lt;/p&gt;
&lt;/div&gt; 
&lt;p&gt;使用上下键切换频道，使用确认键显示当前频道和节目信息、并打开频道切换列表，单击菜单键打开功能菜单，输入数字键换到指定台，双击返回键退出程序。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;其他设备：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;使用键盘方向键上下控制切换频道，使用Enter键显示当前频道和节目信息、并打开频道切换列表，单击键盘M键打开功能菜单，单击键盘B键触发返回，输入数字键换到指定台。&lt;/p&gt; 
&lt;h2&gt;目前可看网页&lt;/h2&gt; 
&lt;p&gt;1 CCTV-1 综合&lt;/p&gt; 
&lt;p&gt;2 CCTV-2 财经&lt;/p&gt; 
&lt;p&gt;3 CCTV-3 综艺&lt;/p&gt; 
&lt;p&gt;4 CCTV-4 中文国际（亚）&lt;/p&gt; 
&lt;p&gt;5 CCTV-5 体育&lt;/p&gt; 
&lt;p&gt;6 CCTV-6 电影&lt;/p&gt; 
&lt;p&gt;7 CCTV-7 国防军事&lt;/p&gt; 
&lt;p&gt;8 CCTV-8 电视剧&lt;/p&gt; 
&lt;p&gt;9 CCTV-9 纪录&lt;/p&gt; 
&lt;p&gt;10 CCTV-10 科教&lt;/p&gt; 
&lt;p&gt;11 CCTV-11 戏曲&lt;/p&gt; 
&lt;p&gt;12 CCTV-12 社会与法&lt;/p&gt; 
&lt;p&gt;13 CCTV-13 新闻&lt;/p&gt; 
&lt;p&gt;14 CCTV-14 少儿&lt;/p&gt; 
&lt;p&gt;15 CCTV-15 音乐&lt;/p&gt; 
&lt;p&gt;16 CCTV-16 奥林匹克&lt;/p&gt; 
&lt;p&gt;17 CCTV-17 农业农村&lt;/p&gt; 
&lt;p&gt;18 CCTV-5+ 体育赛事&lt;/p&gt; 
&lt;p&gt;19 CCTV-4 中文国际（欧）&lt;/p&gt; 
&lt;p&gt;20 CCTV-4 中文国际（美）&lt;/p&gt; 
&lt;p&gt;21 北京卫视&lt;/p&gt; 
&lt;p&gt;22 江苏卫视&lt;/p&gt; 
&lt;p&gt;23 东方卫视&lt;/p&gt; 
&lt;p&gt;24 浙江卫视&lt;/p&gt; 
&lt;p&gt;25 湖南卫视&lt;/p&gt; 
&lt;p&gt;26 湖北卫视&lt;/p&gt; 
&lt;p&gt;27 广东卫视&lt;/p&gt; 
&lt;p&gt;28 广西卫视&lt;/p&gt; 
&lt;p&gt;29 黑龙江卫视&lt;/p&gt; 
&lt;p&gt;30 海南卫视&lt;/p&gt; 
&lt;p&gt;31 重庆卫视&lt;/p&gt; 
&lt;p&gt;32 深圳卫视&lt;/p&gt; 
&lt;p&gt;33 四川卫视&lt;/p&gt; 
&lt;p&gt;34 河南卫视&lt;/p&gt; 
&lt;p&gt;35 福建东南卫视&lt;/p&gt; 
&lt;p&gt;36 贵州卫视&lt;/p&gt; 
&lt;p&gt;37 江西卫视&lt;/p&gt; 
&lt;p&gt;38 辽宁卫视&lt;/p&gt; 
&lt;p&gt;39 安徽卫视&lt;/p&gt; 
&lt;p&gt;40 河北卫视&lt;/p&gt; 
&lt;p&gt;41 山东卫视&lt;/p&gt; 
&lt;h2&gt;更新日志&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;v1.8.0 更新日志（2025.02.03）&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1.增加一个可以在换台抽屉打开设置的选项&lt;/p&gt; 
&lt;p&gt;2.增加一个调试模式（仅用于测试）&lt;/p&gt; 
&lt;p&gt;3.在设置中显示安卓系统版本信息&lt;/p&gt; 
&lt;p&gt;4.增加一个下载界面和一个可选择从何处获取x5内核的选项&lt;/p&gt; 
&lt;p&gt;5.针对64位设备和未集成x5的设备可以从线上下载并安装x5内核。请注意，安卓4设备由于无法获取abi信息将默认为32位设备，如您确认您的设备为64位，可以手动强制指定使用线上的64位内核；如x5内核版本选择错误导致应用崩溃，清除数据或卸载重装即可。请优先使用本地集成X5内核安装包，线上服务器带宽较小，速度较慢。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;v1.7.3 更新日志（2024.10.09）&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1.【紧急】修复安卓5以下设备设置闪退导致无法安装X5内核&lt;/p&gt; 
&lt;p&gt;2.在安卓4.4.2测试X5内核可正常安装启动和播放网页视频&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;v1.7.2 更新日志（2024.10.06）&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1.尝试修复本地X5内核安装问题，修改内核包存储目录&lt;/p&gt; 
&lt;p&gt;2.修改设置中启用X5按钮的用户交互，提升使用体验&lt;/p&gt; 
&lt;p&gt;3.增加一个X5安装界面，尝试安装X5内核直至安装完成（可能导致app无限重启，如出现无限app重启，清除全部数据或卸载重装app即可恢复系统WebView）&lt;/p&gt; 
&lt;p&gt;4.默认关闭双缓冲加载&lt;/p&gt; 
&lt;p&gt;5.降低安装限制到SDK 17&lt;/p&gt; 
&lt;p&gt;6.64位设备需要46XXX版本的X5内核，但32位设备需要45XXX版本的内核，考虑到大多数需要X5内核的设备都是32位机器，故在apk集成32位X5内核，并在64位设备暂时禁用X5安装（经测试，在64位设备安装32位X5内核会导致闪退和无限重启）&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;v1.7.1 更新日志（2024.10.03）&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1.修复应用程序版本号未更新&lt;/p&gt; 
&lt;p&gt;2.允许用户设置是否按上下键时直接换台，而不是弹出换台抽屉&lt;/p&gt; 
&lt;p&gt;3.允许用户设置是否在换台抽屉中按返回键时直接关闭抽屉，而不是返回上一级&lt;/p&gt; 
&lt;p&gt;4.设置界面布局优化&lt;/p&gt; 
&lt;p&gt;5.尝试修复低网速环境下页面无法正常加载问题&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;v1.7 更新日志（2024.09.22）&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;体验调整&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;1.精简Android Studio创建Android TV项目时产生的无用模板文件&lt;/p&gt; 
&lt;p&gt;2.增加一个设置二级界面，增加可自定义换台抽屉字体大小、可定义是否开启双缓冲、可自主决定是否启用X5（仅可用一次）三个选项&lt;/p&gt; 
&lt;p&gt;3.换台抽屉布局文件调整，提供较小、适中（默认）、偏大、特大四种字体大小可自定义&lt;/p&gt; 
&lt;p&gt;4.加入双标签页缓冲加载，使用两个WebView分别加载，换台时继续收看上一个频道等待加载；性能较弱设备可在设置中关闭该功能，提升使用体验&lt;/p&gt; 
&lt;p&gt;5.加入系统webview开关，可自主决定是否启用X5，如系统Webview可以播放则无需关闭该开关（关闭后无法重新开启，关闭后重启后即进入尝试加载X5内核模式）&lt;/p&gt; 
&lt;p&gt;6.上下键打开换台抽屉，再按确认后换台，避免误触&lt;/p&gt; 
&lt;p&gt;7.优化换台体验，修改js代码，提高换台速度&lt;/p&gt; 
&lt;p&gt;8优化央视网换台速度，精简网页元素&lt;/p&gt; 
&lt;p&gt;9.尝试启用X5无图模式，提高网页加载速度&lt;/p&gt; 
&lt;p&gt;10.尝试启用硬件加速&lt;/p&gt; 
&lt;p&gt;11.底部菜单最后一个按钮由“退出程序”修改为“打开设置”&lt;/p&gt; 
&lt;p&gt;12.取消自动开始播放定时任务，降低程序运行资源占用&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;修复Bug&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;1.修复x5内核下异常暂停&lt;/p&gt; 
&lt;p&gt;2.修复WebView抢占焦点&lt;/p&gt; 
&lt;p&gt;3.修正双击返回逻辑错误&lt;/p&gt; 
&lt;p&gt;4.修复后台错误驻留&lt;/p&gt; 
&lt;p&gt;5.启动白屏颜色降低&lt;/p&gt; 
&lt;p&gt;6.精简换台抽屉布局文件，改为程序生成内容，边框设为自适应&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;建议卸载旧版后重新安装，避免出现无法安装、闪退等可能的错误；安卓版本较低的机器，如果已经能够正常使用旧版本，不建议卸载旧版更新，避免新版本无法运行，请以稳定使用优先&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;v1.6.1 更新日志 (2024.06.17)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1.修复闪退的问题&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;v1.6.1 更新日志 (2024.06.06)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1.修复无限全屏的问题&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;v1.6 更新日志 (2024.06.06)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1.【严重】无法打开地方频道&lt;/p&gt; 
&lt;p&gt;2.修复无法在程序内修改音量的问题&lt;/p&gt; 
&lt;p&gt;3.不再自动切换清晰度&lt;/p&gt; 
&lt;p&gt;4.启用网页缓存（仅系统 WebView）&lt;/p&gt; 
&lt;p&gt;5.显示系统 WebView 版本号（安卓 7及以上版本才能显示）&lt;/p&gt; 
&lt;p&gt;6.支持在 GitHub Action 构建，方便调试发版，或者魔改&lt;/p&gt; 
&lt;p&gt;7.加载网页时禁用自动加载图片，减少卡顿（仅系统 WebView）&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;v1.5 更新日志（2024.01.27）&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1.更新菜单键事件逻辑，加入一个底部菜单，并取消原本复杂的双击、单击等机制，使程序更加易用。&lt;/p&gt; 
&lt;p&gt;2.修改换台菜单逻辑，将原本的弹出界面调整为二级抽屉式菜单，同时改为按确认键触发，更加符合用户的使用习惯；在打开换台界面时，自动切换到目前正在播放的频道。&lt;/p&gt; 
&lt;p&gt;3.增加一个提示，在换台时会提示目前调用的是系统Webview内核还是腾讯X5内核。&lt;/p&gt; 
&lt;p&gt;4.修复偶发性的卫视频道播放静音问题。&lt;/p&gt; 
&lt;p&gt;5.额外更新一个调用系统WebView的版本&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;v1.4 更新日志（2024.01.21）&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1.增加央视频的北京卫视、江苏卫视等21个地方卫视频道。&lt;/p&gt; 
&lt;p&gt;2.尝试修复视频播放暂停的问题，暂时恢复确认键的暂停功能，但是暂停后会自动重新开始播放，仅用于增强兼容性。&lt;/p&gt; 
&lt;p&gt;3.增加双击确认键可以调整全屏/退出全屏的功能。&lt;/p&gt; 
&lt;p&gt;4.遥控器左右键可以缩放网页，增强应用兼容性。&lt;/p&gt; 
&lt;p&gt;5.修改图标、应用名称、增加leanback设置，在原生Android TV启动器上也可以正常显示图标。&lt;/p&gt; 
&lt;p&gt;6.增加频道选择界面的台号显示，方便数字键换台使用。&lt;/p&gt; 
&lt;p&gt;7.最低安装限制调整为安卓4.4，API 19。&lt;/p&gt; 
&lt;p&gt;8.本次更新中，出现了偶发性的卫视频道缩放不正常问题，经测试退出应用再重新打开后可以解决；由于较难复现，我目前不知道问题产生的原因。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;v1.3 更新日志（2024.01.20）&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1.调用本地x5内核，将x5内核集成到安装包中，提高x5内核调用的成功率。&lt;/p&gt; 
&lt;p&gt;2.自动播放视频，并且禁用确认键暂停功能。&lt;/p&gt; 
&lt;p&gt;3.修复清晰度选择导致的无法全屏和播放的问题，解决CCTV-6、CCTV-3两个频道由于没有超清清晰度无法选择导致不能全屏和正常播放的问题。&lt;/p&gt; 
&lt;p&gt;4.增加频道选择菜单，按菜单键激活后可直接选择需要切换的频道。&lt;/p&gt; 
&lt;p&gt;5.修改操作逻辑，按确定键显示当前频道信息、单击菜单键显示频道列表、双击菜单键刷新当前网页。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;v1.2 更新日志（2024.01.05）&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1.在换台时显示一个“正在切换频道”覆盖层，优化使用体验&lt;/p&gt; 
&lt;p&gt;2.增加换台后当前频道和当前频道节目预告提示&lt;/p&gt; 
&lt;p&gt;3.修改按键逻辑，单击菜单键改为显示当前频道和节目信息，长按菜单键改为刷新当前页面&lt;/p&gt; 
&lt;p&gt;4.改为使用腾讯x5内核，提高程序兼容性&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;下载并安装本软件，即代表您已阅读并同意&lt;a href="https://rule.tencent.com/rule/preview/1c4e2b4b-d0f6-4a75-a5c6-1cfce00a390d"&gt;腾讯浏览服务X5网页引擎隐私保护规则&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;v1.1 更新日志（2024.01.04）&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1.优化返回退出逻辑，需要按两次返回键才会退出，避免误触&lt;/p&gt; 
&lt;p&gt;2.增加数字键换台功能，用户可以通过遥控器上的数字键直接输入台号换台。备注：18号 CCTV-5+ 体育赛事、19号 CCTV-4 中文国际（欧）、20号 CCTV-4 中文国际（美）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenBAS-Platform/openbas</title>
      <link>https://github.com/OpenBAS-Platform/openbas</link>
      <description>&lt;p&gt;Open Adversary Exposure Validation Platform&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;a href="https://openbas.io"&gt;&lt;img src="https://raw.githubusercontent.com/OpenBAS-Platform/openbas/master/.github/img/logo_openbas.png" alt="OpenBAS"&gt;&lt;/a&gt; &lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://openbas.io" alt="Website"&gt;&lt;img src="https://img.shields.io/badge/website-openbas.io-blue.svg?sanitize=true"&gt;&lt;/a&gt; &lt;a href="https://docs.openbas.io" alt="Documentation"&gt;&lt;img src="https://img.shields.io/badge/documentation-latest-orange.svg?sanitize=true"&gt;&lt;/a&gt; &lt;a href="https://community.filigran.io" alt="Slack"&gt;&lt;img src="https://img.shields.io/badge/slack-3K%2B%20members-4A154B"&gt;&lt;/a&gt; &lt;a href="https://drone.filigran.io/OpenBAS-Platform/openbas"&gt;&lt;img src="https://drone.filigran.io/api/badges/OpenBAS-Platform/openbas/status.svg?sanitize=true"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/OpenBAS-Platform/openbas"&gt;&lt;img src="https://codecov.io/gh/OpenBAS-Platform/openbas/graph/badge.svg?sanitize=true"&gt;&lt;/a&gt; &lt;a href="https://deepscan.io/dashboard#view=project&amp;amp;tid=11710&amp;amp;pid=14631&amp;amp;bid=276803"&gt;&lt;img src="https://deepscan.io/api/teams/11710/projects/14631/branches/276803/badge/grade.svg?sanitize=true" alt="DeepScan grade"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/u/openbas" alt="Docker pulls"&gt;&lt;img src="https://img.shields.io/docker/pulls/openbas/platform"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;OpenBAS is an open source platform allowing organizations to plan, schedule and conduct cyber adversary simulation campaign and tests.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/OpenBAS-Platform/openbas/master/.github/img/screenshot.png" alt="Screenshot" title="Screenshot"&gt;&lt;/p&gt; 
&lt;h2&gt;Objective&lt;/h2&gt; 
&lt;p&gt;The goal is to create a powerful, reliable and open source tool to effectively plan and play all types of simulations, training and exercises from the technical level to the strategic one. Also, the platform is able to give you a proper overview of any security gaps regarding actual threats with knowledge coming from the &lt;a href="https://opencti.io"&gt;OpenCTI platform&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;OpenBAS aims to respond to these issues, which not only concern state services but also many private organizations. With different modules (scenarios, teams, simulations, verification of means of communication, encryption, etc.), the platform offers advantages such as collaborative work, real-time monitoring, statistics or the management of feedback.&lt;/p&gt; 
&lt;p&gt;Finally, OpenBAS supports different types of inject, allowing the tool to be integrated with emails, SMS platforms, social medias, alarm systems, etc. All currently supported integration can be found in the &lt;a href="https://docs.openbas.io/latest/development/injectors/"&gt;OpenBAS ecosystem&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Editions of the platform&lt;/h2&gt; 
&lt;p&gt;OpenBAS platform has 2 different editions: Community (CE) and Enterprise (EE). The purpose of the Enterprise Edition is to provide &lt;a href="https://filigran.io/offering/subscribe"&gt;additional and powerful features&lt;/a&gt; which require specific investments in research and development. You can enable the Enterprise Edition directly in the settings of the platform.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenBAS Community Edition, licensed under the &lt;a href="https://raw.githubusercontent.com/OpenBAS-Platform/openbas/master/LICENSE"&gt;Apache 2, Version 2.0 license&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;OpenBAS Enterprise Edition, licensed under the &lt;a href="https://raw.githubusercontent.com/OpenBAS-Platform/openbas/master/LICENSE"&gt;Enterprise Edition license&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To understand what OpenBAS Enterprise Edition brings in terms of features, just check the &lt;a href="https://filigran.io/offering/subscribe"&gt;Enterprise Editions page&lt;/a&gt; on the Filigran website. You can also try this edition by enabling it in the settings of the platform.&lt;/p&gt; 
&lt;h2&gt;Documentation and demonstration&lt;/h2&gt; 
&lt;p&gt;If you want to know more on OpenBAS, you can read the &lt;a href="https://docs.openbas.io"&gt;documentation on the tool&lt;/a&gt;. If you wish to discover how the OpenBAS platform is working, a &lt;a href="https://demo.openbas.io"&gt;demonstration instance&lt;/a&gt; is available and open to everyone. This instance is reset every night and is based on reference data maintained by the OpenBAS developers.&lt;/p&gt; 
&lt;h2&gt;Releases download&lt;/h2&gt; 
&lt;p&gt;The releases are available on the &lt;a href="https://github.com/OpenBAS-Platform/openbas/releases"&gt;Github releases page&lt;/a&gt;. You can also access the &lt;a href="https://releases.openbas.io"&gt;rolling release package&lt;/a&gt; generated from the mater branch of the repository.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;All you need to install the OpenBAS platform can be found in the &lt;a href="https://docs.openbas.io/latest/deployment/installation/"&gt;official documentation&lt;/a&gt;. For installation, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.openbas.io/latest/deployment/installation/#using-docker"&gt;Use Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.openbas.io/latest/deployment/installation/#manual-installation"&gt;Install manually&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Code of Conduct&lt;/h3&gt; 
&lt;p&gt;OpenBAS has adopted a &lt;a href="https://raw.githubusercontent.com/OpenBAS-Platform/openbas/master/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; that we expect project participants to adhere to. Please read the &lt;a href="https://raw.githubusercontent.com/OpenBAS-Platform/openbas/master/CODE_OF_CONDUCT.md"&gt;full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; 
&lt;h3&gt;Contributing Guide&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href="https://raw.githubusercontent.com/OpenBAS-Platform/openbas/master/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to OpenBAS.&lt;/p&gt; 
&lt;h3&gt;Beginner friendly issues&lt;/h3&gt; 
&lt;p&gt;To help you get you familiar with our contribution process, we have a list of &lt;a href="https://github.com/OpenBAS-Platform/openbas/labels/good%20first%20issue"&gt;beginner friendly issues&lt;/a&gt; which are fairly easy to implement. This is a great place to get started.&lt;/p&gt; 
&lt;h3&gt;Development&lt;/h3&gt; 
&lt;p&gt;If you want to actively help OpenBAS, we created a &lt;a href="https://docs.openbas.io/latest/development/environment_ubuntu/"&gt;dedicated documentation&lt;/a&gt; about the deployment of a development environment and how to start the source code modification.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;h3&gt;Status &amp;amp; bugs&lt;/h3&gt; 
&lt;p&gt;Currently OpenBAS is under heavy development, if you wish to report bugs or ask for new features, you can directly use the &lt;a href="https://github.com/OpenBAS-Platform/openbas/issues"&gt;Github issues module&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Discussion&lt;/h3&gt; 
&lt;p&gt;If you need support or you wish to engage a discussion about the OpenBAS platform, feel free to join us on our &lt;a href="https://community.filigran.io"&gt;Slack channel&lt;/a&gt;. You can also send us an email to &lt;a href="mailto:contact@filigran.io"&gt;contact@filigran.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;h3&gt;Authors&lt;/h3&gt; 
&lt;p&gt;OpenBAS is a product designed and developed by the company &lt;a href="https://filigran.io"&gt;Filigran&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://filigran.io" alt="Filigran"&gt;&lt;img src="https://raw.githubusercontent.com/OpenBAS-Platform/openbas/master/.github/img/logo_filigran.png" width="300"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Data Collection&lt;/h3&gt; 
&lt;h4&gt;Usage telemetry&lt;/h4&gt; 
&lt;p&gt;To improve the features and the performances of OpenBAS, the platform collects anonymous statistical data related to its usage and health.&lt;/p&gt; 
&lt;p&gt;You can find all the details on collected data and associated usage in the &lt;a href="https://docs.openbas.io/latest/reference/deployment/telemetry/"&gt;usage telemetry documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>conductor-oss/conductor</title>
      <link>https://github.com/conductor-oss/conductor</link>
      <description>&lt;p&gt;Conductor is an event driven orchestration platform providing durable and highly resilient execution engine for your applications&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;!-- Dark mode logo --&gt; 
 &lt;source srcset="https://github.com/user-attachments/assets/104b3a67-6013-4622-8075-a45da3a9e726" media="(prefers-color-scheme: dark)"&gt; 
 &lt;!-- Light mode logo --&gt; 
 &lt;img src="https://assets.conductor-oss.org/logo.png" alt="Logo"&gt; 
&lt;/picture&gt; 
&lt;h1 align="center" style="border-bottom: none"&gt; Conductor - Scalable Workflow Orchestration &lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/conductor-oss/conductor/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/conductor-oss/conductor?style=social" alt="GitHub stars"&gt;&lt;/a&gt; &lt;a href="https://github.com/conductor-oss/conductor/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/conductor-oss/conductor.svg?sanitize=true" alt="Github release"&gt;&lt;/a&gt; &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/github/license/conductor-oss/conductor.svg?sanitize=true" alt="License"&gt;&lt;/a&gt; &lt;a href="https://join.slack.com/t/orkes-conductor/shared_invite/zt-2vdbx239s-Eacdyqya9giNLHfrCavfaA"&gt;&lt;img src="https://img.shields.io/badge/Slack-Join%20the%20Community-blueviolet?logo=slack" alt="Conductor Slack"&gt;&lt;/a&gt; &lt;a href="https://conductor-oss.org"&gt;&lt;img src="https://img.shields.io/badge/Conductor%20OSS-Visit%20Site-blue" alt="Conductor OSS"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Conductor is an open-source orchestration engine built at Netflix to help developers manage microservices and event-driven workflows. Today, it’s actively maintained by the team at &lt;a href="https://orkes.io"&gt;Orkes&lt;/a&gt; and a growing &lt;a href="https://orkes-conductor.slack.com/join/shared_invite/zt-2vdbx239s-Eacdyqya9giNLHfrCavfaA#/shared-invite/email"&gt;community of contributors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/4azDdDlx27M"&gt;&lt;img src="https://github.com/user-attachments/assets/6153aa58-8ad1-4ec5-93d1-38ba1b83e3f4" alt="conductor_oss_getting_started"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#what-is-conductor"&gt;What is Conductor?&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#key-benefits"&gt;Key benefits&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#getting-started"&gt;Getting Started with Docker&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#quick-start-guide"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#create-your-first-workflow"&gt;Create your first workflow&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#build-from-source"&gt;Build from source&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#database-specifications"&gt;Database Specifications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#conductor-oss-roadmap"&gt;Conductor Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#contributors"&gt;How to Contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#resources"&gt;Additional Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#slack-community"&gt;Community &amp;amp; Support&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;What is Conductor?&lt;/h1&gt; 
&lt;p&gt;Conductor (or &lt;a href="https://netflixtechblog.com/netflix-conductor-a-microservices-orchestrator-2e8d4771bf40"&gt;Netflix Conductor&lt;/a&gt;) is a microservices orchestration engine for distributed and asynchronous workflows. It empowers developers to create workflows that define interactions between services, databases, and other external systems.&lt;/p&gt; 
&lt;p&gt;Conductor is designed to enable flexible, resilient, and scalable workflows. It allows you to compose services into complex workflows without coupling them tightly, simplifying orchestration across cloud-native applications and enterprise systems alike.&lt;/p&gt; 
&lt;h2&gt;Key benefits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Resilience and Error Handling:&lt;/strong&gt; Conductor enables automatic retries and fallback mechanisms.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalability:&lt;/strong&gt; Built to scale with complex workflows in high-traffic environments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Observability:&lt;/strong&gt; Provides monitoring and debugging capabilities for workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ease of Integration:&lt;/strong&gt; Seamlessly integrates with microservices, external APIs, and legacy systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Workflow as code:&lt;/strong&gt; Define workflows in JSON and manage them with versioning.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rich task types:&lt;/strong&gt; Includes task types like HTTP, JSON, Lambda, Sub Workflow, and Event tasks, allowing for flexible workflow definitions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic workflow management:&lt;/strong&gt; Workflows can evolve independently of the underlying services.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Built-in UI:&lt;/strong&gt; A customizable UI is available to monitor and manage workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible persistence and queue options:&lt;/strong&gt; Use Redis, MySQL, Postgres, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h1&gt;Getting Started with Conductor&lt;/h1&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install Docker Desktop (&lt;a href="https://docs.docker.com/desktop/setup/install/mac-install/"&gt;Mac&lt;/a&gt;, &lt;a href="https://docs.docker.com/desktop/setup/install/windows-install/"&gt;Windows/PC&lt;/a&gt;, &lt;a href="https://docs.docker.com/desktop/setup/install/linux/"&gt;Linux&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Install Java (JDK) 17 or newer&lt;/li&gt; 
 &lt;li&gt;Node 14 for the UI to build 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Earlier versions may work, but are untested&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start guide&lt;/h2&gt; 
&lt;h4&gt;Clone the repo&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/conductor-oss/conductor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Change to new Conductor directory&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cd conductor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Start with Docker Compose (&lt;em&gt;recommended for local deployment&lt;/em&gt;)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker compose -f docker/docker-compose.yaml up
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Create your first workflow&lt;/h4&gt; 
&lt;h5&gt;With the UI:&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://localhost:8127"&gt;http://localhost:8127&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Or the REST API with your preferred HTTP client:&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;p&gt;Check-out the &lt;a href="https://github.com/conductor-oss/conductor/tree/main/docs"&gt;Conductor docs&lt;/a&gt; for additional details&lt;/p&gt; 
&lt;hr&gt; 
&lt;h1&gt;Database Specifications&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;The default persistence used is Redis&lt;/li&gt; 
 &lt;li&gt;The indexing backend is &lt;a href="https://www.elastic.co/"&gt;Elasticsearch&lt;/a&gt; (7.x)&lt;/li&gt; 
 &lt;li&gt;To use &lt;a href="https://opensearch.org/"&gt;Opensearch&lt;/a&gt; (2.x), comment out Elasticsearch import so lucene dependencies don't conflict &lt;a href="https://github.com/conductor-oss/conductor/raw/main/server/build.gradle#L44-L46"&gt;server/build.gradle&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configuration for various database backends&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Backend&lt;/th&gt; 
   &lt;th&gt;Configuration&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Redis + ES7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/docker/server/config/config-redis.properties"&gt;config-redis.properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Postgres&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/docker/server/config/config-postgres.properties"&gt;config-postgres.properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Postgres + ES7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/docker/server/config/config-postgres-es7.properties"&gt;config-postgres-es7.properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MySQL + ES7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/docker/server/config/config-mysql.properties"&gt;config-mysql.properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;Build from source&lt;/h1&gt; 
&lt;p&gt;Build from source and deploy Conductor as a standalone Java application. Configure databases, queues, and environment settings as needed. Follow the &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/docs/devguide/running/source.md"&gt;Building Conductor From Source&lt;/a&gt;&lt;/strong&gt; guide included in this repo.&lt;/p&gt; 
&lt;h2&gt;Available SDKs&lt;/h2&gt; 
&lt;p&gt;Conductor provides several SDKs for interacting with the API and creating custom clients:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/conductor-oss/java-sdk"&gt;&lt;strong&gt;Java SDK:&lt;/strong&gt;&lt;/a&gt; Fully featured for building and executing workflows in Java.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/conductor-oss/python-sdk"&gt;&lt;strong&gt;Python SDK:&lt;/strong&gt;&lt;/a&gt; Python library for creating and managing workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/conductor-oss/javascript-sdk"&gt;&lt;strong&gt;Javascript SDK:&lt;/strong&gt;&lt;/a&gt; For integrating Conductor workflows with Javascript/Typescript-based services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/conductor-oss/go-sdk"&gt;&lt;strong&gt;Go SDK:&lt;/strong&gt;&lt;/a&gt; For integrating Conductor workflows with Go-based services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/conductor-oss/csharp-sdk"&gt;&lt;strong&gt;C# SDK:&lt;/strong&gt;&lt;/a&gt;The conductor-csharp repository provides the client SDKs to build task workers in C#&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each SDK is maintained as part of the Conductor project, providing examples and comprehensive API documentation.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;We welcome contributions from everyone!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Report Issues:&lt;/strong&gt; Found a bug or have a feature request? Open an &lt;a href="https://github.com/conductor-oss/conductor/issues"&gt;issue on GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contribute code:&lt;/strong&gt; Check out our &lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt;, and explore our &lt;a href="https://github.com/conductor-oss/conductor/labels/good%20first%20issue"&gt;Good first issues&lt;/a&gt; for beginner-friendly tasks to tackle first.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contribute to our Docs:&lt;/strong&gt; Contribute edits or updates to keep our &lt;a href="https://github.com/conductor-oss/conductor/tree/main/docs"&gt;documentation&lt;/a&gt; in great shape for the community.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Build a Conductor SDK:&lt;/strong&gt; Need an &lt;a href="https://github.com/conductor-sdk"&gt;SDK&lt;/a&gt; not available for Conductor today? Build your own using the &lt;a href="http://localhost:8080"&gt;Swagger API&lt;/a&gt; included with your local deployment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h1&gt;Community&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://join.slack.com/t/orkes-conductor/shared_invite/zt-2vdbx239s-Eacdyqya9giNLHfrCavfaA"&gt;Join the Conductor Slack&lt;/a&gt;&lt;/strong&gt; channel for community discussions and support.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/conductor-oss/conductor/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=conductor-oss/conductor"&gt; &lt;/a&gt; 
&lt;hr&gt; 
&lt;h1&gt;Conductor OSS Roadmap&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/ROADMAP.md"&gt;See the roadmap for the Conductor&lt;/a&gt; If you would like to participate in the roadmap and development, &lt;a href="https://forms.gle/P2i1xHrxPQLrjzTB7"&gt;please reach out&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Conductor is licensed under the &lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/LICENSE"&gt;Apache 2.0 License ©&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>runelite/runelite</title>
      <link>https://github.com/runelite/runelite</link>
      <description>&lt;p&gt;Open source Old School RuneScape client&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://runelite.net/img/logo.png" alt=""&gt;&lt;/p&gt; 
&lt;h1&gt;runelite &lt;a href="https://github.com/runelite/runelite/actions?query=workflow%3ACI+branch%3Amaster"&gt;&lt;img src="https://github.com/runelite/runelite/workflows/CI/badge.svg?sanitize=true" alt="CI"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/ArdAhnN"&gt;&lt;img src="https://img.shields.io/discord/301497432909414422.svg?sanitize=true" alt="Discord"&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;RuneLite is a free, open source OldSchool RuneScape client.&lt;/p&gt; 
&lt;p&gt;If you have any questions, please join our IRC channel on &lt;a href="http://qchat.rizon.net/?channels=runelite&amp;amp;uio=d4"&gt;irc.rizon.net #runelite&lt;/a&gt; or alternatively our &lt;a href="https://runelite.net/discord"&gt;Discord&lt;/a&gt; server.&lt;/p&gt; 
&lt;h2&gt;Project Layout&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/runelite/runelite/master/cache/src/main/java/net/runelite/cache"&gt;cache&lt;/a&gt; - Libraries used for reading/writing cache files, as well as the data in it&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/runelite/runelite/master/runelite-api/src/main/java/net/runelite/api"&gt;runelite-api&lt;/a&gt; - RuneLite API, interfaces for accessing the client&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/runelite/runelite/master/runelite-client/src/main/java/net/runelite/client"&gt;runelite-client&lt;/a&gt; - Game client with plugins&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Open the project in your IDE as a Maven project, build the root module and then run the RuneLite class in runelite-client.&lt;br&gt; For more information visit the &lt;a href="https://github.com/runelite/runelite/wiki"&gt;RuneLite Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;RuneLite is licensed under the BSD 2-clause license. See the license header in the respective file to be sure.&lt;/p&gt; 
&lt;h2&gt;Contribute and Develop&lt;/h2&gt; 
&lt;p&gt;We've set up a separate document for our &lt;a href="https://github.com/runelite/runelite/raw/master/.github/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bepass-org/oblivion</title>
      <link>https://github.com/bepass-org/oblivion</link>
      <description>&lt;p&gt;Unofficial warp client for android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Oblivion - Unofficial Warp Client for Android&lt;/h1&gt; 
&lt;p&gt;"Internet, for all or none!"&lt;/p&gt; 
&lt;p&gt;Oblivion provides secure, optimized internet access through a user-friendly Android app using cloudflare warp technology&lt;/p&gt; 
&lt;p&gt;It's leveraging &lt;code&gt;bepass-sdk&lt;/code&gt; and a custom Go implementation of WireGuard, it's designed for fast and private online experiences.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/bepass-org/oblivion/main/media/oblivion3.jpg" alt="oblivion3.jpg"&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Secure VPN&lt;/strong&gt;: Custom WireGuard implementation in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Optimized Speeds&lt;/strong&gt;: Enhanced with &lt;code&gt;bepass-sdk&lt;/code&gt; for minimal latency.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User-Friendly&lt;/strong&gt;: Simple, intuitive interface.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Download&lt;/strong&gt;: Grab the APK from our &lt;a href="https://github.com/bepass-org/oblivion/releases"&gt;Releases&lt;/a&gt; page or &lt;a href="https://play.google.com/store/apps/details?id=org.bepass.oblivion"&gt;Google play store&lt;/a&gt; and install it. &lt;a href="https://play.google.com/store/apps/details?id=org.bepass.oblivion"&gt; &lt;img alt="Get it on Google Play" src="https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png" width="165" height="64"&gt; &lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Connect&lt;/strong&gt;: Launch Oblivion and hit the switch button.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Building the Project&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;NDK r26b (26.1.10909125)&lt;/li&gt; 
 &lt;li&gt;Go 1.22&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Follow the steps below to build the Oblivion:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;In Android Studio, navigate to "Build" in the menu bar.&lt;/li&gt; 
 &lt;li&gt;Select "Generate Signed Bundle/APK..."&lt;/li&gt; 
 &lt;li&gt;Choose "APK" and proceed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Get Involved&lt;/h2&gt; 
&lt;p&gt;We're a community-driven project, aiming to make the internet accessible for all. Whether you want to contribute code, suggest features, or need some help, we'd love to hear from you! Check out our &lt;a href="https://github.com/bepass-org/oblivion/issues"&gt;GitHub Issues&lt;/a&gt; or submit a pull request.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements and Credits&lt;/h2&gt; 
&lt;p&gt;This project makes use of several open-source tools and libraries, and we are grateful to the developers and communities behind these projects. In particular, we would like to acknowledge:&lt;/p&gt; 
&lt;h3&gt;Cloudflare Warp&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Project&lt;/strong&gt;: Cloudflare Warp&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Website&lt;/strong&gt;: &lt;a href="https://www.cloudflare.com/products/warp/"&gt;Cloudflare Warp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;License&lt;/strong&gt;: &lt;a href="https://www.cloudflare.com/application/terms/"&gt;License information&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: Cloudflare Warp is a technology that enhances the security and performance of Internet applications. We use it in our project for its efficient and secure network traffic routing capabilities.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;WireGuard-go&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Project&lt;/strong&gt;: WireGuard-go&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Repository&lt;/strong&gt;: &lt;a href="https://github.com/WireGuard/wireguard-go"&gt;WireGuard-go on GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;License&lt;/strong&gt;: &lt;a href="https://github.com/WireGuard/wireguard-go/raw/master/COPYING"&gt;GNU General Public License v2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: WireGuard-go is an implementation of the WireGuard secure network tunnel. It's used in our project to provide fast, modern, and secure VPN tunneling.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please note that the use of these tools is governed by their respective licenses, and you should consult those licenses for terms and conditions of use.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License - see the &lt;a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;CC BY-NC-SA 4.0 License&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;Summary of License&lt;/h3&gt; 
&lt;p&gt;The CC BY-NC-SA 4.0 License is a free, copyleft license suitable for non-commercial use. Here's what it means for using this project:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Attribution (BY)&lt;/strong&gt;: You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;NonCommercial (NC)&lt;/strong&gt;: You may not use the material for commercial purposes.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;ShareAlike (SA)&lt;/strong&gt;: If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This summary is only a brief overview. For the full legal text, please visit the provided link.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>krahets/hello-algo</title>
      <link>https://github.com/krahets/hello-algo</link>
      <description>&lt;p&gt;《Hello 算法》：动画图解、一键运行的数据结构与算法教程。支持 Python, Java, C++, C, C#, JS, Go, Swift, Rust, Ruby, Kotlin, TS, Dart 代码。简体版和繁体版同步更新，English version in translation&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://www.hello-algo.com/"&gt; &lt;img src="https://www.hello-algo.com/index.assets/hello_algo_header.png" width="450"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img style="height: 60px;" src="https://readme-typing-svg.demolab.com?font=Noto+Sans+SC&amp;amp;weight=400&amp;amp;duration=3500&amp;amp;pause=2000&amp;amp;color=21C8B8&amp;amp;center=true&amp;amp;vCenter=true&amp;amp;random=false&amp;amp;width=200&amp;amp;lines=Hello%2C+%E7%AE%97%E6%B3%95+!" alt="hello-algo-typing-svg"&gt; &lt;br&gt; 动画图解、一键运行的数据结构与算法教程 &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.hello-algo.com/"&gt; &lt;img src="https://www.hello-algo.com/index.assets/btn_read_online_dark.svg?sanitize=true" width="145"&gt;&lt;/a&gt; &lt;a href="https://github.com/krahets/hello-algo/releases"&gt; &lt;img src="https://www.hello-algo.com/index.assets/btn_download_pdf_dark.svg?sanitize=true" width="145"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://www.hello-algo.com/index.assets/animation.gif" width="395"&gt; &lt;img src="https://www.hello-algo.com/index.assets/running_code.gif" width="395"&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://img.shields.io/badge/Python-snow?logo=python&amp;amp;logoColor=3776AB" alt=""&gt; &lt;img src="https://img.shields.io/badge/Java-snow?logo=coffeescript&amp;amp;logoColor=FC4C02" alt=""&gt; &lt;img src="https://img.shields.io/badge/C%2B%2B-snow?logo=c%2B%2B&amp;amp;logoColor=00599C" alt=""&gt; &lt;img src="https://img.shields.io/badge/C-snow?logo=c&amp;amp;logoColor=A8B9CC" alt=""&gt; &lt;img src="https://img.shields.io/badge/C%23-snow?logo=csharp&amp;amp;logoColor=512BD4" alt=""&gt; &lt;img src="https://img.shields.io/badge/JavaScript-snow?logo=javascript&amp;amp;logoColor=E9CE30" alt=""&gt; &lt;img src="https://img.shields.io/badge/Go-snow?logo=go&amp;amp;logoColor=00ADD8" alt=""&gt; &lt;img src="https://img.shields.io/badge/Swift-snow?logo=swift&amp;amp;logoColor=F05138" alt=""&gt; &lt;img src="https://img.shields.io/badge/Rust-snow?logo=rust&amp;amp;logoColor=000000" alt=""&gt; &lt;img src="https://img.shields.io/badge/Ruby-snow?logo=ruby&amp;amp;logoColor=CC342D" alt=""&gt; &lt;img src="https://img.shields.io/badge/Kotlin-snow?logo=kotlin&amp;amp;logoColor=7F52FF" alt=""&gt; &lt;img src="https://img.shields.io/badge/TypeScript-snow?logo=typescript&amp;amp;logoColor=3178C6" alt=""&gt; &lt;img src="https://img.shields.io/badge/Dart-snow?logo=dart&amp;amp;logoColor=0175C2" alt=""&gt; &lt;/p&gt; 
&lt;p align="center"&gt; 简体中文 ｜ &lt;a href="https://github.com/krahets/hello-algo/raw/main/zh-hant/README.md"&gt;繁體中文&lt;/a&gt; ｜ &lt;a href="https://github.com/krahets/hello-algo/raw/main/en/README.md"&gt;English&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;关于本书&lt;/h2&gt; 
&lt;p&gt;本项目旨在打造一本开源免费、新手友好的数据结构与算法入门教程。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;全书采用动画图解，内容清晰易懂、学习曲线平滑，引导初学者探索数据结构与算法的知识地图。&lt;/li&gt; 
 &lt;li&gt;源代码可一键运行，帮助读者在练习中提升编程技能，了解算法工作原理和数据结构底层实现。&lt;/li&gt; 
 &lt;li&gt;提倡读者互助学习，欢迎大家在评论区提出问题与分享见解，在交流讨论中共同进步。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;若本书对您有所帮助，请在页面右上角点个 Star &lt;span&gt;⭐&lt;/span&gt; 支持一下，谢谢！&lt;/p&gt; 
&lt;h2&gt;推荐语&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;“一本通俗易懂的数据结构与算法入门书，引导读者手脑并用地学习，强烈推荐算法初学者阅读。”&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;—— 邓俊辉，清华大学计算机系教授&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;“如果我当年学数据结构与算法的时候有《Hello 算法》，学起来应该会简单 10 倍！”&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;—— 李沐，亚马逊资深首席科学家&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;贡献&lt;/h2&gt; 
&lt;p&gt;本开源书仍在持续更新之中，欢迎您参与本项目，一同为读者提供更优质的学习内容。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.hello-algo.com/chapter_appendix/contribution/"&gt;内容修正&lt;/a&gt;：请您协助修正或在评论区指出语法错误、内容缺失、文字歧义、无效链接或代码 bug 等问题。&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/krahets/hello-algo/issues/15"&gt;代码转译&lt;/a&gt;：期待您贡献各种语言代码，已支持 Python、Java、C++、Go、JavaScript 等 12 门编程语言。&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/krahets/hello-algo/issues/914"&gt;中译英&lt;/a&gt;：诚邀您加入我们的翻译小组，成员主要来自计算机相关专业、英语专业和英文母语者。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;欢迎您提出宝贵意见和建议，如有任何问题请提交 Issues 或微信联系 &lt;code&gt;krahets-jyd&lt;/code&gt; 。&lt;/p&gt; 
&lt;p&gt;感谢本开源书的每一位撰稿人，是他们的无私奉献让这本书变得更好，他们是：&lt;/p&gt; 
&lt;p align="left"&gt; &lt;a href="https://github.com/krahets/hello-algo/graphs/contributors"&gt; &lt;img width="770" src="https://contrib.rocks/image?repo=krahets/hello-algo&amp;amp;max=300&amp;amp;columns=16"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The texts, code, images, photos, and videos in this repository are licensed under &lt;a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;CC BY-NC-SA 4.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>androidx/media</title>
      <link>https://github.com/androidx/media</link>
      <description>&lt;p&gt;Jetpack Media3 support libraries for media use cases, including ExoPlayer, an extensible media player for Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AndroidX Media&lt;/h1&gt; 
&lt;p&gt;AndroidX Media is a collection of libraries for implementing media use cases on Android, including local playback (via ExoPlayer), video editing (via Transformer) and media sessions.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href="https://developer.android.com/guide/topics/media/media3"&gt;developer guide&lt;/a&gt; provides a wealth of information.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://developer.android.com/reference/androidx/media3/common/package-summary"&gt;class reference&lt;/a&gt; documents the classes and methods.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://raw.githubusercontent.com/androidx/media/release/RELEASENOTES.md"&gt;release notes&lt;/a&gt; document the major changes in each release.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://developer.android.com/media"&gt;media dev center&lt;/a&gt; provides samples and guidelines.&lt;/li&gt; 
 &lt;li&gt;Follow our &lt;a href="https://medium.com/google-exoplayer"&gt;developer blog&lt;/a&gt; to keep up to date with the latest developments!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Migration for existing ExoPlayer and MediaSession projects&lt;/h2&gt; 
&lt;p&gt;You'll find a &lt;a href="https://developer.android.com/guide/topics/media/media3/getting-started/migration-guide"&gt;migration guide for existing ExoPlayer and MediaSession users&lt;/a&gt; on developer.android.com.&lt;/p&gt; 
&lt;h2&gt;API stability&lt;/h2&gt; 
&lt;p&gt;AndroidX Media releases provide API stability guarantees, ensuring that the API surface remains backwards compatible for the most commonly used APIs. APIs intended for more advanced use cases are marked as unstable. To use an unstable method or class without lint warnings, you’ll need to add the OptIn annotation before using it. For more information see the &lt;a href="https://github.com/androidx/media/raw/main/libraries/common/src/main/java/androidx/media3/common/util/UnstableApi.java"&gt;UnstableApi&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;Using the libraries&lt;/h2&gt; 
&lt;p&gt;You can get the libraries from &lt;a href="https://developer.android.com/studio/build/dependencies#google-maven"&gt;the Google Maven repository&lt;/a&gt;. It's also possible to clone this GitHub repository and depend on the modules locally.&lt;/p&gt; 
&lt;h3&gt;From the Google Maven repository&lt;/h3&gt; 
&lt;h4&gt;1. Add module dependencies&lt;/h4&gt; 
&lt;p&gt;The easiest way to get started using AndroidX Media is to add gradle dependencies on the libraries you need in the &lt;code&gt;build.gradle.kts&lt;/code&gt; file of your app module.&lt;/p&gt; 
&lt;p&gt;For example, to depend on ExoPlayer with DASH playback support and UI components you can add dependencies on the modules like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-kotlin"&gt;implementation("androidx.media3:media3-exoplayer:1.X.X")
implementation("androidx.media3:media3-exoplayer-dash:1.X.X")
implementation("androidx.media3:media3-ui:1.X.X")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or in Gradle Groovy DSL &lt;code&gt;build.gradle&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;implementation 'androidx.media3:media3-exoplayer:1.X.X'
implementation 'androidx.media3:media3-exoplayer-dash:1.X.X'
implementation 'androidx.media3:media3-ui:1.X.X'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;where &lt;code&gt;1.X.X&lt;/code&gt; is your preferred version. All modules must be the same version.&lt;/p&gt; 
&lt;p&gt;Please see the &lt;a href="https://developer.android.com/jetpack/androidx/releases/media3#declaring_dependencies"&gt;AndroidX Media3 developer.android.com page&lt;/a&gt; for more information, including a full list of library modules.&lt;/p&gt; 
&lt;p&gt;This repository includes some modules that depend on external libraries that need to be built manually, and are not available from the Maven repository. Please see the individual READMEs under the &lt;a href="https://raw.githubusercontent.com/androidx/media/release/libraries"&gt;libraries directory&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h4&gt;2. Turn on Java 8 support&lt;/h4&gt; 
&lt;p&gt;If not enabled already, you also need to turn on Java 8 support in all &lt;code&gt;build.gradle.kts&lt;/code&gt; files depending on AndroidX Media, by adding the following to the &lt;code&gt;android&lt;/code&gt; section:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-kotlin"&gt;compileOptions {
  targetCompatibility = JavaVersion.VERSION_1_8
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or in Gradle Groovy DSL &lt;code&gt;build.gradle&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;compileOptions {
  targetCompatibility JavaVersion.VERSION_1_8
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Locally&lt;/h3&gt; 
&lt;p&gt;Cloning the repository and depending on the modules locally is required when using some libraries. It's also a suitable approach if you want to make local changes, or if you want to use the &lt;code&gt;main&lt;/code&gt; branch.&lt;/p&gt; 
&lt;p&gt;First, clone the repository into a local directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/androidx/media.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, add the following to your project's &lt;code&gt;settings.gradle.kts&lt;/code&gt; file, replacing &lt;code&gt;path/to/media&lt;/code&gt; with the path to your local copy:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-kotlin"&gt;(gradle as ExtensionAware).extra["androidxMediaModulePrefix"] = "media3-"
apply(from = file("path/to/media/core_settings.gradle"))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or in Gradle Groovy DSL &lt;code&gt;settings.gradle&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;gradle.ext.androidxMediaModulePrefix = 'media3-'
apply from: file("path/to/media/core_settings.gradle")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should now see the AndroidX Media modules appear as part of your project. You can depend on them from &lt;code&gt;build.gradle.kts&lt;/code&gt; as you would on any other local module, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-kotlin"&gt;implementation(project(":media3-lib-exoplayer"))
implementation(project(":media3-lib-exoplayer-dash"))
implementation(project(":media3-lib-ui"))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or in Gradle Groovy DSL &lt;code&gt;build.gradle&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;implementation project(':media3-lib-exoplayer')
implementation project(':media3-lib-exoplayer-dash')
implementation project(':media3-lib-ui')
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;MIDI module&lt;/h4&gt; 
&lt;p&gt;By default the &lt;a href="https://raw.githubusercontent.com/androidx/media/release/libraries/decoder_midi"&gt;MIDI module&lt;/a&gt; is disabled as a local dependency, because it requires additional Maven repository config. If you want to use it as a local dependency, please configure the JitPack repository as &lt;a href="https://raw.githubusercontent.com/androidx/media/release/libraries/decoder_midi/README.md#getting-the-module"&gt;described in the module README&lt;/a&gt;, and then enable building the module in your &lt;code&gt;settings.gradle.kts&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-kotlin"&gt;gradle.extra.apply {
  set("androidxMediaEnableMidiModule", true)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or in Gradle Groovy DSL &lt;code&gt;settings.gradle&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;gradle.ext.androidxMediaEnableMidiModule = true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Developing AndroidX Media&lt;/h2&gt; 
&lt;h4&gt;Project branches&lt;/h4&gt; 
&lt;p&gt;Development work happens on the &lt;code&gt;main&lt;/code&gt; branch. Pull requests should normally be made to this branch.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;release&lt;/code&gt; branch holds the most recent stable release.&lt;/p&gt; 
&lt;h4&gt;Using Android Studio&lt;/h4&gt; 
&lt;p&gt;To develop AndroidX Media using Android Studio, simply open the project in the root directory of this repository.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>apache/paimon</title>
      <link>https://github.com/apache/paimon</link>
      <description>&lt;p&gt;Apache Paimon is a lake format that enables building a Realtime Lakehouse Architecture with Flink and Spark for both streaming and batch operations.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://github.com/apache/paimon/raw/master/docs/static/paimon-simple.png" alt="Paimon"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.apache.org/licenses/LICENSE-2.0.html"&gt;&lt;img src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?sanitize=true" alt="License"&gt;&lt;/a&gt; &lt;a href="https://the-asf.slack.com/archives/C053Q2NCW8G"&gt;&lt;img src="https://img.shields.io/badge/slack-join-orange.svg?sanitize=true" alt="Get on Slack"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Apache Paimon is a lake format that enables building a Realtime Lakehouse Architecture with Flink and Spark for both streaming and batch operations. Paimon innovatively combines lake format and LSM structure, bringing realtime streaming updates into the lake architecture.&lt;/p&gt; 
&lt;p&gt;Background and documentation are available at &lt;a href="https://paimon.apache.org"&gt;https://paimon.apache.org&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Paimon&lt;/code&gt;'s former name was &lt;code&gt;Flink Table Store&lt;/code&gt;, developed from the Flink community. The architecture refers to some design concepts of Iceberg. Thanks to Apache Flink and Apache Iceberg.&lt;/p&gt; 
&lt;h2&gt;Collaboration&lt;/h2&gt; 
&lt;p&gt;Paimon tracks issues in GitHub and prefers to receive contributions as pull requests.&lt;/p&gt; 
&lt;h2&gt;Mailing Lists&lt;/h2&gt; 
&lt;table class="table table-striped"&gt; 
 &lt;thead&gt; 
  &lt;tr&gt;
   &lt;th class="text-center"&gt;Name&lt;/th&gt; 
   &lt;th class="text-center"&gt;Subscribe&lt;/th&gt; 
   &lt;th class="text-center"&gt;Digest&lt;/th&gt; 
   &lt;th class="text-center"&gt;Unsubscribe&lt;/th&gt; 
   &lt;th class="text-center"&gt;Post&lt;/th&gt; 
   &lt;th class="text-center"&gt;Archive&lt;/th&gt; 
  &lt;/tr&gt;
 &lt;/thead&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;strong&gt;user&lt;/strong&gt;@paimon.apache.org&lt;br&gt; &lt;small&gt;User support and questions mailing list&lt;/small&gt; &lt;/td&gt; 
   &lt;td class="text-center"&gt;&lt;i class="fa fa-pencil-square-o"&gt;&lt;/i&gt; &lt;a href="mailto:user-subscribe@paimon.apache.org"&gt;Subscribe&lt;/a&gt;&lt;/td&gt; 
   &lt;td class="text-center"&gt;&lt;i class="fa fa-pencil-square-o"&gt;&lt;/i&gt; &lt;a href="mailto:user-digest-subscribe@paimon.apache.org"&gt;Subscribe&lt;/a&gt;&lt;/td&gt; 
   &lt;td class="text-center"&gt;&lt;i class="fa fa-pencil-square-o"&gt;&lt;/i&gt; &lt;a href="mailto:user-unsubscribe@paimon.apache.org"&gt;Unsubscribe&lt;/a&gt;&lt;/td&gt; 
   &lt;td class="text-center"&gt;&lt;i class="fa fa-pencil-square-o"&gt;&lt;/i&gt; &lt;a href="mailto:user@paimon.apache.org"&gt;Post&lt;/a&gt;&lt;/td&gt; 
   &lt;td class="text-center"&gt; &lt;a href="https://lists.apache.org/list.html?user@paimon.apache.org"&gt;Archives&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;strong&gt;dev&lt;/strong&gt;@paimon.apache.org&lt;br&gt; &lt;small&gt;Development related discussions&lt;/small&gt; &lt;/td&gt; 
   &lt;td class="text-center"&gt;&lt;i class="fa fa-pencil-square-o"&gt;&lt;/i&gt; &lt;a href="mailto:dev-subscribe@paimon.apache.org"&gt;Subscribe&lt;/a&gt;&lt;/td&gt; 
   &lt;td class="text-center"&gt;&lt;i class="fa fa-pencil-square-o"&gt;&lt;/i&gt; &lt;a href="mailto:dev-digest-subscribe@paimon.apache.org"&gt;Subscribe&lt;/a&gt;&lt;/td&gt; 
   &lt;td class="text-center"&gt;&lt;i class="fa fa-pencil-square-o"&gt;&lt;/i&gt; &lt;a href="mailto:dev-unsubscribe@paimon.apache.org"&gt;Unsubscribe&lt;/a&gt;&lt;/td&gt; 
   &lt;td class="text-center"&gt;&lt;i class="fa fa-pencil-square-o"&gt;&lt;/i&gt; &lt;a href="mailto:dev@paimon.apache.org"&gt;Post&lt;/a&gt;&lt;/td&gt; 
   &lt;td class="text-center"&gt; &lt;a href="https://lists.apache.org/list.html?dev@paimon.apache.org"&gt;Archives&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;&lt;b style="color:red"&gt;Please make sure you are subscribed to the mailing list you are posting to!&lt;/b&gt; If you are not subscribed to the mailing list, your message will either be rejected (dev@ list) or you won't receive the response (user@ list).&lt;/p&gt; 
&lt;h2&gt;Slack&lt;/h2&gt; 
&lt;p&gt;You can join the Paimon community on Slack. Paimon channel is in ASF Slack workspace.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Anyone with an @apache.org email address can become a full member of the ASF Slack workspace. Search &lt;a href="https://the-asf.slack.com/archives/C053Q2NCW8G"&gt;Paimon channel&lt;/a&gt; and join it.&lt;/li&gt; 
 &lt;li&gt;If you don't have an @apache.org email address, you can email to &lt;code&gt;user@paimon.apache.org&lt;/code&gt; to apply for an &lt;a href="https://infra.apache.org/slack.html"&gt;ASF Slack invitation&lt;/a&gt;. Then join &lt;a href="https://the-asf.slack.com/archives/C053Q2NCW8G"&gt;Paimon channel&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;JDK 8/11 is required for building the project. Maven version &amp;gt;=3.6.3.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run the &lt;code&gt;mvn clean install -DskipTests&lt;/code&gt; command to build the project.&lt;/li&gt; 
 &lt;li&gt;Run the &lt;code&gt;mvn spotless:apply&lt;/code&gt; to format the project (both Java and Scala).&lt;/li&gt; 
 &lt;li&gt;IDE: Mark &lt;code&gt;paimon-common/target/generated-sources/antlr4&lt;/code&gt; as Sources Root.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to Contribute&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://paimon.apache.org/docs/master/project/contributing/"&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The code in this repository is licensed under the &lt;a href="https://raw.githubusercontent.com/apache/paimon/master/LICENSE"&gt;Apache Software License 2&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>material-components/material-components-android</title>
      <link>https://github.com/material-components/material-components-android</link>
      <description>&lt;p&gt;Modular and customizable Material Design UI components for Android&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://discord.gg/material-components"&gt;&lt;img src="https://img.shields.io/discord/259087343246508035.svg?sanitize=true" alt="Chat"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Material Components for Android&lt;/h1&gt; 
&lt;p&gt;Material Components for Android (MDC-Android) help developers execute &lt;a href="https://www.material.io"&gt;Material Design&lt;/a&gt;. Developed by a core team of engineers and UX designers at Google, these components enable a reliable development workflow to build beautiful and functional Android apps.&lt;/p&gt; 
&lt;p&gt;Material Components for Android is a drop-in replacement for Android's Design Support Library.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;For information on how to get started with Material Components for Android, take a look at our &lt;a href="https://raw.githubusercontent.com/material-components/material-components-android/master/docs/getting-started.md"&gt;Getting Started&lt;/a&gt; guide.&lt;/p&gt; 
&lt;h2&gt;Submitting Bugs or Feature Requests&lt;/h2&gt; 
&lt;p&gt;For usage questions: ask on &lt;a href="http://stackoverflow.com/questions/tagged/material-components"&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Bugs or feature requests should be submitted at our &lt;a href="https://github.com/material-components/material-components-android/issues"&gt;GitHub Issues section&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Note: If your issue or feature request is for Material Jetpack Compose, please file it at the &lt;a href="https://issuetracker.google.com/issues/new?component=742043&amp;amp;template=1346811"&gt;Compose Issue Tracker&lt;/a&gt; instead.&lt;/p&gt; 
&lt;h2&gt;Useful Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/material-components/material-components-android/tree/master/lib/"&gt;All Components&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/material-components/material-components-android/master/docs/getting-started.md"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/material-components/material-components-android/master/docs/contributing.md"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/material-components/material-components-android/master/docs/using-snapshot-version.md"&gt;Using Snapshot Version&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/material-components/material-components-android/master/docs/building-from-source.md"&gt;Building From Source&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/material-components/material-components-android/master/docs/catalog-app.md"&gt;Catalog App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.android.com/reference/com/google/android/material/classes"&gt;Class documentation&lt;/a&gt; (external site)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.stackoverflow.com/questions/tagged/material-components+android"&gt;MDC-Android on Stack Overflow&lt;/a&gt; (external site)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.android.com/training/material/index.html"&gt;Android Developer’s Guide&lt;/a&gt; (external site)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.material.io"&gt;Material.io&lt;/a&gt; (external site)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://material.google.com"&gt;Material Design Guidelines&lt;/a&gt; (external site)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/material-components/material-components-android/master/docs/directorystructure.md"&gt;Directory structure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/material-components/material-components-android/master/docs/components/"&gt;Components&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>microg/GmsCore</title>
      <link>https://github.com/microg/GmsCore</link>
      <description>&lt;p&gt;Free implementation of Play Services&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;microG Services&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/microg/GmsCore/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/microg/GmsCore/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build status"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/microg/GmsCore/master/TRANSLATION.md"&gt; &lt;img src="https://hosted.weblate.org/widget/microg/svg-badge.svg?sanitize=true" alt="Translation status"&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;microG Services is a FLOSS (Free/Libre Open Source Software) framework to allow applications designed for Google Play Services to run on systems, where Play Services is not available.&lt;/p&gt; 
&lt;h3&gt;Please refer to the &lt;a href="https://github.com/microg/GmsCore/wiki"&gt;wiki&lt;/a&gt; for downloads and instructions&lt;/h3&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;If you'd like to help translate microG, take a look at &lt;a href="https://raw.githubusercontent.com/microg/GmsCore/master/TRANSLATION.md"&gt;TRANSLATION&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright 2013-2024 microG Project Team

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>TeamNewPipe/NewPipe</title>
      <link>https://github.com/TeamNewPipe/NewPipe</link>
      <description>&lt;p&gt;A libre lightweight streaming front-end for Android.&lt;/p&gt;&lt;hr&gt;&lt;h3 align="center"&gt;We are &lt;i&gt;rewriting&lt;/i&gt; large chunks of the codebase, to bring about &lt;a href="https://newpipe.net/blog/pinned/announcement/newpipe-0.27.6-rewrite-team-states/#the-refactor"&gt;a modern and stable NewPipe&lt;/a&gt;! You can download nightly builds &lt;a href="https://github.com/TeamNewPipe/NewPipe-refactor-nightly/releases"&gt;here&lt;/a&gt;.&lt;/h3&gt; 
&lt;h4 align="center"&gt;Please work on the &lt;code&gt;refactor&lt;/code&gt; branch if you want to contribute &lt;i&gt;new features&lt;/i&gt;. The current codebase is in maintenance mode and will only receive &lt;i&gt;bugfixes&lt;/i&gt;.&lt;/h4&gt; 
&lt;p align="center"&gt;&lt;a href="https://newpipe.net"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/assets/new_pipe_icon_5.png" width="150"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2 align="center"&gt;&lt;b&gt;NewPipe&lt;/b&gt;&lt;/h2&gt; 
&lt;h4 align="center"&gt;A libre lightweight streaming front-end for Android.&lt;/h4&gt; 
&lt;p align="center"&gt;&lt;a href="https://f-droid.org/packages/org.schabi.newpipe/"&gt;&lt;img src="https://fdroid.gitlab.io/artwork/badge/get-it-on-en.svg?sanitize=true" alt="Get it on F-Droid" width="206/"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/TeamNewPipe/NewPipe/releases" alt="GitHub NewPipe releases"&gt;&lt;img src="https://img.shields.io/github/release/TeamNewPipe/NewPipe.svg?sanitize=true"&gt;&lt;/a&gt; &lt;a href="https://github.com/TeamNewPipe/NewPipe-nightly/releases" alt="GitHub NewPipe nightly releases"&gt;&lt;img src="https://img.shields.io/github/release/TeamNewPipe/NewPipe-nightly.svg?labelColor=purple&amp;amp;label=dev%20nightly"&gt;&lt;/a&gt; &lt;a href="https://github.com/TeamNewPipe/NewPipe-refactor-nightly/releases" alt="GitHub NewPipe refactor nightly releases"&gt;&lt;img src="https://img.shields.io/github/release/TeamNewPipe/NewPipe-refactor-nightly.svg?labelColor=purple&amp;amp;label=refactor%20nightly"&gt;&lt;/a&gt; &lt;a href="https://www.gnu.org/licenses/gpl-3.0" alt="License: GPLv3"&gt;&lt;img src="https://img.shields.io/badge/License-GPL%20v3-blue.svg?sanitize=true"&gt;&lt;/a&gt; &lt;a href="https://github.com/TeamNewPipe/NewPipe/actions" alt="Build Status"&gt;&lt;img src="https://github.com/TeamNewPipe/NewPipe/actions/workflows/ci.yml/badge.svg?branch=dev&amp;amp;event=push"&gt;&lt;/a&gt; &lt;a href="https://hosted.weblate.org/engage/newpipe/" alt="Translation Status"&gt;&lt;img src="https://hosted.weblate.org/widgets/newpipe/-/svg-badge.svg?sanitize=true"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://web.libera.chat/#newpipe" alt="IRC channel: #newpipe"&gt;&lt;img src="https://img.shields.io/badge/IRC%20chat-%23newpipe-brightgreen.svg?sanitize=true"&gt;&lt;/a&gt; &lt;a href="https://matrix.to/#/%23newpipe:matrix.newpipe-ev.de" alt="Matrix channel: #newpipe"&gt;&lt;img src="https://img.shields.io/badge/Matrix%20chat-%23newpipe-blue"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;p align="center"&gt;&lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#screenshots"&gt;Screenshots&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#supported-services"&gt;Supported Services&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#description"&gt;Description&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#features"&gt;Features&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#installation-and-updates"&gt;Installation and updates&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#contribution"&gt;Contribution&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#donate"&gt;Donate&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#license"&gt;License&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt;&lt;a href="https://newpipe.net"&gt;Website&lt;/a&gt; • &lt;a href="https://newpipe.net/blog/"&gt;Blog&lt;/a&gt; • &lt;a href="https://newpipe.net/FAQ/"&gt;FAQ&lt;/a&gt; • &lt;a href="https://newpipe.net/press/"&gt;Press&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;em&gt;Read this document in other languages: &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.de.md"&gt;Deutsch&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/README.md"&gt;English&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.es.md"&gt;Español&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.fr.md"&gt;Français&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.hi.md"&gt;हिन्दी&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.it.md"&gt;Italiano&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.ko.md"&gt;한국어&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.pt_BR.md"&gt;Português Brasil&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.pl.md"&gt;Polski&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.pa.md"&gt;ਪੰਜਾਬੀ &lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.ja.md"&gt;日本語&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.ro.md"&gt;Română&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.so.md"&gt;Soomaali&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.tr.md"&gt;Türkçe&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.zh_TW.md"&gt;正體中文&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.asm.md"&gt;অসমীয়া&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.sr.md"&gt;Српски&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/README.ar.md"&gt;العربية&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!warning] &lt;b&gt;THIS APP IS IN BETA, SO YOU MAY ENCOUNTER BUGS. IF YOU DO, OPEN AN ISSUE IN OUR GITHUB REPOSITORY BY FILLING OUT THE ISSUE TEMPLATE.&lt;/b&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;b&gt;PUTTING NEWPIPE, OR ANY FORK OF IT, INTO THE GOOGLE PLAY STORE VIOLATES THEIR TERMS AND CONDITIONS.&lt;/b&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/00.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/00.png" width="160"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/01.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/01.png" width="160"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/02.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/02.png" width="160"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/03.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/03.png" width="160"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/04.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/04.png" width="160"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/05.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/05.png" width="160"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/06.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/06.png" width="160"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/07.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/07.png" width="160"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/08.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/08.png" width="160"&gt;&lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/tenInchScreenshots/09.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/tenInchScreenshots/09.png" width="405"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/tenInchScreenshots/10.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/tenInchScreenshots/10.png" width="405"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Supported Services&lt;/h3&gt; 
&lt;p&gt;NewPipe currently supports these services:&lt;/p&gt; 
&lt;!-- We link to the service websites separately to avoid people accidentally opening a website they didn't want to. --&gt; 
&lt;ul&gt; 
 &lt;li&gt;YouTube (&lt;a href="https://www.youtube.com/"&gt;website&lt;/a&gt;) and YouTube Music (&lt;a href="https://music.youtube.com/"&gt;website&lt;/a&gt;) (&lt;a href="https://en.wikipedia.org/wiki/YouTube"&gt;wiki&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;PeerTube (&lt;a href="https://joinpeertube.org/"&gt;website&lt;/a&gt;) and all its instances (open the website to know what that means!) (&lt;a href="https://en.wikipedia.org/wiki/PeerTube"&gt;wiki&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Bandcamp (&lt;a href="https://bandcamp.com/"&gt;website&lt;/a&gt;) (&lt;a href="https://en.wikipedia.org/wiki/Bandcamp"&gt;wiki&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;SoundCloud (&lt;a href="https://soundcloud.com/"&gt;website&lt;/a&gt;) (&lt;a href="https://en.wikipedia.org/wiki/SoundCloud"&gt;wiki&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;media.ccc.de (&lt;a href="https://media.ccc.de/"&gt;website&lt;/a&gt;) (&lt;a href="https://en.wikipedia.org/wiki/Chaos_Computer_Club"&gt;wiki&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;As you can see, NewPipe supports multiple video and audio services. Though it started off with YouTube, other people have added more services over the years, making NewPipe more and more versatile!&lt;/p&gt; 
&lt;p&gt;Partially due to circumstance, and partially due to its popularity, YouTube is the best supported out of these services. If you use or are familiar with any of these other services, please help us improve support for them! We're looking for maintainers for SoundCloud and PeerTube.&lt;/p&gt; 
&lt;p&gt;If you intend to add a new service, please get in touch with us first! Our &lt;a href="https://teamnewpipe.github.io/documentation/"&gt;docs&lt;/a&gt; provide more information on how a new service can be added to the app and to the &lt;a href="https://github.com/TeamNewPipe/NewPipeExtractor"&gt;NewPipe Extractor&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Description&lt;/h2&gt; 
&lt;p&gt;NewPipe works by fetching the required data from the official API (e.g. PeerTube) of the service you're using. If the official API is restricted (e.g. YouTube) for our purposes, or is proprietary, the app parses the website or uses an internal API instead. This means that you don't need an account on any service to use NewPipe.&lt;/p&gt; 
&lt;p&gt;Also, since they are free and open source software, neither the app nor the Extractor use any proprietary libraries or frameworks, such as Google Play Services. This means you can use NewPipe on devices or custom ROMs that do not have Google apps installed.&lt;/p&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Watch videos at resolutions up to 4K&lt;/li&gt; 
 &lt;li&gt;Listen to audio in the background, only loading the audio stream to save data&lt;/li&gt; 
 &lt;li&gt;Popup mode (floating player, aka Picture-in-Picture)&lt;/li&gt; 
 &lt;li&gt;Watch live streams&lt;/li&gt; 
 &lt;li&gt;Show/hide subtitles/closed captions&lt;/li&gt; 
 &lt;li&gt;Search videos and audios (on YouTube, you can specify the content language as well)&lt;/li&gt; 
 &lt;li&gt;Enqueue videos (and optionally save them as local playlists)&lt;/li&gt; 
 &lt;li&gt;Show/hide general information about videos (such as description and tags)&lt;/li&gt; 
 &lt;li&gt;Show/hide next/related videos&lt;/li&gt; 
 &lt;li&gt;Show/hide comments&lt;/li&gt; 
 &lt;li&gt;Search videos, audios, channels, playlists and albums&lt;/li&gt; 
 &lt;li&gt;Browse videos and audios within a channel&lt;/li&gt; 
 &lt;li&gt;Subscribe to channels (yes, without logging into any account!)&lt;/li&gt; 
 &lt;li&gt;Get notifications about new videos from channels you're subscribed to&lt;/li&gt; 
 &lt;li&gt;Create and edit channel groups (for easier browsing and management)&lt;/li&gt; 
 &lt;li&gt;Browse video feeds generated from your channel groups&lt;/li&gt; 
 &lt;li&gt;View and search your watch history&lt;/li&gt; 
 &lt;li&gt;Search and watch playlists (these are remote playlists, which means they're fetched from the service you're browsing)&lt;/li&gt; 
 &lt;li&gt;Create and edit local playlists (these are created and saved within the app, and have nothing to do with any service)&lt;/li&gt; 
 &lt;li&gt;Download videos/audios/subtitles (closed captions)&lt;/li&gt; 
 &lt;li&gt;Open in Kodi&lt;/li&gt; 
 &lt;li&gt;Watch/Block age-restricted material&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- Hidden span to keep old links compatible. You should remove this span if you're translating the README into another language.--&gt; 
&lt;p&gt;&lt;span id="updates"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;Installation and updates&lt;/h2&gt; 
&lt;p&gt;You can install NewPipe using one of the following methods:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Add our custom repo to F-Droid and install it from there. The instructions are here: &lt;a href="https://newpipe.net/FAQ/tutorials/install-add-fdroid-repo/"&gt;https://newpipe.net/FAQ/tutorials/install-add-fdroid-repo/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Download the APK from &lt;a href="https://github.com/TeamNewPipe/NewPipe/releases"&gt;GitHub Releases&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#apk-info"&gt;compare the signing key&lt;/a&gt; and install it.&lt;/li&gt; 
 &lt;li&gt;Update via F-Droid. This is the slowest method of getting updates, as F-Droid must recognize changes, build the APK itself, sign it, and then push the update to users.&lt;/li&gt; 
 &lt;li&gt;Build a debug APK yourself. This is the fastest way to get new features on your device, but is much more complicated, so we recommend using one of the other methods.&lt;/li&gt; 
 &lt;li&gt;If you're interested in a specific feature or bugfix provided in a Pull Request in this repo, you can also download its APK from within the PR. Read the PR description for instructions. The great thing about PR-specific APKs is that they're installed side-by-side the official app, so you don't have to worry about losing your data or messing anything up.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We recommend method 1 for most users. APKs installed using method 1 or 2 are compatible with each other (meaning that if you installed NewPipe using either method 1 or 2, you can also update NewPipe using the other), but not with those installed using method 3. This is due to the same signing key (ours) being used for 1 and 2, but a different signing key (F-Droid's) being used for 3. Building a debug APK using method 4 excludes a key entirely. Signing keys help ensure that a user isn't tricked into installing a malicious update to an app. When using method 5, each APK is signed with a different random key supplied by GitHub Actions, so you cannot even update it. You will have to backup and restore the app data each time you wish to use a new APK.&lt;/p&gt; 
&lt;p&gt;In the meanwhile, if you want to switch sources for some reason (e.g. NewPipe's core functionality breaks and F-Droid doesn't have the latest update yet), we recommend following this procedure:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Back up your data via Settings &amp;gt; Backup and Restore &amp;gt; Export Database so you keep your history, subscriptions, and playlists&lt;/li&gt; 
 &lt;li&gt;Uninstall NewPipe&lt;/li&gt; 
 &lt;li&gt;Download the APK from the new source and install it&lt;/li&gt; 
 &lt;li&gt;Import the data from step 1 via Settings &amp;gt; Backup and Restore &amp;gt; Import Database&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Note] When you're importing a database into the official app, always make sure that it is the one you exported &lt;em&gt;from&lt;/em&gt; the official app. If you import a database exported from an APK other than the official app, it may break things. Such an action is unsupported, and you should only do so when you're absolutely certain you know what you're doing.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;APK Info&lt;/h3&gt; 
&lt;p&gt;This is the SHA fingerprint of NewPipe's signing key to verify downloaded APKs which are signed by us. The fingerprint is also available on &lt;a href="https://newpipe.net#download"&gt;NewPipe's website&lt;/a&gt;. This is relevant for method 2.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;CB:84:06:9B:D6:81:16:BA:FA:E5:EE:4E:E5:B0:8A:56:7A:A6:D8:98:40:4E:7C:B1:2F:9E:75:6D:F5:CF:5C:AB
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Whether you have ideas, translations, design changes, code cleaning, or even major code changes, help is always welcome. The app gets better and better with each contribution, no matter how big or small! If you'd like to get involved, check our &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/.github/CONTRIBUTING.md"&gt;contribution notes&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://hosted.weblate.org/engage/newpipe/"&gt; &lt;img src="https://hosted.weblate.org/widgets/newpipe/-/287x66-grey.png" alt="Translation status"&gt; &lt;/a&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;If you like NewPipe, you're welcome to send a donation. We prefer Liberapay, as it is both open-source and non-profit. For further info on donating to NewPipe, please visit our &lt;a href="https://newpipe.net/donate"&gt;website&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://liberapay.com/TeamNewPipe/"&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/2/27/Liberapay_logo_v2_white-on-yellow.svg?sanitize=true" alt="Liberapay" width="80px"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://liberapay.com/TeamNewPipe/"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/assets/liberapay_qr_code.png" alt="Visit NewPipe at liberapay.com" width="100px"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://liberapay.com/TeamNewPipe/donate"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/assets/liberapay_donate_button.svg?sanitize=true" alt="Donate via Liberapay" height="35px"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Privacy Policy&lt;/h2&gt; 
&lt;p&gt;The NewPipe project aims to provide a private, anonymous experience for using web-based media services. Therefore, the app does not collect any data without your consent. NewPipe's privacy policy explains in detail what data is sent and stored when you send a crash report, or leave a comment in our blog. You can find the document &lt;a href="https://newpipe.net/legal/privacy/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.gnu.org/licenses/gpl-3.0.en.html"&gt;&lt;img src="https://www.gnu.org/graphics/gplv3-127x51.png" alt="GNU GPLv3 Image"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;NewPipe is Free Software: You can use, study, share, and improve it at will. Specifically you can redistribute and/or modify it under the terms of the &lt;a href="https://www.gnu.org/licenses/gpl.html"&gt;GNU General Public License&lt;/a&gt; as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>