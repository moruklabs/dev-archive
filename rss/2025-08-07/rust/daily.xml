<rss version="2.0">
  <channel>
    <title>GitHub Rust Daily Trending</title>
    <description>Daily Trending of Rust in GitHub</description>
    <pubDate>Wed, 06 Aug 2025 01:36:38 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>trailbaseio/trailbase</title>
      <link>https://github.com/trailbaseio/trailbase</link>
      <description>&lt;p&gt;A blazingly fast, open-source application server with type-safe APIs, built-in JS/ES6/TS runtime, realtime, auth, and admin UI built on Rust, SQLite &amp; V8.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://trailbase.io" target="_blank"&gt; 
  &lt;picture&gt; 
   &lt;img alt="TrailBase logo" width="150" src="https://raw.githubusercontent.com/trailbaseio/trailbase/main/assets/logo.svg?sanitize=true"&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; An open, &lt;a href="https://trailbase.io/reference/benchmarks/"&gt;blazingly fast&lt;/a&gt;, single-executable Firebase alternative with type-safe REST &amp;amp; realtime APIs, built-in JS/ES6/TS runtime, SSR, auth and admin UI built on Rust, SQLite &amp;amp; V8. &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p align="center"&gt; Simplify with fewer moving parts: an easy to self-host, single-executable, extensible backend for your mobile, web or desktop application. Sub-millisecond latencies eliminate the need for dedicated caches, no more stale or inconsistent data. &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;a href="https://github.com/trailbaseio/trailbase/stargazers/"&gt; &lt;img src="https://img.shields.io/github/stars/trailbaseio/trailbase?style=social&amp;amp;label=Star"&gt; &lt;/a&gt; &lt;a href="https://github.com/trailbaseio/trailbase/actions?query=branch%3Amain"&gt; &lt;img src="https://github.com/trailbaseio/trailbase/actions/workflows/test.yml/badge.svg?branch=main" alt="Build Status"&gt; &lt;/a&gt; &lt;a href="https://github.com/trailbaseio/trailbase/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/license-OSL_3.0-blue" alt="License - OSL 3.0"&gt; &lt;/a&gt; &lt;a href="https://trailbase.io/reference/roadmap/"&gt; &lt;img src="https://img.shields.io/badge/status-alpha-orange" alt="Status - Alpha"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;TrailBase&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://demo.trailbase.io/_/admin?loginMessage=E-mail:%20admin@localhost%20%E2%80%A2%20Password:%20secret" target="_blank"&gt; 
  &lt;picture&gt; 
   &lt;img alt="Admin UI" width="600" src="https://raw.githubusercontent.com/trailbaseio/trailbase/main/docs/src/assets/shelve.webp"&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;strong&gt; Try the &lt;a href="https://demo.trailbase.io/_/admin?loginMessage=E-mail:%20admin@localhost%20%E2%80%A2%20Password:%20secret" target="_blank"&gt; demo &lt;/a&gt; online &lt;/strong&gt; &lt;br&gt;Email: &lt;em&gt;admin@localhost&lt;/em&gt; &lt;br&gt;password: &lt;em&gt;secret&lt;/em&gt; &lt;/p&gt; 
&lt;p&gt;For more context, documentation, and a live demo, check out the website: &lt;a href="https://trailbase.io"&gt;trailbase.io&lt;/a&gt;. Questions? Thoughts? - Take a look at the &lt;a href="https://trailbase.io/reference/faq/"&gt;FAQ&lt;/a&gt; or reach out. If you like TrailBase or want to follow along, consider leaving a ‚≠êüôè.&lt;/p&gt; 
&lt;h2&gt;Project Structure &amp;amp; Releases&lt;/h2&gt; 
&lt;p&gt;This repository contains all components that make up TrailBase including the server, client libraries, tests, documentation and examples. Only the &lt;a href="https://github.com/trailbaseio/trailbase-benchmark"&gt;benchmarks&lt;/a&gt; are kept separately due to their external dependencies.&lt;/p&gt; 
&lt;p&gt;Pre-built static binaries are available as &lt;a href="https://github.com/trailbaseio/trailbase/releases/"&gt;GitHub releases&lt;/a&gt; for Linux, MacOS and Windows or &lt;a href="https://hub.docker.com/r/trailbase/trailbase"&gt;Docker images&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Client packages for various languages are available via:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/trailbase"&gt;JavaScript/TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pub.dev/packages/trailbase"&gt;Dart/Flutter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/trailbase-client"&gt;Rust&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.nuget.org/packages/TrailBase/"&gt;C#/.Net&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trailbaseio/trailbase/tree/main/client/swift/trailbase"&gt;Swift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trailbaseio/trailbase/tree/main/client/go/trailbase"&gt;Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/trailbase/"&gt;Python&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;TrailBase is a &lt;strong&gt;single static executable&lt;/strong&gt; and therefore very easy to &lt;a href="https://trailbase.io/getting-started/install/"&gt;deploy&lt;/a&gt;. You can simply download the appropriate pre-built &lt;a href="https://github.com/trailbaseio/trailbase/releases/"&gt;GitHub release&lt;/a&gt; bundle for your system (MacOS, Linux or Windows), unpack and run the executable w/o having to worry about dependencies or shared-library skew.&lt;/p&gt; 
&lt;p&gt;If you want to get started even quicker, install TrailBase with the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl -sSL https://raw.githubusercontent.com/trailbaseio/trailbase/main/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, run TrailBase using the Docker image:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;alias trail='
  mkdir -p traildepot &amp;amp;&amp;amp; \
  docker run \
      --network host \
      --mount type=bind,source="$PWD"/traildepot,target=/app/traildepot \
      trailbase/trailbase /app/trail'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then execute &lt;code&gt;trail help&lt;/code&gt; to check that it is properly installed and list all available command line options.&lt;/p&gt; 
&lt;p&gt;To bring up the server on &lt;code&gt;localhost:4000&lt;/code&gt;, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;trail run
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On first start, a &lt;code&gt;./traildepot&lt;/code&gt; folder will be bootstrapped, an admin user created and their credentials printed to the terminal. Afterwards open &lt;a href="http://localhost:4000/_/admin/"&gt;http://localhost:4000/_/admin/&lt;/a&gt; in your browser and use the credentials to log into the admin dashboard.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;If you have all the necessary build dependencies (Rust, protobuf, node.js, pnpm) installed, you can build TrailBase by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Windows only: make sure to enable symlinks (w/o `mklink` permissions for your
# user, git will fall back to copies).
git config core.symlinks true &amp;amp;&amp;amp; git reset --hard

# Download necessary git sub-modules.
git submodule update --init --recursive

# Install Javascript dependencies first. Required for the next step.
pnpm install

# Build the executable. Adding `--release` will yield a more optimized binary
# but slow builds significantly.
cargo build --bin trail
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build a static binary you'll need to explicitly specify the target platform, e.g. Linux with GNU glibc:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;RUSTFLAGS="-C target-feature=+crt-static" cargo build --target x86_64-unknown-linux-gnu --release
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, if you want to build a Docker image or don't have to deal with build dependencies, you can simply run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Download necessary git sub-modules.
git submodule update --init --recursive

# Build the container as defined in `Dockerfile`.
docker build . -t trailbase
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are very much appreciated üôè. For anything beyond bug fixes, let's briefly chat to see how a proposal fits into the overall roadmap and avoid any surprises.&lt;/p&gt; 
&lt;p&gt;We're not sure yet what the best setup or exact license is for compatibility between OSL-3.0 and more popular licenses or use as a framework. So we'd ask you to sign a simple CLA that retains your copyright, ensures that TrailBase will continue to forever be freely available under an OSI-approved copyleft license, while allowing for some flexibility and sub-licensing as established by much larger, successful projects such as Grafana or Element.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;TrailBase is free software under the terms of the &lt;a href="https://opensource.org/licenses/OSL-3.0"&gt;Open Software License 3.0 (OSL-3.0)&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We chose the OSL-3.0 over other, better known copyleft licenses due to its narrower definition of "derivative work" that &lt;strong&gt;only&lt;/strong&gt; covers modifications to TrailBase itself. This means that your application's original code is &lt;strong&gt;not&lt;/strong&gt; subject to the OSL-3.0's copyleft provisions. This is true whether you connect over the network (e.g. web, mobile, other services, etc.), you're serving static assets, using the runtime to write custom server-side logic or using TrailBase as a framework.&lt;/p&gt; 
&lt;p&gt;This limited scope is similar to the GPL's classpath or the LGPL's &lt;a href="https://en.wikipedia.org/wiki/GPL_linking_exception"&gt;linking exception&lt;/a&gt;. The goal is to allow building on top and around of TrailBase without any provisions rubbing off onto your original work, while making sure that fixes and improvements find their way back to the community. These are our intentions - we felt the need to spell them out explicitly because licensing is tricky and we ain't lawyers. Graciously, the license's author provides some more &lt;a href="https://rosenlaw.com/OSL3.0-explained.htm"&gt;explanations&lt;/a&gt;. If you have any concerns, please reach out.&lt;/p&gt; 
&lt;p&gt;If you require an &lt;a href="https://www.gnu.org/philosophy/selling-exceptions.html"&gt;exception&lt;/a&gt;, reach out to &lt;a href="mailto:contact@trailbase.io"&gt;contact@trailbase.io&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TabbyML/tabby</title>
      <link>https://github.com/TabbyML/tabby</link>
      <description>&lt;p&gt;Self-hosted AI coding assistant&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt;üêæ Tabby&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://tabby.tabbyml.com/docs/welcome/"&gt;üìö Docs&lt;/a&gt; ‚Ä¢ &lt;a href="https://links.tabbyml.com/join-slack"&gt;üí¨ Slack&lt;/a&gt; ‚Ä¢ &lt;a href="https://tabby.tabbyml.com/docs/roadmap/"&gt;üó∫Ô∏è Roadmap&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/TabbyML/tabby/releases/latest"&gt;&lt;img src="https://shields.io/github/v/release/TabbyML/tabby" alt="latest release"&gt;&lt;/a&gt; &lt;a href="https://makeapullrequest.com"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square" alt="PRs Welcome"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/tabbyml/tabby"&gt;&lt;img src="https://img.shields.io/docker/pulls/tabbyml/tabby" alt="Docker pulls"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/TabbyML/tabby"&gt;&lt;img src="https://codecov.io/gh/TabbyML/tabby/graph/badge.svg?token=WYVVH8MKK3" alt="codecov"&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/TabbyML/tabby/main/README.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/TabbyML/tabby/main/README-zh.md"&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/TabbyML/tabby/main/README-ja.md"&gt;Êó•Êú¨Ë™û&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Tabby is a self-hosted AI coding assistant, offering an open-source and on-premises alternative to GitHub Copilot. It boasts several key features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Self-contained, with no need for a DBMS or cloud service.&lt;/li&gt; 
 &lt;li&gt;OpenAPI interface, easy to integrate with existing infrastructure (e.g Cloud IDE).&lt;/li&gt; 
 &lt;li&gt;Supports consumer-grade GPUs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;a target="_blank" href="https://tabby.tabbyml.com"&gt;&lt;img alt="Open Live Demo" src="https://img.shields.io/badge/OPEN_LIVE_DEMO-blue?logo=xcode&amp;amp;style=for-the-badge&amp;amp;logoColor=green"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img alt="Demo" src="https://user-images.githubusercontent.com/388154/230440226-9bc01d05-9f57-478b-b04d-81184eba14ca.gif"&gt; &lt;/p&gt; 
&lt;h2&gt;üî• What's New&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;07/02/2025&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.30.0"&gt;v0.30&lt;/a&gt; supports indexing GitLab Merge Request as Context!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;05/25/2025&lt;/strong&gt; üí°Interested in joining &lt;a href="https://links.tabbyml.com/pochi-github-readme"&gt;Agent&lt;/a&gt; private preview? DM in &lt;a href="https://x.com/getpochi"&gt;X&lt;/a&gt; for early waitlist approval!üé´&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;05/20/2025&lt;/strong&gt; Enhance Tabby with your own documentationüìÉ through REST APIs in &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.29.0"&gt;v0.29&lt;/a&gt;! üéâ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;05/01/2025&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.28.0"&gt;v0.28&lt;/a&gt; transforming Answer Engine messages into persistent, shareable Pages&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;03/31/2025&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.27.0"&gt;v0.27&lt;/a&gt; released with a richer &lt;code&gt;@&lt;/code&gt; menu in the chat side panel.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;02/05/2025&lt;/strong&gt; LDAP Authentication and better notification for background jobs coming in Tabby &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.24.0"&gt;v0.24.0&lt;/a&gt;!‚ú®&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;02/04/2025&lt;/strong&gt; &lt;a href="https://marketplace.visualstudio.com/items/TabbyML.vscode-tabby/changelog"&gt;VSCode 1.20.0&lt;/a&gt; upgrade! @-mention files to add them as chat context, and edit inline with a new right-click option are available!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Archived&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;01/10/2025&lt;/strong&gt; Tabby &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.23.0"&gt;v0.23.0&lt;/a&gt; featuring enhanced code browser experience and chat side panel improvements!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;12/24/2024&lt;/strong&gt; Introduce &lt;strong&gt;Notification Box&lt;/strong&gt; in Tabby &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.22.0"&gt;v0.22.0&lt;/a&gt;!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;12/06/2024&lt;/strong&gt; Llamafile deployment integration and enhanced Answer Engine user experience are coming in Tabby &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.21.0"&gt;v0.21.0&lt;/a&gt;!üöÄ&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;11/10/2024&lt;/strong&gt; Switching between different backend chat models is supported in Answer Engine with Tabby &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.20.0"&gt;v0.20.0&lt;/a&gt;!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;10/30/2024&lt;/strong&gt; Tabby &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.19.0"&gt;v0.19.0&lt;/a&gt; featuring recent shared threads on the main page to improve their discoverability.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;07/09/2024&lt;/strong&gt; üéâAnnounce &lt;a href="https://tabby.tabbyml.com/blog/2024/07/09/tabby-codestral/"&gt;Codestral integration in Tabby&lt;/a&gt;!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;07/05/2024&lt;/strong&gt; Tabby &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.13.0"&gt;v0.13.0&lt;/a&gt; introduces &lt;em&gt;&lt;strong&gt;Answer Engine&lt;/strong&gt;&lt;/em&gt;, a central knowledge engine for internal engineering teams. It seamlessly integrates with dev team's internal data, delivering reliable and precise answers to empower developers.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;06/13/2024&lt;/strong&gt; &lt;a href="https://marketplace.visualstudio.com/items/TabbyML.vscode-tabby/changelog"&gt;VSCode 1.7&lt;/a&gt; marks a significant milestone with a versatile Chat experience throughout your coding experience. Come and they the latest &lt;strong&gt;chat in side-panel&lt;/strong&gt; and &lt;strong&gt;editing via chat command&lt;/strong&gt;!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;06/10/2024&lt;/strong&gt; Latest üìÉblogpost drop on &lt;a href="https://tabby.tabbyml.com/blog/2024/06/11/rank-fusion-in-tabby-code-completion/"&gt;an enhanced code context understanding&lt;/a&gt; in Tabby!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;06/06/2024&lt;/strong&gt; Tabby &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.12.0"&gt;v0.12.0&lt;/a&gt; release brings üîó&lt;strong&gt;seamless integrations&lt;/strong&gt; (Gitlab SSO, Self-hosted GitHub/GitLab, etc.), to ‚öôÔ∏è&lt;strong&gt;flexible configurations&lt;/strong&gt; (HTTP API integration) and üåê&lt;strong&gt;expanded capabilities&lt;/strong&gt; (repo-context in Code Browser)!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;05/22/2024&lt;/strong&gt; Tabby &lt;a href="https://marketplace.visualstudio.com/items?itemName=TabbyML.vscode-tabby"&gt;VSCode 1.6&lt;/a&gt; comes with &lt;strong&gt;multiple choices&lt;/strong&gt; in inline completion, and the &lt;strong&gt;auto-generated commit messages&lt;/strong&gt;üê±üíª!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;05/11/2024&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.11.0"&gt;v0.11.0&lt;/a&gt; brings significant enterprise upgrades, including üìä&lt;strong&gt;storage usage&lt;/strong&gt; stats, üîó&lt;strong&gt;GitHub &amp;amp; GitLab&lt;/strong&gt; integration, üìã&lt;strong&gt;Activities&lt;/strong&gt; page, and the long-awaited ü§ñ&lt;strong&gt;Ask Tabby&lt;/strong&gt; feature!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;04/22/2024&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.10.0"&gt;v0.10.0&lt;/a&gt; released, featuring the latest &lt;strong&gt;Reports&lt;/strong&gt; tab with team-wise analytics for Tabby usage.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;04/19/2024&lt;/strong&gt; üì£ Tabby now incorporates &lt;a href="https://github.com/TabbyML/tabby/pull/1844"&gt;locally relevant snippets&lt;/a&gt;(declarations from local LSP, and recently modified code) for code completion!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;04/17/2024&lt;/strong&gt; CodeGemma and CodeQwen model series have now been added to the &lt;a href="https://tabby.tabbyml.com/docs/models/"&gt;official registry&lt;/a&gt;!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;03/20/2024&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.9.1"&gt;v0.9&lt;/a&gt; released, highlighting a full feature admin UI.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;12/23/2023&lt;/strong&gt; Seamlessly &lt;a href="https://tabby.tabbyml.com/docs/installation/skypilot/"&gt;deploy Tabby on any cloud&lt;/a&gt; with &lt;a href="https://skypilot.readthedocs.io/en/latest/serving/sky-serve.html"&gt;SkyServe&lt;/a&gt; üõ´ from SkyPilot.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;12/15/2023&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.7.0"&gt;v0.7.0&lt;/a&gt; released with team management and secured access!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;10/15/2023&lt;/strong&gt; RAG-based code completion is enabled by detail in &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.3.0"&gt;v0.3.0&lt;/a&gt;üéâ! Check out the &lt;a href="https://tabby.tabbyml.com/blog/2023/10/16/repository-context-for-code-completion/"&gt;blogpost&lt;/a&gt; explaining how Tabby utilizes repo-level context to get even smarter!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;11/27/2023&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.6.0"&gt;v0.6.0&lt;/a&gt; released!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;11/09/2023&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.5.5"&gt;v0.5.5&lt;/a&gt; released! With a redesign of UI + performance improvement.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;10/24/2023&lt;/strong&gt; ‚õ≥Ô∏è Major updates for Tabby IDE plugins across &lt;a href="https://tabby.tabbyml.com/docs/extensions"&gt;VSCode/Vim/IntelliJ&lt;/a&gt;!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;10/04/2023&lt;/strong&gt; Check out the &lt;a href="https://tabby.tabbyml.com/docs/models/"&gt;model directory&lt;/a&gt; for the latest models supported by Tabby.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;09/18/2023&lt;/strong&gt; Apple's M1/M2 Metal inference support has landed in &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.1.1"&gt;v0.1.1&lt;/a&gt;!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;08/31/2023&lt;/strong&gt; Tabby's first stable release &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.0.1"&gt;v0.0.1&lt;/a&gt; ü•≥.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;08/28/2023&lt;/strong&gt; Experimental support for the &lt;a href="https://github.com/TabbyML/tabby/issues/370"&gt;CodeLlama 7B&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;08/24/2023&lt;/strong&gt; Tabby is now on &lt;a href="https://plugins.jetbrains.com/plugin/22379-tabby"&gt;JetBrains Marketplace&lt;/a&gt;!&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;üëã Getting Started&lt;/h2&gt; 
&lt;p&gt;You can find our documentation &lt;a href="https://tabby.tabbyml.com/docs/getting-started"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üìö &lt;a href="https://tabby.tabbyml.com/docs/installation/"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üíª &lt;a href="https://tabby.tabbyml.com/docs/extensions/"&gt;IDE/Editor Extensions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;‚öôÔ∏è &lt;a href="https://tabby.tabbyml.com/docs/configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run Tabby in 1 Minute&lt;/h3&gt; 
&lt;p&gt;The easiest way to start a Tabby server is by using the following Docker command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -it \
  --gpus all -p 8080:8080 -v $HOME/.tabby:/data \
  tabbyml/tabby \
  serve --model StarCoder-1B --device cuda --chat-model Qwen2-1.5B-Instruct
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For additional options (e.g inference type, parallelism), please refer to the &lt;a href="https://tabbyml.github.io/tabby"&gt;documentation page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; 
&lt;p&gt;Full guide at &lt;a href="https://github.com/TabbyML/tabby/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;;&lt;/p&gt; 
&lt;h3&gt;Get the Code&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone --recurse-submodules https://github.com/TabbyML/tabby
cd tabby
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have already cloned the repository, you could run the &lt;code&gt;git submodule update --recursive --init&lt;/code&gt; command to fetch all submodules.&lt;/p&gt; 
&lt;h3&gt;Build&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Set up the Rust environment by following this &lt;a href="https://www.rust-lang.org/learn/get-started"&gt;tutorial&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install the required dependencies:&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# For MacOS
brew install protobuf

# For Ubuntu / Debian
apt install protobuf-compiler libopenblas-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Install useful tools:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# For Ubuntu
apt install make sqlite3 graphviz
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Now, you can build Tabby by running the command &lt;code&gt;cargo build&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Start Hacking!&lt;/h3&gt; 
&lt;p&gt;... and don't forget to submit a &lt;a href="https://github.com/TabbyML/tabby/compare"&gt;Pull Request&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üåç Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;üé§ &lt;a href="https://twitter.com/Tabby_ML"&gt;Twitter / X&lt;/a&gt; - engage with TabbyML for all things possible&lt;/li&gt; 
 &lt;li&gt;üìö &lt;a href="https://www.linkedin.com/company/tabbyml/"&gt;LinkedIn&lt;/a&gt; - follow for the latest from the community&lt;/li&gt; 
 &lt;li&gt;üíå &lt;a href="https://newsletter.tabbyml.com/archive"&gt;Newsletter&lt;/a&gt; - subscribe to unlock Tabby insights and secrets&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üîÜ Activity&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/e4ef0fbd12e586ef9ea7d72d1fb4f5c5b88d78d5.svg?sanitize=true" alt="Git Repository Activity" title="Repobeats analytics image"&gt;&lt;/p&gt; 
&lt;h3&gt;üåü Star History&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#tabbyml/tabby&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=tabbyml/tabby&amp;amp;type=Date" alt="Star History Chart"&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ai-dynamo/dynamo</title>
      <link>https://github.com/ai-dynamo/dynamo</link>
      <description>&lt;p&gt;A Datacenter Scale Distributed Inference Serving Framework&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/images/frontpage-banner.png" alt="Dynamo banner"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true" alt="License"&gt;&lt;/a&gt; &lt;a href="https://github.com/ai-dynamo/dynamo/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/ai-dynamo/dynamo" alt="GitHub Release"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/D92uqZRjCZ"&gt;&lt;img src="https://dcbadge.limes.pink/api/server/D92uqZRjCZ?style=flat" alt="Discord"&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/ai-dynamo/dynamo"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;| &lt;strong&gt;&lt;a href="https://github.com/ai-dynamo/dynamo/issues/762"&gt;Roadmap&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://docs.nvidia.com/dynamo/latest/index.html"&gt;Documentation&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://github.com/ai-dynamo/dynamo/tree/main/examples"&gt;Examples&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://github.com/ai-dynamo/enhancements"&gt;Design Proposals&lt;/a&gt;&lt;/strong&gt; |&lt;/p&gt; 
&lt;h1&gt;NVIDIA Dynamo&lt;/h1&gt; 
&lt;p&gt;High-throughput, low-latency inference framework designed for serving generative AI and reasoning models in multi-node distributed environments.&lt;/p&gt; 
&lt;h2&gt;Latest News&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;[08/05] Deploy &lt;code&gt;openai/gpt-oss-120b&lt;/code&gt; with disaggregated serving on NVIDIA Blackwell GPUs using Dynamo &lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/components/backends/trtllm/gpt-oss.md"&gt;‚û°Ô∏è link&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The Era of Multi-GPU, Multi-Node&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/images/frontpage-gpu-vertical.png" alt="Multi Node Multi-GPU topology" width="600"&gt; &lt;/p&gt; 
&lt;p&gt;Large language models are quickly outgrowing the memory and compute budget of any single GPU. Tensor-parallelism solves the capacity problem by spreading each layer across many GPUs‚Äîand sometimes many servers‚Äîbut it creates a new one: how do you coordinate those shards, route requests, and share KV cache fast enough to feel like one accelerator? This orchestration gap is exactly what NVIDIA Dynamo is built to close.&lt;/p&gt; 
&lt;p&gt;Dynamo is designed to be inference engine agnostic (supports TRT-LLM, vLLM, SGLang or others) and captures LLM-specific capabilities such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Disaggregated prefill &amp;amp; decode inference&lt;/strong&gt; ‚Äì Maximizes GPU throughput and facilitates trade off between throughput and latency.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic GPU scheduling&lt;/strong&gt; ‚Äì Optimizes performance based on fluctuating demand&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LLM-aware request routing&lt;/strong&gt; ‚Äì Eliminates unnecessary KV cache re-computation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Accelerated data transfer&lt;/strong&gt; ‚Äì Reduces inference response time using NIXL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;KV cache offloading&lt;/strong&gt; ‚Äì Leverages multiple memory hierarchies for higher system throughput&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/images/frontpage-architecture.png" alt="Dynamo architecture" width="600"&gt; &lt;/p&gt; 
&lt;h2&gt;Framework Support Matrix&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;vLLM&lt;/th&gt; 
   &lt;th&gt;SGLang&lt;/th&gt; 
   &lt;th&gt;TensorRT-LLM&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/architecture/disagg_serving.md"&gt;&lt;strong&gt;Disaggregated Serving&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/architecture/disagg_serving.md#conditional-disaggregation"&gt;&lt;strong&gt;Conditional Disaggregation&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/architecture/kv_cache_routing.md"&gt;&lt;strong&gt;KV-Aware Routing&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/architecture/sla_planner.md"&gt;&lt;strong&gt;SLA-Based Planner&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/architecture/load_planner.md"&gt;&lt;strong&gt;Load Based Planner&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/architecture/kvbm_architecture.md"&gt;&lt;strong&gt;KVBM&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;To learn more about each framework and their capabilities, check out each framework's README!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/components/backends/vllm/README.md"&gt;vLLM&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/components/backends/sglang/README.md"&gt;SGLang&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/components/backends/trtllm/README.md"&gt;TensorRT-LLM&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Built in Rust for performance and in Python for extensibility, Dynamo is fully open-source and driven by a transparent, OSS (Open Source Software) first development approach.&lt;/p&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;The following examples require a few system level packages. Recommended to use Ubuntu 24.04 with a x86_64 CPU. See &lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/support_matrix.md"&gt;docs/support_matrix.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;1. Initial setup&lt;/h2&gt; 
&lt;p&gt;The Dynamo team recommends the &lt;code&gt;uv&lt;/code&gt; Python package manager, although any way works. Install uv:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;curl -LsSf https://astral.sh/uv/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install etcd and NATS (required)&lt;/h3&gt; 
&lt;p&gt;To coordinate across a data center, Dynamo relies on etcd and NATS. To run Dynamo locally, these need to be available.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://etcd.io/"&gt;etcd&lt;/a&gt; can be run directly as &lt;code&gt;./etcd&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nats.io/"&gt;nats&lt;/a&gt; needs jetstream enabled: &lt;code&gt;nats-server -js&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To quickly setup etcd &amp;amp; NATS, you can also run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# At the root of the repository:
docker compose -f deploy/docker-compose.yml up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;2. Select an engine&lt;/h2&gt; 
&lt;p&gt;We publish Python wheels specialized for each of our supported engines: vllm, sglang, trtllm, and llama.cpp. The examples that follow use SGLang; continue reading for other engines.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;uv venv venv
source venv/bin/activate
uv pip install pip

# Choose one
uv pip install "ai-dynamo[sglang]"  #replace with [vllm], [trtllm], etc.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;3. Run Dynamo&lt;/h2&gt; 
&lt;h3&gt;Running an LLM API server&lt;/h3&gt; 
&lt;p&gt;Dynamo provides a simple way to spin up a local set of inference components including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;OpenAI Compatible Frontend&lt;/strong&gt; ‚Äì High performance OpenAI compatible http api server written in Rust.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Basic and Kv Aware Router&lt;/strong&gt; ‚Äì Route and load balance traffic to a set of workers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workers&lt;/strong&gt; ‚Äì Set of pre-configured LLM serving engines.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;# Start an OpenAI compatible HTTP server, a pre-processor (prompt templating and tokenization) and a router:
python -m dynamo.frontend --http-port 8080

# Start the SGLang engine, connecting to NATS and etcd to receive requests. You can run several of these,
# both for the same model and for multiple models. The frontend node will discover them.
python -m dynamo.sglang.worker --model deepseek-ai/DeepSeek-R1-Distill-Llama-8B --skip-tokenizer-init
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Send a Request&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl localhost:8080/v1/chat/completions   -H "Content-Type: application/json"   -d '{
    "model": "deepseek-ai/DeepSeek-R1-Distill-Llama-8B",
    "messages": [
    {
        "role": "user",
        "content": "Hello, how are you?"
    }
    ],
    "stream":false,
    "max_tokens": 300
  }' | jq
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Rerun with &lt;code&gt;curl -N&lt;/code&gt; and change &lt;code&gt;stream&lt;/code&gt; in the request to &lt;code&gt;true&lt;/code&gt; to get the responses as soon as the engine issues them.&lt;/p&gt; 
&lt;h3&gt;Deploying Dynamo&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow the &lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/guides/dynamo_deploy/README.md"&gt;Quickstart Guide&lt;/a&gt; to deploy on Kubernetes.&lt;/li&gt; 
 &lt;li&gt;Check out &lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/components/backends"&gt;Backends&lt;/a&gt; to deploy various workflow configurations (e.g. SGLang with router, vLLM with disaggregated serving, etc.)&lt;/li&gt; 
 &lt;li&gt;Run some &lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/examples"&gt;Examples&lt;/a&gt; to learn about building components in Dynamo and exploring various integrations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Engines&lt;/h1&gt; 
&lt;p&gt;Dynamo is designed to be inference engine agnostic. To use any engine with Dynamo, NATS and etcd need to be installed, along with a Dynamo frontend (&lt;code&gt;python -m dynamo.frontend [--interactive]&lt;/code&gt;).&lt;/p&gt; 
&lt;h2&gt;vLLM&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;uv pip install ai-dynamo[vllm]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the backend/worker like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;python -m dynamo.vllm --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;vLLM attempts to allocate enough KV cache for the full context length at startup. If that does not fit in your available memory pass &lt;code&gt;--context-length &amp;lt;value&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To specify which GPUs to use set environment variable &lt;code&gt;CUDA_VISIBLE_DEVICES&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;SGLang&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;# Install libnuma
apt install -y libnuma-dev

uv pip install ai-dynamo[sglang]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the backend/worker like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;python -m dynamo.sglang.worker --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can pass any sglang flags directly to this worker, see &lt;a href="https://docs.sglang.ai/backend/server_arguments.html"&gt;https://docs.sglang.ai/backend/server_arguments.html&lt;/a&gt; . See there to use multiple GPUs.&lt;/p&gt; 
&lt;h2&gt;TensorRT-LLM&lt;/h2&gt; 
&lt;p&gt;It is recommended to use &lt;a href="https://catalog.ngc.nvidia.com/orgs/nvidia/containers/pytorch"&gt;NGC PyTorch Container&lt;/a&gt; for running the TensorRT-LLM engine.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Note] Ensure that you select a PyTorch container image version that matches the version of TensorRT-LLM you are using. For example, if you are using &lt;code&gt;tensorrt-llm==1.0.0rc4&lt;/code&gt;, use the PyTorch container image version &lt;code&gt;25.05&lt;/code&gt;. To find the correct PyTorch container version for your desired &lt;code&gt;tensorrt-llm&lt;/code&gt; release, visit the &lt;a href="https://github.com/NVIDIA/TensorRT-LLM/raw/main/docker/Dockerfile.multi"&gt;TensorRT-LLM Dockerfile.multi&lt;/a&gt; on GitHub. Switch to the branch that matches your &lt;code&gt;tensorrt-llm&lt;/code&gt; version, and look for the &lt;code&gt;BASE_TAG&lt;/code&gt; line to identify the recommended PyTorch container tag.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Important] Launch container with the following additional settings &lt;code&gt;--shm-size=1g --ulimit memlock=-1&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Install prerequisites&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;# Optional step: Only required for Blackwell and Grace Hopper
pip3 install torch==2.7.1 torchvision torchaudio --index-url https://download.pytorch.org/whl/cu128

sudo apt-get -y install libopenmpi-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Tip] You can learn more about these prequisites and known issues with TensorRT-LLM pip based installation &lt;a href="https://nvidia.github.io/TensorRT-LLM/installation/linux.html"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;After installing the pre-requisites above, install Dynamo&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;uv pip install ai-dynamo[trtllm]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the backend/worker like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;python -m dynamo.trtllm --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To specify which GPUs to use set environment variable &lt;code&gt;CUDA_VISIBLE_DEVICES&lt;/code&gt;.&lt;/p&gt; 
&lt;h1&gt;Developing Locally&lt;/h1&gt; 
&lt;h2&gt;1. Install libraries&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Ubuntu:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt install -y build-essential libhwloc-dev libudev-dev pkg-config libclang-dev protobuf-compiler python3-dev cmake
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;macOS:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;# if brew is not installed on your system, install it
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.apple.com/xcode/"&gt;Xcode&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;brew install cmake protobuf

## Check that Metal is accessible
xcrun -sdk macosx metal
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If Metal is accessible, you should see an error like &lt;code&gt;metal: error: no input files&lt;/code&gt;, which confirms it is installed correctly.&lt;/p&gt; 
&lt;h2&gt;2. Install Rust&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
source $HOME/.cargo/env
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;3. Create a Python virtual env:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;uv venv dynamo
source dynamo/bin/activate
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;4. Install build tools&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;uv pip install pip maturin
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://github.com/PyO3/maturin"&gt;Maturin&lt;/a&gt; is the Rust&amp;lt;-&amp;gt;Python bindings build tool.&lt;/p&gt; 
&lt;h2&gt;5. Build the Rust bindings&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;cd lib/bindings/python
maturin develop --uv
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;6. Install the wheel&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;cd $PROJECT_ROOT
uv pip install .
# For development, use
export PYTHONPATH="${PYTHONPATH}:$(pwd)/components/frontend/src:$(pwd)/components/planner/src:$(pwd)/components/backends/vllm/src:$(pwd)/components/backends/sglang/src:$(pwd)/components/backends/trtllm/src:$(pwd)/components/backends/llama_cpp/src:$(pwd)/components/backends/mocker/src"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Note] Editable (&lt;code&gt;-e&lt;/code&gt;) does not work because the &lt;code&gt;dynamo&lt;/code&gt; package is split over multiple directories, one per backend.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You should now be able to run &lt;code&gt;python -m dynamo.frontend&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Remember that nats and etcd must be running (see earlier).&lt;/p&gt; 
&lt;p&gt;Set the environment variable &lt;code&gt;DYN_LOG&lt;/code&gt; to adjust the logging level; for example, &lt;code&gt;export DYN_LOG=debug&lt;/code&gt;. It has the same syntax as &lt;code&gt;RUST_LOG&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you use vscode or cursor, we have a .devcontainer folder built on &lt;a href="https://code.visualstudio.com/docs/devcontainers/containers"&gt;Microsofts Extension&lt;/a&gt;. For instructions see the &lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/.devcontainer/README.md"&gt;ReadMe&lt;/a&gt; for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>eythaann/Seelen-UI</title>
      <link>https://github.com/eythaann/Seelen-UI</link>
      <description>&lt;p&gt;The Fully Customizable Desktop Environment for Windows 10/11.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/logo.svg?sanitize=true" width="44" align="top" alt="Seelen UI Logo"&gt; Seelen UI &lt;/h1&gt; 
&lt;h2 align="center"&gt; Fully Customizable Desktop Environment for Windows &lt;br&gt; Available in 70+ Languages &lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/eythaann/seelen-ui/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/eythaann/seelen-ui.svg?sanitize=true" alt="Contributors"&gt;&lt;/a&gt; &lt;a href="https://github.com/eythaann/seelen-ui/commits/main"&gt;&lt;img src="https://img.shields.io/github/last-commit/eythaann/seelen-ui.svg?sanitize=true" alt="Last Commit"&gt;&lt;/a&gt; &lt;a href="https://github.com/eythaann/seelen-ui/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/eythaann/seelen-ui.svg?sanitize=true" alt="Version"&gt;&lt;/a&gt; &lt;a href="https://github.com/eythaann/seelen-ui/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/eythaann/seelen-ui/total.svg?sanitize=true" alt="Downloads"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/preview.png" width="100%" alt="Screenshot of Seelen UI desktop showing a customized desktop environment"&gt; 
&lt;table align="center"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://apps.microsoft.com/detail/Seelen%20UI/9p67c2d4t9fb?mode=full" target="_blank" rel="noopener noreferrer" aria-label="Download Seelen UI from Microsoft Store"&gt; &lt;img src="https://get.microsoft.com/images/en-us%20dark.svg?sanitize=true" width="100%" alt="Download Seelen UI from Microsoft Store"&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://discord.gg/ABfASx5ZAJ" target="_blank" rel="noopener noreferrer" aria-label="Join the Seelen UI Discord community"&gt; &lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/discord-alt.png" width="100%" alt="Join the Seelen UI Discord community"&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://www.digitalocean.com/?refcode=955c7335abf5&amp;amp;utm_campaign=Referral_Invite&amp;amp;utm_medium=Referral_Program&amp;amp;utm_source=badge" target="_blank" rel="noopener noreferrer" aria-label="DigitalOcean Referral Badge"&gt; &lt;img src="https://web-platforms.sfo2.cdn.digitaloceanspaces.com/WWW/Badge%201.svg?sanitize=true" width="100%" alt="DigitalOcean Referral Badge"&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://seelen.io/apps/seelen-ui"&gt;Seelen UI&lt;/a&gt; is a tool designed to enhance your Windows desktop experience with a focus on customization and productivity. It integrates smoothly into your system, providing a range of features that allow you to personalize your desktop and optimize your workflow.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Be Creative&lt;/strong&gt;: Seelen UI lets you tailor your desktop to fit your style and needs. You can adjust menus, widgets, icons, and other elements to create a personalized and visually appealing desktop environment.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/theme_preview.png" alt="Seelen UI Custom Theme"&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enhance Your Productivity&lt;/strong&gt;: Seelen UI helps you organize your desktop efficiently. With a Tiling Windows Manager, windows automatically arrange themselves to support multitasking, making your work more streamlined.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/twm_preview.png" alt="Seelen UI Tiling Window Manager"&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enjoy your music&lt;/strong&gt;: With an integrated media module that's compatible with most music players, Seelen UI allows you to enjoy your music seamlessly. You can pause, resume, and skip tracks at any time without the need to open additional windows.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/media_module_preview.png" alt="Seelen UI Media Module"&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Be faster!&lt;/strong&gt;: With an app launcher inspired by Rofi, Seelen UI provides a simple and intuitive way to quickly access your applications and execute commands.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/app_launcher_preview.png" alt="Seelen UI App Launcher"&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;User-Friendly Configuration&lt;/strong&gt;: Seelen UI offers an intuitive interface for easy customization. Adjust settings such as themes, taskbar layouts, icons, etc. With just a few clicks.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/settings_preview.png" alt="Seelen UI Settings"&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] Seelen UI requires the WebView runtime to be installed. On Windows 11, it comes pre-installed with the system. However, on Windows 10, the WebView runtime is included with the &lt;code&gt;setup.exe&lt;/code&gt; installer. Additionally, Microsoft Edge is necessary to function correctly. Some users may have modified their system and removed Edge, so please ensure both Edge and the WebView runtime are installed on your system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] On fresh installations of Windows, the app might show a white or dark screen. You only need to update your Windows through Windows Update and restart your PC.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can choose from different installation options based on your preference:&lt;/p&gt; 
&lt;h3&gt;Microsoft Store &lt;em&gt;(recommended)&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;Download the latest version from the &lt;a href="https://www.microsoft.com/store/productId/9P67C2D4T9FB?ocid=pdpshare"&gt;Store&lt;/a&gt; page. This is the recommended option because you will receive updates and a secure version of the program.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/em&gt;: It may take around 1 to 3 business days for changes to be reflected in the Microsoft Store, as updates are approved by real people in the store.&lt;/p&gt; 
&lt;h3&gt;Winget&lt;/h3&gt; 
&lt;p&gt;Install the latest version using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-pwsh"&gt;winget install --id Seelen.SeelenUI
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This option also uses the signed &lt;code&gt;.msix&lt;/code&gt; package and ensures you have the latest secure version. Similar to the Microsoft Store, it may take around 1 to 3 business days for changes to be reflected in Winget, as updates are approved by real people in the &lt;code&gt;winget-pkg&lt;/code&gt; project.&lt;/p&gt; 
&lt;h3&gt;.msix Installer&lt;/h3&gt; 
&lt;p&gt;Download the &lt;code&gt;.msix&lt;/code&gt; installer from the &lt;a href="https://github.com/eythaann/seelen-ui/releases"&gt;Releases&lt;/a&gt; page. This package is signed, ensuring a secure installation. This is the same option as the Microsoft Store but is a portable installer.&lt;/p&gt; 
&lt;h3&gt;.exe Installer&lt;/h3&gt; 
&lt;p&gt;Download the latest version from the &lt;a href="https://github.com/eythaann/seelen-ui/releases"&gt;Releases&lt;/a&gt; page and run the &lt;code&gt;setup.exe&lt;/code&gt; installer. This option is less recommended as the installer is not signed, which may cause it to be flagged as a potential threat by some antivirus programs. The &lt;code&gt;setup.exe&lt;/code&gt; is updated more quickly than the Microsoft Store or Winget versions and also it receives notifications updates on new release.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Once installed or extracted, simply open the program. The easy-to-use and intuitive GUI will guide you through the configuration process. Customize your desktop environment effortlessly.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For in-depth details on various aspects of Seelen UI, explore the following documents:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/languages.md"&gt;Languages&lt;/a&gt; - Information regarding translations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/toolbar.md"&gt;Toolbar&lt;/a&gt; - Details about customizing and using the toolbar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://seelen.io/blog/seelen-ui-theme-tutorial"&gt;Themes&lt;/a&gt; - Guidance on creating and applying themes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/window_manager.md"&gt;Window Manager&lt;/a&gt; - Instructions on configuring the window manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/project.md"&gt;Project&lt;/a&gt; - General information about the project and its structure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Upcoming Features&lt;/h2&gt; 
&lt;p&gt;I‚Äôm excited to share some upcoming features for Seelen UI! Here‚Äôs a glimpse of what‚Äôs planned for the future:&lt;/p&gt; 
&lt;h3&gt;&lt;del&gt;App Launcher&lt;/del&gt; ‚úÖ&lt;/h3&gt; 
&lt;p&gt;I‚Äôm planning to develop an app launcher inspired by &lt;a href="https://github.com/davatorium/rofi"&gt;Rofi&lt;/a&gt; on Linux. This feature will provide a sleek and highly customizable way to quickly access your applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/adi1090x/files/master/rofi/previews/colorful/main.gif" alt="App Launcher Preview"&gt; &lt;em&gt;Image courtesy of &lt;a href="https://github.com/dctxmei/rofi-themes"&gt;rofi-themes&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Customizable Popup Widgets&lt;/h3&gt; 
&lt;p&gt;I aim to introduce a set of fully customizable popup widgets, similar to the features available in &lt;a href="https://github.com/elkowar/eww"&gt;EWW&lt;/a&gt;. These widgets will be highly configurable and adaptable to your needs, providing an enhanced and interactive way to manage your desktop environment.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/adi1090x/widgets/main/previews/dashboard.png" alt="Customizable Widgets Preview"&gt; &lt;em&gt;Image courtesy of &lt;a href="https://github.com/adi1090x/widgets"&gt;adi1090x&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Custom Alt + Tab (Task Switching)&lt;/h3&gt; 
&lt;p&gt;An upgraded Alt + Tab system for task switching is on the horizon. This will offer a more visually appealing and functional experience, allowing for smoother transitions between open applications and windows.&lt;/p&gt; 
&lt;h3&gt;Custom Virtual Desktops Viewer and Animations&lt;/h3&gt; 
&lt;p&gt;I‚Äôm also working on a custom virtual desktops viewer and dynamic animations to improve navigation between different workspaces. This will provide a more intuitive and immersive multitasking experience.&lt;/p&gt; 
&lt;p&gt;Stay tuned for more updates as I develop these features. I appreciate your support and enthusiasm!&lt;/p&gt; 
&lt;p&gt;Happy customizing!&lt;/p&gt; 
&lt;p&gt;The Seelen UI Team&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Read the &lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/CONTRIBUTING"&gt;Contribution Guidelines&lt;/a&gt; to get started with terms.&lt;/li&gt; 
 &lt;li&gt;Read the &lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/project.md"&gt;Project Documentation&lt;/a&gt; to understand the project structure and how to use it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;For inquiries and support, please contact me on &lt;a href="https://discord.gg/ABfASx5ZAJ"&gt;Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;See you later&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;                   .      .&amp;amp;     _,x&amp;amp;"``
                    &amp;amp; .   &amp;amp;'  ;.&amp;amp;&amp;amp;'
              &amp;amp;.  . &amp;amp;.&amp;amp;     .0&amp;amp;&amp;amp;&amp;amp;;&amp;amp;""`
         .    '&amp;amp;  &amp;amp;.&amp;amp;&amp;amp;&amp;amp;  .&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;'
       .&amp;amp;         ;&amp;amp;&amp;amp;&amp;amp; &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;'
      &amp;amp;&amp;amp;          &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;     &amp;amp;&amp;amp;&amp;amp;
     0&amp;amp;    .     &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;""
    &amp;amp;&amp;amp;   .0     &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;
   0&amp;amp;&amp;amp; .&amp;amp;'     &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;
  :&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;    . &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp; 
  0&amp;amp;&amp;amp;&amp;amp;&amp;amp;    &amp;amp; &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;
  &amp;amp;&amp;amp;&amp;amp;&amp;amp;'   &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;               .&amp;amp;&amp;amp;&amp;amp;x&amp;amp;
  &amp;amp;&amp;amp;&amp;amp;&amp;amp;   :&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0.&amp;amp;'        , .&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;;.
  &amp;amp;&amp;amp;&amp;amp;&amp;amp;.  &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;        .&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;'               .
  0&amp;amp;&amp;amp;&amp;amp;&amp;amp;  &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;       ,&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;                &amp;amp;
  :&amp;amp;&amp;amp;&amp;amp;&amp;amp;; &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0       ,;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;             ;  .0
   0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0     ,;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;             &amp;amp;  &amp;amp;;
    0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0   :',;".&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;".&amp;amp;             &amp;amp;&amp;amp; &amp;amp;0
     0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0  ',;',&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;" ,&amp;amp;'             &amp;amp;&amp;amp;&amp;amp;&amp;amp;0
      0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0 ,x&amp;amp;&amp;amp;&amp;amp;&amp;amp;" .&amp;amp;&amp;amp;&amp;amp;              &amp;amp;&amp;amp;&amp;amp;&amp;amp;0
        0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp; .&amp;amp;&amp;amp;&amp;amp;&amp;amp;"'''"&amp;amp;&amp;amp;"&amp;amp;&amp;amp;            &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
         0&amp;amp;&amp;amp; .&amp;amp;&amp;amp;;``       `&amp;amp;: :&amp;amp;         &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
            &amp;amp;"' &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;   &amp;amp;"&amp;amp; &amp;amp;"&amp;amp;   &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
              0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
                 0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0         Seelen
                      0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;p&gt;üìå &lt;strong&gt;Official Website&lt;/strong&gt;: &lt;a href="https://seelen.io"&gt;https://seelen.io&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Seelen Inc ¬© 2025 - All rights reserved&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lancedb/lance</title>
      <link>https://github.com/lancedb/lance</link>
      <description>&lt;p&gt;Modern columnar data format for ML and LLMs implemented in Rust. Convert from parquet in 2 lines of code for 100x faster random access, vector index, and data versioning. Compatible with Pandas, DuckDB, Polars, Pyarrow, and PyTorch with more integrations coming..&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p align="center"&gt; &lt;img width="257" alt="Lance Logo" src="https://user-images.githubusercontent.com/917119/199353423-d3e202f7-0269-411d-8ff2-e747e419e492.png"&gt; &lt;/p&gt;
 &lt;p&gt;&lt;strong&gt;Modern columnar data format for ML. Convert from Parquet in 2-lines of code for 100x faster random access, zero-cost schema evolution, rich secondary indices, versioning, and more.&lt;br&gt;&lt;/strong&gt; &lt;strong&gt;Compatible with Pandas, DuckDB, Polars, Pyarrow, and Ray with more integrations on the way.&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://lancedb.github.io/lance/"&gt;Documentation&lt;/a&gt; ‚Ä¢ &lt;a href="https://blog.lancedb.com/"&gt;Blog&lt;/a&gt; ‚Ä¢ &lt;a href="https://discord.gg/zMM32dvNtd"&gt;Discord&lt;/a&gt; ‚Ä¢ &lt;a href="https://x.com/lancedb"&gt;X&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/lancedb/lance/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/lancedb/lance/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="CI Badge"&gt;&lt;/a&gt; &lt;a href="https://lancedb.github.io/lance/"&gt;&lt;img src="https://img.shields.io/badge/docs-passing-brightgreen" alt="Docs Badge"&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/lance"&gt;&lt;img src="https://img.shields.io/crates/v/lance.svg?sanitize=true" alt="crates.io badge"&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/pylance/"&gt;&lt;img src="https://img.shields.io/pypi/pyversions/pylance" alt="Python versions badge"&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;p&gt;Lance is a modern columnar data format that is optimized for ML workflows and datasets. Lance is perfect for:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Building search engines and feature stores.&lt;/li&gt; 
 &lt;li&gt;Large-scale ML training requiring high performance IO and shuffles.&lt;/li&gt; 
 &lt;li&gt;Storing, querying, and inspecting deeply nested data for robotics or large blobs like images, point clouds, and more.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The key features of Lance include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;High-performance random access:&lt;/strong&gt; 100x faster than Parquet without sacrificing scan performance.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Vector search:&lt;/strong&gt; find nearest neighbors in milliseconds and combine OLAP-queries with vector search.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Zero-copy, automatic versioning:&lt;/strong&gt; manage versions of your data without needing extra infrastructure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Ecosystem integrations:&lt;/strong&gt; Apache Arrow, Pandas, Polars, DuckDB, Ray, Spark and more on the way.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Lance is in active development and we welcome contributions. Please see our &lt;a href="https://lancedb.github.io/lance/community"&gt;contributing guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pip install pylance
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install a preview release:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pip install --pre --extra-index-url https://pypi.fury.io/lancedb/ pylance
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Preview releases are released more often than full releases and contain the latest features and bug fixes. They receive the same level of testing as full releases. We guarantee they will remain published and available for download for at least 6 months. When you want to pin to a specific version, prefer a stable release.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Converting to Lance&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import lance

import pandas as pd
import pyarrow as pa
import pyarrow.dataset

df = pd.DataFrame({"a": [5], "b": [10]})
uri = "/tmp/test.parquet"
tbl = pa.Table.from_pandas(df)
pa.dataset.write_dataset(tbl, uri, format='parquet')

parquet = pa.dataset.dataset(uri, format='parquet')
lance.write_dataset(parquet, "/tmp/test.lance")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Reading Lance data&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;dataset = lance.dataset("/tmp/test.lance")
assert isinstance(dataset, pa.dataset.Dataset)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Pandas&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;df = dataset.to_table().to_pandas()
df
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;DuckDB&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import duckdb

# If this segfaults, make sure you have duckdb v0.7+ installed
duckdb.query("SELECT * FROM dataset LIMIT 10").to_df()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Vector search&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Download the sift1m subset&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;wget ftp://ftp.irisa.fr/local/texmex/corpus/sift.tar.gz
tar -xzf sift.tar.gz
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Convert it to Lance&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import lance
from lance.vector import vec_to_table
import numpy as np
import struct

nvecs = 1000000
ndims = 128
with open("sift/sift_base.fvecs", mode="rb") as fobj:
    buf = fobj.read()
    data = np.array(struct.unpack("&amp;lt;128000000f", buf[4 : 4 + 4 * nvecs * ndims])).reshape((nvecs, ndims))
    dd = dict(zip(range(nvecs), data))

table = vec_to_table(dd)
uri = "vec_data.lance"
sift1m = lance.write_dataset(table, uri, max_rows_per_group=8192, max_rows_per_file=1024*1024)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build the index&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;sift1m.create_index("vector",
                    index_type="IVF_PQ",
                    num_partitions=256,  # IVF
                    num_sub_vectors=16)  # PQ
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Search the dataset&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# Get top 10 similar vectors
import duckdb

dataset = lance.dataset(uri)

# Sample 100 query vectors. If this segfaults, make sure you have duckdb v0.7+ installed
sample = duckdb.query("SELECT vector FROM dataset USING SAMPLE 100").to_df()
query_vectors = np.array([np.array(x) for x in sample.vector])

# Get nearest neighbors for all of them
rs = [dataset.to_table(nearest={"column": "vector", "k": 10, "q": q})
      for q in query_vectors]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Directory structure&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Directory&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/lancedb/lance/main/rust"&gt;rust&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Core Rust implementation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/lancedb/lance/main/python"&gt;python&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Python bindings (PyO3)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/lancedb/lance/main/java"&gt;java&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Java bindings (JNI)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/lancedb/lance/main/docs"&gt;docs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Documentation source&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;What makes Lance different&lt;/h2&gt; 
&lt;p&gt;Here we will highlight a few aspects of Lance‚Äôs design. For more details, see the full &lt;a href="https://lancedb.github.io/lance/format"&gt;Lance design document&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Vector index&lt;/strong&gt;: Vector index for similarity search over embedding space. Support both CPUs (&lt;code&gt;x86_64&lt;/code&gt; and &lt;code&gt;arm&lt;/code&gt;) and GPU (&lt;code&gt;Nvidia (cuda)&lt;/code&gt; and &lt;code&gt;Apple Silicon (mps)&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Encodings&lt;/strong&gt;: To achieve both fast columnar scan and sub-linear point queries, Lance uses custom encodings and layouts.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Nested fields&lt;/strong&gt;: Lance stores each subfield as a separate column to support efficient filters like ‚Äúfind images where detected objects include cats‚Äù.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Versioning&lt;/strong&gt;: A Manifest can be used to record snapshots. Currently we support creating new versions automatically via appends, overwrites, and index creation.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Fast updates&lt;/strong&gt; (ROADMAP): Updates will be supported via write-ahead logs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Rich secondary indices&lt;/strong&gt;: Support &lt;code&gt;BTree&lt;/code&gt;, &lt;code&gt;Bitmap&lt;/code&gt;, &lt;code&gt;Full text search&lt;/code&gt;, &lt;code&gt;Label list&lt;/code&gt;, &lt;code&gt;NGrams&lt;/code&gt;, and more.&lt;/p&gt; 
&lt;h2&gt;Benchmarks&lt;/h2&gt; 
&lt;h3&gt;Vector search&lt;/h3&gt; 
&lt;p&gt;We used the SIFT dataset to benchmark our results with 1M vectors of 128D&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;For 100 randomly sampled query vectors, we get &amp;lt;1ms average response time (on a 2023 m2 MacBook Air)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/lancedb/lance/main/docs/src/images/avg_latency.png" alt="avg_latency.png"&gt;&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;ANNs are always a trade-off between recall and performance&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/lancedb/lance/main/docs/src/images/recall_vs_latency.png" alt="avg_latency.png"&gt;&lt;/p&gt; 
&lt;h3&gt;Vs. parquet&lt;/h3&gt; 
&lt;p&gt;We create a Lance dataset using the Oxford Pet dataset to do some preliminary performance testing of Lance as compared to Parquet and raw image/XMLs. For analytics queries, Lance is 50-100x better than reading the raw metadata. For batched random access, Lance is 100x better than both parquet and raw files.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/lancedb/lance/main/docs/src/images/lance_perf.png" alt=""&gt;&lt;/p&gt; 
&lt;h2&gt;Why are you building yet another data format?!&lt;/h2&gt; 
&lt;p&gt;The machine learning development cycle involves the steps:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-mermaid"&gt;graph LR
    A[Collection] --&amp;gt; B[Exploration];
    B --&amp;gt; C[Analytics];
    C --&amp;gt; D[Feature Engineer];
    D --&amp;gt; E[Training];
    E --&amp;gt; F[Evaluation];
    F --&amp;gt; C;
    E --&amp;gt; G[Deployment];
    G --&amp;gt; H[Monitoring];
    H --&amp;gt; A;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;People use different data representations to varying stages for the performance or limited by the tooling available. Academia mainly uses XML / JSON for annotations and zipped images/sensors data for deep learning, which is difficult to integrate into data infrastructure and slow to train over cloud storage. While industry uses data lakes (Parquet-based techniques, i.e., Delta Lake, Iceberg) or data warehouses (AWS Redshift or Google BigQuery) to collect and analyze data, they have to convert the data into training-friendly formats, such as &lt;a href="https://github.com/eto-ai/rikai"&gt;Rikai&lt;/a&gt;/&lt;a href="https://github.com/uber/petastorm"&gt;Petastorm&lt;/a&gt; or &lt;a href="https://www.tensorflow.org/tutorials/load_data/tfrecord"&gt;TFRecord&lt;/a&gt;. Multiple single-purpose data transforms, as well as syncing copies between cloud storage to local training instances have become a common practice.&lt;/p&gt; 
&lt;p&gt;While each of the existing data formats excels at the workload it was originally designed for, we need a new data format tailored for multistage ML development cycles to reduce and data silos.&lt;/p&gt; 
&lt;p&gt;A comparison of different data formats in each stage of ML development cycle.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Lance&lt;/th&gt; 
   &lt;th&gt;Parquet &amp;amp; ORC&lt;/th&gt; 
   &lt;th&gt;JSON &amp;amp; XML&lt;/th&gt; 
   &lt;th&gt;TFRecord&lt;/th&gt; 
   &lt;th&gt;Database&lt;/th&gt; 
   &lt;th&gt;Warehouse&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Analytics&lt;/td&gt; 
   &lt;td&gt;Fast&lt;/td&gt; 
   &lt;td&gt;Fast&lt;/td&gt; 
   &lt;td&gt;Slow&lt;/td&gt; 
   &lt;td&gt;Slow&lt;/td&gt; 
   &lt;td&gt;Decent&lt;/td&gt; 
   &lt;td&gt;Fast&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Feature Engineering&lt;/td&gt; 
   &lt;td&gt;Fast&lt;/td&gt; 
   &lt;td&gt;Fast&lt;/td&gt; 
   &lt;td&gt;Decent&lt;/td&gt; 
   &lt;td&gt;Slow&lt;/td&gt; 
   &lt;td&gt;Decent&lt;/td&gt; 
   &lt;td&gt;Good&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Training&lt;/td&gt; 
   &lt;td&gt;Fast&lt;/td&gt; 
   &lt;td&gt;Decent&lt;/td&gt; 
   &lt;td&gt;Slow&lt;/td&gt; 
   &lt;td&gt;Fast&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Exploration&lt;/td&gt; 
   &lt;td&gt;Fast&lt;/td&gt; 
   &lt;td&gt;Slow&lt;/td&gt; 
   &lt;td&gt;Fast&lt;/td&gt; 
   &lt;td&gt;Slow&lt;/td&gt; 
   &lt;td&gt;Fast&lt;/td&gt; 
   &lt;td&gt;Decent&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Infra Support&lt;/td&gt; 
   &lt;td&gt;Rich&lt;/td&gt; 
   &lt;td&gt;Rich&lt;/td&gt; 
   &lt;td&gt;Decent&lt;/td&gt; 
   &lt;td&gt;Limited&lt;/td&gt; 
   &lt;td&gt;Rich&lt;/td&gt; 
   &lt;td&gt;Rich&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Community Highlights&lt;/h2&gt; 
&lt;p&gt;Lance is currently used in production by:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lancedb/lancedb"&gt;LanceDB&lt;/a&gt;, a serverless, low-latency vector database for ML applications&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.lancedb.com/enterprise/introduction"&gt;LanceDB Enterprise&lt;/a&gt;, hyperscale LanceDB with enterprise SLA.&lt;/li&gt; 
 &lt;li&gt;Leading multimodal Gen AI companies for training over petabyte-scale multimodal data.&lt;/li&gt; 
 &lt;li&gt;Self-driving car company for large-scale storage, retrieval and processing of multi-modal data.&lt;/li&gt; 
 &lt;li&gt;E-commerce company for billion-scale+ vector personalized search.&lt;/li&gt; 
 &lt;li&gt;and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Presentations, Blogs and Talks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.lancedb.com/designing-a-table-format-for-ml-workloads/"&gt;Designing a Table Format for ML Workloads&lt;/a&gt;, Feb 2025.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=xmTFEzAh8ho"&gt;Transforming Multimodal Data Management with LanceDB, Ray Summit&lt;/a&gt;, Oct 2024.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.lancedb.com/lance-v2/"&gt;Lance v2: A columnar container format for modern data&lt;/a&gt;, Apr 2024.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://drive.google.com/file/d/1Orh9rK0Mpj9zN_gnQF1eJJFpAc6lStGm/view?usp=drive_link"&gt;Lance Deep Dive&lt;/a&gt;. July 2023.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.google.com/presentation/d/1a4nAiQAkPDBtOfXFpPg7lbeDAxcNDVKgoUkw3cUs2rE/edit#slide=id.p"&gt;Lance: A New Columnar Data Format&lt;/a&gt;, &lt;a href="https://www.scipy2022.scipy.org/posters"&gt;Scipy 2022, Austin, TX&lt;/a&gt;. July, 2022.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ankitects/anki</title>
      <link>https://github.com/ankitects/anki</link>
      <description>&lt;p&gt;Anki is a smart spaced repetition flashcard program&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Anki¬Æ&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://buildkite.com/ankitects/anki-ci"&gt;&lt;img src="https://badge.buildkite.com/c9edf020a4aec976f9835e54751cc5409d843adbb66d043bd3.svg?branch=main" alt="Build status"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repo contains the source code for the computer version of &lt;a href="https://apps.ankiweb.net"&gt;Anki&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;About&lt;/h1&gt; 
&lt;p&gt;Anki is a spaced repetition program. Please see the &lt;a href="https://apps.ankiweb.net"&gt;website&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h1&gt;Getting Started&lt;/h1&gt; 
&lt;h3&gt;Anki Betas&lt;/h3&gt; 
&lt;p&gt;If you'd like to try development builds of Anki but don't feel comfortable building the code, please see &lt;a href="https://betas.ankiweb.net/"&gt;Anki betas&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Developing&lt;/h3&gt; 
&lt;p&gt;For more information on building and developing, please see &lt;a href="https://raw.githubusercontent.com/ankitects/anki/main/docs/development.md"&gt;Development&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Want to contribute to Anki? Check out the &lt;a href="https://raw.githubusercontent.com/ankitects/anki/main/docs/contributing.md"&gt;Contribution Guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Anki Contributors&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/ankitects/anki/main/CONTRIBUTORS"&gt;CONTRIBUTORS&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Anki's license: &lt;a href="https://raw.githubusercontent.com/ankitects/anki/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openobserve/openobserve</title>
      <link>https://github.com/openobserve/openobserve</link>
      <description>&lt;p&gt;üöÄ 10x easier, üöÄ 140x lower storage cost, üöÄ high performance, üöÄ petabyte scale - Elasticsearch/Splunk/Datadog alternative for üöÄ (logs, metrics, traces, RUM, Error tracking, Session replay).&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://openobserve.ai"&gt;&lt;img src="https://openobserve.ai/img/logo/o2-logo-readme.svg?sanitize=true" alt="OpenObserve"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;em&gt;üöÄ 10x easier, üöÄ 140x lower storage cost, üöÄ high performance, üöÄ petabyte scale - Elasticsearch/Splunk/Datadog alternative for üöÄ (logs, metrics, traces).&lt;/em&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/openobserve/openobserve" target="_blank"&gt; &lt;img src="https://img.shields.io/github/last-commit/openobserve/openobserve" alt="Last Commit"&gt; &lt;/a&gt; &lt;a href="https://github.com/openobserve/openobserve/stargazers" target="_blank"&gt; &lt;img src="https://img.shields.io/github/stars/openobserve/openobserve" alt="GitHub Stars"&gt; &lt;/a&gt; &lt;a href="https://github.com/openobserve/openobserve/issues" target="_blank"&gt; &lt;img src="https://img.shields.io/github/issues/openobserve/openobserve" alt="GitHub Issues"&gt; &lt;/a&gt; &lt;a href="https://github.com/openobserve/openobserve/graphs/contributors" target="_blank"&gt; &lt;img src="https://img.shields.io/github/contributors/openobserve/openobserve" alt="Contributors"&gt; &lt;/a&gt; &lt;a href="https://github.com/openobserve/openobserve/releases" target="_blank"&gt; &lt;img src="https://img.shields.io/github/v/release/openobserve/openobserve" alt="GitHub Release"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;OpenObserve (O2 for short) is a cloud-native observability platform built specifically for logs, metrics, traces, analytics, RUM (Real User Monitoring - Performance, Errors, Session Replay) designed to work at petabyte scale.&lt;/p&gt; 
&lt;p&gt;It is straightforward and easy to operate, in contrast to Elasticsearch, which requires understanding and tuning numerous settings. Get OpenObserve up and running in under 2 minutes.&lt;/p&gt; 
&lt;p&gt;OpenObserve serves as a seamless replacement for Elasticsearch for users who ingest data using APIs and perform searches. OpenObserve comes with its own user interface, eliminating the need for separate installation.&lt;/p&gt; 
&lt;p&gt;You can reduce your log storage costs by ~140x compared to Elasticsearch by using OpenObserve. Below, we present the results from pushing logs from our production Kubernetes cluster to both Elasticsearch and OpenObserve using Fluent Bit.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/zo_vs_es.png" alt="OpenObserve Vs Elasticsearch"&gt;&lt;/p&gt; 
&lt;h2&gt;üé• Introduction Video&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=4VwuC1tpRP4"&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/o2_intro.webp" alt="OpenObserve Introduction"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üåü Features:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Logs, Metrics, Traces&lt;/strong&gt;: Comprehensive support for various data types.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OpenTelemetry Support&lt;/strong&gt;: Full compatibility with OTLP for logs, metrics, and traces.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real User Monitoring (RUM)&lt;/strong&gt;: Includes performance tracking, error logging, and session replay.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dashboards, Reports, Alerts&lt;/strong&gt;: Features over 18 different chart types for comprehensive data visualization for on-the-fly analysis and reporting along with alerting.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pipelines&lt;/strong&gt;: Enrich, redact, reduce, normalize data on the fly. Stream processing for logs to metrics and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced Embedded GUI&lt;/strong&gt;: Intuitive and user-friendly interface.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SQL and PromQL Support&lt;/strong&gt;: Query logs and traces with SQL, and metrics with SQL and PromQL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Single Binary or HA Installation&lt;/strong&gt;: Install using a single binary for small deployments or in HA mode for large deployments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Versatile Storage Options&lt;/strong&gt;: Supports local disk, S3, MinIO, GCS, Azure Blob Storage.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;High Availability and Clustering&lt;/strong&gt;: Ensures reliable and scalable performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Schema&lt;/strong&gt;: Adapts to your data structure seamlessly.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Built-in Authentication&lt;/strong&gt;: Secure and ready to use.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ease of Operation&lt;/strong&gt;: Designed for simplicity and efficiency.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Seamless Upgrades&lt;/strong&gt;: Hassle-free updates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multilingual UI&lt;/strong&gt;: Supports 11 languages, including English, Spanish, German, French, Chinese, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For a full list of features, check the &lt;a href="https://openobserve.ai/docs/#project-status-features-and-roadmap"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;‚ö°Ô∏è Quick start&lt;/h2&gt; 
&lt;h3&gt;üê≥ Docker:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d \
      --name openobserve \
      -v $PWD/data:/data \
      -p 5080:5080 \
      -e ZO_ROOT_USER_EMAIL="root@example.com" \
      -e ZO_ROOT_USER_PASSWORD="Complexpass#123" \
      public.ecr.aws/zinclabs/openobserve:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üêô Docker Compose:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  openobserve:
    image: public.ecr.aws/zinclabs/openobserve:latest
    restart: unless-stopped
    environment:
      ZO_ROOT_USER_EMAIL: "root@example.com"
      ZO_ROOT_USER_PASSWORD: "Complexpass#123"
    ports:
      - "5080:5080"
    volumes:
      - data:/data
volumes:
  data:
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For other ways to quickly install OpenObserve or use OpenObserve cloud, check &lt;a href="https://openobserve.ai/docs/quickstart"&gt;quickstart documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For installing OpenObserve in HA mode, check &lt;a href="https://openobserve.ai/docs/ha_deployment/"&gt;HA deployment documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- ## Enterprise Vs Open source Vs Cloud edition

OpenObserve is available in three different editions:


| Feature | Open Source (Self hosted) | Enterprise (Self hosted) | Cloud |
| --- | --- | --- | --- | 
| Logs | ‚úÖ | ‚úÖ | ‚úÖ |
| Metrics | ‚úÖ | ‚úÖ | ‚úÖ |
| Traces | ‚úÖ | ‚úÖ | ‚úÖ |
| RUM | ‚úÖ | ‚úÖ | ‚úÖ |
| Alerts | ‚úÖ | ‚úÖ | ‚úÖ |
| Dashboards | ‚úÖ | ‚úÖ | ‚úÖ |
| Reports | ‚úÖ | ‚úÖ | ‚úÖ |
| VRL functions | ‚úÖ | ‚úÖ | ‚úÖ |
| Pipelines | ‚úÖ | ‚úÖ | ‚úÖ |
| High Availability | ‚úÖ | ‚úÖ | ‚úÖ |
| Multitenancy (Organizations) | ‚úÖ | ‚úÖ | ‚úÖ |
| Dynamic schema and schema evolution | ‚úÖ | ‚úÖ | ‚úÖ |
| Advanced multilingual GUI | ‚úÖ | ‚úÖ | ‚úÖ |
| Single Sign On | ‚ùå | ‚úÖ | ‚úÖ |
| Role Based Access Control (RBAC) | ‚ùå | ‚úÖ | ‚úÖ |
| Federated search / Super cluster | ‚ùå | ‚úÖ | ‚ùå |
| Query management | ‚ùå | ‚úÖ | ‚ùå |
| Workload management (QoS) | ‚ùå | ‚úÖ | ‚ùå |
| Audit trail | ‚ùå | ‚úÖ | ‚ùå |
| Ability to influence roadmap | ‚ùå | ‚úÖ | ‚úÖ on enterprise plan |
| License | AGPL | Enterprise | Cloud |
| Support | Community | Enterprise | Cloud |
| Cost | Free | If self hosted, free for up to 200 GB/Day data ingested &lt;br&gt; Paid thereafter  | Free 200 GB/Month data ingested &lt;br&gt; Paid thereafter | --&gt; 
&lt;h2&gt;üì∑ Screenshots&lt;/h2&gt; 
&lt;h3&gt;Home&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/zo_home.png" alt="Home"&gt;&lt;/p&gt; 
&lt;h3&gt;Logs&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/logs.png" alt="Logs"&gt;&lt;/p&gt; 
&lt;h3&gt;Traces (OpenTelemetry)&lt;/h3&gt; 
&lt;p&gt;Trace details page &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/traces.png" alt="Traces using OpenTelemetry"&gt;&lt;/p&gt; 
&lt;p&gt;Golden metrics based on traces &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/traces-overall.png" alt="Traces golden metrics"&gt;&lt;/p&gt; 
&lt;h3&gt;Visualizations and Dashboards&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/dashboard.png" alt="Dashboard"&gt; &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/dashboard2.png" alt="Dashboard"&gt; &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/create-panel.png" alt="Create panel"&gt; &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/map.png" alt="Map"&gt;&lt;/p&gt; 
&lt;h3&gt;Front end monitoring&lt;/h3&gt; 
&lt;p&gt;Performance analytics &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/performance.png" alt="Performance"&gt;&lt;/p&gt; 
&lt;p&gt;Session replay &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/session-replay.png" alt="Session replay"&gt;&lt;/p&gt; 
&lt;p&gt;Error tracking &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/error-tracking.png" alt="Error tracking"&gt;&lt;/p&gt; 
&lt;h3&gt;Alerts&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/alerts.png" alt="Alerts"&gt;&lt;/p&gt; 
&lt;h3&gt;Streams&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/streams.png" alt="Streams"&gt;&lt;/p&gt; 
&lt;h3&gt;Ingestion&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/ingestion1.png" alt="Ingestion"&gt;&lt;/p&gt; 
&lt;h3&gt;Pipeline&lt;/h3&gt; 
&lt;p&gt;Pipeline &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/pipeline.png" alt="Pipeline"&gt;&lt;/p&gt; 
&lt;p&gt;Function &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/function.png" alt="Function"&gt;&lt;/p&gt; 
&lt;h3&gt;IAM&lt;/h3&gt; 
&lt;p&gt;SSO (Single Sign On) &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/sso.png" alt="SSO"&gt;&lt;/p&gt; 
&lt;p&gt;RBAC (Role Based Access Control) &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/iam_rbac.png" alt="RBAC"&gt;&lt;/p&gt; 
&lt;h3&gt;SBOM&lt;/h3&gt; 
&lt;p&gt;Software Bill of Materials for OpenObserve&lt;/p&gt; 
&lt;h4&gt;Rust&lt;/h4&gt; 
&lt;p&gt;SBOM can be found &lt;a href="https://raw.githubusercontent.com/openobserve/openobserve/main/openobserve.cdx.xml"&gt;here&lt;/a&gt;. You can analyze it using &lt;a href="https://dependencytrack.org/"&gt;dependency track&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In order to generate the SBOM, you can use the following commands:&lt;/p&gt; 
&lt;p&gt;Install cargo-cyclonedx:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cargo install cargo-cyclonedx
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Generate the SBOM:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cargo-cyclonedx cyclonedx
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;JavaScript&lt;/h4&gt; 
&lt;p&gt;SBOM can be found &lt;a href="https://raw.githubusercontent.com/openobserve/openobserve/main/web/sbom.json"&gt;here&lt;/a&gt;. You can analyze it using &lt;a href="https://dependencytrack.org/"&gt;dependency track&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In order to generate the SBOM, you can use the following commands:&lt;/p&gt; 
&lt;p&gt;Install cyclonedx-npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install --global @cyclonedx/cyclonedx-npm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Generate the SBOM:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd web
cyclonedx-npm &amp;gt; sbom.json         
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;‚öñÔ∏è License&lt;/h2&gt; 
&lt;p&gt;OpenObserve is licensed under the AGPL-3.0 license. For more details, see the &lt;a href="https://github.com/openobserve/openobserve/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üåç Community&lt;/h2&gt; 
&lt;h3&gt;üîó Join OpenObserve community on Slack&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://short.openobserve.ai/community"&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/slack.png" alt="Slack"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Easiest way to get support is to join the &lt;a href="https://short.openobserve.ai/community"&gt;Slack channel&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;üì± Join OpenObserve community on WeChat&lt;/h3&gt; 
&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/wechat_qr.jpg" width="300"&gt;</description>
    </item>
    
    <item>
      <title>nkaz001/hftbacktest</title>
      <link>https://github.com/nkaz001/hftbacktest</link>
      <description>&lt;p&gt;Free, open source, a high frequency trading and market making backtesting and trading bot, which accounts for limit orders, queue positions, and latencies, utilizing full tick data for trades and order books(Level-2 and Level-3), with real-world crypto trading examples for Binance and Bybit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;=========== HftBacktest&lt;/h1&gt; 
&lt;p&gt;|codeql| |python| |pypi| |downloads| |rustc| |crates| |license| |docs| |roadmap| |github|&lt;/p&gt; 
&lt;h1&gt;High-Frequency Trading Backtesting Tool&lt;/h1&gt; 
&lt;p&gt;This framework is designed for developing high frequency trading and market making strategies. It focuses on accounting for both feed and order latencies, as well as the order queue position for order fill simulation. The framework aims to provide more accurate market replay-based backtesting, based on full order book and trade tick feed data.&lt;/p&gt; 
&lt;h1&gt;Key Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Working in &lt;code&gt;Numba &amp;lt;https://numba.pydata.org/&amp;gt;&lt;/code&gt;_ JIT function (Python).&lt;/li&gt; 
 &lt;li&gt;Complete tick-by-tick simulation with a customizable time interval or based on the feed and order receipt.&lt;/li&gt; 
 &lt;li&gt;Full order book reconstruction based on Level-2 Market-By-Price and Level-3 Market-By-Order feeds.&lt;/li&gt; 
 &lt;li&gt;Backtest accounting for both feed and order latency, using provided models or your own custom model.&lt;/li&gt; 
 &lt;li&gt;Order fill simulation that takes into account the order queue position, using provided models or your own custom model.&lt;/li&gt; 
 &lt;li&gt;Backtesting of multi-asset and multi-exchange models&lt;/li&gt; 
 &lt;li&gt;Deployment of a live trading bot for quick prototyping and testing using the same algorithm code: currently for Binance Futures and Bybit. (Rust-only)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;p&gt;See &lt;code&gt;full document here &amp;lt;https://hftbacktest.readthedocs.io/&amp;gt;&lt;/code&gt;_.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;High-Frequency Grid Trading - Comparison Across Other Exchanges &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/High-Frequency%20Grid%20Trading%20-%20Comparison%20Across%20Other%20Exchanges.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Market Making with Alpha - Order Book Imbalance &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Market%20Making%20with%20Alpha%20-%20Order%20Book%20Imbalance.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Market Making with Alpha - APT &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Market%20Making%20with%20Alpha%20-%20APT.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Getting started&lt;/h1&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;hftbacktest supports Python 3.11+. You can install hftbacktest using &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt; 
&lt;p&gt;.. code-block:: console&lt;/p&gt; 
&lt;p&gt;pip install hftbacktest&lt;/p&gt; 
&lt;p&gt;Or you can clone the latest development version from the Git repository with:&lt;/p&gt; 
&lt;p&gt;.. code-block:: console&lt;/p&gt; 
&lt;p&gt;git clone &lt;a href="https://github.com/nkaz001/hftbacktest"&gt;https://github.com/nkaz001/hftbacktest&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Data Source &amp;amp; Format&lt;/h2&gt; 
&lt;p&gt;Please see &lt;code&gt;Data &amp;lt;https://hftbacktest.readthedocs.io/en/latest/data.html&amp;gt;&lt;/code&gt;_ or &lt;code&gt;Data Preparation &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Data%20Preparation.html&amp;gt;&lt;/code&gt;_.&lt;/p&gt; 
&lt;p&gt;You can also find some data &lt;code&gt;here &amp;lt;https://reach.stratosphere.capital/data/usdm/&amp;gt;&lt;/code&gt;_, hosted by the supporter.&lt;/p&gt; 
&lt;h2&gt;A Quick Example&lt;/h2&gt; 
&lt;p&gt;Get a glimpse of what backtesting with hftbacktest looks like with these code snippets:&lt;/p&gt; 
&lt;p&gt;.. code-block:: python&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@njit
def market_making_algo(hbt):
    asset_no = 0
    tick_size = hbt.depth(asset_no).tick_size
    lot_size = hbt.depth(asset_no).lot_size

    # in nanoseconds
    while hbt.elapse(10_000_000) == 0:
        hbt.clear_inactive_orders(asset_no)

        a = 1
        b = 1
        c = 1
        hs = 1

        # Alpha, it can be a combination of several indicators.
        forecast = 0
        # In HFT, it can be various measurements of short-term market movements,
        # such as the high-low range in the last X minutes.
        volatility = 0
        # Delta risk, it can be a combination of several risks.
        position = hbt.position(asset_no)
        risk = (c + volatility) * position
        half_spread = (c + volatility) * hs

        max_notional_position = 1000
        notional_qty = 100

        depth = hbt.depth(asset_no)

        mid_price = (depth.best_bid + depth.best_ask) / 2.0

        # fair value pricing = mid_price + a * forecast
        #                      or underlying(correlated asset) + adjustment(basis + cost + etc) + a * forecast
        # risk skewing = -b * risk
        reservation_price = mid_price + a * forecast - b * risk
        new_bid = reservation_price - half_spread
        new_ask = reservation_price + half_spread

        new_bid_tick = min(np.round(new_bid / tick_size), depth.best_bid_tick)
        new_ask_tick = max(np.round(new_ask / tick_size), depth.best_ask_tick)

        order_qty = np.round(notional_qty / mid_price / lot_size) * lot_size

        # Elapses a process time.
        if not hbt.elapse(1_000_000) != 0:
            return False

        last_order_id = -1
        update_bid = True
        update_ask = True
        buy_limit_exceeded = position * mid_price &amp;gt; max_notional_position
        sell_limit_exceeded = position * mid_price &amp;lt; -max_notional_position
        orders = hbt.orders(asset_no)
        order_values = orders.values()
        while order_values.has_next():
            order = order_values.get()
            if order.side == BUY:
                if order.price_tick == new_bid_tick or buy_limit_exceeded:
                    update_bid = False
                if order.cancellable and (update_bid or buy_limit_exceeded):
                    hbt.cancel(asset_no, order.order_id, False)
                    last_order_id = order.order_id
            elif order.side == SELL:
                if order.price_tick == new_ask_tick or sell_limit_exceeded:
                    update_ask = False
                if order.cancellable and (update_ask or sell_limit_exceeded):
                    hbt.cancel(asset_no, order.order_id, False)
                    last_order_id = order.order_id

        # It can be combined with a grid trading strategy by submitting multiple orders to capture better spreads and
        # have queue position.
        # This approach requires more sophisticated logic to efficiently manage resting orders in the order book.
        if update_bid:
            # There is only one order at a given price, with new_bid_tick used as the order ID.
            order_id = new_bid_tick
            hbt.submit_buy_order(asset_no, order_id, new_bid_tick * tick_size, order_qty, GTX, LIMIT, False)
            last_order_id = order_id
        if update_ask:
            # There is only one order at a given price, with new_ask_tick used as the order ID.
            order_id = new_ask_tick
            hbt.submit_sell_order(asset_no, order_id, new_ask_tick * tick_size, order_qty, GTX, LIMIT, False)
            last_order_id = order_id

        # All order requests are considered to be requested at the same time.
        # Waits until one of the order responses is received.
        if last_order_id &amp;gt;= 0:
            # Waits for the order response for a maximum of 5 seconds.
            timeout = 5_000_000_000
            if not hbt.wait_order_response(asset_no, last_order_id, timeout):
                return False

    return True
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Tutorials&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Data Preparation &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Data%20Preparation.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Getting Started &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Getting%20Started.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Working with Market Depth and Trades &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Working%20with%20Market%20Depth%20and%20Trades.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Integrating Custom Data &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Integrating%20Custom%20Data.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Making Multiple Markets - Introduction &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Making%20Multiple%20Markets%20-%20Introduction.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;High-Frequency Grid Trading &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/High-Frequency%20Grid%20Trading.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;High-Frequency Grid Trading - Comparison Across Other Exchanges &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/High-Frequency%20Grid%20Trading%20-%20Comparison%20Across%20Other%20Exchanges.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Impact of Order Latency &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Impact%20of%20Order%20Latency.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Order Latency Data &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Order%20Latency%20Data.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Gu√©ant‚ÄìLehalle‚ÄìFernandez-Tapia Market Making Model and Grid Trading &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/GLFT%20Market%20Making%20Model%20and%20Grid%20Trading.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Making Multiple Markets &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Making%20Multiple%20Markets.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Risk Mitigation through Price Protection in Extreme Market Conditions &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Risk%20Mitigation%20through%20Price%20Protection%20in%20Extreme%20Market%20Conditions.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Level-3 Backtesting &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Level-3%20Backtesting.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Market Making with Alpha - Order Book Imbalance &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Market%20Making%20with%20Alpha%20-%20Order%20Book%20Imbalance.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Market Making with Alpha - Basis &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Market%20Making%20with%20Alpha%20-%20Basis.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Market Making with Alpha - APT &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Market%20Making%20with%20Alpha%20-%20APT.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Queue-Based Market Making in Large Tick Size Assets &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Queue-Based%20Market%20Making%20in%20Large%20Tick%20Size%20Assets.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Fusing Depth Data &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Fusing%20Depth%20Data.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Examples&lt;/h1&gt; 
&lt;p&gt;You can find more examples in &lt;code&gt;examples &amp;lt;https://github.com/nkaz001/hftbacktest/tree/master/examples&amp;gt;&lt;/code&gt;_ directory and &lt;code&gt;Rust examples &amp;lt;https://github.com/nkaz001/hftbacktest/blob/master/hftbacktest/examples/&amp;gt;&lt;/code&gt;_.&lt;/p&gt; 
&lt;h2&gt;The complete process of backtesting Binance Futures&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;high-frequency gridtrading &amp;lt;https://github.com/nkaz001/hftbacktest/blob/master/hftbacktest/examples/gridtrading.ipynb&amp;gt;&lt;/code&gt;_: The complete process of backtesting Binance Futures using a high-frequency grid trading strategy implemented in Rust.&lt;/p&gt; 
&lt;h1&gt;Migration to V2&lt;/h1&gt; 
&lt;p&gt;Please see the &lt;code&gt;migration guide &amp;lt;https://hftbacktest.readthedocs.io/en/latest/migration2.html&amp;gt;&lt;/code&gt;_.&lt;/p&gt; 
&lt;h1&gt;Roadmap&lt;/h1&gt; 
&lt;p&gt;Please see the &lt;code&gt;roadmap &amp;lt;https://github.com/nkaz001/hftbacktest/blob/master/ROADMAP.md&amp;gt;&lt;/code&gt;_.&lt;/p&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;Thank you for considering contributing to hftbacktest! Welcome any and all help to improve the project. If you have an idea for an enhancement or a bug fix, please open an issue or discussion on GitHub to discuss it.&lt;/p&gt; 
&lt;p&gt;The following items are examples of contributions you can make to this project:&lt;/p&gt; 
&lt;p&gt;Please see the &lt;code&gt;roadmap &amp;lt;https://github.com/nkaz001/hftbacktest/blob/master/ROADMAP.md&amp;gt;&lt;/code&gt;_.&lt;/p&gt; 
&lt;p&gt;.. |python| image:: &lt;a href="https://shields.io/badge/python-3.11+-blue"&gt;https://shields.io/badge/python-3.11+-blue&lt;/a&gt; :alt: Python Version :target: &lt;a href="https://www.python.org/"&gt;https://www.python.org/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;.. |codeql| image:: &lt;a href="https://github.com/nkaz001/hftbacktest/actions/workflows/codeql.yml/badge.svg?branch=master&amp;amp;event=push"&gt;https://github.com/nkaz001/hftbacktest/actions/workflows/codeql.yml/badge.svg?branch=master&amp;amp;event=push&lt;/a&gt; :alt: CodeQL :target: &lt;a href="https://github.com/nkaz001/hftbacktest/actions/workflows/codeql.yml"&gt;https://github.com/nkaz001/hftbacktest/actions/workflows/codeql.yml&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;.. |pypi| image:: &lt;a href="https://badge.fury.io/py/hftbacktest.svg"&gt;https://badge.fury.io/py/hftbacktest.svg&lt;/a&gt; :alt: Package Version :target: &lt;a href="https://pypi.org/project/hftbacktest"&gt;https://pypi.org/project/hftbacktest&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;.. |downloads| image:: &lt;a href="https://static.pepy.tech/badge/hftbacktest"&gt;https://static.pepy.tech/badge/hftbacktest&lt;/a&gt; :alt: Downloads :target: &lt;a href="https://pepy.tech/project/hftbacktest"&gt;https://pepy.tech/project/hftbacktest&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;.. |crates| image:: &lt;a href="https://img.shields.io/crates/v/hftbacktest.svg"&gt;https://img.shields.io/crates/v/hftbacktest.svg&lt;/a&gt; :alt: Rust crates.io version :target: &lt;a href="https://crates.io/crates/hftbacktest"&gt;https://crates.io/crates/hftbacktest&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;.. |license| image:: &lt;a href="https://img.shields.io/badge/License-MIT-green.svg"&gt;https://img.shields.io/badge/License-MIT-green.svg&lt;/a&gt; :alt: License :target: &lt;a href="https://github.com/nkaz001/hftbacktest/raw/master/LICENSE"&gt;https://github.com/nkaz001/hftbacktest/blob/master/LICENSE&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;.. |docs| image:: &lt;a href="https://readthedocs.org/projects/hftbacktest/badge/?version=latest"&gt;https://readthedocs.org/projects/hftbacktest/badge/?version=latest&lt;/a&gt; :target: &lt;a href="https://hftbacktest.readthedocs.io/en/latest/?badge=latest"&gt;https://hftbacktest.readthedocs.io/en/latest/?badge=latest&lt;/a&gt; :alt: Documentation Status&lt;/p&gt; 
&lt;p&gt;.. |roadmap| image:: &lt;a href="https://img.shields.io/badge/Roadmap-gray"&gt;https://img.shields.io/badge/Roadmap-gray&lt;/a&gt; :target: &lt;a href="https://github.com/nkaz001/hftbacktest/raw/master/ROADMAP.md"&gt;https://github.com/nkaz001/hftbacktest/blob/master/ROADMAP.md&lt;/a&gt; :alt: Roadmap&lt;/p&gt; 
&lt;p&gt;.. |github| image:: &lt;a href="https://img.shields.io/github/stars/nkaz001/hftbacktest?style=social"&gt;https://img.shields.io/github/stars/nkaz001/hftbacktest?style=social&lt;/a&gt; :target: &lt;a href="https://github.com/nkaz001/hftbacktest"&gt;https://github.com/nkaz001/hftbacktest&lt;/a&gt; :alt: Github&lt;/p&gt; 
&lt;p&gt;.. |rustc| image:: &lt;a href="https://shields.io/badge/rustc-1.88-blue"&gt;https://shields.io/badge/rustc-1.88-blue&lt;/a&gt; :alt: Rust Version :target: &lt;a href="https://www.rust-lang.org/"&gt;https://www.rust-lang.org/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vercel/turborepo</title>
      <link>https://github.com/vercel/turborepo</link>
      <description>&lt;p&gt;Build system optimized for JavaScript¬†and TypeScript, written in Rust&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://turborepo.com"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://user-images.githubusercontent.com/4060187/196936123-f6e1db90-784d-4174-b774-92502b718836.png"&gt; 
   &lt;img src="https://user-images.githubusercontent.com/4060187/196936104-5797972c-ab10-4834-bd61-0d1e5f442c9c.png" height="128"&gt; 
  &lt;/picture&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align="center"&gt;&lt;a href="https://turborepo.com"&gt;Turborepo&lt;/a&gt;&lt;/h1&gt;
&lt;a href="https://turborepo.com"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a aria-label="Vercel logo" href="https://vercel.com/"&gt;&lt;img src="https://img.shields.io/badge/MADE%20BY%20Vercel-000000.svg?style=for-the-badge&amp;amp;logo=Vercel&amp;amp;labelColor=000"&gt;&lt;/a&gt; &lt;a aria-label="NPM version" href="https://www.npmjs.com/package/turbo"&gt;&lt;img alt="" src="https://img.shields.io/npm/v/turbo.svg?style=for-the-badge&amp;amp;labelColor=000000"&gt;&lt;/a&gt; &lt;a aria-label="License" href="https://github.com/vercel/turborepo/raw/main/LICENSE"&gt;&lt;img alt="" src="https://img.shields.io/npm/l/turbo.svg?style=for-the-badge&amp;amp;labelColor=000000&amp;amp;color="&gt;&lt;/a&gt; &lt;a aria-label="Join the community on GitHub" href="https://github.com/vercel/turborepo/discussions"&gt;&lt;img alt="" src="https://img.shields.io/badge/Join%20the%20community-blueviolet.svg?style=for-the-badge&amp;amp;logo=turborepo&amp;amp;labelColor=000000&amp;amp;logoWidth=20&amp;amp;logoColor=white"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Turborepo is a high-performance build system for JavaScript and TypeScript codebases, written in Rust.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://turborepo.com"&gt;https://turborepo.com&lt;/a&gt; to get started with Turborepo.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/vercel/turborepo/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Turborepo community can be found on &lt;a href="https://github.com/vercel/turborepo/discussions"&gt;GitHub Discussions&lt;/a&gt;, where you can ask questions, voice ideas, and share your projects.&lt;/p&gt; 
&lt;p&gt;To chat with other community members, you can join &lt;a href="https://vercel.community/tag/turborepo"&gt;Vercel Community's &lt;code&gt;#turborepo&lt;/code&gt; tag&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href="https://github.com/vercel/turborepo/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; applies to all Turborepo community channels.&lt;/p&gt; 
&lt;h2&gt;Who is using Turborepo?&lt;/h2&gt; 
&lt;p&gt;Turborepo is used by the world's leading companies. Check out the &lt;a href="https://turborepo.com/showcase"&gt;Turborepo Showcase&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Updates&lt;/h2&gt; 
&lt;p&gt;Follow &lt;a href="https://x.com/turborepo"&gt;@turborepo&lt;/a&gt; on X for project updates.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Turborepo&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Jared Palmer (&lt;a href="https://x.com/jaredpalmer"&gt;@jaredpalmer&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you believe you have found a security vulnerability in Turborepo, we encourage you to responsibly disclose this and not open a public issue. We will investigate all legitimate reports. Email &lt;code&gt;security@vercel.com&lt;/code&gt; to disclose any security vulnerabilities.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://vercel.com/security"&gt;https://vercel.com/security&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cloudflare/pingora</title>
      <link>https://github.com/cloudflare/pingora</link>
      <description>&lt;p&gt;A library for building fast, reliable and evolvable network services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pingora&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cloudflare/pingora/main/docs/assets/pingora_banner.png" alt="Pingora banner image"&gt;&lt;/p&gt; 
&lt;h2&gt;What is Pingora&lt;/h2&gt; 
&lt;p&gt;Pingora is a Rust framework to &lt;a href="https://blog.cloudflare.com/pingora-open-source"&gt;build fast, reliable and programmable networked systems&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Pingora is battle tested as it has been serving more than 40 million Internet requests per second for &lt;a href="https://blog.cloudflare.com/how-we-built-pingora-the-proxy-that-connects-cloudflare-to-the-internet"&gt;more than a few years&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Feature highlights&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Async Rust: fast and reliable&lt;/li&gt; 
 &lt;li&gt;HTTP 1/2 end to end proxy&lt;/li&gt; 
 &lt;li&gt;TLS over OpenSSL, BoringSSL or rustls(experimental).&lt;/li&gt; 
 &lt;li&gt;gRPC and websocket proxying&lt;/li&gt; 
 &lt;li&gt;Graceful reload&lt;/li&gt; 
 &lt;li&gt;Customizable load balancing and failover strategies&lt;/li&gt; 
 &lt;li&gt;Support for a variety of observability tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reasons to use Pingora&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt; is your top priority: Pingora is a more memory safe alternative for services that are written in C/C++&lt;/li&gt; 
 &lt;li&gt;Your service is &lt;strong&gt;performance-sensitive&lt;/strong&gt;: Pingora is fast and efficient&lt;/li&gt; 
 &lt;li&gt;Your service requires extensive &lt;strong&gt;customization&lt;/strong&gt;: The APIs Pingora proxy framework provides are highly programmable&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Getting started&lt;/h1&gt; 
&lt;p&gt;See our &lt;a href="https://raw.githubusercontent.com/cloudflare/pingora/main/docs/quick_start.md"&gt;quick starting guide&lt;/a&gt; to see how easy it is to build a load balancer.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href="https://raw.githubusercontent.com/cloudflare/pingora/main/docs/user_guide/index.md"&gt;user guide&lt;/a&gt; covers more topics such as how to configure and run Pingora servers, as well as how to build custom HTTP servers and proxy logic on top of Pingora's framework.&lt;/p&gt; 
&lt;p&gt;API docs are also available for all the crates.&lt;/p&gt; 
&lt;h1&gt;Notable crates in this workspace&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pingora: the "public facing" crate to build networked systems and proxies&lt;/li&gt; 
 &lt;li&gt;Pingora-core: this crate defines the protocols, functionalities and basic traits&lt;/li&gt; 
 &lt;li&gt;Pingora-proxy: the logic and APIs to build HTTP proxies&lt;/li&gt; 
 &lt;li&gt;Pingora-error: the common error type used across Pingora crates&lt;/li&gt; 
 &lt;li&gt;Pingora-http: the HTTP header definitions and APIs&lt;/li&gt; 
 &lt;li&gt;Pingora-openssl &amp;amp; pingora-boringssl: SSL related extensions and APIs&lt;/li&gt; 
 &lt;li&gt;Pingora-ketama: the &lt;a href="https://github.com/RJ/ketama"&gt;Ketama&lt;/a&gt; consistent algorithm&lt;/li&gt; 
 &lt;li&gt;Pingora-limits: efficient counting algorithms&lt;/li&gt; 
 &lt;li&gt;Pingora-load-balancing: load balancing algorithm extensions for pingora-proxy&lt;/li&gt; 
 &lt;li&gt;Pingora-memory-cache: Async in-memory caching with cache lock to prevent cache stampede&lt;/li&gt; 
 &lt;li&gt;Pingora-timeout: A more efficient async timer system&lt;/li&gt; 
 &lt;li&gt;TinyUfo: The caching algorithm behind pingora-memory-cache&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that Pingora proxy integration with caching should be considered experimental, and as such APIs related to caching are currently highly volatile.&lt;/p&gt; 
&lt;h1&gt;System requirements&lt;/h1&gt; 
&lt;h2&gt;Systems&lt;/h2&gt; 
&lt;p&gt;Linux is our tier 1 environment and main focus.&lt;/p&gt; 
&lt;p&gt;We will try our best for most code to compile for Unix environments. This is for developers and users to have an easier time developing with Pingora in Unix-like environments like macOS (though some features might be missing)&lt;/p&gt; 
&lt;p&gt;Windows support is preliminary by community's best effort only.&lt;/p&gt; 
&lt;p&gt;Both x86_64 and aarch64 architectures will be supported.&lt;/p&gt; 
&lt;h2&gt;Rust version&lt;/h2&gt; 
&lt;p&gt;Pingora keeps a rolling MSRV (minimum supported Rust version) policy of 6 months. This means we will accept PRs that upgrade the MSRV as long as the new Rust version used is at least 6 months old.&lt;/p&gt; 
&lt;p&gt;Our current MSRV is effectively 1.82.&lt;/p&gt; 
&lt;p&gt;Previously Pingora advertised an MSRV of 1.72. Older Rust versions may still be able to compile via &lt;code&gt;cargo update&lt;/code&gt; pinning dependencies such as &lt;code&gt;backtrace@0.3.74&lt;/code&gt;. The advertised MSRV in config files will be officially bumped to 1.82 in an upcoming release.&lt;/p&gt; 
&lt;p&gt;Building with the optional feature &lt;code&gt;boringssl&lt;/code&gt; with Boring &amp;gt;= 4.14 requires Rust 1.80.&lt;/p&gt; 
&lt;h2&gt;Build Requirements&lt;/h2&gt; 
&lt;p&gt;Some of the crates in this repository have dependencies on additional tools and libraries that must be satisfied in order to build them:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure that &lt;a href="https://clang.llvm.org/"&gt;Clang&lt;/a&gt; is installed on your system (for boringssl)&lt;/li&gt; 
 &lt;li&gt;Make sure that &lt;a href="https://www.perl.org/"&gt;Perl 5&lt;/a&gt; is installed on your system (for openssl)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;Please see our &lt;a href="https://raw.githubusercontent.com/cloudflare/pingora/main/.github/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;This project is Licensed under &lt;a href="https://raw.githubusercontent.com/cloudflare/pingora/main/LICENSE"&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nushell/nushell</title>
      <link>https://github.com/nushell/nushell</link>
      <description>&lt;p&gt;A new type of shell&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nushell 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://crates.io/crates/nu"&gt;&lt;img src="https://img.shields.io/crates/v/nu.svg?sanitize=true" alt="Crates.io"&gt;&lt;/a&gt; &lt;a href="https://github.com/nushell/nushell/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/nushell/nushell/ci.yml?branch=main" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://github.com/nushell/nushell/actions/workflows/nightly-build.yml"&gt;&lt;img src="https://github.com/nushell/nushell/actions/workflows/nightly-build.yml/badge.svg?sanitize=true" alt="Nightly Build"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/NtAbbGn"&gt;&lt;img src="https://img.shields.io/discord/601130461678272522.svg?logo=discord" alt="Discord"&gt;&lt;/a&gt; &lt;a href="https://changelog.com/podcast/363"&gt;&lt;img src="https://img.shields.io/badge/The%20Changelog-%23363-61c192.svg?sanitize=true" alt="The Changelog #363"&gt;&lt;/a&gt; &lt;a href="https://github.com/nushell/nushell/graphs/commit-activity"&gt;&lt;img src="https://img.shields.io/github/commit-activity/m/nushell/nushell" alt="GitHub commit activity"&gt;&lt;/a&gt; &lt;a href="https://github.com/nushell/nushell/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/nushell/nushell" alt="GitHub contributors"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A new type of shell.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/nushell/nushell/main/assets/nushell-autocomplete6.gif" alt="Example of nushell" title="Example of nushell"&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents 
 &lt;!-- omit in toc --&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nushell/nushell/main/#status"&gt;Status&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nushell/nushell/main/#learning-about-nu"&gt;Learning About Nu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nushell/nushell/main/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nushell/nushell/main/#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nushell/nushell/main/#philosophy"&gt;Philosophy&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nushell/nushell/main/#pipelines"&gt;Pipelines&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nushell/nushell/main/#opening-files"&gt;Opening files&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nushell/nushell/main/#plugins"&gt;Plugins&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nushell/nushell/main/#goals"&gt;Goals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nushell/nushell/main/#officially-supported-by"&gt;Officially Supported By&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nushell/nushell/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nushell/nushell/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;p&gt;This project has reached a minimum-viable-product level of quality. Many people use it as their daily driver, but it may be unstable for some commands. Nu's design is subject to change as it matures.&lt;/p&gt; 
&lt;h2&gt;Learning About Nu&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://www.nushell.sh/book/"&gt;Nushell book&lt;/a&gt; is the primary source of Nushell documentation. You can find &lt;a href="https://www.nushell.sh/commands/"&gt;a full list of Nu commands in the book&lt;/a&gt;, and we have many examples of using Nu in our &lt;a href="https://www.nushell.sh/cookbook/"&gt;cookbook&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We're also active on &lt;a href="https://discord.gg/NtAbbGn"&gt;Discord&lt;/a&gt;; come and chat with us!&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;To quickly install Nu:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Linux and macOS
brew install nushell
# Windows
winget install nushell
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use &lt;code&gt;Nu&lt;/code&gt; in GitHub Action, check &lt;a href="https://github.com/marketplace/actions/setup-nu"&gt;setup-nu&lt;/a&gt; for more detail.&lt;/p&gt; 
&lt;p&gt;Detailed installation instructions can be found in the &lt;a href="https://www.nushell.sh/book/installation.html"&gt;installation chapter of the book&lt;/a&gt;. Nu is available via many package managers:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/nushell/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/nushell.svg?columns=3" alt="Packaging status"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For details about which platforms the Nushell team actively supports, see &lt;a href="https://raw.githubusercontent.com/nushell/nushell/main/devdocs/PLATFORM_SUPPORT.md"&gt;our platform support policy&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;The default configurations can be found at &lt;a href="https://raw.githubusercontent.com/nushell/nushell/main/crates/nu-utils/src/default_files"&gt;sample_config&lt;/a&gt; which are the configuration files one gets when they startup Nushell for the first time.&lt;/p&gt; 
&lt;p&gt;It sets all of the default configuration to run Nushell. From here one can then customize this file for their specific needs.&lt;/p&gt; 
&lt;p&gt;To see where &lt;em&gt;config.nu&lt;/em&gt; is located on your system simply type this command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;$nu.config-path
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please see our &lt;a href="https://www.nushell.sh"&gt;book&lt;/a&gt; for all of the Nushell documentation.&lt;/p&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;Nu draws inspiration from projects like PowerShell, functional programming languages, and modern CLI tools. Rather than thinking of files and data as raw streams of text, Nu looks at each input as something with structure. For example, when you list the contents of a directory what you get back is a table of rows, where each row represents an item in that directory. These values can be piped through a series of steps, in a series of commands called a 'pipeline'.&lt;/p&gt; 
&lt;h3&gt;Pipelines&lt;/h3&gt; 
&lt;p&gt;In Unix, it's common to pipe between commands to split up a sophisticated command over multiple steps. Nu takes this a step further and builds heavily on the idea of &lt;em&gt;pipelines&lt;/em&gt;. As in the Unix philosophy, Nu allows commands to output to stdout and read from stdin. Additionally, commands can output structured data (you can think of this as a third kind of stream). Commands that work in the pipeline fit into one of three categories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Commands that produce a stream (e.g., &lt;code&gt;ls&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Commands that filter a stream (e.g., &lt;code&gt;where type == "dir"&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Commands that consume the output of the pipeline (e.g., &lt;code&gt;table&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Commands are separated by the pipe symbol (&lt;code&gt;|&lt;/code&gt;) to denote a pipeline flowing left to right.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ls | where type == "dir" | table
# =&amp;gt; ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
# =&amp;gt; ‚îÇ #  ‚îÇ   name   ‚îÇ type ‚îÇ  size   ‚îÇ   modified    ‚îÇ
# =&amp;gt; ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
# =&amp;gt; ‚îÇ  0 ‚îÇ .cargo   ‚îÇ dir  ‚îÇ     0 B ‚îÇ 9 minutes ago ‚îÇ
# =&amp;gt; ‚îÇ  1 ‚îÇ assets   ‚îÇ dir  ‚îÇ     0 B ‚îÇ 2 weeks ago   ‚îÇ
# =&amp;gt; ‚îÇ  2 ‚îÇ crates   ‚îÇ dir  ‚îÇ 4.0 KiB ‚îÇ 2 weeks ago   ‚îÇ
# =&amp;gt; ‚îÇ  3 ‚îÇ docker   ‚îÇ dir  ‚îÇ     0 B ‚îÇ 2 weeks ago   ‚îÇ
# =&amp;gt; ‚îÇ  4 ‚îÇ docs     ‚îÇ dir  ‚îÇ     0 B ‚îÇ 2 weeks ago   ‚îÇ
# =&amp;gt; ‚îÇ  5 ‚îÇ images   ‚îÇ dir  ‚îÇ     0 B ‚îÇ 2 weeks ago   ‚îÇ
# =&amp;gt; ‚îÇ  6 ‚îÇ pkg_mgrs ‚îÇ dir  ‚îÇ     0 B ‚îÇ 2 weeks ago   ‚îÇ
# =&amp;gt; ‚îÇ  7 ‚îÇ samples  ‚îÇ dir  ‚îÇ     0 B ‚îÇ 2 weeks ago   ‚îÇ
# =&amp;gt; ‚îÇ  8 ‚îÇ src      ‚îÇ dir  ‚îÇ 4.0 KiB ‚îÇ 2 weeks ago   ‚îÇ
# =&amp;gt; ‚îÇ  9 ‚îÇ target   ‚îÇ dir  ‚îÇ     0 B ‚îÇ a day ago     ‚îÇ
# =&amp;gt; ‚îÇ 10 ‚îÇ tests    ‚îÇ dir  ‚îÇ 4.0 KiB ‚îÇ 2 weeks ago   ‚îÇ
# =&amp;gt; ‚îÇ 11 ‚îÇ wix      ‚îÇ dir  ‚îÇ     0 B ‚îÇ 2 weeks ago   ‚îÇ
# =&amp;gt; ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Because most of the time you'll want to see the output of a pipeline, &lt;code&gt;table&lt;/code&gt; is assumed. We could have also written the above:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ls | where type == "dir"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Being able to use the same commands and compose them differently is an important philosophy in Nu. For example, we could use the built-in &lt;code&gt;ps&lt;/code&gt; command to get a list of the running processes, using the same &lt;code&gt;where&lt;/code&gt; as above.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ps | where cpu &amp;gt; 0
# =&amp;gt; ‚ï≠‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
# =&amp;gt; ‚îÇ # ‚îÇ  pid  ‚îÇ   name    ‚îÇ  cpu  ‚îÇ    mem    ‚îÇ  virtual  ‚îÇ
# =&amp;gt; ‚îú‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
# =&amp;gt; ‚îÇ 0 ‚îÇ  2240 ‚îÇ Slack.exe ‚îÇ 16.40 ‚îÇ 178.3 MiB ‚îÇ 232.6 MiB ‚îÇ
# =&amp;gt; ‚îÇ 1 ‚îÇ 16948 ‚îÇ Slack.exe ‚îÇ 16.32 ‚îÇ 205.0 MiB ‚îÇ 197.9 MiB ‚îÇ
# =&amp;gt; ‚îÇ 2 ‚îÇ 17700 ‚îÇ nu.exe    ‚îÇ  3.77 ‚îÇ  26.1 MiB ‚îÇ   8.8 MiB ‚îÇ
# =&amp;gt; ‚ï∞‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Opening files&lt;/h3&gt; 
&lt;p&gt;Nu can load file and URL contents as raw text or structured data (if it recognizes the format). For example, you can load a .toml file as structured data and explore it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;open Cargo.toml
# =&amp;gt; ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
# =&amp;gt; ‚îÇ bin              ‚îÇ [table 1 row]      ‚îÇ
# =&amp;gt; ‚îÇ dependencies     ‚îÇ {record 25 fields} ‚îÇ
# =&amp;gt; ‚îÇ dev-dependencies ‚îÇ {record 8 fields}  ‚îÇ
# =&amp;gt; ‚îÇ features         ‚îÇ {record 10 fields} ‚îÇ
# =&amp;gt; ‚îÇ package          ‚îÇ {record 13 fields} ‚îÇ
# =&amp;gt; ‚îÇ patch            ‚îÇ {record 1 field}   ‚îÇ
# =&amp;gt; ‚îÇ profile          ‚îÇ {record 3 fields}  ‚îÇ
# =&amp;gt; ‚îÇ target           ‚îÇ {record 3 fields}  ‚îÇ
# =&amp;gt; ‚îÇ workspace        ‚îÇ {record 1 field}   ‚îÇ
# =&amp;gt; ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can pipe this into a command that gets the contents of one of the columns:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;open Cargo.toml | get package
# =&amp;gt; ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
# =&amp;gt; ‚îÇ authors       ‚îÇ [list 1 item]                      ‚îÇ
# =&amp;gt; ‚îÇ default-run   ‚îÇ nu                                 ‚îÇ
# =&amp;gt; ‚îÇ description   ‚îÇ A new type of shell                ‚îÇ
# =&amp;gt; ‚îÇ documentation ‚îÇ https://www.nushell.sh/book/       ‚îÇ
# =&amp;gt; ‚îÇ edition       ‚îÇ 2018                               ‚îÇ
# =&amp;gt; ‚îÇ exclude       ‚îÇ [list 1 item]                      ‚îÇ
# =&amp;gt; ‚îÇ homepage      ‚îÇ https://www.nushell.sh             ‚îÇ
# =&amp;gt; ‚îÇ license       ‚îÇ MIT                                ‚îÇ
# =&amp;gt; ‚îÇ metadata      ‚îÇ {record 1 field}                   ‚îÇ
# =&amp;gt; ‚îÇ name          ‚îÇ nu                                 ‚îÇ
# =&amp;gt; ‚îÇ repository    ‚îÇ https://github.com/nushell/nushell ‚îÇ
# =&amp;gt; ‚îÇ rust-version  ‚îÇ 1.60                               ‚îÇ
# =&amp;gt; ‚îÇ version       ‚îÇ 0.72.0                             ‚îÇ
# =&amp;gt; ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And if needed we can drill down further:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;open Cargo.toml | get package.version
# =&amp;gt; 0.72.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Plugins&lt;/h3&gt; 
&lt;p&gt;Nu supports plugins that offer additional functionality to the shell and follow the same structured data model that built-in commands use. There are a few examples in the &lt;code&gt;crates/nu_plugins_*&lt;/code&gt; directories.&lt;/p&gt; 
&lt;p&gt;Plugins are binaries that are available in your path and follow a &lt;code&gt;nu_plugin_*&lt;/code&gt; naming convention. These binaries interact with nu via a simple JSON-RPC protocol where the command identifies itself and passes along its configuration, making it available for use. If the plugin is a filter, data streams to it one element at a time, and it can stream data back in return via stdin/stdout. If the plugin is a sink, it is given the full vector of final data and is given free reign over stdin/stdout to use as it pleases.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://github.com/nushell/awesome-nu#plugins"&gt;awesome-nu repo&lt;/a&gt; lists a variety of nu-plugins while the &lt;a href="https://github.com/nushell/showcase"&gt;showcase repo&lt;/a&gt; &lt;em&gt;shows&lt;/em&gt; off informative blog posts that have been written about Nushell along with videos that highlight technical topics that have been presented.&lt;/p&gt; 
&lt;h2&gt;Goals&lt;/h2&gt; 
&lt;p&gt;Nu adheres closely to a set of goals that make up its design philosophy. As features are added, they are checked against these goals.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;First and foremost, Nu is cross-platform. Commands and techniques should work across platforms and Nu has &lt;a href="https://raw.githubusercontent.com/nushell/nushell/main/devdocs/PLATFORM_SUPPORT.md"&gt;first-class support for Windows, macOS, and Linux&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Nu ensures compatibility with existing platform-specific executables.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Nu's workflow and tools should have the usability expected of modern software in 2022 (and beyond).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Nu views data as either structured or unstructured. It is a structured shell like PowerShell.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Finally, Nu views data functionally. Rather than using mutation, pipelines act as a means to load, change, and save data without mutable state.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Officially Supported By&lt;/h2&gt; 
&lt;p&gt;Please submit an issue or PR to be added to this list.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ajeetdsouza/zoxide"&gt;zoxide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/starship/starship"&gt;starship&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ohmyposh.dev"&gt;oh-my-posh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://couchbase.sh"&gt;Couchbase Shell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pypa/virtualenv"&gt;virtualenv&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ellie/atuin"&gt;atuin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/clap-rs/clap/tree/master/clap_complete_nushell"&gt;clap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://github.com/bevry/dorothy"&gt;Dorothy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/direnv/direnv/raw/master/docs/hook.md#nushell"&gt;Direnv&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x-cmd.com/mod/nu"&gt;x-cmd&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/version-fox/vfox"&gt;vfox&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/nushell/nushell/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; for details. Thanks to all the people who already contributed!&lt;/p&gt; 
&lt;a href="https://github.com/nushell/nushell/graphs/contributors"&gt; &lt;img src="https://contributors-img.web.app/image?repo=nushell/nushell&amp;amp;max=750&amp;amp;columns=20"&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The project is made available under the MIT license. See the &lt;code&gt;LICENSE&lt;/code&gt; file for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rustfs/rustfs</title>
      <link>https://github.com/rustfs/rustfs</link>
      <description>&lt;p&gt;üöÄ High-performance distributed object storage for MinIO alternative.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://rustfs.com"&gt;&lt;img src="https://rustfs.com/images/rustfs-github.png" alt="RustFS"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt;RustFS is a high-performance distributed object storage software built using Rust&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/rustfs/rustfs/actions/workflows/ci.yml"&gt;&lt;img alt="CI" src="https://github.com/rustfs/rustfs/actions/workflows/ci.yml/badge.svg?sanitize=true"&gt;&lt;/a&gt; &lt;a href="https://github.com/rustfs/rustfs/actions/workflows/docker.yml"&gt;&lt;img alt="Build and Push Docker Images" src="https://github.com/rustfs/rustfs/actions/workflows/docker.yml/badge.svg?sanitize=true"&gt;&lt;/a&gt; &lt;img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/rustfs/rustfs"&gt; &lt;img alt="Github Last Commit" src="https://img.shields.io/github/last-commit/rustfs/rustfs"&gt; &lt;a href="https://hellogithub.com/repository/rustfs/rustfs" target="_blank"&gt;&lt;img src="https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=b95bcb72bdc340b68f16fdf6790b7d5b&amp;amp;claim_uid=MsbvjYeLDKAH457&amp;amp;theme=small" alt="FeaturedÔΩúHelloGitHub"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://docs.rustfs.com/introduction.html"&gt;Getting Started&lt;/a&gt; ¬∑ &lt;a href="https://docs.rustfs.com/"&gt;Docs&lt;/a&gt; ¬∑ &lt;a href="https://github.com/rustfs/rustfs/issues"&gt;Bug reports&lt;/a&gt; ¬∑ &lt;a href="https://github.com/rustfs/rustfs/discussions"&gt;Discussions&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; English | &lt;a href="https://github.com/rustfs/rustfs/raw/main/README_ZH.md"&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | 
 &lt;!-- Keep these links. Translations will automatically update with the README. --&gt; &lt;a href="https://readme-i18n.com/rustfs/rustfs?lang=de"&gt;Deutsch&lt;/a&gt; | &lt;a href="https://readme-i18n.com/rustfs/rustfs?lang=es"&gt;Espa√±ol&lt;/a&gt; | &lt;a href="https://readme-i18n.com/rustfs/rustfs?lang=fr"&gt;fran√ßais&lt;/a&gt; | &lt;a href="https://readme-i18n.com/rustfs/rustfs?lang=ja"&gt;Êó•Êú¨Ë™û&lt;/a&gt; | &lt;a href="https://readme-i18n.com/rustfs/rustfs?lang=ko"&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt; | &lt;a href="https://readme-i18n.com/rustfs/rustfs?lang=pt"&gt;Portugu√™s&lt;/a&gt; | &lt;a href="https://readme-i18n.com/rustfs/rustfs?lang=ru"&gt;–†—É—Å—Å–∫–∏–π&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;RustFS is a high-performance distributed object storage software built using Rust, one of the most popular languages worldwide. Along with MinIO, it shares a range of advantages such as simplicity, S3 compatibility, open-source nature, support for data lakes, AI, and big data. Furthermore, it has a better and more user-friendly open-source license in comparison to other storage systems, being constructed under the Apache license. As Rust serves as its foundation, RustFS provides faster speed and safer distributed features for high-performance object storage.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;RustFS is under rapid development. Do NOT use in production environments!&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;High Performance&lt;/strong&gt;: Built with Rust, ensuring speed and efficiency.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Distributed Architecture&lt;/strong&gt;: Scalable and fault-tolerant design for large-scale deployments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;S3 Compatibility&lt;/strong&gt;: Seamless integration with existing S3-compatible applications.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data Lake Support&lt;/strong&gt;: Optimized for big data and AI workloads.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Open Source&lt;/strong&gt;: Licensed under Apache 2.0, encouraging community contributions and transparency.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User-Friendly&lt;/strong&gt;: Designed with simplicity in mind, making it easy to deploy and manage.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;RustFS vs MinIO&lt;/h2&gt; 
&lt;p&gt;Stress test server parameters&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;parameter&lt;/th&gt; 
   &lt;th&gt;Remark&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CPU&lt;/td&gt; 
   &lt;td&gt;2 Core&lt;/td&gt; 
   &lt;td&gt;Intel Xeon(Sapphire Rapids) Platinum 8475B , 2.7/3.2 GHz&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Memory&lt;/td&gt; 
   &lt;td&gt;4GB&lt;/td&gt; 
   &lt;td&gt;&amp;nbsp;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Network&lt;/td&gt; 
   &lt;td&gt;15Gbp&lt;/td&gt; 
   &lt;td&gt;&amp;nbsp;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Driver&lt;/td&gt; 
   &lt;td&gt;40GB x 4&lt;/td&gt; 
   &lt;td&gt;IOPS 3800 / Driver&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/2e4979b5-260c-4f2c-ac12-c87fd558072a"&gt;https://github.com/user-attachments/assets/2e4979b5-260c-4f2c-ac12-c87fd558072a&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;RustFS vs Other object storage&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;RustFS&lt;/th&gt; 
   &lt;th&gt;Other object storage&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Powerful Console&lt;/td&gt; 
   &lt;td&gt;Simple and useless Console&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Developed based on Rust language, memory is safer&lt;/td&gt; 
   &lt;td&gt;Developed in Go or C, with potential issues like memory GC/leaks&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Does not report logs to third-party countries&lt;/td&gt; 
   &lt;td&gt;Reporting logs to other third countries may violate national security laws&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Licensed under Apache, more business-friendly&lt;/td&gt; 
   &lt;td&gt;AGPL V3 License and other License, polluted open source and License traps, infringement of intellectual property rights&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Comprehensive S3 support, works with domestic and international cloud providers&lt;/td&gt; 
   &lt;td&gt;Full support for S3, but no local cloud vendor support&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rust-based development, strong support for secure and innovative devices&lt;/td&gt; 
   &lt;td&gt;Poor support for edge gateways and secure innovative devices&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Stable commercial prices, free community support&lt;/td&gt; 
   &lt;td&gt;High pricing, with costs up to $250,000 for 1PiB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;No risk&lt;/td&gt; 
   &lt;td&gt;Intellectual property risks and risks of prohibited uses&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;To get started with RustFS, follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;One-click installation script (Option 1)‚Äã‚Äã&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;curl -O  https://rustfs.com/install_rustfs.sh &amp;amp;&amp;amp; bash install_rustfs.sh
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Docker Quick Start (Option 2)‚Äã‚Äã&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt; # Latest stable release
 docker run -d -p 9000:9000 -v /data:/data rustfs/rustfs:latest

 # Development version (main branch)
 docker run -d -p 9000:9000 -v /data:/data rustfs/rustfs:main-latest

 # Specific version
 docker run -d -p 9000:9000 -v /data:/data rustfs/rustfs:v1.0.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build from Source (Option 3) - Advanced Users&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;For developers who want to build RustFS Docker images from source with multi-architecture support:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# Build multi-architecture images locally
./docker-buildx.sh --build-arg RELEASE=latest

# Build and push to registry
./docker-buildx.sh --push

# Build specific version
./docker-buildx.sh --release v1.0.0 --push

# Build for custom registry
./docker-buildx.sh --registry your-registry.com --namespace yourname --push
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;docker-buildx.sh&lt;/code&gt; script supports:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Multi-architecture builds&lt;/strong&gt;: &lt;code&gt;linux/amd64&lt;/code&gt;, &lt;code&gt;linux/arm64&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Automatic version detection&lt;/strong&gt;: Uses git tags or commit hashes&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Registry flexibility&lt;/strong&gt;: Supports Docker Hub, GitHub Container Registry, etc.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Build optimization&lt;/strong&gt;: Includes caching and parallel builds&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;You can also use Make targets for convenience:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;make docker-buildx                    # Build locally
make docker-buildx-push               # Build and push
make docker-buildx-version VERSION=v1.0.0  # Build specific version
make help-docker                      # Show all Docker-related commands
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Access the Console&lt;/strong&gt;: Open your web browser and navigate to &lt;code&gt;http://localhost:9000&lt;/code&gt; to access the RustFS console, default username and password is &lt;code&gt;rustfsadmin&lt;/code&gt; .&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a Bucket&lt;/strong&gt;: Use the console to create a new bucket for your objects.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Upload Objects&lt;/strong&gt;: You can upload files directly through the console or use S3-compatible APIs to interact with your RustFS instance.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For detailed documentation, including configuration options, API references, and advanced usage, please visit our &lt;a href="https://docs.rustfs.com"&gt;Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Help&lt;/h2&gt; 
&lt;p&gt;If you have any questions or need assistance, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check the &lt;a href="https://github.com/rustfs/rustfs/discussions/categories/q-a"&gt;FAQ&lt;/a&gt; for common issues and solutions.&lt;/li&gt; 
 &lt;li&gt;Join our &lt;a href="https://github.com/rustfs/rustfs/discussions"&gt;GitHub Discussions&lt;/a&gt; to ask questions and share your experiences.&lt;/li&gt; 
 &lt;li&gt;Open an issue on our &lt;a href="https://github.com/rustfs/rustfs/issues"&gt;GitHub Issues&lt;/a&gt; page for bug reports or feature requests.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.rustfs.com"&gt;Documentation&lt;/a&gt; - The manual you should read&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rustfs/rustfs/releases"&gt;Changelog&lt;/a&gt; - What we broke and fixed&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rustfs/rustfs/discussions"&gt;GitHub Discussions&lt;/a&gt; - Where the community lives&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Bugs&lt;/strong&gt;: &lt;a href="https://github.com/rustfs/rustfs/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Business&lt;/strong&gt;: &lt;a href="mailto:hello@rustfs.com"&gt;hello@rustfs.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jobs&lt;/strong&gt;: &lt;a href="mailto:jobs@rustfs.com"&gt;jobs@rustfs.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Discussion&lt;/strong&gt;: &lt;a href="https://github.com/rustfs/rustfs/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contributing&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/rustfs/rustfs/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;RustFS is a community-driven project, and we appreciate all contributions. Check out the &lt;a href="https://github.com/rustfs/rustfs/graphs/contributors"&gt;Contributors&lt;/a&gt; page to see the amazing people who have helped make RustFS better.&lt;/p&gt; 
&lt;a href="https://github.com/rustfs/rustfs/graphs/contributors"&gt; &lt;img src="https://opencollective.com/rustfs/contributors.svg?width=890&amp;amp;limit=500&amp;amp;button=false"&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;Apache 2.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RustFS&lt;/strong&gt; is a trademark of RustFS, Inc. All other trademarks are the property of their respective owners.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>EasyTier/EasyTier</title>
      <link>https://github.com/EasyTier/EasyTier</link>
      <description>&lt;p&gt;A simple, decentralized mesh VPN with WireGuard support.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EasyTier&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/EasyTier/EasyTier/releases"&gt;&lt;img src="https://img.shields.io/github/v/tag/EasyTier/EasyTier" alt="Github release"&gt;&lt;/a&gt; &lt;a href="https://github.com/EasyTier/EasyTier/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/EasyTier/EasyTier" alt="GitHub"&gt;&lt;/a&gt; &lt;a href="https://github.com/EasyTier/EasyTier/commits/main"&gt;&lt;img src="https://img.shields.io/github/last-commit/EasyTier/EasyTier" alt="GitHub last commit"&gt;&lt;/a&gt; &lt;a href="https://github.com/EasyTier/EasyTier/issues"&gt;&lt;img src="https://img.shields.io/github/issues/EasyTier/EasyTier" alt="GitHub issues"&gt;&lt;/a&gt; &lt;a href="https://github.com/EasyTier/EasyTier/actions/workflows/core.yml"&gt;&lt;img src="https://github.com/EasyTier/EasyTier/actions/workflows/core.yml/badge.svg?sanitize=true" alt="GitHub Core Actions"&gt;&lt;/a&gt; &lt;a href="https://github.com/EasyTier/EasyTier/actions/workflows/gui.yml"&gt;&lt;img src="https://github.com/EasyTier/EasyTier/actions/workflows/gui.yml/badge.svg?sanitize=true" alt="GitHub GUI Actions"&gt;&lt;/a&gt; &lt;a href="https://github.com/EasyTier/EasyTier/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/EasyTier/EasyTier/actions/workflows/test.yml/badge.svg?sanitize=true" alt="GitHub Test Actions"&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/EasyTier/EasyTier"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/EasyTier/EasyTier/main/README_CN.md"&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/EasyTier/EasyTier/main/README.md"&gt;English&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ú® A simple, secure, decentralized virtual private network solution powered by Rust and Tokio&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/EasyTier/EasyTier/main/assets/config-page.png" width="300" alt="config page"&gt; &lt;img src="https://raw.githubusercontent.com/EasyTier/EasyTier/main/assets/running-page.png" width="300" alt="running page"&gt; &lt;/p&gt; 
&lt;p&gt;üìö &lt;strong&gt;&lt;a href="https://easytier.cn/en/"&gt;Full Documentation&lt;/a&gt;&lt;/strong&gt; | üñ•Ô∏è &lt;strong&gt;&lt;a href="https://easytier.cn/web"&gt;Web Console&lt;/a&gt;&lt;/strong&gt; | üìù &lt;strong&gt;&lt;a href="https://github.com/EasyTier/EasyTier/releases"&gt;Download Releases&lt;/a&gt;&lt;/strong&gt; | üß© &lt;strong&gt;&lt;a href="https://easytier.cn/en/guide/installation_gui.html#third-party-graphical-interfaces"&gt;Third Party Tools&lt;/a&gt;&lt;/strong&gt; | ‚ù§Ô∏è &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/EasyTier/EasyTier/main/#sponsor"&gt;Sponsor&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Core Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üîí &lt;strong&gt;Decentralized&lt;/strong&gt;: Nodes are equal and independent, no centralized services required&lt;/li&gt; 
 &lt;li&gt;üöÄ &lt;strong&gt;Easy to Use&lt;/strong&gt;: Multiple operation methods via web, client, and command line&lt;/li&gt; 
 &lt;li&gt;üåç &lt;strong&gt;Cross-Platform&lt;/strong&gt;: Supports Win/MacOS/Linux/FreeBSD/Android and X86/ARM/MIPS architectures&lt;/li&gt; 
 &lt;li&gt;üîê &lt;strong&gt;Secure&lt;/strong&gt;: AES-GCM or WireGuard encryption, prevents man-in-the-middle attacks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Capabilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üîå &lt;strong&gt;Efficient NAT Traversal&lt;/strong&gt;: Supports UDP and IPv6 traversal, works with NAT4-NAT4 networks&lt;/li&gt; 
 &lt;li&gt;üåê &lt;strong&gt;Subnet Proxy&lt;/strong&gt;: Nodes can share subnets for other nodes to access&lt;/li&gt; 
 &lt;li&gt;üîÑ &lt;strong&gt;Intelligent Routing&lt;/strong&gt;: Latency priority and automatic route selection for best network experience&lt;/li&gt; 
 &lt;li&gt;‚ö° &lt;strong&gt;High Performance&lt;/strong&gt;: Zero-copy throughout the entire link, supports TCP/UDP/WSS/WG protocols&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Network Optimization&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üìä &lt;strong&gt;UDP Loss Resistance&lt;/strong&gt;: KCP/QUIC proxy optimizes latency and bandwidth in high packet loss environments&lt;/li&gt; 
 &lt;li&gt;üîß &lt;strong&gt;Web Management&lt;/strong&gt;: Easy configuration and monitoring through web interface&lt;/li&gt; 
 &lt;li&gt;üõ†Ô∏è &lt;strong&gt;Zero Config&lt;/strong&gt;: Simple deployment with statically linked executables&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;üì• Installation&lt;/h3&gt; 
&lt;p&gt;Choose the installation method that best suits your needs:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Download pre-built binary (Recommended, All platforms supported)
# Visit https://github.com/EasyTier/EasyTier/releases

# 2. Install via cargo (Latest development version)
cargo install --git https://github.com/EasyTier/EasyTier.git easytier

# 3. Install via Docker
# See https://easytier.cn/en/guide/installation.html#installation-methods

# 4. Linux Quick Install
wget -O- https://raw.githubusercontent.com/EasyTier/EasyTier/main/script/install.sh | sudo bash

# 5. MacOS via Homebrew
brew tap brewforge/chinese
brew install --cask easytier-gui

# 6. OpenWrt Luci Web UI
# Visit https://github.com/EasyTier/luci-app-easytier

# 7. (Optional) Install shell completions:
easytier-core --gen-autocomplete fish &amp;gt; ~/.config/fish/completions/easytier-core.fish
easytier-cli gen-autocomplete fish &amp;gt; ~/.config/fish/completions/easytier-cli.fish

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üöÄ Basic Usage&lt;/h3&gt; 
&lt;h4&gt;Quick Networking with Shared Nodes&lt;/h4&gt; 
&lt;p&gt;EasyTier supports quick networking using shared public nodes. When you don't have a public IP, you can use the free shared nodes provided by the EasyTier community. Nodes will automatically attempt NAT traversal and establish P2P connections. When P2P fails, data will be relayed through shared nodes.&lt;/p&gt; 
&lt;p&gt;The currently deployed shared public node is &lt;code&gt;tcp://public.easytier.cn:11010&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;When using shared nodes, each node entering the network needs to provide the same &lt;code&gt;--network-name&lt;/code&gt; and &lt;code&gt;--network-secret&lt;/code&gt; parameters as the unique identifier of the network.&lt;/p&gt; 
&lt;p&gt;Taking two nodes as an example (Please use more complex network name to avoid conflicts):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run on Node A:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run with administrator privileges
sudo easytier-core -d --network-name abc --network-secret abc -p tcp://public.easytier.cn:11010
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Run on Node B:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run with administrator privileges
sudo easytier-core -d --network-name abc --network-secret abc -p tcp://public.easytier.cn:11010
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After successful execution, you can check the network status using &lt;code&gt;easytier-cli&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;| ipv4         | hostname       | cost  | lat_ms | loss_rate | rx_bytes | tx_bytes | tunnel_proto | nat_type | id         | version         |
| ------------ | -------------- | ----- | ------ | --------- | -------- | -------- | ------------ | -------- | ---------- | --------------- |
| 10.126.126.1 | abc-1          | Local | *      | *         | *        | *        | udp          | FullCone | 439804259  | 2.4.1-70e69a38~ |
| 10.126.126.2 | abc-2          | p2p   | 3.452  | 0         | 17.33 kB | 20.42 kB | udp          | FullCone | 390879727  | 2.4.1-70e69a38~ |
|              | PublicServer_a | p2p   | 27.796 | 0.000     | 50.01 kB | 67.46 kB | tcp          | Unknown  | 3771642457 | 2.4.1-70e69a38~ |
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can test connectivity between nodes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Test connectivity
ping 10.126.126.1
ping 10.126.126.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: If you cannot ping through, it may be that the firewall is blocking incoming traffic. Please turn off the firewall or add allow rules.&lt;/p&gt; 
&lt;p&gt;To improve availability, you can connect to multiple shared nodes simultaneously:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Connect to multiple shared nodes
sudo easytier-core -d --network-name abc --network-secret abc -p tcp://public.easytier.cn:11010 -p udp://public.easytier.cn:11010
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once your network is set up successfully, you can easily configure it to start automatically on system boot. Refer to the &lt;a href="https://easytier.cn/en/guide/network/oneclick-install-as-service.html"&gt;One-Click Register Service guide&lt;/a&gt; for step-by-step instructions on registering EasyTier as a system service.&lt;/p&gt; 
&lt;h4&gt;Decentralized Networking&lt;/h4&gt; 
&lt;p&gt;EasyTier is fundamentally decentralized, with no distinction between server and client. As long as one device can communicate with any node in the virtual network, it can join the virtual network. Here's how to set up a decentralized network:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start First Node (Node A):&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start the first node
sudo easytier-core -i 10.144.144.1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After startup, this node will listen on the following ports by default:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;TCP: 11010&lt;/li&gt; 
 &lt;li&gt;UDP: 11010&lt;/li&gt; 
 &lt;li&gt;WebSocket: 11011&lt;/li&gt; 
 &lt;li&gt;WebSocket SSL: 11012&lt;/li&gt; 
 &lt;li&gt;WireGuard: 11013&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Connect Second Node (Node B):&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Connect to the first node using its public IP
sudo easytier-core -i 10.144.144.2 -p udp://FIRST_NODE_PUBLIC_IP:11010
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Verify Connection:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Test connectivity
ping 10.144.144.2

# View connected peers
easytier-cli peer

# View routing information
easytier-cli route

# View local node information
easytier-cli node
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more nodes to join the network, they can connect to any existing node in the network using the &lt;code&gt;-p&lt;/code&gt; parameter:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Connect to any existing node using its public IP
sudo easytier-core -i 10.144.144.3 -p udp://ANY_EXISTING_NODE_PUBLIC_IP:11010
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üîç Advanced Features&lt;/h3&gt; 
&lt;h4&gt;Subnet Proxy&lt;/h4&gt; 
&lt;p&gt;Assuming the network topology is as follows, Node B wants to share its accessible subnet 10.1.1.0/24 with other nodes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-mermaid"&gt;flowchart LR

subgraph Node A Public IP 22.1.1.1
nodea[EasyTier&amp;lt;br/&amp;gt;10.144.144.1]
end

subgraph Node B
nodeb[EasyTier&amp;lt;br/&amp;gt;10.144.144.2]
end

id1[[10.1.1.0/24]]

nodea &amp;lt;--&amp;gt; nodeb &amp;lt;-.-&amp;gt; id1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To share a subnet, add the &lt;code&gt;-n&lt;/code&gt; parameter when starting EasyTier:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Share subnet 10.1.1.0/24 with other nodes
sudo easytier-core -i 10.144.144.2 -n 10.1.1.0/24
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Subnet proxy information will automatically sync to each node in the virtual network, and each node will automatically configure the corresponding route. You can verify the subnet proxy setup:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Check if the routing information has been synchronized (the proxy_cidrs column shows the proxied subnets):&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# View routing information
easytier-cli route
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/EasyTier/EasyTier/main/assets/image-3.png" alt="Routing Information"&gt;&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Test if you can access nodes in the proxied subnet:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Test connectivity to proxied subnet
ping 10.1.1.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;WireGuard Integration&lt;/h4&gt; 
&lt;p&gt;EasyTier can act as a WireGuard server, allowing any device with a WireGuard client (including iOS and Android) to access the EasyTier network. Here's an example setup:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-mermaid"&gt;flowchart LR

ios[[iPhone&amp;lt;br/&amp;gt;WireGuard Installed]]

subgraph Node A Public IP 22.1.1.1
nodea[EasyTier&amp;lt;br/&amp;gt;10.144.144.1]
end

subgraph Node B
nodeb[EasyTier&amp;lt;br/&amp;gt;10.144.144.2]
end

id1[[10.1.1.0/24]]

ios &amp;lt;-.-&amp;gt; nodea &amp;lt;--&amp;gt; nodeb &amp;lt;-.-&amp;gt; id1
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start EasyTier with WireGuard portal enabled:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Listen on 0.0.0.0:11013 and use 10.14.14.0/24 subnet for WireGuard clients
sudo easytier-core -i 10.144.144.1 --vpn-portal wg://0.0.0.0:11013/10.14.14.0/24
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Get WireGuard client configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Get WireGuard client configuration
easytier-cli vpn-portal
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;In the output configuration: 
  &lt;ul&gt; 
   &lt;li&gt;Set &lt;code&gt;Interface.Address&lt;/code&gt; to an available IP from the WireGuard subnet&lt;/li&gt; 
   &lt;li&gt;Set &lt;code&gt;Peer.Endpoint&lt;/code&gt; to the public IP/domain of your EasyTier node&lt;/li&gt; 
   &lt;li&gt;Import the modified configuration into your WireGuard client&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Self-Hosted Public Shared Node&lt;/h4&gt; 
&lt;p&gt;You can run your own public shared node to help other nodes discover each other. A public shared node is just a regular EasyTier network (with same network name and secret) that other networks can connect to.&lt;/p&gt; 
&lt;p&gt;To run a public shared node:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# No need to specify IPv4 address for public shared nodes
sudo easytier-core --network-name mysharednode --network-secret mysharednode
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.zerotier.com/"&gt;ZeroTier&lt;/a&gt;: A global virtual network for connecting devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tailscale.com/"&gt;TailScale&lt;/a&gt;: A VPN solution aimed at simplifying network configuration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dswd/vpncloud"&gt;vpncloud&lt;/a&gt;: A P2P Mesh VPN&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lanthora/candy"&gt;Candy&lt;/a&gt;: A reliable, low-latency, and anti-censorship virtual private network&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contact Us&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üí¨ &lt;strong&gt;&lt;a href="https://t.me/easytier"&gt;Telegram Group&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;üë• &lt;strong&gt;&lt;a href="https://qm.qq.com/cgi-bin/qm/qr?k=kC8YJ6Jb8vWJIDbZrZJB8pB5YZgPJA5-"&gt;QQ Group: 949700262&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;EasyTier is released under the &lt;a href="https://github.com/EasyTier/EasyTier/raw/main/LICENSE"&gt;LGPL-3.0&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsor&lt;/h2&gt; 
&lt;p&gt;CDN acceleration and security protection for this project are sponsored by Tencent EdgeOne.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://edgeone.ai/?from=github" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/EasyTier/EasyTier/main/assets/edgeone.png" width="200" alt="EdgeOne Logo"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Special thanks to &lt;a href="https://langlangy.cn/?i26c5a5"&gt;Langlang Cloud&lt;/a&gt; and &lt;a href="https://www.rainyun.com/NjM0NzQ1_"&gt;RainCloud&lt;/a&gt; for sponsoring our public servers.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://langlangy.cn/?i26c5a5" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/EasyTier/EasyTier/main/assets/langlang.png" width="200"&gt; &lt;/a&gt; &lt;a href="https://langlangy.cn/?i26c5a5" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/EasyTier/EasyTier/main/assets/raincloud.png" width="200"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;If you find EasyTier helpful, please consider sponsoring us. Software development and maintenance require a lot of time and effort, and your sponsorship will help us better maintain and improve EasyTier.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/EasyTier/EasyTier/main/assets/wechat.png" width="200"&gt; &lt;img src="https://raw.githubusercontent.com/EasyTier/EasyTier/main/assets/alipay.png" width="200"&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fish-shell/fish-shell</title>
      <link>https://github.com/fish-shell/fish-shell</link>
      <description>&lt;p&gt;The user-friendly command line shell.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. |Cirrus CI| image:: &lt;a href="https://api.cirrus-ci.com/github/fish-shell/fish-shell.svg?branch=master"&gt;https://api.cirrus-ci.com/github/fish-shell/fish-shell.svg?branch=master&lt;/a&gt; :target: &lt;a href="https://cirrus-ci.com/github/fish-shell/fish-shell"&gt;https://cirrus-ci.com/github/fish-shell/fish-shell&lt;/a&gt; :alt: Cirrus CI Build Status&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;fish &amp;lt;https://fishshell.com/&amp;gt;&lt;/code&gt;__ - the friendly interactive shell |Build Status| |Cirrus CI|&lt;/h1&gt; 
&lt;p&gt;fish is a smart and user-friendly command line shell for macOS, Linux, and the rest of the family. fish includes features like syntax highlighting, autosuggest-as-you-type, and fancy tab completions that just work, with no configuration required.&lt;/p&gt; 
&lt;p&gt;For downloads, screenshots and more, go to &lt;a href="https://fishshell.com/"&gt;https://fishshell.com/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;fish generally works like other shells, like bash or zsh. A few important differences can be found at &lt;a href="https://fishshell.com/docs/current/tutorial.html"&gt;https://fishshell.com/docs/current/tutorial.html&lt;/a&gt; by searching for the magic phrase ‚Äúunlike other shells‚Äù.&lt;/p&gt; 
&lt;p&gt;Detailed user documentation is available by running &lt;code&gt;help&lt;/code&gt; within fish, and also at &lt;a href="https://fishshell.com/docs/current/index.html"&gt;https://fishshell.com/docs/current/index.html&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting fish&lt;/h2&gt; 
&lt;p&gt;macOS&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
fish can be installed:

-  using `Homebrew &amp;lt;http://brew.sh/&amp;gt;`__: ``brew install fish``
-  using `MacPorts &amp;lt;https://www.macports.org/&amp;gt;`__:
   ``sudo port install fish``
-  using the `installer from fishshell.com &amp;lt;https://fishshell.com/&amp;gt;`__
-  as a `standalone app from fishshell.com &amp;lt;https://fishshell.com/&amp;gt;`__

Note: The minimum supported macOS version is 10.10 "Yosemite".

Packages for Linux
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Packages for Debian, Fedora, openSUSE, and Red Hat Enterprise Linux/CentOS are available from the &lt;code&gt;openSUSE Build Service &amp;lt;https://software.opensuse.org/download.html?project=shells%3Afish&amp;amp;package=fish&amp;gt;&lt;/code&gt;__.&lt;/p&gt; 
&lt;p&gt;Packages for Ubuntu are available from the &lt;code&gt;fish PPA &amp;lt;https://launchpad.net/~fish-shell/+archive/ubuntu/release-4&amp;gt;&lt;/code&gt;__, and can be installed using the following commands:&lt;/p&gt; 
&lt;p&gt;::&lt;/p&gt; 
&lt;p&gt;sudo apt-add-repository ppa:fish-shell/release-4 sudo apt update sudo apt install fish&lt;/p&gt; 
&lt;p&gt;Instructions for other distributions may be found at &lt;code&gt;fishshell.com &amp;lt;https://fishshell.com&amp;gt;&lt;/code&gt;__.&lt;/p&gt; 
&lt;p&gt;Windows&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
-  On Windows 10/11, fish can be installed under the WSL Windows Subsystem
   for Linux with the instructions for the appropriate distribution
   listed above under ‚ÄúPackages for Linux‚Äù, or from source with the
   instructions below.
-  Fish can also be installed on all versions of Windows using
   `Cygwin &amp;lt;https://cygwin.com/&amp;gt;`__ or `MSYS2 &amp;lt;https://github.com/Berrysoft/fish-msys2&amp;gt;`__.

Building from source
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If packages are not available for your platform, GPG-signed tarballs are available from &lt;code&gt;fishshell.com &amp;lt;https://fishshell.com/&amp;gt;&lt;/code&gt;__ and &lt;code&gt;fish-shell on GitHub &amp;lt;https://github.com/fish-shell/fish-shell/releases&amp;gt;&lt;/code&gt;__. See the &lt;code&gt;Building &amp;lt;#building&amp;gt;&lt;/code&gt;_ section for instructions.&lt;/p&gt; 
&lt;h2&gt;Running fish&lt;/h2&gt; 
&lt;p&gt;Once installed, run &lt;code&gt;fish&lt;/code&gt; from your current shell to try fish out!&lt;/p&gt; 
&lt;p&gt;Dependencies&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
Running fish requires:

-  some common \*nix system utilities (currently ``mktemp``), in
   addition to the basic POSIX utilities (``cat``, ``cut``, ``dirname``,
   ``file``, ``ls``, ``mkdir``, ``mkfifo``, ``rm``, ``sort``, ``tee``, ``tr``,
   ``uname`` and ``sed`` at least, but the full coreutils plus ``find`` and
   ``awk`` is preferred)
-  The gettext library, if compiled with
   translation support

The following optional features also have specific requirements:

-  builtin commands that have the ``--help`` option or print usage
   messages require ``nroff`` or ``mandoc`` for
   display
-  automated completion generation from manual pages requires Python 3.5+
-  the ``fish_config`` web configuration tool requires Python 3.5+ and a web browser
-  system clipboard integration (with the default Ctrl-V and Ctrl-X
   bindings) require either the ``xsel``, ``xclip``,
   ``wl-copy``/``wl-paste`` or ``pbcopy``/``pbpaste`` utilities
-  full completions for ``yarn`` and ``npm`` require the
   ``all-the-package-names`` NPM module
-  ``colorls`` is used, if installed, to add color when running ``ls`` on platforms
   that do not have color support (such as OpenBSD)

Building
--------

.. _dependencies-1:

Dependencies
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Compiling fish requires:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Rust (version 1.70 or later)&lt;/li&gt; 
 &lt;li&gt;CMake (version 3.15 or later)&lt;/li&gt; 
 &lt;li&gt;a C compiler (for system feature detection and the test helper binary)&lt;/li&gt; 
 &lt;li&gt;PCRE2 (headers and libraries) - optional, this will be downloaded if missing&lt;/li&gt; 
 &lt;li&gt;gettext (headers and libraries) - optional, for translation support&lt;/li&gt; 
 &lt;li&gt;an Internet connection, as other dependencies will be downloaded automatically&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Sphinx is also optionally required to build the documentation from a cloned git repository.&lt;/p&gt; 
&lt;p&gt;Additionally, running the full test suite requires Python 3, tmux, and the pexpect package.&lt;/p&gt; 
&lt;p&gt;Building from source with CMake&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
Rather than building from source, consider using a packaged build for your platform. Using the
steps below makes fish difficult to uninstall or upgrade. Release packages are available from the
links above, and up-to-date `development builds of fish are available for many platforms
&amp;lt;https://github.com/fish-shell/fish-shell/wiki/Development-builds&amp;gt;`__

To install into ``/usr/local``, run:

.. code:: bash

   mkdir build; cd build
   cmake ..
   cmake --build .
   sudo cmake --install .

The install directory can be changed using the
``-DCMAKE_INSTALL_PREFIX`` parameter for ``cmake``.

CMake Build options
~~~~~~~~~~~~~~~~~~~

In addition to the normal CMake build options (like ``CMAKE_INSTALL_PREFIX``), fish's CMake build has some other options available to customize it.

- Rust_COMPILER=path - the path to rustc. If not set, cmake will check $PATH and ~/.cargo/bin
- Rust_CARGO=path - the path to cargo. If not set, cmake will check $PATH and ~/.cargo/bin
- Rust_CARGO_TARGET=target - the target to pass to cargo. Set this for cross-compilation.
- BUILD_DOCS=ON|OFF - whether to build the documentation. This is automatically set to OFF when Sphinx isn't installed.
- INSTALL_DOCS=ON|OFF - whether to install the docs. This is automatically set to on when BUILD_DOCS is or prebuilt documentation is available (like when building in-tree from a tarball).
- FISH_USE_SYSTEM_PCRE2=ON|OFF - whether to use an installed pcre2. This is normally autodetected.
- MAC_CODESIGN_ID=String|OFF - the codesign ID to use on Mac, or "OFF" to disable codesigning.
- WITH_GETTEXT=ON|OFF - whether to build with gettext support for translations.
- extra_functionsdir, extra_completionsdir and extra_confdir - to compile in an additional directory to be searched for functions, completions and configuration snippets

Building fish with embedded data (experimental)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also build fish with the data files embedded.&lt;/p&gt; 
&lt;p&gt;This will include all the datafiles like the included functions or web configuration tool in the main &lt;code&gt;fish&lt;/code&gt; binary.&lt;/p&gt; 
&lt;p&gt;Fish will then read these right from its own binary, and print them out when needed. Some files, like the webconfig tool and the manpage completion generator, will be extracted to a temporary directory on-demand. You can list the files with &lt;code&gt;status list-files&lt;/code&gt; and print one with &lt;code&gt;status get-file path/to/file&lt;/code&gt; (e.g. &lt;code&gt;status get-file functions/fish_prompt.fish&lt;/code&gt; to get the default prompt).&lt;/p&gt; 
&lt;p&gt;To install fish with embedded files, just use &lt;code&gt;cargo&lt;/code&gt;, like::&lt;/p&gt; 
&lt;p&gt;cargo install --path /path/to/fish # if you have a git clone cargo install --git &lt;a href="https://github.com/fish-shell/fish-shell"&gt;https://github.com/fish-shell/fish-shell&lt;/a&gt; --tag 4.0.0 # to build from git with a specific version cargo install --git &lt;a href="https://github.com/fish-shell/fish-shell"&gt;https://github.com/fish-shell/fish-shell&lt;/a&gt; # to build the current development snapshot without cloning&lt;/p&gt; 
&lt;p&gt;This will place the binaries in &lt;code&gt;~/.cargo/bin/&lt;/code&gt;, but you can place them wherever you want.&lt;/p&gt; 
&lt;p&gt;This build won't have the HTML docs (&lt;code&gt;help&lt;/code&gt; will open the online version) or translations.&lt;/p&gt; 
&lt;p&gt;It will try to build the man pages with sphinx-build. If that is not available and you would like to include man pages, you need to install it and retrigger the build script, e.g. by setting FISH_BUILD_DOCS=1::&lt;/p&gt; 
&lt;p&gt;FISH_BUILD_DOCS=1 cargo install --path .&lt;/p&gt; 
&lt;p&gt;Setting it to "0" disables the inclusion of man pages.&lt;/p&gt; 
&lt;p&gt;You can also link this build statically (but not against glibc) and move it to other computers.&lt;/p&gt; 
&lt;h2&gt;Contributing Changes to the Code&lt;/h2&gt; 
&lt;p&gt;See the &lt;code&gt;Guide for Developers &amp;lt;CONTRIBUTING.rst&amp;gt;&lt;/code&gt;__.&lt;/p&gt; 
&lt;h2&gt;Contact Us&lt;/h2&gt; 
&lt;p&gt;Questions, comments, rants and raves can be posted to the official fish mailing list at &lt;a href="https://lists.sourceforge.net/lists/listinfo/fish-users"&gt;https://lists.sourceforge.net/lists/listinfo/fish-users&lt;/a&gt; or join us on our &lt;code&gt;matrix channel &amp;lt;https://matrix.to/#/#fish-shell:matrix.org&amp;gt;&lt;/code&gt;&lt;strong&gt;. Or use the &lt;code&gt;fish tag on Unix &amp;amp; Linux Stackexchange &amp;lt;https://unix.stackexchange.com/questions/tagged/fish&amp;gt;&lt;/code&gt;&lt;/strong&gt;. There is also a fish tag on Stackoverflow, but it is typically a poor fit.&lt;/p&gt; 
&lt;p&gt;Found a bug? Have an awesome idea? Please &lt;code&gt;open an issue &amp;lt;https://github.com/fish-shell/fish-shell/issues/new&amp;gt;&lt;/code&gt;__.&lt;/p&gt; 
&lt;p&gt;.. |Build Status| image:: &lt;a href="https://github.com/fish-shell/fish-shell/workflows/make%20test/badge.svg"&gt;https://github.com/fish-shell/fish-shell/workflows/make%20test/badge.svg&lt;/a&gt; :target: &lt;a href="https://github.com/fish-shell/fish-shell/actions"&gt;https://github.com/fish-shell/fish-shell/actions&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WebAssembly/WASI</title>
      <link>https://github.com/WebAssembly/WASI</link>
      <description>&lt;p&gt;WebAssembly System Interface&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://doi.org/10.5281/zenodo.4323447"&gt;&lt;img src="https://zenodo.org/badge/DOI/10.5281/zenodo.4323447.svg?sanitize=true" alt="DOI"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;WebAssembly System Interface&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/WebAssembly/WASI/main/WASI.png" alt="WASI"&gt;&lt;/p&gt; 
&lt;p&gt;The WebAssembly System Interface (WASI) is a set of APIs for WASI being developed for eventual standardization by the WASI Subgroup, which is a subgroup of the WebAssembly Community Group.&lt;/p&gt; 
&lt;p&gt;WASI started with launching what is now called &lt;a href="https://github.com/WebAssembly/WASI/tree/main/legacy/README.md"&gt;Preview 1&lt;/a&gt;, an API using the witx IDL, and it is now widely used. Its major influences are POSIX and CloudABI.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/WebAssembly/WASI/raw/main/wasip2/README.md"&gt;WASI Preview 2&lt;/a&gt; is now stable, and is a modular collection of APIs defined with the &lt;a href="https://github.com/WebAssembly/component-model/raw/main/design/mvp/WIT.md"&gt;Wit IDL&lt;/a&gt;, and it incorporates many of the lessons learned from Preview 1, including adding support for a wider range of source languages, modularity, a more expressive type system, virtualizability, and more.&lt;/p&gt; 
&lt;h2&gt;Find the APIs&lt;/h2&gt; 
&lt;p&gt;Development of each API happens in its own repo, which you can access from the &lt;a href="https://raw.githubusercontent.com/WebAssembly/WASI/main/Proposals.md"&gt;proposals list&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This repo is for general discussion, as well as documenting how we work and high-level goals.&lt;/p&gt; 
&lt;h2&gt;Propose a new API&lt;/h2&gt; 
&lt;p&gt;If you would like to create a new proposal, get started with our &lt;a href="https://raw.githubusercontent.com/WebAssembly/WASI/main/Contributing.md"&gt;Contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All new API proposals should use the new format and the new repo structure that is shown in the &lt;a href="https://github.com/WebAssembly/wasi-proposal-template"&gt;proposal template&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/WebAssembly/WASI/main/docs/WitInWasi.md"&gt;Wit in WASI&lt;/a&gt; document for more information about using Wit for WASI proposals.&lt;/p&gt; 
&lt;h2&gt;WASI High Level Goals&lt;/h2&gt; 
&lt;p&gt;(In the spirit of &lt;a href="https://github.com/WebAssembly/design/raw/main/HighLevelGoals.md"&gt;WebAssembly's High-Level Goals&lt;/a&gt;.)&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Define a set of portable, modular, runtime-independent, and WebAssembly-native APIs which can be used by WebAssembly code to interact with the outside world. These APIs preserve the essential sandboxed nature of WebAssembly through a &lt;a href="https://en.wikipedia.org/wiki/Capability-based_security"&gt;Capability-based&lt;/a&gt; API design.&lt;/li&gt; 
 &lt;li&gt;Specify and implement incrementally. Start with a Minimum Viable Product (MVP), then adding additional features, prioritized by feedback and experience.&lt;/li&gt; 
 &lt;li&gt;Supplement API designs with documentation and tests, and, when feasible, reference implementations which can be shared between wasm engines.&lt;/li&gt; 
 &lt;li&gt;Make a great platform: 
  &lt;ul&gt; 
   &lt;li&gt;Work with WebAssembly tool and library authors to help them provide WASI support for their users.&lt;/li&gt; 
   &lt;li&gt;When being WebAssembly-native means the platform isn't directly compatible with existing applications written for other platforms, design to enable compatibility to be provided by tools and libraries.&lt;/li&gt; 
   &lt;li&gt;Allow the overall API to evolve over time; to make changes to API modules that have been standardized, build implementations of them using libraries on top of new API modules to provide compatibility.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;WASI Design Principles&lt;/h2&gt; 
&lt;h3&gt;Capability-based security&lt;/h3&gt; 
&lt;p&gt;WASI is designed with capability-based security principles, using the facilities provided by the Wasm &lt;a href="https://github.com/WebAssembly/component-model"&gt;component model&lt;/a&gt;. All access to external resources is provided by capabilities.&lt;/p&gt; 
&lt;p&gt;There are two kinds of capabilities:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Handles, defined in the &lt;a href="https://github.com/WebAssembly/component-model/raw/main/design/mvp/Explainer.md#type-definitions"&gt;component-model type system&lt;/a&gt;, dynamically identify and provide access to resources. They are unforgeable, meaning there's no way for an instance to acquire access to a handle other than to have another instance explicitly pass one to it.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Link-time capabilities, which are functions which require no handle arguments, are used sparingly, in situations where it's not necessary to identify more than one instance of a resource at runtime. Link-time capabilities are &lt;em&gt;interposable&lt;/em&gt;, so they are still refusable in a capability-based security sense.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;WASI has no &lt;em&gt;ambient authorities&lt;/em&gt;, meaning that there are no global namespaces at runtime, and no global functions at link time.&lt;/p&gt; 
&lt;p&gt;Note that this is a different sense of "capability" than &lt;a href="http://man7.org/linux/man-pages/man7/capabilities.7.html"&gt;Linux capabilities&lt;/a&gt; or the withdrawn &lt;a href="https://archive.org/details/posix_1003.1e-990310"&gt;POSIX capabilities&lt;/a&gt;, which are per-process rather than per-resource.&lt;/p&gt; 
&lt;h3&gt;Interposition&lt;/h3&gt; 
&lt;p&gt;Interposition in the context of WASI interfaces is the ability for a Webassembly instance to implement a given WASI interface, and for a consumer WebAssembly instance to be able to use this implementation transparently. This can be used to adapt or attenuate the functionality of a WASI API without changing the code using it.&lt;/p&gt; 
&lt;p&gt;Component model interfaces always support link-time interposition. While WASI APIs are often implemented in hosts, they can also be implemented in Wasm, which may itself be a wrapper around the host. This may be used to implement &lt;em&gt;attenuation&lt;/em&gt;, providing filtered access to the underlying host-provided functionality.&lt;/p&gt; 
&lt;p&gt;Interposition is sometimes referred to as "virtualization", however we use "interposition" here because the word "virtualization" has several related meanings.&lt;/p&gt; 
&lt;h3&gt;Compatibility&lt;/h3&gt; 
&lt;p&gt;Compatibility with existing applications and libraries, as well as existing host platforms, is important, but will sometimes be in conflict with overall API cleanliness, safety, performance, or portability. Where practical, WASI seeks to keep the WASI API itself free of compatibility concerns, and provides compatibility through libraries, such as WASI libc, and tools. This way, applications which don't require compatibility for compatibility's sake aren't burdened by it.&lt;/p&gt; 
&lt;h3&gt;Portability&lt;/h3&gt; 
&lt;p&gt;Portability is important to WASI, however the meaning of portability will be specific to each API.&lt;/p&gt; 
&lt;p&gt;WASI's modular nature means that engines don't need to implement every API in WASI, so we don't need to exclude APIs just because some host environments can't implement them. We prefer APIs which can run across a wide variety of engines when feasible, but we'll ultimately decide whether something is "portable enough" on an API-by-API basis.&lt;/p&gt; 
&lt;h3&gt;Modularity&lt;/h3&gt; 
&lt;p&gt;WASI will include many interfaces that are not appropriate for every host environment, so WASI uses the component model's worlds mechanism to allow specific sets of APIs to be described which meet the needs of different environments.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ajeetdsouza/zoxide</title>
      <link>https://github.com/ajeetdsouza/zoxide</link>
      <description>&lt;p&gt;A smarter cd command. Supports all major shells.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;sup&gt;Special thanks to:&lt;/sup&gt;&lt;/p&gt; 
 &lt;div&gt;
  &lt;img src="https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/contrib/warp.png" width="230" alt="Warp"&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;sup&gt;&lt;b&gt;Warp, the intelligent terminal&lt;/b&gt;&lt;/sup&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;sup&gt;Available for MacOS, Linux, and Windows&lt;/sup&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;sup&gt; Visit &lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=zoxide_20231001"&gt;&lt;u&gt;warp.dev&lt;/u&gt;&lt;/a&gt; to learn more. &lt;/sup&gt;
 &lt;/div&gt; 
 &lt;hr&gt; 
 &lt;h1&gt;zoxide&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://crates.io/crates/zoxide"&gt;&lt;img src="https://img.shields.io/crates/v/zoxide?logo=rust&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="crates.io"&gt;&lt;/a&gt; &lt;a href="https://github.com/ajeetdsouza/zoxide/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/ajeetdsouza/zoxide/total?logo=github&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="Downloads"&gt;&lt;/a&gt; &lt;a href="https://builtwithnix.org/"&gt;&lt;img src="https://img.shields.io/badge/builtwith-nix-7d81f7?logo=nixos&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="Built with Nix"&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;zoxide is a &lt;strong&gt;smarter cd command&lt;/strong&gt;, inspired by z and autojump.&lt;/p&gt; 
 &lt;p&gt;It remembers which directories you use most frequently, so you can "jump" to them in just a few keystrokes.&lt;br&gt; zoxide works on all major shells.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/#getting-started"&gt;Getting started&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/#installation"&gt;Installation&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/#configuration"&gt;Configuration&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/#third-party-integrations"&gt;Integrations&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/contrib/tutorial.webp" alt="Tutorial"&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;z foo              # cd into highest ranked directory matching foo
z foo bar          # cd into highest ranked directory matching foo and bar
z foo /            # cd into a subdirectory starting with foo

z ~/foo            # z also works like a regular cd command
z foo/             # cd into relative path
z ..               # cd one level up
z -                # cd into previous directory

zi foo             # cd with interactive selection (using fzf)

z foo&amp;lt;SPACE&amp;gt;&amp;lt;TAB&amp;gt;  # show interactive completions (zoxide v0.8.0+, bash 4.4+/fish/zsh only)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about the matching algorithm &lt;a href="https://github.com/ajeetdsouza/zoxide/wiki/Algorithm#matching"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://app.warp.dev/drive/folder/zoxide-EyHNpQumHVWNcYB8GJgDxG?utm_source=github&amp;amp;utm_medium=warp_pack&amp;amp;utm_campaign=zoxide_20231001"&gt; &lt;img src="https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/contrib/warp-packs-green.png" alt="Follow tutorial in Warp"&gt; &lt;/a&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;zoxide can be installed in 4 easy steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install binary&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;zoxide runs on most major platforms. If your platform isn't listed below, please &lt;a href="https://github.com/ajeetdsouza/zoxide/issues/new"&gt;open an issue&lt;/a&gt;.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Linux / WSL&lt;/summary&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;The recommended way to install zoxide is via the install script:&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-sh"&gt;curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
    &lt;p&gt;Or, you can use a package manager:&lt;/p&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Distribution&lt;/th&gt; 
       &lt;th&gt;Repository&lt;/th&gt; 
       &lt;th&gt;Instructions&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;strong&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;strong&gt;&lt;a href="https://crates.io/crates/zoxide"&gt;crates.io&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;cargo install zoxide --locked&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://github.com/asdf-vm/asdf"&gt;asdf&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;asdf plugin add zoxide https://github.com/nyrst/asdf-zoxide.git&lt;/code&gt; &lt;br&gt; &lt;code&gt;asdf install zoxide latest&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://anaconda.org/conda-forge/zoxide"&gt;conda-forge&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;conda install -c conda-forge zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://packages.guix.gnu.org/packages/zoxide/"&gt;guix&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;guix install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://formulae.brew.sh/formula-linux/zoxide"&gt;Linuxbrew&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;brew install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://github.com/NixOS/nixpkgs/raw/master/pkgs/by-name/zo/zoxide/package.nix"&gt;nixpkgs&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;nix-env -iA nixpkgs.zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;AlmaLinux&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;dnf install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Alpine Linux 3.13+&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://pkgs.alpinelinux.org/packages?name=zoxide"&gt;Alpine Linux Packages&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;apk add zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Arch Linux&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://archlinux.org/packages/extra/x86_64/zoxide/"&gt;Arch Linux Extra&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;pacman -S zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;CentOS Stream&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;dnf install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;del&gt;Debian 11+&lt;/del&gt;[^1]&lt;/td&gt; 
       &lt;td&gt;&lt;del&gt;&lt;a href="https://packages.debian.org/stable/admin/zoxide"&gt;Debian Packages&lt;/a&gt;&lt;/del&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;del&gt;&lt;code&gt;apt install zoxide&lt;/code&gt;&lt;/del&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Devuan 4.0+&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://pkginfo.devuan.org/cgi-bin/package-query.html?c=package&amp;amp;q=zoxide"&gt;Devuan Packages&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;apt install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Exherbo Linux&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://gitlab.exherbo.org/exherbo/rust/-/tree/master/packages/sys-apps/zoxide"&gt;Exherbo packages&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;cave resolve -x repository/rust&lt;/code&gt; &lt;br&gt; &lt;code&gt;cave resolve -x zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Fedora 32+&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://src.fedoraproject.org/rpms/rust-zoxide"&gt;Fedora Packages&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;dnf install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Gentoo&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://packages.gentoo.org/packages/app-shells/zoxide"&gt;Gentoo Packages&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;emerge app-shells/zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Linux Mint&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://apt.cli.rs/"&gt;apt.cli.rs&lt;/a&gt; (unofficial)&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://github.com/emmatyping/apt.cli.rs#how-to-add-the-repo"&gt;Setup the repository&lt;/a&gt;, then &lt;code&gt;apt install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Manjaro&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;pacman -S zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;openSUSE Tumbleweed&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://build.opensuse.org/package/show/openSUSE:Factory/zoxide"&gt;openSUSE Factory&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;zypper install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;del&gt;Parrot OS&lt;/del&gt;[^1]&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;del&gt;&lt;code&gt;apt install zoxide&lt;/code&gt;&lt;/del&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;del&gt;Raspbian 11+&lt;/del&gt;[^1]&lt;/td&gt; 
       &lt;td&gt;&lt;del&gt;&lt;a href="https://archive.raspbian.org/raspbian/pool/main/r/rust-zoxide/"&gt;Raspbian Packages&lt;/a&gt;&lt;/del&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;del&gt;&lt;code&gt;apt install zoxide&lt;/code&gt;&lt;/del&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;RHEL 8+&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;dnf install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Rhino Linux&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://pacstall.dev/packages/zoxide-deb"&gt;Pacstall Packages&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;pacstall -I zoxide-deb&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Rocky Linux&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;dnf install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Slackware 15.0+&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://slackbuilds.org/repository/15.0/system/zoxide/"&gt;SlackBuilds&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://slackbuilds.org/howto/"&gt;Instructions&lt;/a&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Solus&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://github.com/getsolus/packages/tree/main/packages/z/zoxide/"&gt;Solus Packages&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;eopkg install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Ubuntu&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://apt.cli.rs/"&gt;apt.cli.rs&lt;/a&gt; (unofficial)&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://github.com/emmatyping/apt.cli.rs#how-to-add-the-repo"&gt;Setup the repository&lt;/a&gt;, then &lt;code&gt;apt install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Void Linux&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://github.com/void-linux/void-packages/tree/master/srcpkgs/zoxide"&gt;Void Linux Packages&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;xbps-install -S zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; 
   &lt;/blockquote&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;macOS&lt;/summary&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;To install zoxide, use a package manager:&lt;/p&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Repository&lt;/th&gt; 
       &lt;th&gt;Instructions&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;strong&gt;&lt;a href="https://crates.io/crates/zoxide"&gt;crates.io&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;cargo install zoxide --locked&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;strong&gt;&lt;a href="https://formulae.brew.sh/formula/zoxide"&gt;Homebrew&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;brew install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;a href="https://github.com/asdf-vm/asdf"&gt;asdf&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;asdf plugin add zoxide https://github.com/nyrst/asdf-zoxide.git&lt;/code&gt; &lt;br&gt; &lt;code&gt;asdf install zoxide latest&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;a href="https://anaconda.org/conda-forge/zoxide"&gt;conda-forge&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;conda install -c conda-forge zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;a href="https://ports.macports.org/port/zoxide/summary"&gt;MacPorts&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;port install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;a href="https://github.com/NixOS/nixpkgs/raw/master/pkgs/by-name/zo/zoxide/package.nix"&gt;nixpkgs&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;nix-env -iA nixpkgs.zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; 
    &lt;p&gt;Or, run this command in your terminal:&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-sh"&gt;curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
   &lt;/blockquote&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Windows&lt;/summary&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;zoxide works with PowerShell, as well as shells running in Cygwin, Git Bash, and MSYS2.&lt;/p&gt; 
    &lt;p&gt;The recommended way to install zoxide is via &lt;code&gt;winget&lt;/code&gt;:&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-sh"&gt;winget install ajeetdsouza.zoxide
&lt;/code&gt;&lt;/pre&gt; 
    &lt;p&gt;Or, you can use an alternative package manager:&lt;/p&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Repository&lt;/th&gt; 
       &lt;th&gt;Instructions&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;strong&gt;&lt;a href="https://crates.io/crates/zoxide"&gt;crates.io&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;cargo install zoxide --locked&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;a href="https://community.chocolatey.org/packages/zoxide"&gt;Chocolatey&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;choco install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;a href="https://anaconda.org/conda-forge/zoxide"&gt;conda-forge&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;conda install -c conda-forge zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;a href="https://github.com/ScoopInstaller/Main/tree/master/bucket/zoxide.json"&gt;Scoop&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;scoop install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; 
    &lt;p&gt;If you're using Cygwin, Git Bash, or MSYS2, you can also use the install script:&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-sh"&gt;curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
   &lt;/blockquote&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;BSD&lt;/summary&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;To install zoxide, use a package manager:&lt;/p&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Distribution&lt;/th&gt; 
       &lt;th&gt;Repository&lt;/th&gt; 
       &lt;th&gt;Instructions&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;strong&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;strong&gt;&lt;a href="https://crates.io/crates/zoxide"&gt;crates.io&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;cargo install zoxide --locked&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;DragonFly BSD&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://github.com/DragonFlyBSD/DPorts/tree/master/sysutils/zoxide"&gt;DPorts&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;pkg install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;FreeBSD&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://www.freshports.org/sysutils/zoxide/"&gt;FreshPorts&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;pkg install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;NetBSD&lt;/td&gt; 
       &lt;td&gt;&lt;a href="https://pkgsrc.se/sysutils/zoxide"&gt;pkgsrc&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;pkgin install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; 
    &lt;p&gt;Or, run this command in your terminal:&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-sh"&gt;curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
   &lt;/blockquote&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Android&lt;/summary&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;To install zoxide, use a package manager:&lt;/p&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Repository&lt;/th&gt; 
       &lt;th&gt;Instructions&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;a href="https://github.com/termux/termux-packages/tree/master/packages/zoxide"&gt;Termux&lt;/a&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;pkg install zoxide&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; 
    &lt;p&gt;Or, run this command in your terminal:&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-sh"&gt;curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
   &lt;/blockquote&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Setup zoxide on your shell&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;To start using zoxide, add it to your shell.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Bash&lt;/summary&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;Add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your config file (usually &lt;code&gt;~/.bashrc&lt;/code&gt;):&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-sh"&gt;eval "$(zoxide init bash)"
&lt;/code&gt;&lt;/pre&gt; 
   &lt;/blockquote&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Elvish&lt;/summary&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;Add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your config file (usually &lt;code&gt;~/.elvish/rc.elv&lt;/code&gt;):&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-sh"&gt;eval (zoxide init elvish | slurp)
&lt;/code&gt;&lt;/pre&gt; 
    &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; zoxide only supports elvish v0.18.0 and above.&lt;/p&gt; 
   &lt;/blockquote&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Fish&lt;/summary&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;Add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your config file (usually &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt;):&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-sh"&gt;zoxide init fish | source
&lt;/code&gt;&lt;/pre&gt; 
   &lt;/blockquote&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Nushell&lt;/summary&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;Add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your env file (find it by running &lt;code&gt;$nu.env-path&lt;/code&gt; in Nushell):&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-sh"&gt;zoxide init nushell | save -f ~/.zoxide.nu
&lt;/code&gt;&lt;/pre&gt; 
    &lt;p&gt;Now, add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your config file (find it by running &lt;code&gt;$nu.config-path&lt;/code&gt; in Nushell):&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-sh"&gt;source ~/.zoxide.nu
&lt;/code&gt;&lt;/pre&gt; 
    &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; zoxide only supports Nushell v0.89.0+.&lt;/p&gt; 
   &lt;/blockquote&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;PowerShell&lt;/summary&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;Add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your config file (find it by running &lt;code&gt;echo $profile&lt;/code&gt; in PowerShell):&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-powershell"&gt;Invoke-Expression (&amp;amp; { (zoxide init powershell | Out-String) })
&lt;/code&gt;&lt;/pre&gt; 
   &lt;/blockquote&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Tcsh&lt;/summary&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;Add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your config file (usually &lt;code&gt;~/.tcshrc&lt;/code&gt;):&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-sh"&gt;zoxide init tcsh &amp;gt; ~/.zoxide.tcsh
source ~/.zoxide.tcsh
&lt;/code&gt;&lt;/pre&gt; 
   &lt;/blockquote&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Xonsh&lt;/summary&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;Add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your config file (usually &lt;code&gt;~/.xonshrc&lt;/code&gt;):&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-python"&gt;execx($(zoxide init xonsh), 'exec', __xonsh__.ctx, filename='zoxide')
&lt;/code&gt;&lt;/pre&gt; 
   &lt;/blockquote&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Zsh&lt;/summary&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;Add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your config file (usually &lt;code&gt;~/.zshrc&lt;/code&gt;):&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-sh"&gt;eval "$(zoxide init zsh)"
&lt;/code&gt;&lt;/pre&gt; 
    &lt;p&gt;For completions to work, the above line must be added &lt;em&gt;after&lt;/em&gt; &lt;code&gt;compinit&lt;/code&gt; is called. You may have to rebuild your completions cache by running &lt;code&gt;rm ~/.zcompdump*; compinit&lt;/code&gt;.&lt;/p&gt; 
   &lt;/blockquote&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Any POSIX shell&lt;/summary&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;Add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your config file:&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-sh"&gt;eval "$(zoxide init posix --hook prompt)"
&lt;/code&gt;&lt;/pre&gt; 
   &lt;/blockquote&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install fzf&lt;/strong&gt; &lt;sup&gt;(optional)&lt;/sup&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/junegunn/fzf"&gt;fzf&lt;/a&gt; is a command-line fuzzy finder, used by zoxide for completions / interactive selection. It can be installed from &lt;a href="https://github.com/junegunn/fzf#installation"&gt;here&lt;/a&gt;.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; The minimum supported fzf version is v0.51.0.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Import your data&lt;/strong&gt; &lt;sup&gt;(optional)&lt;/sup&gt;&lt;/p&gt; &lt;p&gt;If you currently use any of these plugins, you may want to import your data into zoxide:&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt;autojump&lt;/summary&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;Run this command in your terminal:&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-sh"&gt;zoxide import --from=autojump "/path/to/autojump/db"
&lt;/code&gt;&lt;/pre&gt; 
    &lt;p&gt;The path usually varies according to your system:&lt;/p&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;OS&lt;/th&gt; 
       &lt;th&gt;Path&lt;/th&gt; 
       &lt;th&gt;Example&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Linux&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;$XDG_DATA_HOME/autojump/autojump.txt&lt;/code&gt; or &lt;code&gt;$HOME/.local/share/autojump/autojump.txt&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;/home/alice/.local/share/autojump/autojump.txt&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;macOS&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;$HOME/Library/autojump/autojump.txt&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;/Users/Alice/Library/autojump/autojump.txt&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Windows&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;%APPDATA%\autojump\autojump.txt&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;C:\Users\Alice\AppData\Roaming\autojump\autojump.txt&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; 
   &lt;/blockquote&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;fasd, z, z.lua, zsh-z&lt;/summary&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;Run this command in your terminal:&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-sh"&gt;zoxide import --from=z "path/to/z/db"
&lt;/code&gt;&lt;/pre&gt; 
    &lt;p&gt;The path usually varies according to your system:&lt;/p&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Plugin&lt;/th&gt; 
       &lt;th&gt;Path&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;fasd&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;$_FASD_DATA&lt;/code&gt; or &lt;code&gt;$HOME/.fasd&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;z (bash/zsh)&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;$_Z_DATA&lt;/code&gt; or &lt;code&gt;$HOME/.z&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;z (fish)&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;$Z_DATA&lt;/code&gt; or &lt;code&gt;$XDG_DATA_HOME/z/data&lt;/code&gt; or &lt;code&gt;$HOME/.local/share/z/data&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;z.lua (bash/zsh)&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;$_ZL_DATA&lt;/code&gt; or &lt;code&gt;$HOME/.zlua&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;z.lua (fish)&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;$XDG_DATA_HOME/zlua/zlua.txt&lt;/code&gt; or &lt;code&gt;$HOME/.local/share/zlua/zlua.txt&lt;/code&gt; or &lt;code&gt;$_ZL_DATA&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;zsh-z&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;$ZSHZ_DATA&lt;/code&gt; or &lt;code&gt;$_Z_DATA&lt;/code&gt; or &lt;code&gt;$HOME/.z&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; 
   &lt;/blockquote&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;ZLocation&lt;/summary&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;Run this command in PowerShell:&lt;/p&gt; 
    &lt;pre&gt;&lt;code class="language-powershell"&gt;$db = New-TemporaryFile
(Get-ZLocation).GetEnumerator() | ForEach-Object { Write-Output ($_.Name+'|'+$_.Value+'|0') } | Out-File $db
zoxide import --from=z $db
&lt;/code&gt;&lt;/pre&gt; 
   &lt;/blockquote&gt; 
  &lt;/details&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;h3&gt;Flags&lt;/h3&gt; 
&lt;p&gt;When calling &lt;code&gt;zoxide init&lt;/code&gt;, the following flags are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;--cmd&lt;/code&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Changes the prefix of the &lt;code&gt;z&lt;/code&gt; and &lt;code&gt;zi&lt;/code&gt; commands.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--cmd j&lt;/code&gt; would change the commands to (&lt;code&gt;j&lt;/code&gt;, &lt;code&gt;ji&lt;/code&gt;).&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--cmd cd&lt;/code&gt; would replace the &lt;code&gt;cd&lt;/code&gt; command.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;--hook &amp;lt;HOOK&amp;gt;&lt;/code&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Changes how often zoxide increments a directory's score:&lt;/p&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Hook&lt;/th&gt; 
       &lt;th&gt;Description&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;none&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Never&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;prompt&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;At every shell prompt&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;pwd&lt;/code&gt; (default)&lt;/td&gt; 
       &lt;td&gt;Whenever the directory is changed&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;--no-cmd&lt;/code&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Prevents zoxide from defining the &lt;code&gt;z&lt;/code&gt; and &lt;code&gt;zi&lt;/code&gt; commands.&lt;/li&gt; 
   &lt;li&gt;These functions will still be available in your shell as &lt;code&gt;__zoxide_z&lt;/code&gt; and &lt;code&gt;__zoxide_zi&lt;/code&gt;, should you choose to redefine them.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Environment variables&lt;/h3&gt; 
&lt;p&gt;Environment variables[^2] can be used for configuration. They must be set before &lt;code&gt;zoxide init&lt;/code&gt; is called.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;_ZO_DATA_DIR&lt;/code&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Specifies the directory in which the database is stored.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;The default value varies across OSes:&lt;/p&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;OS&lt;/th&gt; 
       &lt;th&gt;Path&lt;/th&gt; 
       &lt;th&gt;Example&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Linux / BSD&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;$XDG_DATA_HOME&lt;/code&gt; or &lt;code&gt;$HOME/.local/share&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;/home/alice/.local/share&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;macOS&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;$HOME/Library/Application Support&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;/Users/Alice/Library/Application Support&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Windows&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;%LOCALAPPDATA%&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;C:\Users\Alice\AppData\Local&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;_ZO_ECHO&lt;/code&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When set to 1, &lt;code&gt;z&lt;/code&gt; will print the matched directory before navigating to it.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;_ZO_EXCLUDE_DIRS&lt;/code&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Excludes the specified directories from the database.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;This is provided as a list of &lt;a href="https://man7.org/linux/man-pages/man7/glob.7.html"&gt;globs&lt;/a&gt;, separated by OS-specific characters:&lt;/p&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;OS&lt;/th&gt; 
       &lt;th&gt;Separator&lt;/th&gt; 
       &lt;th&gt;Example&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Linux / macOS / BSD&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;:&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;$HOME:$HOME/private/*&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;Windows&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;;&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;code&gt;$HOME;$HOME/private/*&lt;/code&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;By default, this is set to &lt;code&gt;"$HOME"&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;_ZO_FZF_OPTS&lt;/code&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Custom options to pass to &lt;a href="https://github.com/junegunn/fzf"&gt;fzf&lt;/a&gt; during interactive selection. See &lt;a href="https://manpages.ubuntu.com/manpages/en/man1/fzf.1.html"&gt;&lt;code&gt;man fzf&lt;/code&gt;&lt;/a&gt; for the list of options.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;_ZO_MAXAGE&lt;/code&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Configures the &lt;a href="https://github.com/ajeetdsouza/zoxide/wiki/Algorithm#aging"&gt;aging algorithm&lt;/a&gt;, which limits the maximum number of entries in the database.&lt;/li&gt; 
   &lt;li&gt;By default, this is set to 10000.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;_ZO_RESOLVE_SYMLINKS&lt;/code&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When set to 1, &lt;code&gt;z&lt;/code&gt; will resolve symlinks before adding directories to the database.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Third-party integrations&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Application&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Plugin&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/rjarry/aerc"&gt;aerc&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Email client&lt;/td&gt; 
   &lt;td&gt;Natively supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.alfredapp.com/"&gt;alfred&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS launcher&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/yihou/alfred-zoxide"&gt;alfred-zoxide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/mridgers/clink"&gt;clink&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Improved cmd.exe for Windows&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/shunsambongi/clink-zoxide"&gt;clink-zoxide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.gnu.org/software/emacs/"&gt;emacs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Text editor&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gitlab.com/Vonfry/zoxide.el"&gt;zoxide.el&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/kyoheiu/felix"&gt;felix&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;File manager&lt;/td&gt; 
   &lt;td&gt;Natively supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/kamiyaa/joshuto"&gt;joshuto&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;File manager&lt;/td&gt; 
   &lt;td&gt;Natively supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gokcehan/lf"&gt;lf&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;File manager&lt;/td&gt; 
   &lt;td&gt;See the &lt;a href="https://github.com/gokcehan/lf/wiki/Integrations#zoxide"&gt;wiki&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jarun/nnn"&gt;nnn&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;File manager&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jarun/nnn/raw/master/plugins/autojump"&gt;nnn-autojump&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ranger/ranger"&gt;ranger&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;File manager&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jchook/ranger-zoxide"&gt;ranger-zoxide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/dsxmachina/rfm"&gt;rfm&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;File manager&lt;/td&gt; 
   &lt;td&gt;Natively supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/joshmedeski/sesh"&gt;sesh&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;tmux&lt;/code&gt; session manager&lt;/td&gt; 
   &lt;td&gt;Natively supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/nvim-telescope/telescope.nvim"&gt;telescope.nvim&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Fuzzy finder for Neovim&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jvgrootveld/telescope-zoxide"&gt;telescope-zoxide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/27medkamal/tmux-session-wizard"&gt;tmux-session-wizard&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;tmux&lt;/code&gt; session manager&lt;/td&gt; 
   &lt;td&gt;Natively supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/omerxx/tmux-sessionx"&gt;tmux-sessionx&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;tmux&lt;/code&gt; session manager&lt;/td&gt; 
   &lt;td&gt;Natively supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vim/vim"&gt;vim&lt;/a&gt; / &lt;a href="https://github.com/neovim/neovim"&gt;neovim&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Text editor&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/nanotee/zoxide.vim"&gt;zoxide.vim&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/sayanarijit/xplr"&gt;xplr&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;File manager&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/sayanarijit/zoxide.xplr"&gt;zoxide.xplr&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/xxh/xxh"&gt;xxh&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Transports shell configuration over SSH&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/xxh/xxh-plugin-prerun-zoxide"&gt;xxh-plugin-prerun-zoxide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/sxyazi/yazi"&gt;yazi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;File manager&lt;/td&gt; 
   &lt;td&gt;Natively supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Mellbourn/zabb"&gt;zabb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Finds the shortest possible query for a path&lt;/td&gt; 
   &lt;td&gt;Natively supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/roberte777/zesh"&gt;zesh&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zellij&lt;/code&gt; session manager&lt;/td&gt; 
   &lt;td&gt;Natively supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/marlonrichert/zsh-autocomplete"&gt;zsh-autocomplete&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Realtime completions for zsh&lt;/td&gt; 
   &lt;td&gt;Natively supported&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;[^1]: Debian and its derivatives update their packages very slowly. If you're using one of these distributions, consider using the install script instead.&lt;/p&gt; 
&lt;p&gt;[^2]: If you're not sure how to set an environment variable on your shell, check out the &lt;a href="https://github.com/ajeetdsouza/zoxide/wiki/HOWTO:-set-environment-variables" title="HOWTO: set environment variables"&gt;wiki&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cube-js/cube</title>
      <link>https://github.com/cube-js/cube</link>
      <description>&lt;p&gt;üìä Cube‚Äôs universal semantic layer platform is the next evolution of OLAP technology for AI, BI, spreadsheets, and embedded analytics&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://cube.dev?ref=github-readme"&gt;&lt;img src="https://raw.githubusercontent.com/cube-js/cube/master/docs/content/cube-logo-with-bg.png" alt="Cube ‚Äî Semantic Layer for Data Applications" width="300px"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;a href="https://cube.dev?ref=github-readme"&gt;Website&lt;/a&gt; ‚Ä¢ &lt;a href="https://cube.dev/docs/getting-started?ref=github-readme"&gt;Getting Started&lt;/a&gt; ‚Ä¢ &lt;a href="https://cube.dev/docs?ref=github-readme"&gt;Docs&lt;/a&gt; ‚Ä¢ &lt;a href="https://cube.dev/docs/examples?ref=github-readme"&gt;Examples&lt;/a&gt; ‚Ä¢ &lt;a href="https://cube.dev/blog?ref=github-readme"&gt;Blog&lt;/a&gt; ‚Ä¢ &lt;a href="https://slack.cube.dev?ref=github-readme"&gt;Slack&lt;/a&gt; ‚Ä¢ &lt;a href="https://twitter.com/the_cube_dev"&gt;X&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://badge.fury.io/js/%40cubejs-backend%2Fserver"&gt;&lt;img src="https://badge.fury.io/js/%40cubejs-backend%2Fserver.svg?sanitize=true" alt="npm version"&gt;&lt;/a&gt; &lt;a href="https://github.com/cube-js/cube/actions?query=workflow%3ABuild+branch%3Amaster"&gt;&lt;img src="https://github.com/cube-js/cube/workflows/Build/badge.svg?sanitize=true" alt="GitHub Actions"&gt;&lt;/a&gt; &lt;a href="https://app.fossa.io/projects/git%2Bgithub.com%2Fcube-js%2Fcube.js?ref=badge_shield"&gt;&lt;img src="https://app.fossa.io/api/projects/git%2Bgithub.com%2Fcube-js%2Fcube.js.svg?type=shield" alt="FOSSA Status"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Cube is the universal semantic layer for modern data applications.&lt;/strong&gt; Born in the cloud era, Cube represents the next evolution of OLAP technology, helping data engineers and application developers access data from modern data stores, organize it into consistent definitions, and deliver it to every application.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://ucarecdn.com/8d945f29-e9eb-4e7f-9e9e-29ae7074e195/" style="border: none" width="100%"&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;i&gt;Learn more about connecting Cube to &lt;a href="https://cube.dev/docs/config/databases?ref=github-readme" target="_blank"&gt;data sources&lt;/a&gt; and &lt;a href="https://cube.dev/docs/config/downstream?ref=github-readme" target="_blank"&gt;analytics &amp;amp; visualization tools&lt;/a&gt;.&lt;/i&gt; &lt;/p&gt; 
&lt;p&gt;Cube was designed to work with all SQL-enabled data sources, including cloud data warehouses like Snowflake or Google BigQuery, query engines like Presto or Amazon Athena, and application databases like Postgres. Cube has a built-in relational caching engine to provide sub-second latency and high concurrency for API requests.&lt;/p&gt; 
&lt;p&gt;For more details, see the &lt;a href="https://cube.dev/docs/cubejs-introduction?ref=github-readme"&gt;introduction&lt;/a&gt; page in our documentation.&lt;/p&gt; 
&lt;h2&gt;Why Cube?&lt;/h2&gt; 
&lt;p&gt;As data infrastructure evolved from traditional relational databases to cloud data platforms, OLAP capabilities that once lived in specialized servers like SQL Server Analysis Services and Oracle Essbase were left behind. Today's organizations face several challenges:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Analytics Modeling and Multidimensionality.&lt;/strong&gt; Modern cloud data platforms excel at processing large volumes of data but lack native support for multidimensional analysis and modeling. Cube brings OLAP-style analytics to these platforms, enabling consistent metric definitions and multidimensional analysis.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Performance Optimization.&lt;/strong&gt; While cloud data warehouses have improved query performance through column-oriented storage and distributed processing, they still struggle with complex analytical workloads. Cube provides intelligent caching and pre-aggregation strategies that dramatically improve query response times.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Access Control and Governance.&lt;/strong&gt; Securing and governing access to data across all consuming applications remains critical. Cube offers robust access control to ensure consistent security across your entire data ecosystem.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;API Flexibility.&lt;/strong&gt; Legacy OLAP tools were limited in how they exposed data. Cube provides modern REST, GraphQL, and SQL APIs along with support for traditional MDX and DAX interfaces, making it a truly universal semantic layer.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Cube is the missing OLAP engine for the cloud data platform era that provides the necessary infrastructure and features to implement efficient data modeling, access control, and performance optimizations without duplicating analytics modeling, data, or security permissions across different tools.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cube-js/cube.js/master/docs/content/old-was-vs-cubejs-way.png" alt=""&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started üöÄ&lt;/h2&gt; 
&lt;h3&gt;Cube Cloud&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://cube.dev/cloud?ref=github-readme"&gt;Cube Cloud&lt;/a&gt; is the fastest way to get started with Cube. It provides managed infrastructure as well as an instant and free access for development projects and proofs of concept.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://cubecloud.dev/auth/signup?ref=github-readme"&gt;&lt;img src="https://cubedev-blog-images.s3.us-east-2.amazonaws.com/f1f1eac0-0b44-4c47-936e-33b5c06eedf0.png" alt="Get started now" width="200px"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For a step-by-step guide on Cube Cloud, &lt;a href="https://cube.dev/docs/getting-started/cloud/overview?ref=github-readme"&gt;see the docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;Alternatively, you can get started with Cube locally or self-host it with &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Once Docker is installed, in a new folder for your project, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -p 4000:4000 \
  -p 15432:15432 \
  -v ${PWD}:/cube/conf \
  -e CUBEJS_DEV_MODE=true \
  cubejs/cube
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, open &lt;a href="http://localhost:4000"&gt;http://localhost:4000&lt;/a&gt; in your browser to continue setup.&lt;/p&gt; 
&lt;p&gt;For a step-by-step guide on Docker, &lt;a href="https://cube.dev/docs/getting-started-docker?ref=github-readme"&gt;see the docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://cube.dev/docs?ref=github-readme"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cube.dev/docs/getting-started?ref=github-readme"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cube.dev/docs/examples?ref=github-readme"&gt;Examples &amp;amp; Tutorials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cube.dev/docs/product/introduction#four-layers-of-semantic-layer"&gt;Architecture&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;There are many ways you can contribute to Cube! Here are a few possibilities:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Star this repo and follow us on &lt;a href="https://twitter.com/the_cube_dev"&gt;X&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Add Cube to your stack on &lt;a href="https://stackshare.io/cube-js"&gt;Stackshare&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Upvote issues with üëç reaction so we know what's the demand for particular issue to prioritize it within road map.&lt;/li&gt; 
 &lt;li&gt;Create issues every time you feel something is missing or goes wrong.&lt;/li&gt; 
 &lt;li&gt;Ask questions on &lt;a href="https://stackoverflow.com/questions/tagged/cube.js"&gt;Stack Overflow with cube.js tag&lt;/a&gt; if others can have these questions as well.&lt;/li&gt; 
 &lt;li&gt;Provide pull requests for all open issues and especially for those with &lt;a href="https://github.com/cube-js/cube/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22"&gt;help wanted&lt;/a&gt; and &lt;a href="https://github.com/cube-js/cube/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22"&gt;good first issue&lt;/a&gt; labels.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All sort of contributions are &lt;strong&gt;welcome and extremely helpful&lt;/strong&gt; üôå Please refer to &lt;a href="https://github.com/cube-js/cube/raw/master/CONTRIBUTING.md"&gt;the contribution guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Cube Client is &lt;a href="https://raw.githubusercontent.com/cube-js/cube/master/packages/cubejs-client-core/LICENSE"&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Cube Backend is &lt;a href="https://raw.githubusercontent.com/cube-js/cube/master/packages/cubejs-server/LICENSE"&gt;Apache 2.0 licensed&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://app.fossa.io/projects/git%2Bgithub.com%2Fcube-js%2Fcube.js?ref=badge_large"&gt;&lt;img src="https://app.fossa.io/api/projects/git%2Bgithub.com%2Fcube-js%2Fcube.js.svg?type=large" alt="FOSSA Status"&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tensorzero/tensorzero</title>
      <link>https://github.com/tensorzero/tensorzero</link>
      <description>&lt;p&gt;TensorZero is an open-source stack for industrial-grade LLM applications. It unifies an LLM gateway, observability, optimization, evaluation, and experimentation.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;
 &lt;picture&gt;
  &lt;img src="https://github.com/user-attachments/assets/47d67430-386d-4675-82ad-d4734d3262d9" alt="TensorZero Logo" width="128" height="128"&gt;
 &lt;/picture&gt;&lt;/p&gt; 
&lt;h1&gt;TensorZero&lt;/h1&gt; 
&lt;p&gt;
 &lt;picture&gt;
  &lt;img src="https://www.tensorzero.com/github-trending-badge.svg?sanitize=true" alt="#1 Repository Of The Day"&gt;
 &lt;/picture&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TensorZero is an open-source stack for &lt;em&gt;industrial-grade LLM applications&lt;/em&gt;:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Gateway:&lt;/strong&gt; access every LLM provider through a unified API, built for performance (&amp;lt;1ms p99 latency)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Observability:&lt;/strong&gt; store inferences and feedback in your database, available programmatically or in the UI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Optimization:&lt;/strong&gt; collect metrics and human feedback to optimize prompts, models, and inference strategies&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evaluation:&lt;/strong&gt; benchmark individual inferences or end-to-end workflows using heuristics, LLM judges, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Experimentation:&lt;/strong&gt; ship with confidence with built-in A/B testing, routing, fallbacks, retries, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Take what you need, adopt incrementally, and complement with other tools.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p align="center"&gt; &lt;b&gt;&lt;a href="https://www.tensorzero.com/" target="_blank"&gt;Website&lt;/a&gt;&lt;/b&gt; ¬∑ &lt;b&gt;&lt;a href="https://www.tensorzero.com/docs" target="_blank"&gt;Docs&lt;/a&gt;&lt;/b&gt; ¬∑ &lt;b&gt;&lt;a href="https://www.x.com/tensorzero" target="_blank"&gt;Twitter&lt;/a&gt;&lt;/b&gt; ¬∑ &lt;b&gt;&lt;a href="https://www.tensorzero.com/slack" target="_blank"&gt;Slack&lt;/a&gt;&lt;/b&gt; ¬∑ &lt;b&gt;&lt;a href="https://www.tensorzero.com/discord" target="_blank"&gt;Discord&lt;/a&gt;&lt;/b&gt; &lt;br&gt; &lt;br&gt; &lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/quickstart" target="_blank"&gt;Quick Start (5min)&lt;/a&gt;&lt;/b&gt; ¬∑ &lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/deployment" target="_blank"&gt;Deployment Guide&lt;/a&gt;&lt;/b&gt; ¬∑ &lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/api-reference" target="_blank"&gt;API Reference&lt;/a&gt;&lt;/b&gt; ¬∑ &lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/deployment" target="_blank"&gt;Configuration Reference&lt;/a&gt;&lt;/b&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="30%" valign="top"&gt;&lt;b&gt;What is TensorZero?&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="70%" valign="top"&gt;TensorZero is an open-source stack for industrial-grade LLM applications. It unifies an LLM gateway, observability, optimization, evaluation, and experimentation.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="30%" valign="top"&gt;&lt;b&gt;How is TensorZero different from other LLM frameworks?&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="70%" valign="top"&gt; 1. TensorZero enables you to optimize complex LLM applications based on production metrics and human feedback.&lt;br&gt; 2. TensorZero supports the needs of industrial-grade LLM applications: low latency, high throughput, type safety, self-hosted, GitOps, customizability, etc.&lt;br&gt; 3. TensorZero unifies the entire LLMOps stack, creating compounding benefits. For example, LLM evaluations can be used for fine-tuning models alongside AI judges. &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="30%" valign="top"&gt;&lt;b&gt;Can I use TensorZero with ___?&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="70%" valign="top"&gt;Yes. Every major programming language is supported. You can use TensorZero with our Python client, any OpenAI SDK or OpenAI-compatible client, or our HTTP API.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="30%" valign="top"&gt;&lt;b&gt;Is TensorZero production-ready?&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="70%" valign="top"&gt;Yes. Here's a case study: &lt;b&gt;&lt;a href="https://www.tensorzero.com/blog/case-study-automating-code-changelogs-at-a-large-bank-with-llms"&gt;Automating Code Changelogs at a Large Bank with LLMs&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="30%" valign="top"&gt;&lt;b&gt;How much does TensorZero cost?&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="70%" valign="top"&gt;Nothing. TensorZero is 100% self-hosted and open-source. There are no paid features.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="30%" valign="top"&gt;&lt;b&gt;Who is building TensorZero?&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="70%" valign="top"&gt;Our technical team includes a former Rust compiler maintainer, machine learning researchers (Stanford, CMU, Oxford, Columbia) with thousands of citations, and the chief product officer of a decacorn startup. We're backed by the same investors as leading open-source projects (e.g. ClickHouse, CockroachDB) and AI labs (e.g. OpenAI, Anthropic).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="30%" valign="top"&gt;&lt;b&gt;How do I get started?&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="70%" valign="top"&gt;You can adopt TensorZero incrementally. Our &lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/quickstart"&gt;Quick Start&lt;/a&gt;&lt;/b&gt; goes from a vanilla OpenAI wrapper to a production-ready LLM application with observability and fine-tuning in just 5 minutes.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;hr&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;üåê LLM Gateway&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Integrate with TensorZero once and access every major LLM provider.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Access every major LLM provider (API or self-hosted) through a single unified API&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Infer with streaming, tool use, structured generation (JSON mode), batch, multimodal (VLMs), file inputs, caching, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Define prompt templates and schemas to enforce a consistent, typed interface between your application and the LLMs&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Satisfy extreme throughput and latency needs, thanks to ü¶Ä Rust: &amp;lt;1ms p99 latency overhead at 10k+ QPS&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Integrate using our Python client, any OpenAI SDK or OpenAI-compatible client, or our HTTP API (use any programming language)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Ensure high availability with routing, retries, fallbacks, load balancing, granular timeouts, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled&gt; Soon: embeddings; real-time voice&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;!-- flip highlight order --&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;b&gt;Model Providers&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;b&gt;Features&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" align="left" valign="top"&gt; &lt;p&gt; The TensorZero Gateway natively supports: &lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/anthropic"&gt;Anthropic&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/aws-bedrock"&gt;AWS Bedrock&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/aws-sagemaker"&gt;AWS SageMaker&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/azure"&gt;Azure OpenAI Service&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/deepseek"&gt;DeepSeek&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/fireworks"&gt;Fireworks&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/gcp-vertex-ai-anthropic"&gt;GCP Vertex AI Anthropic&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/gcp-vertex-ai-gemini"&gt;GCP Vertex AI Gemini&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/google-ai-studio-gemini"&gt;Google AI Studio (Gemini API)&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/groq"&gt;Groq&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/hyperbolic"&gt;Hyperbolic&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/mistral"&gt;Mistral&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/openai"&gt;OpenAI&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/openrouter"&gt;OpenRouter&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/sglang"&gt;SGLang&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/tgi"&gt;TGI&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/together"&gt;Together AI&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/vllm"&gt;vLLM&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/xai"&gt;xAI (Grok)&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;p&gt; &lt;em&gt; Need something else? Your provider is most likely supported because TensorZero integrates with &lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/providers/openai-compatible"&gt;any OpenAI-compatible API (e.g. Ollama)&lt;/a&gt;&lt;/b&gt;. &lt;/em&gt; &lt;/p&gt; &lt;/td&gt; 
   &lt;td width="50%" align="left" valign="top"&gt; &lt;p&gt; The TensorZero Gateway supports advanced features like: &lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/retries-fallbacks"&gt;Retries &amp;amp; Fallbacks&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/inference-time-optimizations"&gt;Inference-Time Optimizations&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/prompt-templates-schemas"&gt;Prompt Templates &amp;amp; Schemas&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/experimentation/"&gt;Experimentation (A/B Testing)&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/configuration-reference"&gt;Configuration-as-Code (GitOps)&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/batch-inference"&gt;Batch Inference&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/multimodal-inference"&gt;Multimodal Inference (VLMs)&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/inference-caching"&gt;Inference Caching&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/metrics-feedback"&gt;Metrics &amp;amp; Feedback&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/episodes"&gt;Multi-Step LLM Workflows (Episodes)&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;em&gt;&amp;amp; a lot more...&lt;/em&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;p&gt; The TensorZero Gateway is written in Rust ü¶Ä with &lt;b&gt;performance&lt;/b&gt; in mind (&amp;lt;1ms p99 latency overhead @ 10k QPS). See &lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/benchmarks"&gt;Benchmarks&lt;/a&gt;&lt;/b&gt;.&lt;br&gt; &lt;/p&gt; &lt;p&gt; You can run inference using the &lt;b&gt;TensorZero client&lt;/b&gt; (recommended), the &lt;b&gt;OpenAI client&lt;/b&gt;, or the &lt;b&gt;HTTP API&lt;/b&gt;. &lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;br&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;Usage: Python ‚Äî TensorZero Client (Recommended)&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;You can access any provider using the TensorZero Python client.&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;code&gt;pip install tensorzero&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Optional: Set up the TensorZero configuration.&lt;/li&gt; 
  &lt;li&gt;Run inference:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;from tensorzero import TensorZeroGateway  # or AsyncTensorZeroGateway


with TensorZeroGateway.build_embedded(clickhouse_url="...", config_file="...") as client:
    response = client.inference(
        model_name="openai::gpt-4o-mini",
        # Try other providers easily: "anthropic::claude-3-7-sonnet-20250219"
        input={
            "messages": [
                {
                    "role": "user",
                    "content": "Write a haiku about artificial intelligence.",
                }
            ]
        },
    )
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;See &lt;strong&gt;&lt;a href="https://www.tensorzero.com/docs/quickstart"&gt;Quick Start&lt;/a&gt;&lt;/strong&gt; for more information.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Usage: Python ‚Äî OpenAI Client&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;You can access any provider using the OpenAI Python client with TensorZero.&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;code&gt;pip install tensorzero&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Optional: Set up the TensorZero configuration.&lt;/li&gt; 
  &lt;li&gt;Run inference:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;from openai import OpenAI  # or AsyncOpenAI
from tensorzero import patch_openai_client

client = OpenAI()

patch_openai_client(
    client,
    clickhouse_url="http://chuser:chpassword@localhost:8123/tensorzero",
    config_file="config/tensorzero.toml",
    async_setup=False,
)

response = client.chat.completions.create(
    model="tensorzero::model_name::openai::gpt-4o-mini",
    # Try other providers easily: "tensorzero::model_name::anthropic::claude-3-7-sonnet-20250219"
    messages=[
        {
            "role": "user",
            "content": "Write a haiku about artificial intelligence.",
        }
    ],
)
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;See &lt;strong&gt;&lt;a href="https://www.tensorzero.com/docs/quickstart"&gt;Quick Start&lt;/a&gt;&lt;/strong&gt; for more information.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Usage: JavaScript / TypeScript (Node) ‚Äî OpenAI Client&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;You can access any provider using the OpenAI Node client with TensorZero.&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Deploy &lt;code&gt;tensorzero/gateway&lt;/code&gt; using Docker. &lt;strong&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/deployment"&gt;Detailed instructions ‚Üí&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;Set up the TensorZero configuration.&lt;/li&gt; 
  &lt;li&gt;Run inference:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from "openai";

const client = new OpenAI({
  baseURL: "http://localhost:3000/openai/v1",
});

const response = await client.chat.completions.create({
  model: "tensorzero::model_name::openai::gpt-4o-mini",
  // Try other providers easily: "tensorzero::model_name::anthropic::claude-3-7-sonnet-20250219"
  messages: [
    {
      role: "user",
      content: "Write a haiku about artificial intelligence.",
    },
  ],
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;See &lt;strong&gt;&lt;a href="https://www.tensorzero.com/docs/quickstart"&gt;Quick Start&lt;/a&gt;&lt;/strong&gt; for more information.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Usage: Other Languages &amp;amp; Platforms ‚Äî HTTP API&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;TensorZero supports virtually any programming language or platform via its HTTP API.&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Deploy &lt;code&gt;tensorzero/gateway&lt;/code&gt; using Docker. &lt;strong&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/deployment"&gt;Detailed instructions ‚Üí&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;Optional: Set up the TensorZero configuration.&lt;/li&gt; 
  &lt;li&gt;Run inference:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST "http://localhost:3000/inference" \
  -H "Content-Type: application/json" \
  -d '{
    "model_name": "openai::gpt-4o-mini",
    "input": {
      "messages": [
        {
          "role": "user",
          "content": "Write a haiku about artificial intelligence."
        }
      ]
    }
  }'
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;See &lt;strong&gt;&lt;a href="https://www.tensorzero.com/docs/quickstart"&gt;Quick Start&lt;/a&gt;&lt;/strong&gt; for more information.&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h3&gt;üîç LLM Observability&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Zoom in to debug individual API calls, or zoom out to monitor metrics across models and prompts over time ‚Äî all using the open-source TensorZero UI.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Store inferences and feedback (metrics, human edits, etc.) in your own database&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Dive into individual inferences or high-level aggregate patterns using the TensorZero UI or programmatically&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Build datasets for optimization, evaluation, and other workflows&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Replay historical inferences with new prompts, models, inference strategies, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Export OpenTelemetry (OTLP) traces to your favorite general-purpose observability tool&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled&gt; Soon: AI-assisted debugging and root cause analysis; AI-assisted data labeling&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;!-- flip highlight order --&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;b&gt;Observability ¬ª Inference&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;b&gt;Observability ¬ª Function&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;img src="https://github.com/user-attachments/assets/2cc3cc9a-f33f-4e94-b8de-07522326f80a"&gt;&lt;/td&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;img src="https://github.com/user-attachments/assets/00ae6605-8fa0-4efd-8238-ae8ea589860f"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;br&gt; 
&lt;h3&gt;üìà LLM Optimization&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Send production metrics and human feedback to easily optimize your prompts, models, and inference strategies ‚Äî using the UI or programmatically.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Optimize your models with supervised fine-tuning, RLHF, and other techniques&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Optimize your prompts with automated prompt engineering algorithms like MIPROv2&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Optimize your inference strategy with dynamic in-context learning, chain of thought, best/mixture-of-N sampling, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Enable a feedback loop for your LLMs: a data &amp;amp; learning flywheel turning production data into smarter, faster, and cheaper models&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled&gt; Soon: programmatic optimization; synthetic data generation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Model Optimization&lt;/h4&gt; 
&lt;p&gt;Optimize closed-source and open-source models using supervised fine-tuning (SFT) and preference fine-tuning (DPO).&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;!-- flip highlight order --&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;b&gt;Supervised Fine-tuning ‚Äî UI&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;b&gt;Preference Fine-tuning (DPO) ‚Äî Jupyter Notebook&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;img src="https://github.com/user-attachments/assets/cf7acf66-732b-43b3-af2a-5eba1ce40f6f"&gt;&lt;/td&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;img src="https://github.com/user-attachments/assets/a67a0634-04a7-42b0-b934-9130cb7cdf51"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h4&gt;Inference-Time Optimization&lt;/h4&gt; 
&lt;p&gt;Boost performance by dynamically updating your prompts with relevant examples, combining responses from multiple inferences, and more.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;!-- flip highlight order --&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/inference-time-optimizations#best-of-n-sampling"&gt;Best-of-N Sampling&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/inference-time-optimizations#mixture-of-n-sampling"&gt;Mixture-of-N Sampling&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;img src="https://github.com/user-attachments/assets/c0edfa4c-713c-4996-9964-50c0d26e6970"&gt;&lt;/td&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;img src="https://github.com/user-attachments/assets/75b5bf05-4c1f-43c4-b158-d69d1b8d05be"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/inference-time-optimizations#dynamic-in-context-learning-dicl"&gt;Dynamic In-Context Learning (DICL)&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/inference-time-optimizations#chain-of-thought-cot"&gt;Chain-of-Thought (CoT)&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;img src="https://github.com/user-attachments/assets/d8489e92-ce93-46ac-9aab-289ce19bb67d"&gt;&lt;/td&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;img src="https://github.com/user-attachments/assets/ea13d73c-76a4-4e0c-a35b-0c648f898311" height="320"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;&lt;em&gt;More coming soon...&lt;/em&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h4&gt;Prompt Optimization&lt;/h4&gt; 
&lt;p&gt;Optimize your prompts programmatically using research-driven optimization techniques.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;!-- flip highlight order --&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;b&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/inference-time-optimizations#best-of-n-sampling"&gt;MIPROv2&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;b&gt;&lt;a href="https://github.com/tensorzero/tensorzero/tree/main/examples/gsm8k-custom-recipe-dspy"&gt;DSPy Integration&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;img src="https://github.com/user-attachments/assets/d81a7c37-382f-4c46-840f-e6c2593301db" alt="MIPROv2 diagram"&gt;&lt;/td&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt; TensorZero comes with several optimization recipes, but you can also easily create your own. This example shows how to optimize a TensorZero function using an arbitrary tool ‚Äî here, DSPy, a popular library for automated prompt engineering. &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;&lt;em&gt;More coming soon...&lt;/em&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h3&gt;üìä LLM Evaluation&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Compare prompts, models, and inference strategies using evaluations powered by heuristics and LLM judges.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Evaluate individual inferences with &lt;em&gt;static evaluations&lt;/em&gt; powered by heuristics or LLM judges (‚âà unit tests for LLMs)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Evaluate end-to-end workflows with &lt;em&gt;dynamic evaluations&lt;/em&gt; with complete flexibility (‚âà integration tests for LLMs)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Optimize LLM judges just like any other TensorZero function to align them to human preferences&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled&gt; Soon: more built-in evaluators; headless evaluations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;!-- flip highlight order --&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;b&gt;Evaluation ¬ª UI&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;b&gt;Evaluation ¬ª CLI&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" align="center" valign="middle"&gt;&lt;img src="https://github.com/user-attachments/assets/f4bf54e3-1b63-46c8-be12-2eaabf615699"&gt;&lt;/td&gt; 
   &lt;td width="50%" align="left" valign="middle"&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose run --rm evaluations \
  --evaluation-name extract_data \
  --dataset-name hard_test_cases \
  --variant-name gpt_4o \
  --concurrency 5&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;Run ID: 01961de9-c8a4-7c60-ab8d-15491a9708e4
Number of datapoints: 100
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 100/100
exact_match: 0.83 ¬± 0.03
semantic_match: 0.98 ¬± 0.01
item_count: 7.15 ¬± 0.39&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;üß™ LLM Experimentation&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Ship with confidence with built-in A/B testing, routing, fallbacks, retries, etc.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Ship with confidence with built-in A/B testing for models, prompts, providers, hyperparameters, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Enforce principled experiments (RCTs) in complex workflows, including multi-turn and compound LLM systems&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled&gt; Soon: multi-armed bandits; AI-managed experiments&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&amp;amp; more!&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Build with an open-source stack well-suited for prototypes but designed from the ground up to support the most complex LLM applications and deployments.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Build simple applications or massive deployments with GitOps-friendly orchestration&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Extend TensorZero with built-in escape hatches, programmatic-first usage, direct database access, and more&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; Integrate with third-party tools: specialized observability and evaluations, model providers, agent orchestration frameworks, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled&gt; Soon: UI playground&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Watch LLMs get better at data extraction in real-time with TensorZero!&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.tensorzero.com/docs/gateway/guides/inference-time-optimizations#dynamic-in-context-learning-dicl"&gt;Dynamic in-context learning (DICL)&lt;/a&gt;&lt;/strong&gt; is a powerful inference-time optimization available out of the box with TensorZero. It enhances LLM performance by automatically incorporating relevant historical examples into the prompt, without the need for model fine-tuning.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/4df1022e-886e-48c2-8f79-6af3cdad79cb"&gt;https://github.com/user-attachments/assets/4df1022e-886e-48c2-8f79-6af3cdad79cb&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Start building today.&lt;/strong&gt; The &lt;strong&gt;&lt;a href="https://www.tensorzero.com/docs/quickstart"&gt;Quick Start&lt;/a&gt;&lt;/strong&gt; shows it's easy to set up an LLM application with TensorZero.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Questions?&lt;/strong&gt; Ask us on &lt;strong&gt;&lt;a href="https://www.tensorzero.com/slack"&gt;Slack&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href="https://www.tensorzero.com/discord"&gt;Discord&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Using TensorZero at work?&lt;/strong&gt; Email us at &lt;strong&gt;&lt;a href="mailto:hello@tensorzero.com"&gt;hello@tensorzero.com&lt;/a&gt;&lt;/strong&gt; to set up a Slack or Teams channel with your team (free).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Work with us.&lt;/strong&gt; We're &lt;strong&gt;&lt;a href="https://www.tensorzero.com/jobs"&gt;hiring in NYC&lt;/a&gt;&lt;/strong&gt;. We'd also welcome &lt;strong&gt;&lt;a href="https://github.com/tensorzero/tensorzero/raw/main/CONTRIBUTING.md"&gt;open-source contributions&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;We are working on a series of &lt;strong&gt;complete runnable examples&lt;/strong&gt; illustrating TensorZero's data &amp;amp; learning flywheel.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/tensorzero/tensorzero/tree/main/examples/data-extraction-ner"&gt;Optimizing Data Extraction (NER) with TensorZero&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;This example shows how to use TensorZero to optimize a data extraction pipeline. We demonstrate techniques like fine-tuning and dynamic in-context learning (DICL). In the end, an optimized GPT-4o Mini model outperforms GPT-4o on this task ‚Äî at a fraction of the cost and latency ‚Äî using a small amount of training data.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/tensorzero/tensorzero/tree/main/examples/rag-retrieval-augmented-generation/simple-agentic-rag/"&gt;Agentic RAG ‚Äî Multi-Hop Question Answering with LLMs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;This example shows how to build a multi-hop retrieval agent using TensorZero. The agent iteratively searches Wikipedia to gather information, and decides when it has enough context to answer a complex question.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/tensorzero/tensorzero/tree/main/examples/haiku-hidden-preferences"&gt;Writing Haikus to Satisfy a Judge with Hidden Preferences&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;This example fine-tunes GPT-4o Mini to generate haikus tailored to a specific taste. You'll see TensorZero's "data flywheel in a box" in action: better variants leads to better data, and better data leads to better variants. You'll see progress by fine-tuning the LLM multiple times.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/tensorzero/tensorzero/tree/main/examples/chess-puzzles/"&gt;Improving LLM Chess Ability with Best-of-N Sampling&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;This example showcases how best-of-N sampling can significantly enhance an LLM's chess-playing abilities by selecting the most promising moves from multiple generated options.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/tensorzero/tensorzero/tree/main/examples/gsm8k-custom-recipe-dspy"&gt;Improving Math Reasoning with a Custom Recipe for Automated Prompt Engineering (DSPy)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;TensorZero provides a number of pre-built optimization recipes covering common LLM engineering workflows. But you can also easily create your own recipes and workflows! This example shows how to optimize a TensorZero function using an arbitrary tool ‚Äî here, DSPy.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;em&gt;&amp;amp; many more on the way!&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>influxdata/influxdb</title>
      <link>https://github.com/influxdata/influxdb</link>
      <description>&lt;p&gt;Scalable datastore for metrics, events, and real-time analytics&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="assets/influxdb-logo.png"&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="assets/influxdb-logo-dark.png"&gt; 
  &lt;img src="https://raw.githubusercontent.com/influxdata/influxdb/main/assets/influxdb-logo.png" alt="InfluxDB Logo" width="600"&gt; 
 &lt;/picture&gt; 
 &lt;p&gt; &lt;/p&gt;
&lt;/div&gt; 
&lt;p&gt;InfluxDB Core is a database built to collect, process, transform, and store event and time series data. It is ideal for use cases that require real-time ingest and fast query response times to build user interfaces, monitoring, and automation solutions.&lt;/p&gt; 
&lt;p&gt;Common use cases include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Monitoring sensor data&lt;/li&gt; 
 &lt;li&gt;Server monitoring&lt;/li&gt; 
 &lt;li&gt;Application performance monitoring&lt;/li&gt; 
 &lt;li&gt;Network monitoring&lt;/li&gt; 
 &lt;li&gt;Financial market and trading analytics&lt;/li&gt; 
 &lt;li&gt;Behavioral analytics&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;InfluxDB is optimized for scenarios where near real-time data monitoring is essential and queries need to return quickly to support user experiences such as dashboards and interactive user interfaces.&lt;/p&gt; 
&lt;p&gt;InfluxDB 3 Core‚Äôs feature highlights include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Diskless architecture with object storage support (or local disk with no dependencies)&lt;/li&gt; 
 &lt;li&gt;Fast query response times (under 10ms for last-value queries, or 30ms for distinct metadata)&lt;/li&gt; 
 &lt;li&gt;Embedded Python VM for plugins and triggers&lt;/li&gt; 
 &lt;li&gt;Parquet file persistence&lt;/li&gt; 
 &lt;li&gt;Compatibility with InfluxDB 1.x and 2.x write APIs&lt;/li&gt; 
 &lt;li&gt;Compatability with InfluxDB 1.x query API (InfluxQL)&lt;/li&gt; 
 &lt;li&gt;SQL query engine with support for FlightSQL and HTTP query API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project Status&lt;/h2&gt; 
&lt;p&gt;InfluxDB 3 Core is GA as of April 15, 2025! We plan to have monthly point releases for the following six months, with patch releases as needed. We will move to a quarterly cadence after that for 3-4 releases, after which we'll reevaluate our release schedule.&lt;/p&gt; 
&lt;p&gt;Join the &lt;a href="https://discord.gg/vZe2w2Ds8B"&gt;InfluxDB3 Discord&lt;/a&gt; or the public channels below to share your feedback, feature requests, and bug reports.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://www.influxdata.com/blog/influxdb-3-oss-ga/"&gt;InfluxDB 3 Core &amp;amp; Enterprise GA release announcement here&lt;/a&gt; or dig into the &lt;a href="https://docs.influxdata.com/influxdb3/core/get-started/"&gt;InfluxDB 3 getting started guide here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Learn InfluxDB&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.influxdata.com/"&gt;Documentation&lt;/a&gt; | &lt;a href="https://community.influxdata.com/"&gt;Community Forum&lt;/a&gt; | &lt;a href="https://www.influxdata.com/slack/"&gt;Community Slack&lt;/a&gt; | &lt;a href="https://www.influxdata.com/blog/"&gt;Blog&lt;/a&gt; | &lt;a href="https://university.influxdata.com/"&gt;InfluxDB University&lt;/a&gt; | &lt;a href="https://www.youtube.com/@influxdata8893"&gt;YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Try &lt;strong&gt;InfluxDB Cloud&lt;/strong&gt; for free and get started fast with no local setup required. Click &lt;a href="https://cloud2.influxdata.com/signup"&gt;here&lt;/a&gt; to start building your application on InfluxDB Cloud.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;We have nightly and versioned Docker images, Debian packages, RPM packages, and tarballs of InfluxDB available on the &lt;a href="https://portal.influxdata.com/downloads/"&gt;InfluxData downloads page&lt;/a&gt;. We also provide the InfluxDB command line interface (CLI) client as a separate binary available at the same location.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For v1 installation, use the &lt;a href="https://github.com/influxdata/influxdb/tree/master-1.x"&gt;main 1.x branch&lt;/a&gt; or &lt;a href="https://docs.influxdata.com/influxdb/v1/introduction/install/#installing-influxdb-oss"&gt;install InfluxDB OSS directly&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For v2 installation, use the &lt;a href="https://github.com/influxdata/influxdb/tree/main-2.x"&gt;main 2.x branch&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For InfluxDB 3 Core see the &lt;a href="https://docs.influxdata.com/influxdb3/core/get-started/"&gt;InfluxDB 3 Core getting started guide&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For InfluxDB 3 Enterprise see the &lt;a href="https://docs.influxdata.com/influxdb3/enterprise/get-started/"&gt;InfluxDB 3 Enterprise getting started guide&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are interested in building from source, see the &lt;a href="https://raw.githubusercontent.com/influxdata/influxdb/main/CONTRIBUTING.md#building-from-source"&gt;building from source&lt;/a&gt; guide for contributors.&lt;/p&gt; 
&lt;p&gt;To begin using InfluxDB, visit our &lt;a href="https://docs.influxdata.com/influxdb/v1/introduction/get-started/"&gt;Getting Started with InfluxDB&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The open source software we build is licensed under the permissive MIT or Apache 2 licenses at the user's choosing. We‚Äôve long held the view that our open source code should be truly open and our commercial code should be separate and closed.&lt;/p&gt; 
&lt;h2&gt;Interested in joining the team building InfluxDB?&lt;/h2&gt; 
&lt;p&gt;Check out current job openings at &lt;a href="https://www.influxdata.com/careers"&gt;www.influxdata.com/careers&lt;/a&gt; today!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>boa-dev/boa</title>
      <link>https://github.com/boa-dev/boa</link>
      <description>&lt;p&gt;Boa is an embeddable Javascript engine written in Rust.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Boa&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://boajs.dev/"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/logo_yellow.svg"&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="./assets/logo_black.svg"&gt; 
   &lt;img alt="Boa logo" src="https://raw.githubusercontent.com/boa-dev/boa/main/assets/logo.png"&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Boa is an experimental JavaScript lexer, parser and interpreter written in Rust ü¶Ä, it has support for &lt;strong&gt;more&lt;/strong&gt; than 90% of the latest ECMAScript specification. We continuously improve the conformance to keep up with the ever-evolving standard.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/boa-dev/boa/actions/workflows/rust.yml?query=event%3Apush+branch%3Amain"&gt;&lt;img src="https://github.com/boa-dev/boa/actions/workflows/rust.yml/badge.svg?event=push&amp;amp;branch=main" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/boa-dev/boa"&gt;&lt;img src="https://codecov.io/gh/boa-dev/boa/branch/main/graph/badge.svg?sanitize=true" alt="codecov"&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/boa_engine"&gt;&lt;img src="https://img.shields.io/crates/v/boa_engine.svg?sanitize=true" alt="Crates.io"&gt;&lt;/a&gt; &lt;a href="https://docs.rs/boa_engine"&gt;&lt;img src="https://docs.rs/boa_engine/badge.svg?sanitize=true" alt="Docs.rs"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/tUFFk9Y"&gt;&lt;img src="https://img.shields.io/discord/595323158140158003?logo=discord" alt="Discord"&gt;&lt;/a&gt; &lt;a href="https://matrix.to/#/%23boa:matrix.org"&gt;&lt;img src="https://img.shields.io/matrix/boa:matrix.org?logo=matrix" alt="Matrix"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö°Ô∏è Live Demo (WASM)&lt;/h2&gt; 
&lt;p&gt;Try out the engine now at the live WASM playground &lt;a href="https://boajs.dev/playground"&gt;here&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Prefer a CLI? Feel free to try out &lt;code&gt;boa_cli&lt;/code&gt;!&lt;/p&gt; 
&lt;h2&gt;üì¶ Crates&lt;/h2&gt; 
&lt;p&gt;Boa currently publishes and actively maintains the following crates:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;boa_ast&lt;/code&gt;&lt;/strong&gt; - Boa's ECMAScript Abstract Syntax Tree&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;boa_cli&lt;/code&gt;&lt;/strong&gt; - Boa's CLI &amp;amp;&amp;amp; REPL implementation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;boa_engine&lt;/code&gt;&lt;/strong&gt; - Boa's implementation of ECMAScript builtin objects and execution&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;boa_gc&lt;/code&gt;&lt;/strong&gt; - Boa's garbage collector&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;boa_interner&lt;/code&gt;&lt;/strong&gt; - Boa's string interner&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;boa_parser&lt;/code&gt;&lt;/strong&gt; - Boa's lexer and parser&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;boa_icu_provider&lt;/code&gt;&lt;/strong&gt; - Boa's ICU4X data provider&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;boa_runtime&lt;/code&gt;&lt;/strong&gt; - Boa's WebAPI features&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;boa_string&lt;/code&gt;&lt;/strong&gt; - Boa's ECMAScript string implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;tag_ptr&lt;/code&gt;&lt;/strong&gt; - Utility library that enables a pointer to be associated with a tag of type &lt;code&gt;usize&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;The &lt;code&gt;Boa&lt;/code&gt; and &lt;code&gt;boa_unicode&lt;/code&gt; crates are deprecated.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üöÄ Example&lt;/h2&gt; 
&lt;p&gt;To start using Boa simply add the &lt;code&gt;boa_engine&lt;/code&gt; crate to your &lt;code&gt;Cargo.toml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[dependencies]
boa_engine = "0.20.0"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then in &lt;code&gt;main.rs&lt;/code&gt;, copy the below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;use boa_engine::{Context, Source, JsResult};

fn main() -&amp;gt; JsResult&amp;lt;()&amp;gt; {
  let js_code = r#"
      let two = 1 + 1;
      let definitely_not_four = two + "2";

      definitely_not_four
  "#;

  // Instantiate the execution context
  let mut context = Context::default();

  // Parse the source code
  let result = context.eval(Source::from_bytes(js_code))?;

  println!("{}", result.display());

  Ok(())
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, all that's left to do is &lt;code&gt;cargo run&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Congrats! You've executed your first JavaScript code using Boa!&lt;/p&gt; 
&lt;h2&gt;üîé Documentation&lt;/h2&gt; 
&lt;p&gt;For more information on Boa's API, feel free to check out our documentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://docs.rs/boa_engine/latest/boa_engine/"&gt;&lt;strong&gt;API Documentation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üèÖ Conformance&lt;/h2&gt; 
&lt;p&gt;To know more details about Boa's conformance surrounding the &lt;em&gt;ECMAScript&lt;/em&gt; specification, you can check out our &lt;em&gt;ECMASCript Test262&lt;/em&gt; test suite results &lt;a href="https://boajs.dev/conformance"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;ü™ö Contributing&lt;/h2&gt; 
&lt;p&gt;Please, check the &lt;a href="https://raw.githubusercontent.com/boa-dev/boa/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; file to know how to contribute in the project. You will need Rust installed and an editor. We have some configurations ready for VSCode.&lt;/p&gt; 
&lt;h3&gt;üêõ Debugging&lt;/h3&gt; 
&lt;p&gt;Check &lt;a href="https://raw.githubusercontent.com/boa-dev/boa/main/docs/debugging.md"&gt;debugging.md&lt;/a&gt; for more info on debugging.&lt;/p&gt; 
&lt;h3&gt;üï∏ Web Assembly&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;/p&gt; 
 &lt;p&gt;This only applies to &lt;code&gt;wasm32-unknown-unknown&lt;/code&gt; target, &lt;code&gt;WASI&lt;/code&gt; and &lt;code&gt;Emscripten&lt;/code&gt; target variants are handled automatically.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enable the &lt;code&gt;js&lt;/code&gt; feature flag.&lt;/li&gt; 
 &lt;li&gt;Set &lt;code&gt;RUSTFLAGS='--cfg getrandom_backend="wasm_js"'&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;code&gt;rustflags&lt;/code&gt; can also be set by adding a &lt;code&gt;.cargo/config.toml&lt;/code&gt; file in the project root directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[target.wasm32-unknown-unknown]
rustflags = '--cfg getrandom_backend="wasm_js"'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information see: &lt;a href="https://docs.rs/getrandom/latest/getrandom/index.html#webassembly-support"&gt;&lt;code&gt;getrandom&lt;/code&gt; WebAssembly Support&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;‚öôÔ∏è Usage&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clone this repo.&lt;/li&gt; 
 &lt;li&gt;Run with &lt;code&gt;cargo run -- test.js&lt;/code&gt; in the project root directory where &lt;code&gt;test.js&lt;/code&gt; is a path to an existing JS file with any valid JS code.&lt;/li&gt; 
 &lt;li&gt;If any JS doesn't work then it's a bug. Please raise an &lt;a href="https://github.com/boa-dev/boa/issues/"&gt;issue&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Example&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/boa-dev/boa/main/docs/img/latestDemo.gif" alt="Example"&gt;&lt;/p&gt; 
&lt;h3&gt;Command-line Options&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-txt"&gt;Usage: boa [OPTIONS] [FILE]...

Arguments:
  [FILE]...  The JavaScript file(s) to be evaluated

Options:
      --strict                        Run in strict mode
  -a, --dump-ast [&amp;lt;FORMAT&amp;gt;]           Dump the AST to stdout with the given format [possible values: debug, json, json-pretty]
  -t, --trace                         Dump the AST to stdout with the given format
      --vi                            Use vi mode in the REPL
  -O, --optimize
      --optimizer-statistics
      --flowgraph [&amp;lt;FORMAT&amp;gt;]          Generate instruction flowgraph. Default is Graphviz [possible values: graphviz, mermaid]
      --flowgraph-direction &amp;lt;FORMAT&amp;gt;  Specifies the direction of the flowgraph. Default is top-top-bottom [possible values: top-to-bottom, bottom-to-top, left-to-right, right-to-left]
      --debug-object                  Inject debugging object `$boa`
  -m, --module                        Treats the input files as modules
  -r, --root &amp;lt;ROOT&amp;gt;                   Root path from where the module resolver will try to load the modules [default: .]
  -h, --help                          Print help (see more with '--help')
  -V, --version                       Print version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üß≠ Roadmap&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://github.com/boa-dev/boa/milestones"&gt;Milestones&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üìä Benchmarks&lt;/h2&gt; 
&lt;p&gt;The current benchmarks are taken from v8's benchmark that you can find &lt;a href="https://github.com/boa-dev/data/tree/benchmarks/bench"&gt;here&lt;/a&gt;. You can also view the results of nightly benchmark runs comparing Boa with other JavaScript engines &lt;a href="https://boajs.dev/benchmarks"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you wish to run the benchmarks locally, then run Boa in release using the &lt;code&gt;combined.js&lt;/code&gt; script which contains all the sub-benchmarks in the &lt;code&gt;bench-v8&lt;/code&gt; directory.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cargo run --release -p boa_cli -- bench-v8/combined.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;/p&gt; 
 &lt;p&gt;If you'd like to run only a subset of the benchmarks, you can modify the &lt;code&gt;Makefile&lt;/code&gt; located in the &lt;a href="https://github.com/boa-dev/data/tree/benchmarks/bench"&gt;&lt;code&gt;bench-v8&lt;/code&gt; directory&lt;/a&gt;. Comment out the benchmarks you don't want to include, then run &lt;code&gt;make&lt;/code&gt;. After that, you can run Boa using the same command as above.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üß† Profiling&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/boa-dev/boa/main/docs/profiling.md"&gt;Profiling&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üìÜ Changelog&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/boa-dev/boa/main/CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üí¨ Communication&lt;/h2&gt; 
&lt;p&gt;Feel free to contact us on &lt;a href="https://matrix.to/#/%23boa:matrix.org"&gt;Matrix&lt;/a&gt; if you have any questions. Contributor discussions take place on the same Matrix Space if you're interested in contributing. We also have a &lt;a href="https://discord.gg/tUFFk9Y"&gt;Discord&lt;/a&gt; for any questions or issues.&lt;/p&gt; 
&lt;h2&gt;‚öñÔ∏è License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/boa-dev/boa/main/LICENSE-UNLICENSE"&gt;Unlicense&lt;/a&gt; or &lt;a href="https://raw.githubusercontent.com/boa-dev/boa/main/LICENSE-MIT"&gt;MIT&lt;/a&gt; licenses, at your option.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pola-rs/polars</title>
      <link>https://github.com/pola-rs/polars</link>
      <description>&lt;p&gt;Dataframes powered by a multithreaded, vectorized query engine, written in Rust&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;a href="https://pola.rs"&gt; &lt;img src="https://raw.githubusercontent.com/pola-rs/polars-static/master/banner/polars_github_banner.svg?sanitize=true" alt="Polars logo"&gt; &lt;/a&gt; &lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://crates.io/crates/polars"&gt; &lt;img src="https://img.shields.io/crates/v/polars.svg?sanitize=true" alt="crates.io Latest Release"&gt; &lt;/a&gt; 
 &lt;a href="https://pypi.org/project/polars/"&gt; &lt;img src="https://img.shields.io/pypi/v/polars.svg?sanitize=true" alt="PyPi Latest Release"&gt; &lt;/a&gt; 
 &lt;a href="https://www.npmjs.com/package/nodejs-polars"&gt; &lt;img src="https://img.shields.io/npm/v/nodejs-polars.svg?sanitize=true" alt="NPM Latest Release"&gt; &lt;/a&gt; 
 &lt;a href="https://community.r-multiverse.org/polars"&gt; &lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fcommunity.r-multiverse.org%2Fapi%2Fpackages%2Fpolars&amp;amp;query=%24.Version&amp;amp;label=r-multiverse" alt="R-multiverse Latest Release"&gt; &lt;/a&gt; 
 &lt;a href="https://doi.org/10.5281/zenodo.7697217"&gt; &lt;img src="https://zenodo.org/badge/DOI/10.5281/zenodo.7697217.svg?sanitize=true" alt="DOI Latest Release"&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;b&gt;Documentation&lt;/b&gt;: &lt;a href="https://docs.pola.rs/api/python/stable/reference/index.html"&gt;Python&lt;/a&gt; - &lt;a href="https://docs.rs/polars/latest/polars/"&gt;Rust&lt;/a&gt; - &lt;a href="https://pola-rs.github.io/nodejs-polars/index.html"&gt;Node.js&lt;/a&gt; - &lt;a href="https://pola-rs.github.io/r-polars/index.html"&gt;R&lt;/a&gt; | &lt;b&gt;StackOverflow&lt;/b&gt;: &lt;a href="https://stackoverflow.com/questions/tagged/python-polars"&gt;Python&lt;/a&gt; - &lt;a href="https://stackoverflow.com/questions/tagged/rust-polars"&gt;Rust&lt;/a&gt; - &lt;a href="https://stackoverflow.com/questions/tagged/nodejs-polars"&gt;Node.js&lt;/a&gt; - &lt;a href="https://stackoverflow.com/questions/tagged/r-polars"&gt;R&lt;/a&gt; | &lt;a href="https://docs.pola.rs/"&gt;User guide&lt;/a&gt; | &lt;a href="https://discord.gg/4UfP5cfBE7"&gt;Discord&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Polars: Blazingly fast DataFrames in Rust, Python, Node.js, R, and SQL&lt;/h2&gt; 
&lt;p&gt;Polars is a DataFrame interface on top of an OLAP Query Engine implemented in Rust using &lt;a href="https://arrow.apache.org/docs/format/Columnar.html"&gt;Apache Arrow Columnar Format&lt;/a&gt; as the memory model.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lazy | eager execution&lt;/li&gt; 
 &lt;li&gt;Multi-threaded&lt;/li&gt; 
 &lt;li&gt;SIMD&lt;/li&gt; 
 &lt;li&gt;Query optimization&lt;/li&gt; 
 &lt;li&gt;Powerful expression API&lt;/li&gt; 
 &lt;li&gt;Hybrid Streaming (larger-than-RAM datasets)&lt;/li&gt; 
 &lt;li&gt;Rust | Python | NodeJS | R | ...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To learn more, read the &lt;a href="https://docs.pola.rs/"&gt;user guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Python&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;&amp;gt;&amp;gt;&amp;gt; import polars as pl
&amp;gt;&amp;gt;&amp;gt; df = pl.DataFrame(
...     {
...         "A": [1, 2, 3, 4, 5],
...         "fruits": ["banana", "banana", "apple", "apple", "banana"],
...         "B": [5, 4, 3, 2, 1],
...         "cars": ["beetle", "audi", "beetle", "beetle", "beetle"],
...     }
... )

# embarrassingly parallel execution &amp;amp; very expressive query language
&amp;gt;&amp;gt;&amp;gt; df.sort("fruits").select(
...     "fruits",
...     "cars",
...     pl.lit("fruits").alias("literal_string_fruits"),
...     pl.col("B").filter(pl.col("cars") == "beetle").sum(),
...     pl.col("A").filter(pl.col("B") &amp;gt; 2).sum().over("cars").alias("sum_A_by_cars"),
...     pl.col("A").sum().over("fruits").alias("sum_A_by_fruits"),
...     pl.col("A").reverse().over("fruits").alias("rev_A_by_fruits"),
...     pl.col("A").sort_by("B").over("fruits").alias("sort_A_by_B_by_fruits"),
... )
shape: (5, 8)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ fruits   ‚îÜ cars     ‚îÜ literal_stri ‚îÜ B   ‚îÜ sum_A_by_ca ‚îÜ sum_A_by_fr ‚îÜ rev_A_by_fr ‚îÜ sort_A_by_B ‚îÇ
‚îÇ ---      ‚îÜ ---      ‚îÜ ng_fruits    ‚îÜ --- ‚îÜ rs          ‚îÜ uits        ‚îÜ uits        ‚îÜ _by_fruits  ‚îÇ
‚îÇ str      ‚îÜ str      ‚îÜ ---          ‚îÜ i64 ‚îÜ ---         ‚îÜ ---         ‚îÜ ---         ‚îÜ ---         ‚îÇ
‚îÇ          ‚îÜ          ‚îÜ str          ‚îÜ     ‚îÜ i64         ‚îÜ i64         ‚îÜ i64         ‚îÜ i64         ‚îÇ
‚ïû‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï°
‚îÇ "apple"  ‚îÜ "beetle" ‚îÜ "fruits"     ‚îÜ 11  ‚îÜ 4           ‚îÜ 7           ‚îÜ 4           ‚îÜ 4           ‚îÇ
‚îÇ "apple"  ‚îÜ "beetle" ‚îÜ "fruits"     ‚îÜ 11  ‚îÜ 4           ‚îÜ 7           ‚îÜ 3           ‚îÜ 3           ‚îÇ
‚îÇ "banana" ‚îÜ "beetle" ‚îÜ "fruits"     ‚îÜ 11  ‚îÜ 4           ‚îÜ 8           ‚îÜ 5           ‚îÜ 5           ‚îÇ
‚îÇ "banana" ‚îÜ "audi"   ‚îÜ "fruits"     ‚îÜ 11  ‚îÜ 2           ‚îÜ 8           ‚îÜ 2           ‚îÜ 2           ‚îÇ
‚îÇ "banana" ‚îÜ "beetle" ‚îÜ "fruits"     ‚îÜ 11  ‚îÜ 4           ‚îÜ 8           ‚îÜ 1           ‚îÜ 1           ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;SQL&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;&amp;gt;&amp;gt;&amp;gt; df = pl.scan_csv("docs/assets/data/iris.csv")
&amp;gt;&amp;gt;&amp;gt; ## OPTION 1
&amp;gt;&amp;gt;&amp;gt; # run SQL queries on frame-level
&amp;gt;&amp;gt;&amp;gt; df.sql("""
...	SELECT species,
...	  AVG(sepal_length) AS avg_sepal_length
...	FROM self
...	GROUP BY species
...	""").collect()
shape: (3, 2)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ species    ‚îÜ avg_sepal_length ‚îÇ
‚îÇ ---        ‚îÜ ---              ‚îÇ
‚îÇ str        ‚îÜ f64              ‚îÇ
‚ïû‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï°
‚îÇ Virginica  ‚îÜ 6.588            ‚îÇ
‚îÇ Versicolor ‚îÜ 5.936            ‚îÇ
‚îÇ Setosa     ‚îÜ 5.006            ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
&amp;gt;&amp;gt;&amp;gt; ## OPTION 2
&amp;gt;&amp;gt;&amp;gt; # use pl.sql() to operate on the global context
&amp;gt;&amp;gt;&amp;gt; df2 = pl.LazyFrame({
...    "species": ["Setosa", "Versicolor", "Virginica"],
...    "blooming_season": ["Spring", "Summer", "Fall"]
...})
&amp;gt;&amp;gt;&amp;gt; pl.sql("""
... SELECT df.species,
...     AVG(df.sepal_length) AS avg_sepal_length,
...     df2.blooming_season
... FROM df
... LEFT JOIN df2 ON df.species = df2.species
... GROUP BY df.species, df2.blooming_season
... """).collect()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;SQL commands can also be run directly from your terminal using the Polars CLI:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# run an inline SQL query
&amp;gt; polars -c "SELECT species, AVG(sepal_length) AS avg_sepal_length, AVG(sepal_width) AS avg_sepal_width FROM read_csv('docs/assets/data/iris.csv') GROUP BY species;"

# run interactively
&amp;gt; polars
Polars CLI v0.3.0
Type .help for help.

&amp;gt; SELECT species, AVG(sepal_length) AS avg_sepal_length, AVG(sepal_width) AS avg_sepal_width FROM read_csv('docs/assets/data/iris.csv') GROUP BY species;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Refer to the &lt;a href="https://github.com/pola-rs/polars-cli"&gt;Polars CLI repository&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Performance üöÄüöÄ&lt;/h2&gt; 
&lt;h3&gt;Blazingly fast&lt;/h3&gt; 
&lt;p&gt;Polars is very fast. In fact, it is one of the best performing solutions available. See the &lt;a href="https://www.pola.rs/benchmarks.html"&gt;PDS-H benchmarks&lt;/a&gt; results.&lt;/p&gt; 
&lt;h3&gt;Lightweight&lt;/h3&gt; 
&lt;p&gt;Polars is also very lightweight. It comes with zero required dependencies, and this shows in the import times:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;polars: 70ms&lt;/li&gt; 
 &lt;li&gt;numpy: 104ms&lt;/li&gt; 
 &lt;li&gt;pandas: 520ms&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Handles larger-than-RAM data&lt;/h3&gt; 
&lt;p&gt;If you have data that does not fit into memory, Polars' query engine is able to process your query (or parts of your query) in a streaming fashion. This drastically reduces memory requirements, so you might be able to process your 250GB dataset on your laptop. Collect with &lt;code&gt;collect(engine='streaming')&lt;/code&gt; to run the query streaming. (This might be a little slower, but it is still very fast!)&lt;/p&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;p&gt;Install the latest Polars version with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pip install polars
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We also have a conda package (&lt;code&gt;conda install -c conda-forge polars&lt;/code&gt;), however pip is the preferred way to install Polars.&lt;/p&gt; 
&lt;p&gt;Install Polars with all optional dependencies.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pip install 'polars[all]'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also install a subset of all optional dependencies.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pip install 'polars[numpy,pandas,pyarrow]'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://docs.pola.rs/user-guide/installation/#feature-flags"&gt;User Guide&lt;/a&gt; for more details on optional dependencies&lt;/p&gt; 
&lt;p&gt;To see the current Polars version and a full list of its optional dependencies, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;pl.show_versions()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Releases happen quite often (weekly / every few days) at the moment, so updating Polars regularly to get the latest bugfixes / features might not be a bad idea.&lt;/p&gt; 
&lt;h3&gt;Rust&lt;/h3&gt; 
&lt;p&gt;You can take latest release from &lt;code&gt;crates.io&lt;/code&gt;, or if you want to use the latest features / performance improvements point to the &lt;code&gt;main&lt;/code&gt; branch of this repo.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;polars = { git = "https://github.com/pola-rs/polars", rev = "&amp;lt;optional git tag&amp;gt;" }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Requires Rust version &lt;code&gt;&amp;gt;=1.80&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Want to contribute? Read our &lt;a href="https://docs.pola.rs/development/contributing/"&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Python: compile Polars from source&lt;/h2&gt; 
&lt;p&gt;If you want a bleeding edge release or maximal performance you should compile Polars from source.&lt;/p&gt; 
&lt;p&gt;This can be done by going through the following steps in sequence:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the latest &lt;a href="https://www.rust-lang.org/tools/install"&gt;Rust compiler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install &lt;a href="https://maturin.rs/"&gt;maturin&lt;/a&gt;: &lt;code&gt;pip install maturin&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cd py-polars&lt;/code&gt; and choose one of the following: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;make build&lt;/code&gt;, slow binary with debug assertions and symbols, fast compile times&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;make build-release&lt;/code&gt;, fast binary without debug assertions, minimal debug symbols, long compile times&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;make build-nodebug-release&lt;/code&gt;, same as build-release but without any debug symbols, slightly faster to compile&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;make build-debug-release&lt;/code&gt;, same as build-release but with full debug symbols, slightly slower to compile&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;make build-dist-release&lt;/code&gt;, fastest binary, extreme compile times&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;By default the binary is compiled with optimizations turned on for a modern CPU. Specify &lt;code&gt;LTS_CPU=1&lt;/code&gt; with the command if your CPU is older and does not support e.g. AVX2.&lt;/p&gt; 
&lt;p&gt;Note that the Rust crate implementing the Python bindings is called &lt;code&gt;py-polars&lt;/code&gt; to distinguish from the wrapped Rust crate &lt;code&gt;polars&lt;/code&gt; itself. However, both the Python package and the Python module are named &lt;code&gt;polars&lt;/code&gt;, so you can &lt;code&gt;pip install polars&lt;/code&gt; and &lt;code&gt;import polars&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Using custom Rust functions in Python&lt;/h2&gt; 
&lt;p&gt;Extending Polars with UDFs compiled in Rust is easy. We expose PyO3 extensions for &lt;code&gt;DataFrame&lt;/code&gt; and &lt;code&gt;Series&lt;/code&gt; data structures. See more in &lt;a href="https://github.com/pola-rs/polars/tree/main/pyo3-polars"&gt;https://github.com/pola-rs/polars/tree/main/pyo3-polars&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Going big...&lt;/h2&gt; 
&lt;p&gt;Do you expect more than 2^32 (~4.2 billion) rows? Compile Polars with the &lt;code&gt;bigidx&lt;/code&gt; feature flag or, for Python users, install &lt;code&gt;pip install polars-u64-idx&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Don't use this unless you hit the row boundary as the default build of Polars is faster and consumes less memory.&lt;/p&gt; 
&lt;h2&gt;Legacy&lt;/h2&gt; 
&lt;p&gt;Do you want Polars to run on an old CPU (e.g. dating from before 2011), or on an &lt;code&gt;x86-64&lt;/code&gt; build of Python on Apple Silicon under Rosetta? Install &lt;code&gt;pip install polars-lts-cpu&lt;/code&gt;. This version of Polars is compiled without &lt;a href="https://en.wikipedia.org/wiki/Advanced_Vector_Extensions"&gt;AVX&lt;/a&gt; target features.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.jetbrains.com"&gt;&lt;img src="https://www.jetbrains.com/company/brand/img/jetbrains_logo.png" height="50" alt="JetBrains logo"&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cisagov/thorium</title>
      <link>https://github.com/cisagov/thorium</link>
      <description>&lt;p&gt;A scalable file analysis and data generation platform that allows users to easily orchestrate arbitrary docker/vm/shell tools at scale.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="./api/docs/src/static_resources/logo_dark.svg"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="./api/docs/src/static_resources/logo_light.svg"&gt; 
  &lt;img alt="Thorium" src="https://raw.githubusercontent.com/cisagov/thorium/main/api/docs/src/static_resources/logo_dark.svg?sanitize=true" width="50%"&gt; 
 &lt;/picture&gt; 
 &lt;p&gt;&lt;a href="https://cisagov.github.io/thorium/intro.html"&gt;Documentation&lt;/a&gt; | &lt;a href="https://cisagov.github.io/thorium/admins/deploy/deploy.html"&gt;Install Documentation&lt;/a&gt; | &lt;a href="https://github.com/cisagov/thorium/raw/main/minithor/README.md"&gt;Single Node Install Documentation&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;A scalable file analysis and data generation platform that allows users to easily orchestrate arbitrary docker/vm/shell tools at scale.&lt;/p&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;hr&gt; 
&lt;ul&gt; 
 &lt;li&gt;Highly scalable analysis of arbitrary files/repos&lt;/li&gt; 
 &lt;li&gt;Near zero-cost analysis tool integration&lt;/li&gt; 
 &lt;li&gt;Static and dynamic analysis sandboxes&lt;/li&gt; 
 &lt;li&gt;User friendly interfaces: GUI + CLI&lt;/li&gt; 
 &lt;li&gt;RESTful API for automated access to data&lt;/li&gt; 
 &lt;li&gt;Multi-tenant friendly permission system&lt;/li&gt; 
 &lt;li&gt;Full-text search of analysis results&lt;/li&gt; 
 &lt;li&gt;Key/Value tags for labeling data&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;hr&gt; 
&lt;h5&gt;What Does Thorium actually do?&lt;/h5&gt; 
&lt;p&gt;Thorium allows for developers or analysts to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Easily scale up and orchestrate docker or baremetal based tools&lt;/li&gt; 
 &lt;li&gt;Easily search and use results from tools&lt;/li&gt; 
 &lt;li&gt;Comment and share files, tags, and results between users/analysts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Are any tools included?&lt;/h5&gt; 
&lt;p&gt;Currently no there are no tools included in Thorium but we plan on releasing some soon. We hope to continue to release tools as well as allow for curated contributions from the community.&lt;/p&gt; 
&lt;h5&gt;What do I need to deploy Thorium?&lt;/h5&gt; 
&lt;p&gt;Thorium was built and intended to run in a K8s cluster but it can also run on a laptop using minikube. However it is important to note the single node deployment was not intended for production and reliability/stability may be less then stellar. To deploy a single node instance follow the Minithor docs &lt;a href="https://github.com/cisagov/thorium/raw/main/minithor/README.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For full production deployment on a cluster you will need the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Block store provider&lt;/li&gt; 
 &lt;li&gt;S3 storage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For on prem deployments we recommend CEPH. To deploy Thorium on a cluster follow the docs &lt;a href="https://cisagov.github.io/thorium/admins/deploy/deploy.html"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h5&gt;How scalable is Thorium?&lt;/h5&gt; 
&lt;p&gt;Thorium is almost infinitely scalable if you have the compute/storage. Thorium has been tested to support billions of samples and utilization of large amounts of compute. Thorium partitions data temporally and allows admins to configure how scalable they want the system to be.&lt;/p&gt; 
&lt;h5&gt;Does Thorium call home or send any telemetry out?&lt;/h5&gt; 
&lt;p&gt;No, Thorium does not send any telemetry out.&lt;/p&gt; 
&lt;h5&gt;How large of files/repos does Thorium support?&lt;/h5&gt; 
&lt;p&gt;Currently, Thorium supports up to ~50 GiB per file/repo. This is after compression and so it is a fuzzy limit but it should never be significantly smaller then 50 GiB. We do have plans to increase this limit in the future please create an issue if you feel this would be useful.&lt;/p&gt; 
&lt;h5&gt;Can you add more documentation and examples of using Thorium and what it can do?&lt;/h5&gt; 
&lt;p&gt;Yes, we plan to continue to expand our documentation and examples soon.&lt;/p&gt; 
&lt;h3&gt;Funded by&lt;/h3&gt; 
&lt;hr&gt; 
&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="./api/docs/src/static_resources/funders_dark.png"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="./api/docs/src/static_resources/funders.png"&gt; 
  &lt;img alt="Thorium" src="https://raw.githubusercontent.com/cisagov/thorium/main/api/docs/src/static_resources/funders_dark.png" &lt; picture&gt; 
 &lt;/picture&gt;
&lt;/div&gt; 
&lt;p&gt;Contact us at &lt;a href="mailto:thorium@sandia.gov"&gt;thorium@sandia.gov&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>