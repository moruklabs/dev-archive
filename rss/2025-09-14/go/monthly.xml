<rss version="2.0">
  <channel>
    <title>GitHub Go Monthly Trending</title>
    <description>Monthly Trending of Go in GitHub</description>
    <pubDate>Sat, 13 Sep 2025 01:49:41 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>spf13/cobra</title>
      <link>https://github.com/spf13/cobra</link>
      <description>&lt;p&gt;A Commander for modern Go CLI interactions&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://cobra.dev"&gt; &lt;img width="512" height="535" alt="cobra-logo" src="https://github.com/user-attachments/assets/c8bf9aad-b5ae-41d3-8899-d83baec10af8" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;Cobra is a library for creating powerful modern CLI applications.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://cobra.dev"&gt;Visit Cobra.dev for extensive documentation&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Cobra is used in many Go projects such as &lt;a href="https://kubernetes.io/"&gt;Kubernetes&lt;/a&gt;, &lt;a href="https://gohugo.io"&gt;Hugo&lt;/a&gt;, and &lt;a href="https://github.com/cli/cli"&gt;GitHub CLI&lt;/a&gt; to name a few. &lt;a href="https://raw.githubusercontent.com/spf13/cobra/main/site/content/projects_using_cobra.md"&gt;This list&lt;/a&gt; contains a more extensive list of projects using Cobra.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/spf13/cobra/actions?query=workflow%3ATest"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/spf13/cobra/test.yml?branch=main&amp;amp;longCache=true&amp;amp;label=Test&amp;amp;logo=github%20actions&amp;amp;logoColor=fff" alt="" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/spf13/cobra"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/spf13/cobra.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/spf13/cobra"&gt;&lt;img src="https://goreportcard.com/badge/github.com/spf13/cobra" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://gophers.slack.com/archives/CD3LP1199"&gt;&lt;img src="https://img.shields.io/badge/Slack-cobra-brightgreen" alt="Slack" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center" markdown="1"&gt; 
 &lt;sup&gt;Supported by:&lt;/sup&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.warp.dev/cobra"&gt; &lt;img alt="Warp sponsorship" width="400" src="https://github.com/user-attachments/assets/ab8dd143-b0fd-4904-bdc5-dd7ecac94eae" /&gt; &lt;/a&gt; 
 &lt;h3&gt;&lt;a href="https://www.warp.dev/cobra"&gt;Warp, the AI terminal for devs&lt;/a&gt;&lt;/h3&gt; 
 &lt;p&gt;&lt;a href="https://www.warp.dev/cobra"&gt;Try Cobra in Warp today&lt;/a&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Overview&lt;/h1&gt; 
&lt;p&gt;Cobra is a library providing a simple interface to create powerful modern CLI interfaces similar to git &amp;amp; go tools.&lt;/p&gt; 
&lt;p&gt;Cobra provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Easy subcommand-based CLIs: &lt;code&gt;app server&lt;/code&gt;, &lt;code&gt;app fetch&lt;/code&gt;, etc.&lt;/li&gt; 
 &lt;li&gt;Fully POSIX-compliant flags (including short &amp;amp; long versions)&lt;/li&gt; 
 &lt;li&gt;Nested subcommands&lt;/li&gt; 
 &lt;li&gt;Global, local and cascading flags&lt;/li&gt; 
 &lt;li&gt;Intelligent suggestions (&lt;code&gt;app srver&lt;/code&gt;... did you mean &lt;code&gt;app server&lt;/code&gt;?)&lt;/li&gt; 
 &lt;li&gt;Automatic help generation for commands and flags&lt;/li&gt; 
 &lt;li&gt;Grouping help for subcommands&lt;/li&gt; 
 &lt;li&gt;Automatic help flag recognition of &lt;code&gt;-h&lt;/code&gt;, &lt;code&gt;--help&lt;/code&gt;, etc.&lt;/li&gt; 
 &lt;li&gt;Automatically generated shell autocomplete for your application (bash, zsh, fish, powershell)&lt;/li&gt; 
 &lt;li&gt;Automatically generated man pages for your application&lt;/li&gt; 
 &lt;li&gt;Command aliases so you can change things without breaking them&lt;/li&gt; 
 &lt;li&gt;The flexibility to define your own help, usage, etc.&lt;/li&gt; 
 &lt;li&gt;Optional seamless integration with &lt;a href="https://github.com/spf13/viper"&gt;viper&lt;/a&gt; for 12-factor apps&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Concepts&lt;/h1&gt; 
&lt;p&gt;Cobra is built on a structure of commands, arguments &amp;amp; flags.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Commands&lt;/strong&gt; represent actions, &lt;strong&gt;Args&lt;/strong&gt; are things and &lt;strong&gt;Flags&lt;/strong&gt; are modifiers for those actions.&lt;/p&gt; 
&lt;p&gt;The best applications read like sentences when used, and as a result, users intuitively know how to interact with them.&lt;/p&gt; 
&lt;p&gt;The pattern to follow is &lt;code&gt;APPNAME VERB NOUN --ADJECTIVE&lt;/code&gt; or &lt;code&gt;APPNAME COMMAND ARG --FLAG&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A few good real world examples may better illustrate this point.&lt;/p&gt; 
&lt;p&gt;In the following example, 'server' is a command, and 'port' is a flag:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;hugo server --port=1313
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In this command we are telling Git to clone the url bare.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone URL --bare
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Commands&lt;/h2&gt; 
&lt;p&gt;Command is the central point of the application. Each interaction that the application supports will be contained in a Command. A command can have children commands and optionally run an action.&lt;/p&gt; 
&lt;p&gt;In the example above, 'server' is the command.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/spf13/cobra#Command"&gt;More about cobra.Command&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Flags&lt;/h2&gt; 
&lt;p&gt;A flag is a way to modify the behavior of a command. Cobra supports fully POSIX-compliant flags as well as the Go &lt;a href="https://golang.org/pkg/flag/"&gt;flag package&lt;/a&gt;. A Cobra command can define flags that persist through to children commands and flags that are only available to that command.&lt;/p&gt; 
&lt;p&gt;In the example above, 'port' is the flag.&lt;/p&gt; 
&lt;p&gt;Flag functionality is provided by the &lt;a href="https://github.com/spf13/pflag"&gt;pflag library&lt;/a&gt;, a fork of the flag standard library which maintains the same interface while adding POSIX compliance.&lt;/p&gt; 
&lt;h1&gt;Installing&lt;/h1&gt; 
&lt;p&gt;Using Cobra is easy. First, use &lt;code&gt;go get&lt;/code&gt; to install the latest version of the library.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go get -u github.com/spf13/cobra@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, include Cobra in your application:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import "github.com/spf13/cobra"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;cobra-cli&lt;/code&gt; is a command line program to generate cobra applications and command files. It will bootstrap your application scaffolding to rapidly develop a Cobra-based application. It is the easiest way to incorporate Cobra into your application.&lt;/p&gt; 
&lt;p&gt;It can be installed by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go install github.com/spf13/cobra-cli@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For complete details on using the Cobra-CLI generator, please read &lt;a href="https://github.com/spf13/cobra-cli/raw/main/README.md"&gt;The Cobra Generator README&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For complete details on using the Cobra library, please read &lt;a href="https://raw.githubusercontent.com/spf13/cobra/main/site/content/user_guide.md"&gt;The Cobra User Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Cobra is released under the Apache 2.0 license. See &lt;a href="https://raw.githubusercontent.com/spf13/cobra/main/LICENSE.txt"&gt;LICENSE.txt&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>containrrr/watchtower</title>
      <link>https://github.com/containrrr/watchtower</link>
      <description>&lt;p&gt;A process for automating Docker container base image updates.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/containrrr/watchtower/main/logo.png" width="450" /&gt; 
 &lt;h1&gt;Watchtower&lt;/h1&gt; 
 &lt;p&gt;A process for automating Docker container base image updates. &lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://circleci.com/gh/containrrr/watchtower"&gt;&lt;img src="https://circleci.com/gh/containrrr/watchtower.svg?style=shield" alt="Circle CI" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/containrrr/watchtower"&gt;&lt;img src="https://codecov.io/gh/containrrr/watchtower/branch/main/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/github.com/containrrr/watchtower"&gt;&lt;img src="https://godoc.org/github.com/containrrr/watchtower?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/containrrr/watchtower"&gt;&lt;img src="https://goreportcard.com/badge/github.com/containrrr/watchtower" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/releases"&gt;&lt;img src="https://img.shields.io/github/tag/containrrr/watchtower.svg?sanitize=true" alt="latest version" /&gt;&lt;/a&gt; &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/github/license/containrrr/watchtower.svg?sanitize=true" alt="Apache-2.0 License" /&gt;&lt;/a&gt; &lt;a href="https://www.codacy.com/gh/containrrr/watchtower/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=containrrr/watchtower&amp;amp;utm_campaign=Badge_Grade"&gt;&lt;img src="https://app.codacy.com/project/badge/Grade/1c48cfb7646d4009aa8c6f71287670b8" alt="Codacy Badge" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/containrrr/watchtower/main/#contributors"&gt;&lt;img src="https://img.shields.io/github/all-contributors/containrrr/watchtower" alt="All Contributors" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/containrrr/watchtower"&gt;&lt;img src="https://img.shields.io/docker/pulls/containrrr/watchtower.svg?sanitize=true" alt="Pulls from DockerHub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry.&lt;/p&gt; 
&lt;p&gt;Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially. Run the watchtower container with the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ docker run --detach \
    --name watchtower \
    --volume /var/run/docker.sock:/var/run/docker.sock \
    containrrr/watchtower
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Watchtower is intended to be used in homelabs, media centers, local dev environments, and similar. We do &lt;strong&gt;not&lt;/strong&gt; recommend using Watchtower in a commercial or production environment. If that is you, you should be looking into using Kubernetes. If that feels like too big a step for you, please look into solutions like &lt;a href="https://microk8s.io/"&gt;MicroK8s&lt;/a&gt; and &lt;a href="https://k3s.io/"&gt;k3s&lt;/a&gt; that take away a lot of the toil of running a Kubernetes cluster.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The full documentation is available at &lt;a href="https://containrrr.dev/watchtower"&gt;https://containrrr.dev/watchtower&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href="https://allcontributors.org/docs/en/emoji-key"&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://piksel.se"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/807383?v=4?s=100" width="100px;" alt="nils måsén" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;nils måsén&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=piksel" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=piksel" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/containrrr/watchtower/main/#maintenance-piksel" title="Maintenance"&gt;🚧&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/pulls?q=is%3Apr+reviewed-by%3Apiksel" title="Reviewed Pull Requests"&gt;👀&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://simme.dev"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/1596025?v=4?s=100" width="100px;" alt="Simon Aronsson" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Simon Aronsson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=simskij" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=simskij" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/containrrr/watchtower/main/#maintenance-simskij" title="Maintenance"&gt;🚧&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/pulls?q=is%3Apr+reviewed-by%3Asimskij" title="Reviewed Pull Requests"&gt;👀&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://codelica.com"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/386101?v=4?s=100" width="100px;" alt="James" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;James&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=Codelica" title="Tests"&gt;⚠️&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/containrrr/watchtower/main/#ideas-Codelica" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://kopfkrieg.org"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/5047813?v=4?s=100" width="100px;" alt="Florian" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Florian&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/pulls?q=is%3Apr+reviewed-by%3AKopfKrieg" title="Reviewed Pull Requests"&gt;👀&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=KopfKrieg" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/bdehamer"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/398027?v=4?s=100" width="100px;" alt="Brian DeHamer" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Brian DeHamer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=bdehamer" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/containrrr/watchtower/main/#maintenance-bdehamer" title="Maintenance"&gt;🚧&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/rosscado"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/16578183?v=4?s=100" width="100px;" alt="Ross Cadogan" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ross Cadogan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=rosscado" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/stffabi"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/9464631?v=4?s=100" width="100px;" alt="stffabi" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;stffabi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=stffabi" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/containrrr/watchtower/main/#maintenance-stffabi" title="Maintenance"&gt;🚧&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ATCUSA"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/3581228?v=4?s=100" width="100px;" alt="Austin" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Austin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=ATCUSA" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://labs.ctl.io"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/6181487?v=4?s=100" width="100px;" alt="David Gardner" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;David Gardner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/pulls?q=is%3Apr+reviewed-by%3Adavidgardner11" title="Reviewed Pull Requests"&gt;👀&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=davidgardner11" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/dolanor"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/928722?v=4?s=100" width="100px;" alt="Tanguy ⧓ Herrmann" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tanguy ⧓ Herrmann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=dolanor" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/rdamazio"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/997641?v=4?s=100" width="100px;" alt="Rodrigo Damazio Bovendorp" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rodrigo Damazio Bovendorp&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=rdamazio" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=rdamazio" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.taisun.io/"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/1852688?v=4?s=100" width="100px;" alt="Ryan Kuba" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ryan Kuba&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/containrrr/watchtower/main/#infra-thelamer" title="Infrastructure (Hosting, Build-Tools, etc)"&gt;🚇&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/cnrmck"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/22061955?v=4?s=100" width="100px;" alt="cnrmck" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;cnrmck&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=cnrmck" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://harrywalter.co.uk"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/338588?v=4?s=100" width="100px;" alt="Harry Walter" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Harry Walter&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=haswalt" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://projectsperanza.com"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/74515?v=4?s=100" width="100px;" alt="Robotex" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Robotex&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=Robotex" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://geraldpape.io"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/1494211?v=4?s=100" width="100px;" alt="Gerald Pape" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Gerald Pape&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=ubergesundheit" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/fomk"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/17636183?v=4?s=100" width="100px;" alt="fomk" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;fomk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=fomk" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/svengo"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/2502366?v=4?s=100" width="100px;" alt="Sven Gottwald" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sven Gottwald&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/containrrr/watchtower/main/#infra-svengo" title="Infrastructure (Hosting, Build-Tools, etc)"&gt;🚇&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://liberapay.com/techknowlogick/"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/164197?v=4?s=100" width="100px;" alt="techknowlogick" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;techknowlogick&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=techknowlogick" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://log.c5t.org/about/"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/1449568?v=4?s=100" width="100px;" alt="waja" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;waja&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=waja" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://scottalbertson.com"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/154463?v=4?s=100" width="100px;" alt="Scott Albertson" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Scott Albertson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=salbertson" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/huddlesj"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/11966535?v=4?s=100" width="100px;" alt="Jason Huddleston" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jason Huddleston&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=huddlesj" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://npstr.space/"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/6048348?v=4?s=100" width="100px;" alt="Napster" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Napster&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=napstr" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/darknode"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/809429?v=4?s=100" width="100px;" alt="Maxim" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Maxim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=darknode" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=darknode" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://schmitt.cat"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/17984549?v=4?s=100" width="100px;" alt="Max Schmitt" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Max Schmitt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=mxschmitt" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/cron410"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/3082899?v=4?s=100" width="100px;" alt="cron410" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;cron410&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=cron410" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Cardoso222"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/7026517?v=4?s=100" width="100px;" alt="Paulo Henrique" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Paulo Henrique&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=Cardoso222" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://coded.io"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/107097?v=4?s=100" width="100px;" alt="Kaleb Elwert" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kaleb Elwert&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=belak" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/wmbutler"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/1254810?v=4?s=100" width="100px;" alt="Bill Butler" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Bill Butler&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=wmbutler" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.mariotacke.io"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/4942019?v=4?s=100" width="100px;" alt="Mario Tacke" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mario Tacke&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=mariotacke" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://markwoodbridge.com"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/1101318?v=4?s=100" width="100px;" alt="Mark Woodbridge" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mark Woodbridge&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=mrw34" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Ansem93"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/6626218?v=4?s=100" width="100px;" alt="Ansem93" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ansem93&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=Ansem93" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/lukapeschke"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/17085536?v=4?s=100" width="100px;" alt="Luka Peschke" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Luka Peschke&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=lukapeschke" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=lukapeschke" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/zoispag"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/21138205?v=4?s=100" width="100px;" alt="Zois Pagoulatos" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Zois Pagoulatos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=zoispag" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/pulls?q=is%3Apr+reviewed-by%3Azoispag" title="Reviewed Pull Requests"&gt;👀&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/containrrr/watchtower/main/#maintenance-zoispag" title="Maintenance"&gt;🚧&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://alexandre.menif.name"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/16152103?v=4?s=100" width="100px;" alt="Alexandre Menif" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alexandre Menif&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=alexandremenif" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/chugunov"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/4140479?v=4?s=100" width="100px;" alt="Andrey" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andrey&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=chugunov" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://noplanman.ch"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/9423417?v=4?s=100" width="100px;" alt="Armando Lüscher" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Armando Lüscher&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=noplanman" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/rjbudke"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/273485?v=4?s=100" width="100px;" alt="Ryan Budke" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ryan Budke&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=rjbudke" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://kaloyan.raev.name"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/468091?v=4?s=100" width="100px;" alt="Kaloyan Raev" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kaloyan Raev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=kaloyan-raev" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=kaloyan-raev" title="Tests"&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/sixth"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/11591445?v=4?s=100" width="100px;" alt="sixth" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;sixth&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=sixth" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://foosel.net"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/83657?v=4?s=100" width="100px;" alt="Gina Häußge" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Gina Häußge&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=foosel" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/8ear"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/10329648?v=4?s=100" width="100px;" alt="Max H." /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Max H.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=8ear" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://pjknkda.github.io"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/4986524?v=4?s=100" width="100px;" alt="Jungkook Park" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jungkook Park&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=pjknkda" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://achfrag.net"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/5753622?v=4?s=100" width="100px;" alt="Jan Kristof Nidzwetzki" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jan Kristof Nidzwetzki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=jnidzwetzki" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.lukaselsner.de"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/1413542?v=4?s=100" width="100px;" alt="lukas" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;lukas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=mindrunner" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://codingcoffee.dev"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/13611153?v=4?s=100" width="100px;" alt="Ameya Shenoy" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ameya Shenoy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=codingCoffee" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/raymondelooff"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/9716806?v=4?s=100" width="100px;" alt="Raymon de Looff" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Raymon de Looff&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=raymondelooff" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://codemonkeylabs.com"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/704034?v=4?s=100" width="100px;" alt="John Clayton" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;John Clayton&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=jsclayton" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Germs2004"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/5519340?v=4?s=100" width="100px;" alt="Germs2004" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Germs2004&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=Germs2004" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/lukwil"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/30203234?v=4?s=100" width="100px;" alt="Lukas Willburger" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Lukas Willburger&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=lukwil" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/auanasgheps"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/20586878?v=4?s=100" width="100px;" alt="Oliver Cervera" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Oliver Cervera&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=auanasgheps" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/victorcmoura"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/26290053?v=4?s=100" width="100px;" alt="Victor Moura" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Victor Moura&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=victorcmoura" title="Tests"&gt;⚠️&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=victorcmoura" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=victorcmoura" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/mbrandau"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/12972798?v=4?s=100" width="100px;" alt="Maximilian Brandau" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Maximilian Brandau&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=mbrandau" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=mbrandau" title="Tests"&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/aneisch"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/6991461?v=4?s=100" width="100px;" alt="Andrew" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andrew&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=aneisch" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/sixcorners"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/585501?v=4?s=100" width="100px;" alt="sixcorners" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;sixcorners&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=sixcorners" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://arnested.dk"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/190005?v=4?s=100" width="100px;" alt="Arne Jørgensen" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Arne Jørgensen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=arnested" title="Tests"&gt;⚠️&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/pulls?q=is%3Apr+reviewed-by%3Aarnested" title="Reviewed Pull Requests"&gt;👀&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/patski123"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/19295295?v=4?s=100" width="100px;" alt="PatSki123" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;PatSki123&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=patski123" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://rubyroidlabs.com/"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/624999?v=4?s=100" width="100px;" alt="Valentine Zavadsky" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Valentine Zavadsky&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=Saicheg" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=Saicheg" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=Saicheg" title="Tests"&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/bopoh24"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/4086631?v=4?s=100" width="100px;" alt="Alexander Voronin" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alexander Voronin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=bopoh24" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/issues?q=author%3Abopoh24" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://www.teqneers.de"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/788989?v=4?s=100" width="100px;" alt="Oliver Mueller" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Oliver Mueller&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=ogmueller" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/tammert"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/8885250?v=4?s=100" width="100px;" alt="Sebastiaan Tammer" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sebastiaan Tammer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=tammert" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Miosame"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/8201077?v=4?s=100" width="100px;" alt="miosame" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;miosame&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=miosame" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://mtz.gr"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/590246?v=4?s=100" width="100px;" alt="Andrew Metzger" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andrew Metzger&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/issues?q=author%3Aandrewjmetzger" title="Bug reports"&gt;🐛&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/containrrr/watchtower/main/#example-andrewjmetzger" title="Examples"&gt;💡&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/pgrimaud"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/1866496?v=4?s=100" width="100px;" alt="Pierre Grimaud" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Pierre Grimaud&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=pgrimaud" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/mattdoran"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/577779?v=4?s=100" width="100px;" alt="Matt Doran" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Matt Doran&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=mattdoran" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/MihailITPlace"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/28401551?v=4?s=100" width="100px;" alt="MihailITPlace" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;MihailITPlace&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=MihailITPlace" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/bugficks"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/2992895?v=4?s=100" width="100px;" alt="bugficks" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;bugficks&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=bugficks" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=bugficks" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/MichaelSp"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/448282?v=4?s=100" width="100px;" alt="Michael" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Michael&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=MichaelSp" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/jokay"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/18613935?v=4?s=100" width="100px;" alt="D. Domig" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;D. Domig&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=jokay" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://maxwells-daemon.io"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/260084?v=4?s=100" width="100px;" alt="Ben Osheroff" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ben Osheroff&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=osheroff" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/dhet"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/2668621?v=4?s=100" width="100px;" alt="David H." /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;David H.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=dhet" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://www.gridgeo.com"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/671887?v=4?s=100" width="100px;" alt="Chander Ganesan" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Chander Ganesan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=chander" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/yrien30"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/26816162?v=4?s=100" width="100px;" alt="yrien30" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;yrien30&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=yrien30" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ksurl"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/1371562?v=4?s=100" width="100px;" alt="ksurl" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ksurl&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=ksurl" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=ksurl" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/containrrr/watchtower/main/#infra-ksurl" title="Infrastructure (Hosting, Build-Tools, etc)"&gt;🚇&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/rg9400"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/39887349?v=4?s=100" width="100px;" alt="rg9400" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;rg9400&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=rg9400" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/tkalus"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/287181?v=4?s=100" width="100px;" alt="Turtle Kalus" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Turtle Kalus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=tkalus" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/SrihariThalla"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/7479937?v=4?s=100" width="100px;" alt="Srihari Thalla" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Srihari Thalla&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=SrihariThalla" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://nymous.io"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/4216559?v=4?s=100" width="100px;" alt="Thomas Gaudin" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Thomas Gaudin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=nymous" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://indigo.re/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2804645?v=4?s=100" width="100px;" alt="hydrargyrum" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;hydrargyrum&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=hydrargyrum" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://reinout.vanrees.org"&gt;&lt;img src="https://avatars.githubusercontent.com/u/121433?v=4?s=100" width="100px;" alt="Reinout van Rees" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Reinout van Rees&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=reinout" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/DasSkelett"&gt;&lt;img src="https://avatars.githubusercontent.com/u/28812678?v=4?s=100" width="100px;" alt="DasSkelett" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;DasSkelett&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=DasSkelett" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/zenjabba"&gt;&lt;img src="https://avatars.githubusercontent.com/u/679864?v=4?s=100" width="100px;" alt="zenjabba" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;zenjabba&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=zenjabba" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://quan.io"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3526705?v=4?s=100" width="100px;" alt="Dan Quan" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dan Quan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=djquan" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/modem7"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4349962?v=4?s=100" width="100px;" alt="modem7" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;modem7&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=modem7" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/hypnoglow"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4853075?v=4?s=100" width="100px;" alt="Igor Zibarev" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Igor Zibarev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=hypnoglow" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/patricegautier"&gt;&lt;img src="https://avatars.githubusercontent.com/u/38435239?v=4?s=100" width="100px;" alt="Patrice" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Patrice&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=patricegautier" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://jamesw.link/me"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8067792?v=4?s=100" width="100px;" alt="James White" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;James White&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=jamesmacwhite" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://ko-fi.com/foxite"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20421657?v=4?s=100" width="100px;" alt="Dirk Kok" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dirk Kok&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=Foxite" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/EDIflyer"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13610277?v=4?s=100" width="100px;" alt="EDIflyer" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;EDIflyer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=EDIflyer" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/jauderho"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13562?v=4?s=100" width="100px;" alt="Jauder Ho" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jauder Ho&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=jauderho" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://tamal.vercel.app/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/72851613?v=4?s=100" width="100px;" alt="Tamal Das " /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tamal Das &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=IAmTamal" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/testwill"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8717479?v=4?s=100" width="100px;" alt="guangwu" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;guangwu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=testwill" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://hub.lol"&gt;&lt;img src="https://avatars.githubusercontent.com/u/48992448?v=4?s=100" width="100px;" alt="Florian Hübner" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Florian Hübner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=nothub" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=nothub" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/andriibratanin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20169213?v=4?s=100" width="100px;" alt="" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andrii Bratanin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=andriibratanin" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; 
&lt;p&gt;This project follows the &lt;a href="https://github.com/all-contributors/all-contributors"&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>henrygd/beszel</title>
      <link>https://github.com/henrygd/beszel</link>
      <description>&lt;p&gt;Lightweight server monitoring hub with historical data, docker stats, and alerts.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Beszel&lt;/h1&gt; 
&lt;p&gt;Beszel is a lightweight server monitoring platform that includes Docker statistics, historical data, and alert functions.&lt;/p&gt; 
&lt;p&gt;It has a friendly web interface, simple configuration, and is ready to use out of the box. It supports automatic backup, multi-user, OAuth authentication, and API access.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/henrygd/beszel-agent"&gt;&lt;img src="https://img.shields.io/docker/image-size/henrygd/beszel-agent/latest?logo=docker&amp;amp;label=agent%20image%20size" alt="agent Docker Image Size" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/henrygd/beszel"&gt;&lt;img src="https://img.shields.io/docker/image-size/henrygd/beszel/latest?logo=docker&amp;amp;label=hub%20image%20size" alt="hub Docker Image Size" /&gt;&lt;/a&gt; &lt;a href="https://github.com/henrygd/beszel/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/henrygd/beszel?color=%239944ee" alt="MIT license" /&gt;&lt;/a&gt; &lt;a href="https://crowdin.com/project/beszel"&gt;&lt;img src="https://badges.crowdin.net/beszel/localized.svg?sanitize=true" alt="Crowdin" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://henrygd-assets.b-cdn.net/beszel/screenshot-new.png" alt="Screenshot of Beszel dashboard and system page, side by side. The dashboard shows metrics from multiple connected systems, while the system page shows detailed metrics for a single system." /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Lightweight&lt;/strong&gt;: Smaller and less resource-intensive than leading solutions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt;: Easy setup with little manual configuration required.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker stats&lt;/strong&gt;: Tracks CPU, memory, and network usage history for each container.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Alerts&lt;/strong&gt;: Configurable alerts for CPU, memory, disk, bandwidth, temperature, load average, and status.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt;: Users manage their own systems. Admins can share systems across users.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OAuth / OIDC&lt;/strong&gt;: Supports many OAuth2 providers. Password auth can be disabled.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic backups&lt;/strong&gt;: Save to and restore from disk or S3-compatible storage.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- - **REST API**: Use or update your data in your own scripts and applications. --&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;Beszel consists of two main components: the &lt;strong&gt;hub&lt;/strong&gt; and the &lt;strong&gt;agent&lt;/strong&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Hub&lt;/strong&gt;: A web application built on &lt;a href="https://pocketbase.io/"&gt;PocketBase&lt;/a&gt; that provides a dashboard for viewing and managing connected systems.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Agent&lt;/strong&gt;: Runs on each system you want to monitor and communicates system metrics to the hub.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://beszel.dev/guide/getting-started"&gt;quick start guide&lt;/a&gt; and other documentation is available on our website, &lt;a href="https://beszel.dev"&gt;beszel.dev&lt;/a&gt;. You'll be up and running in a few minutes.&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://beszel.dev/image/dashboard.png" alt="Dashboard" /&gt; &lt;img src="https://beszel.dev/image/system-full.png" alt="System page" /&gt; &lt;img src="https://beszel.dev/image/settings-notifications.png" alt="Notification Settings" /&gt;&lt;/p&gt; 
&lt;h2&gt;Supported metrics&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;CPU usage&lt;/strong&gt; - Host system and Docker / Podman containers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Memory usage&lt;/strong&gt; - Host system and containers. Includes swap and ZFS ARC.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Disk usage&lt;/strong&gt; - Host system. Supports multiple partitions and devices.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Disk I/O&lt;/strong&gt; - Host system. Supports multiple partitions and devices.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Network usage&lt;/strong&gt; - Host system and containers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Load average&lt;/strong&gt; - Host system.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Temperature&lt;/strong&gt; - Host system sensors.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GPU usage / temperature / power draw&lt;/strong&gt; - Nvidia and AMD only. Must use binary agent.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Battery&lt;/strong&gt; - Host system battery charge.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Help and discussion&lt;/h2&gt; 
&lt;p&gt;Please search existing issues and discussions before opening a new one. I try my best to respond, but may not always have time to do so.&lt;/p&gt; 
&lt;h4&gt;Bug reports and feature requests&lt;/h4&gt; 
&lt;p&gt;Bug reports and detailed feature requests should be posted on &lt;a href="https://github.com/henrygd/beszel/issues"&gt;GitHub issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Support and general discussion&lt;/h4&gt; 
&lt;p&gt;Support requests and general discussion can be posted on &lt;a href="https://github.com/henrygd/beszel/discussions"&gt;GitHub discussions&lt;/a&gt; or the community-run &lt;a href="https://matrix.to/#/#beszel:matrix.org"&gt;Matrix room&lt;/a&gt;: &lt;code&gt;#beszel:matrix.org&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Beszel is licensed under the MIT License. See the &lt;a href="https://raw.githubusercontent.com/henrygd/beszel/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GoogleCloudPlatform/microservices-demo</title>
      <link>https://github.com/GoogleCloudPlatform/microservices-demo</link>
      <description>&lt;p&gt;Sample cloud-first application with 10 microservices showcasing Kubernetes, Istio, and gRPC.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://github.com/GoogleCloudPlatform/microservices-demo/workflows/Continuous%20Integration%20-%20Main/Release/badge.svg?sanitize=true" alt="Continuous Integration" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Online Boutique&lt;/strong&gt; is a cloud-first microservices demo application. The application is a web-based e-commerce app where users can browse items, add them to the cart, and purchase them.&lt;/p&gt; 
&lt;p&gt;Google uses this application to demonstrate how developers can modernize enterprise applications using Google Cloud products, including: &lt;a href="https://cloud.google.com/kubernetes-engine"&gt;Google Kubernetes Engine (GKE)&lt;/a&gt;, &lt;a href="https://cloud.google.com/service-mesh"&gt;Cloud Service Mesh (CSM)&lt;/a&gt;, &lt;a href="https://grpc.io/"&gt;gRPC&lt;/a&gt;, &lt;a href="https://cloud.google.com/products/operations"&gt;Cloud Operations&lt;/a&gt;, &lt;a href="https://cloud.google.com/spanner"&gt;Spanner&lt;/a&gt;, &lt;a href="https://cloud.google.com/memorystore"&gt;Memorystore&lt;/a&gt;, &lt;a href="https://cloud.google.com/alloydb"&gt;AlloyDB&lt;/a&gt;, and &lt;a href="https://ai.google.dev/"&gt;Gemini&lt;/a&gt;. This application works on any Kubernetes cluster.&lt;/p&gt; 
&lt;p&gt;If you’re using this demo, please &lt;strong&gt;★Star&lt;/strong&gt; this repository to show your interest!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note to Googlers:&lt;/strong&gt; Please fill out the form at &lt;a href="http://go/microservices-demo"&gt;go/microservices-demo&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Online Boutique&lt;/strong&gt; is composed of 11 microservices written in different languages that talk to each other over gRPC.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/docs/img/architecture-diagram.png"&gt;&lt;img src="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/docs/img/architecture-diagram.png" alt="Architecture of microservices" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Find &lt;strong&gt;Protocol Buffers Descriptions&lt;/strong&gt; at the &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/protos"&gt;&lt;code&gt;./protos&lt;/code&gt; directory&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Service&lt;/th&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/frontend"&gt;frontend&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;Exposes an HTTP server to serve the website. Does not require signup/login and generates session IDs for all users automatically.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/cartservice"&gt;cartservice&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;C#&lt;/td&gt; 
   &lt;td&gt;Stores the items in the user's shopping cart in Redis and retrieves it.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/productcatalogservice"&gt;productcatalogservice&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;Provides the list of products from a JSON file and ability to search products and get individual products.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/currencyservice"&gt;currencyservice&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;Converts one money amount to another currency. Uses real values fetched from European Central Bank. It's the highest QPS service.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/paymentservice"&gt;paymentservice&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;Charges the given credit card info (mock) with the given amount and returns a transaction ID.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/shippingservice"&gt;shippingservice&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;Gives shipping cost estimates based on the shopping cart. Ships items to the given address (mock)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/emailservice"&gt;emailservice&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Python&lt;/td&gt; 
   &lt;td&gt;Sends users an order confirmation email (mock).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/checkoutservice"&gt;checkoutservice&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;Retrieves user cart, prepares order and orchestrates the payment, shipping and the email notification.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/recommendationservice"&gt;recommendationservice&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Python&lt;/td&gt; 
   &lt;td&gt;Recommends other products based on what's given in the cart.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/adservice"&gt;adservice&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Java&lt;/td&gt; 
   &lt;td&gt;Provides text ads based on given context words.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/src/loadgenerator"&gt;loadgenerator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Python/Locust&lt;/td&gt; 
   &lt;td&gt;Continuously sends requests imitating realistic user shopping flows to the frontend.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Home Page&lt;/th&gt; 
   &lt;th&gt;Checkout Screen&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/docs/img/online-boutique-frontend-1.png"&gt;&lt;img src="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/docs/img/online-boutique-frontend-1.png" alt="Screenshot of store homepage" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/docs/img/online-boutique-frontend-2.png"&gt;&lt;img src="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/docs/img/online-boutique-frontend-2.png" alt="Screenshot of checkout screen" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Quickstart (GKE)&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Ensure you have the following requirements:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://cloud.google.com/resource-manager/docs/creating-managing-projects#creating_a_project"&gt;Google Cloud project&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Shell environment with &lt;code&gt;gcloud&lt;/code&gt;, &lt;code&gt;git&lt;/code&gt;, and &lt;code&gt;kubectl&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the latest major version.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;git clone --depth 1 --branch v0 https://github.com/GoogleCloudPlatform/microservices-demo.git
cd microservices-demo/
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;--depth 1&lt;/code&gt; argument skips downloading git history.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set the Google Cloud project and region and ensure the Google Kubernetes Engine API is enabled.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;export PROJECT_ID=&amp;lt;PROJECT_ID&amp;gt;
export REGION=us-central1
gcloud services enable container.googleapis.com \
  --project=${PROJECT_ID}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Substitute &lt;code&gt;&amp;lt;PROJECT_ID&amp;gt;&lt;/code&gt; with the ID of your Google Cloud project.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create a GKE cluster and get the credentials for it.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;gcloud container clusters create-auto online-boutique \
  --project=${PROJECT_ID} --region=${REGION}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Creating the cluster may take a few minutes.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Deploy Online Boutique to the cluster.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;kubectl apply -f ./release/kubernetes-manifests.yaml
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Wait for the pods to be ready.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;kubectl get pods
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;After a few minutes, you should see the Pods in a &lt;code&gt;Running&lt;/code&gt; state:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;NAME                                     READY   STATUS    RESTARTS   AGE
adservice-76bdd69666-ckc5j               1/1     Running   0          2m58s
cartservice-66d497c6b7-dp5jr             1/1     Running   0          2m59s
checkoutservice-666c784bd6-4jd22         1/1     Running   0          3m1s
currencyservice-5d5d496984-4jmd7         1/1     Running   0          2m59s
emailservice-667457d9d6-75jcq            1/1     Running   0          3m2s
frontend-6b8d69b9fb-wjqdg                1/1     Running   0          3m1s
loadgenerator-665b5cd444-gwqdq           1/1     Running   0          3m
paymentservice-68596d6dd6-bf6bv          1/1     Running   0          3m
productcatalogservice-557d474574-888kr   1/1     Running   0          3m
recommendationservice-69c56b74d4-7z8r5   1/1     Running   0          3m1s
redis-cart-5f59546cdd-5jnqf              1/1     Running   0          2m58s
shippingservice-6ccc89f8fd-v686r         1/1     Running   0          2m58s
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Access the web frontend in a browser using the frontend's external IP.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;kubectl get service frontend-external | awk '{print $4}'
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Visit &lt;code&gt;http://EXTERNAL_IP&lt;/code&gt; in a web browser to access your instance of Online Boutique.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Congrats! You've deployed the default Online Boutique. To deploy a different variation of Online Boutique (e.g., with Google Cloud Operations tracing, Istio, etc.), see &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/#deploy-online-boutique-variations-with-kustomize"&gt;Deploy Online Boutique variations with Kustomize&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Once you are done with it, delete the GKE cluster.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;gcloud container clusters delete online-boutique \
  --project=${PROJECT_ID} --region=${REGION}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Deleting the cluster may take a few minutes.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Additional deployment options&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Terraform&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/terraform"&gt;See these instructions&lt;/a&gt; to learn how to deploy Online Boutique using &lt;a href="https://www.terraform.io/intro"&gt;Terraform&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Istio / Cloud Service Mesh&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/kustomize/components/service-mesh-istio/README.md"&gt;See these instructions&lt;/a&gt; to deploy Online Boutique alongside an Istio-backed service mesh.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Non-GKE clusters (Minikube, Kind, etc)&lt;/strong&gt;: See the &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/docs/development-guide.md"&gt;Development guide&lt;/a&gt; to learn how you can deploy Online Boutique on non-GKE clusters.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI assistant using Gemini&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/kustomize/components/shopping-assistant/README.md"&gt;See these instructions&lt;/a&gt; to deploy a Gemini-powered AI assistant that suggests products to purchase based on an image.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;And more&lt;/strong&gt;: The &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/kustomize"&gt;&lt;code&gt;/kustomize&lt;/code&gt; directory&lt;/a&gt; contains instructions for customizing the deployment of Online Boutique with other variations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/docs/development-guide.md"&gt;Development&lt;/a&gt; to learn how to run and develop this app locally.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demos featuring Online Boutique&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/p/d99101001e69"&gt;Platform Engineering in action: Deploy the Online Boutique sample apps with Score and Humanitec&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/p/9d64c7009cd"&gt;The new Kubernetes Gateway API with Istio and Anthos Service Mesh (ASM)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/p/981bd98b53f8"&gt;Use Azure Redis Cache with the Online Boutique sample on AKS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/p/c68ba253844a"&gt;Sail Sharp, 8 tips to optimize and secure your .NET containers for Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/google-cloud/a2ea3493ed0"&gt;Deploy multi-region application with Anthos and Google cloud Spanner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/p/82f7879a900d"&gt;Use Google Cloud Memorystore (Redis) with the Online Boutique sample on GKE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/p/246119e46d53"&gt;Use Helm to simplify the deployment of Online Boutique, with a Service Mesh, GitOps, and more!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/blog/products/application-modernization/api-management-and-service-mesh-go-together"&gt;How to reduce microservices complexity with Apigee and Anthos Service Mesh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/p/b5bd26253a4c"&gt;gRPC health probes with Kubernetes 1.24+&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/p/f7248e077339"&gt;Use Google Cloud Spanner with the Online Boutique sample&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/google-cloud/64b71969318d"&gt;Seamlessly encrypt traffic from any apps in your Mesh to Memorystore (redis)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/service-mesh/docs/strengthen-app-security"&gt;Strengthen your app's security with Cloud Service Mesh and Anthos Config Management&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/architecture/exposing-service-mesh-apps-through-gke-ingress"&gt;From edge to mesh: Exposing service mesh applications through GKE Ingress&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/blog/products/operations/on-the-road-to-sre-with-cloud-operations-sandbox"&gt;Take the first step toward SRE with Cloud Operations Sandbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/service-mesh/docs/onlineboutique-install-kpt"&gt;Deploying the Online Boutique sample application on Cloud Service Mesh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codelabs.developers.google.com/codelabs/anthos-service-mesh-workshop"&gt;Anthos Service Mesh Workshop: Lab Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/-t2BfT59zJA?t=982"&gt;KubeCon EU 2019 - Reinventing Networking: A Deep Dive into Istio's Multicluster Gateways - Steve Dake, Independent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Google Cloud Next'18 SF 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://youtu.be/vJ9OaAqfxo4?t=2416"&gt;Day 1 Keynote&lt;/a&gt; showing GKE On-Prem&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://youtu.be/JQPOPV_VH5w?t=815"&gt;Day 3 Keynote&lt;/a&gt; showing Stackdriver APM (Tracing, Code Search, Profiler, Google Cloud Build)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=wCJrdKdD6UM&amp;amp;feature=youtu.be&amp;amp;t=586"&gt;Introduction to Service Management with Istio&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/nIq2pkNcfEI?t=3071"&gt;Google Cloud Next'18 London – Keynote&lt;/a&gt; showing Stackdriver Incident Response Management&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-micro/demo"&gt;Microservices demo showcasing Go Micro&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>junegunn/fzf</title>
      <link>https://github.com/junegunn/fzf</link>
      <description>&lt;p&gt;🌸 A command-line fuzzy finder&lt;/p&gt;&lt;hr&gt;&lt;div align="center" markdown="1"&gt; 
 &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
 &lt;br /&gt; 
 &lt;a href="https://tuple.app/fzf"&gt; &lt;img alt="Tuple's sponsorship image" src="https://raw.githubusercontent.com/junegunn/i/master/tuple.png" width="400" /&gt; &lt;/a&gt; 
 &lt;h3&gt;&lt;a href="https://tuple.app/fzf"&gt;Tuple, the premier screen sharing app for developers&lt;/a&gt;&lt;/h3&gt; 
 &lt;p&gt;&lt;a href="https://tuple.app/fzf"&gt;Available for MacOS &amp;amp; Windows&lt;/a&gt;&lt;br /&gt;&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;&lt;sup&gt;Special thanks to:&lt;/sup&gt; &lt;br /&gt; &lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=fzf"&gt; &lt;img alt="Warp sponsorship" width="400" src="https://github.com/user-attachments/assets/ab8dd143-b0fd-4904-bdc5-dd7ecac94eae" /&gt; &lt;/a&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=fzf"&gt;Warp, the intelligent terminal for developers&lt;/a&gt;&lt;/h3&gt; 
 &lt;p&gt;&lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=fzf"&gt;Available for MacOS, Linux, &amp;amp; Windows&lt;/a&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/junegunn/i/master/fzf-color.png" alt="fzf - a command-line fuzzy finder" /&gt; 
 &lt;a href="https://github.com/junegunn/fzf/actions"&gt;&lt;img src="https://github.com/junegunn/fzf/actions/workflows/linux.yml/badge.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt; 
 &lt;a href="http://github.com/junegunn/fzf/releases"&gt;&lt;img src="https://img.shields.io/github/v/tag/junegunn/fzf" alt="Version" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/junegunn/fzf?tab=MIT-1-ov-file#readme"&gt;&lt;img src="https://img.shields.io/github/license/junegunn/fzf" alt="License" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/junegunn/fzf/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/junegunn/fzf" alt="Contributors" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/sponsors/junegunn"&gt;&lt;img src="https://img.shields.io/github/sponsors/junegunn" alt="Sponsors" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/junegunn/fzf/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/junegunn/fzf?style=flat" alt="Stars" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;fzf is a general-purpose command-line fuzzy finder.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/junegunn/i/master/fzf-preview.png" width="640" /&gt; 
&lt;p&gt;It's an interactive filter program for any kind of list; files, command history, processes, hostnames, bookmarks, git commits, etc. It implements a "fuzzy" matching algorithm, so you can quickly type in patterns with omitted characters and still get the results you want.&lt;/p&gt; 
&lt;h2&gt;Highlights&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;📦 &lt;strong&gt;Portable&lt;/strong&gt; — Distributed as a single binary for easy installation&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Blazingly fast&lt;/strong&gt; — Highly optimized code instantly processes millions of items&lt;/li&gt; 
 &lt;li&gt;🛠️ &lt;strong&gt;Extremely versatile&lt;/strong&gt; — Fully customizable via an event-action binding mechanism&lt;/li&gt; 
 &lt;li&gt;🔋 &lt;strong&gt;Batteries included&lt;/strong&gt; — Includes integration with bash, zsh, fish, Vim, and Neovim&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- vim-markdown-toc GFM --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#installation"&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#using-homebrew"&gt;Using Homebrew&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#linux-packages"&gt;Linux packages&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#windows-packages"&gt;Windows packages&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#using-git"&gt;Using git&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#binary-releases"&gt;Binary releases&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#setting-up-shell-integration"&gt;Setting up shell integration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#vimneovim-plugin"&gt;Vim/Neovim plugin&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#upgrading-fzf"&gt;Upgrading fzf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#building-fzf"&gt;Building fzf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#usage"&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#using-the-finder"&gt;Using the finder&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#display-modes"&gt;Display modes&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#--height-mode"&gt;&lt;code&gt;--height&lt;/code&gt; mode&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#--tmux-mode"&gt;&lt;code&gt;--tmux&lt;/code&gt; mode&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#search-syntax"&gt;Search syntax&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#environment-variables"&gt;Environment variables&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#customizing-the-look"&gt;Customizing the look&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#options"&gt;Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#demo"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#key-bindings-for-command-line"&gt;Key bindings for command-line&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#fuzzy-completion-for-bash-and-zsh"&gt;Fuzzy completion for bash and zsh&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#files-and-directories"&gt;Files and directories&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#process-ids"&gt;Process IDs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#host-names"&gt;Host names&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#environment-variables--aliases"&gt;Environment variables / Aliases&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#customizing-fzf-options-for-completion"&gt;Customizing fzf options for completion&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#customizing-completion-source-for-paths-and-directories"&gt;Customizing completion source for paths and directories&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#supported-commands"&gt;Supported commands&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#custom-fuzzy-completion"&gt;Custom fuzzy completion&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#vim-plugin"&gt;Vim plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#advanced-topics"&gt;Advanced topics&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#customizing-for-different-types-of-input"&gt;Customizing for different types of input&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#performance"&gt;Performance&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#executing-external-programs"&gt;Executing external programs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#turning-into-a-different-process"&gt;Turning into a different process&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#reloading-the-candidate-list"&gt;Reloading the candidate list&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#1-update-the-list-of-processes-by-pressing-ctrl-r"&gt;1. Update the list of processes by pressing CTRL-R&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#2-switch-between-sources-by-pressing-ctrl-d-or-ctrl-f"&gt;2. Switch between sources by pressing CTRL-D or CTRL-F&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#3-interactive-ripgrep-integration"&gt;3. Interactive ripgrep integration&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#preview-window"&gt;Preview window&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#previewing-an-image"&gt;Previewing an image&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#tips"&gt;Tips&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#respecting-gitignore"&gt;Respecting &lt;code&gt;.gitignore&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#fish-shell"&gt;Fish shell&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#fzf-theme-playground"&gt;fzf Theme Playground&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#related-projects"&gt;Related projects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#sponsors-heart"&gt;Sponsors &lt;span&gt;❤️&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- vim-markdown-toc --&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Using Homebrew&lt;/h3&gt; 
&lt;p&gt;You can use &lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt; (on macOS or Linux) to install fzf.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew install fzf
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] To set up shell integration (key bindings and fuzzy completion), see &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#setting-up-shell-integration"&gt;the instructions below&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;fzf is also available &lt;a href="https://github.com/macports/macports-ports/raw/master/sysutils/fzf/Portfile"&gt;via MacPorts&lt;/a&gt;: &lt;code&gt;sudo port install fzf&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Linux packages&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package Manager&lt;/th&gt; 
   &lt;th&gt;Linux Distribution&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;APK&lt;/td&gt; 
   &lt;td&gt;Alpine Linux&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;sudo apk add fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;APT&lt;/td&gt; 
   &lt;td&gt;Debian 9+/Ubuntu 19.10+&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;sudo apt install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Conda&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;conda install -c conda-forge fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DNF&lt;/td&gt; 
   &lt;td&gt;Fedora&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;sudo dnf install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Nix&lt;/td&gt; 
   &lt;td&gt;NixOS, etc.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;nix-env -iA nixpkgs.fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Pacman&lt;/td&gt; 
   &lt;td&gt;Arch Linux&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;sudo pacman -S fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pkg&lt;/td&gt; 
   &lt;td&gt;FreeBSD&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pkg install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pkgin&lt;/td&gt; 
   &lt;td&gt;NetBSD&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pkgin install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pkg_add&lt;/td&gt; 
   &lt;td&gt;OpenBSD&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pkg_add fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Portage&lt;/td&gt; 
   &lt;td&gt;Gentoo&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;emerge --ask app-shells/fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Spack&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;spack install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;XBPS&lt;/td&gt; 
   &lt;td&gt;Void Linux&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;sudo xbps-install -S fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Zypper&lt;/td&gt; 
   &lt;td&gt;openSUSE&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;sudo zypper install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] To set up shell integration (key bindings and fuzzy completion), see &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#setting-up-shell-integration"&gt;the instructions below&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/fzf/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/fzf.svg?columns=3" alt="Packaging status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Windows packages&lt;/h3&gt; 
&lt;p&gt;On Windows, fzf is available via &lt;a href="https://chocolatey.org/packages/fzf"&gt;Chocolatey&lt;/a&gt;, &lt;a href="https://github.com/ScoopInstaller/Main/raw/master/bucket/fzf.json"&gt;Scoop&lt;/a&gt;, &lt;a href="https://github.com/microsoft/winget-pkgs/tree/master/manifests/j/junegunn/fzf"&gt;Winget&lt;/a&gt;, and &lt;a href="https://packages.msys2.org/base/mingw-w64-fzf"&gt;MSYS2&lt;/a&gt;:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package manager&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Chocolatey&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;choco install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Scoop&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;scoop install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Winget&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;winget install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MSYS2 (pacman)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pacman -S $MINGW_PACKAGE_PREFIX-fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Using git&lt;/h3&gt; 
&lt;p&gt;Alternatively, you can "git clone" this repository to any directory and run &lt;a href="https://github.com/junegunn/fzf/raw/master/install"&gt;install&lt;/a&gt; script.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The install script will add lines to your shell configuration file to modify &lt;code&gt;$PATH&lt;/code&gt; and set up shell integration.&lt;/p&gt; 
&lt;h3&gt;Binary releases&lt;/h3&gt; 
&lt;p&gt;You can download the official fzf binaries from the releases page.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/junegunn/fzf/releases"&gt;https://github.com/junegunn/fzf/releases&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Setting up shell integration&lt;/h3&gt; 
&lt;p&gt;Add the following line to your shell configuration file.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;bash &lt;pre&gt;&lt;code class="language-sh"&gt;# Set up fzf key bindings and fuzzy completion
eval "$(fzf --bash)"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;zsh &lt;pre&gt;&lt;code class="language-sh"&gt;# Set up fzf key bindings and fuzzy completion
source &amp;lt;(fzf --zsh)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;fish &lt;pre&gt;&lt;code class="language-fish"&gt;# Set up fzf key bindings
fzf --fish | source
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] &lt;code&gt;--bash&lt;/code&gt;, &lt;code&gt;--zsh&lt;/code&gt;, and &lt;code&gt;--fish&lt;/code&gt; options are only available in fzf 0.48.0 or later. If you have an older version of fzf, or want finer control, you can source individual script files in the &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/shell"&gt;/shell&lt;/a&gt; directory. The location of the files may vary depending on the package manager you use. Please refer to the package documentation for more information. (e.g. &lt;code&gt;apt show fzf&lt;/code&gt;)&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] You can disable CTRL-T or ALT-C binding by setting &lt;code&gt;FZF_CTRL_T_COMMAND&lt;/code&gt; or &lt;code&gt;FZF_ALT_C_COMMAND&lt;/code&gt; to an empty string when sourcing the script. For example, to disable ALT-C binding:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;bash: &lt;code&gt;FZF_ALT_C_COMMAND= eval "$(fzf --bash)"&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;zsh: &lt;code&gt;FZF_ALT_C_COMMAND= source &amp;lt;(fzf --zsh)&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;fish: &lt;code&gt;fzf --fish | FZF_ALT_C_COMMAND= source&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Setting the variables after sourcing the script will have no effect.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Vim/Neovim plugin&lt;/h3&gt; 
&lt;p&gt;If you use &lt;a href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt;, add this to your Vim configuration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-vim"&gt;Plug 'junegunn/fzf', { 'do': { -&amp;gt; fzf#install() } }
Plug 'junegunn/fzf.vim'
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;junegunn/fzf&lt;/code&gt; provides the basic library functions 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;fzf#install()&lt;/code&gt; makes sure that you have the latest binary&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;junegunn/fzf.vim&lt;/code&gt; is &lt;a href="https://github.com/junegunn/fzf.vim"&gt;a separate project&lt;/a&gt; that provides a variety of useful commands&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To learn more about the Vim integration, see &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/README-VIM.md"&gt;README-VIM.md&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] If you use Neovim and prefer Lua-based plugins, check out &lt;a href="https://github.com/ibhagwan/fzf-lua"&gt;fzf-lua&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Upgrading fzf&lt;/h2&gt; 
&lt;p&gt;fzf is being actively developed, and you might want to upgrade it once in a while. Please follow the instruction below depending on the installation method used.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;git: &lt;code&gt;cd ~/.fzf &amp;amp;&amp;amp; git pull &amp;amp;&amp;amp; ./install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;brew: &lt;code&gt;brew update; brew upgrade fzf&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;macports: &lt;code&gt;sudo port upgrade fzf&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;chocolatey: &lt;code&gt;choco upgrade fzf&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;vim-plug: &lt;code&gt;:PlugUpdate fzf&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building fzf&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/BUILD.md"&gt;BUILD.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;fzf will launch interactive finder, read the list from STDIN, and write the selected item to STDOUT.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;find * -type f | fzf &amp;gt; selected
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Without STDIN pipe, fzf will traverse the file system under the current directory to get the list of files.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;vim $(fzf)
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You can override the default behavior&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Either by setting &lt;code&gt;$FZF_DEFAULT_COMMAND&lt;/code&gt; to a command that generates the desired list&lt;/li&gt; 
  &lt;li&gt;Or by setting &lt;code&gt;--walker&lt;/code&gt;, &lt;code&gt;--walker-root&lt;/code&gt;, and &lt;code&gt;--walker-skip&lt;/code&gt; options in &lt;code&gt;$FZF_DEFAULT_OPTS&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] A more robust solution would be to use &lt;code&gt;xargs&lt;/code&gt; but we've presented the above as it's easier to grasp&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;fzf --print0 | xargs -0 -o vim
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] fzf also has the ability to turn itself into a different process.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;fzf --bind 'enter:become(vim {})'
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;See &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#turning-into-a-different-process"&gt;Turning into a different process&lt;/a&gt; for more information.&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Using the finder&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;CTRL-K&lt;/code&gt; / &lt;code&gt;CTRL-J&lt;/code&gt; (or &lt;code&gt;CTRL-P&lt;/code&gt; / &lt;code&gt;CTRL-N&lt;/code&gt;) to move cursor up and down&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Enter&lt;/code&gt; key to select the item, &lt;code&gt;CTRL-C&lt;/code&gt; / &lt;code&gt;CTRL-G&lt;/code&gt; / &lt;code&gt;ESC&lt;/code&gt; to exit&lt;/li&gt; 
 &lt;li&gt;On multi-select mode (&lt;code&gt;-m&lt;/code&gt;), &lt;code&gt;TAB&lt;/code&gt; and &lt;code&gt;Shift-TAB&lt;/code&gt; to mark multiple items&lt;/li&gt; 
 &lt;li&gt;Emacs style key bindings&lt;/li&gt; 
 &lt;li&gt;Mouse: scroll, click, double-click; shift-click and shift-scroll on multi-select mode&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Display modes&lt;/h3&gt; 
&lt;p&gt;fzf by default runs in fullscreen mode, but there are other display modes.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--height&lt;/code&gt; mode&lt;/h4&gt; 
&lt;p&gt;With &lt;code&gt;--height HEIGHT[%]&lt;/code&gt;, fzf will start below the cursor with the given height.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;fzf --height 40%
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;reverse&lt;/code&gt; layout and &lt;code&gt;--border&lt;/code&gt; goes well with this option.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;fzf --height 40% --layout reverse --border
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By prepending &lt;code&gt;~&lt;/code&gt; to the height, you're setting the maximum height.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Will take as few lines as possible to display the list
seq 3 | fzf --height ~100%
seq 3000 | fzf --height ~100%
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Height value can be a negative number.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Screen height - 3
fzf --height -3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;--tmux&lt;/code&gt; mode&lt;/h4&gt; 
&lt;p&gt;With &lt;code&gt;--tmux&lt;/code&gt; option, fzf will start in a tmux popup.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# --tmux [center|top|bottom|left|right][,SIZE[%]][,SIZE[%][,border-native]]

fzf --tmux center         # Center, 50% width and height
fzf --tmux 80%            # Center, 80% width and height
fzf --tmux 100%,50%       # Center, 100% width and 50% height
fzf --tmux left,40%       # Left, 40% width
fzf --tmux left,40%,90%   # Left, 40% width, 90% height
fzf --tmux top,40%        # Top, 40% height
fzf --tmux bottom,80%,40% # Bottom, 80% width, 40% height
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;--tmux&lt;/code&gt; is silently ignored when you're not on tmux.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you're stuck with an old version of tmux that doesn't support popup, or if you want to open fzf in a regular tmux pane, check out &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/bin/fzf-tmux"&gt;fzf-tmux&lt;/a&gt; script.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] You can add these options to &lt;code&gt;$FZF_DEFAULT_OPTS&lt;/code&gt; so that they're applied by default. For example,&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;# Open in tmux popup if on tmux, otherwise use --height mode
export FZF_DEFAULT_OPTS='--height 40% --tmux bottom,40% --layout reverse --border top'
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Search syntax&lt;/h3&gt; 
&lt;p&gt;Unless otherwise specified, fzf starts in "extended-search mode" where you can type in multiple search terms delimited by spaces. e.g. &lt;code&gt;^music .mp3$ sbtrkt !fire&lt;/code&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Token&lt;/th&gt; 
   &lt;th&gt;Match type&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;sbtrkt&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;fuzzy-match&lt;/td&gt; 
   &lt;td&gt;Items that match &lt;code&gt;sbtrkt&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;'wild&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;exact-match (quoted)&lt;/td&gt; 
   &lt;td&gt;Items that include &lt;code&gt;wild&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;'wild'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;exact-boundary-match (quoted both ends)&lt;/td&gt; 
   &lt;td&gt;Items that include &lt;code&gt;wild&lt;/code&gt; at word boundaries&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;^music&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;prefix-exact-match&lt;/td&gt; 
   &lt;td&gt;Items that start with &lt;code&gt;music&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;.mp3$&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;suffix-exact-match&lt;/td&gt; 
   &lt;td&gt;Items that end with &lt;code&gt;.mp3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;!fire&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;inverse-exact-match&lt;/td&gt; 
   &lt;td&gt;Items that do not include &lt;code&gt;fire&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;!^music&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;inverse-prefix-exact-match&lt;/td&gt; 
   &lt;td&gt;Items that do not start with &lt;code&gt;music&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;!.mp3$&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;inverse-suffix-exact-match&lt;/td&gt; 
   &lt;td&gt;Items that do not end with &lt;code&gt;.mp3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you don't prefer fuzzy matching and do not wish to "quote" every word, start fzf with &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--exact&lt;/code&gt; option. Note that when &lt;code&gt;--exact&lt;/code&gt; is set, &lt;code&gt;'&lt;/code&gt;-prefix "unquotes" the term.&lt;/p&gt; 
&lt;p&gt;A single bar character term acts as an OR operator. For example, the following query matches entries that start with &lt;code&gt;core&lt;/code&gt; and end with either &lt;code&gt;go&lt;/code&gt;, &lt;code&gt;rb&lt;/code&gt;, or &lt;code&gt;py&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;^core go$ | rb$ | py$
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Environment variables&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;FZF_DEFAULT_COMMAND&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Default command to use when input is tty&lt;/li&gt; 
   &lt;li&gt;e.g. &lt;code&gt;export FZF_DEFAULT_COMMAND='fd --type f'&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;FZF_DEFAULT_OPTS&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Default options&lt;/li&gt; 
   &lt;li&gt;e.g. &lt;code&gt;export FZF_DEFAULT_OPTS="--layout=reverse --inline-info"&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;FZF_DEFAULT_OPTS_FILE&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If you prefer to manage default options in a file, set this variable to point to the location of the file&lt;/li&gt; 
   &lt;li&gt;e.g. &lt;code&gt;export FZF_DEFAULT_OPTS_FILE=~/.fzfrc&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] &lt;code&gt;FZF_DEFAULT_COMMAND&lt;/code&gt; is not used by shell integration due to the slight difference in requirements.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;CTRL-T&lt;/code&gt; runs &lt;code&gt;$FZF_CTRL_T_COMMAND&lt;/code&gt; to get a list of files and directories&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;ALT-C&lt;/code&gt; runs &lt;code&gt;$FZF_ALT_C_COMMAND&lt;/code&gt; to get a list of directories&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;vim ~/**&amp;lt;tab&amp;gt;&lt;/code&gt; runs &lt;code&gt;fzf_compgen_path()&lt;/code&gt; with the prefix (&lt;code&gt;~/&lt;/code&gt;) as the first argument&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;cd foo**&amp;lt;tab&amp;gt;&lt;/code&gt; runs &lt;code&gt;fzf_compgen_dir()&lt;/code&gt; with the prefix (&lt;code&gt;foo&lt;/code&gt;) as the first argument&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;The available options are described later in this document.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Customizing the look&lt;/h3&gt; 
&lt;p&gt;The user interface of fzf is fully customizable with a large number of configuration options. For a quick setup, you can start with one of the style presets — &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;full&lt;/code&gt;, or &lt;code&gt;minimal&lt;/code&gt; — using the &lt;code&gt;--style&lt;/code&gt; option.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;fzf --style full \
    --preview 'fzf-preview.sh {}' --bind 'focus:transform-header:file --brief {}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Preset&lt;/th&gt; 
   &lt;th align="left"&gt;Screenshot&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://raw.githubusercontent.com/junegunn/i/master/fzf-style-default.png" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;full&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://raw.githubusercontent.com/junegunn/i/master/fzf-style-full.png" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;minimal&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://raw.githubusercontent.com/junegunn/i/master/fzf-style-minimal.png" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Here's an example based on the &lt;code&gt;full&lt;/code&gt; preset:&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/junegunn/i/master/fzf-4-borders.png" /&gt; 
&lt;details&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;git ls-files | fzf --style full \
    --border --padding 1,2 \
    --border-label ' Demo ' --input-label ' Input ' --header-label ' File Type ' \
    --preview 'fzf-preview.sh {}' \
    --bind 'result:transform-list-label:
        if [[ -z $FZF_QUERY ]]; then
          echo " $FZF_MATCH_COUNT items "
        else
          echo " $FZF_MATCH_COUNT matches for [$FZF_QUERY] "
        fi
        ' \
    --bind 'focus:transform-preview-label:[[ -n {} ]] &amp;amp;&amp;amp; printf " Previewing [%s] " {}' \
    --bind 'focus:+transform-header:file --brief {} || echo "No file selected"' \
    --bind 'ctrl-r:change-list-label( Reloading the list )+reload(sleep 2; git ls-files)' \
    --color 'border:#aaaaaa,label:#cccccc' \
    --color 'preview-border:#9999cc,preview-label:#ccccff' \
    --color 'list-border:#669966,list-label:#99cc99' \
    --color 'input-border:#996666,input-label:#ffcccc' \
    --color 'header-border:#6699cc,header-label:#99ccff'
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Options&lt;/h3&gt; 
&lt;p&gt;See the man page (&lt;code&gt;fzf --man&lt;/code&gt; or &lt;code&gt;man fzf&lt;/code&gt;) for the full list of options.&lt;/p&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;If you learn by watching videos, check out this screencast by &lt;a href="https://github.com/samoshkin"&gt;@samoshkin&lt;/a&gt; to explore &lt;code&gt;fzf&lt;/code&gt; features.&lt;/p&gt; 
&lt;a title="fzf - command-line fuzzy finder" href="https://www.youtube.com/watch?v=qgG5Jhi_Els"&gt; &lt;img src="https://i.imgur.com/vtG8olE.png" width="640" /&gt; &lt;/a&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/junegunn/fzf/wiki/examples"&gt;Wiki page of examples&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Disclaimer: The examples on this page are maintained by the community and are not thoroughly tested&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/junegunn/fzf/raw/master/ADVANCED.md"&gt;Advanced fzf examples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Key bindings for command-line&lt;/h2&gt; 
&lt;p&gt;By &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#setting-up-shell-integration"&gt;setting up shell integration&lt;/a&gt;, you can use the following key bindings in bash, zsh, and fish.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;CTRL-T&lt;/code&gt; - Paste the selected files and directories onto the command-line 
  &lt;ul&gt; 
   &lt;li&gt;The list is generated using &lt;code&gt;--walker file,dir,follow,hidden&lt;/code&gt; option 
    &lt;ul&gt; 
     &lt;li&gt;You can override the behavior by setting &lt;code&gt;FZF_CTRL_T_COMMAND&lt;/code&gt; to a custom command that generates the desired list&lt;/li&gt; 
     &lt;li&gt;Or you can set &lt;code&gt;--walker*&lt;/code&gt; options in &lt;code&gt;FZF_CTRL_T_OPTS&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Set &lt;code&gt;FZF_CTRL_T_OPTS&lt;/code&gt; to pass additional options to fzf &lt;pre&gt;&lt;code class="language-sh"&gt;# Preview file content using bat (https://github.com/sharkdp/bat)
export FZF_CTRL_T_OPTS="
  --walker-skip .git,node_modules,target
  --preview 'bat -n --color=always {}'
  --bind 'ctrl-/:change-preview-window(down|hidden|)'"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;Can be disabled by setting &lt;code&gt;FZF_CTRL_T_COMMAND&lt;/code&gt; to an empty string when sourcing the script&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CTRL-R&lt;/code&gt; - Paste the selected command from history onto the command-line 
  &lt;ul&gt; 
   &lt;li&gt;If you want to see the commands in chronological order, press &lt;code&gt;CTRL-R&lt;/code&gt; again which toggles sorting by relevance&lt;/li&gt; 
   &lt;li&gt;Press &lt;code&gt;CTRL-/&lt;/code&gt; or &lt;code&gt;ALT-/&lt;/code&gt; to toggle line wrapping&lt;/li&gt; 
   &lt;li&gt;Set &lt;code&gt;FZF_CTRL_R_OPTS&lt;/code&gt; to pass additional options to fzf &lt;pre&gt;&lt;code class="language-sh"&gt;# CTRL-Y to copy the command into clipboard using pbcopy
export FZF_CTRL_R_OPTS="
  --bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort'
  --color header:italic
  --header 'Press CTRL-Y to copy command into clipboard'"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALT-C&lt;/code&gt; - cd into the selected directory 
  &lt;ul&gt; 
   &lt;li&gt;The list is generated using &lt;code&gt;--walker dir,follow,hidden&lt;/code&gt; option&lt;/li&gt; 
   &lt;li&gt;Set &lt;code&gt;FZF_ALT_C_COMMAND&lt;/code&gt; to override the default command 
    &lt;ul&gt; 
     &lt;li&gt;Or you can set &lt;code&gt;--walker-*&lt;/code&gt; options in &lt;code&gt;FZF_ALT_C_OPTS&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Set &lt;code&gt;FZF_ALT_C_OPTS&lt;/code&gt; to pass additional options to fzf &lt;pre&gt;&lt;code class="language-sh"&gt;# Print tree structure in the preview window
export FZF_ALT_C_OPTS="
  --walker-skip .git,node_modules,target
  --preview 'tree -C {}'"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;Can be disabled by setting &lt;code&gt;FZF_ALT_C_COMMAND&lt;/code&gt; to an empty string when sourcing the script&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Display modes for these bindings can be separately configured via &lt;code&gt;FZF_{CTRL_T,CTRL_R,ALT_C}_OPTS&lt;/code&gt; or globally via &lt;code&gt;FZF_DEFAULT_OPTS&lt;/code&gt;. (e.g. &lt;code&gt;FZF_CTRL_R_OPTS='--tmux bottom,60% --height 60% --border top'&lt;/code&gt;)&lt;/p&gt; 
&lt;p&gt;More tips can be found on &lt;a href="https://github.com/junegunn/fzf/wiki/Configuring-shell-key-bindings"&gt;the wiki page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Fuzzy completion for bash and zsh&lt;/h2&gt; 
&lt;h3&gt;Files and directories&lt;/h3&gt; 
&lt;p&gt;Fuzzy completion for files and directories can be triggered if the word before the cursor ends with the trigger sequence, which is by default &lt;code&gt;**&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;COMMAND [DIRECTORY/][FUZZY_PATTERN]**&amp;lt;TAB&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Files under the current directory
# - You can select multiple items with TAB key
vim **&amp;lt;TAB&amp;gt;

# Files under parent directory
vim ../**&amp;lt;TAB&amp;gt;

# Files under parent directory that match `fzf`
vim ../fzf**&amp;lt;TAB&amp;gt;

# Files under your home directory
vim ~/**&amp;lt;TAB&amp;gt;


# Directories under current directory (single-selection)
cd **&amp;lt;TAB&amp;gt;

# Directories under ~/github that match `fzf`
cd ~/github/fzf**&amp;lt;TAB&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Process IDs&lt;/h3&gt; 
&lt;p&gt;Fuzzy completion for PIDs is provided for kill command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Can select multiple processes with &amp;lt;TAB&amp;gt; or &amp;lt;Shift-TAB&amp;gt; keys
kill -9 **&amp;lt;TAB&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Host names&lt;/h3&gt; 
&lt;p&gt;For ssh and telnet commands, fuzzy completion for hostnames is provided. The names are extracted from /etc/hosts and ~/.ssh/config.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;ssh **&amp;lt;TAB&amp;gt;
telnet **&amp;lt;TAB&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Environment variables / Aliases&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;unset **&amp;lt;TAB&amp;gt;
export **&amp;lt;TAB&amp;gt;
unalias **&amp;lt;TAB&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Customizing fzf options for completion&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Use ~~ as the trigger sequence instead of the default **
export FZF_COMPLETION_TRIGGER='~~'

# Options to fzf command
export FZF_COMPLETION_OPTS='--border --info=inline'

# Options for path completion (e.g. vim **&amp;lt;TAB&amp;gt;)
export FZF_COMPLETION_PATH_OPTS='--walker file,dir,follow,hidden'

# Options for directory completion (e.g. cd **&amp;lt;TAB&amp;gt;)
export FZF_COMPLETION_DIR_OPTS='--walker dir,follow'

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments ($@) to fzf.
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --preview 'tree -C {} | head -200'   "$@" ;;
    export|unset) fzf --preview "eval 'echo \$'{}"         "$@" ;;
    ssh)          fzf --preview 'dig {}'                   "$@" ;;
    *)            fzf --preview 'bat -n --color=always {}' "$@" ;;
  esac
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Customizing completion source for paths and directories&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Use fd (https://github.com/sharkdp/fd) for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Supported commands&lt;/h3&gt; 
&lt;p&gt;On bash, fuzzy completion is enabled only for a predefined set of commands (&lt;code&gt;complete | grep _fzf&lt;/code&gt; to see the list). But you can enable it for other commands as well by using &lt;code&gt;_fzf_setup_completion&lt;/code&gt; helper function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# usage: _fzf_setup_completion path|dir|var|alias|host COMMANDS...
_fzf_setup_completion path ag git kubectl
_fzf_setup_completion dir tree
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Custom fuzzy completion&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;(Custom completion API is experimental and subject to change)&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;For a command named &lt;em&gt;"COMMAND"&lt;/em&gt;, define &lt;code&gt;_fzf_complete_COMMAND&lt;/code&gt; function using &lt;code&gt;_fzf_complete&lt;/code&gt; helper.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Custom fuzzy completion for "doge" command
#   e.g. doge **&amp;lt;TAB&amp;gt;
_fzf_complete_doge() {
  _fzf_complete --multi --reverse --prompt="doge&amp;gt; " -- "$@" &amp;lt; &amp;lt;(
    echo very
    echo wow
    echo such
    echo doge
  )
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;The arguments before &lt;code&gt;--&lt;/code&gt; are the options to fzf.&lt;/li&gt; 
 &lt;li&gt;After &lt;code&gt;--&lt;/code&gt;, simply pass the original completion arguments unchanged (&lt;code&gt;"$@"&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Then, write a set of commands that generates the completion candidates and feed its output to the function using process substitution (&lt;code&gt;&amp;lt; &amp;lt;(...)&lt;/code&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;zsh will automatically pick up the function using the naming convention but in bash you have to manually associate the function with the command using the &lt;code&gt;complete&lt;/code&gt; command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;[ -n "$BASH" ] &amp;amp;&amp;amp; complete -F _fzf_complete_doge -o default -o bashdefault doge
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you need to post-process the output from fzf, define &lt;code&gt;_fzf_complete_COMMAND_post&lt;/code&gt; as follows.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;_fzf_complete_foo() {
  _fzf_complete --multi --reverse --header-lines=3 -- "$@" &amp;lt; &amp;lt;(
    ls -al
  )
}

_fzf_complete_foo_post() {
  awk '{print $NF}'
}

[ -n "$BASH" ] &amp;amp;&amp;amp; complete -F _fzf_complete_foo -o default -o bashdefault foo
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Vim plugin&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/README-VIM.md"&gt;README-VIM.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Advanced topics&lt;/h2&gt; 
&lt;h3&gt;Customizing for different types of input&lt;/h3&gt; 
&lt;p&gt;Since fzf is a general-purpose text filter, its algorithm was designed to "generally" work well with any kind of input. However, admittedly, there is no true one-size-fits-all solution, and you may want to tweak the algorithm and some of the settings depending on the type of the input. To make this process easier, fzf provides a set of "scheme"s for some common input types.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Scheme&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;--scheme=default&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Generic scheme designed to work well with any kind of input&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;--scheme=path&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Suitable for file paths&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;--scheme=history&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Suitable for command history or any input where chronological ordering is important&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;(See &lt;code&gt;fzf --man&lt;/code&gt; for the details)&lt;/p&gt; 
&lt;h3&gt;Performance&lt;/h3&gt; 
&lt;p&gt;fzf is fast. Performance should not be a problem in most use cases. However, you might want to be aware of the options that can affect performance.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--ansi&lt;/code&gt; tells fzf to extract and parse ANSI color codes in the input, and it makes the initial scanning slower. So it's not recommended that you add it to your &lt;code&gt;$FZF_DEFAULT_OPTS&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--nth&lt;/code&gt; makes fzf slower because it has to tokenize each line.&lt;/li&gt; 
 &lt;li&gt;A plain string &lt;code&gt;--delimiter&lt;/code&gt; should be preferred over a regular expression delimiter.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--with-nth&lt;/code&gt; makes fzf slower as fzf has to tokenize and reassemble each line.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Executing external programs&lt;/h3&gt; 
&lt;p&gt;You can set up key bindings for starting external processes without leaving fzf (&lt;code&gt;execute&lt;/code&gt;, &lt;code&gt;execute-silent&lt;/code&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Press F1 to open the file with less without leaving fzf
# Press CTRL-Y to copy the line to clipboard and aborts fzf (requires pbcopy)
fzf --bind 'f1:execute(less -f {}),ctrl-y:execute-silent(echo {} | pbcopy)+abort'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;em&gt;KEY/EVENT BINDINGS&lt;/em&gt; section of the man page for details.&lt;/p&gt; 
&lt;h3&gt;Turning into a different process&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;become(...)&lt;/code&gt; is similar to &lt;code&gt;execute(...)&lt;/code&gt;/&lt;code&gt;execute-silent(...)&lt;/code&gt; described above, but instead of executing the command and coming back to fzf on complete, it turns fzf into a new process for the command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;fzf --bind 'enter:become(vim {})'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Compared to the seemingly equivalent command substitution &lt;code&gt;vim "$(fzf)"&lt;/code&gt;, this approach has several advantages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Vim will not open an empty file when you terminate fzf with &lt;kbd&gt;CTRL-C&lt;/kbd&gt;&lt;/li&gt; 
 &lt;li&gt;Vim will not open an empty file when you press &lt;kbd&gt;ENTER&lt;/kbd&gt; on an empty result&lt;/li&gt; 
 &lt;li&gt;Can handle multiple selections even when they have whitespaces &lt;pre&gt;&lt;code class="language-sh"&gt;fzf --multi --bind 'enter:become(vim {+})'
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To be fair, running &lt;code&gt;fzf --print0 | xargs -0 -o vim&lt;/code&gt; instead of &lt;code&gt;vim "$(fzf)"&lt;/code&gt; resolves all of the issues mentioned. Nonetheless, &lt;code&gt;become(...)&lt;/code&gt; still offers additional benefits in different scenarios.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can set up multiple bindings to handle the result in different ways without any wrapping script &lt;pre&gt;&lt;code class="language-sh"&gt;fzf --bind 'enter:become(vim {}),ctrl-e:become(emacs {})'
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Previously, you would have to use &lt;code&gt;--expect=ctrl-e&lt;/code&gt; and check the first line of the output of fzf&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;You can easily build the subsequent command using the field index expressions of fzf &lt;pre&gt;&lt;code class="language-sh"&gt;# Open the file in Vim and go to the line
git grep --line-number . |
    fzf --delimiter : --nth 3.. --bind 'enter:become(vim {1} +{2})'
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Reloading the candidate list&lt;/h3&gt; 
&lt;p&gt;By binding &lt;code&gt;reload&lt;/code&gt; action to a key or an event, you can make fzf dynamically reload the candidate list. See &lt;a href="https://github.com/junegunn/fzf/issues/1750"&gt;https://github.com/junegunn/fzf/issues/1750&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h4&gt;1. Update the list of processes by pressing CTRL-R&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;ps -ef |
  fzf --bind 'ctrl-r:reload(ps -ef)' \
      --header 'Press CTRL-R to reload' --header-lines=1 \
      --height=50% --layout=reverse
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;2. Switch between sources by pressing CTRL-D or CTRL-F&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;FZF_DEFAULT_COMMAND='find . -type f' \
  fzf --bind 'ctrl-d:reload(find . -type d),ctrl-f:reload(eval "$FZF_DEFAULT_COMMAND")' \
      --height=50% --layout=reverse
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;3. Interactive ripgrep integration&lt;/h4&gt; 
&lt;p&gt;The following example uses fzf as the selector interface for ripgrep. We bound &lt;code&gt;reload&lt;/code&gt; action to &lt;code&gt;change&lt;/code&gt; event, so every time you type on fzf, the ripgrep process will restart with the updated query string denoted by the placeholder expression &lt;code&gt;{q}&lt;/code&gt;. Also, note that we used &lt;code&gt;--disabled&lt;/code&gt; option so that fzf doesn't perform any secondary filtering.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;: | rg_prefix='rg --column --line-number --no-heading --color=always --smart-case' \
    fzf --bind 'start:reload:$rg_prefix ""' \
        --bind 'change:reload:$rg_prefix {q} || true' \
        --bind 'enter:become(vim {1} +{2})' \
        --ansi --disabled \
        --height=50% --layout=reverse
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If ripgrep doesn't find any matches, it will exit with a non-zero exit status, and fzf will warn you about it. To suppress the warning message, we added &lt;code&gt;|| true&lt;/code&gt; to the command, so that it always exits with 0.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://github.com/junegunn/fzf/raw/master/ADVANCED.md#using-fzf-as-interactive-ripgrep-launcher"&gt;"Using fzf as interactive Ripgrep launcher"&lt;/a&gt; for more sophisticated examples.&lt;/p&gt; 
&lt;h3&gt;Preview window&lt;/h3&gt; 
&lt;p&gt;When the &lt;code&gt;--preview&lt;/code&gt; option is set, fzf automatically starts an external process with the current line as the argument and shows the result in the split window. Your &lt;code&gt;$SHELL&lt;/code&gt; is used to execute the command with &lt;code&gt;$SHELL -c COMMAND&lt;/code&gt;. The window can be scrolled using the mouse or custom key bindings.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# {} is replaced with the single-quoted string of the focused line
fzf --preview 'cat {}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Preview window supports ANSI colors, so you can use any program that syntax-highlights the content of a file, such as &lt;a href="https://github.com/sharkdp/bat"&gt;Bat&lt;/a&gt; or &lt;a href="https://gitlab.com/saalen/highlight"&gt;Highlight&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fzf --preview 'bat --color=always {}' --preview-window '~3'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can customize the size, position, and border of the preview window using &lt;code&gt;--preview-window&lt;/code&gt; option, and the foreground and background color of it with &lt;code&gt;--color&lt;/code&gt; option. For example,&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fzf --height 40% --layout reverse --info inline --border \
    --preview 'file {}' --preview-window up,1,border-horizontal \
    --bind 'ctrl-/:change-preview-window(50%|hidden|)' \
    --color 'fg:#bbccdd,fg+:#ddeeff,bg:#334455,preview-bg:#223344,border:#778899'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the man page (&lt;code&gt;man fzf&lt;/code&gt;) for the full list of options.&lt;/p&gt; 
&lt;p&gt;More advanced examples can be found &lt;a href="https://github.com/junegunn/fzf/raw/master/ADVANCED.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Since fzf is a general-purpose text filter rather than a file finder, &lt;strong&gt;it is not a good idea to add &lt;code&gt;--preview&lt;/code&gt; option to your &lt;code&gt;$FZF_DEFAULT_OPTS&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;# *********************
# ** DO NOT DO THIS! **
# *********************
export FZF_DEFAULT_OPTS='--preview "bat --style=numbers --color=always --line-range :500 {}"'

# bat doesn't work with any input other than the list of files
ps -ef | fzf
seq 100 | fzf
history | fzf
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Previewing an image&lt;/h3&gt; 
&lt;p&gt;fzf can display images in the preview window using one of the following protocols:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://sw.kovidgoyal.net/kitty/graphics-protocol/"&gt;Kitty graphics protocol&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;iTerm2 inline images protocol&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Sixel"&gt;Sixel&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/bin/fzf-preview.sh"&gt;bin/fzf-preview.sh&lt;/a&gt; script for more information.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;fzf --preview 'fzf-preview.sh {}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tips&lt;/h2&gt; 
&lt;h3&gt;Respecting &lt;code&gt;.gitignore&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;You can use &lt;a href="https://github.com/sharkdp/fd"&gt;fd&lt;/a&gt;, &lt;a href="https://github.com/BurntSushi/ripgrep"&gt;ripgrep&lt;/a&gt;, or &lt;a href="https://github.com/ggreer/the_silver_searcher"&gt;the silver searcher&lt;/a&gt; to traverse the file system while respecting &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Feed the output of fd into fzf
fd --type f --strip-cwd-prefix | fzf

# Setting fd as the default source for fzf
export FZF_DEFAULT_COMMAND='fd --type f --strip-cwd-prefix'

# Now fzf (w/o pipe) will use the fd command to generate the list
fzf

# To apply the command to CTRL-T as well
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want the command to follow symbolic links and don't want it to exclude hidden files, use the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export FZF_DEFAULT_COMMAND='fd --type f --strip-cwd-prefix --hidden --follow --exclude .git'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fish shell&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;CTRL-T&lt;/code&gt; key binding of fish, unlike those of bash and zsh, will use the last token on the command-line as the root directory for the recursive search. For instance, hitting &lt;code&gt;CTRL-T&lt;/code&gt; at the end of the following command-line&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;ls /var/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;will list all files and directories under &lt;code&gt;/var/&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;When using a custom &lt;code&gt;FZF_CTRL_T_COMMAND&lt;/code&gt;, use the unexpanded &lt;code&gt;$dir&lt;/code&gt; variable to make use of this feature. &lt;code&gt;$dir&lt;/code&gt; defaults to &lt;code&gt;.&lt;/code&gt; when the last token is not a valid directory. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;set -g FZF_CTRL_T_COMMAND "command find -L \$dir -type f 2&amp;gt; /dev/null | sed '1d; s#^\./##'"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;fzf Theme Playground&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://vitormv.github.io/fzf-themes/"&gt;fzf Theme Playground&lt;/a&gt; created by &lt;a href="https://github.com/vitormv"&gt;Vitor Mello&lt;/a&gt; is a webpage where you can interactively create fzf themes.&lt;/p&gt; 
&lt;h2&gt;Related projects&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/junegunn/fzf/wiki/Related-projects"&gt;https://github.com/junegunn/fzf/wiki/Related-projects&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/LICENSE"&gt;License&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;The MIT License (MIT)&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2013-2025 Junegunn Choi&lt;/p&gt; 
&lt;h2&gt;Sponsors &lt;span&gt;❤️&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;I would like to thank all the sponsors of this project who make it possible for me to continue to improve fzf.&lt;/p&gt; 
&lt;p&gt;If you'd like to sponsor this project, please visit &lt;a href="https://github.com/sponsors/junegunn"&gt;https://github.com/sponsors/junegunn&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- sponsors --&gt;
&lt;a href="https://github.com/miyanokomiya"&gt;&lt;img src="https://github.com/miyanokomiya.png" width="60px" alt="User avatar: miyanokomiya" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/jonhoo"&gt;&lt;img src="https://github.com/jonhoo.png" width="60px" alt="User avatar: Jon Gjengset" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/AceofSpades5757"&gt;&lt;img src="https://github.com/AceofSpades5757.png" width="60px" alt="User avatar: Kyle L. Davis" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/Frederick888"&gt;&lt;img src="https://github.com/Frederick888.png" width="60px" alt="User avatar: Frederick Zhang" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/moritzdietz"&gt;&lt;img src="https://github.com/moritzdietz.png" width="60px" alt="User avatar: Moritz Dietz" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/pldubouilh"&gt;&lt;img src="https://github.com/pldubouilh.png" width="60px" alt="User avatar: Pierre Dubouilh" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/trantor"&gt;&lt;img src="https://github.com/trantor.png" width="60px" alt="User avatar: Fulvio Scapin" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/rcorre"&gt;&lt;img src="https://github.com/rcorre.png" width="60px" alt="User avatar: Ryan Roden-Corrent" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/blissdev"&gt;&lt;img src="https://github.com/blissdev.png" width="60px" alt="User avatar: Jordan Arentsen" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/aexvir"&gt;&lt;img src="https://github.com/aexvir.png" width="60px" alt="User avatar: Alex Viscreanu" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/moobar"&gt;&lt;img src="https://github.com/moobar.png" width="60px" alt="User avatar: " /&gt;&lt;/a&gt;
&lt;a href="https://github.com/benelan"&gt;&lt;img src="https://github.com/benelan.png" width="60px" alt="User avatar: Ben Elan" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/pawelduda"&gt;&lt;img src="https://github.com/pawelduda.png" width="60px" alt="User avatar: Paweł Duda" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/pyrho"&gt;&lt;img src="https://github.com/pyrho.png" width="60px" alt="User avatar: Damien Rajon" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/ArtBIT"&gt;&lt;img src="https://github.com/ArtBIT.png" width="60px" alt="User avatar: ArtBIT" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/da-moon"&gt;&lt;img src="https://github.com/da-moon.png" width="60px" alt="User avatar: " /&gt;&lt;/a&gt;
&lt;a href="https://github.com/hovissimo"&gt;&lt;img src="https://github.com/hovissimo.png" width="60px" alt="User avatar: Hovis" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/cristiand391"&gt;&lt;img src="https://github.com/cristiand391.png" width="60px" alt="User avatar: Cristian Dominguez" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/eliangcs"&gt;&lt;img src="https://github.com/eliangcs.png" width="60px" alt="User avatar: Chang-Hung Liang" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/asphaltbuffet"&gt;&lt;img src="https://github.com/asphaltbuffet.png" width="60px" alt="User avatar: Ben Lechlitner" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/looshch"&gt;&lt;img src="https://github.com/looshch.png" width="60px" alt="User avatar: george looshch" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/kg8m"&gt;&lt;img src="https://github.com/kg8m.png" width="60px" alt="User avatar: Takumi KAGIYAMA" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/polm"&gt;&lt;img src="https://github.com/polm.png" width="60px" alt="User avatar: Paul OLeary McCann" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/rbeeger"&gt;&lt;img src="https://github.com/rbeeger.png" width="60px" alt="User avatar: Robert Beeger" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/scalisi"&gt;&lt;img src="https://github.com/scalisi.png" width="60px" alt="User avatar: Josh Scalisi" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/alecbcs"&gt;&lt;img src="https://github.com/alecbcs.png" width="60px" alt="User avatar: Alec Scott" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/artursapek"&gt;&lt;img src="https://github.com/artursapek.png" width="60px" alt="User avatar: Artur Sapek" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/ramnes"&gt;&lt;img src="https://github.com/ramnes.png" width="60px" alt="User avatar: Guillaume Gelin" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/jyc"&gt;&lt;img src="https://github.com/jyc.png" width="60px" alt="User avatar: " /&gt;&lt;/a&gt;
&lt;a href="https://github.com/roblevy"&gt;&lt;img src="https://github.com/roblevy.png" width="60px" alt="User avatar: Rob Levy" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/glozow"&gt;&lt;img src="https://github.com/glozow.png" width="60px" alt="User avatar: Gloria Zhao" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/toupeira"&gt;&lt;img src="https://github.com/toupeira.png" width="60px" alt="User avatar: Markus Koller" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/rkpatel33"&gt;&lt;img src="https://github.com/rkpatel33.png" width="60px" alt="User avatar: " /&gt;&lt;/a&gt;
&lt;a href="https://github.com/jamesob"&gt;&lt;img src="https://github.com/jamesob.png" width="60px" alt="User avatar: jamesob" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/jlebray"&gt;&lt;img src="https://github.com/jlebray.png" width="60px" alt="User avatar: Johan Le Bray" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/panosl1"&gt;&lt;img src="https://github.com/panosl1.png" width="60px" alt="User avatar: Panos Lampropoulos" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/bespinian"&gt;&lt;img src="https://github.com/bespinian.png" width="60px" alt="User avatar: bespinian" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/scosu"&gt;&lt;img src="https://github.com/scosu.png" width="60px" alt="User avatar: Markus Schneider-Pargmann" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/smithbm2316"&gt;&lt;img src="https://github.com/smithbm2316.png" width="60px" alt="User avatar: Ben Smith" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/charlieegan3"&gt;&lt;img src="https://github.com/charlieegan3.png" width="60px" alt="User avatar: Charlie Egan" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/thobbs"&gt;&lt;img src="https://github.com/thobbs.png" width="60px" alt="User avatar: Tyler Hobbs" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/neilparikh"&gt;&lt;img src="https://github.com/neilparikh.png" width="60px" alt="User avatar: Neil Parikh" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/shkm"&gt;&lt;img src="https://github.com/shkm.png" width="60px" alt="User avatar: Jamie Schembri" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/BasedScience"&gt;&lt;img src="https://github.com/BasedScience.png" width="60px" alt="User avatar: dockien" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/RussellGilmore"&gt;&lt;img src="https://github.com/RussellGilmore.png" width="60px" alt="User avatar: Russell Gilmore" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/meribold"&gt;&lt;img src="https://github.com/meribold.png" width="60px" alt="User avatar: Lukas Waymann" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/terminaldweller"&gt;&lt;img src="https://github.com/terminaldweller.png" width="60px" alt="User avatar: Farzad Sadeghi" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/jaydee-coder"&gt;&lt;img src="https://github.com/jaydee-coder.png" width="60px" alt="User avatar: " /&gt;&lt;/a&gt;
&lt;a href="https://github.com/brpaz"&gt;&lt;img src="https://github.com/brpaz.png" width="60px" alt="User avatar: Bruno Paz" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/timobenn"&gt;&lt;img src="https://github.com/timobenn.png" width="60px" alt="User avatar: Timothy Bennett" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/danhorner"&gt;&lt;img src="https://github.com/danhorner.png" width="60px" alt="User avatar: Daniel Horner" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/syeo66"&gt;&lt;img src="https://github.com/syeo66.png" width="60px" alt="User avatar: Red Ochsenbein" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/nekhaevskiy"&gt;&lt;img src="https://github.com/nekhaevskiy.png" width="60px" alt="User avatar: Yury" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/lajarre"&gt;&lt;img src="https://github.com/lajarre.png" width="60px" alt="User avatar: " /&gt;&lt;/a&gt;
&lt;a href="https://github.com/NightsPaladin"&gt;&lt;img src="https://github.com/NightsPaladin.png" width="60px" alt="User avatar: Chris G." /&gt;&lt;/a&gt;
&lt;a href="https://github.com/lzell"&gt;&lt;img src="https://github.com/lzell.png" width="60px" alt="User avatar: Lou Zell" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/3ximus"&gt;&lt;img src="https://github.com/3ximus.png" width="60px" alt="User avatar: Fabio" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/justinlubin"&gt;&lt;img src="https://github.com/justinlubin.png" width="60px" alt="User avatar: Justin Lubin" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/mieubrisse"&gt;&lt;img src="https://github.com/mieubrisse.png" width="60px" alt="User avatar: Kevin Today" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/Coko7"&gt;&lt;img src="https://github.com/Coko7.png" width="60px" alt="User avatar: Coko" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/neogeographica"&gt;&lt;img src="https://github.com/neogeographica.png" width="60px" alt="User avatar: Joel B" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/fabridamicelli"&gt;&lt;img src="https://github.com/fabridamicelli.png" width="60px" alt="User avatar: Fabrizio Damicelli" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/harveyr"&gt;&lt;img src="https://github.com/harveyr.png" width="60px" alt="User avatar: Harvey Rogers" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/petercool"&gt;&lt;img src="https://github.com/petercool.png" width="60px" alt="User avatar: Sonami" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/jksolbakken"&gt;&lt;img src="https://github.com/jksolbakken.png" width="60px" alt="User avatar: Jan-Kåre Solbakken" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/Trash-Nothing"&gt;&lt;img src="https://github.com/Trash-Nothing.png" width="60px" alt="User avatar: Trash Nothing" /&gt;&lt;/a&gt;
&lt;a href="https://github.com/PairWithTuple"&gt;&lt;img src="https://github.com/PairWithTuple.png" width="60px" alt="User avatar: Tuple" /&gt;&lt;/a&gt;
&lt;!-- sponsors --&gt;</description>
    </item>
    
    <item>
      <title>syncthing/syncthing</title>
      <link>https://github.com/syncthing/syncthing</link>
      <description>&lt;p&gt;Open Source Continuous File Synchronization&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://syncthing.net/"&gt;&lt;img src="https://raw.githubusercontent.com/syncthing/syncthing/main/assets/logo-text-128.png" alt="Syncthing" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://www.mozilla.org/MPL/2.0/"&gt;&lt;img src="https://img.shields.io/badge/license-MPLv2-blue.svg?style=flat-square" alt="MPLv2 License" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/88"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/88/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/syncthing/syncthing"&gt;&lt;img src="https://goreportcard.com/badge/github.com/syncthing/syncthing" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Goals&lt;/h2&gt; 
&lt;p&gt;Syncthing is a &lt;strong&gt;continuous file synchronization program&lt;/strong&gt;. It synchronizes files between two or more computers. We strive to fulfill the goals below. The goals are listed in order of importance, the most important ones first. This is the summary version of the goal list - for more commentary, see the full &lt;a href="https://github.com/syncthing/syncthing/raw/main/GOALS.md"&gt;Goals document&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Syncthing should be:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Safe From Data Loss&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Protecting the user's data is paramount. We take every reasonable precaution to avoid corrupting the user's files.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Secure Against Attackers&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Again, protecting the user's data is paramount. Regardless of our other goals, we must never allow the user's data to be susceptible to eavesdropping or modification by unauthorized parties.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Easy to Use&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Syncthing should be approachable, understandable, and inclusive.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Automatic&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;User interaction should be required only when absolutely necessary.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Universally Available&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Syncthing should run on every common computer. We are mindful that the latest technology is not always available to every individual.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For Individuals&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Syncthing is primarily about empowering the individual user with safe, secure, and easy to use file synchronization.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Everything Else&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;There are many things we care about that don't make it on to the list. It is fine to optimize for these values, as long as they are not in conflict with the stated goals above.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Take a look at the &lt;a href="https://docs.syncthing.net/intro/getting-started.html"&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There are a few examples for keeping Syncthing running in the background on your system in &lt;a href="https://github.com/syncthing/syncthing/raw/main/etc"&gt;the etc directory&lt;/a&gt;. There are also several &lt;a href="https://docs.syncthing.net/users/contrib.html#gui-wrappers"&gt;GUI implementations&lt;/a&gt; for Windows, Mac, and Linux.&lt;/p&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;p&gt;To run Syncthing in Docker, see &lt;a href="https://github.com/syncthing/syncthing/raw/main/README-Docker.md"&gt;the Docker README&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting in Touch&lt;/h2&gt; 
&lt;p&gt;The first and best point of contact is the &lt;a href="https://forum.syncthing.net/"&gt;Forum&lt;/a&gt;. If you've found something that is clearly a bug, feel free to report it in the &lt;a href="https://github.com/syncthing/syncthing/issues"&gt;GitHub issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you believe that you’ve found a Syncthing-related security vulnerability, please report it by emailing &lt;a href="mailto:security@syncthing.net"&gt;security@syncthing.net&lt;/a&gt;. Do not report it in the Forum or issue tracker.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;Building Syncthing from source is easy. After extracting the source bundle from a release or checking out git, you just need to run &lt;code&gt;go run build.go&lt;/code&gt; and the binaries are created in &lt;code&gt;./bin&lt;/code&gt;. There's &lt;a href="https://docs.syncthing.net/dev/building.html"&gt;a guide&lt;/a&gt; with more details on the build process.&lt;/p&gt; 
&lt;h2&gt;Signed Releases&lt;/h2&gt; 
&lt;p&gt;Release binaries are GPG signed with the key available from &lt;a href="https://syncthing.net/security/"&gt;https://syncthing.net/security/&lt;/a&gt;. There is also a built-in automatic upgrade mechanism (disabled in some distribution channels) which uses a compiled in ECDSA signature. macOS and Windows binaries are also code-signed.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Please see the Syncthing &lt;a href="https://docs.syncthing.net/"&gt;documentation site&lt;/a&gt; &lt;a href="https://github.com/syncthing/docs"&gt;[source]&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All code is licensed under the &lt;a href="https://github.com/syncthing/syncthing/raw/main/LICENSE"&gt;MPLv2 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>google/wire</title>
      <link>https://github.com/google/wire</link>
      <description>&lt;p&gt;Compile-time Dependency Injection for Go&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Wire: Automated Initialization in Go&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/google/wire/actions"&gt;&lt;img src="https://github.com/google/wire/actions/workflows/tests.yml/badge.svg?branch=main" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/github.com/google/wire"&gt;&lt;img src="https://godoc.org/github.com/google/wire?status.svg?sanitize=true" alt="godoc" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] This project is no longer maintained.&lt;/p&gt; 
 &lt;p&gt;If you wish to update or extend wire, please do so in a fork.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Wire is a code generation tool that automates connecting components using &lt;a href="https://en.wikipedia.org/wiki/Dependency_injection"&gt;dependency injection&lt;/a&gt;. Dependencies between components are represented in Wire as function parameters, encouraging explicit initialization instead of global variables. Because Wire operates without runtime state or reflection, code written to be used with Wire is useful even for hand-written initialization.&lt;/p&gt; 
&lt;p&gt;For an overview, see the &lt;a href="https://blog.golang.org/wire"&gt;introductory blog post&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;Install Wire by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;go install github.com/google/wire/cmd/wire@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and ensuring that &lt;code&gt;$GOPATH/bin&lt;/code&gt; is added to your &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/wire/main/_tutorial/README.md"&gt;Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/wire/main/docs/guide.md"&gt;User Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/wire/main/docs/best-practices.md"&gt;Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/wire/main/docs/faq.md"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project status&lt;/h2&gt; 
&lt;p&gt;As of version v0.3.0, Wire is &lt;em&gt;beta&lt;/em&gt; and is considered feature complete. It works well for the tasks it was designed to perform, and we prefer to keep it as simple as possible.&lt;/p&gt; 
&lt;p&gt;We'll not be accepting new features at this time, but will gladly accept bug reports and fixes.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;For questions, please use &lt;a href="https://github.com/google/wire/discussions"&gt;GitHub Discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project is covered by the Go &lt;a href="https://raw.githubusercontent.com/google/wire/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>external-secrets/external-secrets</title>
      <link>https://github.com/external-secrets/external-secrets</link>
      <description>&lt;p&gt;External Secrets Operator reads information from a third-party service like AWS Secrets Manager and automatically injects the values as Kubernetes Secrets.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/external-secrets/external-secrets/main/assets/eso-logo-large.png" width="30%" align="center" alt="external-secrets" /&gt; &lt;/p&gt; 
&lt;h1&gt;External Secrets&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://github.com/external-secrets/external-secrets/actions/workflows/ci.yml/badge.svg?branch=main" alt="ci" /&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/5947"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/5327/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://securityscorecards.dev/viewer/?uri=github.com/external-secrets/external-secrets"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/external-secrets/external-secrets/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/external-secrets/external-secrets"&gt;&lt;img src="https://goreportcard.com/badge/github.com/external-secrets/external-secrets" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fexternal-secrets%2Fexternal-secrets?ref=badge_shield"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fexternal-secrets%2Fexternal-secrets.svg?type=shield" alt="FOSSA Status" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/external-secrets-operator/external-secrets"&gt;&lt;img alt="Artifact Hub" src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/external-secrets" /&gt;&lt;/a&gt; &lt;a href="https://operatorhub.io/operator/external-secrets-operator"&gt;&lt;img alt="operatorhub.io" src="https://img.shields.io/badge/operatorhub.io-external--secrets-brightgreen" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;External Secrets Operator&lt;/strong&gt; is a Kubernetes operator that integrates external secret management systems like &lt;a href="https://aws.amazon.com/secrets-manager/"&gt;AWS Secrets Manager&lt;/a&gt;, &lt;a href="https://www.vaultproject.io/"&gt;HashiCorp Vault&lt;/a&gt;, &lt;a href="https://cloud.google.com/secret-manager"&gt;Google Secrets Manager&lt;/a&gt;, &lt;a href="https://azure.microsoft.com/en-us/services/key-vault/"&gt;Azure Key Vault&lt;/a&gt;, &lt;a href="https://www.ibm.com/cloud/secrets-manager"&gt;IBM Cloud Secrets Manager&lt;/a&gt;, &lt;a href="https://akeyless.io"&gt;Akeyless&lt;/a&gt;, &lt;a href="https://www.conjur.org"&gt;CyberArk Conjur&lt;/a&gt;, &lt;a href="https://www.pulumi.com/product/esc/"&gt;Pulumi ESC&lt;/a&gt; and many more. The operator reads information from external APIs and automatically injects the values into a &lt;a href="https://kubernetes.io/docs/concepts/configuration/secret/"&gt;Kubernetes Secret&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Multiple people and organizations are joining efforts to create a single External Secrets solution based on existing projects. If you are curious about the origins of this project, check out &lt;a href="https://github.com/external-secrets/kubernetes-external-secrets/issues/47"&gt;this issue&lt;/a&gt; and &lt;a href="https://github.com/external-secrets/kubernetes-external-secrets/pull/477"&gt;this PR&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;External Secrets Operator guides and reference documentation is available at &lt;a href="https://external-secrets.io"&gt;external-secrets.io&lt;/a&gt;. Also see our &lt;a href="https://external-secrets.io/main/introduction/stability-support/"&gt;stability and support&lt;/a&gt; policy.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome and encourage contributions to this project! Please read the &lt;a href="https://www.external-secrets.io/main/contributing/devguide/"&gt;Developer&lt;/a&gt; and &lt;a href="https://www.external-secrets.io/main/contributing/process/"&gt;Contribution process&lt;/a&gt; guides. Also make sure to check the &lt;a href="https://www.external-secrets.io/main/contributing/coc/"&gt;Code of Conduct&lt;/a&gt; and adhere to its guidelines.&lt;/p&gt; 
&lt;p&gt;Also, please take a look our &lt;a href="https://raw.githubusercontent.com/external-secrets/external-secrets/main/CONTRIBUTOR_LADDER.md"&gt;Contribution Ladder&lt;/a&gt; for a &lt;em&gt;very&lt;/em&gt; detailed explanation of what roles and tracks are available for people to try and help this project.&lt;/p&gt; 
&lt;h3&gt;Sponsoring&lt;/h3&gt; 
&lt;p&gt;Please consider sponsoring this project, there are many ways you can help us with: engineering time, providing infrastructure, donating money, etc. We are open to cooperations, feel free to approach as and we discuss how this could look like. We can keep your contribution anonymized if that's required (depending on the type of contribution), and anonymous donations are possible inside &lt;a href="https://opencollective.com/external-secrets-org"&gt;Opencollective&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Bi-weekly Development Meeting&lt;/h2&gt; 
&lt;p&gt;We host our development meeting every odd wednesday on &lt;a href="https://meet.jit.si/eso-community-meeting"&gt;Jitsi&lt;/a&gt;. We run the meeting with alternating times &lt;a href="https://dateful.com/time-zone-converter?t=20:00&amp;amp;tz=Europe/Berlin"&gt;8:00 PM Berlin Time&lt;/a&gt; and &lt;a href="https://dateful.com/time-zone-converter?t=13:00&amp;amp;tz=Europe/Berlin"&gt;1:00 PM Berlin Time&lt;/a&gt;, we'll announce the time in our &lt;a href="https://kubernetes.slack.com/messages/external-secrets"&gt;Kubernetes Slack channel&lt;/a&gt;. Meeting notes are recorded on &lt;a href="https://hackmd.io/GSGEpTVdRZCP6LDxV3FHJA"&gt;hackmd&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Anyone is welcome to join. Feel free to ask questions, request feedback, raise awareness for an issue, or just say hi. ;)&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;Please report vulnerabilities by email to &lt;a href="mailto:cncf-ExternalSecretsOp-maintainers@lists.cncf.io"&gt;cncf-ExternalSecretsOp-maintainers@lists.cncf.io&lt;/a&gt;. Also see our &lt;a href="https://raw.githubusercontent.com/external-secrets/external-secrets/main/SECURITY.md"&gt;SECURITY.md file&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;software bill of materials&lt;/h2&gt; 
&lt;p&gt;We attach SBOM and provenance file to our GitHub release. Also, they are attached to container images.&lt;/p&gt; 
&lt;h2&gt;Adopters&lt;/h2&gt; 
&lt;p&gt;Please create a PR and add your company or project to our &lt;a href="https://raw.githubusercontent.com/external-secrets/external-secrets/main/ADOPTERS.md"&gt;ADOPTERS.md file&lt;/a&gt; if you are using our project!&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;You can find the roadmap in our documentation: &lt;a href="https://external-secrets.io/main/contributing/roadmap/"&gt;https://external-secrets.io/main/contributing/roadmap/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Kicked off by&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/external-secrets/external-secrets/main/assets/Godaddylogo_2020.png" alt="" /&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsored by&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/external-secrets/external-secrets/main/assets/ESI_Logo.svg?sanitize=true" alt="External Secrets Inc." /&gt; &lt;img src="https://raw.githubusercontent.com/external-secrets/external-secrets/main/assets/CS_logo_1.png" alt="Container Solutions" /&gt; &lt;img src="https://raw.githubusercontent.com/external-secrets/external-secrets/main/assets/form3_logo.png" alt="Form 3" /&gt; &lt;img src="https://raw.githubusercontent.com/external-secrets/external-secrets/main/assets/pento_logo.png" alt="Pento " /&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fexternal-secrets%2Fexternal-secrets?ref=badge_large"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fexternal-secrets%2Fexternal-secrets.svg?type=large" alt="FOSSA Status" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yorukot/superfile</title>
      <link>https://github.com/yorukot/superfile</link>
      <description>&lt;p&gt;Pretty fancy and modern terminal file manager&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h4&gt; &lt;a href="https://ko-fi.com/yorukot"&gt;superfile is supported by the community.&lt;/a&gt; &lt;/h4&gt; 
 &lt;div align="center" markdown="1"&gt; 
  &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
  &lt;br /&gt; 
  &lt;br /&gt; 
  &lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=superfile"&gt; &lt;img alt="Warp sponsorship" width="300" src="https://raw.githubusercontent.com/yorukot/superfile/main/asset/warp.png" /&gt; &lt;/a&gt; 
  &lt;h3&gt;&lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=superfile"&gt;Warp, the AI terminal for developers&lt;/a&gt;&lt;/h3&gt; 
  &lt;p&gt;&lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=superfile"&gt;Available for MacOS, Linux, &amp;amp; Windows&lt;/a&gt;&lt;br /&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;hr /&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="/asset/superfilelogowhite.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="/asset/superfilelogoblack.png" /&gt; 
  &lt;img alt="superfile LOGO" src="https://raw.githubusercontent.com/yorukot/superfile/main/asset/superfilelogowhite.png" /&gt; 
 &lt;/picture&gt; 
 &lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/yorukot/superfile"&gt;&lt;img src="https://goreportcard.com/badge/github.com/yorukot/superfile" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/yorukot/superfile/refs/heads/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="License MIT" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/YYtJ23Du7B"&gt;&lt;img src="https://img.shields.io/discord/1338415256875307110?label=discord&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord Link" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yorukot/superfile/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/yorukot/superfile.svg?style=flat-square" alt="Release" /&gt;&lt;/a&gt; &lt;a href="https://www.coderabbit.ai/"&gt;&lt;img src="https://img.shields.io/coderabbit/prs/github/yorukot/superfile?utm_source=oss&amp;amp;utm_medium=github&amp;amp;utm_campaign=yorukot%2Fsuperfile&amp;amp;labelColor=171717&amp;amp;color=FF570A&amp;amp;&amp;amp;label=CodeRabbit+Reviews" alt="CodeRabbit Pull Request Reviews" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/yorukot/superfile/main/asset/demo.png" alt="" /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Perform common operations&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/yorukot/superfile/main/asset/demo.gif" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Content&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yorukot/superfile/main/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yorukot/superfile/main/#build"&gt;Build&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yorukot/superfile/main/#supported-systems"&gt;Supported Systems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yorukot/superfile/main/#tutorial"&gt;Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yorukot/superfile/main/#plugins"&gt;Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yorukot/superfile/main/#themes"&gt;Themes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yorukot/superfile/main/#hotkeys"&gt;Hotkeys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yorukot/superfile/main/#notes"&gt;Notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yorukot/superfile/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yorukot/superfile/main/#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yorukot/superfile/main/#thanks"&gt;Thanks&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yorukot/superfile/main/#Support"&gt;Support&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yorukot/superfile/main/#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yorukot/superfile/main/#star-history"&gt;Star History&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;MacOS and Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bash -c "$(curl -sLo- https://superfile.netlify.app/install.sh)"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to inspect the script, see : &lt;a href="https://raw.githubusercontent.com/yorukot/superfile/main/website/public/install.sh"&gt;install.sh&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;h4&gt;Powershell&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;powershell -ExecutionPolicy Bypass -Command "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://superfile.netlify.app/install.ps1'))"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to inspect the script, see : &lt;a href="https://raw.githubusercontent.com/yorukot/superfile/main/website/public/install.ps1"&gt;install.ps1&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://winget.run/"&gt;Winget&lt;/a&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;winget install --id yorukot.superfile
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a href="https://scoop.sh/"&gt;Scoop&lt;/a&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;scoop install superfile
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;More installation methods&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://superfile.netlify.app/getting-started/installation/"&gt;Click me to check on how to install&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Build&lt;/h2&gt; 
&lt;p&gt;You can build the source code yourself by using these steps:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://go.dev/doc/install"&gt;golang&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Build Steps&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Clone this repository using the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/yorukot/superfile.git --depth=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Enter the downloaded directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd superfile
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;For MacOS/Linux&lt;/h3&gt; 
&lt;p&gt;Run the &lt;code&gt;build.sh&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./build.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add the binary file to your $PATH, e.g., in &lt;code&gt;/usr/local/bin&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo mv ./bin/spf /usr/local/bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;For Windows&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go build -o bin/spf.exe
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Edit System Environment Variables and add superfile repo's &lt;code&gt;bin&lt;/code&gt; directory to your PATH&lt;/p&gt; 
&lt;h2&gt;Start superfile&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;spf
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Supported Systems&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] Linux&lt;/li&gt; 
 &lt;li&gt;[x] MacOS&lt;/li&gt; 
 &lt;li&gt;[x] Windows (Not fully supported yet)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tutorial&lt;/h2&gt; 
&lt;p&gt;After you install superfile, you can go &lt;a href="https://superfile.netlify.app/getting-started/tutorial/"&gt;here&lt;/a&gt; to briefly understand how to use superfile!&lt;/p&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://superfile.netlify.app/list/plugin-list/"&gt;Click me to the plugins wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Themes&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://superfile.netlify.app/configure/custom-theme/"&gt;Click me to the theme wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Hotkeys&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] If you are vim/nvim user please change your default hotkeys config to vim version!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://superfile.netlify.app/configure/custom-hotkeys/"&gt;&lt;strong&gt;Click me to see the hotkey wiki&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Notes&lt;/h2&gt; 
&lt;p&gt;We have an auto update functionality, that fetches superfile's latest released version from github (if last timestamp of last version check was less than 24 hours) and prints a prompt to user, if there is a newer version available.&lt;/p&gt; 
&lt;p&gt;You can turn this off, by setting &lt;code&gt;auto_check_update&lt;/code&gt; to false in superfile config. &lt;a href="https://superfile.netlify.app/configure/superfile-config/"&gt;&lt;strong&gt;Click me to see the config wiki&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://superfile.netlify.app/troubleshooting/"&gt;&lt;strong&gt;Click me to see common problem fix&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Uninstalling&lt;/h2&gt; 
&lt;h3&gt;MacOS and Linux&lt;/h3&gt; 
&lt;p&gt;On MacOS and Linux, you can uninstall superfile by simply removing the binary. If you installed superfile with sudo, runw&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo rm /usr/local/bin/spf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you installed superfile without sudo, run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rm ~/.local/bin/spf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you don't rember, just try removing both.&lt;/p&gt; 
&lt;h3&gt;Window&lt;/h3&gt; 
&lt;p&gt;To uninstall superfile on Windows, use this powershell script.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;powershell -ExecutionPolicy Bypass -Command "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://superfile.netlify.app/uninstall.ps1'))"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you want to contribute please follow the &lt;a href="https://raw.githubusercontent.com/yorukot/superfile/main/CONTRIBUTING.md"&gt;contribution guide&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://superfile.netlify.app/changelog"&gt;&lt;strong&gt;Click me to see changelog&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;h3&gt;Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;a Star on my GitHub repository would be nice 🌟&lt;/li&gt; 
 &lt;li&gt;You can buy a coffee for me 💖&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://ko-fi.com/G2G1JEGGC"&gt;&lt;img src="https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true" alt="ko-fi" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Thanks to all the contributors for making this project even greater!&lt;/strong&gt;&lt;/p&gt; 
&lt;a href="https://github.com/yorukot/superfile/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=yorukot/superfile" /&gt; &lt;/a&gt; 
&lt;h3&gt;Star History&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;THANKS FOR All OF YOUR STARS!&lt;/strong&gt; Your stars are my motivation to keep updating!&lt;/p&gt; 
&lt;a href="https://star-history.com/#yorukot/superfile&amp;amp;Timeline"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=yorukot/superfile&amp;amp;type=Timeline&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=yorukot/superfile&amp;amp;type=Timeline" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=yorukot/superfile&amp;amp;type=Timeline" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;div align="center"&gt; 
 &lt;h2&gt;༼ つ ◕_◕ ༽つ Please share.&lt;/h2&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>rivo/tview</title>
      <link>https://github.com/rivo/tview</link>
      <description>&lt;p&gt;Terminal UI library with rich, interactive widgets — written in Golang&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rich Interactive Widgets for Terminal UIs&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/rivo/tview"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/rivo/tview" alt="PkgGoDev" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/rivo/tview"&gt;&lt;img src="https://img.shields.io/badge/go%20report-A%2B-brightgreen.svg?sanitize=true" alt="Go Report" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This Go package provides commonly used components for terminal based user interfaces.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/rivo/tview/master/tview.gif" alt="Screenshot" /&gt;&lt;/p&gt; 
&lt;p&gt;Among these components are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Input forms&lt;/strong&gt; (including &lt;strong&gt;text input&lt;/strong&gt;, &lt;strong&gt;selections&lt;/strong&gt;, &lt;strong&gt;checkboxes&lt;/strong&gt;, and &lt;strong&gt;buttons&lt;/strong&gt;)&lt;/li&gt; 
 &lt;li&gt;Navigable multi-color &lt;strong&gt;text views&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Editable multi-line &lt;strong&gt;text areas&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Sophisticated navigable &lt;strong&gt;table views&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Flexible &lt;strong&gt;tree views&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Selectable &lt;strong&gt;lists&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Images&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grid&lt;/strong&gt;, &lt;strong&gt;Flexbox&lt;/strong&gt; and &lt;strong&gt;page layouts&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Modal &lt;strong&gt;message windows&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;An &lt;strong&gt;application&lt;/strong&gt; wrapper&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;They come with lots of customization options and can be easily extended to fit your needs.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To add this package to your project:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/rivo/tview@master
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Hello World&lt;/h2&gt; 
&lt;p&gt;This basic example creates a box titled "Hello, World!" and displays it in your terminal:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"github.com/rivo/tview"
)

func main() {
	box := tview.NewBox().SetBorder(true).SetTitle("Hello, world!")
	if err := tview.NewApplication().SetRoot(box, true).Run(); err != nil {
		panic(err)
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check out the &lt;a href="https://github.com/rivo/tview/wiki"&gt;GitHub Wiki&lt;/a&gt; for more examples along with screenshots. Or try the examples in the "demos" subdirectory.&lt;/p&gt; 
&lt;p&gt;For a presentation highlighting this package, compile and run the program found in the "demos/presentation" subdirectory.&lt;/p&gt; 
&lt;h2&gt;Projects using &lt;code&gt;tview&lt;/code&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/derailed/k9s"&gt;K9s - Kubernetes CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termoose/irccloud"&gt;IRCCloud Terminal Client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/epiclabs-io/winman"&gt;Window manager for &lt;code&gt;tview&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Endi1/drawer"&gt;CLI bookmark manager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/IdlePhysicist/cave-logger"&gt;A caving database interface written in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bannzai/itree"&gt;Interactive file browse and exec any command.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Macmod/godap"&gt;A complete TUI for LDAP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/broadcastle/crm"&gt;A simple CRM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cyberdummy/todoista"&gt;Terminal UI for todist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dcaiafa/kpick"&gt;Graphical kubectl wrapper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/decred/dcrdex"&gt;Decred Decentralized Exchange &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/destinmoulton/pixi"&gt;A CLI file browser for Raspberry PI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/divramod/dp"&gt;A tool to manage projects.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/erleene/go-bmi"&gt;A simple app for BMI monitoring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/godsic/vibe"&gt;Stream TIDAL from command line&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/guillaumemichel/passtor/"&gt;Secure solution for fully decentralized password management&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muesli/service-tools/"&gt;A growing collection of convenient little tools to work with systemd services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nitishm/redis-terminal"&gt;A terminal based browser for Redis written in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pablogadhi/XMPPClient"&gt;First project for the Computer Networks course.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shilangyu/typer-go"&gt;Test your typing speed in the terminal!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skanehira/docui"&gt;TUI Client for Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stephane-martin/vssh"&gt;SSH client using certificates signed by HashiCorp Vault&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thebsdbox/vctui"&gt;VMware vCenter Text UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tryffel/bookmarker"&gt;Bookmarks on terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vaelen/udp-tester"&gt;A UDP testing utility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/witchard/toukan"&gt;A simple Kanban board for your terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wtfutil/wtf"&gt;The personal information dashboard for your terminal. &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xxjwxc/gormt"&gt;MySQL database to Golang struct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/diamondburned/6cord"&gt;Discord, TUI and SIXEL.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.github.com/dhulihan/grump"&gt;A CLI Audio Player&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/profclems/glab"&gt;GLab, a GitLab CLI tool&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/swartzrock/ecsview"&gt;Browse your AWS ECS Clusters in the Terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ajaxray/geek-life"&gt;The CLI Task Manager for Geeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dundee/gdu"&gt;Fast disk usage analyzer written in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qnkhuat/gochess"&gt;Multiplayer Chess On Terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/issadarkthing/gomu"&gt;Scriptable TUI music player&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/darylhjd/mangadesk"&gt;MangaDesk : TUI Client for downloading manga to your computer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ledongthuc/gohowmuch"&gt;Go How Much? a Crypto coin price tracking from terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KenanBek/dbui"&gt;dbui: Universal CLI for Database Connections&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bnaydenov/ssmbrowse"&gt;ssmbrowse: Simple and elegant cli AWS SSM parameter browser&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/infl00p/gobit"&gt;gobit: binance intelligence terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sachaos/viddy"&gt;viddy: A modern watch command&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hirose31/s3surfer"&gt;s3surfer: CLI tool for browsing S3 bucket and download objects interactively&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/audstanley/libgen-tui"&gt;libgen-tui: A terminal UI for downloading books from Library Genesis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/togettoyou/kubectl-lazy"&gt;kubectl-lazy: kubectl plugin to easy to view pod&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/containers/podman-tui"&gt;podman-tui: podman user interface&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/navidys/tvxwidgets"&gt;tvxwidgets: tview extra widgets&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gusti-andika/card-domino.git"&gt;Domino card game on terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/glendsoza/goaround"&gt;goaround: Query stackoverflow API and get results on terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abdfnx/resto"&gt;resto: a CLI app can send pretty HTTP &amp;amp; API requests with TUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zmnpl/twad"&gt;twad: a WAD launcher for the terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moson-mo/pacseek"&gt;pacseek: A TUI for searching and installing Arch Linux packages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/letientai299/7guis/tree/master/tui"&gt;7GUIs demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ashis0013/tuihub"&gt;tuihub: A utility hub/dashboard for personal use&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aurc/loggo"&gt;l'oggo: A terminal app for structured log streaming (GCP stack driver, k8s, local streaming)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goyalmunish/reminder"&gt;reminder: Terminal based interactive app for organising tasks with minimal efforts.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/peltho/tufw"&gt;tufw: A terminal UI for ufw.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cli/cli"&gt;gh: the GitHub CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/glendsoza/piptui/"&gt;piptui: Terminal UI to manage pip packages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ntsd/cross-clipboard"&gt;cross-clipboard: A cross-platform clipboard sharing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mebitek/tui-deck"&gt;tui-deck: nextcloud deck frontend&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vladimirvivien/ktop"&gt;ktop: A top-like tool for your Kubernetes clusters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/merlinfuchs/blimp"&gt;blimp: UI for weather, network latency, application status, &amp;amp; more&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/migcaraballo/curly"&gt;Curly - A simple TUI leveraging curl to test endpoints&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pehlicd/amtui"&gt;amtui: Alertmanager TUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/costa86/cli-manager"&gt;A TUI CLI manager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adrianbrad/privatebtc"&gt;PrivateBTC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paololazzari/play"&gt;play: A TUI playground to experiment with your favorite programs, such as grep, sed, awk, jq and yq&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NathanFirmo/gorest"&gt;gorest: Enjoy making HTTP requests in your terminal, just like you do in Insomnia.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vergonha/garden-tui"&gt;Terminal-based application to listen Radio Stations around the world!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SHAPPY0/ntui"&gt;ntui: A TUI to manage Hashicorp Nomad clusters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jorgerojas26/lazysql"&gt;lazysql: A cross-platform TUI database management tool written in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mylxsw/redis-tui"&gt;redis-tui: A Redis Text-based UI client in CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kivattt/fen"&gt;fen: File manager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LinPr/sqltui"&gt;sqltui: A terminal UI to operate sql and nosql databases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/murat-cileli/dbee"&gt;DBee: Simple database browser&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dos-2/oddshub"&gt;oddshub: A TUI for sports betting odds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/erdemkosk/envolve"&gt;envolve: Terminal based interactive app for manage enviroment variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/markusressel/zfs-file-history"&gt;zfs-file-history: Terminal UI for inspecting and restoring file history on ZFS snapshots&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/markusressel/fan2go-tui"&gt;fan2go-tui: Terminal UI for fan2go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nats-dash-gui.returnzero.win/"&gt;NatsDash: Terminal UI for NATS Jetstream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linuxexam/tuissh"&gt;tuissh: A terminal UI to manage ssh connections&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/felangga/chiko"&gt;chiko: Ultimate Beauty TUI gRPC Client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/phsym/kmip-explorer"&gt;kmip-explorer: Browse &amp;amp; manage your KMIP objects from the terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antvirf/stui"&gt;stui: Slurm TUI for managing HPC clusters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dimonomid/nerdlog"&gt;nerdlog: Fast, remote-first, multi-host log viewer with timeline histogram&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Refer to &lt;a href="https://pkg.go.dev/github.com/rivo/tview"&gt;https://pkg.go.dev/github.com/rivo/tview&lt;/a&gt; for the package's documentation. Also check out the &lt;a href="https://github.com/rivo/tview/wiki"&gt;Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Dependencies&lt;/h2&gt; 
&lt;p&gt;This package is based on &lt;a href="https://github.com/gdamore/tcell"&gt;github.com/gdamore/tcell&lt;/a&gt; (and its dependencies) as well as on &lt;a href="https://github.com/rivo/uniseg"&gt;github.com/rivo/uniseg&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsor this Project&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/rivo?metadata_source=tview_readme"&gt;Become a Sponsor on GitHub&lt;/a&gt; to further this project!&lt;/p&gt; 
&lt;h2&gt;Backwards-Compatibility&lt;/h2&gt; 
&lt;p&gt;I try really hard to keep this project backwards compatible. Your software should not break when you upgrade &lt;code&gt;tview&lt;/code&gt;. But this also means that some of its shortcomings that were present in the initial versions will remain. Having said that, backwards compatibility may still break when:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;a new version of an imported package (most likely &lt;a href="https://github.com/gdamore/tcell"&gt;&lt;code&gt;tcell&lt;/code&gt;&lt;/a&gt;) changes in such a way that forces me to make changes in &lt;code&gt;tview&lt;/code&gt; as well,&lt;/li&gt; 
 &lt;li&gt;I fix something that I consider a bug, rather than a feature, something that does not work as originally intended,&lt;/li&gt; 
 &lt;li&gt;I make changes to "internal" interfaces such as &lt;a href="https://pkg.go.dev/github.com/rivo/tview#Primitive"&gt;&lt;code&gt;Primitive&lt;/code&gt;&lt;/a&gt;. You shouldn't need these interfaces unless you're writing your own primitives for &lt;code&gt;tview&lt;/code&gt;. (Yes, I realize these are public interfaces. This has advantages as well as disadvantages. For the time being, it is what it is.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Your Feedback&lt;/h2&gt; 
&lt;p&gt;Add your issue here on GitHub. Feel free to get in touch if you have any questions.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;We follow Golang's Code of Conduct which you can find &lt;a href="https://golang.org/conduct"&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>modelcontextprotocol/registry</title>
      <link>https://github.com/modelcontextprotocol/registry</link>
      <description>&lt;p&gt;A community driven registry service for Model Context Protocol (MCP) servers.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MCP Registry&lt;/h1&gt; 
&lt;p&gt;The MCP registry provides MCP clients with a list of MCP servers, like an app store for MCP servers.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/docs/guides/publishing/publish-server.md"&gt;&lt;strong&gt;📤 Publish my MCP server&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://registry.modelcontextprotocol.io/docs"&gt;&lt;strong&gt;⚡️ Live API docs&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/docs/explanations/ecosystem-vision.md"&gt;&lt;strong&gt;👀 Ecosystem vision&lt;/strong&gt;&lt;/a&gt; | 📖 &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/docs"&gt;Full documentation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Development Status&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;2025-09-08 update&lt;/strong&gt;: The registry has launched in preview 🎉 (&lt;a href="https://blog.modelcontextprotocol.io/posts/2025-09-08-mcp-registry-preview/"&gt;announcement blog post&lt;/a&gt;). While the system is now more stable, this is still a preview release and breaking changes or data resets may occur. A general availability (GA) release will follow later. We'd love your feedback in &lt;a href="https://github.com/modelcontextprotocol/registry/discussions/new?category=ideas"&gt;GitHub discussions&lt;/a&gt; or in the &lt;a href="https://discord.com/channels/1358869848138059966/1369487942862504016"&gt;#registry-dev Discord&lt;/a&gt; (&lt;a href="https://modelcontextprotocol.io/community/communication"&gt;joining details here&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;Current key maintainers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Adam Jones&lt;/strong&gt; (Anthropic) &lt;a href="https://github.com/domdomegg"&gt;@domdomegg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tadas Antanavicius&lt;/strong&gt; (PulseMCP) &lt;a href="https://github.com/tadasant"&gt;@tadasant&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Toby Padilla&lt;/strong&gt; (GitHub) &lt;a href="https://github.com/toby"&gt;@toby&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We use multiple channels for collaboration - see &lt;a href="https://modelcontextprotocol.io/community/communication"&gt;modelcontextprotocol.io/community/communication&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Often (but not always) ideas flow through this pipeline:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://modelcontextprotocol.io/community/communication"&gt;Discord&lt;/a&gt;&lt;/strong&gt; - Real-time community discussions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/modelcontextprotocol/registry/discussions"&gt;Discussions&lt;/a&gt;&lt;/strong&gt; - Propose and discuss product/technical requirements&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/modelcontextprotocol/registry/issues"&gt;Issues&lt;/a&gt;&lt;/strong&gt; - Track well-scoped technical work&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/modelcontextprotocol/registry/pulls"&gt;Pull Requests&lt;/a&gt;&lt;/strong&gt; - Contribute work towards issues&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick start:&lt;/h3&gt; 
&lt;h4&gt;Pre-requisites&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Go 1.24.x&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;golangci-lint v2.4.0&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Running the server&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start full development environment
make dev-compose
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This starts the registry at &lt;a href="http://localhost:8080"&gt;&lt;code&gt;localhost:8080&lt;/code&gt;&lt;/a&gt; with PostgreSQL and seed data. It can be configured with environment variables in &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt; - see &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/.env.example"&gt;.env.example&lt;/a&gt; for a reference.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Alternative: Local setup without Docker&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;PostgreSQL running locally&lt;/li&gt; 
  &lt;li&gt;Go 1.24.x installed&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Build and run locally
make build
make dev-local
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The service runs on &lt;a href="http://localhost:8080"&gt;&lt;code&gt;localhost:8080&lt;/code&gt;&lt;/a&gt; by default. This can be configured with environment variables in &lt;code&gt;.env&lt;/code&gt; - see &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/.env.example"&gt;.env.example&lt;/a&gt; for a reference.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Alternative: Running a pre-built Docker image&lt;/summary&gt; 
 &lt;p&gt;Pre-built Docker images are automatically published to GitHub Container Registry:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Run latest stable release
docker run -p 8080:8080 ghcr.io/modelcontextprotocol/registry:latest

# Run latest from main branch (continuous deployment)
docker run -p 8080:8080 ghcr.io/modelcontextprotocol/registry:main

# Run specific release version
docker run -p 8080:8080 ghcr.io/modelcontextprotocol/registry:v1.0.0

# Run development build from main branch
docker run -p 8080:8080 ghcr.io/modelcontextprotocol/registry:main-20250906-abc123d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Available tags:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Releases&lt;/strong&gt;: &lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;v1.0.0&lt;/code&gt;, &lt;code&gt;v1.1.0&lt;/code&gt;, etc.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Continuous&lt;/strong&gt;: &lt;code&gt;main&lt;/code&gt; (latest main branch build)&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Development&lt;/strong&gt;: &lt;code&gt;main-&amp;lt;date&amp;gt;-&amp;lt;sha&amp;gt;&lt;/code&gt; (specific commit builds)&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h4&gt;Publishing a server&lt;/h4&gt; 
&lt;p&gt;To publish a server, we've built a simple CLI. You can use it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Build the latest CLI
make publisher

# Use it!
./bin/mcp-publisher --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/docs/guides/publishing/publish-server.md"&gt;the publisher guide&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h4&gt;Other commands&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run lint, unit tests and integration tests
make check
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are also a few more helpful commands for development. Run &lt;code&gt;make help&lt;/code&gt; to learn more, or look in &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/Makefile"&gt;Makefile&lt;/a&gt;.&lt;/p&gt; 
&lt;!--
For Claude and other AI tools: Always prefer make targets over custom commands where possible.
--&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;h3&gt;Project Structure&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;├── cmd/                     # Application entry points
│   └── publisher/           # Server publishing tool
├── data/                    # Seed data
├── deploy/                  # Deployment configuration (Pulumi)
├── docs/                    # Documentation
├── internal/                # Private application code
│   ├── api/                 # HTTP handlers and routing
│   ├── auth/                # Authentication (GitHub OAuth, JWT, namespace blocking)
│   ├── config/              # Configuration management
│   ├── database/            # Data persistence (PostgreSQL, in-memory)
│   ├── service/             # Business logic
│   ├── telemetry/           # Metrics and monitoring
│   └── validators/          # Input validation
├── pkg/                     # Public packages
│   ├── api/                 # API types and structures
│   │   └── v0/              # Version 0 API types
│   └── model/               # Data models for server.json
├── scripts/                 # Development and testing scripts
├── tests/                   # Integration tests
└── tools/                   # CLI tools and utilities
    └── validate-*.sh        # Schema validation tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Authentication&lt;/h3&gt; 
&lt;p&gt;Publishing supports multiple authentication methods:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub OAuth&lt;/strong&gt; - For publishing by logging into GitHub&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub OIDC&lt;/strong&gt; - For publishing from GitHub Actions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DNS verification&lt;/strong&gt; - For proving ownership of a domain and its subdomains&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP verification&lt;/strong&gt; - For proving ownership of a domain&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The registry validates namespace ownership when publishing. E.g. to publish...:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;io.github.domdomegg/my-cool-mcp&lt;/code&gt; you must login to GitHub as &lt;code&gt;domdomegg&lt;/code&gt;, or be in a GitHub Action on domdomegg's repos&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;me.adamjones/my-cool-mcp&lt;/code&gt; you must prove ownership of &lt;code&gt;adamjones.me&lt;/code&gt; via DNS or HTTP challenge&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;More documentation&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/docs"&gt;documentation&lt;/a&gt; for more details if your question has not been answered here!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nats-io/nats-server</title>
      <link>https://github.com/nats-io/nats-server</link>
      <description>&lt;p&gt;High-Performance server for NATS.io, the cloud and edge native messaging system.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/nats-io/nats-server/main/logos/nats-horizontal-color.png" width="300" alt="NATS Logo" /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://nats.io"&gt;NATS&lt;/a&gt; is a simple, secure and performant communications system for digital systems, services and devices. NATS is part of the Cloud Native Computing Foundation (&lt;a href="https://cncf.io"&gt;CNCF&lt;/a&gt;). NATS has over &lt;a href="https://nats.io/download/"&gt;40 client language implementations&lt;/a&gt;, and its server can run on-premise, in the cloud, at the edge, and even on a Raspberry Pi. NATS can secure and simplify design and operation of modern distributed systems.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache2-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nats-io/nats-server/actions/workflows/tests.yaml"&gt;&lt;img src="https://github.com/nats-io/nats-server/actions/workflows/tests.yaml/badge.svg?branch=main" alt="Build" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nats-io/nats-server/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/nats-io/nats-server" alt="Release" /&gt;&lt;/a&gt; &lt;a href="https://slack.nats.io"&gt;&lt;img src="https://img.shields.io/badge/chat-on%20slack-green" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/nats-io/nats-server?branch=main"&gt;&lt;img src="https://coveralls.io/repos/github/nats-io/nats-server/badge.svg?branch=main" alt="Coverage" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/_/nats"&gt;&lt;img src="https://img.shields.io/docker/pulls/_/nats.svg?sanitize=true" alt="Docker Downloads" /&gt;&lt;/a&gt; &lt;a href="https://somsubhra.github.io/github-release-stats/?username=nats-io&amp;amp;repository=nats-server"&gt;&lt;img src="https://img.shields.io/github/downloads/nats-io/nats-server/total.svg?logo=github" alt="GitHub Downloads" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/1895"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/1895/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/nats/nats"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/nats" alt="Artifact Hub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nats.io"&gt;Official Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.nats.io"&gt;Official Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.nats.io/reference/faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Watch &lt;a href="https://rethink.synadia.com/episodes/1/"&gt;a video overview&lt;/a&gt; of NATS.&lt;/li&gt; 
 &lt;li&gt;Watch &lt;a href="https://www.youtube.com/watch?v=sm63oAVPqAM"&gt;this video from SCALE 13x&lt;/a&gt; to learn more about its origin story and design philosophy.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/nats_io"&gt;Twitter&lt;/a&gt;: Follow us on Twitter!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/natsio"&gt;Google Groups&lt;/a&gt;: Where you can ask questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://natsio.slack.com"&gt;Slack&lt;/a&gt;: Click &lt;a href="https://slack.nats.io"&gt;here&lt;/a&gt; to join. You can ask questions to our maintainers and to the rich and active community.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you are interested in contributing to NATS, read about our...&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nats-io/nats-server/main/CONTRIBUTING.md"&gt;Contributing guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nats-io"&gt;Report issues or propose Pull Requests&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The NATS product roadmap can be found &lt;a href="https://nats.io/about/#roadmap"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Adopters&lt;/h2&gt; 
&lt;p&gt;Who uses NATS? See our &lt;a href="https://nats.io/#who-uses-nats"&gt;list of users&lt;/a&gt; on &lt;a href="https://nats.io"&gt;https://nats.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;h3&gt;Security Audit&lt;/h3&gt; 
&lt;p&gt;A third party security audit was performed by Trail of Bits following engagement by the Open Source Technology Improvement Fund (OSTIF). You can see the &lt;a href="https://github.com/trailofbits/publications/raw/master/reviews/2025-04-ostif-nats-securityreview.pdf"&gt;full report from April 2025 here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Reporting Security Vulnerabilities&lt;/h3&gt; 
&lt;p&gt;If you've found a vulnerability or a potential vulnerability in the NATS server, please let us know at &lt;a href="mailto:security@nats.io"&gt;nats-security&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Unless otherwise noted, the NATS source files are distributed under the Apache Version 2.0 license found in the LICENSE file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>getlago/lago</title>
      <link>https://github.com/getlago/lago</link>
      <description>&lt;p&gt;Open Source Metering and Usage Based Billing API ⭐️ Consumption tracking, Subscription management, Pricing iterations, Payment orchestration &amp; Revenue analytics&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://github.com/getlago/lago"&gt; &lt;img src="https://uploads-ssl.webflow.com/635119506e36baf5c267fecd/635b6df0ee8effaa54c1fa42_banner-open-graph.jpg" alt="Lago" /&gt; &lt;/a&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;Lago&lt;/h1&gt; 
&lt;p align="center"&gt; Open Source Metering &amp;amp; Usage-Based Billing &lt;br /&gt; &lt;br /&gt; The best alternative to Chargebee, Recurly or Stripe Billing. &lt;br /&gt; For usage-based, subscription-based, and all the nuances of pricing in between. &lt;br /&gt; &lt;br /&gt; &lt;a href="https://www.getlago.com/slack"&gt;Slack&lt;/a&gt; · &lt;a href="https://getlago.com"&gt;Website&lt;/a&gt; · &lt;a href="https://github.com/getlago/lago/issues"&gt;Issues&lt;/a&gt; · &lt;a href="https://getlago.canny.io/"&gt;Roadmap&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.producthunt.com/posts/lago?utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-lago" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=386328&amp;amp;theme=light&amp;amp;period=monthly" alt="Lago - Open-source alternative to Stripe Billing and Chargebee | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.producthunt.com/posts/lago?utm_source=badge-top-post-topic-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-lago" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-topic-badge.svg?post_id=386328&amp;amp;theme=light&amp;amp;period=monthly&amp;amp;topic_id=267" alt="Lago - Open-source alternative to Stripe Billing and Chargebee | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.getlago.com/slack"&gt;&lt;img src="https://img.shields.io/badge/Lago%20Slack%20Community-lago.slack.com-%234A154B" alt="Join Lago on Slack" /&gt;&lt;/a&gt; &lt;a href="https://github.com/getlago/lago/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/getlago/lago" alt="Github Stars" /&gt;&lt;/a&gt; &lt;a href="https://news.ycombinator.com/item?id=31424450"&gt;&lt;img src="https://img.shields.io/badge/Hacker%20News-777-%23FF6600" alt="Hacker News" /&gt;&lt;/a&gt; &lt;a href="https://github.com/getlago/lago/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-AGPLv3-purple" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/getlago"&gt;&lt;img src="https://img.shields.io/twitter/follow/getlago?style=flat" /&gt;&lt;/a&gt; &lt;a href="https://www.ycombinator.com"&gt;&lt;img src="https://img.shields.io/badge/Backed%20by-Y%20Combinator-%23f26625" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;!-- ABOUT THE PROJECT --&gt; 
&lt;h2&gt;The programmable API for usage-based billing&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=dXnoMRetsr4"&gt;&lt;img src="https://img.youtube.com/vi/dXnoMRetsr4/0.jpg" alt="Lago Billing System Presentation" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;The problem: Billing systems are still a nightmare for engineers&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://uploads-ssl.webflow.com/6244531a40ad7ef5475ad9b3/62827b2f6fa52239b0db0fa4_Blog%20Post%20Image%20Standalone.png" alt="Billing nightmare" /&gt; Engineers be like…&lt;/p&gt; 
&lt;p&gt;Read more first-hand experiences from Qonto, Algolia, Pleo, Segment, or the 350+. Hackernews comments &lt;a href="https://news.ycombinator.com/item?id=31424450"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The Solution:&lt;/strong&gt; Lago, the open-source billing API for product-led SaaS&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Event-based: if you can track it, you can charge for it;&lt;/li&gt; 
 &lt;li&gt;Built for product-led growth companies;&lt;/li&gt; 
 &lt;li&gt;Hybrid pricing: subscription and usage;&lt;/li&gt; 
 &lt;li&gt;Hybrid go-to-market motion: self-serve and sales-led.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Open-source, open architecture:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Composable: connect Lago to any of your internal systems or tools (i.e. any payment gateway, CRM, CPQ, accounting software);&lt;/li&gt; 
 &lt;li&gt;Pricing: we’re not rent seekers, we’re not asking for a % of your revenue. Our self-hosted version is free. Our cloud version is priced like a SaaS;&lt;/li&gt; 
 &lt;li&gt;Privacy: your data never has to leave your infrastructure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.getlago.com/products/metering"&gt;Usage metering&lt;/a&gt;&lt;/strong&gt;: Lago's event-based architecture provides a solid foundation for building a fair pricing model that scales with your business.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.getlago.com/products/plans"&gt;Price plans&lt;/a&gt;&lt;/strong&gt;: Lago supports all pricing models. Create pay-as-you-go and hybrid plans in no time with our intuitive user interface or API.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.getlago.com/products/coupons"&gt;Coupons&lt;/a&gt;&lt;/strong&gt;: Create engaging marketing campaigns and increase conversion with coupons that customers can redeem to get a discount.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.getlago.com/products/add-on"&gt;Add-ons&lt;/a&gt;&lt;/strong&gt;: Why wait until the end of the billing cycle to get paid? Lago allows you to create one-time charges that are invoiced on the fly.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.getlago.com/products/invoicing"&gt;Invoicing&lt;/a&gt;&lt;/strong&gt;: Depending on the configuration of your plans, Lago automatically calculates what each customer owes you and generates invoices.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.getlago.com/products/prepaid-credits"&gt;Prepaid credits&lt;/a&gt;&lt;/strong&gt;: Unlock recurring revenue opportunities for pay-as-you-go pricing models with Lago’s prepaid credit features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔔 Stay up to date&lt;/h2&gt; 
&lt;p&gt;Lago launched its v0.1 on June 2nd, 2022. Lots of new features are coming, and are generally released on a bi-weekly basis. Watch updates of this repository to be notified of future updates.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://getlago.canny.io/"&gt;Check out our public roadmap&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🔖 License&lt;/h2&gt; 
&lt;p&gt;Distributed under the AGPLv3 License. Read more &lt;a href="https://www.getlago.com/blog/open-source-licensing-and-why-lago-chose-agplv3"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Current Releases&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Project&lt;/th&gt; 
   &lt;th&gt;Release Badge&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Lago&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago" alt="Lago Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Lago API&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago-api/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago-api" alt="Lago API Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Lago front&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago-front/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago-front" alt="Lago front Testing Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Lago Go Client&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago-go-client/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago-go-client" alt="Lago Go Client Testing Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;lago-gotenberg&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago-gotenberg/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago-gotenberg" alt="lago-gotenberg Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Lago JavaScript Client&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago-javascript-client/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago-javascript-client" alt="Lago JavaScript Client Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Lago OpenAPI&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago-openapi/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago-openapi" alt="Lago OpenAPI Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Lago Python Client&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago-python-client/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago-python-client" alt="Lago Python Client Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Lago Ruby Client&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getlago/lago-ruby-client/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/getlago/lago-ruby-client" alt="Lago Ruby Client Release" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;💻 Deploy locally&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Docker on your machine;&lt;/li&gt; 
 &lt;li&gt;Make sure Docker Compose is installed and available (it should be the case if you have chosen to install Docker via Docker Desktop); and&lt;/li&gt; 
 &lt;li&gt;Make sure Git is installed on your machine.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Run the app&lt;/h3&gt; 
&lt;p&gt;To start using Lago, run the following commands in a shell:&lt;/p&gt; 
&lt;h4&gt;On a fresh install&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Get the code
git clone --depth 1 https://github.com/getlago/lago.git

# Go to Lago folder
cd lago

# Set up environment configuration
echo "LAGO_RSA_PRIVATE_KEY=\"`openssl genrsa 2048 | openssl base64 -A`\"" &amp;gt;&amp;gt; .env
source .env

# Start all the components
docker compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;After an update&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can now open your browser and go to &lt;a href="http://localhost"&gt;http://localhost&lt;/a&gt; to connect to the application. Lago's API is exposed at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Note that if our docker server is not at &lt;a href="http://localhost"&gt;http://localhost&lt;/a&gt;, the following env variables must be set: &lt;code&gt;LAGO_API_URL&lt;/code&gt;. This may be on the command line or in your .env file. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;LAGO_API_URL="http://192.168.122.71:3000"
LAGO_FRONT_URL="http://192.168.122.71"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Find your API key&lt;/h3&gt; 
&lt;p&gt;Your API Key can be found directly in the UI:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Access the &lt;strong&gt;Developer&lt;/strong&gt; section from the sidebar;&lt;/li&gt; 
 &lt;li&gt;The first tab of this section is related to your &lt;strong&gt;API keys&lt;/strong&gt;; and&lt;/li&gt; 
 &lt;li&gt;Click the &lt;strong&gt;Copy&lt;/strong&gt; button to copy it to clipboard.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Analytics and tracking&lt;/h3&gt; 
&lt;p&gt;Please note that Lago, by default, tracks basic actions performed on your self-hosted instance. If you do not disable tracking, you may receive specific communications or product updates. However, rest assured that Lago will not collect any personal information about your customers or financial information about your invoices.&lt;/p&gt; 
&lt;p&gt;If you would like to know more about Lago's analytics or remove the entire tracking, please refer to &lt;a href="https://doc.getlago.com/guide/self-hosted/tracking-analytics"&gt;this page&lt;/a&gt; for comprehensive information.&lt;/p&gt; 
&lt;h3&gt;Version, environment variables and components&lt;/h3&gt; 
&lt;p&gt;Docker images are always updated to the last stable version in the docker-compose.yml file. You can use a different tag if needed by checking the releases list.&lt;/p&gt; 
&lt;p&gt;Lago uses the following environment variables to configure the components of the application. You can override them to customise your setup. Take a closer look are our &lt;a href="https://doc.getlago.com/docs/guide/self-hosting/docker#configuration"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;☁️ Use our cloud-based product&lt;/h2&gt; 
&lt;p&gt;Contact our team at &lt;a href="mailto:hello@getlago.com"&gt;hello@getlago.com&lt;/a&gt; to get started with Lago Cloud. More information on &lt;a href="https://www.getlago.com/pricing"&gt;our website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🚀 Getting the most out of Lago&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;See the &lt;a href="https://doc.getlago.com"&gt;documentation&lt;/a&gt; to learn more about all the features;&lt;/li&gt; 
 &lt;li&gt;Use our &lt;a href="https://www.getlago.com/resources/templates/all"&gt;templates&lt;/a&gt; to get inspiration and learn how to reproduce Algolia’s, Segment’s and Klaviyo’s pricing models;&lt;/li&gt; 
 &lt;li&gt;Join our &lt;a href="https://www.getlago.com/slack"&gt;Slack community&lt;/a&gt; if you need help, or want to chat, we’re here to help;&lt;/li&gt; 
 &lt;li&gt;Contribute on GitHub: read our &lt;a href="https://github.com/getlago/lago/raw/main/CONTRIBUTING.md"&gt;guidelines&lt;/a&gt;;&lt;/li&gt; 
 &lt;li&gt;Follow us on &lt;a href="https://twitter.com/GetLago"&gt;Twitter&lt;/a&gt; for the latest news;&lt;/li&gt; 
 &lt;li&gt;You can email us as well: &lt;a href="mailto:hello@getlago.com"&gt;hello@getlago.com&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🧑‍💻 Contributions and development environment&lt;/h2&gt; 
&lt;p&gt;You can follow this &lt;a href="https://github.com/getlago/lago/wiki/Development-Environment"&gt;guide&lt;/a&gt; to set up a Lago development environment on your machine. This guide is intended for people willing to contribute to Lago. If you want to try Lago on your local system, we recommend that you take a look at Lago's public documentation.&lt;/p&gt; 
&lt;p&gt;You can contribute by following our &lt;a href="https://github.com/getlago/lago/raw/main/CONTRIBUTING.md"&gt;guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💡 Philosophy&lt;/h2&gt; 
&lt;p&gt;B2B SaaS has evolved, but billing has not yet.&lt;/p&gt; 
&lt;h3&gt;1- We’re not in the “subscription economy” anymore. And we won’t go “full usage-based pricing” quite yet&lt;/h3&gt; 
&lt;p&gt;Pricings are now mostly hybrid: they include a usage-based component (i.e. “if you use more you pay more”) and a subscription component (i.e. a recurring fee for basic usage).&lt;/p&gt; 
&lt;p&gt;Not all software companies will go full “usage-based” like Snowflake for instance. This model is the new standard for cloud infrastructure products. However, in other areas of SaaS, users want to know beforehand how much they will pay to control their spending and software companies want to be able to predict recurring revenues.&lt;/p&gt; 
&lt;h3&gt;2- Go-to-market is not either bottom-up or top-down anymore&lt;/h3&gt; 
&lt;p&gt;SaaS used to be either self-service (SMBs) or sales-led (Enterprises). Go-to-market now mixes the self-service (all customers access the same price plans) and sales-led (customers get a custom quote from a sales representative) motions. A typical journey involves an individual contributor in a company who tests a new tool, puts their corporate credit card in, and starts spreading the use of the tool within the organization. At that point, the VP or head of department might want to upgrade to a custom plan tailored to the needs of the whole organization. As a result, billing needs to be flexible, automated, and transparent enough to embrace this hybrid go-to-market motion as well.&lt;/p&gt; 
&lt;h3&gt;3- The “rent seeker” pricing of current billing solutions needs to stop&lt;/h3&gt; 
&lt;p&gt;Why do payment companies take a cut on revenues? Because the higher the amount, the higher the risk for them (e.g. fraud, disputes, etc.).&lt;/p&gt; 
&lt;p&gt;Why did billing companies adopt the same pricing structure? We’re not able to provide an answer that makes sense. It’s been said on the internet that they did this because they could (read more &lt;a href="https://news.ycombinator.com/item?id=16766846"&gt;here&lt;/a&gt;).&lt;/p&gt; 
&lt;h3&gt;One last thing…&lt;/h3&gt; 
&lt;p&gt;Lago is agnostic and we aim at being as transparent as possible, so we won’t nudge or lock you into using a specific tool in exchange for using our billing API (&lt;a href="https://www.gmass.co/blog/negotiating-stripe-fees/"&gt;learn more&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>siderolabs/talos</title>
      <link>https://github.com/siderolabs/talos</link>
      <description>&lt;p&gt;Talos Linux is a modern Linux distribution built for Kubernetes.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;Talos Linux&lt;/h1&gt; 
&lt;p align="center"&gt;A modern OS for Kubernetes.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/talos-systems/talos/releases/latest"&gt;&lt;img alt="Release" src="https://img.shields.io/github/release/talos-systems/talos.svg?logo=github&amp;amp;logoColor=white" /&gt;&lt;/a&gt; &lt;a href="https://github.com/talos-systems/talos/releases/latest"&gt;&lt;img alt="Pre-release" src="https://img.shields.io/github/release-pre/talos-systems/talos.svg?label=pre-release&amp;amp;logo=GitHub&amp;amp;logoColor=white" /&gt;&lt;/a&gt; &lt;a href="https://www.bestpractices.dev/projects/7340"&gt;&lt;img src="https://www.bestpractices.dev/projects/7340/badge" alt="OpenSSF badge" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Talos&lt;/strong&gt; is a modern OS for running Kubernetes: secure, immutable, and minimal. Talos is fully open source, production-ready, and supported by the people at &lt;a href="https://www.SideroLabs.com/"&gt;Sidero Labs&lt;/a&gt; All system management is done via an API - there is no shell or interactive console. Benefits include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: Talos reduces your attack surface: It's minimal, hardened, and immutable. All API access is secured with mutual TLS (mTLS) authentication.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Predictability&lt;/strong&gt;: Talos eliminates configuration drift, reduces unknown factors by employing immutable infrastructure ideology, and delivers atomic updates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evolvability&lt;/strong&gt;: Talos simplifies your architecture, increases your agility, and always delivers current stable Kubernetes and Linux versions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For instructions on deploying and managing Talos, see the &lt;a href="https://www.talos.dev/docs/latest/"&gt;Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support: Questions, bugs, feature requests &lt;a href="https://github.com/siderolabs/talos/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Slack: Join our &lt;a href="https://slack.dev.talos-systems.io"&gt;slack channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Forum: &lt;a href="https://groups.google.com/a/SideroLabs.com/forum/#!forum/community"&gt;community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href="https://twitter.com/SideroLabs"&gt;@SideroLabs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Email: &lt;a href="mailto:info@SideroLabs.com"&gt;info@SideroLabs.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you're interested in this project and would like to help in engineering efforts or have general usage questions, we are happy to have you! We hold a monthly meeting that all audiences are welcome to attend.&lt;/p&gt; 
&lt;p&gt;We would appreciate your feedback so that we can make Talos even better! To do so, you can take our &lt;a href="https://docs.google.com/forms/d/1TUna5YTYGCKot68Y9YN_CLobY6z9JzLVCq1G7DoyNjA/edit"&gt;survey&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Office Hours&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;When: Second Monday of every month at 16:30 UTC.&lt;/li&gt; 
 &lt;li&gt;Where: &lt;a href="https://meet.google.com/ivb-kjfm-jfc"&gt;Google Meet&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can subscribe to this meeting by joining the community forum above.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: You can convert the meeting hours to your &lt;a href="https://everytimezone.com/s/599e61d6"&gt;local time&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcomed and appreciated! See &lt;a href="https://raw.githubusercontent.com/siderolabs/talos/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; for our guidelines.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;a href="https://github.com/siderolabs/talos/raw/master/LICENSE"&gt; &lt;img alt="GitHub" src="https://img.shields.io/github/license/siderolabs/talos?style=flat-square" /&gt; &lt;/a&gt; 
&lt;p&gt;Some software we distribute is under the General Public License family of licenses or other licenses that require we provide you with the source code. If you would like a copy of the source code for this software, please contact us via email: info at SideroLabs.com.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>trufflesecurity/trufflehog</title>
      <link>https://github.com/trufflesecurity/trufflehog</link>
      <description>&lt;p&gt;Find, verify, and analyze leaked credentials&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img alt="GoReleaser Logo" src="https://storage.googleapis.com/trufflehog-static-sources/pixel_pig.png" height="140" /&gt; &lt;/p&gt;
&lt;h2 align="center"&gt;TruffleHog&lt;/h2&gt; 
&lt;p align="center"&gt;Find leaked credentials.&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/trufflesecurity/trufflehog/v3"&gt;&lt;img src="https://goreportcard.com/badge/github.com/trufflesecurity/trufflehog/v3" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-AGPL--3.0-brightgreen" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/pkg/detectors"&gt;&lt;img src="https://img.shields.io/github/directory-file-count/trufflesecurity/truffleHog/pkg/detectors?label=Total%20Detectors&amp;amp;type=dir" alt="Total Detectors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h1&gt;&lt;span&gt;🔎&lt;/span&gt; &lt;em&gt;Now Scanning&lt;/em&gt;&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/assets/scanning_logos.svg?sanitize=true" /&gt; 
 &lt;p&gt;&lt;strong&gt;...and more&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;To learn more about TruffleHog and its features and capabilities, visit our &lt;a href="https://trufflesecurity.com/trufflehog?gclid=CjwKCAjwouexBhAuEiwAtW_Zx5IW87JNj97Ci7heFnA5ar6-DuNzT2Y5nIl9DuZ-FOUqx0Qg3vb9nxoClcEQAvD_BwE"&gt;product page&lt;/a&gt;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;h1&gt;&lt;span&gt;🌐&lt;/span&gt; TruffleHog Enterprise&lt;/h1&gt; 
&lt;p&gt;Are you interested in continuously monitoring &lt;strong&gt;Git, Jira, Slack, Confluence, Microsoft Teams, Sharepoint, and more..&lt;/strong&gt; for credentials? We have an enterprise product that can help! Learn more at &lt;a href="https://trufflesecurity.com/trufflehog-enterprise"&gt;https://trufflesecurity.com/trufflehog-enterprise&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We take the revenue from the enterprise product to fund more awesome open source projects that the whole community can benefit from.&lt;/p&gt;  
&lt;h1&gt;What is TruffleHog 🐽&lt;/h1&gt; 
&lt;p&gt;TruffleHog is the most powerful secrets &lt;strong&gt;Discovery, Classification, Validation,&lt;/strong&gt; and &lt;strong&gt;Analysis&lt;/strong&gt; tool. In this context, secret refers to a credential a machine uses to authenticate itself to another machine. This includes API keys, database passwords, private encryption keys, and more...&lt;/p&gt; 
&lt;h2&gt;Discovery 🔍&lt;/h2&gt; 
&lt;p&gt;TruffleHog can look for secrets in many places including Git, chats, wikis, logs, API testing platforms, object stores, filesystems and more&lt;/p&gt; 
&lt;h2&gt;Classification 📁&lt;/h2&gt; 
&lt;p&gt;TruffleHog classifies over 800 secret types, mapping them back to the specific identity they belong to. Is it an AWS secret? Stripe secret? Cloudflare secret? Postgres password? SSL Private key? Sometimes it's hard to tell looking at it, so TruffleHog classifies everything it finds.&lt;/p&gt; 
&lt;h2&gt;Validation ✅&lt;/h2&gt; 
&lt;p&gt;For every secret TruffleHog can classify, it can also log in to confirm if that secret is live or not. This step is critical to know if there’s an active present danger or not.&lt;/p&gt; 
&lt;h2&gt;Analysis 🔬&lt;/h2&gt; 
&lt;p&gt;For the 20 some of the most commonly leaked out credential types, instead of sending one request to check if the secret can log in, TruffleHog can send many requests to learn everything there is to know about the secret. Who created it? What resources can it access? What permissions does it have on those resources?&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;📢&lt;/span&gt; Join Our Community&lt;/h1&gt; 
&lt;p&gt;Have questions? Feedback? Jump into Slack or Discord and hang out with us.&lt;/p&gt; 
&lt;p&gt;Join our &lt;a href="https://join.slack.com/t/trufflehog-community/shared_invite/zt-pw2qbi43-Aa86hkiimstfdKH9UCpPzQ"&gt;Slack Community&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Join the &lt;a href="https://discord.gg/8Hzbrnkr7E"&gt;Secret Scanning Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;📺&lt;/span&gt; Demo&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://storage.googleapis.com/truffle-demos/non-interactive.svg?sanitize=true" alt="GitHub scanning demo" /&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -it -v "$PWD:/pwd" trufflesecurity/trufflehog:latest github --org=trufflesecurity
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;&lt;span&gt;💾&lt;/span&gt; Installation&lt;/h1&gt; 
&lt;p&gt;Several options are available for you:&lt;/p&gt; 
&lt;h3&gt;MacOS users&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install trufflehog
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker:&lt;/h3&gt; 
&lt;p&gt;&lt;sub&gt;&lt;i&gt;&lt;em&gt;Ensure Docker engine is running before executing the following commands:&lt;/em&gt;&lt;/i&gt;&lt;/sub&gt;&lt;/p&gt; 
&lt;h4&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Unix&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -it -v "$PWD:/pwd" trufflesecurity/trufflehog:latest github --repo https://github.com/trufflesecurity/test_keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Windows Command Prompt&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -it -v "%cd:/=\%:/pwd" trufflesecurity/trufflehog:latest github --repo https://github.com/trufflesecurity/test_keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Windows PowerShell&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -it -v "${PWD}:/pwd" trufflesecurity/trufflehog github --repo https://github.com/trufflesecurity/test_keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;M1 and M2 Mac&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --platform linux/arm64 --rm -it -v "$PWD:/pwd" trufflesecurity/trufflehog:latest github --repo https://github.com/trufflesecurity/test_keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Binary releases&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;Download and unpack from https://github.com/trufflesecurity/trufflehog/releases
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Compile from source&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/trufflesecurity/trufflehog.git
cd trufflehog; go install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using installation script&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using installation script, verify checksum signature (requires cosign to be installed)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -v -b /usr/local/bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using installation script to install a specific version&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin &amp;lt;ReleaseTag like v3.56.0&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;&lt;span&gt;🔐&lt;/span&gt; Verifying the artifacts&lt;/h1&gt; 
&lt;p&gt;Checksums are applied to all artifacts, and the resulting checksum file is signed using cosign.&lt;/p&gt; 
&lt;p&gt;You need the following tool to verify signature:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.sigstore.dev/cosign/system_config/installation/"&gt;Cosign&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Verification steps are as follows:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Download the artifact files you want, and the following files from the &lt;a href="https://github.com/trufflesecurity/trufflehog/releases"&gt;releases&lt;/a&gt; page.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;trufflehog_{version}_checksums.txt&lt;/li&gt; 
   &lt;li&gt;trufflehog_{version}_checksums.txt.pem&lt;/li&gt; 
   &lt;li&gt;trufflehog_{version}_checksums.txt.sig&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Verify the signature:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;cosign verify-blob &amp;lt;path to trufflehog_{version}_checksums.txt&amp;gt; \
--certificate &amp;lt;path to trufflehog_{version}_checksums.txt.pem&amp;gt; \
--signature &amp;lt;path to trufflehog_{version}_checksums.txt.sig&amp;gt; \
--certificate-identity-regexp 'https://github\.com/trufflesecurity/trufflehog/\.github/workflows/.+' \
--certificate-oidc-issuer "https://token.actions.githubusercontent.com"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Once the signature is confirmed as valid, you can proceed to validate that the SHA256 sums align with the downloaded artifact:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;sha256sum --ignore-missing -c trufflehog_{version}_checksums.txt
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Replace &lt;code&gt;{version}&lt;/code&gt; with the downloaded files version&lt;/p&gt; 
&lt;p&gt;Alternatively, if you are using the installation script, pass &lt;code&gt;-v&lt;/code&gt; option to perform signature verification. This requires Cosign binary to be installed prior to running the installation script.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;🚀&lt;/span&gt; Quick Start&lt;/h1&gt; 
&lt;h2&gt;1: Scan a repo for only verified secrets&lt;/h2&gt; 
&lt;p&gt;Command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog git https://github.com/trufflesecurity/test_keys --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Expected output:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;🐷🔑🐷  TruffleHog. Unearth your secrets. 🐷🔑🐷

Found verified result 🐷🔑
Detector Type: AWS
Decoder Type: PLAIN
Raw result: AKIAYVP4CIPPERUVIFXG
Line: 4
Commit: fbc14303ffbf8fb1c2c1914e8dda7d0121633aca
File: keys
Email: counter &amp;lt;counter@counters-MacBook-Air.local&amp;gt;
Repository: https://github.com/trufflesecurity/test_keys
Timestamp: 2022-06-16 10:17:40 -0700 PDT
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;2: Scan a GitHub Org for only verified secrets&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog github --org=trufflesecurity --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;3: Scan a GitHub Repo for only verified keys and get JSON output&lt;/h2&gt; 
&lt;p&gt;Command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog git https://github.com/trufflesecurity/test_keys --results=verified,unknown --json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Expected output:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{"SourceMetadata":{"Data":{"Git":{"commit":"fbc14303ffbf8fb1c2c1914e8dda7d0121633aca","file":"keys","email":"counter \u003ccounter@counters-MacBook-Air.local\u003e","repository":"https://github.com/trufflesecurity/test_keys","timestamp":"2022-06-16 10:17:40 -0700 PDT","line":4}}},"SourceID":0,"SourceType":16,"SourceName":"trufflehog - git","DetectorType":2,"DetectorName":"AWS","DecoderName":"PLAIN","Verified":true,"Raw":"AKIAYVP4CIPPERUVIFXG","Redacted":"AKIAYVP4CIPPERUVIFXG","ExtraData":{"account":"595918472158","arn":"arn:aws:iam::595918472158:user/canarytokens.com@@mirux23ppyky6hx3l6vclmhnj","user_id":"AIDAYVP4CIPPJ5M54LRCY"},"StructuredData":null}
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;4: Scan a GitHub Repo + its Issues and Pull Requests&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog github --repo=https://github.com/trufflesecurity/test_keys --issue-comments --pr-comments
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;5: Scan an S3 bucket for verified keys&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog s3 --bucket=&amp;lt;bucket name&amp;gt; --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;6: Scan S3 buckets using IAM Roles&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog s3 --role-arn=&amp;lt;iam role arn&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;7: Scan a Github Repo using SSH authentication in Docker&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -v "$HOME/.ssh:/root/.ssh:ro" trufflesecurity/trufflehog:latest git ssh://github.com/trufflesecurity/test_keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;8: Scan individual files or directories&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog filesystem path/to/file1.txt path/to/file2.txt path/to/dir
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;9: Scan a local git repo&lt;/h2&gt; 
&lt;p&gt;Clone the git repo. For example &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/git@github.com:trufflesecurity/test_keys.git"&gt;test keys&lt;/a&gt; repo.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ git clone git@github.com:trufflesecurity/test_keys.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run trufflehog from the parent directory (outside the git repo).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ trufflehog git file://test_keys --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;10: Scan GCS buckets for verified secrets&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog gcs --project-id=&amp;lt;project-ID&amp;gt; --cloud-environment --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;11: Scan a Docker image for verified secrets&lt;/h2&gt; 
&lt;p&gt;Use the &lt;code&gt;--image&lt;/code&gt; flag multiple times to scan multiple images.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# to scan from a remote registry
trufflehog docker --image trufflesecurity/secrets --results=verified,unknown

# to scan from the local docker daemon
trufflehog docker --image docker://new_image:tag --results=verified,unknown

# to scan from an image saved as a tarball
trufflehog docker --image file://path_to_image.tar --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;12: Scan in CI&lt;/h2&gt; 
&lt;p&gt;Set the &lt;code&gt;--since-commit&lt;/code&gt; flag to your default branch that people merge into (ex: "main"). Set the &lt;code&gt;--branch&lt;/code&gt; flag to your PR's branch name (ex: "feature-1"). Depending on the CI/CD platform you use, this value can be pulled in dynamically (ex: &lt;a href="https://circleci.com/docs/variables/"&gt;CIRCLE_BRANCH in Circle CI&lt;/a&gt; and &lt;a href="https://docs.travis-ci.com/user/environment-variables/"&gt;TRAVIS_PULL_REQUEST_BRANCH in Travis CI&lt;/a&gt;). If the repo is cloned and the target branch is already checked out during the CI/CD workflow, then &lt;code&gt;--branch HEAD&lt;/code&gt; should be sufficient. The &lt;code&gt;--fail&lt;/code&gt; flag will return an 183 error code if valid credentials are found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog git file://. --since-commit main --branch feature-1 --results=verified,unknown --fail
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;13: Scan a Postman workspace&lt;/h2&gt; 
&lt;p&gt;Use the &lt;code&gt;--workspace-id&lt;/code&gt;, &lt;code&gt;--collection-id&lt;/code&gt;, &lt;code&gt;--environment&lt;/code&gt; flags multiple times to scan multiple targets.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog postman --token=&amp;lt;postman api token&amp;gt; --workspace-id=&amp;lt;workspace id&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;14: Scan a Jenkins server&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog jenkins --url https://jenkins.example.com --username admin --password admin
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;15: Scan an Elasticsearch server&lt;/h2&gt; 
&lt;h3&gt;Scan a Local Cluster&lt;/h3&gt; 
&lt;p&gt;There are two ways to authenticate to a local cluster with TruffleHog: (1) username and password, (2) service token.&lt;/p&gt; 
&lt;h4&gt;Connect to a local cluster with username and password&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog elasticsearch --nodes 192.168.14.3 192.168.14.4 --username truffle --password hog
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connect to a local cluster with a service token&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog elasticsearch --nodes 192.168.14.3 192.168.14.4 --service-token ‘AAEWVaWM...Rva2VuaSDZ’
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Scan an Elastic Cloud Cluster&lt;/h3&gt; 
&lt;p&gt;To scan a cluster on Elastic Cloud, you’ll need a Cloud ID and API key.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog elasticsearch \
  --cloud-id 'search-prod:dXMtY2Vx...YjM1ODNlOWFiZGRlNjI0NA==' \
  --api-key 'MlVtVjBZ...ZSYlduYnF1djh3NG5FQQ=='
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;16. Scan a GitHub Repository for Cross Fork Object References and Deleted Commits&lt;/h2&gt; 
&lt;p&gt;The following command will enumerate deleted and hidden commits on a GitHub repository and then scan them for secrets. This is an alpha release feature.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog github-experimental --repo https://github.com/&amp;lt;USER&amp;gt;/&amp;lt;REPO&amp;gt;.git --object-discovery
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In addition to the normal TruffleHog output, the &lt;code&gt;--object-discovery&lt;/code&gt; flag creates two files in a new &lt;code&gt;$HOME/.trufflehog&lt;/code&gt; directory: &lt;code&gt;valid_hidden.txt&lt;/code&gt; and &lt;code&gt;invalid.txt&lt;/code&gt;. These are used to track state during commit enumeration, as well as to provide users with a complete list of all hidden and deleted commits (&lt;code&gt;valid_hidden.txt&lt;/code&gt;). If you'd like to automatically remove these files after scanning, please add the flag &lt;code&gt;--delete-cached-data&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Enumerating all valid commits on a repository using this method takes between 20 minutes and a few hours, depending on the size of your repository. We added a progress bar to keep you updated on how long the enumeration will take. The actual secret scanning runs extremely fast.&lt;/p&gt; 
&lt;p&gt;For more information on Cross Fork Object References, please &lt;a href="https://trufflesecurity.com/blog/anyone-can-access-deleted-and-private-repo-data-github"&gt;read our blog post&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;17. Scan Hugging Face&lt;/h2&gt; 
&lt;h3&gt;Scan a Hugging Face Model, Dataset or Space&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog huggingface --model &amp;lt;model_id&amp;gt; --space &amp;lt;space_id&amp;gt; --dataset &amp;lt;dataset_id&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Scan all Models, Datasets and Spaces belonging to a Hugging Face Organization or User&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog huggingface --org &amp;lt;orgname&amp;gt; --user &amp;lt;username&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(Optionally) When scanning an organization or user, you can skip an entire class of resources with &lt;code&gt;--skip-models&lt;/code&gt;, &lt;code&gt;--skip-datasets&lt;/code&gt;, &lt;code&gt;--skip-spaces&lt;/code&gt; OR a particular resource with &lt;code&gt;--ignore-models &amp;lt;model_id&amp;gt;&lt;/code&gt;, &lt;code&gt;--ignore-datasets &amp;lt;dataset_id&amp;gt;&lt;/code&gt;, &lt;code&gt;--ignore-spaces &amp;lt;space_id&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Scan Discussion and PR Comments&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog huggingface --model &amp;lt;model_id&amp;gt; --include-discussions --include-prs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;18. Scan stdin Input&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;aws s3 cp s3://example/gzipped/data.gz - | gunzip -c | trufflehog stdin
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;&lt;span&gt;❓&lt;/span&gt; FAQ&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;All I see is &lt;code&gt;🐷🔑🐷 TruffleHog. Unearth your secrets. 🐷🔑🐷&lt;/code&gt; and the program exits, what gives? 
  &lt;ul&gt; 
   &lt;li&gt;That means no secrets were detected&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Why is the scan taking a long time when I scan a GitHub org 
  &lt;ul&gt; 
   &lt;li&gt;Unauthenticated GitHub scans have rate limits. To improve your rate limits, include the &lt;code&gt;--token&lt;/code&gt; flag with a personal access token&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;It says a private key was verified, what does that mean? 
  &lt;ul&gt; 
   &lt;li&gt;Check out our Driftwood blog post to learn how to do this, in short we've confirmed the key can be used live for SSH or SSL &lt;a href="https://trufflesecurity.com/blog/driftwood-know-if-private-keys-are-sensitive/"&gt;Blog post&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Is there an easy way to ignore specific secrets? 
  &lt;ul&gt; 
   &lt;li&gt;If the scanned source &lt;a href="https://github.com/trufflesecurity/trufflehog/raw/d6375ba92172fd830abb4247cca15e3176448c5d/pkg/engine/engine.go#L358-L365"&gt;supports line numbers&lt;/a&gt;, then you can add a &lt;code&gt;trufflehog:ignore&lt;/code&gt; comment on the line containing the secret to ignore that secrets.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;span&gt;📰&lt;/span&gt; What's new in v3?&lt;/h1&gt; 
&lt;p&gt;TruffleHog v3 is a complete rewrite in Go with many new powerful features.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;We've &lt;strong&gt;added over 700 credential detectors that support active verification against their respective APIs&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;We've also added native &lt;strong&gt;support for scanning GitHub, GitLab, Docker, filesystems, S3, GCS, Circle CI and Travis CI&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Instantly verify private keys&lt;/strong&gt; against millions of github users and &lt;strong&gt;billions&lt;/strong&gt; of TLS certificates using our &lt;a href="https://trufflesecurity.com/blog/driftwood"&gt;Driftwood&lt;/a&gt; technology.&lt;/li&gt; 
 &lt;li&gt;Scan binaries, documents, and other file formats&lt;/li&gt; 
 &lt;li&gt;Available as a GitHub Action and a pre-commit hook&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What is credential verification?&lt;/h2&gt; 
&lt;p&gt;For every potential credential that is detected, we've painstakingly implemented programmatic verification against the API that we think it belongs to. Verification eliminates false positives. For example, the &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/pkg/detectors/aws/aws.go"&gt;AWS credential detector&lt;/a&gt; performs a &lt;code&gt;GetCallerIdentity&lt;/code&gt; API call against the AWS API to verify if an AWS credential is active.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;📝&lt;/span&gt; Usage&lt;/h1&gt; 
&lt;p&gt;TruffleHog has a sub-command for each source of data that you may want to scan:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;git&lt;/li&gt; 
 &lt;li&gt;github&lt;/li&gt; 
 &lt;li&gt;gitlab&lt;/li&gt; 
 &lt;li&gt;docker&lt;/li&gt; 
 &lt;li&gt;s3&lt;/li&gt; 
 &lt;li&gt;filesystem (files and directories)&lt;/li&gt; 
 &lt;li&gt;syslog&lt;/li&gt; 
 &lt;li&gt;circleci&lt;/li&gt; 
 &lt;li&gt;travisci&lt;/li&gt; 
 &lt;li&gt;gcs (Google Cloud Storage)&lt;/li&gt; 
 &lt;li&gt;postman&lt;/li&gt; 
 &lt;li&gt;jenkins&lt;/li&gt; 
 &lt;li&gt;elasticsearch&lt;/li&gt; 
 &lt;li&gt;stdin&lt;/li&gt; 
 &lt;li&gt;multi-scan&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each subcommand can have options that you can see with the &lt;code&gt;--help&lt;/code&gt; flag provided to the sub command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ trufflehog git --help
usage: TruffleHog git [&amp;lt;flags&amp;gt;] &amp;lt;uri&amp;gt;

Find credentials in git repositories.

Flags:
  -h, --help                Show context-sensitive help (also try --help-long and --help-man).
      --log-level=0         Logging verbosity on a scale of 0 (info) to 5 (trace). Can be disabled with "-1".
      --profile             Enables profiling and sets a pprof and fgprof server on :18066.
  -j, --json                Output in JSON format.
      --json-legacy         Use the pre-v3.0 JSON format. Only works with git, gitlab, and github sources.
      --github-actions      Output in GitHub Actions format.
      --concurrency=20           Number of concurrent workers.
      --no-verification     Don't verify the results.
      --results=RESULTS          Specifies which type(s) of results to output: verified, unknown, unverified, filtered_unverified. Defaults to all types.
      --allow-verification-overlap
                                 Allow verification of similar credentials across detectors
      --filter-unverified   Only output first unverified result per chunk per detector if there are more than one results.
      --filter-entropy=FILTER-ENTROPY
                                 Filter unverified results with Shannon entropy. Start with 3.0.
      --config=CONFIG            Path to configuration file.
      --print-avg-detector-time
                                 Print the average time spent on each detector.
      --no-update           Don't check for updates.
      --fail                Exit with code 183 if results are found.
      --verifier=VERIFIER ...    Set custom verification endpoints.
      --custom-verifiers-only   Only use custom verification endpoints.
      --archive-max-size=ARCHIVE-MAX-SIZE
                                 Maximum size of archive to scan. (Byte units eg. 512B, 2KB, 4MB)
      --archive-max-depth=ARCHIVE-MAX-DEPTH
                                 Maximum depth of archive to scan.
      --archive-timeout=ARCHIVE-TIMEOUT
                                 Maximum time to spend extracting an archive.
      --include-detectors="all"  Comma separated list of detector types to include. Protobuf name or IDs may be used, as well as ranges.
      --exclude-detectors=EXCLUDE-DETECTORS
                                 Comma separated list of detector types to exclude. Protobuf name or IDs may be used, as well as ranges. IDs defined here take precedence over the include list.
      --version             Show application version.
  -i, --include-paths=INCLUDE-PATHS
                                 Path to file with newline separated regexes for files to include in scan.
  -x, --exclude-paths=EXCLUDE-PATHS
                                 Path to file with newline separated regexes for files to exclude in scan.
      --exclude-globs=EXCLUDE-GLOBS
                                 Comma separated list of globs to exclude in scan. This option filters at the `git log` level, resulting in faster scans.
      --since-commit=SINCE-COMMIT
                                 Commit to start scan from.
      --branch=BRANCH            Branch to scan.
      --max-depth=MAX-DEPTH      Maximum depth of commits to scan.
      --bare                Scan bare repository (e.g. useful while using in pre-receive hooks)

Args:
  &amp;lt;uri&amp;gt;  Git repository URL. https://, file://, or ssh:// schema expected.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, to scan a &lt;code&gt;git&lt;/code&gt; repository, start with&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;trufflehog git https://github.com/trufflesecurity/trufflehog.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;TruffleHog supports defining &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/#regex-detector-alpha"&gt;custom regex detectors&lt;/a&gt; and multiple sources in a configuration file provided via the &lt;code&gt;--config&lt;/code&gt; flag. The regex detectors can be used with any subcommand, while the sources defined in configuration are only for the &lt;code&gt;multi-scan&lt;/code&gt; subcommand.&lt;/p&gt; 
&lt;p&gt;The configuration format for sources can be found on Truffle Security's &lt;a href="https://docs.trufflesecurity.com/scan-data-for-secrets"&gt;source configuration documentation page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Example GitHub source configuration and &lt;a href="https://docs.trufflesecurity.com/github#Fvm1I"&gt;options reference&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;sources:
- connection:
    '@type': type.googleapis.com/sources.GitHub
    repositories:
    - https://github.com/trufflesecurity/test_keys.git
    unauthenticated: {}
  name: example config scan
  type: SOURCE_TYPE_GITHUB
  verify: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may define multiple connections under the &lt;code&gt;sources&lt;/code&gt; key (see above), and TruffleHog will scan all of the sources concurrently.&lt;/p&gt; 
&lt;h2&gt;S3&lt;/h2&gt; 
&lt;p&gt;The S3 source supports assuming IAM roles for scanning in addition to IAM users. This makes it easier for users to scan multiple AWS accounts without needing to rely on hardcoded credentials for each account.&lt;/p&gt; 
&lt;p&gt;The IAM identity that TruffleHog uses initially will need to have &lt;code&gt;AssumeRole&lt;/code&gt; privileges as a principal in the &lt;a href="https://aws.amazon.com/blogs/security/how-to-use-trust-policies-with-iam-roles/"&gt;trust policy&lt;/a&gt; of each IAM role to assume.&lt;/p&gt; 
&lt;p&gt;To scan a specific bucket using locally set credentials or instance metadata if on an EC2 instance:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog s3 --bucket=&amp;lt;bucket-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To scan a specific bucket using an assumed role:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog s3 --bucket=&amp;lt;bucket-name&amp;gt; --role-arn=&amp;lt;iam-role-arn&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Multiple roles can be passed as separate arguments. The following command will attempt to scan every bucket each role has permissions to list in the S3 API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog s3 --role-arn=&amp;lt;iam-role-arn-1&amp;gt; --role-arn=&amp;lt;iam-role-arn-2&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Exit Codes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;0: No errors and no results were found.&lt;/li&gt; 
 &lt;li&gt;1: An error was encountered. Sources may not have completed scans.&lt;/li&gt; 
 &lt;li&gt;183: No errors were encountered, but results were found. Will only be returned if &lt;code&gt;--fail&lt;/code&gt; flag is used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;img alt="octocat" src="https://github.githubassets.com/images/icons/emoji/octocat.png?v8" /&gt;) TruffleHog Github Action&lt;/h2&gt; 
&lt;h3&gt;General Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Secret Scanning
      uses: trufflesecurity/trufflehog@main
      with:
        extra_args: --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the example config above, we're scanning for live secrets in all PRs and Pushes to &lt;code&gt;main&lt;/code&gt;. Only code changes in the referenced commits are scanned. If you'd like to scan an entire branch, please see the "Advanced Usage" section below.&lt;/p&gt; 
&lt;h3&gt;Shallow Cloning&lt;/h3&gt; 
&lt;p&gt;If you're incorporating TruffleHog into a standalone workflow and aren't running any other CI/CD tooling alongside TruffleHog, then we recommend using &lt;a href="https://git-scm.com/docs/git-clone#Documentation/git-clone.txt---depthltdepthgt"&gt;Shallow Cloning&lt;/a&gt; to speed up your workflow. Here's an example of how to do it:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;...
      - shell: bash
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "depth=$(($(jq length &amp;lt;&amp;lt;&amp;lt; '${{ toJson(github.event.commits) }}') + 2))" &amp;gt;&amp;gt; $GITHUB_ENV
            echo "branch=${{ github.ref_name }}" &amp;gt;&amp;gt; $GITHUB_ENV
          fi
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "depth=$((${{ github.event.pull_request.commits }}+2))" &amp;gt;&amp;gt; $GITHUB_ENV
            echo "branch=${{ github.event.pull_request.head.ref }}" &amp;gt;&amp;gt; $GITHUB_ENV
          fi
      - uses: actions/checkout@v3
        with:
          ref: ${{env.branch}}
          fetch-depth: ${{env.depth}}
      - uses: trufflesecurity/trufflehog@main
        with:
          extra_args: --results=verified,unknown
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Depending on the event type (push or PR), we calculate the number of commits present. Then we add 2, so that we can reference a base commit before our code changes. We pass that integer value to the &lt;code&gt;fetch-depth&lt;/code&gt; flag in the checkout action in addition to the relevant branch. Now our checkout process should be much shorter.&lt;/p&gt; 
&lt;h3&gt;Canary detection&lt;/h3&gt; 
&lt;p&gt;TruffleHog statically detects &lt;a href="https://canarytokens.org/"&gt;https://canarytokens.org/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/trufflesecurity/trufflehog/assets/52866392/74ace530-08c5-4eaf-a169-84a73e328f6f" alt="image" /&gt;&lt;/p&gt; 
&lt;h3&gt;Advanced Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- name: TruffleHog
  uses: trufflesecurity/trufflehog@main
  with:
    # Repository path
    path:
    # Start scanning from here (usually main branch).
    base:
    # Scan commits until here (usually dev branch).
    head: # optional
    # Extra args to be passed to the trufflehog cli.
    extra_args: --log-level=2 --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you'd like to specify specific &lt;code&gt;base&lt;/code&gt; and &lt;code&gt;head&lt;/code&gt; refs, you can use the &lt;code&gt;base&lt;/code&gt; argument (&lt;code&gt;--since-commit&lt;/code&gt; flag in TruffleHog CLI) and the &lt;code&gt;head&lt;/code&gt; argument (&lt;code&gt;--branch&lt;/code&gt; flag in the TruffleHog CLI). We only recommend using these arguments for very specific use cases, where the default behavior does not work.&lt;/p&gt; 
&lt;h4&gt;Advanced Usage: Scan entire branch&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;- name: scan-push
        uses: trufflesecurity/trufflehog@main
        with:
          base: ""
          head: ${{ github.ref_name }}
          extra_args: --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;TruffleHog GitLab CI&lt;/h2&gt; 
&lt;h3&gt;Example Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;stages:
  - security

security-secrets:
  stage: security
  allow_failure: false
  image: alpine:latest
  variables:
    SCAN_PATH: "." # Set the relative path in the repo to scan
  before_script:
    - apk add --no-cache git curl jq
    - curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
  script:
    - trufflehog filesystem "$SCAN_PATH" --results=verified,unknown --fail --json | jq
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the example pipeline above, we're scanning for live secrets in all repository directories and files. This job runs only when the pipeline source is a merge request event, meaning it's triggered when a new merge request is created.&lt;/p&gt; 
&lt;h2&gt;Pre-commit Hook&lt;/h2&gt; 
&lt;p&gt;TruffleHog can be used in a pre-commit hook to prevent credentials from leaking before they ever leave your computer.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/PreCommit.md"&gt;pre-commit hook documentation&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Regex Detector (alpha)&lt;/h2&gt; 
&lt;p&gt;TruffleHog supports detection and verification of custom regular expressions. For detection, at least one &lt;strong&gt;regular expression&lt;/strong&gt; and &lt;strong&gt;keyword&lt;/strong&gt; is required. A &lt;strong&gt;keyword&lt;/strong&gt; is a fixed literal string identifier that appears in or around the regex to be detected. To allow maximum flexibility for verification, a webhook is used containing the regular expression matches.&lt;/p&gt; 
&lt;p&gt;TruffleHog will send a JSON POST request containing the regex matches to a configured webhook endpoint. If the endpoint responds with a &lt;code&gt;200 OK&lt;/code&gt; response status code, the secret is considered verified.&lt;/p&gt; 
&lt;p&gt;Custom Detectors support a few different filtering mechanisms: entropy, regex targeting the entire match, regex targeting the captured secret, and excluded word lists checked against the secret (captured group if present, entire match if capture group is not present). Note that if your custom detector has multiple &lt;code&gt;regex&lt;/code&gt; set (in this example &lt;code&gt;hogID&lt;/code&gt;, and &lt;code&gt;hogToken&lt;/code&gt;), then the filters get applied to each regex. &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/examples/generic_with_filters.yml"&gt;Here&lt;/a&gt; is an example of a custom detector using these filters.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; This feature is alpha and subject to change.&lt;/p&gt; 
&lt;h3&gt;Regex Detector Example&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/pkg/custom_detectors/CUSTOM_DETECTORS.md"&gt;Here&lt;/a&gt; is how to setup a custom regex detector with verification server.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;🔍&lt;/span&gt; Analyze&lt;/h2&gt; 
&lt;p&gt;TruffleHog supports running a deeper analysis of a credential to view its permissions and the resources it has access to.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog analyze
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;&lt;span&gt;❤️&lt;/span&gt; Contributors&lt;/h1&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/CONTRIBUTING.md"&gt;Contribute&lt;/a&gt;].&lt;/p&gt; 
&lt;a href="https://github.com/trufflesecurity/trufflehog/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=trufflesecurity/trufflehog" /&gt; &lt;/a&gt; 
&lt;h1&gt;&lt;span&gt;💻&lt;/span&gt; Contributing&lt;/h1&gt; 
&lt;p&gt;Contributions are very welcome! Please see our &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/CONTRIBUTING.md"&gt;contribution guidelines first&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We no longer accept contributions to TruffleHog v2, but that code is available in the &lt;code&gt;v2&lt;/code&gt; branch.&lt;/p&gt; 
&lt;h2&gt;Adding new secret detectors&lt;/h2&gt; 
&lt;p&gt;We have published some &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/hack/docs/Adding_Detectors_external.md"&gt;documentation and tooling to get started on adding new secret detectors&lt;/a&gt;. Let's improve detection together!&lt;/p&gt; 
&lt;h1&gt;Use as a library&lt;/h1&gt; 
&lt;p&gt;Currently, trufflehog is in heavy development and no guarantees can be made on the stability of the public APIs at this time.&lt;/p&gt; 
&lt;h1&gt;License Change&lt;/h1&gt; 
&lt;p&gt;Since v3.0, TruffleHog is released under a AGPL 3 license, included in &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/LICENSE"&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt;. TruffleHog v3.0 uses none of the previous codebase, but care was taken to preserve backwards compatibility on the command line interface. The work previous to this release is still available licensed under GPL 2.0 in the history of this repository and the previous package releases and tags. A completed CLA is required for us to accept contributions going forward.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>argoproj/argo-cd</title>
      <link>https://github.com/argoproj/argo-cd</link>
      <description>&lt;p&gt;Declarative Continuous Deployment for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Releases:&lt;/strong&gt; &lt;a href="https://github.com/argoproj/argo-cd/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/argoproj/argo-cd?label=argo-cd" alt="Release Version" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/argo/argo-cd"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/argo-cd" alt="Artifact HUB" /&gt;&lt;/a&gt; &lt;a href="https://slsa.dev"&gt;&lt;img src="https://slsa.dev/images/gh-badge-level3.svg?sanitize=true" alt="SLSA 3" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Code:&lt;/strong&gt; &lt;a href="https://github.com/argoproj/argo-cd/actions?query=workflow%3A%22Integration+tests%22"&gt;&lt;img src="https://github.com/argoproj/argo-cd/workflows/Integration%20tests/badge.svg?branch=master" alt="Integration tests" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/argoproj/argo-cd"&gt;&lt;img src="https://codecov.io/gh/argoproj/argo-cd/branch/master/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/4486"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/4486/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/argoproj/argo-cd"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/argoproj/argo-cd/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Social:&lt;/strong&gt; &lt;a href="https://twitter.com/argoproj"&gt;&lt;img src="https://img.shields.io/twitter/follow/argoproj?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://argoproj.github.io/community/join-slack"&gt;&lt;img src="https://img.shields.io/badge/slack-argoproj-brightgreen.svg?logo=slack" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/company/argoproj/"&gt;&lt;img src="https://img.shields.io/badge/LinkedIn-argoproj-blue.svg?logo=linkedin" alt="LinkedIn" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Argo CD - Declarative Continuous Delivery for Kubernetes&lt;/h1&gt; 
&lt;h2&gt;What is Argo CD?&lt;/h2&gt; 
&lt;p&gt;Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/argoproj/argo-cd/master/docs/assets/argocd-ui.gif" alt="Argo CD UI" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/0WAm0y2vLIo"&gt;&lt;img src="https://img.youtube.com/vi/0WAm0y2vLIo/0.jpg" alt="Argo CD Demo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Why Argo CD?&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Application definitions, configurations, and environments should be declarative and version controlled.&lt;/li&gt; 
 &lt;li&gt;Application deployment and lifecycle management should be automated, auditable, and easy to understand.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Who uses Argo CD?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/argoproj/argo-cd/master/USERS.md"&gt;Official Argo CD user list&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;To learn more about Argo CD &lt;a href="https://argo-cd.readthedocs.io/"&gt;go to the complete documentation&lt;/a&gt;. Check live demo at &lt;a href="https://cd.apps.argoproj.io/"&gt;https://cd.apps.argoproj.io/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;h3&gt;Contribution, Discussion and Support&lt;/h3&gt; 
&lt;p&gt;You can reach the Argo CD community and developers via the following channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Q &amp;amp; A : &lt;a href="https://github.com/argoproj/argo-cd/discussions"&gt;Github Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chat : &lt;a href="https://argoproj.github.io/community/join-slack"&gt;The #argo-cd Slack channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Contributors Office Hours: &lt;a href="https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com"&gt;Every Thursday&lt;/a&gt; | &lt;a href="https://docs.google.com/document/d/1xkoFkVviB70YBzSEa4bDnu-rUZ1sIFtwKKG1Uw8XsY8"&gt;Agenda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;User Community meeting: &lt;a href="https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com"&gt;First Wednesday of the month&lt;/a&gt; | &lt;a href="https://docs.google.com/document/d/1ttgw98MO45Dq7ZUHpIiOIEfbyeitKHNfMjbY5dLLMKQ"&gt;Agenda&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Participation in the Argo CD project is governed by the &lt;a href="https://github.com/cncf/foundation/raw/master/code-of-conduct.md"&gt;CNCF Code of Conduct&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Blogs and Presentations&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://github.com/terrytangyuan/awesome-argo"&gt;Awesome-Argo: A Curated List of Awesome Projects and Resources Related to Argo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://akuity.io/blog/secret-ingredients-of-continuous-delivery-at-enterprise-scale-with-argocd/"&gt;Unveil the Secret Ingredients of Continuous Delivery at Enterprise Scale with Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/avPUQin9kzU"&gt;GitOps Without Pipelines With ArgoCD Image Updater&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/eEcgn_gU3SM"&gt;Combining Argo CD (GitOps), Crossplane (Control Plane), And KubeVela (OAM)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/yrj4lmScKHQ"&gt;How to Apply GitOps to Everything - Combining Argo CD and Crossplane&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/nkPoPaVzExY"&gt;Couchbase - How To Run a Database Cluster in Kubernetes Using Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/XNXJtxkUKeY"&gt;Automation of Everything - How To Combine Argo Events, Workflows &amp;amp; Pipelines, CD, and Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/cpAaI8p4R60"&gt;Environments Based On Pull Requests (PRs): Using Argo CD To Apply GitOps Principles On Previews&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/vpWQeoaiRM4"&gt;Argo CD: Applying GitOps Principles To Manage Production Environment In Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/continuous-deployment/creating-temporary-preview-environments-based-pull-requests-argo-cd-codefresh/"&gt;Creating Temporary Preview Environments Based On Pull Requests With Argo CD And Codefresh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=r50tRQjisxw"&gt;Tutorial: Everything You Need To Become A GitOps Ninja&lt;/a&gt; 90m tutorial on GitOps and Argo CD.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.inovex.de/blog/spinnaker-vs-argo-cd-vs-tekton-vs-jenkins-x/"&gt;Comparison of Argo CD, Spinnaker, Jenkins X, and Tekton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ibm.com/cloud/blog/simplify-and-automate-deployments-using-gitops-with-ibm-multicloud-manager-3-1-2"&gt;Simplify and Automate Deployments Using GitOps with IBM Multicloud Manager 3.1.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://v0-6.kubeflow.org/docs/use-cases/gitops-for-kubeflow/"&gt;GitOps for Kubeflow using Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/webinar-series-gitops-tool-sets-on-kubernetes-with-circleci-and-argo-cd"&gt;GitOps Toolsets on Kubernetes with CircleCI and Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=OdzH82VpMwI&amp;amp;feature=youtu.be"&gt;CI/CD in Light Speed with K8s and Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=VXrGp5er1ZE&amp;amp;t=0s&amp;amp;index=135&amp;amp;list=PLj6h78yzYM2PZf9eA7bhWnIh_mK1vyOfU"&gt;Machine Learning as Code&lt;/a&gt;. Among other things, describes how Kubeflow uses Argo CD to implement GitOPs for ML&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aWDIQMbp1cc&amp;amp;feature=youtu.be&amp;amp;t=1m4s"&gt;Argo CD - GitOps Continuous Delivery for Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2WSJF7d8dUg&amp;amp;feature=youtu.be"&gt;Introduction to Argo CD : Kubernetes DevOps CI/CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/riskified-technology/gitops-deployment-and-kubernetes-f1ab289efa4b"&gt;GitOps Deployment and Kubernetes - using Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://itnext.io/deploy-argo-cd-with-ingress-and-tls-in-three-steps-no-yaml-yak-shaving-required-bc536d401491"&gt;Deploy Argo CD with Ingress and TLS in Three Steps: No YAML Yak Shaving Required&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/events/cncf-member-webinar-gitops-continuous-delivery-argo-codefresh/"&gt;GitOps Continuous Delivery with Argo and Codefresh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mjpitz.com/blog/2020/12/03/renovate-your-gitops/"&gt;Stay up to date with Argo CD and Renovate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.arthurkoziel.com/setting-up-argocd-with-helm/"&gt;Setting up Argo CD with Helm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://thenewstack.io/applied-gitops-with-argocd/"&gt;Applied GitOps with Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cncf.io/blog/2020/12/17/solving-configuration-drift-using-gitops-with-argo-cd/"&gt;Solving configuration drift using GitOps with Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blogs.sap.com/2021/05/06/decentralized-gitops-over-environments/"&gt;Decentralized GitOps over environments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/AvLuplh1skA"&gt;Getting Started with ArgoCD for GitOps Deployments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/17894DTru2Y"&gt;Using Argo CD &amp;amp; Datree for Stable Kubernetes CI/CD Deployments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://amralaayassen.medium.com/how-to-create-argocd-applications-automatically-using-applicationset-automation-of-the-gitops-59455eaf4f72"&gt;How to create Argo CD Applications Automatically using ApplicationSet? "Automation of GitOps"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cncf.io/blog/2022/12/16/progressive-delivery-with-service-mesh-argo-rollouts-with-istio/"&gt;Progressive Delivery with Service Mesh – Argo Rollouts with Istio&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>ArvinLovegood/go-stock</title>
      <link>https://github.com/ArvinLovegood/go-stock</link>
      <description>&lt;p&gt;🦄🦄🦄AI赋能股票分析：AI加持的股票分析/选股工具。股票行情获取，AI热点资讯分析，AI资金/财务分析，涨跌报警推送。支持A股，港股，美股。支持市场整体/个股情绪分析，AI辅助选股等。数据全部保留在本地。支持DeepSeek，OpenAI， Ollama，LMStudio，AnythingLLM，硅基流动，火山方舟，阿里云百炼等平台或模型。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;go-stock : 基于大语言模型的AI赋能股票分析工具&lt;/h1&gt; 
&lt;h2&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/appicon.png" alt="go-stock" /&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/v/release/ArvinLovegood/go-stock?link=https%3A%2F%2Fgithub.com%2FArvinLovegood%2Fgo-stock%2Freleases&amp;amp;link=https%3A%2F%2Fgithub.com%2FArvinLovegood%2Fgo-stock%2Freleases" alt="GitHub Release" /&gt; &lt;a href="https://github.com/ArvinLovegood/go-stock"&gt;&lt;img src="https://img.shields.io/github/stars/ArvinLovegood/go-stock?link=https%3A%2F%2Fgithub.com%2FArvinLovegood%2Fgo-stock" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://gitee.com/arvinlovegood_admin/go-stock"&gt;&lt;img src="https://gitee.com/arvinlovegood_admin/go-stock/badge/star.svg?theme=dark" alt="star" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;🌟公众号&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E7%99%BD%E8%89%B2%E7%89%88.png" alt="扫码_搜索联合传播样式-白色版.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;📈 交流群&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;QQ交流群：&lt;a href="http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;amp;k=0YQ8qD3exahsD4YLNhzQTWe5ssstWC89&amp;amp;authKey=usOMMRFtIQDC%2FYcatHYapcxQbJ7PwXPHK9OypTXWzNjAq%2FRVvQu9bj2lRgb%2BSZ3p&amp;amp;noverify=0&amp;amp;group_code=491605333"&gt;点击链接加入群聊【go-stock交流群】：491605333(定期清理，随缘入群)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;✨ 简介&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;本项目基于Wails和NaiveUI开发，结合AI大模型构建的股票分析工具。&lt;/li&gt; 
 &lt;li&gt;目前已支持A股，港股，美股，未来计划加入基金，ETF等支持。&lt;/li&gt; 
 &lt;li&gt;支持市场整体/个股情绪分析，K线技术指标分析等功能。&lt;/li&gt; 
 &lt;li&gt;本项目仅供娱乐，不喜勿喷，AI分析股票结果仅供学习研究，投资有风险，请谨慎使用。&lt;/li&gt; 
 &lt;li&gt;开发环境主要基于Windows10+，其他平台未测试或功能受限。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📦 立即体验&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;安装版：&lt;a href="https://github.com/ArvinLovegood/go-stock/releases"&gt;go-stock-amd64-installer.exe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;绿色版：&lt;a href="https://github.com/ArvinLovegood/go-stock/releases"&gt;go-stock-windows-amd64.exe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;MACOS绿色版：&lt;a href="https://github.com/ArvinLovegood/go-stock/releases"&gt;go-stock-darwin-universal&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💬 支持大模型/平台&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;模型&lt;/th&gt; 
   &lt;th&gt;状态&lt;/th&gt; 
   &lt;th&gt;备注&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://platform.openai.com/"&gt;OpenAI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;可接入任何 OpenAI 接口格式模型&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://ollama.com/"&gt;Ollama&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;本地大模型运行平台&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://lmstudio.ai/"&gt;LMStudio&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;本地大模型运行平台&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://anythingllm.com/"&gt;AnythingLLM&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;本地知识库&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.deepseek.com/"&gt;DeepSeek&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;deepseek-reasoner,deepseek-chat&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://cloud.siliconflow.cn/i/foufCerk"&gt;大模型聚合平台&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;如：&lt;a href="https://share.302.ai/1KUpfG"&gt;302.AI&lt;/a&gt;，&lt;a href="https://cloud.siliconflow.cn/i/foufCerk"&gt;硅基流动&lt;/a&gt;，&lt;a href="https://www.volcengine.com/experience/ark?utm_term=202502dsinvite&amp;amp;ac=DSASUQY5&amp;amp;rc=IJSE43PZ"&gt;火山方舟&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;span style="color: #568DF4;"&gt;各位亲爱的朋友们，如果您对这个项目感兴趣，请先给我一个&lt;i style="color: #EA2626;"&gt;star&lt;/i&gt;吧，谢谢！&lt;/span&gt;💕&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;302.AI：新用户使用邀请码注册，即可领取 $1 测试额度！&lt;a href="https://share.302.ai/1KUpfG"&gt;注册链接&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt;火山方舟：新用户每个模型注册即送50万tokens，&lt;a href="https://www.volcengine.com/experience/ark?utm_term=202502dsinvite&amp;amp;ac=DSASUQY5&amp;amp;rc=IJSE43PZ"&gt;注册链接&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;硅基流动(siliconflow)，注册即送2000万Tokens，&lt;a href="https://cloud.siliconflow.cn/i/foufCerk"&gt;注册链接&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tushare大数据开放社区,免费提供各类金融数据,助力行业和量化研究(注意：Tushare只需要120积分即可，注册完成个人资料补充即可得120积分！！！)，&lt;a href="https://tushare.pro/register?reg=701944"&gt;注册链接&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;软件快速迭代开发中,请大家优先测试和使用最新发布的版本。&lt;/li&gt; 
 &lt;li&gt;欢迎大家提出宝贵的建议，欢迎提issue,PR。当然更欢迎&lt;a href="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/#%E9%83%BD%E5%88%92%E5%88%B0%E8%BF%99%E4%BA%86%E5%A6%82%E6%9E%9C%E6%88%91%E7%9A%84%E9%A1%B9%E7%9B%AE%E5%AF%B9%E6%82%A8%E6%9C%89%E5%B8%AE%E5%8A%A9%E8%AF%B7%E8%B5%9E%E5%8A%A9%E6%88%91%E5%90%A7"&gt;赞助我&lt;/a&gt;。💕&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;支持开源💕计划&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;赞助计划&lt;/th&gt; 
   &lt;th&gt;赞助等级&lt;/th&gt; 
   &lt;th align="left"&gt;权益说明&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;每月 0 RMB&lt;/td&gt; 
   &lt;td&gt;vip0&lt;/td&gt; 
   &lt;td align="left"&gt;🌟 全部功能,软件自动更新(从GitHub下载),自行解决github平台网络问题。&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;每月赞助 18.8 RMB&lt;br /&gt;每年赞助 120 RMB&lt;/td&gt; 
   &lt;td&gt;vip1&lt;/td&gt; 
   &lt;td align="left"&gt;💕 全部功能,软件自动更新(从CDN下载),更新快速便捷。AI配置指导，提示词参考等&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;每月赞助 28.8 RMB&lt;br /&gt;每年赞助 240 RMB&lt;/td&gt; 
   &lt;td&gt;vip2&lt;/td&gt; 
   &lt;td align="left"&gt;💕 💕 vip1全部功能,赠送硅基流动AI分析服务&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;每月赞助 X RMB&lt;/td&gt; 
   &lt;td&gt;vipX&lt;/td&gt; 
   &lt;td align="left"&gt;🧩 更多计划，视go-stock开源项目发展情况而定...(承接GitHub项目README广告推广💖)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🧩 重大功能开发计划&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;功能说明&lt;/th&gt; 
   &lt;th&gt;状态&lt;/th&gt; 
   &lt;th&gt;备注&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;股票分析知识库&lt;/td&gt; 
   &lt;td&gt;🚧&lt;/td&gt; 
   &lt;td&gt;未来计划&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ai智能选股&lt;/td&gt; 
   &lt;td&gt;🚧&lt;/td&gt; 
   &lt;td&gt;Ai智能选股功能开发中(下半年重点开发计划)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ETF支持&lt;/td&gt; 
   &lt;td&gt;🚧&lt;/td&gt; 
   &lt;td&gt;ETF数据支持 (目前可以查看净值和估值)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;美股支持&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;美股数据支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;港股支持&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;港股数据支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;多轮对话&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;AI分析后可继续对话提问&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;自定义AI分析提问模板&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;可配置的提问模板 &lt;a href="https://github.com/ArvinLovegood/go-stock/releases/tag/v2025.2.12.7-alpha"&gt;v2025.2.12.7-alpha&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;不再强制依赖Chrome浏览器&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;默认使用edge浏览器抓取新闻资讯&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;👀 更新日志&lt;/h2&gt; 
&lt;h3&gt;2025.07.08 实现软件自动更新功能&lt;/h3&gt; 
&lt;h3&gt;2025.07.07 卡片添加迷你分时图&lt;/h3&gt; 
&lt;h3&gt;2025.07.05 MacOs支持&lt;/h3&gt; 
&lt;h3&gt;2025.07.01 AI分析集成工具函数，AI分析将更加智能&lt;/h3&gt; 
&lt;h3&gt;2025.06.30 添加指标选股功能&lt;/h3&gt; 
&lt;h3&gt;2025.06.27 添加财经日历和重大事件时间轴功能&lt;/h3&gt; 
&lt;h3&gt;2025.06.25 添加热门股票、事件和话题功能&lt;/h3&gt; 
&lt;h3&gt;2025.06.18 更新内置股票基础数据,软件内实时市场资讯信息提醒，添加行业研究功能&lt;/h3&gt; 
&lt;h3&gt;2025.06.15 添加公司公告信息搜索/查看功能&lt;/h3&gt; 
&lt;h3&gt;2025.06.15 添加个股研报到弹出菜单&lt;/h3&gt; 
&lt;h3&gt;2025.06.13 添加个股研报功能&lt;/h3&gt; 
&lt;h3&gt;2025.06.12 添加龙虎榜功能，新增行业排名分类&lt;/h3&gt; 
&lt;h3&gt;2025.05.30 优化股票分时图显示&lt;/h3&gt; 
&lt;h3&gt;2025.05.20 修复财联社电报获取问题&lt;/h3&gt; 
&lt;h3&gt;2025.05.16 优化资金趋势图表组件&lt;/h3&gt; 
&lt;h3&gt;2025.05.15 重构应用加载和数据初始化逻辑，添加股票资金趋势功能，资金趋势图表增加主力当日净流入数据并优化展示效果&lt;/h3&gt; 
&lt;h3&gt;2025.05.14 添加个股资金流向功能，排行榜增加股票行情K线图弹窗&lt;/h3&gt; 
&lt;h3&gt;2025.05.13 添加行业排名功能&lt;/h3&gt; 
&lt;h3&gt;2025.05.09 添加A股盘口数据解析和展示功能&lt;/h3&gt; 
&lt;h3&gt;2025.05.07 优化分时图的展示&lt;/h3&gt; 
&lt;h3&gt;2025.04.29 补全港股/美股基础数据，优化港股股价延迟问题，优化初始化逻辑&lt;/h3&gt; 
&lt;h3&gt;2025.04.25 市场资讯支持AI分析和总结：让AI帮你读市场！&lt;/h3&gt; 
&lt;h3&gt;2025.04.24 新增市场行情模块：即时掌握全球市场行情资讯/动态，从此再也不用偷摸去各大财经网站啦。go-stock一键帮你搞定！&lt;/h3&gt; 
&lt;h3&gt;2025.04.22 优化K线图展示，支持拉伸放大，看得更舒服啦！&lt;/h3&gt; 
&lt;h3&gt;2025.04.21 港股，美股K线数据获取优化&lt;/h3&gt; 
&lt;h3&gt;2025.04.01 优化部分设置选项，避免重启软件&lt;/h3&gt; 
&lt;h3&gt;2025.03.31 优化数据爬取&lt;/h3&gt; 
&lt;h3&gt;2025.03.30 AI自动定时分析功能&lt;/h3&gt; 
&lt;h3&gt;2025.03.29 多提示词模板管理，AI分析时支持选择不同提示词模板&lt;/h3&gt; 
&lt;h3&gt;2025.03.28 AI分析结果保存为markdown文件时，支持保存位置目录选择&lt;/h3&gt; 
&lt;h3&gt;2025.03.15 自定义爬虫使用的浏览器路径配置&lt;/h3&gt; 
&lt;h3&gt;2025.03.14 优化编译构建，大幅减少编译后的程序文件大小&lt;/h3&gt; 
&lt;h3&gt;2025.03.09 基金估值和净值监控查看&lt;/h3&gt; 
&lt;h3&gt;2025.03.06 项目社区分享功能&lt;/h3&gt; 
&lt;h3&gt;2025.02.28 美股数据支持&lt;/h3&gt; 
&lt;h3&gt;2025.02.23 弹幕功能，盯盘不再孤单，无聊划个水！😎&lt;/h3&gt; 
&lt;h3&gt;2025.02.22 港股数据支持(目前有延迟)&lt;/h3&gt; 
&lt;h3&gt;2025.02.16 AI分析后可继续对话提问&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ArvinLovegood/go-stock/releases/tag/v2025.2.16.1-alpha"&gt;v2025.2.16.1-alpha&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2025.02.12 可配置的提问模板&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ArvinLovegood/go-stock/releases/tag/v2025.2.12.7-alpha"&gt;v2025.2.12.7-alpha&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🦄 重大更新&lt;/h2&gt; 
&lt;h3&gt;BIG NEWS !!! 重大更新！！！&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;2025.04.25 市场资讯支持AI分析和总结：让AI帮你读市场！ &lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/img.png" alt="img.png" /&gt;&lt;/li&gt; 
 &lt;li&gt;2025.04.24 新增市场行情模块：即时掌握全球市场行情资讯/动态，从此再也不用偷摸去各大财经网站啦。go-stock一键帮你搞定！ &lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img13.png" alt="img.png" /&gt; &lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_13.png" alt="img_13.png" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_14.png" alt="img_14.png" /&gt;&lt;/li&gt; 
 &lt;li&gt;2025.01.17 新增AI大模型分析股票功能 &lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img.png" alt="img_5.png" /&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📸 功能截图&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_6.png" alt="img_1.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;设置&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_4.png" alt="img_12.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;成本设置&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_7.png" alt="img.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;日K&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_12.png" alt="img_12.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;分时&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_9.png" alt="img_3.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;钉钉报警通知&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_5.png" alt="img_4.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;AI分析股票&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img.png" alt="img_5.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;版本信息提示&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_11.png" alt="img_11.png" /&gt;&lt;/p&gt; 
&lt;h2&gt;💕 感谢以下项目&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.naiveui.com/"&gt;NaiveUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wails.io/"&gt;Wails&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tushare.pro/register?reg=701944"&gt;Tushare&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;😘 赞助我&lt;/h2&gt; 
&lt;h3&gt;都划到这了，如果我的项目对您有帮助，请赞助我吧！😊😊😊&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;支付宝&lt;/th&gt; 
   &lt;th&gt;微信&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/alipay.jpg" alt="alipay.jpg" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/wxpay.jpg" alt="wxpay.jpg" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;⭐ Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#ArvinLovegood/go-stock&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=ArvinLovegood/go-stock&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🤖 状态&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/40b07d415a42c2264a18c4fe1b6f182ff1470687.svg?sanitize=true" alt="Alt" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;🐳 关于技术支持申明&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;本软件基于开源技术构建，使用Wails、NaiveUI、Vue、AI大模型等开源项目。 技术上如有问题，可以先向对应的开源社区请求帮助。&lt;/li&gt; 
 &lt;li&gt;开源不易，本人精力和时间有限，如需一对一技术支持，请先赞助。联系微信(备注 技术支持)：ArvinLovegood&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/wx.jpg" width="301px" height="402px" alt="ArvinLovegood" /&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;技术支持方式&lt;/th&gt; 
   &lt;th align="center"&gt;赞助(元)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;加 QQ：506808970，微信：ArvinLovegood&lt;/td&gt; 
   &lt;td align="center"&gt;100/次&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;长期技术支持（不限次数，新功能优先体验等）&lt;/td&gt; 
   &lt;td align="center"&gt;5000&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/LICENSE"&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>aaPanel/BillionMail</title>
      <link>https://github.com/aaPanel/BillionMail</link>
      <description>&lt;p&gt;BillionMail gives you open-source MailServer, NewsLetter, Email Marketing — fully self-hosted, dev-friendly, and free from monthly fees. Join the discord: https://discord.gg/asfXzBUhZr&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a name="readme-top"&gt;&lt;/a&gt; 
 &lt;h1&gt;&lt;a href="https://www.billionmail.com/" target="_blank"&gt;BillionMail 📧&lt;/a&gt;&lt;/h1&gt; 
 &lt;h2&gt;An Open-Source MailServer, NewsLetter, Email Marketing Solution for Smarter Campaigns&lt;/h2&gt; 
 &lt;p&gt;&lt;a href="https://www.gnu.org/licenses/agpl-3.0.html"&gt;&lt;img src="https://img.shields.io/github/license/aaPanel/BillionMail" alt="" /&gt;&lt;/a&gt; &lt;a href="https://www.billionmail.com/"&gt;&lt;img src="https://img.shields.io/badge/documentation-148F76" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aaPanel/BillionMail/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/aaPanel/BillionMail" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aaPanel/BillionMail"&gt;&lt;img src="https://img.shields.io/github/stars/aaPanel/BillionMail?color=%231890FF&amp;amp;style=flat-square%C2%A0%C2%A0%C2%A0" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/aaPanel/BillionMail/dev/README-zh_CN.md"&gt;简体中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/aaPanel/BillionMail/dev/README-ja.md"&gt;日本語&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://trendshift.io/repositories/13842" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13842" alt="aaPanel%2FBillionMail | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;What is BillionMail?&lt;/h2&gt; 
&lt;p&gt;BillionMail is a &lt;strong&gt;future open-source Mail server, Email marketing platform&lt;/strong&gt; designed to help businesses and individuals manage their email campaigns with ease. Whether you're sending newsletters, promotional emails, or transactional messages, this tool will provide &lt;strong&gt;full control&lt;/strong&gt; over your email marketing efforts. With features like &lt;strong&gt;advanced analytics&lt;/strong&gt;, and &lt;strong&gt;customer management&lt;/strong&gt;, you'll be able to create, send, and track emails like a pro.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://www.billionmail.com/home.png?v1" alt="BillionMail Banner" /&gt;&lt;/p&gt; 
&lt;h1&gt;Just 3 steps to send a billion emails!&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Billion emails. Any business. Guaranteed.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Step 1️⃣ Install BillionMail:&lt;/h3&gt; 
&lt;p&gt;✅ It takes &lt;strong&gt;only 8️⃣ minutes&lt;/strong&gt; from installation to &lt;strong&gt;✅ successful email sending&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cd /opt &amp;amp;&amp;amp; git clone https://github.com/aaPanel/BillionMail &amp;amp;&amp;amp; cd BillionMail &amp;amp;&amp;amp; bash install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Step 2️⃣: Connect Your Domain&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add the sending domain&lt;/li&gt; 
 &lt;li&gt;Verify DNS records&lt;/li&gt; 
 &lt;li&gt;Auto-enable free SSL&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Step 3️⃣: Build Your Campaign&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Write or paste your email&lt;/li&gt; 
 &lt;li&gt;Choose list &amp;amp; tags&lt;/li&gt; 
 &lt;li&gt;Set send time or send now&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.youtube.com/embed/UHgxZa_9jGs?si=0-f1B5hDtcWImvQv" target="_blank"&gt; &lt;img src="https://img.youtube.com/vi/UHgxZa_9jGs/maxresdefault.jpg" alt="" width="80%" /&gt; &lt;br /&gt; &lt;img src="https://www.iconfinder.com/icons/317714/download/png/16" alt="YouTube" width="16" /&gt; &lt;b&gt;Watch on Youtube&lt;/b&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;Other installation methods&lt;/h2&gt; 
&lt;h3&gt;One-click installation on aaPanel&lt;/h3&gt; 
&lt;p&gt;👉 &lt;a href="https://www.aapanel.com/new/download.html"&gt;https://www.aapanel.com/new/download.html&lt;/a&gt; (Log in to ✅aaPanel --&amp;gt; 🐳Docker --&amp;gt; 1️⃣OneClick install)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cd /opt &amp;amp;&amp;amp; git clone https://github.com/aaPanel/BillionMail &amp;amp;&amp;amp; cd BillionMail &amp;amp;&amp;amp; cp env_init .env &amp;amp;&amp;amp; docker compose up -d || docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Management script&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Management help&lt;/p&gt; &lt;p&gt;&lt;code&gt;bm help&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;View Login default info&lt;/p&gt; &lt;p&gt;&lt;code&gt;bm default&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Show domain DNS record&lt;/p&gt; &lt;p&gt;&lt;code&gt;bm show-record&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Update BillionMail&lt;/p&gt; &lt;p&gt;&lt;code&gt;bm update&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Live Demo&lt;/h2&gt; 
&lt;p&gt;BillionMail Demo: &lt;a href="https://demo.billionmail.com/billionmail"&gt;https://demo.billionmail.com/billionmail&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Username: &lt;code&gt;billionmail&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Password: &lt;code&gt;billionmail&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;WebMail&lt;/h2&gt; 
&lt;p&gt;BillionMail has integrated &lt;strong&gt;RoundCube&lt;/strong&gt;, you can access WebMail via &lt;code&gt;/roundcube/&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Why BillionMail?&lt;/h2&gt; 
&lt;p&gt;Most email marketing platforms are either &lt;strong&gt;expensive&lt;/strong&gt;, &lt;strong&gt;closed-source&lt;/strong&gt;, or &lt;strong&gt;lack essential features&lt;/strong&gt;. BillionMail aims to be different:&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Fully Open-Source&lt;/strong&gt; – No hidden costs, no vendor lock-in.&lt;br /&gt; 📊 &lt;strong&gt;Advanced Analytics&lt;/strong&gt; – Track email delivery, open rates, click-through rates, and more.&lt;br /&gt; 📧 &lt;strong&gt;Unlimited Sending&lt;/strong&gt; – No restrictions on the number of emails you can send.&lt;br /&gt; 🎨 &lt;strong&gt;Customizable Templates&lt;/strong&gt; – Custom professional marketing templates for reuse. 🔒 &lt;strong&gt;Privacy-First&lt;/strong&gt; – Your data stays with you, no third-party tracking.&lt;br /&gt; 🚀 &lt;strong&gt;Self-Hosted&lt;/strong&gt; – Run it on your own server for complete control.&lt;/p&gt; 
&lt;h2&gt;How You Can Help 🌟&lt;/h2&gt; 
&lt;p&gt;BillionMail is a &lt;strong&gt;community-driven project&lt;/strong&gt;, and we need your support to get started! Here's how you can help:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Star This Repository&lt;/strong&gt;: Show your interest by starring this repo.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Spread the Word&lt;/strong&gt;: Share BillionMail with your network—developers, marketers, and open-source enthusiasts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Share Feedback&lt;/strong&gt;: Let us know what features you'd like to see in BillionMail by opening an issue or joining the discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contribute&lt;/strong&gt;: Once development begins, we'll welcome contributions from the community. Stay tuned for updates!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;p&gt;📧 &lt;strong&gt;BillionMail – The Future of Open-Source Email Marketing.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;p&gt;If you encounter any issues or have feature requests, please &lt;a href="https://github.com/aaPanel/BillionMail/issues"&gt;open an issue&lt;/a&gt;. Be sure to include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A clear description of the problem or request.&lt;/li&gt; 
 &lt;li&gt;Steps to reproduce the issue (if applicable).&lt;/li&gt; 
 &lt;li&gt;Screenshots or error logs (if applicable).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install Now:&lt;/h2&gt; 
&lt;p&gt;✅It takes &lt;strong&gt;only 8 minutes&lt;/strong&gt; from installation to &lt;strong&gt;successful email sending&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cd /opt &amp;amp;&amp;amp; git clone https://github.com/aaPanel/BillionMail &amp;amp;&amp;amp; cd BillionMail &amp;amp;&amp;amp; bash install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Install with Docker:&lt;/strong&gt; (Please install Docker and docker-compose-plugin manually, and modify .env file)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cd /opt &amp;amp;&amp;amp; git clone https://github.com/aaPanel/BillionMail &amp;amp;&amp;amp; cd BillionMail &amp;amp;&amp;amp; cp env_init .env &amp;amp;&amp;amp; docker compose up -d || docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#aapanel/billionmail&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=aapanel/billionmail&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;BillionMail is licensed under the &lt;strong&gt;AGPLv3 License&lt;/strong&gt;. This means you can:&lt;/p&gt; 
&lt;p&gt;✅ Use the software for free.&lt;br /&gt; ✅ Modify and distribute the code.&lt;br /&gt; ✅ Use it privately without restrictions.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/aaPanel/BillionMail/dev/LICENSE"&gt;LICENSE&lt;/a&gt; file for more details.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;!-- BillionMail official link --&gt; 
&lt;!-- BillionMail Other link--&gt; 
&lt;!-- Shield link--&gt;</description>
    </item>
    
    <item>
      <title>livekit/livekit</title>
      <link>https://github.com/livekit/livekit</link>
      <description>&lt;p&gt;End-to-end realtime stack for connecting humans and AI&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="/.github/banner_dark.png" /&gt; 
 &lt;source media="(prefers-color-scheme: light)" srcset="/.github/banner_light.png" /&gt; 
 &lt;img style="width:100%;" alt="The LiveKit icon, the name of the repository and some sample code in the background." src="https://raw.githubusercontent.com/livekit/livekit/main/.github/banner_light.png" /&gt; 
&lt;/picture&gt; 
&lt;!--END_BANNER_IMAGE--&gt; 
&lt;h1&gt;LiveKit: Real-time video, audio and data for developers&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://livekit.io"&gt;LiveKit&lt;/a&gt; is an open source project that provides scalable, multi-user conferencing based on WebRTC. It's designed to provide everything you need to build real-time video audio data capabilities in your applications.&lt;/p&gt; 
&lt;p&gt;LiveKit's server is written in Go, using the awesome &lt;a href="https://github.com/pion/webrtc"&gt;Pion WebRTC&lt;/a&gt; implementation.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/livekit/livekit/stargazers/"&gt;&lt;img src="https://img.shields.io/github/stars/livekit/livekit?style=social&amp;amp;label=Star&amp;amp;maxAge=2592000" alt="GitHub stars" /&gt;&lt;/a&gt; &lt;a href="https://livekit.io/join-slack"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Flivekit.io%2Fbadges%2Fslack" alt="Slack community" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/livekit"&gt;&lt;img src="https://img.shields.io/twitter/follow/livekit" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/livekit/livekit"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;a href="https://github.com/livekit/livekit/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/livekit/livekit" alt="GitHub release (latest SemVer)" /&gt;&lt;/a&gt; &lt;a href="https://github.com/livekit/livekit/actions/workflows/buildtest.yaml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/livekit/livekit/buildtest.yaml?branch=master" alt="GitHub Workflow Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/livekit/livekit/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/livekit/livekit" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Scalable, distributed WebRTC SFU (Selective Forwarding Unit)&lt;/li&gt; 
 &lt;li&gt;Modern, full-featured client SDKs&lt;/li&gt; 
 &lt;li&gt;Built for production, supports JWT authentication&lt;/li&gt; 
 &lt;li&gt;Robust networking and connectivity, UDP/TCP/TURN&lt;/li&gt; 
 &lt;li&gt;Easy to deploy: single binary, Docker or Kubernetes&lt;/li&gt; 
 &lt;li&gt;Advanced features including: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/client/tracks/subscribe/#speaker-detection"&gt;speaker detection&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/client/tracks/publish/#video-simulcast"&gt;simulcast&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.livekit.io/livekit-one-dot-zero/"&gt;end-to-end optimizations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/client/tracks/subscribe/#selective-subscription"&gt;selective subscription&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/server/managing-participants/"&gt;moderation APIs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;end-to-end encryption&lt;/li&gt; 
   &lt;li&gt;SVC codecs (VP9, AV1)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/server/webhooks/"&gt;webhooks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/self-hosting/distributed/"&gt;distributed and multi-region&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation &amp;amp; Guides&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.livekit.io"&gt;https://docs.livekit.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Live Demos&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://meet.livekit.io"&gt;LiveKit Meet&lt;/a&gt; (&lt;a href="https://github.com/livekit-examples/meet"&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://spatial-audio-demo.livekit.io/"&gt;Spatial Audio&lt;/a&gt; (&lt;a href="https://github.com/livekit-examples/spatial-audio"&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Livestreaming from OBS Studio (&lt;a href="https://github.com/livekit-examples/livestream"&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://livekit.io/kitt"&gt;AI voice assistant using ChatGPT&lt;/a&gt; (&lt;a href="https://github.com/livekit-examples/kitt"&gt;source&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/agents"&gt;Agents&lt;/a&gt;: build real-time multimodal AI applications with programmable backend participants&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/egress"&gt;Egress&lt;/a&gt;: record or multi-stream rooms and export individual tracks&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/ingress"&gt;Ingress&lt;/a&gt;: ingest streams from external sources like RTMP, WHIP, HLS, or OBS Studio&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;SDKs &amp;amp; Tools&lt;/h2&gt; 
&lt;h3&gt;Client SDKs&lt;/h3&gt; 
&lt;p&gt;Client SDKs enable your frontend to include interactive, multi-user experiences.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Repo&lt;/th&gt; 
   &lt;th&gt; &lt;a href="https://docs.livekit.io/home/client/events/#declarative-ui" target="_blank" rel="noopener noreferrer"&gt;Declarative UI&lt;/a&gt; &lt;/th&gt; 
   &lt;th&gt;Links&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;!-- BEGIN Template
  &lt;tr&gt;
    &lt;td&gt;Language&lt;/td&gt;
    &lt;td&gt;
      &lt;a href="" target="_blank" rel="noopener noreferrer"&gt;&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;&lt;/td&gt;
    &lt;td&gt;&lt;/td&gt;
  &lt;/tr&gt;
  END --&gt; 
  &lt;!-- JavaScript --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;JavaScript (TypeScript)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-js" target="_blank" rel="noopener noreferrer"&gt;client-sdk-js&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/livekit-react" target="_blank" rel="noopener noreferrer"&gt;React&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://docs.livekit.io/client-sdk-js/" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-js/tree/main/example" target="_blank" rel="noopener noreferrer"&gt;JS example&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-js/tree/main/example" target="_blank" rel="noopener noreferrer"&gt;React example&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Swift --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Swift (iOS / MacOS)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-swift" target="_blank" rel="noopener noreferrer"&gt;client-sdk-swift&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;Swift UI&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://docs.livekit.io/client-sdk-swift/" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-example-swift" target="_blank" rel="noopener noreferrer"&gt;example&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Kotlin --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kotlin (Android)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-android" target="_blank" rel="noopener noreferrer"&gt;client-sdk-android&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;Compose&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://docs.livekit.io/client-sdk-android/index.html" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-android/tree/main/sample-app/src/main/java/io/livekit/android/sample" target="_blank" rel="noopener noreferrer"&gt;example&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-android/tree/main/sample-app-compose/src/main/java/io/livekit/android/composesample" target="_blank" rel="noopener noreferrer"&gt;Compose example&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Flutter --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Flutter (all platforms)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-flutter" target="_blank" rel="noopener noreferrer"&gt;client-sdk-flutter&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;native&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://docs.livekit.io/client-sdk-flutter/" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-flutter/tree/main/example" target="_blank" rel="noopener noreferrer"&gt;example&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Unity --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Unity WebGL&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-unity-web" target="_blank" rel="noopener noreferrer"&gt;client-sdk-unity-web&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://livekit.github.io/client-sdk-unity-web/" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- React Native --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;React Native (beta)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-react-native" target="_blank" rel="noopener noreferrer"&gt;client-sdk-react-native&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;native&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Rust --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rust&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-rust" target="_blank" rel="noopener noreferrer"&gt;client-sdk-rust&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Server SDKs&lt;/h3&gt; 
&lt;p&gt;Server SDKs enable your backend to generate &lt;a href="https://docs.livekit.io/home/get-started/authentication/"&gt;access tokens&lt;/a&gt;, call &lt;a href="https://docs.livekit.io/reference/server/server-apis/"&gt;server APIs&lt;/a&gt;, and receive &lt;a href="https://docs.livekit.io/home/server/webhooks/"&gt;webhooks&lt;/a&gt;. In addition, the Go SDK includes client capabilities, enabling you to build automations that behave like end-users.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Language&lt;/th&gt; 
   &lt;th align="left"&gt;Repo&lt;/th&gt; 
   &lt;th align="left"&gt;Docs&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Go&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/server-sdk-go"&gt;server-sdk-go&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://pkg.go.dev/github.com/livekit/server-sdk-go"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;JavaScript (TypeScript)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/server-sdk-js"&gt;server-sdk-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://docs.livekit.io/server-sdk-js/"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Ruby&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/server-sdk-ruby"&gt;server-sdk-ruby&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Java (Kotlin)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/server-sdk-kotlin"&gt;server-sdk-kotlin&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Python (community)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/python-sdks"&gt;python-sdks&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;PHP (community)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agence104/livekit-server-sdk-php"&gt;agence104/livekit-server-sdk-php&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/livekit-cli"&gt;CLI&lt;/a&gt; - command line interface &amp;amp; load tester&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/livekit/livekit-server"&gt;Docker image&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/livekit-helm"&gt;Helm charts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] We recommend installing &lt;a href="https://github.com/livekit/livekit-cli"&gt;LiveKit CLI&lt;/a&gt; along with the server. It lets you access server APIs, create tokens, and generate test traffic.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The following will install LiveKit's media server:&lt;/p&gt; 
&lt;h3&gt;MacOS&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;brew install livekit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl -sSL https://get.livekit.io | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;Download the &lt;a href="https://github.com/livekit/livekit/releases/latest"&gt;latest release here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Starting LiveKit&lt;/h3&gt; 
&lt;p&gt;Start LiveKit in development mode by running &lt;code&gt;livekit-server --dev&lt;/code&gt;. It'll use a placeholder API key/secret pair.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;API Key: devkey
API Secret: secret
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To customize your setup for production, refer to our &lt;a href="https://docs.livekit.io/deploy/"&gt;deployment docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Creating access token&lt;/h3&gt; 
&lt;p&gt;A user connecting to a LiveKit room requires an &lt;a href="https://docs.livekit.io/home/get-started/authentication/#creating-a-token"&gt;access token&lt;/a&gt;. Access tokens (JWT) encode the user's identity and the room permissions they've been granted. You can generate a token with our CLI:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;lk token create \
    --api-key devkey --api-secret secret \
    --join --room my-first-room --identity user1 \
    --valid-for 24h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Test with example app&lt;/h3&gt; 
&lt;p&gt;Head over to our &lt;a href="https://example.livekit.io"&gt;example app&lt;/a&gt; and enter a generated token to connect to your LiveKit server. This app is built with our &lt;a href="https://github.com/livekit/livekit-react"&gt;React SDK&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Once connected, your video and audio are now being published to your new LiveKit instance!&lt;/p&gt; 
&lt;h3&gt;Simulating a test publisher&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;lk room join \
    --url ws://localhost:7880 \
    --api-key devkey --api-secret secret \
    --identity bot-user1 \
    --publish-demo \
    my-first-room
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command publishes a looped demo video to a room. Due to how the video clip was encoded (keyframes every 3s), there's a slight delay before the browser has sufficient data to begin rendering frames. This is an artifact of the simulation.&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;h3&gt;Use LiveKit Cloud&lt;/h3&gt; 
&lt;p&gt;LiveKit Cloud is the fastest and most reliable way to run LiveKit. Every project gets free monthly bandwidth and transcoding credits.&lt;/p&gt; 
&lt;p&gt;Sign up for &lt;a href="https://cloud.livekit.io/"&gt;LiveKit Cloud&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Self-host&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href="https://docs.livekit.io/deploy/"&gt;deployment docs&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;Pre-requisites:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go 1.23+ is installed&lt;/li&gt; 
 &lt;li&gt;GOPATH/bin is in your PATH&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/livekit/livekit
cd livekit
./bootstrap.sh
mage
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome your contributions toward improving LiveKit! Please join us &lt;a href="http://livekit.io/join-slack"&gt;on Slack&lt;/a&gt; to discuss your ideas and/or PRs.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;LiveKit server is licensed under Apache License v2.0.&lt;/p&gt; 
&lt;!--BEGIN_REPO_NAV--&gt; 
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table&gt; 
 &lt;thead&gt;
  &lt;tr&gt;
   &lt;th colspan="2"&gt;LiveKit Ecosystem&lt;/th&gt;
  &lt;/tr&gt;
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt;
   &lt;td&gt;LiveKit SDKs&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://github.com/livekit/client-sdk-js"&gt;Browser&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-swift"&gt;iOS/macOS/visionOS&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-android"&gt;Android&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-flutter"&gt;Flutter&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-react-native"&gt;React Native&lt;/a&gt; · &lt;a href="https://github.com/livekit/rust-sdks"&gt;Rust&lt;/a&gt; · &lt;a href="https://github.com/livekit/node-sdks"&gt;Node.js&lt;/a&gt; · &lt;a href="https://github.com/livekit/python-sdks"&gt;Python&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-unity"&gt;Unity&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-unity-web"&gt;Unity (WebGL)&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-esp32"&gt;ESP32&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;Server APIs&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://github.com/livekit/node-sdks"&gt;Node.js&lt;/a&gt; · &lt;a href="https://github.com/livekit/server-sdk-go"&gt;Golang&lt;/a&gt; · &lt;a href="https://github.com/livekit/server-sdk-ruby"&gt;Ruby&lt;/a&gt; · &lt;a href="https://github.com/livekit/server-sdk-kotlin"&gt;Java/Kotlin&lt;/a&gt; · &lt;a href="https://github.com/livekit/python-sdks"&gt;Python&lt;/a&gt; · &lt;a href="https://github.com/livekit/rust-sdks"&gt;Rust&lt;/a&gt; · &lt;a href="https://github.com/agence104/livekit-server-sdk-php"&gt;PHP (community)&lt;/a&gt; · &lt;a href="https://github.com/pabloFuente/livekit-server-sdk-dotnet"&gt;.NET (community)&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;UI Components&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://github.com/livekit/components-js"&gt;React&lt;/a&gt; · &lt;a href="https://github.com/livekit/components-android"&gt;Android Compose&lt;/a&gt; · &lt;a href="https://github.com/livekit/components-swift"&gt;SwiftUI&lt;/a&gt; · &lt;a href="https://github.com/livekit/components-flutter"&gt;Flutter&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;Agents Frameworks&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://github.com/livekit/agents"&gt;Python&lt;/a&gt; · &lt;a href="https://github.com/livekit/agents-js"&gt;Node.js&lt;/a&gt; · &lt;a href="https://github.com/livekit/agent-playground"&gt;Playground&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;Services&lt;/td&gt;
   &lt;td&gt;&lt;b&gt;LiveKit server&lt;/b&gt; · &lt;a href="https://github.com/livekit/egress"&gt;Egress&lt;/a&gt; · &lt;a href="https://github.com/livekit/ingress"&gt;Ingress&lt;/a&gt; · &lt;a href="https://github.com/livekit/sip"&gt;SIP&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;Resources&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://docs.livekit.io"&gt;Docs&lt;/a&gt; · &lt;a href="https://github.com/livekit-examples"&gt;Example apps&lt;/a&gt; · &lt;a href="https://livekit.io/cloud"&gt;Cloud&lt;/a&gt; · &lt;a href="https://docs.livekit.io/home/self-hosting/deployment"&gt;Self-hosting&lt;/a&gt; · &lt;a href="https://github.com/livekit/livekit-cli"&gt;CLI&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!--END_REPO_NAV--&gt;</description>
    </item>
    
    <item>
      <title>ibnaleem/gosearch</title>
      <link>https://github.com/ibnaleem/gosearch</link>
      <description>&lt;p&gt;🔍 Search anyone's digital footprint across 300+ websites&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ibnaleem/gosearch/main/img/gosearch-logo.png" height="50%" width="50%" /&gt;&lt;br /&gt; &lt;i&gt;This project heavily relies on contributors, please see &lt;a href="https://raw.githubusercontent.com/ibnaleem/gosearch/main/#contributing"&gt;Contributing&lt;/a&gt; for more details.&lt;/i&gt;&lt;br /&gt; &lt;code&gt;go install github.com/ibnaleem/gosearch@latest&lt;/code&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://github.com/ibnaleem/gosearch/actions/workflows/go.yml/badge.svg?event=push" alt="GitHub Actions Badge" /&gt; &lt;img src="https://img.shields.io/github/last-commit/ibnaleem/gosearch" /&gt; &lt;img src="https://img.shields.io/github/commit-activity/w/ibnaleem/gosearch" /&gt; &lt;img src="https://img.shields.io/github/contributors/ibnaleem/gosearch" /&gt; &lt;img alt="Number of websites" src="https://img.shields.io/badge/websites-305-blue" /&gt; &lt;img alt="GitHub repo size" src="https://img.shields.io/github/repo-size/ibnaleem/gosearch" /&gt; &lt;img alt="GitHub License" src="https://img.shields.io/github/license/ibnaleem/gosearch" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ibnaleem/gosearch/main/img/1.png" height="80%" width="80%" /&gt;&lt;br /&gt; &lt;img src="https://raw.githubusercontent.com/ibnaleem/gosearch/main/img/2.png" height="80%" width="80%" /&gt;&lt;br /&gt; &lt;img src="https://raw.githubusercontent.com/ibnaleem/gosearch/main/img/3.png" height="80%" width="80%" /&gt;&lt;br /&gt; &lt;img src="https://raw.githubusercontent.com/ibnaleem/gosearch/main/img/4.png" height="80%" width="80%" /&gt;&lt;br /&gt; &lt;/p&gt; 
&lt;p&gt;You don't have time searching every profile with a username. Instead, you can leverage concurrency and a binary that does the work for you, and then some.&lt;/p&gt; 
&lt;p&gt;I initially wrote this project to learn Go, an upcoming programming language used for backend services. I decided to create a Sherlock clone, addressing some of its faults, limitations, and adding more features. This eventually led to a community driven OSINT tool that was &lt;a href="https://osintnewsletter.com/p/62"&gt;praised in the OSINT letter.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;GoSearch isn't limited to searching websites; it can search &lt;strong&gt;900k leaked credentials&lt;/strong&gt; from &lt;a href="https://cavalier.hudsonrock.com/api/json/v2/osint-tools/search-by-username?username=mrrobot"&gt;HudsonRock's Cybercrime Intelligence API&lt;/a&gt;, over &lt;strong&gt;3.2 billion leaked credentials&lt;/strong&gt; from &lt;a href="https://www.proxynova.com/tools/comb/"&gt;ProxyNova's Combination Of Many Breaches API&lt;/a&gt;, and &lt;strong&gt;18 billion leaked credentials&lt;/strong&gt; from BreachDirectory.org with an API key (see &lt;a href="https://raw.githubusercontent.com/ibnaleem/gosearch/main/#use-cases"&gt;Use Cases&lt;/a&gt;)&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; If you are on 32-bit architecture, please &lt;a href="https://github.com/ibnaleem/gosearch/tree/32-bit"&gt;use this branch&lt;/a&gt; or GoSearch will fail to build. For an in-depth overview of this issue, please see &lt;a href="https://github.com/ibnaleem/gosearch/issues/72"&gt;#72&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; If you're using Windows Defender, it might mistakenly flag GoSearch as malware. Rest assured, GoSearch is not malicious; you can review the full source code yourself to verify this. For an in-depth overview of this issue, please see &lt;a href="https://github.com/ibnaleem/gosearch/issues/90"&gt;#90&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;$ go install github.com/ibnaleem/gosearch@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Unix:&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;$ gosearch -u [username]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;C:\Users\Bob&amp;gt; gosearch.exe -u [username]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Use Cases&lt;/h2&gt; 
&lt;p&gt;Ideally, it is best practice to run GoSearch with the &lt;code&gt;--no-false-positives&lt;/code&gt; flag:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ gosearch -u [USERNAME] --no-false-positives
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will display profiles GoSearch is confident exist on a website. GoSearch also allows you to search &lt;a href="https://breachdirectory.org"&gt;BreachDirectory&lt;/a&gt; for compromised passwords associated with a specific username. For this, you must &lt;a href="https://rapidapi.com/rohan-patra/api/breachdirectory"&gt;obtain an API key&lt;/a&gt; and provide it with the &lt;code&gt;-b&lt;/code&gt; flag:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ gosearch -u [USERNAME] -b [API-KEY] --no-false-positives
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If GoSearch finds password hashes, it will attempt to crack them using &lt;a href="https://weakpass.com"&gt;Weakpass&lt;/a&gt;. The success rate is nearly 100%, as Weakpass uses a large wordlist of common data-wells, which align with the breaches reported by &lt;a href="https://breachdirectory.org"&gt;BreachDirectory&lt;/a&gt;. Every single password hash that's been found in &lt;a href="https://breachdirectory.org"&gt;BreachDirectory&lt;/a&gt; has been cracked by &lt;a href="https://weakpass.com"&gt;Weakpass&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you're not using BreachDirectory, GoSearch will search for breaches on HudsonRock's Cybercrime Intelligence &amp;amp; ProxyNova's Databases, respectively. It will also search common TLDs for any domains associated with a given username. This is done whether BreachDirectory is searched or not.&lt;/p&gt; 
&lt;h2&gt;I Don't Have a Username&lt;/h2&gt; 
&lt;p&gt;If you're uncertain about a person's username, you could try generating some by using &lt;a href="https://github.com/urbanadventurer/username-anarchy"&gt;urbanadventurer/username-anarchy&lt;/a&gt;. Note that &lt;code&gt;username-anarchy&lt;/code&gt; can only run in Unix terminals (Mac/Linux)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/urbanadventurer/username-anarchy
$ cd username-anarchy
$ (username-anarchy) ./username-anarchy firstname lastname
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Why &lt;code&gt;GoSearch&lt;/code&gt;?&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;GoSearch&lt;/code&gt; is inspired by &lt;a href="https://github.com/sherlock-project/sherlock"&gt;Sherlock&lt;/a&gt;, a popular username search tool. However, &lt;code&gt;GoSearch&lt;/code&gt; improves upon Sherlock by addressing several of its key limitations:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Sherlock is Python-based, which makes it slower compared to Go.&lt;/li&gt; 
 &lt;li&gt;Sherlock is outdated and lacks updates.&lt;/li&gt; 
 &lt;li&gt;Sherlock sometimes reports false positives as valid results.&lt;/li&gt; 
 &lt;li&gt;Sherlock frequently misses actual usernames, leading to false negatives.&lt;/li&gt; 
 &lt;li&gt;Sherlock does not search HudsonRock's Cybercrime Intelligence database&lt;/li&gt; 
 &lt;li&gt;Sherlock does not search ProxyNova's database&lt;/li&gt; 
 &lt;li&gt;Sherlock does not search BreachDirectory's database&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The primary issue with Sherlock is false negatives—when a username exists on a platform but is not detected. The secondary issue is false positives, where a username is incorrectly flagged as available. &lt;code&gt;GoSearch&lt;/code&gt; tackles these problems by colour-coding uncertain results as yellow which indicates potential false positives. This allows users to easily filter out irrelevant links.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href="https://github.com/ibnaleem/gosearch/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md.&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/ibnaleem"&gt;&lt;img alt="ibnaleem" src="https://avatars.githubusercontent.com/u/134088573?v=4" width="117" /&gt;&lt;br /&gt;ibnaleem&lt;/a&gt;&lt;/td&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/shelepuginivan"&gt;&lt;img alt="shelepuginivan" src="https://avatars.githubusercontent.com/u/110753839?v=4" width="117" /&gt;&lt;br /&gt;shelepuginivan&lt;/a&gt;&lt;/td&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/arealibusadrealiora"&gt;&lt;img alt="arealibusadrealiora" src="https://avatars.githubusercontent.com/u/113445322?v=4" width="117" /&gt;&lt;br /&gt;arealibusadrealiora&lt;/a&gt;&lt;/td&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/AtahanPoyraz"&gt;&lt;img alt="AtahanPoyraz" src="https://avatars.githubusercontent.com/u/129458900?v=4" width="117" /&gt;&lt;br /&gt;AtahanPoyraz&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/vickychhetri"&gt;&lt;img alt="vickychhetri" src="https://avatars.githubusercontent.com/u/82648574?v=4" width="117" /&gt;&lt;br /&gt;vickychhetri&lt;/a&gt;&lt;/td&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/olekukonko"&gt;&lt;img alt="olekukonko" src="https://avatars.githubusercontent.com/u/2615393?v=4" width="117" /&gt;&lt;br /&gt;olekukonko&lt;/a&gt;&lt;/td&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/CptIdea"&gt;&lt;img alt="CptIdea" src="https://avatars.githubusercontent.com/u/59538729?v=4" width="117" /&gt;&lt;br /&gt;CptIdea&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/anotherhadi"&gt;&lt;img alt="anotherhadi" src="https://avatars.githubusercontent.com/u/112569860?v=4" width="117" /&gt;&lt;br /&gt;anotherhadi&lt;/a&gt;&lt;/td&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/paulpogoda"&gt;&lt;img alt="paulpogoda" src="https://avatars.githubusercontent.com/u/170966925?v=4" width="117" /&gt;&lt;br /&gt;paulpogoda&lt;/a&gt;&lt;/td&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/apps/dependabot"&gt;&lt;img alt="dependabot[bot]" src="https://avatars.githubusercontent.com/in/29110?v=4" width="117" /&gt;&lt;br /&gt;dependabot[bot]&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;LICENSE&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the GNU General Public License - see the &lt;a href="https://github.com/ibnaleem/gosearch/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://buymeacoffee.com/gosearch"&gt;&lt;img src="https://img.shields.io/badge/Buy%20Me%20a%20Coffee-ffdd00?style=for-the-badge&amp;amp;logo=buy-me-a-coffee&amp;amp;logoColor=black" alt="BuyMeACoffee" /&gt;&lt;/a&gt; &lt;a href="https://thanks.dev/u/gh/ibnaleem"&gt;&lt;img src="https://img.shields.io/badge/thanks.dev-0a0a0a?style=for-the-badge&amp;amp;logo=tv-time&amp;amp;logoColor=white" alt="Thanks.dev" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Bitcoin&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;bc1qjrtyq8m7urapu7cvmvrrs6m7qkh2jpn5wqezfl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Stargazers Over Time&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/ibnaleem/gosearch"&gt;&lt;img src="https://starchart.cc/ibnaleem/gosearch.svg?variant=adaptive" alt="Stargazers over time" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cli/cli</title>
      <link>https://github.com/cli/cli</link>
      <description>&lt;p&gt;GitHub’s official command line tool&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub CLI&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;gh&lt;/code&gt; is GitHub on the command line. It brings pull requests, issues, and other GitHub concepts to the terminal next to where you are already working with &lt;code&gt;git&lt;/code&gt; and your code.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/98482/84171218-327e7a80-aa40-11ea-8cd1-5177fc2d0e72.png" alt="screenshot of gh pr status" /&gt;&lt;/p&gt; 
&lt;p&gt;GitHub CLI is supported for users on GitHub.com, GitHub Enterprise Cloud, and GitHub Enterprise Server 2.20+ with support for macOS, Windows, and Linux.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/#installation"&gt;installation options see below&lt;/a&gt;, for usage instructions &lt;a href="https://cli.github.com/manual/"&gt;see the manual&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If anything feels off or if you feel that some functionality is missing, please check out the &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/.github/CONTRIBUTING.md"&gt;contributing page&lt;/a&gt;. There you will find instructions for sharing your feedback, building the tool locally, and submitting pull requests to the project.&lt;/p&gt; 
&lt;p&gt;If you are a hubber and are interested in shipping new commands for the CLI, check out our &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/working-with-us.md"&gt;doc on internal contributions&lt;/a&gt;&lt;/p&gt; 
&lt;!-- this anchor is linked to from elsewhere, so avoid renaming it --&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_macos.md"&gt;macOS&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_macos.md#homebrew"&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_macos.md#precompiled-binaries"&gt;Precompiled binaries&lt;/a&gt; on &lt;a href="https://github.com/cli/cli/releases/latest"&gt;releases page&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For additional macOS packages and installers, see &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_macos.md#community-unofficial"&gt;community-supported docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_linux.md"&gt;Linux &amp;amp; Unix&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_linux.md#debian"&gt;Debian, Raspberry Pi, Ubuntu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_linux.md#rpm"&gt;Amazon Linux, CentOS, Fedora, openSUSE, RHEL, SUSE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_linux.md#precompiled-binaries"&gt;Precompiled binaries&lt;/a&gt; on &lt;a href="https://github.com/cli/cli/releases/latest"&gt;releases page&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For additional Linux &amp;amp; Unix packages and installers, see &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_linux.md#community-unofficial"&gt;community-supported docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_windows.md"&gt;Windows&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_windows.md#winget"&gt;WinGet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_windows.md#precompiled-binaries"&gt;Precompiled binaries&lt;/a&gt; on &lt;a href="https://github.com/cli/cli/releases/latest"&gt;releases page&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For additional Windows packages and installers, see &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_windows.md#community-unofficial"&gt;community-supported docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Build from source&lt;/h3&gt; 
&lt;p&gt;See here on how to &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_source.md"&gt;build GitHub CLI from source&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;GitHub Codespaces&lt;/h3&gt; 
&lt;p&gt;To add GitHub CLI to your codespace, add the following to your &lt;a href="https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/adding-features-to-a-devcontainer-file"&gt;devcontainer file&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;"features": {
  "ghcr.io/devcontainers/features/github-cli:1": {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;GitHub Actions&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners"&gt;GitHub-hosted runners&lt;/a&gt; have the GitHub CLI pre-installed, which is updated weekly.&lt;/p&gt; 
&lt;p&gt;If a specific version is needed, your GitHub Actions workflow will need to install it based on the &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/#macos"&gt;macOS&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/#linux--unix"&gt;Linux &amp;amp; Unix&lt;/a&gt;, or &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/#windows"&gt;Windows&lt;/a&gt; instructions above.&lt;/p&gt; 
&lt;p&gt;For information on all pre-installed tools, see &lt;a href="https://github.com/actions/runner-images"&gt;&lt;code&gt;actions/runner-images&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Verification of binaries&lt;/h3&gt; 
&lt;p&gt;Since version 2.50.0, &lt;code&gt;gh&lt;/code&gt; has been producing &lt;a href="https://github.blog/changelog/2024-06-25-artifact-attestations-is-generally-available/"&gt;Build Provenance Attestation&lt;/a&gt;, enabling a cryptographically verifiable paper-trail back to the origin GitHub repository, git revision, and build instructions used. The build provenance attestations are signed and rely on Public Good &lt;a href="https://www.sigstore.dev/"&gt;Sigstore&lt;/a&gt; for PKI.&lt;/p&gt; 
&lt;p&gt;There are two common ways to verify a downloaded release, depending on whether &lt;code&gt;gh&lt;/code&gt; is already installed or not. If &lt;code&gt;gh&lt;/code&gt; is installed, it's trivial to verify a new release:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Option 1: Using &lt;code&gt;gh&lt;/code&gt; if already installed:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;$ gh at verify -R cli/cli gh_2.62.0_macOS_arm64.zip
Loaded digest sha256:fdb77f31b8a6dd23c3fd858758d692a45f7fc76383e37d475bdcae038df92afc for file://gh_2.62.0_macOS_arm64.zip
Loaded 1 attestation from GitHub API
✓ Verification succeeded!

sha256:fdb77f31b8a6dd23c3fd858758d692a45f7fc76383e37d475bdcae038df92afc was attested by:
REPO     PREDICATE_TYPE                  WORKFLOW
cli/cli  https://slsa.dev/provenance/v1  .github/workflows/deployment.yml@refs/heads/trunk
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Option 2: Using Sigstore &lt;a href="https://github.com/sigstore/cosign"&gt;&lt;code&gt;cosign&lt;/code&gt;&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;To perform this, download the &lt;a href="https://github.com/cli/cli/attestations"&gt;attestation&lt;/a&gt; for the downloaded release and use cosign to verify the authenticity of the downloaded release:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;$ cosign verify-blob-attestation --bundle cli-cli-attestation-3120304.sigstore.json \
      --new-bundle-format \
      --certificate-oidc-issuer="https://token.actions.githubusercontent.com" \
      --certificate-identity="https://github.com/cli/cli/.github/workflows/deployment.yml@refs/heads/trunk" \
      gh_2.62.0_macOS_arm64.zip
Verified OK
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Comparison with hub&lt;/h2&gt; 
&lt;p&gt;For many years, &lt;a href="https://github.com/github/hub"&gt;hub&lt;/a&gt; was the unofficial GitHub CLI tool. &lt;code&gt;gh&lt;/code&gt; is a new project that helps us explore what an official GitHub CLI tool can look like with a fundamentally different design. While both tools bring GitHub to the terminal, &lt;code&gt;hub&lt;/code&gt; behaves as a proxy to &lt;code&gt;git&lt;/code&gt;, and &lt;code&gt;gh&lt;/code&gt; is a standalone tool. Check out our &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/gh-vs-hub.md"&gt;more detailed explanation&lt;/a&gt; to learn more.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>aquasecurity/trivy</title>
      <link>https://github.com/aquasecurity/trivy</link>
      <description>&lt;p&gt;Find vulnerabilities, misconfigurations, secrets, SBOM in containers, Kubernetes, code repositories, clouds and more&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/aquasecurity/trivy/main/docs/imgs/logo.png" width="200" /&gt; 
 &lt;p&gt;&lt;a href="https://github.com/aquasecurity/trivy/releases"&gt;&lt;img src="https://img.shields.io/github/release/aquasecurity/trivy.svg?logo=github" alt="GitHub Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/actions/workflows/test.yaml"&gt;&lt;img src="https://github.com/aquasecurity/trivy/actions/workflows/test.yaml/badge.svg?sanitize=true" alt="Test" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/aquasecurity/trivy"&gt;&lt;img src="https://goreportcard.com/badge/github.com/aquasecurity/trivy" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License: Apache-2.0" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/aquasecurity/trivy/total?logo=github" alt="GitHub Downloads" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/docker/pulls/aquasec/trivy?logo=docker&amp;amp;label=docker%20pulls%20%2F%20trivy" alt="Docker Pulls" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://trivy.dev/latest/docs/"&gt;📖 Documentation&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Trivy (&lt;a href="https://raw.githubusercontent.com/aquasecurity/trivy/main/#how-to-pronounce-the-name-trivy"&gt;pronunciation&lt;/a&gt;) is a comprehensive and versatile security scanner. Trivy has &lt;em&gt;scanners&lt;/em&gt; that look for security issues, and &lt;em&gt;targets&lt;/em&gt; where it can find those issues.&lt;/p&gt; 
&lt;p&gt;Targets (what Trivy can scan):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Container Image&lt;/li&gt; 
 &lt;li&gt;Filesystem&lt;/li&gt; 
 &lt;li&gt;Git Repository (remote)&lt;/li&gt; 
 &lt;li&gt;Virtual Machine Image&lt;/li&gt; 
 &lt;li&gt;Kubernetes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Scanners (what Trivy can find there):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OS packages and software dependencies in use (SBOM)&lt;/li&gt; 
 &lt;li&gt;Known vulnerabilities (CVEs)&lt;/li&gt; 
 &lt;li&gt;IaC issues and misconfigurations&lt;/li&gt; 
 &lt;li&gt;Sensitive information and secrets&lt;/li&gt; 
 &lt;li&gt;Software licenses&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Trivy supports most popular programming languages, operating systems, and platforms. For a complete list, see the &lt;a href="https://trivy.dev/latest/docs/coverage/"&gt;Scanning Coverage&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;To learn more, go to the &lt;a href="https://trivy.dev"&gt;Trivy homepage&lt;/a&gt; for feature highlights, or to the &lt;a href="https://trivy.dev/latest/docs/"&gt;Documentation site&lt;/a&gt; for detailed information.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Get Trivy&lt;/h3&gt; 
&lt;p&gt;Trivy is available in most common distribution channels. The full list of installation options is available in the &lt;a href="https://trivy.dev/latest/getting-started/installation/"&gt;Installation&lt;/a&gt; page. Here are a few popular examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;brew install trivy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;docker run aquasec/trivy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Download binary from &lt;a href="https://github.com/aquasecurity/trivy/releases/latest/"&gt;https://github.com/aquasecurity/trivy/releases/latest/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://trivy.dev/latest/getting-started/installation/"&gt;Installation&lt;/a&gt; for more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Trivy is integrated with many popular platforms and applications. The complete list of integrations is available in the &lt;a href="https://trivy.dev/latest/ecosystem/"&gt;Ecosystem&lt;/a&gt; page. Here are a few popular examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-action"&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-operator"&gt;Kubernetes operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-vscode-extension"&gt;VS Code plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://trivy.dev/latest/ecosystem/"&gt;Ecosystem&lt;/a&gt; for more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Canary builds&lt;/h3&gt; 
&lt;p&gt;There are canary builds (&lt;a href="https://hub.docker.com/r/aquasec/trivy/tags?page=1&amp;amp;name=canary"&gt;Docker Hub&lt;/a&gt;, &lt;a href="https://github.com/aquasecurity/trivy/pkgs/container/trivy/75776514?tag=canary"&gt;GitHub&lt;/a&gt;, &lt;a href="https://gallery.ecr.aws/aquasecurity/trivy#canary"&gt;ECR&lt;/a&gt; images and &lt;a href="https://github.com/aquasecurity/trivy/actions/workflows/canary.yaml"&gt;binaries&lt;/a&gt;) as generated every push to main branch.&lt;/p&gt; 
&lt;p&gt;Please be aware: canary builds might have critical bugs, it's not recommended for use in production.&lt;/p&gt; 
&lt;h3&gt;General usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy &amp;lt;target&amp;gt; [--scanners &amp;lt;scanner1,scanner2&amp;gt;] &amp;lt;subject&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy image python:3.4-alpine
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/1161307/171013513-95f18734-233d-45d3-aaf5-d6aec687db0e.mov"&gt;https://user-images.githubusercontent.com/1161307/171013513-95f18734-233d-45d3-aaf5-d6aec687db0e.mov&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy fs --scanners vuln,secret,misconfig myproject/
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/1161307/171013917-b1f37810-f434-465c-b01a-22de036bd9b3.mov"&gt;https://user-images.githubusercontent.com/1161307/171013917-b1f37810-f434-465c-b01a-22de036bd9b3.mov&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy k8s --report summary cluster
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/aquasecurity/trivy/main/docs/imgs/trivy-k8s.png" alt="k8s summary" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;How to pronounce the name "Trivy"?&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;tri&lt;/code&gt; is pronounced like &lt;strong&gt;tri&lt;/strong&gt;gger, &lt;code&gt;vy&lt;/code&gt; is pronounced like en&lt;strong&gt;vy&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Want more? Check out Aqua&lt;/h2&gt; 
&lt;p&gt;If you liked Trivy, you will love Aqua which builds on top of Trivy to provide even more enhanced capabilities for a complete security management offering.&lt;br /&gt; You can find a high level comparison table specific to Trivy users &lt;a href="https://trivy.dev/latest/commercial/compare/"&gt;here&lt;/a&gt;. In addition check out the &lt;a href="https://aquasec.com"&gt;https://aquasec.com&lt;/a&gt; website for more information about our products and services. If you'd like to contact Aqua or request a demo, please use this form: &lt;a href="https://www.aquasec.com/demo"&gt;https://www.aquasec.com/demo&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Trivy is an &lt;a href="https://aquasec.com"&gt;Aqua Security&lt;/a&gt; open source project.&lt;br /&gt; Learn about our open source work and portfolio &lt;a href="https://www.aquasec.com/products/open-source-projects/"&gt;here&lt;/a&gt;.&lt;br /&gt; Contact us about any matter by opening a GitHub Discussion &lt;a href="https://github.com/aquasecurity/trivy/discussions"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please ensure to abide by our &lt;a href="https://github.com/aquasecurity/community/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; during all interactions.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>