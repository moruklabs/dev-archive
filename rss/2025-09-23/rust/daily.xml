<rss version="2.0">
  <channel>
    <title>GitHub Rust Daily Trending</title>
    <description>Daily Trending of Rust in GitHub</description>
    <pubDate>Mon, 22 Sep 2025 01:36:46 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>iced-rs/iced</title>
      <link>https://github.com/iced-rs/iced</link>
      <description>&lt;p&gt;A cross-platform GUI library for Rust, inspired by Elm&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/iced-rs/iced/master/docs/logo.svg?sanitize=true" width="140px" /&gt; 
 &lt;h1&gt;Iced&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://docs.rs/iced/"&gt;&lt;img src="https://docs.rs/iced/badge.svg?sanitize=true" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/iced"&gt;&lt;img src="https://img.shields.io/crates/v/iced.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://github.com/iced-rs/iced/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/crates/l/iced.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/iced"&gt;&lt;img src="https://img.shields.io/crates/d/iced.svg?sanitize=true" alt="Downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/iced-rs/iced/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/iced-rs/iced/test.yml?branch=master&amp;amp;event=push&amp;amp;label=test" alt="Test Status" /&gt;&lt;/a&gt; &lt;a href="https://discourse.iced.rs/"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscourse.iced.rs%2Fsite%2Fstatistics.json&amp;amp;query=%24.users_count&amp;amp;suffix=%20users&amp;amp;label=discourse&amp;amp;color=5e7ce2" alt="Discourse" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/3xZJ65GAhd"&gt;&lt;img src="https://img.shields.io/discord/628993209984614400?label=&amp;amp;labelColor=6A7EC2&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8" alt="Discord Server" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;A cross-platform GUI library for Rust focused on simplicity and type-safety. Inspired by &lt;a href="https://elm-lang.org/"&gt;Elm&lt;/a&gt;.&lt;/p&gt; 
 &lt;a href="https://github.com/squidowl/halloy"&gt; &lt;img src="https://iced.rs/showcase/halloy.gif" width="460px" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/hecrj/icebreaker"&gt; &lt;img src="https://iced.rs/showcase/icebreaker.gif" width="360px" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simple, easy-to-use, batteries-included API&lt;/li&gt; 
 &lt;li&gt;Type-safe, reactive programming model&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/docs/images/todos_desktop.jpg"&gt;Cross-platform support&lt;/a&gt; (Windows, macOS, Linux, and the Web)&lt;/li&gt; 
 &lt;li&gt;Responsive layout&lt;/li&gt; 
 &lt;li&gt;Built-in widgets (including &lt;a href="https://iced.rs/examples/text_input.mp4"&gt;text inputs&lt;/a&gt;, &lt;a href="https://iced.rs/examples/scrollable.mp4"&gt;scrollables&lt;/a&gt;, and more!)&lt;/li&gt; 
 &lt;li&gt;Custom widget support (create your own!)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://iced.rs/examples/debug.mp4"&gt;Debug overlay with performance metrics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;First-class support for async actions (use futures!)&lt;/li&gt; 
 &lt;li&gt;Modular ecosystem split into reusable parts: 
  &lt;ul&gt; 
   &lt;li&gt;A &lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/runtime/"&gt;renderer-agnostic native runtime&lt;/a&gt; enabling integration with existing systems&lt;/li&gt; 
   &lt;li&gt;Two built-in renderers leveraging &lt;a href="https://github.com/gfx-rs/wgpu"&gt;&lt;code&gt;wgpu&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/RazrFalcon/tiny-skia"&gt;&lt;code&gt;tiny-skia&lt;/code&gt;&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/wgpu/"&gt;&lt;code&gt;iced_wgpu&lt;/code&gt;&lt;/a&gt; supporting Vulkan, Metal and DX12&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/tiny_skia/"&gt;&lt;code&gt;iced_tiny_skia&lt;/code&gt;&lt;/a&gt; offering a software alternative as a fallback&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;A &lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/winit/"&gt;windowing shell&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Iced is currently experimental software.&lt;/strong&gt; &lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/ROADMAP.md"&gt;Take a look at the roadmap&lt;/a&gt; and &lt;a href="https://github.com/iced-rs/iced/issues"&gt;check out the issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Inspired by &lt;a href="https://guide.elm-lang.org/architecture/"&gt;The Elm Architecture&lt;/a&gt;, Iced expects you to split user interfaces into four different concepts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;State&lt;/strong&gt; — the state of your application&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Messages&lt;/strong&gt; — user interactions or meaningful events that you care about&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;View logic&lt;/strong&gt; — a way to display your &lt;strong&gt;state&lt;/strong&gt; as widgets that may produce &lt;strong&gt;messages&lt;/strong&gt; on user interaction&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Update logic&lt;/strong&gt; — a way to react to &lt;strong&gt;messages&lt;/strong&gt; and update your &lt;strong&gt;state&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We can build something to see how this works! Let's say we want a simple counter that can be incremented and decremented using two buttons.&lt;/p&gt; 
&lt;p&gt;We start by modelling the &lt;strong&gt;state&lt;/strong&gt; of our application:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;#[derive(Default)]
struct Counter {
    value: i32,
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, we need to define the possible user interactions of our counter: the button presses. These interactions are our &lt;strong&gt;messages&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;#[derive(Debug, Clone, Copy)]
pub enum Message {
    Increment,
    Decrement,
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, let's show the actual counter by putting it all together in our &lt;strong&gt;view logic&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;use iced::widget::{button, column, text, Column};

impl Counter {
    pub fn view(&amp;amp;self) -&amp;gt; Column&amp;lt;Message&amp;gt; {
        // We use a column: a simple vertical layout
        column![
            // The increment button. We tell it to produce an
            // `Increment` message when pressed
            button("+").on_press(Message::Increment),

            // We show the value of the counter here
            text(self.value).size(50),

            // The decrement button. We tell it to produce a
            // `Decrement` message when pressed
            button("-").on_press(Message::Decrement),
        ]
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, we need to be able to react to any produced &lt;strong&gt;messages&lt;/strong&gt; and change our &lt;strong&gt;state&lt;/strong&gt; accordingly in our &lt;strong&gt;update logic&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;impl Counter {
    // ...

    pub fn update(&amp;amp;mut self, message: Message) {
        match message {
            Message::Increment =&amp;gt; {
                self.value += 1;
            }
            Message::Decrement =&amp;gt; {
                self.value -= 1;
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And that's everything! We just wrote a whole user interface. Let's run it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;fn main() -&amp;gt; iced::Result {
    iced::run("A cool counter", Counter::update, Counter::view)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Iced will automatically:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Take the result of our &lt;strong&gt;view logic&lt;/strong&gt; and layout its widgets.&lt;/li&gt; 
 &lt;li&gt;Process events from our system and produce &lt;strong&gt;messages&lt;/strong&gt; for our &lt;strong&gt;update logic&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Draw the resulting user interface.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Read the &lt;a href="https://book.iced.rs/"&gt;book&lt;/a&gt;, the &lt;a href="https://docs.rs/iced/"&gt;documentation&lt;/a&gt;, and the &lt;a href="https://github.com/iced-rs/iced/tree/master/examples#examples"&gt;examples&lt;/a&gt; to learn more!&lt;/p&gt; 
&lt;h2&gt;Implementation details&lt;/h2&gt; 
&lt;p&gt;Iced was originally born as an attempt at bringing the simplicity of &lt;a href="https://elm-lang.org/"&gt;Elm&lt;/a&gt; and &lt;a href="https://guide.elm-lang.org/architecture/"&gt;The Elm Architecture&lt;/a&gt; into &lt;a href="https://github.com/hecrj/coffee"&gt;Coffee&lt;/a&gt;, a 2D game library I am working on.&lt;/p&gt; 
&lt;p&gt;The core of the library was implemented during May 2019 in &lt;a href="https://github.com/hecrj/coffee/pull/35"&gt;this pull request&lt;/a&gt;. &lt;a href="https://github.com/iced-rs/iced/tree/0.1.0-alpha"&gt;The first alpha version&lt;/a&gt; was eventually released as &lt;a href="https://www.reddit.com/r/rust/comments/czzjnv/iced_a_rendereragnostic_gui_library_focused_on/"&gt;a renderer-agnostic GUI library&lt;/a&gt;. The library did not provide a renderer and implemented the current &lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/examples/README.md#tour"&gt;tour example&lt;/a&gt; on top of &lt;a href="https://github.com/ggez/ggez"&gt;&lt;code&gt;ggez&lt;/code&gt;&lt;/a&gt;, a game library.&lt;/p&gt; 
&lt;p&gt;Since then, the focus has shifted towards providing a batteries-included, end-user-oriented GUI library, while keeping the ecosystem modular.&lt;/p&gt; 
&lt;h2&gt;Contributing / Feedback&lt;/h2&gt; 
&lt;p&gt;If you want to contribute, please read our &lt;a href="https://github.com/iced-rs/iced/raw/master/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;Feedback is also welcome! You can create a new topic in &lt;a href="https://discourse.iced.rs/"&gt;our Discourse forum&lt;/a&gt; or come chat to &lt;a href="https://discord.gg/3xZJ65GAhd"&gt;our Discord server&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;The development of Iced is sponsored by the &lt;a href="https://cryptowat.ch/charts"&gt;Cryptowatch&lt;/a&gt; team at &lt;a href="https://kraken.com/"&gt;Kraken.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linera-io/linera-protocol</title>
      <link>https://github.com/linera-io/linera-protocol</link>
      <description>&lt;p&gt;Main repository for the Linera protocol&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src="https://github.com/linera-io/linera-protocol/assets/1105398/fe08c941-93af-4114-bb83-bcc0eaec95f9" width="250" height="85" /&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/linera-io/linera-protocol/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/linera-io/linera-protocol" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://github.com/linera-io/linera-protocol/actions/workflows/docker-compose.yml"&gt;&lt;img src="https://github.com/linera-io/linera-protocol/actions/workflows/docker-compose.yml/badge.svg?sanitize=true" alt="Build Status for Docker" /&gt;&lt;/a&gt; &lt;a href="https://github.com/linera-io/linera-protocol/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/linera-io/linera-protocol/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="Build Status for Rust" /&gt;&lt;/a&gt; &lt;a href="https://github.com/linera-io/linera-protocol/actions/workflows/documentation.yml"&gt;&lt;img src="https://github.com/linera-io/linera-protocol/actions/workflows/documentation.yml/badge.svg?sanitize=true" alt="Build Status for Documentation" /&gt;&lt;/a&gt; &lt;a href="https://x.com/linera_io"&gt;&lt;img src="https://img.shields.io/twitter/follow/linera_io" alt="Twitter" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/linera"&gt;&lt;img src="https://img.shields.io/discord/984941796272521226" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- [![Build Status for Kubernetes](https://github.com/linera-io/linera-protocol/actions/workflows/kubernetes.yml/badge.svg)](https://github.com/linera-io/linera-protocol/actions/workflows/kubernetes.yml) --&gt; 
&lt;p&gt;&lt;a href="https://linera.io"&gt;Linera&lt;/a&gt; is a decentralized blockchain infrastructure designed for highly scalable, secure, low-latency Web3 applications.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit our &lt;a href="https://linera.dev"&gt;developer page&lt;/a&gt; and read our &lt;a href="https://linera.io/whitepaper"&gt;whitepaper&lt;/a&gt; to learn more about the Linera protocol.&lt;/p&gt; 
&lt;h2&gt;Repository Structure&lt;/h2&gt; 
&lt;p&gt;The main crates and directories of this repository can be summarized as follows: (listed from low to high levels in the dependency graph)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_base/index.html"&gt;&lt;code&gt;linera-base&lt;/code&gt;&lt;/a&gt; Base definitions, including cryptography.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_version/index.html"&gt;&lt;code&gt;linera-version&lt;/code&gt;&lt;/a&gt; A library to manage version info in binaries and services.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_views/index.html"&gt;&lt;code&gt;linera-views&lt;/code&gt;&lt;/a&gt; A library mapping complex data structures onto a key-value store. The corresponding procedural macros are implemented in &lt;code&gt;linera-views-derive&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_execution/index.html"&gt;&lt;code&gt;linera-execution&lt;/code&gt;&lt;/a&gt; Persistent data and the corresponding logic for runtime and execution of Linera applications.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_chain/index.html"&gt;&lt;code&gt;linera-chain&lt;/code&gt;&lt;/a&gt; Persistent data and the corresponding logic for chains of blocks, certificates, and cross-chain messaging.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_storage/index.html"&gt;&lt;code&gt;linera-storage&lt;/code&gt;&lt;/a&gt; Defines the storage abstractions for the protocol on top of &lt;code&gt;linera-chain&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_core/index.html"&gt;&lt;code&gt;linera-core&lt;/code&gt;&lt;/a&gt; The core Linera protocol, including client and server logic, node synchronization, etc.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_rpc/index.html"&gt;&lt;code&gt;linera-rpc&lt;/code&gt;&lt;/a&gt; Defines the data-type for RPC messages (currently all client ↔ proxy ↔ chain ↔ chain interactions), and track the corresponding data schemas.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_client/index.html"&gt;&lt;code&gt;linera-client&lt;/code&gt;&lt;/a&gt; Library for writing Linera clients. Used for the command-line client and the node service in &lt;code&gt;linera-service&lt;/code&gt;, as well as the Web client in &lt;a href="https://github.com/linera-io/linera-web/"&gt;&lt;code&gt;linera-web&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_service/index.html"&gt;&lt;code&gt;linera-service&lt;/code&gt;&lt;/a&gt; Executable for clients (aka CLI wallets), proxy (aka validator frontend) and servers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_sdk/index.html"&gt;&lt;code&gt;linera-sdk&lt;/code&gt;&lt;/a&gt; The library to develop Linera applications written in Rust for the Wasm virtual machine. The corresponding procedural macros are implemented in &lt;code&gt;linera-sdk-derive&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/linera-io/linera-protocol/main/examples"&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt; Examples of Linera applications written in Rust.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/linera-io/linera-protocol/main/INSTALL.md"&gt;&lt;code&gt;INSTALL.md&lt;/code&gt;&lt;/a&gt; for software requirements to develop in this repo.&lt;/p&gt; 
&lt;h2&gt;Quickstart with the Linera CLI tool&lt;/h2&gt; 
&lt;p&gt;The following commands set up a local test network and run some transfers between the microchains owned by a single wallet.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Make sure to compile the Linera binaries and add them in the $PATH.
# cargo build -p linera-storage-service -p linera-service --bins
export PATH="$PWD/target/debug:$PATH"

# Import the optional helper function `linera_spawn`.
source /dev/stdin &amp;lt;&amp;lt;&amp;lt;"$(linera net helper 2&amp;gt;/dev/null)"

# Run a local test network with the default parameters and a number of microchains
# owned by the default wallet. This also defines `LINERA_TMP_DIR`.
linera_spawn \
linera net up --with-faucet --faucet-port 8080

# Remember the URL of the faucet.
FAUCET_URL=http://localhost:8080

# If you're using a testnet, start here and run this instead:
#   LINERA_TMP_DIR=$(mktemp -d)
#   FAUCET_URL=https://faucet.testnet-XXX.linera.net  # for some value XXX

# Set the path of the future wallet.
export LINERA_WALLET="$LINERA_TMP_DIR/wallet.json"
export LINERA_KEYSTORE="$LINERA_TMP_DIR/keystore.json"
export LINERA_STORAGE="rocksdb:$LINERA_TMP_DIR/client.db"

# Initialize a new user wallet.
linera wallet init --faucet $FAUCET_URL

# Request chains.
INFO1=($(linera wallet request-chain --faucet $FAUCET_URL))
INFO2=($(linera wallet request-chain --faucet $FAUCET_URL))
CHAIN1="${INFO1[0]}"
ACCOUNT1="${INFO1[1]}"
CHAIN2="${INFO2[0]}"
ACCOUNT2="${INFO2[1]}"

# Show the different chains tracked by the wallet.
linera wallet show

# Query the chain balance of some of the chains.
linera query-balance "$CHAIN1"
linera query-balance "$CHAIN2"

# Transfer 10 units then 5 back.
linera transfer 10 --from "$CHAIN1" --to "$CHAIN2"
linera transfer 5 --from "$CHAIN2" --to "$CHAIN1"

# Query balances again.
linera query-balance "$CHAIN1"
linera query-balance "$CHAIN2"

# Now let's fund the user balances.
linera transfer 5 --from "$CHAIN1" --to "$CHAIN1:$ACCOUNT1"
linera transfer 2 --from "$CHAIN1:$ACCOUNT1" --to "$CHAIN2:$ACCOUNT2"

# Query user balances again.
linera query-balance "$CHAIN1:$ACCOUNT1"
linera query-balance "$CHAIN2:$ACCOUNT2"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More complex examples may be found in our &lt;a href="https://linera.dev"&gt;developer manual&lt;/a&gt; as well as the &lt;a href="https://raw.githubusercontent.com/linera-io/linera-protocol/main/examples"&gt;example applications&lt;/a&gt; in this repository.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from the community! If you'd like to contribute to the Linera protocol:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Create a feature branch (&lt;code&gt;git checkout -b feature/amazing-feature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Commit your changes (&lt;code&gt;git commit -m 'Add some amazing feature'&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Push to the branch (&lt;code&gt;git push origin feature/amazing-feature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Open a Pull Request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For detailed guidelines, see our &lt;a href="https://raw.githubusercontent.com/linera-io/linera-protocol/main/CONTRIBUTING.md"&gt;contribution guide&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nautechsystems/nautilus_trader</title>
      <link>https://github.com/nautechsystems/nautilus_trader</link>
      <description>&lt;p&gt;A high-performance algorithmic trading platform and event-driven backtester&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src="https://github.com/nautechsystems/nautilus_trader/raw/develop/assets/nautilus-trader-logo.png" width="500" /&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://codecov.io/gh/nautechsystems/nautilus_trader"&gt;&lt;img src="https://codecov.io/gh/nautechsystems/nautilus_trader/branch/master/graph/badge.svg?token=DXO9QQI40H" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://codspeed.io/nautechsystems/nautilus_trader"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://codspeed.io/badge.json" alt="codspeed" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/pypi/pyversions/nautilus_trader" alt="pythons" /&gt; &lt;img src="https://img.shields.io/pypi/v/nautilus_trader" alt="pypi-version" /&gt; &lt;img src="https://img.shields.io/pypi/format/nautilus_trader?color=blue" alt="pypi-format" /&gt; &lt;a href="https://pepy.tech/project/nautilus-trader"&gt;&lt;img src="https://pepy.tech/badge/nautilus-trader" alt="Downloads" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/NautilusTrader"&gt;&lt;img src="https://img.shields.io/badge/Discord-%235865F2.svg?logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Branch&lt;/th&gt; 
   &lt;th align="left"&gt;Version&lt;/th&gt; 
   &lt;th align="left"&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;master&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://packages.nautechsystems.io/simple/nautilus-trader/index.html"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fnautechsystems%2Fnautilus_trader%2Fmaster%2Fversion.json" alt="version" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml/badge.svg?branch=nightly" alt="build" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;nightly&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://packages.nautechsystems.io/simple/nautilus-trader/index.html"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fnautechsystems%2Fnautilus_trader%2Fnightly%2Fversion.json" alt="version" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml/badge.svg?branch=nightly" alt="build" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;develop&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://packages.nautechsystems.io/simple/nautilus-trader/index.html"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fnautechsystems%2Fnautilus_trader%2Fdevelop%2Fversion.json" alt="version" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml/badge.svg?branch=develop" alt="build" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Platform&lt;/th&gt; 
   &lt;th align="left"&gt;Rust&lt;/th&gt; 
   &lt;th align="left"&gt;Python&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;Linux (x86_64)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;1.90.0&lt;/td&gt; 
   &lt;td align="left"&gt;3.11-3.13&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;Linux (ARM64)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;1.90.0&lt;/td&gt; 
   &lt;td align="left"&gt;3.11-3.13&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;macOS (ARM64)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;1.90.0&lt;/td&gt; 
   &lt;td align="left"&gt;3.11-3.13&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;Windows (x86_64)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;1.90.0&lt;/td&gt; 
   &lt;td align="left"&gt;3.11-3.13&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Docs&lt;/strong&gt;: &lt;a href="https://nautilustrader.io/docs/"&gt;https://nautilustrader.io/docs/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Website&lt;/strong&gt;: &lt;a href="https://nautilustrader.io"&gt;https://nautilustrader.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Support&lt;/strong&gt;: &lt;a href="mailto:support@nautilustrader.io"&gt;support@nautilustrader.io&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;NautilusTrader is an open-source, high-performance, production-grade algorithmic trading platform, providing quantitative traders with the ability to backtest portfolios of automated trading strategies on historical data with an event-driven engine, and also deploy those same strategies live, with no code changes.&lt;/p&gt; 
&lt;p&gt;The platform is &lt;em&gt;AI-first&lt;/em&gt;, designed to develop and deploy algorithmic trading strategies within a highly performant and robust Python-native environment. This helps to address the parity challenge of keeping the Python research/backtest environment consistent with the production live trading environment.&lt;/p&gt; 
&lt;p&gt;NautilusTrader's design, architecture, and implementation philosophy prioritizes software correctness and safety at the highest level, with the aim of supporting Python-native, mission-critical, trading system backtesting and live deployment workloads.&lt;/p&gt; 
&lt;p&gt;The platform is also universal, and asset-class-agnostic — with any REST API or WebSocket feed able to be integrated via modular adapters. It supports high-frequency trading across a wide range of asset classes and instrument types including FX, Equities, Futures, Options, Crypto, DeFi, and Betting, enabling seamless operations across multiple venues simultaneously.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/nautechsystems/nautilus_trader/raw/develop/assets/nautilus-trader.png" alt="nautilus-trader" title="nautilus-trader" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt;: Core is written in Rust with asynchronous networking using &lt;a href="https://crates.io/crates/tokio"&gt;tokio&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reliable&lt;/strong&gt;: Rust-powered type- and thread-safety, with optional Redis-backed state persistence.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Portable&lt;/strong&gt;: OS independent, runs on Linux, macOS, and Windows. Deploy using Docker.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible&lt;/strong&gt;: Modular adapters mean any REST API or WebSocket feed can be integrated.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced&lt;/strong&gt;: Time in force &lt;code&gt;IOC&lt;/code&gt;, &lt;code&gt;FOK&lt;/code&gt;, &lt;code&gt;GTC&lt;/code&gt;, &lt;code&gt;GTD&lt;/code&gt;, &lt;code&gt;DAY&lt;/code&gt;, &lt;code&gt;AT_THE_OPEN&lt;/code&gt;, &lt;code&gt;AT_THE_CLOSE&lt;/code&gt;, advanced order types and conditional triggers. Execution instructions &lt;code&gt;post-only&lt;/code&gt;, &lt;code&gt;reduce-only&lt;/code&gt;, and icebergs. Contingency orders including &lt;code&gt;OCO&lt;/code&gt;, &lt;code&gt;OUO&lt;/code&gt;, &lt;code&gt;OTO&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customizable&lt;/strong&gt;: Add user-defined custom components, or assemble entire systems from scratch leveraging the &lt;a href="https://nautilustrader.io/docs/latest/concepts/cache"&gt;cache&lt;/a&gt; and &lt;a href="https://nautilustrader.io/docs/latest/concepts/message_bus"&gt;message bus&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backtesting&lt;/strong&gt;: Run with multiple venues, instruments and strategies simultaneously using historical quote tick, trade tick, bar, order book and custom data with nanosecond resolution.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Live&lt;/strong&gt;: Use identical strategy implementations between backtesting and live deployments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-venue&lt;/strong&gt;: Multiple venue capabilities facilitate market-making and statistical arbitrage strategies.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI Training&lt;/strong&gt;: Backtest engine fast enough to be used to train AI trading agents (RL/ES).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github.com/nautechsystems/nautilus_trader/raw/develop/assets/nautilus-art.png" alt="Alt text" title="nautilus" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;nautilus - from ancient Greek 'sailor' and naus 'ship'.&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;The nautilus shell consists of modular chambers with a growth factor which approximates a logarithmic spiral. The idea is that this can be translated to the aesthetics of design and architecture.&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Why NautilusTrader?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Highly performant event-driven Python&lt;/strong&gt;: Native binary core components.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Parity between backtesting and live trading&lt;/strong&gt;: Identical strategy code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reduced operational risk&lt;/strong&gt;: Enhanced risk management functionality, logical accuracy, and type safety.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Highly extendable&lt;/strong&gt;: Message bus, custom components and actors, custom data, custom adapters.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Traditionally, trading strategy research and backtesting might be conducted in Python using vectorized methods, with the strategy then needing to be reimplemented in a more event-driven way using C++, C#, Java or other statically typed language(s). The reasoning here is that vectorized backtesting code cannot express the granular time and event dependent complexity of real-time trading, where compiled languages have proven to be more suitable due to their inherently higher performance, and type safety.&lt;/p&gt; 
&lt;p&gt;One of the key advantages of NautilusTrader here, is that this reimplementation step is now circumvented - as the critical core components of the platform have all been written entirely in &lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; or &lt;a href="https://cython.org/"&gt;Cython&lt;/a&gt;. This means we're using the right tools for the job, where systems programming languages compile performant binaries, with CPython C extension modules then able to offer a Python-native environment, suitable for professional quantitative traders and trading firms.&lt;/p&gt; 
&lt;h2&gt;Why Python?&lt;/h2&gt; 
&lt;p&gt;Python was originally created decades ago as a simple scripting language with a clean straightforward syntax. It has since evolved into a fully fledged general purpose object-oriented programming language. Based on the TIOBE index, Python is currently the most popular programming language in the world. Not only that, Python has become the &lt;em&gt;de facto lingua franca&lt;/em&gt; of data science, machine learning, and artificial intelligence.&lt;/p&gt; 
&lt;p&gt;developer/user communities. However, Python has performance and typing limitations for large-scale, latency-sensitive systems. Cython addresses many of these issues by introducing static typing into Python's rich ecosystem of libraries and communities.&lt;/p&gt; 
&lt;h2&gt;Why Rust?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a multi-paradigm programming language designed for performance and safety, especially safe concurrency. Rust is "blazingly fast" and memory-efficient (comparable to C and C++) with no garbage collector. It can power mission-critical systems, run on embedded devices, and easily integrates with other languages.&lt;/p&gt; 
&lt;p&gt;Rust’s rich type system and ownership model guarantees memory-safety and thread-safety deterministically — eliminating many classes of bugs at compile-time.&lt;/p&gt; 
&lt;p&gt;The project increasingly utilizes Rust for core performance-critical components. Python bindings are implemented via Cython and &lt;a href="https://pyo3.rs"&gt;PyO3&lt;/a&gt;—no Rust toolchain is required at install time.&lt;/p&gt; 
&lt;p&gt;This project makes the &lt;a href="https://raphlinus.github.io/rust/2020/01/18/soundness-pledge.html"&gt;Soundness Pledge&lt;/a&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;“The intent of this project is to be free of soundness bugs. The developers will do their best to avoid them, and welcome help in analyzing and fixing them.”&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;MSRV:&lt;/strong&gt; NautilusTrader relies heavily on improvements in the Rust language and compiler. As a result, the Minimum Supported Rust Version (MSRV) is generally equal to the latest stable release of Rust.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Integrations&lt;/h2&gt; 
&lt;p&gt;NautilusTrader is modularly designed to work with &lt;em&gt;adapters&lt;/em&gt;, enabling connectivity to trading venues and data providers by translating their raw APIs into a unified interface and normalized domain model.&lt;/p&gt; 
&lt;p&gt;The following integrations are currently supported; see &lt;a href="https://nautilustrader.io/docs/latest/integrations/"&gt;docs/integrations/&lt;/a&gt; for details:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Name&lt;/th&gt; 
   &lt;th align="left"&gt;ID&lt;/th&gt; 
   &lt;th align="left"&gt;Type&lt;/th&gt; 
   &lt;th align="left"&gt;Status&lt;/th&gt; 
   &lt;th align="left"&gt;Docs&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://betfair.com"&gt;Betfair&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;BETFAIR&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Sports Betting Exchange&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://img.shields.io/badge/stable-green" alt="status" /&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/betfair.md"&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://binance.com"&gt;Binance&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;BINANCE&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Crypto Exchange (CEX)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://img.shields.io/badge/stable-green" alt="status" /&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/binance.md"&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://binance.us"&gt;Binance US&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;BINANCE&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Crypto Exchange (CEX)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://img.shields.io/badge/stable-green" alt="status" /&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/binance.md"&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://www.binance.com/en/futures"&gt;Binance Futures&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;BINANCE&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Crypto Exchange (CEX)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://img.shields.io/badge/stable-green" alt="status" /&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/binance.md"&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://www.bitmex.com"&gt;BitMEX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;BITMEX&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Crypto Exchange (CEX)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://img.shields.io/badge/beta-yellow" alt="status" /&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/bitmex.md"&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://www.bybit.com"&gt;Bybit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;BYBIT&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Crypto Exchange (CEX)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://img.shields.io/badge/stable-green" alt="status" /&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/bybit.md"&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://www.coinbase.com/en/international-exchange"&gt;Coinbase International&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;COINBASE_INTX&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Crypto Exchange (CEX)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://img.shields.io/badge/stable-green" alt="status" /&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/coinbase_intx.md"&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://databento.com"&gt;Databento&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;DATABENTO&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Data Provider&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://img.shields.io/badge/stable-green" alt="status" /&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/databento.md"&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://dydx.exchange/"&gt;dYdX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;DYDX&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Crypto Exchange (DEX)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://img.shields.io/badge/stable-green" alt="status" /&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/dydx.md"&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://hyperliquid.xyz"&gt;Hyperliquid&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;HYPERLIQUID&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Crypto Exchange (DEX)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://img.shields.io/badge/building-orange" alt="status" /&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/hyperliquid.md"&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://www.interactivebrokers.com"&gt;Interactive Brokers&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;INTERACTIVE_BROKERS&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Brokerage (multi-venue)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://img.shields.io/badge/stable-green" alt="status" /&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/ib.md"&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://okx.com"&gt;OKX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;OKX&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Crypto Exchange (CEX)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://img.shields.io/badge/beta-yellow" alt="status" /&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/okx.md"&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://polymarket.com"&gt;Polymarket&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;POLYMARKET&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Prediction Market (DEX)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://img.shields.io/badge/stable-green" alt="status" /&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/polymarket.md"&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://tardis.dev"&gt;Tardis&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;TARDIS&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Crypto Data Provider&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://img.shields.io/badge/stable-green" alt="status" /&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/tardis.md"&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ID&lt;/strong&gt;: The default client ID for the integrations adapter clients.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Type&lt;/strong&gt;: The type of integration (often the venue type).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Status&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;building&lt;/code&gt;: Under construction and likely not in a usable state.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;beta&lt;/code&gt;: Completed to a minimally working state and in a beta testing phase.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;stable&lt;/code&gt;: Stabilized feature set and API, the integration has been tested by both developers and users to a reasonable level (some bugs may still remain).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the &lt;a href="https://nautilustrader.io/docs/latest/integrations/index.html"&gt;Integrations&lt;/a&gt; documentation for further details.&lt;/p&gt; 
&lt;h2&gt;Versioning and releases&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NautilusTrader is still under active development&lt;/strong&gt;. Some features may be incomplete, and while the API is becoming more stable, breaking changes can occur between releases. We strive to document these changes in the release notes on a &lt;strong&gt;best-effort basis&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;We aim to follow a &lt;strong&gt;bi-weekly release schedule&lt;/strong&gt;, though experimental or larger features may cause delays.&lt;/p&gt; 
&lt;h3&gt;Branches&lt;/h3&gt; 
&lt;p&gt;We aim to maintain a stable, passing build across all branches.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;master&lt;/code&gt;: Reflects the source code for the latest released version; recommended for production use.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nightly&lt;/code&gt;: Daily snapshots of the &lt;code&gt;develop&lt;/code&gt; branch for early testing; merged at &lt;strong&gt;14:00 UTC&lt;/strong&gt; or on demand.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;develop&lt;/code&gt;: Active development branch for contributors and feature work.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;Our &lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/ROADMAP.md"&gt;roadmap&lt;/a&gt; aims to achieve a &lt;strong&gt;stable API for version 2.x&lt;/strong&gt; (likely after the Rust port). Once this milestone is reached, we plan to implement a formal deprecation process for any API changes. This approach allows us to maintain a rapid development pace for now.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Precision mode&lt;/h2&gt; 
&lt;p&gt;NautilusTrader supports two precision modes for its core value types (&lt;code&gt;Price&lt;/code&gt;, &lt;code&gt;Quantity&lt;/code&gt;, &lt;code&gt;Money&lt;/code&gt;), which differ in their internal bit-width and maximum decimal precision.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;High-precision&lt;/strong&gt;: 128-bit integers with up to 16 decimals of precision, and a larger value range.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Standard-precision&lt;/strong&gt;: 64-bit integers with up to 9 decimals of precision, and a smaller value range.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;By default, the official Python wheels &lt;strong&gt;ship&lt;/strong&gt; in high-precision (128-bit) mode on Linux and macOS. On Windows, only standard-precision (64-bit) is available due to the lack of native 128-bit integer support. For the Rust crates, the default is standard-precision unless you explicitly enable the &lt;code&gt;high-precision&lt;/code&gt; feature flag.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;See the &lt;a href="https://nautilustrader.io/docs/latest/getting_started/installation"&gt;Installation Guide&lt;/a&gt; for further details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Rust feature flag&lt;/strong&gt;: To enable high-precision mode in Rust, add the &lt;code&gt;high-precision&lt;/code&gt; feature to your Cargo.toml:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[dependencies]
nautilus_model = { version = "*", features = ["high-precision"] }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;We recommend using the latest supported version of Python and installing &lt;a href="https://pypi.org/project/nautilus_trader/"&gt;nautilus_trader&lt;/a&gt; inside a virtual environment to isolate dependencies.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;There are two supported ways to install&lt;/strong&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Pre-built binary wheel from PyPI &lt;em&gt;or&lt;/em&gt; the Nautech Systems package index.&lt;/li&gt; 
 &lt;li&gt;Build from source.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;/p&gt; 
 &lt;p&gt;We highly recommend installing using the &lt;a href="https://docs.astral.sh/uv"&gt;uv&lt;/a&gt; package manager with a "vanilla" CPython.&lt;/p&gt; 
 &lt;p&gt;Conda and other Python distributions &lt;em&gt;may&lt;/em&gt; work but aren’t officially supported.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;From PyPI&lt;/h3&gt; 
&lt;p&gt;To install the latest binary wheel (or sdist package) from PyPI using Python's pip package manager:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install -U nautilus_trader
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;From the Nautech Systems package index&lt;/h3&gt; 
&lt;p&gt;The Nautech Systems package index (&lt;code&gt;packages.nautechsystems.io&lt;/code&gt;) complies with &lt;a href="https://peps.python.org/pep-0503/"&gt;PEP-503&lt;/a&gt; and hosts both stable and development binary wheels for &lt;code&gt;nautilus_trader&lt;/code&gt;. This enables users to install either the latest stable release or pre-release versions for testing.&lt;/p&gt; 
&lt;h4&gt;Stable wheels&lt;/h4&gt; 
&lt;p&gt;Stable wheels correspond to official releases of &lt;code&gt;nautilus_trader&lt;/code&gt; on PyPI, and use standard versioning.&lt;/p&gt; 
&lt;p&gt;To install the latest stable release:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install -U nautilus_trader --index-url=https://packages.nautechsystems.io/simple
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Development wheels&lt;/h4&gt; 
&lt;p&gt;Development wheels are published from both the &lt;code&gt;nightly&lt;/code&gt; and &lt;code&gt;develop&lt;/code&gt; branches, allowing users to test features and fixes ahead of stable releases.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Wheels from the &lt;code&gt;develop&lt;/code&gt; branch are only built for the Linux x86_64 platform to save time and compute resources, while &lt;code&gt;nightly&lt;/code&gt; wheels support additional platforms as shown below.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Platform&lt;/th&gt; 
   &lt;th align="left"&gt;Nightly&lt;/th&gt; 
   &lt;th align="left"&gt;Develop&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;Linux (x86_64)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;✓&lt;/td&gt; 
   &lt;td align="left"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;Linux (ARM64)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;✓&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;macOS (ARM64)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;✓&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;Windows (x86_64)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;✓&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;This process also helps preserve compute resources and ensures easy access to the exact binaries tested in CI pipelines, while adhering to &lt;a href="https://peps.python.org/pep-0440/"&gt;PEP-440&lt;/a&gt; versioning standards:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;develop&lt;/code&gt; wheels use the version format &lt;code&gt;dev{date}+{build_number}&lt;/code&gt; (e.g., &lt;code&gt;1.208.0.dev20241212+7001&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nightly&lt;/code&gt; wheels use the version format &lt;code&gt;a{date}&lt;/code&gt; (alpha) (e.g., &lt;code&gt;1.208.0a20241212&lt;/code&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;/p&gt; 
 &lt;p&gt;We do not recommend using development wheels in production environments, such as live trading controlling real capital.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Installation commands&lt;/h4&gt; 
&lt;p&gt;By default, pip will install the latest stable release. Adding the &lt;code&gt;--pre&lt;/code&gt; flag ensures that pre-release versions, including development wheels, are considered.&lt;/p&gt; 
&lt;p&gt;To install the latest available pre-release (including development wheels):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install -U nautilus_trader --pre --index-url=https://packages.nautechsystems.io/simple
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install a specific development wheel (e.g., &lt;code&gt;1.208.0a20241212&lt;/code&gt; for December 12, 2024):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install nautilus_trader==1.208.0a20241212 --index-url=https://packages.nautechsystems.io/simple
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Available versions&lt;/h4&gt; 
&lt;p&gt;You can view all available versions of &lt;code&gt;nautilus_trader&lt;/code&gt; on the &lt;a href="https://packages.nautechsystems.io/simple/nautilus-trader/index.html"&gt;package index&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To programmatically fetch and list available versions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -s https://packages.nautechsystems.io/simple/nautilus-trader/index.html | grep -oP '(?&amp;lt;=&amp;lt;a href=")[^"]+(?=")' | awk -F'#' '{print $1}' | sort
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Branch updates&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;develop&lt;/code&gt; branch wheels (&lt;code&gt;.dev&lt;/code&gt;): Build and publish continuously with every merged commit.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nightly&lt;/code&gt; branch wheels (&lt;code&gt;a&lt;/code&gt;): Build and publish daily when we automatically merge the &lt;code&gt;develop&lt;/code&gt; branch at &lt;strong&gt;14:00 UTC&lt;/strong&gt; (if there are changes).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Retention policies&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;develop&lt;/code&gt; branch wheels (&lt;code&gt;.dev&lt;/code&gt;): We retain only the most recent wheel build.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nightly&lt;/code&gt; branch wheels (&lt;code&gt;a&lt;/code&gt;): We retain only the 30 most recent wheel builds.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;From Source&lt;/h3&gt; 
&lt;p&gt;It's possible to install from source using pip if you first install the build dependencies as specified in the &lt;code&gt;pyproject.toml&lt;/code&gt;.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;a href="https://rustup.rs/"&gt;rustup&lt;/a&gt; (the Rust toolchain installer):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Linux and macOS:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;curl https://sh.rustup.rs -sSf | sh
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Windows:&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Download and install &lt;a href="https://win.rustup.rs/x86_64"&gt;&lt;code&gt;rustup-init.exe&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;Install "Desktop development with C++" with &lt;a href="https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=BuildTools&amp;amp;rel=16"&gt;Build Tools for Visual Studio 2019&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Verify (any system): from a terminal session run: &lt;code&gt;rustc --version&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enable &lt;code&gt;cargo&lt;/code&gt; in the current shell:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Linux and macOS:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;source $HOME/.cargo/env
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Windows:&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Start a new PowerShell&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;a href="https://clang.llvm.org/"&gt;clang&lt;/a&gt; (a C language frontend for LLVM):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Linux:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt-get install clang
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Windows:&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt; &lt;p&gt;Add Clang to your &lt;a href="https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=BuildTools&amp;amp;rel=16"&gt;Build Tools for Visual Studio 2019&lt;/a&gt;:&lt;/p&gt; 
      &lt;ul&gt; 
       &lt;li&gt;Start | Visual Studio Installer | Modify | C++ Clang tools for Windows (12.0.0 - x64…) = checked | Modify&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;Enable &lt;code&gt;clang&lt;/code&gt; in the current shell:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-powershell"&gt;[System.Environment]::SetEnvironmentVariable('path', "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Tools\Llvm\x64\bin\;" + $env:Path,"User")
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Verify (any system): from a terminal session run: &lt;code&gt;clang --version&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install uv (see the &lt;a href="https://docs.astral.sh/uv/getting-started/installation"&gt;uv installation guide&lt;/a&gt; for more details):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;curl -LsSf https://astral.sh/uv/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the source with &lt;code&gt;git&lt;/code&gt;, and install from the project's root directory:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone --branch develop --depth 1 https://github.com/nautechsystems/nautilus_trader
cd nautilus_trader
uv sync --all-extras
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;The &lt;code&gt;--depth 1&lt;/code&gt; flag fetches just the latest commit for a faster, lightweight clone.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start="6"&gt; 
 &lt;li&gt; &lt;p&gt;Set environment variables for PyO3 compilation (Linux and macOS only):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# Set the library path for the Python interpreter (in this case Python 3.13.4)
export LD_LIBRARY_PATH="$HOME/.local/share/uv/python/cpython-3.13.4-linux-x86_64-gnu/lib:$LD_LIBRARY_PATH"

# Set the Python executable path for PyO3
export PYO3_PYTHON=$(pwd)/.venv/bin/python
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;Adjust the Python version and architecture in the &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; to match your system. Use &lt;code&gt;uv python list&lt;/code&gt; to find the exact path for your Python installation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;See the &lt;a href="https://nautilustrader.io/docs/latest/getting_started/installation"&gt;Installation Guide&lt;/a&gt; for other options and further details.&lt;/p&gt; 
&lt;h2&gt;Redis&lt;/h2&gt; 
&lt;p&gt;Using &lt;a href="https://redis.io"&gt;Redis&lt;/a&gt; with NautilusTrader is &lt;strong&gt;optional&lt;/strong&gt; and only required if configured as the backend for a &lt;a href="https://nautilustrader.io/docs/latest/concepts/cache"&gt;cache&lt;/a&gt; database or &lt;a href="https://nautilustrader.io/docs/latest/concepts/message_bus"&gt;message bus&lt;/a&gt;. See the &lt;strong&gt;Redis&lt;/strong&gt; section of the &lt;a href="https://nautilustrader.io/docs/latest/getting_started/installation#redis"&gt;Installation Guide&lt;/a&gt; for further details.&lt;/p&gt; 
&lt;h2&gt;Makefile&lt;/h2&gt; 
&lt;p&gt;A &lt;code&gt;Makefile&lt;/code&gt; is provided to automate most installation and build tasks for development. Some of the targets include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;make install&lt;/code&gt;: Installs in &lt;code&gt;release&lt;/code&gt; build mode with all dependency groups and extras.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make install-debug&lt;/code&gt;: Same as &lt;code&gt;make install&lt;/code&gt; but with &lt;code&gt;debug&lt;/code&gt; build mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make install-just-deps&lt;/code&gt;: Installs just the &lt;code&gt;main&lt;/code&gt;, &lt;code&gt;dev&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; dependencies (does not install package).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make build&lt;/code&gt;: Runs the build script in &lt;code&gt;release&lt;/code&gt; build mode (default).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make build-debug&lt;/code&gt;: Runs the build script in &lt;code&gt;debug&lt;/code&gt; build mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make build-wheel&lt;/code&gt;: Runs uv build with a wheel format in &lt;code&gt;release&lt;/code&gt; mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make build-wheel-debug&lt;/code&gt;: Runs uv build with a wheel format in &lt;code&gt;debug&lt;/code&gt; mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make cargo-test&lt;/code&gt;: Runs all Rust crate tests using &lt;code&gt;cargo-nextest&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make clean&lt;/code&gt;: Deletes all build results, such as &lt;code&gt;.so&lt;/code&gt; or &lt;code&gt;.dll&lt;/code&gt; files.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make distclean&lt;/code&gt;: &lt;strong&gt;CAUTION&lt;/strong&gt; Removes all artifacts not in the git index from the repository. This includes source files which have not been &lt;code&gt;git add&lt;/code&gt;ed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make docs&lt;/code&gt;: Builds the documentation HTML using Sphinx.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make pre-commit&lt;/code&gt;: Runs the pre-commit checks over all files.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make ruff&lt;/code&gt;: Runs ruff over all files using the &lt;code&gt;pyproject.toml&lt;/code&gt; config (with autofix).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make pytest&lt;/code&gt;: Runs all tests with &lt;code&gt;pytest&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make test-performance&lt;/code&gt;: Runs performance tests with &lt;a href="https://codspeed.io"&gt;codspeed&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;/p&gt; 
 &lt;p&gt;Run &lt;code&gt;make help&lt;/code&gt; for documentation on all available make targets.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;/p&gt; 
 &lt;p&gt;See the &lt;a href="https://github.com/nautechsystems/nautilus_trader/raw/develop/crates/infrastructure/TESTS.md"&gt;crates/infrastructure/TESTS.md&lt;/a&gt; file for running the infrastructure integration tests.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Indicators and strategies can be developed in both Python and Cython. For performance and latency-sensitive applications, we recommend using Cython. Below are some examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/nautilus_trader/examples/indicators/ema_python.py"&gt;indicator&lt;/a&gt; example written in Python.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/nautilus_trader/indicators/"&gt;indicator&lt;/a&gt; examples written in Cython.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/nautilus_trader/examples/strategies/"&gt;strategy&lt;/a&gt; examples written in Python.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/examples/backtest/"&gt;backtest&lt;/a&gt; examples using a &lt;code&gt;BacktestEngine&lt;/code&gt; directly.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;p&gt;Docker containers are built using the base image &lt;code&gt;python:3.12-slim&lt;/code&gt; with the following variant tags:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;nautilus_trader:latest&lt;/code&gt; has the latest release version installed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nautilus_trader:nightly&lt;/code&gt; has the head of the &lt;code&gt;nightly&lt;/code&gt; branch installed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;jupyterlab:latest&lt;/code&gt; has the latest release version installed along with &lt;code&gt;jupyterlab&lt;/code&gt; and an example backtest notebook with accompanying data.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;jupyterlab:nightly&lt;/code&gt; has the head of the &lt;code&gt;nightly&lt;/code&gt; branch installed along with &lt;code&gt;jupyterlab&lt;/code&gt; and an example backtest notebook with accompanying data.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can pull the container images as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull ghcr.io/nautechsystems/&amp;lt;image_variant_tag&amp;gt; --platform linux/amd64
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can launch the backtest example container by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull ghcr.io/nautechsystems/jupyterlab:nightly --platform linux/amd64
docker run -p 8888:8888 ghcr.io/nautechsystems/jupyterlab:nightly
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then open your browser at the following address:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;http://127.0.0.1:8888/lab
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;/p&gt; 
 &lt;p&gt;NautilusTrader currently exceeds the rate limit for Jupyter notebook logging (stdout output). Therefore, we set the &lt;code&gt;log_level&lt;/code&gt; to &lt;code&gt;ERROR&lt;/code&gt; in the examples. Lowering this level to see more logging will cause the notebook to hang during cell execution. We are investigating a fix that may involve either raising the configured rate limits for Jupyter or throttling the log flushing from Nautilus.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jupyterlab/jupyterlab/issues/12845"&gt;https://github.com/jupyterlab/jupyterlab/issues/12845&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/deshaw/jupyterlab-limit-output"&gt;https://github.com/deshaw/jupyterlab-limit-output&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;We aim to provide the most pleasant developer experience possible for this hybrid codebase of Python, Cython and Rust. See the &lt;a href="https://nautilustrader.io/docs/latest/developer_guide/index.html"&gt;Developer Guide&lt;/a&gt; for helpful information.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;/p&gt; 
 &lt;p&gt;Run &lt;code&gt;make build-debug&lt;/code&gt; to compile after changes to Rust or Cython code for the most efficient development workflow.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Testing with Rust&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://nexte.st"&gt;cargo-nextest&lt;/a&gt; is the standard Rust test runner for NautilusTrader. Its key benefit is isolating each test in its own process, ensuring test reliability by avoiding interference.&lt;/p&gt; 
&lt;p&gt;You can install cargo-nextest by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cargo install cargo-nextest
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;/p&gt; 
 &lt;p&gt;Run Rust tests with &lt;code&gt;make cargo-test&lt;/code&gt;, which uses &lt;strong&gt;cargo-nextest&lt;/strong&gt; with an efficient profile.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Thank you for considering contributing to NautilusTrader! We welcome any and all help to improve the project. If you have an idea for an enhancement or a bug fix, the first step is to open an &lt;a href="https://github.com/nautechsystems/nautilus_trader/issues"&gt;issue&lt;/a&gt; on GitHub to discuss it with the team. This helps to ensure that your contribution will be well-aligned with the goals of the project and avoids duplication of effort.&lt;/p&gt; 
&lt;p&gt;Before getting started, be sure to review the &lt;a href="https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/ROADMAP.md#open-source-scope"&gt;open-source scope&lt;/a&gt; outlined in the project’s roadmap to understand what’s in and out of scope.&lt;/p&gt; 
&lt;p&gt;Once you're ready to start working on your contribution, make sure to follow the guidelines outlined in the &lt;a href="https://github.com/nautechsystems/nautilus_trader/raw/develop/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; file. This includes signing a Contributor License Agreement (CLA) to ensure that your contributions can be included in the project.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;Pull requests should target the &lt;code&gt;develop&lt;/code&gt; branch (the default branch). This is where new features and improvements are integrated before release.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Thank you again for your interest in NautilusTrader! We look forward to reviewing your contributions and working with you to improve the project.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join our community of users and contributors on &lt;a href="https://discord.gg/NautilusTrader"&gt;Discord&lt;/a&gt; to chat and stay up-to-date with the latest announcements and features of NautilusTrader. Whether you're a developer looking to contribute or just want to learn more about the platform, all are welcome on our Discord server.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;/p&gt; 
 &lt;p&gt;NautilusTrader does not issue, promote, or endorse any cryptocurrency tokens. Any claims or communications suggesting otherwise are unauthorized and false.&lt;/p&gt; 
 &lt;p&gt;All official updates and communications from NautilusTrader will be shared exclusively through &lt;a href="https://nautilustrader.io"&gt;https://nautilustrader.io&lt;/a&gt;, our &lt;a href="https://discord.gg/NautilusTrader"&gt;Discord server&lt;/a&gt;, or our X (Twitter) account: &lt;a href="https://x.com/NautilusTrader"&gt;@NautilusTrader&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;If you encounter any suspicious activity, please report it to the appropriate platform and contact us at &lt;a href="mailto:info@nautechsystems.io"&gt;info@nautechsystems.io&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The source code for NautilusTrader is available on GitHub under the &lt;a href="https://www.gnu.org/licenses/lgpl-3.0.en.html"&gt;GNU Lesser General Public License v3.0&lt;/a&gt;. Contributions to the project are welcome and require the completion of a standard &lt;a href="https://github.com/nautechsystems/nautilus_trader/raw/develop/CLA.md"&gt;Contributor License Agreement (CLA)&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;NautilusTrader™ is developed and maintained by Nautech Systems, a technology company specializing in the development of high-performance trading systems. For more information, visit &lt;a href="https://nautilustrader.io"&gt;https://nautilustrader.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;© 2015-2025 Nautech Systems Pty Ltd. All rights reserved.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/nautechsystems/nautilus_trader/raw/develop/assets/ns-logo.png" alt="nautechsystems" title="nautechsystems" /&gt; &lt;img src="https://github.com/nautechsystems/nautilus_trader/raw/develop/assets/ferris.png" width="128" /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rust-lang/rust</title>
      <link>https://github.com/rust-lang/rust</link>
      <description>&lt;p&gt;Empowering everyone to build reliable and efficient software.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/rust-lang/www.rust-lang.org/master/static/images/rust-social-wide-dark.svg" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/rust-lang/www.rust-lang.org/master/static/images/rust-social-wide-light.svg" /&gt; 
  &lt;img alt="The Rust Programming Language: A language empowering everyone to build reliable and efficient software" src="https://raw.githubusercontent.com/rust-lang/www.rust-lang.org/master/static/images/rust-social-wide-light.svg?sanitize=true" width="50%" /&gt; 
 &lt;/picture&gt; 
 &lt;p&gt;&lt;a href="https://www.rust-lang.org/"&gt;Website&lt;/a&gt; | &lt;a href="https://www.rust-lang.org/learn/get-started"&gt;Getting started&lt;/a&gt; | &lt;a href="https://www.rust-lang.org/learn"&gt;Learn&lt;/a&gt; | &lt;a href="https://www.rust-lang.org/learn#learn-use"&gt;Documentation&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/rust-lang/rust/master/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;This is the main source code repository for &lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt;. It contains the compiler, standard library, and documentation.&lt;/p&gt; 
&lt;h2&gt;Why Rust?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Performance:&lt;/strong&gt; Fast and memory-efficient, suitable for critical services, embedded devices, and easily integrated with other languages.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Reliability:&lt;/strong&gt; Our rich type system and ownership model ensure memory and thread safety, reducing bugs at compile-time.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Productivity:&lt;/strong&gt; Comprehensive documentation, a compiler committed to providing great diagnostics, and advanced tooling including package manager and build tool (&lt;a href="https://github.com/rust-lang/cargo"&gt;Cargo&lt;/a&gt;), auto-formatter (&lt;a href="https://github.com/rust-lang/rustfmt"&gt;rustfmt&lt;/a&gt;), linter (&lt;a href="https://github.com/rust-lang/rust-clippy"&gt;Clippy&lt;/a&gt;) and editor support (&lt;a href="https://github.com/rust-lang/rust-analyzer"&gt;rust-analyzer&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Read &lt;a href="https://doc.rust-lang.org/book/ch01-01-installation.html"&gt;"Installation"&lt;/a&gt; from &lt;a href="https://doc.rust-lang.org/book/index.html"&gt;The Book&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installing from Source&lt;/h2&gt; 
&lt;p&gt;If you really want to install from source (though this is not recommended), see &lt;a href="https://raw.githubusercontent.com/rust-lang/rust/master/INSTALL.md"&gt;INSTALL.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Help&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://www.rust-lang.org/community"&gt;https://www.rust-lang.org/community&lt;/a&gt; for a list of chat platforms and forums.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/rust-lang/rust/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Rust is primarily distributed under the terms of both the MIT license and the Apache License (Version 2.0), with portions covered by various BSD-like licenses.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/rust-lang/rust/master/LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/rust-lang/rust/master/LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt;, and &lt;a href="https://raw.githubusercontent.com/rust-lang/rust/master/COPYRIGHT"&gt;COPYRIGHT&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Trademark&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://rustfoundation.org/"&gt;The Rust Foundation&lt;/a&gt; owns and protects the Rust and Cargo trademarks and logos (the "Rust Trademarks").&lt;/p&gt; 
&lt;p&gt;If you want to use these names or brands, please read the &lt;a href="https://rustfoundation.org/policy/rust-trademark-policy/"&gt;Rust language trademark policy&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Third-party logos may be subject to third-party copyrights and trademarks. See &lt;a href="https://www.rust-lang.org/policies/licenses"&gt;Licenses&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BloopAI/vibe-kanban</title>
      <link>https://github.com/BloopAI/vibe-kanban</link>
      <description>&lt;p&gt;Kanban board to manage your AI coding agents&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://vibekanban.com"&gt; 
  &lt;picture&gt; 
   &lt;source srcset="frontend/public/vibe-kanban-logo-dark.svg" media="(prefers-color-scheme: dark)" /&gt; 
   &lt;source srcset="frontend/public/vibe-kanban-logo.svg" media="(prefers-color-scheme: light)" /&gt; 
   &lt;img src="https://raw.githubusercontent.com/BloopAI/vibe-kanban/main/frontend/public/vibe-kanban-logo.svg?sanitize=true" alt="Vibe Kanban Logo" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;Get 10X more out of Claude Code, Gemini CLI, Codex, Amp and other coding agents...&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.npmjs.com/package/vibe-kanban"&gt;&lt;img alt="npm" src="https://img.shields.io/npm/v/vibe-kanban?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://github.com/BloopAI/vibe-kanban/raw/main/.github/workflows/publish.yml"&gt;&lt;img alt="Build status" src="https://img.shields.io/github/actions/workflow/status/BloopAI/vibe-kanban/.github%2Fworkflows%2Fpublish.yml" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/BloopAI/vibe-kanban"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/BloopAI/vibe-kanban/main/frontend/public/vibe-kanban-screenshot-overview.png" alt="" /&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;AI coding agents are increasingly writing the world's code and human engineers now spend the majority of their time planning, reviewing, and orchestrating tasks. Vibe Kanban streamlines this process, enabling you to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Easily switch between different coding agents&lt;/li&gt; 
 &lt;li&gt;Orchestrate the execution of multiple coding agents in parallel or in sequence&lt;/li&gt; 
 &lt;li&gt;Quickly review work and start dev servers&lt;/li&gt; 
 &lt;li&gt;Track the status of tasks that your coding agents are working on&lt;/li&gt; 
 &lt;li&gt;Centralise configuration of coding agent MCP configs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can watch a video overview &lt;a href="https://youtu.be/TFT3KnZOOAk"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Make sure you have authenticated with your favourite coding agent. A full list of supported coding agents can be found in the &lt;a href="https://vibekanban.com/docs"&gt;docs&lt;/a&gt;. Then in your terminal run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx vibe-kanban
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Please head to the &lt;a href="https://vibekanban.com/docs"&gt;website&lt;/a&gt; for the latest documentation and user guides.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Please open an issue on this repo if you find any bugs or have any feature requests.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We would prefer that ideas and changes are raised with the core team via GitHub issues, where we can discuss implementation details and alignment with the existing roadmap. Please do not open PRs without first discussing your proposal with the team.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://rustup.rs/"&gt;Rust&lt;/a&gt; (latest stable)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; (&amp;gt;=18)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pnpm.io/"&gt;pnpm&lt;/a&gt; (&amp;gt;=8)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Additional development tools:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cargo install cargo-watch
cargo install sqlx-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running the dev server&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will start the frontend and backend with live reloading. A blank DB will be copied from the &lt;code&gt;dev_assets_seed&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h3&gt;Build from source&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run &lt;code&gt;build-npm-package.sh&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;In the &lt;code&gt;npx-cli&lt;/code&gt; folder run &lt;code&gt;npm pack&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;You can run your build with &lt;code&gt;npx [GENERATED FILE].tgz&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Environment Variables&lt;/h3&gt; 
&lt;p&gt;The following environment variables can be configured at build time or runtime:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Variable&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;GITHUB_CLIENT_ID&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Build-time&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Ov23li9bxz3kKfPOIsGm&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;GitHub OAuth app client ID for authentication&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;POSTHOG_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Build-time&lt;/td&gt; 
   &lt;td&gt;Empty&lt;/td&gt; 
   &lt;td&gt;PostHog analytics API key (disables analytics if empty)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;POSTHOG_API_ENDPOINT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Build-time&lt;/td&gt; 
   &lt;td&gt;Empty&lt;/td&gt; 
   &lt;td&gt;PostHog analytics endpoint (disables analytics if empty)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;BACKEND_PORT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Runtime&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;0&lt;/code&gt; (auto-assign)&lt;/td&gt; 
   &lt;td&gt;Backend server port&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;FRONTEND_PORT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Runtime&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;3000&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Frontend development server port&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Runtime&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;127.0.0.1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Backend server host&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;DISABLE_WORKTREE_ORPHAN_CLEANUP&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Runtime&lt;/td&gt; 
   &lt;td&gt;Not set&lt;/td&gt; 
   &lt;td&gt;Disable git worktree cleanup (for debugging)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Build-time variables&lt;/strong&gt; must be set when running &lt;code&gt;pnpm run build&lt;/code&gt;. &lt;strong&gt;Runtime variables&lt;/strong&gt; are read when the application starts.&lt;/p&gt; 
&lt;h4&gt;Custom GitHub OAuth App (Optional)&lt;/h4&gt; 
&lt;p&gt;By default, Vibe Kanban uses Bloop AI's GitHub OAuth app for authentication. To use your own GitHub app for self-hosting or custom branding:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create a GitHub OAuth App at &lt;a href="https://github.com/settings/developers"&gt;GitHub Developer Settings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Enable "Device Flow" in the app settings&lt;/li&gt; 
 &lt;li&gt;Set scopes to include &lt;code&gt;user:email,repo&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Build with your client ID: &lt;pre&gt;&lt;code class="language-bash"&gt;GITHUB_CLIENT_ID=your_client_id_here pnpm run build
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>bevyengine/bevy</title>
      <link>https://github.com/bevyengine/bevy</link>
      <description>&lt;p&gt;A refreshingly simple data-driven game engine built in Rust&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href="https://bevy.org"&gt;&lt;img src="https://bevy.org/assets/bevy_logo_light_dark_and_dimmed.svg?sanitize=true" alt="Bevy" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/bevyengine/bevy#license"&gt;&lt;img src="https://img.shields.io/badge/license-MIT%2FApache-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/bevy"&gt;&lt;img src="https://img.shields.io/crates/v/bevy.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/bevy"&gt;&lt;img src="https://img.shields.io/crates/d/bevy.svg?sanitize=true" alt="Downloads" /&gt;&lt;/a&gt; &lt;a href="https://docs.rs/bevy/latest/bevy/"&gt;&lt;img src="https://docs.rs/bevy/badge.svg?sanitize=true" alt="Docs" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bevyengine/bevy/actions"&gt;&lt;img src="https://github.com/bevyengine/bevy/workflows/CI/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/bevy"&gt;&lt;img src="https://img.shields.io/discord/691052431525675048.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is Bevy?&lt;/h2&gt; 
&lt;p&gt;Bevy is a refreshingly simple data-driven game engine built in Rust. It is free and open-source forever!&lt;/p&gt; 
&lt;h2&gt;WARNING&lt;/h2&gt; 
&lt;p&gt;Bevy is still in the early stages of development. Important features are missing. Documentation is sparse. A new version of Bevy containing breaking changes to the API is released &lt;a href="https://bevy.org/news/bevy-0-6/#the-train-release-schedule"&gt;approximately once every 3 months&lt;/a&gt;. We provide &lt;a href="https://bevy.org/learn/migration-guides/"&gt;migration guides&lt;/a&gt;, but we can't guarantee migrations will always be easy. Use only if you are willing to work in this environment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;MSRV:&lt;/strong&gt; Bevy relies heavily on improvements in the Rust language and compiler. As a result, the Minimum Supported Rust Version (MSRV) is generally close to "the latest stable release" of Rust.&lt;/p&gt; 
&lt;h2&gt;Design Goals&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Capable&lt;/strong&gt;: Offer a complete 2D and 3D feature set&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt;: Easy for newbies to pick up, but infinitely flexible for power users&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data Focused&lt;/strong&gt;: Data-oriented architecture using the Entity Component System paradigm&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modular&lt;/strong&gt;: Use only what you need. Replace what you don't like&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt;: App logic should run quickly, and when possible, in parallel&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Productive&lt;/strong&gt;: Changes should compile quickly ... waiting isn't fun&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://bevy.org"&gt;Features&lt;/a&gt;:&lt;/strong&gt; A quick overview of Bevy's features.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://bevy.org/news/"&gt;News&lt;/a&gt;&lt;/strong&gt;: A development blog that covers our progress, plans and shiny new features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://bevy.org/learn/quick-start/introduction"&gt;Quick Start Guide&lt;/a&gt;:&lt;/strong&gt; Bevy's official Quick Start Guide. The best place to start learning Bevy.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.rs/bevy"&gt;Bevy Rust API Docs&lt;/a&gt;:&lt;/strong&gt; Bevy's Rust API docs, which are automatically generated from the doc comments in this repo.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/bevyengine/bevy/tree/latest/examples"&gt;Official Examples&lt;/a&gt;:&lt;/strong&gt; Bevy's dedicated, runnable examples, which are great for digging into specific concepts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://bevy.org/assets/#learning"&gt;Community-Made Learning Resources&lt;/a&gt;&lt;/strong&gt;: More tutorials, documentation, and examples made by the Bevy community.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Before contributing or participating in discussions with the community, you should familiarize yourself with our &lt;a href="https://raw.githubusercontent.com/bevyengine/bevy/main/CODE_OF_CONDUCT.md"&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://discord.gg/bevy"&gt;Discord&lt;/a&gt;:&lt;/strong&gt; Bevy's official discord server.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://reddit.com/r/bevy"&gt;Reddit&lt;/a&gt;:&lt;/strong&gt; Bevy's official subreddit.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/bevyengine/bevy/discussions"&gt;GitHub Discussions&lt;/a&gt;:&lt;/strong&gt; The best place for questions about Bevy, answered right here!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://bevy.org/assets/"&gt;Bevy Assets&lt;/a&gt;:&lt;/strong&gt; A collection of awesome Bevy projects, tools, plugins and learning materials.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;If you'd like to help build Bevy, check out the &lt;strong&gt;&lt;a href="https://bevy.org/learn/contribute/introduction"&gt;Contributor's Guide&lt;/a&gt;&lt;/strong&gt;. For simple problems, feel free to &lt;a href="https://github.com/bevyengine/bevy/issues"&gt;open an issue&lt;/a&gt; or &lt;a href="https://github.com/bevyengine/bevy/pulls"&gt;PR&lt;/a&gt; and tackle it yourself!&lt;/p&gt; 
&lt;p&gt;For more complex architecture decisions and experimental mad science, please open an &lt;a href="https://github.com/bevyengine/rfcs"&gt;RFC&lt;/a&gt; (Request For Comments) so we can brainstorm together effectively!&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;We recommend checking out the &lt;a href="https://bevy.org/learn/quick-start/introduction"&gt;Quick Start Guide&lt;/a&gt; for a brief introduction.&lt;/p&gt; 
&lt;p&gt;Follow the &lt;a href="https://bevy.org/learn/quick-start/getting-started/setup"&gt;Setup guide&lt;/a&gt; to ensure your development environment is set up correctly. Once set up, you can quickly try out the &lt;a href="https://github.com/bevyengine/bevy/tree/latest/examples"&gt;examples&lt;/a&gt; by cloning this repo and running the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Switch to the correct version (latest release, default is main development branch)
git checkout latest
# Runs the "breakout" example
cargo run --example breakout
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To draw a window with standard functionality enabled, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;use bevy::prelude::*;

fn main() {
    App::new()
        .add_plugins(DefaultPlugins)
        .run();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fast Compiles&lt;/h3&gt; 
&lt;p&gt;Bevy can be built just fine using default configuration on stable Rust. However for really fast iterative compiles, you should enable the "fast compiles" setup by &lt;a href="https://bevy.org/learn/quick-start/getting-started/setup"&gt;following the instructions here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/bevyengine/bevy/main/docs/cargo_features.md"&gt;Bevy Cargo Features&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;This &lt;a href="https://raw.githubusercontent.com/bevyengine/bevy/main/docs/cargo_features.md"&gt;list&lt;/a&gt; outlines the different cargo features supported by Bevy. These allow you to customize the Bevy feature set for your use-case.&lt;/p&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;Bevy is the result of the hard work of many people. A huge thanks to all Bevy contributors, the many open source projects that have come before us, the &lt;a href="https://arewegameyet.rs/"&gt;Rust gamedev ecosystem&lt;/a&gt;, and the many libraries we build on.&lt;/p&gt; 
&lt;p&gt;A huge thanks to Bevy's &lt;a href="https://bevy.org"&gt;generous sponsors&lt;/a&gt;. Bevy will always be free and open source, but it isn't free to make. Please consider &lt;a href="https://bevy.org/donate/"&gt;sponsoring our work&lt;/a&gt; if you like what we're building.&lt;/p&gt; 
&lt;!-- This next line need to stay exactly as is. It is required for BrowserStack sponsorship. --&gt; 
&lt;p&gt;This project is tested with BrowserStack.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Bevy is free, open source and permissively licensed! Except where noted (below and/or in individual files), all code in this repository is dual-licensed under either:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MIT License (&lt;a href="https://raw.githubusercontent.com/bevyengine/bevy/main/LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href="http://opensource.org/licenses/MIT"&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Apache License, Version 2.0 (&lt;a href="https://raw.githubusercontent.com/bevyengine/bevy/main/LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;at your option. This means you can select the license you prefer! This dual-licensing approach is the de-facto standard in the Rust ecosystem and there are &lt;a href="https://github.com/bevyengine/bevy/issues/2373"&gt;very good reasons&lt;/a&gt; to include both.&lt;/p&gt; 
&lt;p&gt;Some of the engine's code carries additional copyright notices and license terms due to their external origins. These are generally BSD-like, but exact details vary by crate: If the README of a crate contains a 'License' header (or similar), the additional copyright notices and license terms applicable to that crate will be listed. The above licensing requirement still applies to contributions to those crates, and sections of those crates will carry those license terms. The &lt;a href="https://doc.rust-lang.org/cargo/reference/manifest.html#the-license-and-license-file-fields"&gt;license&lt;/a&gt; field of each crate will also reflect this.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/bevyengine/bevy/main/assets"&gt;assets&lt;/a&gt; included in this repository (for our &lt;a href="https://raw.githubusercontent.com/bevyengine/bevy/main/examples/README.md"&gt;examples&lt;/a&gt;) typically fall under different open licenses. These will not be included in your game (unless copied in by you), and they are not distributed in the published bevy crates. See &lt;a href="https://raw.githubusercontent.com/bevyengine/bevy/main/CREDITS.md"&gt;CREDITS.md&lt;/a&gt; for the details of the licenses of those files.&lt;/p&gt; 
&lt;h3&gt;Your contributions&lt;/h3&gt; 
&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tokio-rs/tokio</title>
      <link>https://github.com/tokio-rs/tokio</link>
      <description>&lt;p&gt;A runtime for writing reliable asynchronous applications with Rust. Provides I/O, networking, scheduling, timers, ...&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tokio&lt;/h1&gt; 
&lt;p&gt;A runtime for writing reliable, asynchronous, and slim applications with the Rust programming language. It is:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fast&lt;/strong&gt;: Tokio's zero-cost abstractions give you bare-metal performance.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Reliable&lt;/strong&gt;: Tokio leverages Rust's ownership, type system, and concurrency model to reduce bugs and ensure thread safety.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: Tokio has a minimal footprint, and handles backpressure and cancellation naturally.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://crates.io/crates/tokio"&gt;&lt;img src="https://img.shields.io/crates/v/tokio.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tokio-rs/tokio/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="MIT licensed" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tokio-rs/tokio/actions?query=workflow%3ACI+branch%3Amaster"&gt;&lt;img src="https://github.com/tokio-rs/tokio/workflows/CI/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/tokio"&gt;&lt;img src="https://img.shields.io/discord/500028886025895936.svg?logo=discord&amp;amp;style=flat-square" alt="Discord chat" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://tokio.rs"&gt;Website&lt;/a&gt; | &lt;a href="https://tokio.rs/tokio/tutorial"&gt;Guides&lt;/a&gt; | &lt;a href="https://docs.rs/tokio/latest/tokio"&gt;API Docs&lt;/a&gt; | &lt;a href="https://discord.gg/tokio"&gt;Chat&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Tokio is an event-driven, non-blocking I/O platform for writing asynchronous applications with the Rust programming language. At a high level, it provides a few major components:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A multithreaded, work-stealing based task &lt;a href="https://docs.rs/tokio/latest/tokio/runtime/index.html"&gt;scheduler&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;A reactor backed by the operating system's event queue (epoll, kqueue, IOCP, etc.).&lt;/li&gt; 
 &lt;li&gt;Asynchronous &lt;a href="https://docs.rs/tokio/latest/tokio/net/index.html"&gt;TCP and UDP&lt;/a&gt; sockets.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These components provide the runtime components necessary for building an asynchronous application.&lt;/p&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;p&gt;A basic TCP echo server with Tokio.&lt;/p&gt; 
&lt;p&gt;Make sure you activated the full features of the tokio crate on Cargo.toml:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[dependencies]
tokio = { version = "1.47.1", features = ["full"] }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, on your main.rs:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust,no_run"&gt;use tokio::net::TcpListener;
use tokio::io::{AsyncReadExt, AsyncWriteExt};

#[tokio::main]
async fn main() -&amp;gt; Result&amp;lt;(), Box&amp;lt;dyn std::error::Error&amp;gt;&amp;gt; {
    let listener = TcpListener::bind("127.0.0.1:8080").await?;

    loop {
        let (mut socket, _) = listener.accept().await?;

        tokio::spawn(async move {
            let mut buf = [0; 1024];

            // In a loop, read data from the socket and write the data back.
            loop {
                let n = match socket.read(&amp;amp;mut buf).await {
                    // socket closed
                    Ok(0) =&amp;gt; return,
                    Ok(n) =&amp;gt; n,
                    Err(e) =&amp;gt; {
                        eprintln!("failed to read from socket; err = {:?}", e);
                        return;
                    }
                };

                // Write the data back
                if let Err(e) = socket.write_all(&amp;amp;buf[0..n]).await {
                    eprintln!("failed to write to socket; err = {:?}", e);
                    return;
                }
            }
        });
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More examples can be found &lt;a href="https://github.com/tokio-rs/tokio/tree/master/examples"&gt;here&lt;/a&gt;. For a larger "real world" example, see the &lt;a href="https://github.com/tokio-rs/mini-redis/"&gt;mini-redis&lt;/a&gt; repository.&lt;/p&gt; 
&lt;p&gt;To see a list of the available features flags that can be enabled, check our &lt;a href="https://docs.rs/tokio/#feature-flags"&gt;docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Help&lt;/h2&gt; 
&lt;p&gt;First, see if the answer to your question can be found in the &lt;a href="https://tokio.rs/tokio/tutorial"&gt;Guides&lt;/a&gt; or the &lt;a href="https://docs.rs/tokio/latest/tokio"&gt;API documentation&lt;/a&gt;. If the answer is not there, there is an active community in the &lt;a href="https://discord.gg/tokio"&gt;Tokio Discord server&lt;/a&gt;. We would be happy to try to answer your question. You can also ask your question on &lt;a href="https://github.com/tokio-rs/tokio/discussions"&gt;the discussions page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;🎈&lt;/span&gt; Thanks for your help improving the project! We are so happy to have you! We have a &lt;a href="https://github.com/tokio-rs/tokio/raw/master/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to help you get involved in the Tokio project.&lt;/p&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;p&gt;In addition to the crates in this repository, the Tokio project also maintains several other libraries, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/tokio-rs/axum"&gt;&lt;code&gt;axum&lt;/code&gt;&lt;/a&gt;: A web application framework that focuses on ergonomics and modularity.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/hyperium/hyper"&gt;&lt;code&gt;hyper&lt;/code&gt;&lt;/a&gt;: A fast and correct HTTP/1.1 and HTTP/2 implementation for Rust.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/hyperium/tonic"&gt;&lt;code&gt;tonic&lt;/code&gt;&lt;/a&gt;: A gRPC over HTTP/2 implementation focused on high performance, interoperability, and flexibility.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/seanmonstar/warp"&gt;&lt;code&gt;warp&lt;/code&gt;&lt;/a&gt;: A super-easy, composable, web server framework for warp speeds.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/tower-rs/tower"&gt;&lt;code&gt;tower&lt;/code&gt;&lt;/a&gt;: A library of modular and reusable components for building robust networking clients and servers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/tokio-rs/tracing"&gt;&lt;code&gt;tracing&lt;/code&gt;&lt;/a&gt; (formerly &lt;code&gt;tokio-trace&lt;/code&gt;): A framework for application-level tracing and async-aware diagnostics.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/tokio-rs/mio"&gt;&lt;code&gt;mio&lt;/code&gt;&lt;/a&gt;: A low-level, cross-platform abstraction over OS I/O APIs that powers &lt;code&gt;tokio&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/tokio-rs/bytes"&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;: Utilities for working with bytes, including efficient byte buffers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/tokio-rs/loom"&gt;&lt;code&gt;loom&lt;/code&gt;&lt;/a&gt;: A testing tool for concurrent Rust code.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;The Tokio repository contains multiple crates. Each crate has its own changelog.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;tokio&lt;/code&gt; - &lt;a href="https://github.com/tokio-rs/tokio/raw/master/tokio/CHANGELOG.md"&gt;view changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tokio-util&lt;/code&gt; - &lt;a href="https://github.com/tokio-rs/tokio/raw/master/tokio-util/CHANGELOG.md"&gt;view changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tokio-stream&lt;/code&gt; - &lt;a href="https://github.com/tokio-rs/tokio/raw/master/tokio-stream/CHANGELOG.md"&gt;view changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tokio-macros&lt;/code&gt; - &lt;a href="https://github.com/tokio-rs/tokio/raw/master/tokio-macros/CHANGELOG.md"&gt;view changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tokio-test&lt;/code&gt; - &lt;a href="https://github.com/tokio-rs/tokio/raw/master/tokio-test/CHANGELOG.md"&gt;view changelog&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Rust Versions&lt;/h2&gt; 
&lt;!--
When updating this, also update:
- .github/workflows/ci.yml
- CONTRIBUTING.md
- README.md
- tokio/README.md
- tokio/Cargo.toml
- tokio-util/Cargo.toml
- tokio-test/Cargo.toml
- tokio-stream/Cargo.toml
--&gt; 
&lt;p&gt;Tokio will keep a rolling MSRV (minimum supported rust version) policy of &lt;strong&gt;at least&lt;/strong&gt; 6 months. When increasing the MSRV, the new Rust version must have been released at least six months ago. The current MSRV is 1.70.&lt;/p&gt; 
&lt;p&gt;Note that the MSRV is not increased automatically, and only as part of a minor release. The MSRV history for past minor releases can be found below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;1.39 to now - Rust 1.70&lt;/li&gt; 
 &lt;li&gt;1.30 to 1.38 - Rust 1.63&lt;/li&gt; 
 &lt;li&gt;1.27 to 1.29 - Rust 1.56&lt;/li&gt; 
 &lt;li&gt;1.17 to 1.26 - Rust 1.49&lt;/li&gt; 
 &lt;li&gt;1.15 to 1.16 - Rust 1.46&lt;/li&gt; 
 &lt;li&gt;1.0 to 1.14 - Rust 1.45&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that although we try to avoid the situation where a dependency transitively increases the MSRV of Tokio, we do not guarantee that this does not happen. However, every minor release will have some set of versions of dependencies that works with the MSRV of that minor release.&lt;/p&gt; 
&lt;h2&gt;Release schedule&lt;/h2&gt; 
&lt;p&gt;Tokio doesn't follow a fixed release schedule, but we typically make one minor release each month. We make patch releases for bugfixes as necessary.&lt;/p&gt; 
&lt;h2&gt;Bug patching policy&lt;/h2&gt; 
&lt;p&gt;For the purposes of making patch releases with bugfixes, we have designated certain minor releases as LTS (long term support) releases. Whenever a bug warrants a patch release with a fix for the bug, it will be backported and released as a new patch release for each LTS minor version. Our current LTS releases are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;1.43.x&lt;/code&gt; - LTS release until March 2026. (MSRV 1.70)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.47.x&lt;/code&gt; - LTS release until September 2026. (MSRV 1.70)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each LTS release will continue to receive backported fixes for at least a year. If you wish to use a fixed minor release in your project, we recommend that you use an LTS release.&lt;/p&gt; 
&lt;p&gt;To use a fixed minor version, you can specify the version with a tilde. For example, to specify that you wish to use the newest &lt;code&gt;1.43.x&lt;/code&gt; patch release, you can use the following dependency specification:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;tokio = { version = "~1.43", features = [...] }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Previous LTS releases&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;1.8.x&lt;/code&gt; - LTS release until February 2022.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.14.x&lt;/code&gt; - LTS release until June 2022.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.18.x&lt;/code&gt; - LTS release until June 2023.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.20.x&lt;/code&gt; - LTS release until September 2023.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.25.x&lt;/code&gt; - LTS release until March 2024.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.32.x&lt;/code&gt; - LTS release until September 2024.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.36.x&lt;/code&gt; - LTS release until March 2025.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.38.x&lt;/code&gt; - LTS release until July 2025.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://github.com/tokio-rs/tokio/raw/master/LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contribution&lt;/h3&gt; 
&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in Tokio by you, shall be licensed as MIT, without any additional terms or conditions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sharkdp/bat</title>
      <link>https://github.com/sharkdp/bat</link>
      <description>&lt;p&gt;A cat(1) clone with wings.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/sharkdp/bat/master/doc/logo-header.svg?sanitize=true" alt="bat - a cat clone with wings" /&gt;&lt;br /&gt; &lt;a href="https://github.com/sharkdp/bat/actions?query=workflow%3ACICD"&gt;&lt;img src="https://github.com/sharkdp/bat/workflows/CICD/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/crates/l/bat.svg?sanitize=true" alt="license" /&gt; &lt;a href="https://crates.io/crates/bat"&gt;&lt;img src="https://img.shields.io/crates/v/bat.svg?colorB=319e8c" alt="Version info" /&gt;&lt;/a&gt;&lt;br /&gt; A &lt;i&gt;cat(1)&lt;/i&gt; clone with syntax highlighting and Git integration. &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#syntax-highlighting"&gt;Key Features&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#how-to-use"&gt;How To Use&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#installation"&gt;Installation&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#customization"&gt;Customization&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#project-goals-and-alternatives"&gt;Project goals, alternatives&lt;/a&gt;&lt;br /&gt; [English] [&lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/doc/README-zh.md"&gt;中文&lt;/a&gt;] [&lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/doc/README-ja.md"&gt;日本語&lt;/a&gt;] [&lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/doc/README-ko.md"&gt;한국어&lt;/a&gt;] [&lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/doc/README-ru.md"&gt;Русский&lt;/a&gt;] &lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;A special &lt;em&gt;thank you&lt;/em&gt; goes to our biggest &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/doc/sponsors.md"&gt;sponsors&lt;/a&gt;:&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt; &lt;a href="https://www.warp.dev/bat"&gt; &lt;img src="https://raw.githubusercontent.com/sharkdp/bat/master/doc/sponsors/warp-logo.png" width="200" alt="Warp" /&gt; &lt;br /&gt; &lt;strong&gt;Warp, the intelligent terminal&lt;/strong&gt; &lt;br /&gt; &lt;sub&gt;Available on MacOS, Linux, Windows&lt;/sub&gt; &lt;/a&gt; &lt;/p&gt;
&lt;p&gt; &lt;a href="https://graphite.dev/?utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=bat"&gt; &lt;img src="https://raw.githubusercontent.com/sharkdp/bat/master/doc/sponsors/graphite-logo.jpeg" width="200" alt="Graphite" /&gt; &lt;br /&gt; &lt;strong&gt;Graphite is the AI developer productivity platform helping&lt;br /&gt;teams on GitHub ship higher quality software, faster&lt;/strong&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3&gt;Syntax highlighting&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; supports syntax highlighting for a large number of programming and markup languages:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://imgur.com/rGsdnDe.png" alt="Syntax highlighting example" /&gt;&lt;/p&gt; 
&lt;h3&gt;Git integration&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; communicates with &lt;code&gt;git&lt;/code&gt; to show modifications with respect to the index (see left side bar):&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/2lSW4RE.png" alt="Git integration example" /&gt;&lt;/p&gt; 
&lt;h3&gt;Show non-printable characters&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;-A&lt;/code&gt;/&lt;code&gt;--show-all&lt;/code&gt; option to show and highlight non-printable characters:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/WndGp9H.png" alt="Non-printable character example" /&gt;&lt;/p&gt; 
&lt;h3&gt;Automatic paging&lt;/h3&gt; 
&lt;p&gt;By default, &lt;code&gt;bat&lt;/code&gt; pipes its own output to a pager (e.g. &lt;code&gt;less&lt;/code&gt;) if the output is too large for one screen. If you would rather &lt;code&gt;bat&lt;/code&gt; work like &lt;code&gt;cat&lt;/code&gt; all the time (never page output), you can set &lt;code&gt;--paging=never&lt;/code&gt; as an option, either on the command line or in your configuration file. If you intend to alias &lt;code&gt;cat&lt;/code&gt; to &lt;code&gt;bat&lt;/code&gt; in your shell configuration, you can use &lt;code&gt;alias cat='bat --paging=never'&lt;/code&gt; to preserve the default behavior.&lt;/p&gt; 
&lt;h4&gt;File concatenation&lt;/h4&gt; 
&lt;p&gt;Even with a pager set, you can still use &lt;code&gt;bat&lt;/code&gt; to concatenate files &lt;span&gt;😉&lt;/span&gt;. Whenever &lt;code&gt;bat&lt;/code&gt; detects a non-interactive terminal (i.e. when you pipe into another process or into a file), &lt;code&gt;bat&lt;/code&gt; will act as a drop-in replacement for &lt;code&gt;cat&lt;/code&gt; and fall back to printing the plain file contents, regardless of the &lt;code&gt;--pager&lt;/code&gt; option's value.&lt;/p&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;p&gt;Display a single file on the terminal&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat README.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Display multiple files at once&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat src/*.rs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read from stdin, determine the syntax automatically (note, highlighting will only work if the syntax can be determined from the first line of the file, usually through a shebang such as &lt;code&gt;#!/bin/sh&lt;/code&gt;)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -s https://sh.rustup.rs | bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read from stdin, specify the language explicitly&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yaml2json .travis.yml | json_pp | bat -l json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Show and highlight non-printable characters:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat -A /etc/hosts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use it as a &lt;code&gt;cat&lt;/code&gt; replacement:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat &amp;gt; note.md  # quickly create a new file

bat header.md content.md footer.md &amp;gt; document.md

bat -n main.rs  # show line numbers (only)

bat f - g  # output 'f', then stdin, then 'g'.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Integration with other tools&lt;/h3&gt; 
&lt;h4&gt;&lt;code&gt;fzf&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;You can use &lt;code&gt;bat&lt;/code&gt; as a previewer for &lt;a href="https://github.com/junegunn/fzf"&gt;&lt;code&gt;fzf&lt;/code&gt;&lt;/a&gt;. To do this, use &lt;code&gt;bat&lt;/code&gt;'s &lt;code&gt;--color=always&lt;/code&gt; option to force colorized output. You can also use &lt;code&gt;--line-range&lt;/code&gt; option to restrict the load times for long files:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fzf --preview "bat --color=always --style=numbers --line-range=:500 {}"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information, see &lt;a href="https://github.com/junegunn/fzf#preview-window"&gt;&lt;code&gt;fzf&lt;/code&gt;'s &lt;code&gt;README&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;find&lt;/code&gt; or &lt;code&gt;fd&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;You can use the &lt;code&gt;-exec&lt;/code&gt; option of &lt;code&gt;find&lt;/code&gt; to preview all search results with &lt;code&gt;bat&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;find … -exec bat {} +
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you happen to use &lt;a href="https://github.com/sharkdp/fd"&gt;&lt;code&gt;fd&lt;/code&gt;&lt;/a&gt;, you can use the &lt;code&gt;-X&lt;/code&gt;/&lt;code&gt;--exec-batch&lt;/code&gt; option to do the same:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fd … -X bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;ripgrep&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;With &lt;a href="https://github.com/eth-p/bat-extras/raw/master/doc/batgrep.md"&gt;&lt;code&gt;batgrep&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;bat&lt;/code&gt; can be used as the printer for &lt;a href="https://github.com/BurntSushi/ripgrep"&gt;&lt;code&gt;ripgrep&lt;/code&gt;&lt;/a&gt; search results.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;batgrep needle src/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;tail -f&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; can be combined with &lt;code&gt;tail -f&lt;/code&gt; to continuously monitor a given file with syntax highlighting.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;tail -f /var/log/pacman.log | bat --paging=never -l log
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that we have to switch off paging in order for this to work. We have also specified the syntax explicitly (&lt;code&gt;-l log&lt;/code&gt;), as it can not be auto-detected in this case.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;git&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;You can combine &lt;code&gt;bat&lt;/code&gt; with &lt;code&gt;git show&lt;/code&gt; to view an older version of a given file with proper syntax highlighting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git show v0.6.0:src/main.rs | bat -l rs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;git diff&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;You can combine &lt;code&gt;bat&lt;/code&gt; with &lt;code&gt;git diff&lt;/code&gt; to view lines around code changes with proper syntax highlighting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;batdiff() {
    git diff --name-only --relative --diff-filter=d -z | xargs -0 bat --diff
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you prefer to use this as a separate tool, check out &lt;code&gt;batdiff&lt;/code&gt; in &lt;a href="https://github.com/eth-p/bat-extras"&gt;&lt;code&gt;bat-extras&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you are looking for more support for git and diff operations, check out &lt;a href="https://github.com/dandavison/delta"&gt;&lt;code&gt;delta&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;xclip&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;The line numbers and Git modification markers in the output of &lt;code&gt;bat&lt;/code&gt; can make it hard to copy the contents of a file. To prevent this, you can call &lt;code&gt;bat&lt;/code&gt; with the &lt;code&gt;-p&lt;/code&gt;/&lt;code&gt;--plain&lt;/code&gt; option or simply pipe the output into &lt;code&gt;xclip&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat main.cpp | xclip
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; will detect that the output is being redirected and print the plain file contents.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;man&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; can be used as a colorizing pager for &lt;code&gt;man&lt;/code&gt;, by setting the &lt;code&gt;MANPAGER&lt;/code&gt; environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export MANPAGER="sh -c 'awk '\''{ gsub(/\x1B\[[0-9;]*m/, \"\", \$0); gsub(/.\x08/, \"\", \$0); print }'\'' | bat -p -lman'"
man 2 select
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(replace &lt;code&gt;bat&lt;/code&gt; with &lt;code&gt;batcat&lt;/code&gt; if you are on Debian or Ubuntu)&lt;/p&gt; 
&lt;p&gt;If you prefer to have this bundled in a new command, you can also use &lt;a href="https://github.com/eth-p/bat-extras/raw/master/doc/batman.md"&gt;&lt;code&gt;batman&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; This will &lt;a href="https://github.com/sharkdp/bat/issues/1145"&gt;not work&lt;/a&gt; out of the box with Mandoc's &lt;code&gt;man&lt;/code&gt; implementation.&lt;/p&gt; 
 &lt;p&gt;Please either use &lt;code&gt;batman&lt;/code&gt;, or convert the shell script to a &lt;a href="https://en.wikipedia.org/wiki/Shebang_(Unix)"&gt;shebang executable&lt;/a&gt; and point &lt;code&gt;MANPAGER&lt;/code&gt; to that.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Note that the &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/assets/syntaxes/02_Extra/Manpage.sublime-syntax"&gt;Manpage syntax&lt;/a&gt; is developed in this repository and still needs some work.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;prettier&lt;/code&gt; / &lt;code&gt;shfmt&lt;/code&gt; / &lt;code&gt;rustfmt&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;The &lt;a href="https://github.com/eth-p/bat-extras/raw/master/doc/prettybat.md"&gt;&lt;code&gt;prettybat&lt;/code&gt;&lt;/a&gt; script is a wrapper that will format code and print it with &lt;code&gt;bat&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Warp&lt;/code&gt;&lt;/h4&gt; 
&lt;a href="https://app.warp.dev/drive/folder/-Bat-Warp-Pack-lxhe7HrEwgwpG17mvrFSz1"&gt; &lt;img src="https://raw.githubusercontent.com/sharkdp/bat/master/doc/sponsors/warp-pack-header.png" alt="Warp" /&gt; &lt;/a&gt; 
&lt;h4&gt;Highlighting &lt;code&gt;--help&lt;/code&gt; messages&lt;/h4&gt; 
&lt;p&gt;You can use &lt;code&gt;bat&lt;/code&gt; to colorize help text: &lt;code&gt;$ cp --help | bat -plhelp&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;You can also use a wrapper around this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# in your .bashrc/.zshrc/*rc
alias bathelp='bat --plain --language=help'
help() {
    "$@" --help 2&amp;gt;&amp;amp;1 | bathelp
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then you can do &lt;code&gt;$ help cp&lt;/code&gt; or &lt;code&gt;$ help git commit&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;When you are using &lt;code&gt;zsh&lt;/code&gt;, you can also use global aliases to override &lt;code&gt;-h&lt;/code&gt; and &lt;code&gt;--help&lt;/code&gt; entirely:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;alias -g -- -h='-h 2&amp;gt;&amp;amp;1 | bat --language=help --style=plain'
alias -g -- --help='--help 2&amp;gt;&amp;amp;1 | bat --language=help --style=plain'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For &lt;code&gt;fish&lt;/code&gt;, you can use abbreviations:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-fish"&gt;abbr -a --position anywhere -- --help '--help | bat -plhelp'
abbr -a --position anywhere -- -h '-h | bat -plhelp'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This way, you can keep on using &lt;code&gt;cp --help&lt;/code&gt;, but get colorized help pages.&lt;/p&gt; 
&lt;p&gt;Be aware that in some cases, &lt;code&gt;-h&lt;/code&gt; may not be a shorthand of &lt;code&gt;--help&lt;/code&gt; (for example with &lt;code&gt;ls&lt;/code&gt;). In cases where you need to use &lt;code&gt;-h&lt;/code&gt; as a command argument you can prepend &lt;code&gt;\&lt;/code&gt; to the arguement (eg. &lt;code&gt;ls \-h&lt;/code&gt;) to escape the aliasing defined above.&lt;/p&gt; 
&lt;p&gt;Please report any issues with the help syntax in &lt;a href="https://github.com/victor-gp/cmd-help-sublime-syntax"&gt;this repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;!--

Installation instructions need to:
* be for widely used systems
* be non-obvious
* be from somewhat official sources

--&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/bat-cat/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/bat-cat.svg?columns=3&amp;amp;exclude_unsupported=1" alt="Packaging status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;On Ubuntu (using &lt;code&gt;apt&lt;/code&gt;)&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;... and other Debian-based Linux distributions.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; is available on &lt;a href="https://packages.ubuntu.com/search?keywords=bat&amp;amp;exact=1"&gt;Ubuntu since 20.04 ("Focal")&lt;/a&gt; and &lt;a href="https://packages.debian.org/bullseye/bat"&gt;Debian since August 2021 (Debian 11 - "Bullseye")&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If your Ubuntu/Debian installation is new enough you can simply run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt install bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: If you install &lt;code&gt;bat&lt;/code&gt; this way, please note that the executable may be installed as &lt;code&gt;batcat&lt;/code&gt; instead of &lt;code&gt;bat&lt;/code&gt; (due to &lt;a href="https://github.com/sharkdp/bat/issues/982"&gt;a name clash with another package&lt;/a&gt;). You can set up a &lt;code&gt;bat -&amp;gt; batcat&lt;/code&gt; symlink or alias to prevent any issues that may come up because of this and to be consistent with other distributions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mkdir -p ~/.local/bin
ln -s /usr/bin/batcat ~/.local/bin/bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;an example alias for &lt;code&gt;batcat&lt;/code&gt; as &lt;code&gt;bat&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;alias bat="batcat"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Ubuntu (using most recent &lt;code&gt;.deb&lt;/code&gt; packages)&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;... and other Debian-based Linux distributions.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;If the package has not yet been promoted to your Ubuntu/Debian installation, or you want the most recent release of &lt;code&gt;bat&lt;/code&gt;, download the latest &lt;code&gt;.deb&lt;/code&gt; package from the &lt;a href="https://github.com/sharkdp/bat/releases"&gt;release page&lt;/a&gt; and install it via:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo dpkg -i bat_0.18.3_amd64.deb  # adapt version number and architecture
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Alpine Linux&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://pkgs.alpinelinux.org/packages?name=bat"&gt;the &lt;code&gt;bat&lt;/code&gt; package&lt;/a&gt; from the official sources, provided you have the appropriate repository enabled:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;apk add bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Arch Linux&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://www.archlinux.org/packages/extra/x86_64/bat/"&gt;the &lt;code&gt;bat&lt;/code&gt; package&lt;/a&gt; from the official sources:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pacman -S bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Fedora&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://koji.fedoraproject.org/koji/packageinfo?packageID=27506"&gt;the &lt;code&gt;bat&lt;/code&gt; package&lt;/a&gt; from the official &lt;a href="https://docs.fedoraproject.org/en-US/modularity/using-modules/"&gt;Fedora Modular&lt;/a&gt; repository.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dnf install bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Gentoo Linux&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://packages.gentoo.org/packages/sys-apps/bat"&gt;the &lt;code&gt;bat&lt;/code&gt; package&lt;/a&gt; from the official sources:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;emerge sys-apps/bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On FreeBSD&lt;/h3&gt; 
&lt;p&gt;You can install a precompiled &lt;a href="https://www.freshports.org/textproc/bat"&gt;&lt;code&gt;bat&lt;/code&gt; package&lt;/a&gt; with pkg:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pkg install bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or build it on your own from the FreeBSD ports:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd /usr/ports/textproc/bat
make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On OpenBSD&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;bat&lt;/code&gt; package using &lt;a href="https://man.openbsd.org/pkg_add.1"&gt;&lt;code&gt;pkg_add(1)&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pkg_add bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Via nix&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;bat&lt;/code&gt; using the &lt;a href="https://nixos.org/nix"&gt;nix package manager&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nix-env -i bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On openSUSE&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;bat&lt;/code&gt; with zypper:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;zypper install bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Via snap package&lt;/h3&gt; 
&lt;p&gt;There is currently no recommended snap package available. Existing packages may be available, but are not officially supported and may contain &lt;a href="https://github.com/sharkdp/bat/issues/1519"&gt;issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;On macOS (or Linux) via Homebrew&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;bat&lt;/code&gt; with &lt;a href="https://formulae.brew.sh/formula/bat"&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On macOS via MacPorts&lt;/h3&gt; 
&lt;p&gt;Or install &lt;code&gt;bat&lt;/code&gt; with &lt;a href="https://ports.macports.org/port/bat/summary"&gt;MacPorts&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;port install bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Windows&lt;/h3&gt; 
&lt;p&gt;There are a few options to install &lt;code&gt;bat&lt;/code&gt; on Windows. Once you have installed &lt;code&gt;bat&lt;/code&gt;, take a look at the &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#using-bat-on-windows"&gt;"Using &lt;code&gt;bat&lt;/code&gt; on Windows"&lt;/a&gt; section.&lt;/p&gt; 
&lt;h4&gt;Prerequisites&lt;/h4&gt; 
&lt;p&gt;You will need to install the &lt;a href="https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist#latest-microsoft-visual-c-redistributable-version"&gt;Visual C++ Redistributable&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;With WinGet&lt;/h4&gt; 
&lt;p&gt;You can install &lt;code&gt;bat&lt;/code&gt; via &lt;a href="https://learn.microsoft.com/en-us/windows/package-manager/winget"&gt;WinGet&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;winget install sharkdp.bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;With Chocolatey&lt;/h4&gt; 
&lt;p&gt;You can install &lt;code&gt;bat&lt;/code&gt; via &lt;a href="https://chocolatey.org/packages/Bat"&gt;Chocolatey&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;choco install bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;With Scoop&lt;/h4&gt; 
&lt;p&gt;You can install &lt;code&gt;bat&lt;/code&gt; via &lt;a href="https://scoop.sh/"&gt;scoop&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;scoop install bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;From prebuilt binaries:&lt;/h4&gt; 
&lt;p&gt;You can download prebuilt binaries from the &lt;a href="https://github.com/sharkdp/bat/releases"&gt;Release page&lt;/a&gt;,&lt;/p&gt; 
&lt;p&gt;You will need to install the &lt;a href="https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads"&gt;Visual C++ Redistributable&lt;/a&gt; package.&lt;/p&gt; 
&lt;h3&gt;From binaries&lt;/h3&gt; 
&lt;p&gt;Check out the &lt;a href="https://github.com/sharkdp/bat/releases"&gt;Release page&lt;/a&gt; for prebuilt versions of &lt;code&gt;bat&lt;/code&gt; for many different architectures. Statically-linked binaries are also available: look for archives with &lt;code&gt;musl&lt;/code&gt; in the file name.&lt;/p&gt; 
&lt;h3&gt;From source&lt;/h3&gt; 
&lt;p&gt;If you want to build &lt;code&gt;bat&lt;/code&gt; from source, you need Rust 1.74.0 or higher. You can then use &lt;code&gt;cargo&lt;/code&gt; to build everything:&lt;/p&gt; 
&lt;h4&gt;From local source&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cargo install --path . --locked
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] The &lt;code&gt;--path .&lt;/code&gt; above specifies the directory of the source code and NOT where &lt;code&gt;bat&lt;/code&gt; will be installed. For more information see the docs for &lt;a href="https://doc.rust-lang.org/cargo/commands/cargo-install.html"&gt;&lt;code&gt;cargo install&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;From &lt;code&gt;crates.io&lt;/code&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cargo install --locked bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that additional files like the man page or shell completion files can not be installed automatically in both these ways. If installing from a local source, they will be generated by &lt;code&gt;cargo&lt;/code&gt; and should be available in the cargo target folder under &lt;code&gt;build&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Furthermore, shell completions are also available by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat --completion &amp;lt;shell&amp;gt;
# see --help for supported shells
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Customization&lt;/h2&gt; 
&lt;h3&gt;Highlighting theme&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;bat --list-themes&lt;/code&gt; to get a list of all available themes for syntax highlighting. By default, &lt;code&gt;bat&lt;/code&gt; uses &lt;code&gt;Monokai Extended&lt;/code&gt; or &lt;code&gt;Monokai Extended Light&lt;/code&gt; for dark and light themes respectively. To select the &lt;code&gt;TwoDark&lt;/code&gt; theme, call &lt;code&gt;bat&lt;/code&gt; with the &lt;code&gt;--theme=TwoDark&lt;/code&gt; option or set the &lt;code&gt;BAT_THEME&lt;/code&gt; environment variable to &lt;code&gt;TwoDark&lt;/code&gt;. Use &lt;code&gt;export BAT_THEME="TwoDark"&lt;/code&gt; in your shell's startup file to make the change permanent. Alternatively, use &lt;code&gt;bat&lt;/code&gt;'s &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#configuration-file"&gt;configuration file&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to preview the different themes on a custom file, you can use the following command (you need &lt;a href="https://github.com/junegunn/fzf"&gt;&lt;code&gt;fzf&lt;/code&gt;&lt;/a&gt; for this):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat --list-themes | fzf --preview="bat --theme={} --color=always /path/to/file"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; automatically picks a fitting theme depending on your terminal's background color. You can use the &lt;code&gt;--theme-dark&lt;/code&gt; / &lt;code&gt;--theme-light&lt;/code&gt; options or the &lt;code&gt;BAT_THEME_DARK&lt;/code&gt; / &lt;code&gt;BAT_THEME_LIGHT&lt;/code&gt; environment variables to customize the themes used. This is especially useful if you frequently switch between dark and light mode.&lt;/p&gt; 
&lt;p&gt;You can also use a custom theme by following the &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#adding-new-themes"&gt;'Adding new themes' section below&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;8-bit themes&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; has three themes that always use &lt;a href="https://en.wikipedia.org/wiki/ANSI_escape_code#Colors"&gt;8-bit colors&lt;/a&gt;, even when truecolor support is available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ansi&lt;/code&gt; looks decent on any terminal. It uses 3-bit colors: black, red, green, yellow, blue, magenta, cyan, and white.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;base16&lt;/code&gt; is designed for &lt;a href="https://github.com/tinted-theming/home"&gt;base16&lt;/a&gt; terminal themes. It uses 4-bit colors (3-bit colors plus bright variants) in accordance with the &lt;a href="https://github.com/tinted-theming/home/raw/main/styling.md"&gt;base16 styling guidelines&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;base16-256&lt;/code&gt; is designed for &lt;a href="https://github.com/tinted-theming/tinted-shell"&gt;tinted-shell&lt;/a&gt;. It replaces certain bright colors with 8-bit colors from 16 to 21. &lt;strong&gt;Do not&lt;/strong&gt; use this simply because you have a 256-color terminal but are not using tinted-shell.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Although these themes are more restricted, they have three advantages over truecolor themes. They:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enjoy maximum compatibility. Some terminal utilities do not support more than 3-bit colors.&lt;/li&gt; 
 &lt;li&gt;Adapt to terminal theme changes. Even for already printed output.&lt;/li&gt; 
 &lt;li&gt;Visually harmonize better with other terminal software.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Output style&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;--style&lt;/code&gt; option to control the appearance of &lt;code&gt;bat&lt;/code&gt;'s output. You can use &lt;code&gt;--style=numbers,changes&lt;/code&gt;, for example, to show only Git changes and line numbers but no grid and no file header. Set the &lt;code&gt;BAT_STYLE&lt;/code&gt; environment variable to make these changes permanent or use &lt;code&gt;bat&lt;/code&gt;'s &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#configuration-file"&gt;configuration file&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!tip] If you specify a default style in &lt;code&gt;bat&lt;/code&gt;'s config file, you can change which components are displayed during a single run of &lt;code&gt;bat&lt;/code&gt; using the &lt;code&gt;--style&lt;/code&gt; command-line argument. By prefixing a component with &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt;, it can be added or removed from the current style.&lt;/p&gt; 
 &lt;p&gt;For example, if your config contains &lt;code&gt;--style=full,-snip&lt;/code&gt;, you can run bat with &lt;code&gt;--style=-grid,+snip&lt;/code&gt; to remove the grid and add back the &lt;code&gt;snip&lt;/code&gt; component. Or, if you want to override the styles completely, you use &lt;code&gt;--style=numbers&lt;/code&gt; to only show the line numbers.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Adding new syntaxes / language definitions&lt;/h3&gt; 
&lt;p&gt;Should you find that a particular syntax is not available within &lt;code&gt;bat&lt;/code&gt;, you can follow these instructions to easily add new syntaxes to your current &lt;code&gt;bat&lt;/code&gt; installation.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; uses the excellent &lt;a href="https://github.com/trishume/syntect/"&gt;&lt;code&gt;syntect&lt;/code&gt;&lt;/a&gt; library for syntax highlighting. &lt;code&gt;syntect&lt;/code&gt; can read any &lt;a href="https://www.sublimetext.com/docs/3/syntax.html"&gt;Sublime Text &lt;code&gt;.sublime-syntax&lt;/code&gt; file&lt;/a&gt; and theme.&lt;/p&gt; 
&lt;p&gt;A good resource for finding Sublime Syntax packages is &lt;a href="https://packagecontrol.io/"&gt;Package Control&lt;/a&gt;. Once you found a syntax:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create a folder with syntax definition files:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;mkdir -p "$(bat --config-dir)/syntaxes"
cd "$(bat --config-dir)/syntaxes"

# Put new '.sublime-syntax' language definition files
# in this folder (or its subdirectories), for example:
git clone https://github.com/tellnobody1/sublime-purescript-syntax
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Now use the following command to parse these files into a binary cache:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;bat cache --build
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Finally, use &lt;code&gt;bat --list-languages&lt;/code&gt; to check if the new languages are available.&lt;/p&gt; &lt;p&gt;If you ever want to go back to the default settings, call:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;bat cache --clear
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you think that a specific syntax should be included in &lt;code&gt;bat&lt;/code&gt; by default, please consider opening a "syntax request" ticket after reading the policies and instructions &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/doc/assets.md"&gt;here&lt;/a&gt;: &lt;a href="https://github.com/sharkdp/bat/issues/new?labels=syntax-request&amp;amp;template=syntax_request.md"&gt;Open Syntax Request&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Adding new themes&lt;/h3&gt; 
&lt;p&gt;This works very similar to how we add new syntax definitions.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Themes are stored in &lt;a href="https://www.sublimetext.com/docs/color_schemes_tmtheme.html"&gt;&lt;code&gt;.tmTheme&lt;/code&gt; files&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;First, create a folder with the new syntax highlighting themes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mkdir -p "$(bat --config-dir)/themes"
cd "$(bat --config-dir)/themes"

# Download a theme in '.tmTheme' format, for example:
git clone https://github.com/greggb/sublime-snazzy

# Update the binary cache
bat cache --build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, use &lt;code&gt;bat --list-themes&lt;/code&gt; to check if the new themes are available.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] &lt;code&gt;bat&lt;/code&gt; uses the name of the &lt;code&gt;.tmTheme&lt;/code&gt; file for the theme's name.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Adding or changing file type associations&lt;/h3&gt; 
&lt;p&gt;You can add new (or change existing) file name patterns using the &lt;code&gt;--map-syntax&lt;/code&gt; command line option. The option takes an argument of the form &lt;code&gt;pattern:syntax&lt;/code&gt; where &lt;code&gt;pattern&lt;/code&gt; is a glob pattern that is matched against the file name and the absolute file path. The &lt;code&gt;syntax&lt;/code&gt; part is the full name of a supported language (use &lt;code&gt;bat --list-languages&lt;/code&gt; for an overview).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You probably want to use this option as &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#configuration-file"&gt;an entry in &lt;code&gt;bat&lt;/code&gt;'s configuration file&lt;/a&gt; for persistence instead of passing it on the command line as a one-off. Generally you'd just use &lt;code&gt;-l&lt;/code&gt; if you want to manually specify a language for a file.&lt;/p&gt; 
&lt;p&gt;Example: To use "INI" syntax highlighting for all files with a &lt;code&gt;.conf&lt;/code&gt; file extension, use&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;--map-syntax='*.conf:INI'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: To open all files called &lt;code&gt;.ignore&lt;/code&gt; (exact match) with the "Git Ignore" syntax, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;--map-syntax='.ignore:Git Ignore'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: To open all &lt;code&gt;.conf&lt;/code&gt; files in subfolders of &lt;code&gt;/etc/apache2&lt;/code&gt; with the "Apache Conf" syntax, use (this mapping is already built in):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;--map-syntax='/etc/apache2/**/*.conf:Apache Conf'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using a different pager&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; uses the pager that is specified in the &lt;code&gt;PAGER&lt;/code&gt; environment variable. If this variable is not set, &lt;code&gt;less&lt;/code&gt; is used by default. You can also use bat's built-in pager with &lt;code&gt;--pager=builtin&lt;/code&gt; or by setting the &lt;code&gt;BAT_PAGER&lt;/code&gt; environment variable to "builtin".&lt;/p&gt; 
&lt;p&gt;If you want to use a different pager, you can either modify the &lt;code&gt;PAGER&lt;/code&gt; variable or set the &lt;code&gt;BAT_PAGER&lt;/code&gt; environment variable to override what is specified in &lt;code&gt;PAGER&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If &lt;code&gt;PAGER&lt;/code&gt; is &lt;code&gt;more&lt;/code&gt; or &lt;code&gt;most&lt;/code&gt;, &lt;code&gt;bat&lt;/code&gt; will silently use &lt;code&gt;less&lt;/code&gt; instead to ensure support for colors.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to pass command-line arguments to the pager, you can also set them via the &lt;code&gt;PAGER&lt;/code&gt;/&lt;code&gt;BAT_PAGER&lt;/code&gt; variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export BAT_PAGER="less -RFK"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Instead of using environment variables, you can also use &lt;code&gt;bat&lt;/code&gt;'s &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#configuration-file"&gt;configuration file&lt;/a&gt; to configure the pager (&lt;code&gt;--pager&lt;/code&gt; option).&lt;/p&gt; 
&lt;h3&gt;Using &lt;code&gt;less&lt;/code&gt; as a pager&lt;/h3&gt; 
&lt;p&gt;When using &lt;code&gt;less&lt;/code&gt; as a pager, &lt;code&gt;bat&lt;/code&gt; will automatically pass extra options along to &lt;code&gt;less&lt;/code&gt; to improve the experience. Specifically, &lt;code&gt;-R&lt;/code&gt;/&lt;code&gt;--RAW-CONTROL-CHARS&lt;/code&gt;, &lt;code&gt;-F&lt;/code&gt;/&lt;code&gt;--quit-if-one-screen&lt;/code&gt;, &lt;code&gt;-K&lt;/code&gt;/&lt;code&gt;--quit-on-intr&lt;/code&gt; and under certain conditions, &lt;code&gt;-X&lt;/code&gt;/&lt;code&gt;--no-init&lt;/code&gt; and/or &lt;code&gt;-S&lt;/code&gt;/&lt;code&gt;--chop-long-lines&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] These options will not be added if:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The pager is not named &lt;code&gt;less&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;The &lt;code&gt;--pager&lt;/code&gt; argument contains any command-line arguments (e.g. &lt;code&gt;--pager="less -R"&lt;/code&gt;).&lt;/li&gt; 
  &lt;li&gt;The &lt;code&gt;BAT_PAGER&lt;/code&gt; environment variable contains any command-line arguments (e.g. &lt;code&gt;export BAT_PAGER="less -R"&lt;/code&gt;)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;The &lt;code&gt;--quit-if-one-screen&lt;/code&gt; option will not be added when:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The &lt;code&gt;--paging=always&lt;/code&gt; argument is used.&lt;/li&gt; 
  &lt;li&gt;The &lt;code&gt;BAT_PAGING&lt;/code&gt; environment is set to &lt;code&gt;always&lt;/code&gt;.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The &lt;code&gt;-R&lt;/code&gt; option is needed to interpret ANSI colors correctly.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;-F&lt;/code&gt; option instructs &lt;code&gt;less&lt;/code&gt; to exit immediately if the output size is smaller than the vertical size of the terminal. This is convenient for small files because you do not have to press &lt;code&gt;q&lt;/code&gt; to quit the pager.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;-K&lt;/code&gt; option instructs &lt;code&gt;less&lt;/code&gt; to exit immediately when an interrupt signal is received. This is useful to ensure that &lt;code&gt;less&lt;/code&gt; quits together with &lt;code&gt;bat&lt;/code&gt; on SIGINT.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;-X&lt;/code&gt; option is needed to fix a bug with the &lt;code&gt;--quit-if-one-screen&lt;/code&gt; feature in versions of &lt;code&gt;less&lt;/code&gt; older than version 530. Unfortunately, it also breaks mouse-wheel support in &lt;code&gt;less&lt;/code&gt;. If you want to enable mouse-wheel scrolling on older versions of &lt;code&gt;less&lt;/code&gt; and do not mind losing the quit-if-one-screen feature, you can set the pager (via &lt;code&gt;--pager&lt;/code&gt; or &lt;code&gt;BAT_PAGER&lt;/code&gt;) to &lt;code&gt;less -R&lt;/code&gt;. For &lt;code&gt;less&lt;/code&gt; 530 or newer, it should work out of the box.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;-S&lt;/code&gt; option is added when &lt;code&gt;bat&lt;/code&gt;'s &lt;code&gt;-S&lt;/code&gt;/&lt;code&gt;--chop-long-lines&lt;/code&gt; option is used. This tells &lt;code&gt;less&lt;/code&gt; to truncate any lines larger than the terminal width.&lt;/p&gt; 
&lt;h3&gt;Indentation&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; expands tabs to 4 spaces by itself, not relying on the pager. To change this, simply add the &lt;code&gt;--tabs&lt;/code&gt; argument with the number of spaces you want to be displayed.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Defining tab stops for the pager (via the &lt;code&gt;--pager&lt;/code&gt; argument by &lt;code&gt;bat&lt;/code&gt;, or via the &lt;code&gt;LESS&lt;/code&gt; environment variable for &lt;code&gt;less&lt;/code&gt;) won't be taken into account because the pager will already get expanded spaces instead of tabs. This behaviour is added to avoid indentation issues caused by the sidebar. Calling &lt;code&gt;bat&lt;/code&gt; with &lt;code&gt;--tabs=0&lt;/code&gt; will override it and let tabs be consumed by the pager.&lt;/p&gt; 
&lt;h3&gt;Dark mode&lt;/h3&gt; 
&lt;p&gt;If you make use of the dark mode feature in &lt;strong&gt;macOS&lt;/strong&gt;, you might want to configure &lt;code&gt;bat&lt;/code&gt; to use a different theme based on the OS theme. The following snippet uses the &lt;code&gt;default&lt;/code&gt; theme when in the &lt;em&gt;dark mode&lt;/em&gt; and the &lt;code&gt;GitHub&lt;/code&gt; theme when in the &lt;em&gt;light mode&lt;/em&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;alias cat="bat --theme auto:system --theme-dark default --theme-light GitHub"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The same dark mode feature is now available in &lt;strong&gt;GNOME&lt;/strong&gt; and affects the &lt;code&gt;org.gnome.desktop.interface color-scheme&lt;/code&gt; setting. The following code converts the above to use said setting.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# .bashrc
sys_color_scheme_is_dark() {
    condition=$(gsettings get org.gnome.desktop.interface color-scheme)
    condition=$(echo "$condition" | tr -d "[:space:]'")
    if [ $condition == "prefer-dark" ]; then
        return 0
    else
        return 1
    fi
}

bat_alias_wrapper() {
    #get color scheme
    sys_color_scheme_is_dark
    if [[ $? -eq 0 ]]; then
        # bat command with dark color scheme
        bat --theme=default "$@"
    else
        # bat command with light color scheme
        bat --theme=GitHub "$@"
    fi
}
alias cat='bat_alias_wrapper'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configuration file&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; can also be customized with a configuration file. The location of the file is dependent on your operating system. To get the default path for your system, call&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat --config-file
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can use &lt;code&gt;BAT_CONFIG_PATH&lt;/code&gt; or &lt;code&gt;BAT_CONFIG_DIR&lt;/code&gt; environment variables to point &lt;code&gt;bat&lt;/code&gt; to a non-default location of the configuration file or the configuration directory respectively:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export BAT_CONFIG_PATH="/path/to/bat/bat.conf"
export BAT_CONFIG_DIR="/path/to/bat"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A default configuration file can be created with the &lt;code&gt;--generate-config-file&lt;/code&gt; option.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat --generate-config-file
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There is also now a systemwide configuration file, which is located under &lt;code&gt;/etc/bat/config&lt;/code&gt; on Linux and Mac OS and &lt;code&gt;C:\ProgramData\bat\config&lt;/code&gt; on windows. If the system wide configuration file is present, the content of the user configuration will simply be appended to it.&lt;/p&gt; 
&lt;h3&gt;Format&lt;/h3&gt; 
&lt;p&gt;The configuration file is a simple list of command line arguments. Use &lt;code&gt;bat --help&lt;/code&gt; to see a full list of possible options and values. In addition, you can add comments by prepending a line with the &lt;code&gt;#&lt;/code&gt; character.&lt;/p&gt; 
&lt;p&gt;Example configuration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Set the theme to "TwoDark"
--theme="TwoDark"

# Show line numbers, Git modifications and file header (but no grid)
--style="numbers,changes,header"

# Use italic text on the terminal (not supported on all terminals)
--italic-text=always

# Use C++ syntax for Arduino .ino files
--map-syntax "*.ino:C++"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using &lt;code&gt;bat&lt;/code&gt; on Windows&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; mostly works out-of-the-box on Windows, but a few features may need extra configuration.&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;You will need to install the &lt;a href="https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads"&gt;Visual C++ Redistributable&lt;/a&gt; package.&lt;/p&gt; 
&lt;h3&gt;Paging&lt;/h3&gt; 
&lt;p&gt;Windows only includes a very limited pager in the form of &lt;code&gt;more&lt;/code&gt;. You can download a Windows binary for &lt;code&gt;less&lt;/code&gt; &lt;a href="http://www.greenwoodsoftware.com/less/download.html"&gt;from its homepage&lt;/a&gt; or &lt;a href="https://chocolatey.org/packages/Less"&gt;through Chocolatey&lt;/a&gt;. To use it, place the binary in a directory in your &lt;code&gt;PATH&lt;/code&gt; or &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#using-a-different-pager"&gt;define an environment variable&lt;/a&gt;. The &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#on-windows"&gt;Chocolatey package&lt;/a&gt; installs &lt;code&gt;less&lt;/code&gt; automatically.&lt;/p&gt; 
&lt;h3&gt;Colors&lt;/h3&gt; 
&lt;p&gt;Windows 10 natively supports colors in both &lt;code&gt;conhost.exe&lt;/code&gt; (Command Prompt) and PowerShell since &lt;a href="https://en.wikipedia.org/wiki/Windows_10_version_history#Version_1511_(November_Update)"&gt;v1511&lt;/a&gt;, as well as in newer versions of bash. On earlier versions of Windows, you can use &lt;a href="http://cmder.app/"&gt;Cmder&lt;/a&gt;, which includes &lt;a href="https://conemu.github.io/"&gt;ConEmu&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Old versions of &lt;code&gt;less&lt;/code&gt; do not correctly interpret colors on Windows. To fix this, you can add the optional Unix tools to your PATH when installing Git. If you don’t have any other pagers installed, you can disable paging entirely by passing &lt;code&gt;--paging=never&lt;/code&gt; or by setting &lt;code&gt;BAT_PAGER&lt;/code&gt; to an empty string.&lt;/p&gt; 
&lt;h3&gt;Cygwin&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; on Windows does not natively support Cygwin's unix-style paths (&lt;code&gt;/cygdrive/*&lt;/code&gt;). When passed an absolute cygwin path as an argument, &lt;code&gt;bat&lt;/code&gt; will encounter the following error: &lt;code&gt;The system cannot find the path specified. (os error 3)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This can be solved by creating a wrapper or adding the following function to your &lt;code&gt;.bash_profile&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat() {
    local index
    local args=("$@")
    for index in $(seq 0 ${#args[@]}) ; do
        case "${args[index]}" in
        -*) continue;;
        *)  [ -e "${args[index]}" ] &amp;amp;&amp;amp; args[index]="$(cygpath --windows "${args[index]}")";;
        esac
    done
    command bat "${args[@]}"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;h3&gt;Garbled output&lt;/h3&gt; 
&lt;p&gt;If an input file contains color codes or other ANSI escape sequences or control characters, &lt;code&gt;bat&lt;/code&gt; will have problems performing syntax highlighting and text wrapping, and thus the output can become garbled.&lt;/p&gt; 
&lt;p&gt;If your version of &lt;code&gt;bat&lt;/code&gt; supports the &lt;code&gt;--strip-ansi=auto&lt;/code&gt; option, it can be used to remove such sequences before syntax highlighting. Alternatively, you may disable both syntax highlighting and wrapping by passing the &lt;code&gt;--color=never --wrap=never&lt;/code&gt; options to &lt;code&gt;bat&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] The &lt;code&gt;auto&lt;/code&gt; option of &lt;code&gt;--strip-ansi&lt;/code&gt; avoids removing escape sequences when the syntax is plain text.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Terminals &amp;amp; colors&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; handles terminals &lt;em&gt;with&lt;/em&gt; and &lt;em&gt;without&lt;/em&gt; truecolor support. However, the colors in most syntax highlighting themes are not optimized for 8-bit colors. It is therefore strongly recommended that you use a terminal with 24-bit truecolor support (&lt;code&gt;terminator&lt;/code&gt;, &lt;code&gt;konsole&lt;/code&gt;, &lt;code&gt;iTerm2&lt;/code&gt;, ...), or use one of the basic &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#8-bit-themes"&gt;8-bit themes&lt;/a&gt; designed for a restricted set of colors. See &lt;a href="https://gist.github.com/XVilka/8346728"&gt;this article&lt;/a&gt; for more details and a full list of terminals with truecolor support.&lt;/p&gt; 
&lt;p&gt;Make sure that your truecolor terminal sets the &lt;code&gt;COLORTERM&lt;/code&gt; variable to either &lt;code&gt;truecolor&lt;/code&gt; or &lt;code&gt;24bit&lt;/code&gt;. Otherwise, &lt;code&gt;bat&lt;/code&gt; will not be able to determine whether or not 24-bit escape sequences are supported (and fall back to 8-bit colors).&lt;/p&gt; 
&lt;h3&gt;Line numbers and grid are hardly visible&lt;/h3&gt; 
&lt;p&gt;Please try a different theme (see &lt;code&gt;bat --list-themes&lt;/code&gt; for a list). The &lt;code&gt;OneHalfDark&lt;/code&gt; and &lt;code&gt;OneHalfLight&lt;/code&gt; themes provide grid and line colors that are brighter.&lt;/p&gt; 
&lt;h3&gt;File encodings&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; natively supports UTF-8 as well as UTF-16. For every other file encoding, you may need to convert to UTF-8 first because the encodings can typically not be auto-detected. You can &lt;code&gt;iconv&lt;/code&gt; to do so. Example: if you have a PHP file in Latin-1 (ISO-8859-1) encoding, you can call:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;iconv -f ISO-8859-1 -t UTF-8 my-file.php | bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: you might have to use the &lt;code&gt;-l&lt;/code&gt;/&lt;code&gt;--language&lt;/code&gt; option if the syntax can not be auto-detected by &lt;code&gt;bat&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Recursive clone to retrieve all submodules
git clone --recursive https://github.com/sharkdp/bat

# Build (debug version)
cd bat
cargo build --bins

# Run unit tests and integration tests
cargo test

# Install (release version)
cargo install --path . --locked

# Build a bat binary with modified syntaxes and themes
bash assets/create.sh
cargo install --path . --locked --force
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to build an application that uses &lt;code&gt;bat&lt;/code&gt;'s pretty-printing features as a library, check out the &lt;a href="https://docs.rs/bat/"&gt;the API documentation&lt;/a&gt;. Note that you have to use either &lt;code&gt;regex-onig&lt;/code&gt; or &lt;code&gt;regex-fancy&lt;/code&gt; as a feature when you depend on &lt;code&gt;bat&lt;/code&gt; as a library.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Take a look at the &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/CONTRIBUTING.md"&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; guide.&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sharkdp"&gt;sharkdp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eth-p"&gt;eth-p&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/keith-hall"&gt;keith-hall&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Enselic"&gt;Enselic&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security vulnerabilities&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/SECURITY.md"&gt;&lt;code&gt;SECURITY.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Project goals and alternatives&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; tries to achieve the following goals:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Provide beautiful, advanced syntax highlighting&lt;/li&gt; 
 &lt;li&gt;Integrate with Git to show file modifications&lt;/li&gt; 
 &lt;li&gt;Be a drop-in replacement for (POSIX) &lt;code&gt;cat&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Offer a user-friendly command-line interface&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are a lot of alternatives, if you are looking for similar programs. See &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/doc/alternatives.md"&gt;this document&lt;/a&gt; for a comparison.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2018-2023 &lt;a href="https://github.com/sharkdp/bat"&gt;bat-developers&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; is made available under the terms of either the MIT License or the Apache License 2.0, at your option.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt; files for license details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitoxideLabs/gitoxide</title>
      <link>https://github.com/GitoxideLabs/gitoxide</link>
      <description>&lt;p&gt;An idiomatic, lean, fast &amp; safe pure Rust implementation of Git&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/actions"&gt;&lt;img src="https://github.com/GitoxideLabs/gitoxide/workflows/ci/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/gitoxide"&gt;&lt;img src="https://img.shields.io/crates/v/gitoxide.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;img src="https://raw.githubusercontent.com/GitoxideLabs/gitoxide/main/etc/msrv-badge.svg?sanitize=true" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;gitoxide&lt;/code&gt; is an implementation of &lt;code&gt;git&lt;/code&gt; written in Rust for developing future-proof applications which strive for correctness and performance while providing a pleasant and unsurprising developer experience.&lt;/p&gt; 
&lt;p&gt;There are two primary ways to use &lt;code&gt;gitoxide&lt;/code&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;As Rust library&lt;/strong&gt;: Use the &lt;a href="https://docs.rs/gix"&gt;&lt;code&gt;gix&lt;/code&gt;&lt;/a&gt; crate as a Cargo dependency for API access.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;As command-line tool&lt;/strong&gt;: The &lt;code&gt;gix&lt;/code&gt; binary as development tool to help testing the API in real repositories, and the &lt;code&gt;ein&lt;/code&gt; binary with workflow-enhancing tools. Both binaries may forever be unstable, &lt;em&gt;do not rely on them in scripts&lt;/em&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://asciinema.org/a/542159"&gt;&lt;img src="https://raw.githubusercontent.com/GitoxideLabs/gitoxide/main/etc/gix-asciicast.svg?sanitize=true" alt="asciicast" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Development Status&lt;/h2&gt; 
&lt;p&gt;The command-line tools as well as the status of each crate is described in &lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md"&gt;the crate status document&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For use in applications, look for the &lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix"&gt;&lt;code&gt;gix&lt;/code&gt;&lt;/a&gt; crate, which serves as entrypoint to the functionality provided by various lower-level plumbing crates like &lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-config"&gt;&lt;code&gt;gix-config&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Feature Discovery&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Can &lt;code&gt;gix&lt;/code&gt; do what I need it to do?&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The above can be hard to answer and this paragraph is here to help with feature discovery.&lt;/p&gt; 
&lt;p&gt;Look at &lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md"&gt;&lt;code&gt;crate-status.md&lt;/code&gt;&lt;/a&gt; for a rather exhaustive document that contains both implemented and planned features.&lt;/p&gt; 
&lt;p&gt;Further, the &lt;a href="https://docs.rs/gix/latest/gix?search=git2"&gt;&lt;code&gt;gix&lt;/code&gt; crate documentation with the &lt;code&gt;git2&lt;/code&gt; search term&lt;/a&gt; helps to find all currently known &lt;code&gt;git2&lt;/code&gt; equivalent method calls. Please note that this list is definitely not exhaustive yet, but might help if you are coming from &lt;code&gt;git2&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;What follows is a high-level list of features and those which are planned:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; clone&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; fetch&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; push&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; blame (&lt;em&gt;plumbing&lt;/em&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; status&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; blob and tree-diff&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; merge 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; blobs&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; trees&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; commits&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; commit 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; hooks&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; commit-graph traversal&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; rebase&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; worktree checkout and worktree stream&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; reset&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; reading and writing of objects&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; reading and writing of refs&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; reading and writing of &lt;code&gt;.git/index&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; reading and writing of git configuration&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; pathspecs&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; revspecs&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;code&gt;.gitignore&lt;/code&gt; and &lt;code&gt;.gitattributes&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Crates&lt;/h3&gt; 
&lt;p&gt;Follow linked crate name for detailed status. Please note that all crates follow &lt;a href="https://semver.org"&gt;semver&lt;/a&gt; as well as the &lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/STABILITY.md"&gt;stability guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Production Grade&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stability Tier 1&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/gix-lock/README.md"&gt;gix-lock&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stability Tier 2&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/gix-tempfile/README.md"&gt;gix-tempfile&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Stabilization Candidates&lt;/h3&gt; 
&lt;p&gt;Crates that seem feature complete and need to see some more use before they can be released as 1.0. Documentation is complete and was reviewed at least once.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-mailmap"&gt;gix-mailmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-chunk"&gt;gix-chunk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-ref"&gt;gix-ref&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-config"&gt;gix-config&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-config-value"&gt;gix-config-value&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-glob"&gt;gix-glob&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-actor"&gt;gix-actor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-hash"&gt;gix-hash&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Initial Development&lt;/h3&gt; 
&lt;p&gt;These crates may be missing some features and thus are somewhat incomplete, but what's there is usable to some extent.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;usable&lt;/strong&gt; &lt;em&gt;(with rough but complete docs, possibly incomplete functionality)&lt;/em&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix"&gt;gix&lt;/a&gt; (&lt;strong&gt;⬅ entrypoint&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-object"&gt;gix-object&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-validate"&gt;gix-validate&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-url"&gt;gix-url&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-packetline"&gt;gix-packetline&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-packetline"&gt;gix-packetline-blocking&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-transport"&gt;gix-transport&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-protocol"&gt;gix-protocol&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-pack"&gt;gix-pack&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-odb"&gt;gix-odb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-commitgraph"&gt;gix-commitgraph&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-diff"&gt;gix-diff&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-traverse"&gt;gix-traverse&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-features"&gt;gix-features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-credentials"&gt;gix-credentials&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-sec"&gt;gix-sec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-quote"&gt;gix-quote&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-discover"&gt;gix-discover&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-path"&gt;gix-path&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-attributes"&gt;gix-attributes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-ignore"&gt;gix-ignore&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-pathspec"&gt;gix-pathspec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-index"&gt;gix-index&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-revision"&gt;gix-revision&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-revwalk"&gt;gix-revwalk&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-command"&gt;gix-command&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-prompt"&gt;gix-prompt&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-refspec"&gt;gix-refspec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-fs"&gt;gix-fs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-utils"&gt;gix-utils&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-hashtable"&gt;gix-hashtable&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-worktree"&gt;gix-worktree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-bitmap"&gt;gix-bitmap&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-negotiate"&gt;gix-negotiate&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-filter"&gt;gix-filter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-worktree-stream"&gt;gix-worktree-stream&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-archive"&gt;gix-archive&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-submodule"&gt;gix-submodule&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-status"&gt;gix-status&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-worktree-state"&gt;gix-worktree-state&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-date"&gt;gix-date&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-dir"&gt;gix-dir&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-merge"&gt;gix-merge&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-shallow"&gt;gix-shallow&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;gitoxide-core&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;very early&lt;/strong&gt; &lt;em&gt;(possibly without any documentation and many rough edges)&lt;/em&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-blame"&gt;gix-blame&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;idea&lt;/strong&gt; &lt;em&gt;(just a name placeholder)&lt;/em&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-note"&gt;gix-note&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-fetchhead"&gt;gix-fetchhead&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-lfs"&gt;gix-lfs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-rebase"&gt;gix-rebase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-sequencer"&gt;gix-sequencer&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-tui"&gt;gix-tui&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-tix"&gt;gix-tix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-bundle"&gt;gix-bundle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/crate-status.md#gix-fsck"&gt;gix-fsck&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Stress Testing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Verify huge packs&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Explode a pack to disk&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Generate and verify large commit graphs&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Generate huge pack from a lot of loose objects&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Stability and MSRV&lt;/h3&gt; 
&lt;p&gt;Our &lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/STABILITY.md"&gt;stability guide&lt;/a&gt; helps to judge how much churn can be expected when depending on crates in this workspace.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Download a Binary Release&lt;/h3&gt; 
&lt;p&gt;Using &lt;code&gt;cargo binstall&lt;/code&gt;, one is able to fetch &lt;a href="https://github.com/GitoxideLabs/gitoxide/releases"&gt;binary releases&lt;/a&gt;. You can install it via &lt;code&gt;cargo install cargo-binstall&lt;/code&gt;, assuming the &lt;a href="https://rustup.rs"&gt;rust toolchain&lt;/a&gt; is present.&lt;/p&gt; 
&lt;p&gt;Then install gitoxide with &lt;code&gt;cargo binstall gitoxide&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/GitoxideLabs/gitoxide/releases"&gt;releases section&lt;/a&gt; for manual installation and various alternative builds that are &lt;em&gt;slimmer&lt;/em&gt; or &lt;em&gt;smaller&lt;/em&gt;, depending on your needs, for &lt;em&gt;Linux&lt;/em&gt;, &lt;em&gt;MacOS&lt;/em&gt; and &lt;em&gt;Windows&lt;/em&gt;.&lt;/p&gt; 
&lt;h3&gt;Download from Arch Linux repository&lt;/h3&gt; 
&lt;p&gt;For Arch Linux you can download &lt;code&gt;gitoxide&lt;/code&gt; from &lt;code&gt;community&lt;/code&gt; repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pacman -S gitoxide
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Download from Exherbo Linux Rust repository&lt;/h3&gt; 
&lt;p&gt;For Exherbo Linux you can download &lt;code&gt;gitoxide&lt;/code&gt; from the &lt;a href="https://gitlab.exherbo.org/exherbo/rust/-/tree/master/packages/dev-scm/gitoxide"&gt;Rust&lt;/a&gt; repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cave resolve -x repository/rust
cave resolve -x gitoxide
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;From Source via Cargo&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;cargo&lt;/code&gt; is the Rust package manager which can easily be obtained through &lt;a href="https://rustup.rs"&gt;rustup&lt;/a&gt;. With it, you can build your own binary effortlessly and for your particular CPU for additional performance gains.&lt;/p&gt; 
&lt;p&gt;The minimum supported Rust version is &lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/.github/workflows/msrv.yml#L23"&gt;documented in the CI configuration&lt;/a&gt;, the latest stable one will work as well.&lt;/p&gt; 
&lt;p&gt;There are various build configurations, all of them are &lt;a href="https://docs.rs/crate/gitoxide/latest"&gt;documented here&lt;/a&gt;. The documentation should also be useful for packagers who need to tune external dependencies.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# A way to install `gitoxide` with just Rust and a C compiler installed.
# If there are problems with SSL certificates during clones, try to omit `--locked`.
cargo install gitoxide --locked --no-default-features --features max-pure

# The default installation, 'max', is the fastest, but also needs `cmake` to build successfully.
# Installing it is platform-dependent.
cargo install gitoxide

# For smaller binaries and even faster build times that are traded for a less fancy CLI implementation,
# use the `lean` feature.
cargo install gitoxide --locked --no-default-features --features lean
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The following installs the latest unpublished &lt;code&gt;max&lt;/code&gt; release directly from git:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cargo install --git https://github.com/GitoxideLabs/gitoxide gitoxide
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;How to deal with build failures&lt;/h4&gt; 
&lt;p&gt;On some platforms, installation may fail due to lack of tools required by &lt;em&gt;C&lt;/em&gt; toolchains. This can generally be avoided by installation with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cargo install gitoxide --no-default-features --features max-pure
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;What follows is a list of known failures.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;On Fedora, &lt;code&gt;perl&lt;/code&gt; needs to be installed for &lt;code&gt;OpenSSL&lt;/code&gt; to build properly. This can be done with the following command (see &lt;a href="https://github.com/GitoxideLabs/gitoxide/issues/592"&gt;issue #592&lt;/a&gt;):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;dnf install perl
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Using Docker&lt;/h3&gt; 
&lt;p&gt;Some CI/CD pipelines leverage repository cloning. Below is a copy-paste-able example to build docker images for such workflows. As no official image exists (at this time), an image must first be built.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] The dockerfile isn't continuously tested as it costs too much time and thus might already be broken. PRs are welcome.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Building the most compatible base image&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker build -f etc/docker/Dockerfile.alpine -t gitoxide:latest --compress . --target=pipeline
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Basic usage in a Pipeline&lt;/h4&gt; 
&lt;p&gt;For example, if a &lt;code&gt;Dockerfile&lt;/code&gt; currently uses something like &lt;code&gt;RUN git clone https://github.com/GitoxideLabs/gitoxide&lt;/code&gt;, first build the image:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker build -f etc/docker/Dockerfile.alpine -t gitoxide:latest --compress .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then copy the binaries into your image and replace the &lt;code&gt;git&lt;/code&gt; directive with a &lt;code&gt;gix&lt;/code&gt; equivalent.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-dockerfile"&gt;COPY --from gitoxide:latest /bin/gix /usr/local/bin/
COPY --from gitoxide:latest /bin/ein /usr/local/bin/

RUN /usr/local/bin/gix clone --depth 1 https://github.com/GitoxideLabs/gitoxide gitoxide
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Once installed, there are two binaries:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ein&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;high level commands, &lt;em&gt;porcelain&lt;/em&gt;, for every-day use, optimized for a pleasant user experience&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;gix&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;low level commands, &lt;em&gt;plumbing&lt;/em&gt;, for use in more specialized cases and to validate newly written code in real-world scenarios&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project Goals&lt;/h2&gt; 
&lt;p&gt;Project goals can change over time as we learn more, and they can be challenged.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;a pure-rust implementation of git&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;including &lt;em&gt;transport&lt;/em&gt;, &lt;em&gt;object database&lt;/em&gt;, &lt;em&gt;references&lt;/em&gt;, &lt;em&gt;cli&lt;/em&gt; and &lt;em&gt;tui&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;a simple command-line interface is provided for the most common git operations, optimized for user experience. A &lt;em&gt;simple-git&lt;/em&gt; if you so will.&lt;/li&gt; 
   &lt;li&gt;be the go-to implementation for anyone who wants to solve problems around git, and become &lt;em&gt;the&lt;/em&gt; alternative to &lt;code&gt;GitPython&lt;/code&gt; and &lt;em&gt;libgit2&lt;/em&gt; in the process.&lt;/li&gt; 
   &lt;li&gt;become the foundation for a distributed alternative to GitHub, and maybe even for use within GitHub itself&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;learn from the best to write the best possible idiomatic Rust&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;libgit2&lt;/em&gt; is a fantastic resource to see what abstractions work, we will use them&lt;/li&gt; 
   &lt;li&gt;use Rust's type system to make misuse impossible&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;be the best performing implementation&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;use Rust's type system to optimize for work not done without being hard to use&lt;/li&gt; 
   &lt;li&gt;make use of parallelism from the get go&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;sparse checkout&lt;/em&gt; support from day one&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;assure on-disk consistency&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;assure reads never interfere with concurrent writes&lt;/li&gt; 
   &lt;li&gt;assure multiple concurrent writes don't cause trouble&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;take shortcuts, but not in quality&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;binaries may use &lt;code&gt;anyhow::Error&lt;/code&gt; exhaustively, knowing these errors are solely user-facing.&lt;/li&gt; 
   &lt;li&gt;libraries use light-weight custom errors implemented using &lt;code&gt;quick-error&lt;/code&gt; or &lt;code&gt;thiserror&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;internationalization is nothing we are concerned with right now.&lt;/li&gt; 
   &lt;li&gt;IO errors due to insufficient amount of open file handles don't always lead to operation failure&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cross platform support, including Windows&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;With the tools and experience available here there is no reason not to support Windows.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/df66d74aa2a8cb62d8a03383135f08c8e8c579a8/.github/workflows/rust.yml#L34"&gt;Windows is tested on CI&lt;/a&gt; and failures do prevent releases.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Non-Goals&lt;/h2&gt; 
&lt;p&gt;Project non-goals can change over time as we learn more, and they can be challenged.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;replicate &lt;code&gt;git&lt;/code&gt; command functionality perfectly&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;git&lt;/code&gt; is &lt;code&gt;git&lt;/code&gt;, and there is no reason to not use it. Our path is the one of simplicity to make getting started with git easy.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;be incompatible to git&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;the on-disk format must remain compatible, and we will never contend with it.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;use async IO everywhere&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;for the most part, git operations are heavily reliant on memory mapped IO as well as CPU to decompress data, which doesn't lend itself well to async IO out of the box.&lt;/li&gt; 
   &lt;li&gt;Use &lt;code&gt;blocking&lt;/code&gt; as well as &lt;code&gt;gix-features::interrupt&lt;/code&gt; to bring operations into the async world and to control long running operations.&lt;/li&gt; 
   &lt;li&gt;When connecting or streaming over TCP connections, especially when receiving on the server, async seems like a must though, but behind a feature flag.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;p&gt;If what you have seen so far sparked your interest to contribute, then let us say: We are happy to have you and help you to get started.&lt;/p&gt; 
&lt;p&gt;We recommend running &lt;code&gt;just test&lt;/code&gt; during the development process to assure CI is green before pushing.&lt;/p&gt; 
&lt;p&gt;A backlog for work ready to be picked up is &lt;a href="https://github.com/GitoxideLabs/gitoxide/projects"&gt;available in the Project's Kanban board&lt;/a&gt;, which contains instructions on how to pick a task. If it's empty or you have other questions, feel free to &lt;a href="https://github.com/GitoxideLabs/gitoxide/discussions"&gt;start a discussion&lt;/a&gt; or reach out to @Byron &lt;a href="https://keybase.io/byronbates"&gt;privately&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For additional details, also take a look at the &lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/COLLABORATING.md"&gt;collaboration guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Getting started with Video Tutorials&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/playlist?list=PLMHbQxe1e9Mk5kOHrm9v20-umkE2ck_gE"&gt;Learning Rust with Gitoxide&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;In 17 episodes you can learn all you need to meaningfully contribute to &lt;code&gt;gitoxide&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/playlist?list=PLMHbQxe1e9MkEmuj9csczEK1O06l0Npy5"&gt;Getting into Gitoxide&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Get an introduction to &lt;code&gt;gitoxide&lt;/code&gt; itself which should be a good foundation for any contribution, but isn't a requirement for contributions either.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLMHbQxe1e9MlhyyZQXPi_dc-bKudE-WUw"&gt;Gifting Gitoxide&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;See how PRs are reviewed along with a lot of inner monologue.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Other Media&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://rustacean-station.org/episode/055-sebastian-thiel/"&gt;Rustacean Station Podcast&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;h3&gt;Features for 1.0&lt;/h3&gt; 
&lt;p&gt;Provide a CLI to for the most basic user journey:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; initialize a repository&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; fetch 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; and update worktree&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;clone a repository 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; bare&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; with working tree&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; create a commit after adding worktree files&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; add a remote&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; push 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; create (thin) pack&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Ideas for Examples&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; &lt;code&gt;gix tool open-remote&lt;/code&gt; open the URL of the remote, possibly after applying known transformations to go from &lt;code&gt;ssh&lt;/code&gt; to &lt;code&gt;https&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; &lt;code&gt;tix&lt;/code&gt; as example implementation of &lt;code&gt;tig&lt;/code&gt;, displaying a version of the commit graph, useful for practicing how highly responsive GUIs can be made.&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Something like &lt;a href="https://github.com/github/git-sizer"&gt;&lt;code&gt;git-sizer&lt;/code&gt;&lt;/a&gt;, but leveraging extreme decompression speeds of indexed packs.&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Open up SQL for git using &lt;a href="https://github.com/rusqlite/rusqlite/raw/master/tests/vtab.rs"&gt;sqlite virtual tables&lt;/a&gt;. Check out gitqlite as well. What would an MVP look like? Maybe even something that could ship with gitoxide. See &lt;a href="https://github.com/filhodanuvem/gitql"&gt;this go implementation as example&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; A truly awesome history rewriter which makes it easy to understand what happened while avoiding all pitfalls. Think BFG, but more awesome, if that's possible.&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; &lt;code&gt;gix-tui&lt;/code&gt; should learn a lot from &lt;a href="https://www.fossil-scm.org"&gt;fossil-scm&lt;/a&gt; regarding the presentation of data. Maybe &lt;a href="https://github.com/Lutetium-Vanadium/requestty/"&gt;this&lt;/a&gt; can be used for prompts. Probably &lt;a href="https://magit.vc"&gt;magit&lt;/a&gt; has a lot to offer, too.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Ideas for Spin-Offs&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; A system to integrate tightly with &lt;code&gt;gix-lfs&lt;/code&gt; to allow a multi-tier architecture so that assets can be stored in git and are accessible quickly from an intranet location (for example by accessing the storage read-only over the network) while changes are pushed immediately by the server to other edge locations, like &lt;em&gt;the cloud&lt;/em&gt; or backups. Sparse checkouts along with explorer/finder integrations make it convenient to only work on a small subset of files locally. Clones can contain all configuration somebody would need to work efficiently from their location, and authentication for the git history as well as LFS resources make the system secure. One could imagine encryption support for untrusted locations in &lt;em&gt;the cloud&lt;/em&gt; even though more research would have to be done to make it truly secure.&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; A &lt;a href="https://github.com/syncthing/syncthing"&gt;syncthing&lt;/a&gt; like client/server application. This is to demonstrate how lower-level crates can be combined into custom applications that use only part of git's technology to achieve their very own thing. Watch out for big file support, multi-device cross-syncing, the possibility for untrusted destinations using full-encryption, case-insensitive and sensitive filesystems, and extended file attributes as well as ignore files.&lt;/li&gt; 
 &lt;li&gt;An event-based database that uses commit messages to store deltas, while occasionally aggregating the actual state in a tree. Of course it's distributed by nature, allowing people to work offline. 
  &lt;ul&gt; 
   &lt;li&gt;It's abstracted to completely hide the actual data model behind it, allowing for all kinds of things to be implemented on top.&lt;/li&gt; 
   &lt;li&gt;Commits probably need a nanosecond component for the timestamp, which can be added via custom header field.&lt;/li&gt; 
   &lt;li&gt;having recording all changes allows for perfect merging, both on the client or on the server, while keeping a natural audit log which makes it useful for mission critical databases in business.&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Applications&lt;/strong&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Can markdown be used as database so issue-trackers along with meta-data could just be markdown files which are mostly human-editable? Could user interfaces be meta-data aware and just hide the meta-data chunks which are now editable in the GUI itself? Doing this would make conflicts easier to resolve than an &lt;code&gt;sqlite&lt;/code&gt; database.&lt;/li&gt; 
     &lt;li&gt;A time tracker - simple data, very likely naturally conflict free, and interesting to see it in terms of teams or companies using it with maybe GitHub as Backing for authentication. 
      &lt;ul&gt; 
       &lt;li&gt;How about supporting multiple different trackers, as in different remotes?&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Shortcomings &amp;amp; Limitations&lt;/h2&gt; 
&lt;p&gt;Please take a look at the &lt;a href="https://github.com/GitoxideLabs/gitoxide/raw/main/SHORTCOMINGS.md"&gt;&lt;code&gt;SHORTCOMINGS.md&lt;/code&gt; file&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;itertools&lt;/strong&gt; &lt;em&gt;(MIT Licensed)&lt;/em&gt; 
  &lt;ul&gt; 
   &lt;li&gt;We use the &lt;code&gt;izip!&lt;/code&gt; macro in code&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;flate2&lt;/strong&gt; &lt;em&gt;(MIT Licensed)&lt;/em&gt; 
  &lt;ul&gt; 
   &lt;li&gt;We use the high-level &lt;code&gt;flate2&lt;/code&gt; library to implement decompression and compression, which builds on the high-performance &lt;code&gt;zlib-rs&lt;/code&gt; crate.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🙏 Special Thanks 🙏&lt;/h2&gt; 
&lt;p&gt;At least for now this section is exclusive to highlight the incredible support that &lt;a href="https://github.com/joshtriplett"&gt;Josh Triplett&lt;/a&gt; has provided to me in the form of advice, sponsorship and countless other benefits that were incredibly meaningful. Going full time with &lt;code&gt;gitoxide&lt;/code&gt; would hardly have been feasible without his involvement, and I couldn't be more grateful 😌.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under either of&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Apache License, Version 2.0, (&lt;a href="https://raw.githubusercontent.com/GitoxideLabs/gitoxide/main/LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;MIT license (&lt;a href="https://raw.githubusercontent.com/GitoxideLabs/gitoxide/main/LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href="http://opensource.org/licenses/MIT"&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;at your option.&lt;/p&gt; 
&lt;h2&gt;Fun facts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Originally @Byron was really fascinated by &lt;a href="https://github.com/gitpython-developers/GitPython/issues/765#issuecomment-396072153"&gt;this problem&lt;/a&gt; and believes that with &lt;code&gt;gitoxide&lt;/code&gt; it will be possible to provide the fastest solution for it.&lt;/li&gt; 
 &lt;li&gt;@Byron has been absolutely blown away by &lt;code&gt;git&lt;/code&gt; from the first time he experienced git more than 13 years ago, and tried to implement it in &lt;a href="https://github.com/gitpython-developers/GitPython/pull/1028"&gt;various shapes&lt;/a&gt; and &lt;a href="https://github.com/byron/gogit"&gt;forms&lt;/a&gt; multiple &lt;a href="https://github.com/Byron/gitplusplus"&gt;times&lt;/a&gt;. Now with Rust @Byron finally feels to have found the right tool for the job!&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>rust-lang/rust-analyzer</title>
      <link>https://github.com/rust-lang/rust-analyzer</link>
      <description>&lt;p&gt;A Rust compiler front-end for IDEs&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/rust-lang/rust-analyzer/master/assets/logo-wide.svg?sanitize=true" alt="rust-analyzer logo" /&gt; &lt;/p&gt; 
&lt;p&gt;rust-analyzer is a language server that provides IDE functionality for writing Rust programs. You can use it with any editor that supports the &lt;a href="https://microsoft.github.io/language-server-protocol/"&gt;Language Server Protocol&lt;/a&gt; (VS Code, Vim, Emacs, Zed, etc).&lt;/p&gt; 
&lt;p&gt;rust-analyzer features include go-to-definition, find-all-references, refactorings and code completion. rust-analyzer also supports integrated formatting (with rustfmt) and integrated diagnostics (with rustc and clippy).&lt;/p&gt; 
&lt;p&gt;Internally, rust-analyzer is structured as a set of libraries for analyzing Rust code. See &lt;a href="https://rust-analyzer.github.io/book/contributing/architecture.html"&gt;Architecture&lt;/a&gt; in the manual.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://rust-analyzer.github.io/book/installation.html"&gt;https://rust-analyzer.github.io/book/installation.html&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;If you want to &lt;strong&gt;contribute&lt;/strong&gt; to rust-analyzer check out the &lt;a href="https://raw.githubusercontent.com/rust-lang/rust-analyzer/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; or if you are just curious about how things work under the hood, see the &lt;a href="https://rust-analyzer.github.io/book/contributing"&gt;Contributing&lt;/a&gt; section of the manual.&lt;/p&gt; 
&lt;p&gt;If you want to &lt;strong&gt;use&lt;/strong&gt; rust-analyzer's language server with your editor of choice, check &lt;a href="https://rust-analyzer.github.io/book/"&gt;the manual&lt;/a&gt;. It also contains some tips &amp;amp; tricks to help you be more productive when using rust-analyzer.&lt;/p&gt; 
&lt;h2&gt;Security and Privacy&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://rust-analyzer.github.io/book/security.html"&gt;security&lt;/a&gt; and &lt;a href="https://rust-analyzer.github.io/book/privacy.html"&gt;privacy&lt;/a&gt; sections of the manual.&lt;/p&gt; 
&lt;h2&gt;Communication&lt;/h2&gt; 
&lt;p&gt;For usage and troubleshooting requests, please use "IDEs and Editors" category of the Rust forum:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://users.rust-lang.org/c/ide/14"&gt;https://users.rust-lang.org/c/ide/14&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For questions about development and implementation, join rust-analyzer working group on Zulip:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Frust-analyzer"&gt;https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Frust-analyzer&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Quick Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href="https://rust-analyzer.github.io/"&gt;https://rust-analyzer.github.io/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Metrics: &lt;a href="https://rust-analyzer.github.io/metrics/"&gt;https://rust-analyzer.github.io/metrics/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;API docs: &lt;a href="https://rust-lang.github.io/rust-analyzer/ide/"&gt;https://rust-lang.github.io/rust-analyzer/ide/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Changelog: &lt;a href="https://rust-analyzer.github.io/thisweek"&gt;https://rust-analyzer.github.io/thisweek&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;rust-analyzer is primarily distributed under the terms of both the MIT license and the Apache License (Version 2.0).&lt;/p&gt; 
&lt;p&gt;See LICENSE-APACHE and LICENSE-MIT for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mullvad/mullvadvpn-app</title>
      <link>https://github.com/mullvad/mullvadvpn-app</link>
      <description>&lt;p&gt;The Mullvad VPN client app for desktop and mobile&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mullvad VPN desktop and mobile app&lt;/h1&gt; 
&lt;p&gt;Welcome to the Mullvad VPN client app source code repository. This is the VPN client software for the Mullvad VPN service. For more information about the service, please visit our website, &lt;a href="https://mullvad.net"&gt;mullvad.net&lt;/a&gt; (Also accessible via Tor on our &lt;a href="http://o54hon2e2vj6c7m3aqqu6uyece65by3vgoxxhlqlsvkmacw6a7m7kiad.onion/"&gt;onion service&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;This repository contains all the source code for the desktop and mobile versions of the app. For desktop this includes the system service/daemon (&lt;a href="https://raw.githubusercontent.com/mullvad/mullvadvpn-app/main/mullvad-daemon/"&gt;&lt;code&gt;mullvad-daemon&lt;/code&gt;&lt;/a&gt;), a graphical user interface (&lt;a href="https://raw.githubusercontent.com/mullvad/mullvadvpn-app/main/desktop/"&gt;GUI&lt;/a&gt;) and a command line interface (&lt;a href="https://raw.githubusercontent.com/mullvad/mullvadvpn-app/main/mullvad-cli/"&gt;CLI&lt;/a&gt;). The Android app uses the same backing system service for the tunnel and security but has a dedicated frontend in &lt;a href="https://raw.githubusercontent.com/mullvad/mullvadvpn-app/main/android/"&gt;android/&lt;/a&gt;. iOS consists of a completely standalone implementation that resides in &lt;a href="https://raw.githubusercontent.com/mullvad/mullvadvpn-app/main/ios/"&gt;ios/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;There are built and signed releases for macOS, Windows, Linux and Android available on &lt;a href="https://mullvad.net/download/"&gt;our website&lt;/a&gt; and on &lt;a href="https://github.com/mullvad/mullvadvpn-app/releases/"&gt;GitHub&lt;/a&gt;. The Android app is also available on &lt;a href="https://play.google.com/store/apps/details?id=net.mullvad.mullvadvpn"&gt;Google Play&lt;/a&gt; and &lt;a href="https://f-droid.org/packages/net.mullvad.mullvadvpn/"&gt;F-Droid&lt;/a&gt; and the iOS version on &lt;a href="https://apps.apple.com/us/app/mullvad-vpn/id1488466513"&gt;App Store&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can find our code signing keys as well as instructions for how to cryptographically verify your download on &lt;a href="https://mullvad.net/en/guides/open-source/"&gt;Mullvad's Open Source page&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Platform/OS support&lt;/h3&gt; 
&lt;p&gt;These are the operating systems and their versions that the app officially supports. It might work on many more versions, but we don't test for those and can't guarantee the quality or security.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;OS/Platform&lt;/th&gt; 
   &lt;th&gt;Supported versions&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;10 and 11&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;The three latest major releases&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux (Ubuntu)&lt;/td&gt; 
   &lt;td&gt;The two latest LTS releases and the latest non-LTS releases&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux (Fedora)&lt;/td&gt; 
   &lt;td&gt;The versions that are not yet &lt;a href="https://fedoraproject.org/wiki/End_of_life"&gt;EOL&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux (Debian)&lt;/td&gt; 
   &lt;td&gt;12 and newer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;8 and newer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;15.0 and newer&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;On Linux we test using the Gnome desktop environment. The app should, and probably does work in other DEs, but we don't regularly test those.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Here is a table containing the features of the app across platforms. This is intended to reflect the current state of the latest code in git, not necessarily any existing release.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;Windows&lt;/th&gt; 
   &lt;th align="center"&gt;Linux&lt;/th&gt; 
   &lt;th align="center"&gt;macOS&lt;/th&gt; 
   &lt;th align="center"&gt;Android&lt;/th&gt; 
   &lt;th align="center"&gt;iOS&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenVPN&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WireGuard&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quantum-resistant tunnels&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://mullvad.net/en/blog/introducing-defense-against-ai-guided-traffic-analysis-daita"&gt;DAITA&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WireGuard multihop&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WireGuard over TCP&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WireGuard over Shadowsocks&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WireGuard over QUIC&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenVPN over Shadowsocks&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Split tunneling&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Custom DNS server&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Content blockers (Ads etc)&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Optional local network access&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓*&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/mullvad/mullvadvpn-app/main/audits"&gt;Externally audited&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;* The local network is always accessible on iOS with the current implementation&lt;/p&gt; 
&lt;h2&gt;Security and anonymity&lt;/h2&gt; 
&lt;p&gt;This app is a privacy preserving VPN client. As such it goes to great lengths to stop traffic leaks. And basically all settings default to the more secure/private option. The user has to explicitly allow more loose rules if desired. See the &lt;a href="https://raw.githubusercontent.com/mullvad/mullvadvpn-app/main/docs/security.md"&gt;dedicated security document&lt;/a&gt; for details on what the app blocks and allows, as well as how it does it.&lt;/p&gt; 
&lt;h2&gt;Checking out the code&lt;/h2&gt; 
&lt;p&gt;This repository contains submodules needed for building the app. However, some of those submodules also have further submodules that are quite large and not needed to build the app. So unless you want the source code for OpenSSL, OpenVPN and a few other projects you should avoid a recursive clone of the repository. Instead clone the repository normally and then get one level of submodules:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/mullvad/mullvadvpn-app.git
cd mullvadvpn-app
git submodule update --init
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On Android, Windows, Linux and macOS you also want to checkout the wireguard-go submodule:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git submodule update --init wireguard-go-rs/libwg/wireguard-go
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Further details on why this is necessary can be found in the &lt;a href="https://raw.githubusercontent.com/mullvad/mullvadvpn-app/main/wireguard-go-rs/README.md"&gt;wireguard-go-rs crate&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We sign every commit on the &lt;code&gt;main&lt;/code&gt; branch as well as our release tags. If you would like to verify your checkout, you can find our developer keys on &lt;a href="https://mullvad.net/en/guides/open-source/"&gt;Mullvad's Open Source page&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Binaries submodule&lt;/h3&gt; 
&lt;p&gt;This repository has a git submodule at &lt;code&gt;dist-assets/binaries&lt;/code&gt;. This submodule contains binaries and build scripts for third party code we need to bundle with the app. Such as OpenVPN, Wintun etc.&lt;/p&gt; 
&lt;p&gt;This submodule conforms to the same integrity/security standards as this repository. Every merge commit should be signed. And this main repository should only ever point to a signed merge commit of the binaries submodule.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/mullvad/mullvadvpn-app-binaries"&gt;binaries submodule's&lt;/a&gt; README for more details about that repository.&lt;/p&gt; 
&lt;h2&gt;Building the app&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/mullvad/mullvadvpn-app/main/BuildInstructions.md"&gt;build instructions&lt;/a&gt; for help building the app on desktop platforms.&lt;/p&gt; 
&lt;p&gt;For building the Android app, see the &lt;a href="https://raw.githubusercontent.com/mullvad/mullvadvpn-app/main/android/BuildInstructions.md"&gt;instructions&lt;/a&gt; for Android.&lt;/p&gt; 
&lt;p&gt;For building the iOS app, see the &lt;a href="https://raw.githubusercontent.com/mullvad/mullvadvpn-app/main/ios/BuildInstructions.md"&gt;instructions&lt;/a&gt; for iOS.&lt;/p&gt; 
&lt;h2&gt;Releasing the app&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/mullvad/mullvadvpn-app/main/Release.md"&gt;this&lt;/a&gt; for instructions on how to make a new release.&lt;/p&gt; 
&lt;h2&gt;Environment variables used by the service&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;TALPID_FIREWALL_DEBUG&lt;/code&gt; - Helps debugging the firewall. Does different things depending on platform:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Linux: Set to &lt;code&gt;"1"&lt;/code&gt; to add packet counters to all firewall rules.&lt;/li&gt; 
   &lt;li&gt;macOS: Makes rules log the packets they match to the &lt;code&gt;pflog0&lt;/code&gt; interface. 
    &lt;ul&gt; 
     &lt;li&gt;Set to &lt;code&gt;"all"&lt;/code&gt; to add logging to all rules.&lt;/li&gt; 
     &lt;li&gt;Set to &lt;code&gt;"pass"&lt;/code&gt; to add logging to rules allowing packets.&lt;/li&gt; 
     &lt;li&gt;Set to &lt;code&gt;"drop"&lt;/code&gt; to add logging to rules blocking packets.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;TALPID_FIREWALL_DONT_SET_SRC_VALID_MARK&lt;/code&gt; - Set this variable to &lt;code&gt;1&lt;/code&gt; to stop the daemon from setting the &lt;code&gt;net.ipv4.conf.all.src_valid_mark&lt;/code&gt; kernel parameter to &lt;code&gt;1&lt;/code&gt; on Linux when a tunnel is established. The kernel config parameter is set by default, because otherwise strict reverse path filtering may prevent relay traffic from reaching the daemon. If &lt;code&gt;rp_filter&lt;/code&gt; is set to &lt;code&gt;1&lt;/code&gt; on the interface that will be receiving relay traffic, and &lt;code&gt;src_valid_mark&lt;/code&gt; is not set to &lt;code&gt;1&lt;/code&gt;, the daemon will not be able to receive relay traffic.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;TALPID_FIREWALL_DONT_SET_ARP_IGNORE&lt;/code&gt; - Set this variable to &lt;code&gt;1&lt;/code&gt; to stop the daemon from setting the &lt;code&gt;net.ipv4.conf.all.arp_ignore&lt;/code&gt; kernel parameter to &lt;code&gt;2&lt;/code&gt; on Linux when a tunnel is established. The kernel config parameter is set by default, because otherwise an attacker who can send ARP requests to the device running Mullvad can figure out the in-tunnel IP.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;TALPID_DNS_MODULE&lt;/code&gt; - Allows changing the method that will be used for DNS configuration. By default this is automatically detected, but you can set it to one of the options below to choose a specific method.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Linux&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;"static-file"&lt;/code&gt;: change the &lt;code&gt;/etc/resolv.conf&lt;/code&gt; file directly&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;"resolvconf"&lt;/code&gt;: use the &lt;code&gt;resolvconf&lt;/code&gt; program&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;"systemd"&lt;/code&gt;: use systemd's &lt;code&gt;resolved&lt;/code&gt; service through DBus&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;"network-manager"&lt;/code&gt;: use &lt;code&gt;NetworkManager&lt;/code&gt; service through DBus&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Windows&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;iphlpapi&lt;/code&gt;: use the IP helper API&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;netsh&lt;/code&gt;: use the &lt;code&gt;netsh&lt;/code&gt; program&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;tcpip&lt;/code&gt;: set TCP/IP parameters in the registry&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;TALPID_DISABLE_LOCAL_DNS_RESOLVER&lt;/code&gt; - Set this variable to &lt;code&gt;1&lt;/code&gt; to disable the local DNS resolver (macOS only).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;TALPID_NEVER_FILTER_AAAA_QUERIES&lt;/code&gt; - Set this variable to &lt;code&gt;1&lt;/code&gt; to never ignore DNS AAAA queries (macOS only).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;TALPID_FORCE_USERSPACE_WIREGUARD&lt;/code&gt; - Forces the daemon to use the userspace implementation of WireGuard on Linux.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;TALPID_DISABLE_OFFLINE_MONITOR&lt;/code&gt; - Forces the daemon to always assume the host is online.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;TALPID_NET_CLS_MOUNT_DIR&lt;/code&gt; - On Linux, forces the daemon to mount the &lt;code&gt;net_cls&lt;/code&gt; controller in the specified directory if it isn't mounted already.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;MULLVAD_MANAGEMENT_SOCKET_GROUP&lt;/code&gt; - On Linux and macOS, this restricts access to the management interface UDS socket to users in the specified group. This means that only users in that group can use the CLI and GUI. By default, everyone has access to the socket.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;MULLVAD_BACKTRACE_ON_FAULT&lt;/code&gt; - When enabled, if the daemon encounters a fault (e.g. &lt;code&gt;SIGSEGV&lt;/code&gt;), it will log a backtrace to stdout, and to &lt;code&gt;daemon.log&lt;/code&gt;. By default, this is disabled in release-builds and enabled in debug-builds. Set variable to &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; to explicitly enable or disable this feature. Logging the backtrace causes heap allocation. Allocation is not signal safe, but here it runs in the signal handler. This is technically undefined behavior and therefore disabled by default. This usually works, but enable at your own risk.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development builds only&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;MULLVAD_API_HOST&lt;/code&gt; - Set the hostname to use in API requests. E.g. &lt;code&gt;api.mullvad.net&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;MULLVAD_API_ADDR&lt;/code&gt; - Set the IP address and port to use in API requests. E.g. &lt;code&gt;10.10.1.2:443&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;MULLVAD_API_DISABLE_TLS&lt;/code&gt; - Use plain HTTP for API requests.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;MULLVAD_CONNCHECK_HOST&lt;/code&gt; - Set the hostname to use in connection check requests. E.g. &lt;code&gt;am.i.mullvad.net&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;MULLVAD_ENABLE_DEV_UPDATES&lt;/code&gt; - Enable version checks in development builds.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Setting environment variables&lt;/h3&gt; 
&lt;h4&gt;Windows&lt;/h4&gt; 
&lt;p&gt;Use &lt;code&gt;setx&lt;/code&gt; from an elevated shell:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bat"&gt;setx TALPID_DISABLE_OFFLINE 1 /m
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the change to take effect, restart the daemon:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bat"&gt;sc.exe stop mullvadvpn
sc.exe start mullvadvpn
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Linux&lt;/h4&gt; 
&lt;p&gt;Edit the systemd unit file via &lt;code&gt;systemctl edit mullvad-daemon.service&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ini"&gt;[Service]
Environment="TALPID_DISABLE_OFFLINE_MONITOR=1"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the change to take effect, restart the daemon:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo systemctl restart mullvad-daemon
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;macOS&lt;/h4&gt; 
&lt;p&gt;Use &lt;code&gt;plutil&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo plutil -replace EnvironmentVariables -json '{"TALPID_DISABLE_OFFLINE_MONITOR": "1"}' /Library/LaunchDaemons/net.mullvad.daemon.plist
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the change to take effect, restart the daemon:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;launchctl unload -w /Library/LaunchDaemons/net.mullvad.daemon.plist
launchctl load -w /Library/LaunchDaemons/net.mullvad.daemon.plist
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Environment variables used by the desktop frontend&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;MULLVAD_PATH&lt;/code&gt; - Allows changing the path to the folder with the &lt;code&gt;mullvad-problem-report&lt;/code&gt; tool when running in development mode. Defaults to: &lt;code&gt;&amp;lt;repo&amp;gt;/target/debug/&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MULLVAD_DISABLE_UPDATE_NOTIFICATION&lt;/code&gt; - If set to &lt;code&gt;1&lt;/code&gt;, notification will be disabled when an update is available.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Command line tools for Electron app development&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;$ npm run develop&lt;/code&gt; - develop app with live-reload enabled&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$ npm run lint&lt;/code&gt; - lint code&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$ npm run pack:&amp;lt;OS&amp;gt;&lt;/code&gt; - prepare app for distribution for your platform. Where &lt;code&gt;&amp;lt;OS&amp;gt;&lt;/code&gt; can be &lt;code&gt;linux&lt;/code&gt;, &lt;code&gt;mac&lt;/code&gt; or &lt;code&gt;win&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$ npm test&lt;/code&gt; - run tests&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tray icon on Linux&lt;/h2&gt; 
&lt;p&gt;The requirements for displaying a tray icon vary between different desktop environments. If the tray icon doesn't appear, try installing one of these packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;libappindicator3-1&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;libappindicator1&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;libappindicator&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you're using GNOME, try installing one of these GNOME Shell extensions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;TopIconsFix&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;TopIcons Plus&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Repository structure&lt;/h2&gt; 
&lt;h3&gt;Electron app and electron-builder packaging assets&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;desktop/packages/mullvad-vpn/&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;assets/&lt;/strong&gt; - Graphical assets and stylesheets&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;src/&lt;/strong&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;strong&gt;main/&lt;/strong&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;strong&gt;index.ts&lt;/strong&gt; - Entry file for the main process&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;strong&gt;renderer/&lt;/strong&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;strong&gt;app.tsx&lt;/strong&gt; - Entry file for the renderer process&lt;/li&gt; 
       &lt;li&gt;&lt;strong&gt;routes.tsx&lt;/strong&gt; - Routes configurator&lt;/li&gt; 
       &lt;li&gt;&lt;strong&gt;transitions.ts&lt;/strong&gt; - Transition rules between views&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;tasks/&lt;/strong&gt; - Gulp tasks used to build app and watch for changes during development 
    &lt;ul&gt; 
     &lt;li&gt;&lt;strong&gt;distribution.js&lt;/strong&gt; - Configuration for &lt;code&gt;electron-builder&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;test/&lt;/strong&gt; - Electron GUI tests&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;dist-assets/&lt;/strong&gt; - Icons, binaries and other files used when creating the distributables 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;binaries/&lt;/strong&gt; - Git submodule containing binaries bundled with the app. For example the statically linked OpenVPN binary. See the README in the submodule for details&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;linux/&lt;/strong&gt; - Scripts and configuration files for the deb and rpm artifacts&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;pkg-scripts/&lt;/strong&gt; - Scripts bundled with and executed by the macOS pkg installer&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;windows/&lt;/strong&gt; - Windows NSIS installer configuration and assets&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;ca.crt&lt;/strong&gt; - The Mullvad relay server root CA. Bundled with the app and only OpenVPN relays signed by this CA are trusted&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Building, testing and misc&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;build-windows-modules.sh&lt;/strong&gt; - Compiles the C++ libraries needed on Windows&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;build.sh&lt;/strong&gt; - Sanity checks the working directory state and then builds installers for the app&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mullvad Daemon&lt;/h3&gt; 
&lt;p&gt;The daemon is implemented in Rust and is implemented in several crates. The main, or top level, crate that builds the final daemon binary is &lt;code&gt;mullvad-daemon&lt;/code&gt; which then depend on the others.&lt;/p&gt; 
&lt;p&gt;In general one can look at the daemon as split into two parts, the crates starting with &lt;code&gt;talpid&lt;/code&gt; and the crates starting with &lt;code&gt;mullvad&lt;/code&gt;. The &lt;code&gt;talpid&lt;/code&gt; crates are supposed to be completely unrelated to Mullvad specific things. A &lt;code&gt;talpid&lt;/code&gt; crate is not allowed to know anything about the API through which the daemon fetch Mullvad account details or download VPN server lists for example. The &lt;code&gt;talpid&lt;/code&gt; components should be viewed as a generic VPN client with extra privacy and anonymity preserving features. The crates having &lt;code&gt;mullvad&lt;/code&gt; in their name on the other hand make use of the &lt;code&gt;talpid&lt;/code&gt; components to build a secure and Mullvad specific VPN client.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Cargo.toml&lt;/strong&gt; - Main Rust workspace definition. See this file for which folders here are daemon Rust crates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;mullvad-daemon/&lt;/strong&gt; - Main Rust crate building the daemon binary.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;talpid-core/&lt;/strong&gt; - Main crate of the VPN client implementation itself. Completely Mullvad agnostic privacy preserving VPN client library.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Vocabulary&lt;/h2&gt; 
&lt;p&gt;Explanations for some common words used in the documentation and code in this repository.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;App&lt;/strong&gt; - This entire product (everything in this repository) is the "Mullvad VPN App", or App for short. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Daemon&lt;/strong&gt; - Refers to the &lt;code&gt;mullvad-daemon&lt;/code&gt; Rust program. This headless program exposes a management interface that can be used to control the daemon&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Frontend&lt;/strong&gt; - Term used for any program or component that connects to the daemon management interface and allows a user to control the daemon. 
    &lt;ul&gt; 
     &lt;li&gt;&lt;strong&gt;GUI&lt;/strong&gt; - The Electron + React program that is a graphical frontend for the Mullvad VPN App.&lt;/li&gt; 
     &lt;li&gt;&lt;strong&gt;CLI&lt;/strong&gt; - The Rust program named &lt;code&gt;mullvad&lt;/code&gt; that is a terminal based frontend for the Mullvad VPN app.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;File paths used by Mullvad VPN app&lt;/h2&gt; 
&lt;p&gt;A list of file paths written to and read from by the various components of the Mullvad VPN app&lt;/p&gt; 
&lt;h3&gt;Daemon&lt;/h3&gt; 
&lt;p&gt;On Windows, when a process runs as a system service the variable &lt;code&gt;%LOCALAPPDATA%&lt;/code&gt; expands to &lt;code&gt;C:\Windows\system32\config\systemprofile\AppData\Local&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;All directory paths are defined in, and fetched from, the &lt;code&gt;mullvad-paths&lt;/code&gt; crate.&lt;/p&gt; 
&lt;h4&gt;Settings&lt;/h4&gt; 
&lt;p&gt;The settings directory can be changed by setting the &lt;code&gt;MULLVAD_SETTINGS_DIR&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Path&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/etc/mullvad-vpn/&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/etc/mullvad-vpn/&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;%LOCALAPPDATA%\Mullvad VPN\&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://developer.android.com/reference/android/content/Context#getFilesDir()"&gt;&lt;code&gt;getFilesDir()&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Logs&lt;/h4&gt; 
&lt;p&gt;The log directory can be changed by setting the &lt;code&gt;MULLVAD_LOG_DIR&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Path&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/var/log/mullvad-vpn/&lt;/code&gt; + systemd&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/var/log/mullvad-vpn/&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;C:\ProgramData\Mullvad VPN\&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://developer.android.com/reference/android/content/Context#getFilesDir()"&gt;&lt;code&gt;getFilesDir()&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Cache&lt;/h4&gt; 
&lt;p&gt;The cache directory can be changed by setting the &lt;code&gt;MULLVAD_CACHE_DIR&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Path&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/var/cache/mullvad-vpn/&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/Library/Caches/mullvad-vpn/&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;C:\ProgramData\Mullvad VPN\cache&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://developer.android.com/reference/android/content/Context#getCacheDir()"&gt;&lt;code&gt;getCacheDir()&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;RPC address file&lt;/h4&gt; 
&lt;p&gt;The full path to the RPC address file can be changed by setting the &lt;code&gt;MULLVAD_RPC_SOCKET_PATH&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Path&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/var/run/mullvad-vpn&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/var/run/mullvad-vpn&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;//./pipe/Mullvad VPN&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://developer.android.com/reference/android/content/ContextWrapper#getNoBackupFilesDir()"&gt;&lt;code&gt;getNoBackupFilesDir()&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Desktop Electron app&lt;/h3&gt; 
&lt;p&gt;The desktop Electron app has a specific settings file that is configured for each user. The path is set in the &lt;code&gt;desktop/packages/mullvad-vpn/src/main/gui-settings.ts&lt;/code&gt; file.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Path&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;$XDG_CONFIG_HOME/Mullvad VPN/gui_settings.json&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;~/Library/Application Support/Mullvad VPN/gui_settings.json&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;%LOCALAPPDATA%\Mullvad VPN\gui_settings.json&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;Present in Android's &lt;code&gt;logcat&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Icons&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/mullvad/mullvadvpn-app/main/graphics/README.md"&gt;graphics README&lt;/a&gt; for information about icons.&lt;/p&gt; 
&lt;h2&gt;Locales and translations&lt;/h2&gt; 
&lt;p&gt;Instructions for how to handle locales and translations are found &lt;a href="https://raw.githubusercontent.com/mullvad/mullvadvpn-app/main/desktop/packages/mullvad-vpn/locales/README.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For instructions specific to the Android app, see &lt;a href="https://raw.githubusercontent.com/mullvad/mullvadvpn-app/main/android/README.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Audits, pentests and external security reviews&lt;/h2&gt; 
&lt;p&gt;Mullvad has used external pentesting companies to carry out security audits of this VPN app. Read more about them in the &lt;a href="https://raw.githubusercontent.com/mullvad/mullvadvpn-app/main/audits/README.md"&gt;audits readme&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Copyright (C) 2025 Mullvad VPN AB&lt;/p&gt; 
&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt; 
&lt;p&gt;For the full license agreement, see the LICENSE.md file&lt;/p&gt; 
&lt;p&gt;The source code for the iOS app is GPL-3 licensed like everything else in this repository. But the distributed app on the Apple App Store is not GPL licensed, it falls under the &lt;a href="https://www.apple.com/legal/internet-services/itunes/dev/stdeula/"&gt;Apple App Store EULA&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Canop/broot</title>
      <link>https://github.com/Canop/broot</link>
      <description>&lt;p&gt;A new way to see and navigate directory trees : https://dystroy.org/broot&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Broot&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/Canop/broot/actions/workflows/tests.yml"&gt;&lt;img src="https://github.com/Canop/broot/actions/workflows/tests.yml/badge.svg?sanitize=true" alt="Tests" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/Canop/broot/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="MIT" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/broot"&gt;&lt;img src="https://img.shields.io/crates/v/broot.svg?sanitize=true" alt="Latest Version" /&gt;&lt;/a&gt; &lt;a href="https://miaou.dystroy.org/3490?broot"&gt;&lt;img src="https://miaou.dystroy.org/static/shields/room.svg?sanitize=true" alt="Chat on Miaou" /&gt;&lt;/a&gt; &lt;a href="https://repology.org/project/broot/versions"&gt;&lt;img src="https://repology.org/badge/tiny-repos/broot.svg?sanitize=true" alt="Packaging status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Broot is a better way to navigate directories, find files, and launch commands.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20241027-cows.png" alt="cows" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://dystroy.org/broot/"&gt;&lt;strong&gt;Complete Documentation&lt;/strong&gt;&lt;/a&gt; - &lt;a href="https://dystroy.org/broot/install/"&gt;&lt;strong&gt;Installation Instructions&lt;/strong&gt;&lt;/a&gt; - &lt;a href="https://dystroy.org/blog/contributing/"&gt;&lt;strong&gt;Contributing or Getting Help&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Get an overview of a directory, even a big one&lt;/h2&gt; 
&lt;p&gt;Hit &lt;code&gt;br -s&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20230930-overview.png" alt="overview" /&gt;&lt;/p&gt; 
&lt;p&gt;Notice the &lt;em&gt;unlisted&lt;/em&gt;?&lt;/p&gt; 
&lt;p&gt;That's what makes it usable where the old &lt;code&gt;tree&lt;/code&gt; command would produce pages of output.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt; files are properly dealt with to put unwanted files out of your way.&lt;/p&gt; 
&lt;p&gt;As you sometimes want to see gitignored files, or hidden ones, you'll soon get used to the &lt;kbd&gt;alt&lt;/kbd&gt;&lt;kbd&gt;i&lt;/kbd&gt; and &lt;kbd&gt;alt&lt;/kbd&gt;&lt;kbd&gt;h&lt;/kbd&gt; shortcuts to toggle those visibilities.&lt;/p&gt; 
&lt;p&gt;(you can ignore them though, see &lt;a href="https://dystroy.org/broot/navigation/#toggles"&gt;documentation&lt;/a&gt;).&lt;/p&gt; 
&lt;h2&gt;Find a directory then &lt;code&gt;cd&lt;/code&gt; to it&lt;/h2&gt; 
&lt;p&gt;type a few letters&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20230930-cd.png" alt="cd" /&gt;&lt;/p&gt; 
&lt;p&gt;Hit &lt;kbd&gt;alt&lt;/kbd&gt;&lt;kbd&gt;enter&lt;/kbd&gt; and you're back to the terminal in the desired location.&lt;/p&gt; 
&lt;p&gt;This way, you can navigate to a directory with the minimum amount of keystrokes, even if you don't exactly remember where it is.&lt;/p&gt; 
&lt;p&gt;Broot is fast and doesn't block (any keystroke interrupts the current search to start the next one).&lt;/p&gt; 
&lt;p&gt;Most useful keys for this:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;the letters of what you're looking for&lt;/li&gt; 
 &lt;li&gt;&lt;kbd&gt;enter&lt;/kbd&gt; on the root line to go up to the parent (staying in broot)&lt;/li&gt; 
 &lt;li&gt;&lt;kbd&gt;enter&lt;/kbd&gt; to focus a directory (staying in broot)&lt;/li&gt; 
 &lt;li&gt;&lt;kbd&gt;esc&lt;/kbd&gt; to get back to the previous state or clear your search&lt;/li&gt; 
 &lt;li&gt;&lt;kbd class="b"&gt;↓&lt;/kbd&gt; and &lt;kbd class="b"&gt;↑&lt;/kbd&gt; may be used to move the selection&lt;/li&gt; 
 &lt;li&gt;&lt;kbd&gt;alt&lt;/kbd&gt;&lt;kbd&gt;enter&lt;/kbd&gt; to get back to the shell having &lt;code&gt;cd&lt;/code&gt; to the selected directory&lt;/li&gt; 
 &lt;li&gt;&lt;kbd&gt;alt&lt;/kbd&gt;&lt;kbd&gt;h&lt;/kbd&gt; to toggle showing hidden files (the ones whose name starts with a dot)&lt;/li&gt; 
 &lt;li&gt;&lt;kbd&gt;alt&lt;/kbd&gt;&lt;kbd&gt;i&lt;/kbd&gt; to toggle showing gitignored files&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;:q&lt;/code&gt; if you just want to quit (you can use &lt;kbd&gt;ctrl&lt;/kbd&gt;&lt;kbd&gt;q&lt;/kbd&gt; if you prefer)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Never lose track of file hierarchy while you search&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20230930-gccran.png" alt="search" /&gt;&lt;/p&gt; 
&lt;p&gt;Broot tries to select the most relevant file. You can still go from one match to another one using &lt;kbd&gt;tab&lt;/kbd&gt; or arrow keys.&lt;/p&gt; 
&lt;p&gt;You may also search with a regular expression. To do this, add a &lt;code&gt;/&lt;/code&gt; before the pattern.&lt;/p&gt; 
&lt;p&gt;And you have &lt;a href="https://raw.githubusercontent.com/Canop/broot/main/input/#the-filtering-pattern"&gt;other types of searches&lt;/a&gt;, for example searching on file content (start with &lt;code&gt;c/&lt;/code&gt;):&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20230930-content-memm.png" alt="content search" /&gt;&lt;/p&gt; 
&lt;p&gt;You may also apply logical operators or combine patterns, for example searching &lt;code&gt;test&lt;/code&gt; in all files except json ones could be &lt;code&gt;!/json$/&amp;amp;c/test&lt;/code&gt; and searching &lt;code&gt;carg&lt;/code&gt; both in file names and file contents would be &lt;code&gt;carg|c/carg&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Once the file you want is selected you can&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;hit &lt;kbd&gt;enter&lt;/kbd&gt; (or double-click) to open it in your system's default program&lt;/li&gt; 
 &lt;li&gt;hit &lt;kbd&gt;alt&lt;/kbd&gt;&lt;kbd&gt;enter&lt;/kbd&gt; to open it in your system's default program and close broot&lt;/li&gt; 
 &lt;li&gt;hit &lt;kbd&gt;ctrl&lt;/kbd&gt;&lt;kbd&gt;→&lt;/kbd&gt; to preview it (and then a second time to go inside the preview)&lt;/li&gt; 
 &lt;li&gt;type a verb. For example &lt;code&gt;:e&lt;/code&gt; opens the file in your preferred editor (which may be a terminal one)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://dystroy.org/blog/broot-c-search/"&gt;blog: a broot content search workflow&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Manipulate your files&lt;/h2&gt; 
&lt;p&gt;Most often, when not using broot, you move your files in the blind. You do a few &lt;code&gt;ls&lt;/code&gt; before, then your manipulation, and maybe you check after.&lt;/p&gt; 
&lt;p&gt;You can instead do it without losing the view of the file hierarchy.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20230930-mv.png" alt="mv" /&gt;&lt;/p&gt; 
&lt;p&gt;Move, copy, rm, mkdir, are built in and you can add your own shortcuts.&lt;/p&gt; 
&lt;p&gt;Here's chmod:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20230930-chmod.png" alt="chmod" /&gt;&lt;/p&gt; 
&lt;h2&gt;Manage files with panels&lt;/h2&gt; 
&lt;p&gt;When a directory is selected, do &lt;kbd&gt;ctrl&lt;/kbd&gt;&lt;kbd&gt;→&lt;/kbd&gt; and you open another panel (you may open other ones, or navigate between them, with &lt;kbd&gt;ctrl&lt;/kbd&gt;&lt;kbd&gt;←&lt;/kbd&gt; and &lt;kbd&gt;ctrl&lt;/kbd&gt;&lt;kbd&gt;→&lt;/kbd&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20230930-colored-panels.png" alt="custom colors tree" /&gt;&lt;/p&gt; 
&lt;p&gt;(yes, colors are fully customizable)&lt;/p&gt; 
&lt;p&gt;You can for example copy or move elements between panels:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20230930-cpp.png" alt="cpp" /&gt;&lt;/p&gt; 
&lt;p&gt;If you like you may do it Norton Commander style by binding &lt;code&gt;:copy_to_panel&lt;/code&gt; to &lt;kbd&gt;F5&lt;/kbd&gt; and &lt;code&gt;:move_to_panel&lt;/code&gt; to &lt;kbd&gt;F6&lt;/kbd&gt;.&lt;/p&gt; 
&lt;h2&gt;Preview files&lt;/h2&gt; 
&lt;p&gt;Hit &lt;kbd&gt;ctrl&lt;/kbd&gt;&lt;kbd&gt;→&lt;/kbd&gt; when a file is selected and the preview panel appears.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20230930-preview.png" alt="preview" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20230930-preview-image.png" alt="preview" /&gt;&lt;/p&gt; 
&lt;p&gt;The preview panel stays synchronized with the selection in tree panels.&lt;/p&gt; 
&lt;p&gt;Broot displays images in high resolution when the terminal supports Kitty's graphics protocol (compatible terminals: &lt;a href="https://sw.kovidgoyal.net/kitty/index.html"&gt;Kitty&lt;/a&gt;, &lt;a href="https://wezfurlong.org/wezterm/"&gt;WezTerm&lt;/a&gt;):&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20201127-kitty-preview.png" alt="kitty preview" /&gt;&lt;/p&gt; 
&lt;h2&gt;Apply a standard or personal command to a file&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20230930-edit.png" alt="size" /&gt;&lt;/p&gt; 
&lt;p&gt;Just find the file you want to edit with a few keystrokes, type &lt;code&gt;:e&lt;/code&gt;, then &lt;kbd&gt;enter&lt;/kbd&gt;.&lt;/p&gt; 
&lt;p&gt;You can add verbs or configure the existing ones; see &lt;a href="https://dystroy.org/broot/conf_file/#verbs-shortcuts-and-keys"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;And you can add shortcuts, for example a &lt;kbd&gt;ctrl&lt;/kbd&gt; sequence or a function key&lt;/p&gt; 
&lt;h2&gt;Apply commands on several files&lt;/h2&gt; 
&lt;p&gt;Add files to the &lt;a href="https://raw.githubusercontent.com/Canop/broot/main/staging-area"&gt;staging area&lt;/a&gt; then execute any command on all of them.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20230930-staging-mv.png" alt="staging mv" /&gt;&lt;/p&gt; 
&lt;h2&gt;Replace &lt;code&gt;ls&lt;/code&gt; (and its clones):&lt;/h2&gt; 
&lt;p&gt;If you want to display &lt;em&gt;sizes&lt;/em&gt;, &lt;em&gt;dates&lt;/em&gt; and &lt;em&gt;permissions&lt;/em&gt;, do &lt;code&gt;br -sdp&lt;/code&gt; which gets you this:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20240501-sdp.png" alt="replace ls" /&gt;&lt;/p&gt; 
&lt;p&gt;You may also toggle options with a few keystrokes while inside broot. For example you could have typed this &lt;code&gt;-sdp&lt;/code&gt; while in broot. Or hit &lt;kbd&gt;alt&lt;/kbd&gt;&lt;kbd&gt;h&lt;/kbd&gt; and you see hidden files.&lt;/p&gt; 
&lt;h2&gt;Sort, see what takes space:&lt;/h2&gt; 
&lt;p&gt;You may sort by launching broot with &lt;code&gt;--sort-by-size&lt;/code&gt; or &lt;code&gt;--sort-by-date&lt;/code&gt;. Or you may, inside broot, type a space, then &lt;code&gt;sd&lt;/code&gt;, and &lt;kbd&gt;enter&lt;/kbd&gt; and you toggled the &lt;code&gt;:sort_by_date&lt;/code&gt; mode.&lt;/p&gt; 
&lt;p&gt;When sorting, the whole content of directories is taken into account. So if you want to find on Monday morning the most recently modified files, launch &lt;code&gt;br --sort-by-date ~&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you start broot with the &lt;code&gt;--whale-spotting&lt;/code&gt; option (or its shortcut &lt;code&gt;-w&lt;/code&gt;), you get a mode tailored to "whale spotting" navigation, making it easy to determine what files or folders take space.&lt;/p&gt; 
&lt;p&gt;Sizes, dates, files counts, are computed in the background, you don't have to wait for them when you navigate.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20230930-whale-spotting.png" alt="size" /&gt;&lt;/p&gt; 
&lt;p&gt;And you keep all broot tools, like filtering or the ability to delete or open files and directories.&lt;/p&gt; 
&lt;p&gt;If you hit &lt;code&gt;:fs&lt;/code&gt;, you can check the usage of all filesystems, so that you focus on cleaning the full ones.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20230930-fs.png" alt="fs" /&gt;&lt;/p&gt; 
&lt;h2&gt;Check git statuses:&lt;/h2&gt; 
&lt;p&gt;Use &lt;code&gt;:gf&lt;/code&gt; to display the statuses of files (what are the new ones, the modified ones, etc.), the current branch name and the change statistics.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20230930-git.png" alt="size" /&gt;&lt;/p&gt; 
&lt;p&gt;And if you want to see &lt;em&gt;only&lt;/em&gt; the files which would be displayed by the &lt;code&gt;git status&lt;/code&gt; command, do &lt;code&gt;:gs&lt;/code&gt;. From there it's easy to edit, or diff, selected files.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Canop/broot/main/website/docs/img/20230930-gg.png" alt="gg" /&gt;&lt;/p&gt; 
&lt;p&gt;From there it's easy to edit, diff, or revert selected files.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://dystroy.org/blog/gg/"&gt;blog: use broot and meld to diff before commit&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Further Reading&lt;/h2&gt; 
&lt;p&gt;See &lt;strong&gt;&lt;a href="https://dystroy.org/broot"&gt;Broot's web site&lt;/a&gt;&lt;/strong&gt; for instructions regarding installation and usage.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>eythaann/Seelen-UI</title>
      <link>https://github.com/eythaann/Seelen-UI</link>
      <description>&lt;p&gt;The Fully Customizable Desktop Environment for Windows 10/11.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/logo.svg?sanitize=true" width="44" align="top" alt="Seelen UI Logo" /&gt; Seelen UI &lt;/h1&gt; 
&lt;h2 align="center"&gt; Fully Customizable Desktop Environment for Windows &lt;br /&gt; Available in 70+ Languages &lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/eythaann/seelen-ui/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/eythaann/seelen-ui.svg?sanitize=true" alt="Contributors" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eythaann/seelen-ui/commits/main"&gt;&lt;img src="https://img.shields.io/github/last-commit/eythaann/seelen-ui.svg?sanitize=true" alt="Last Commit" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eythaann/seelen-ui/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/eythaann/seelen-ui.svg?sanitize=true" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eythaann/seelen-ui/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/eythaann/seelen-ui/total.svg?sanitize=true" alt="Downloads" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/preview.png" width="100%" alt="Screenshot of Seelen UI desktop showing a customized desktop environment" /&gt; 
&lt;table align="center"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://apps.microsoft.com/detail/Seelen%20UI/9p67c2d4t9fb?mode=full" target="_blank" rel="noopener noreferrer" aria-label="Download Seelen UI from Microsoft Store"&gt; &lt;img src="https://get.microsoft.com/images/en-us%20dark.svg?sanitize=true" width="100%" alt="Download Seelen UI from Microsoft Store" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://discord.gg/ABfASx5ZAJ" target="_blank" rel="noopener noreferrer" aria-label="Join the Seelen UI Discord community"&gt; &lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/discord-alt.png" width="100%" alt="Join the Seelen UI Discord community" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://www.digitalocean.com/?refcode=955c7335abf5&amp;amp;utm_campaign=Referral_Invite&amp;amp;utm_medium=Referral_Program&amp;amp;utm_source=badge" target="_blank" rel="noopener noreferrer" aria-label="DigitalOcean Referral Badge"&gt; &lt;img src="https://web-platforms.sfo2.cdn.digitaloceanspaces.com/WWW/Badge%201.svg?sanitize=true" width="100%" alt="DigitalOcean Referral Badge" /&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://seelen.io/apps/seelen-ui"&gt;Seelen UI&lt;/a&gt; is a tool designed to enhance your Windows desktop experience with a focus on customization and productivity. It integrates smoothly into your system, providing a range of features that allow you to personalize your desktop and optimize your workflow.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Be Creative&lt;/strong&gt;: Seelen UI lets you tailor your desktop to fit your style and needs. You can adjust menus, widgets, icons, and other elements to create a personalized and visually appealing desktop environment.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/theme_preview.png" alt="Seelen UI Custom Theme" /&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enhance Your Productivity&lt;/strong&gt;: Seelen UI helps you organize your desktop efficiently. With a Tiling Windows Manager, windows automatically arrange themselves to support multitasking, making your work more streamlined.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/twm_preview.png" alt="Seelen UI Tiling Window Manager" /&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enjoy your music&lt;/strong&gt;: With an integrated media module that's compatible with most music players, Seelen UI allows you to enjoy your music seamlessly. You can pause, resume, and skip tracks at any time without the need to open additional windows.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/media_module_preview.png" alt="Seelen UI Media Module" /&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Be faster!&lt;/strong&gt;: With an app launcher inspired by Rofi, Seelen UI provides a simple and intuitive way to quickly access your applications and execute commands.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/app_launcher_preview.png" alt="Seelen UI App Launcher" /&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;User-Friendly Configuration&lt;/strong&gt;: Seelen UI offers an intuitive interface for easy customization. Adjust settings such as themes, taskbar layouts, icons, etc. With just a few clicks.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/settings_preview.png" alt="Seelen UI Settings" /&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] Seelen UI requires the WebView runtime to be installed. On Windows 11, it comes pre-installed with the system. However, on Windows 10, the WebView runtime is included with the &lt;code&gt;setup.exe&lt;/code&gt; installer. Additionally, Microsoft Edge is necessary to function correctly. Some users may have modified their system and removed Edge, so please ensure both Edge and the WebView runtime are installed on your system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] On fresh installations of Windows, the app might show a white or dark screen. You only need to update your Windows through Windows Update and restart your PC.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can choose from different installation options based on your preference:&lt;/p&gt; 
&lt;h3&gt;Microsoft Store &lt;em&gt;(recommended)&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;Download the latest version from the &lt;a href="https://www.microsoft.com/store/productId/9P67C2D4T9FB?ocid=pdpshare"&gt;Store&lt;/a&gt; page. This is the recommended option because you will receive updates and a secure version of the program.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/em&gt;: It may take around 1 to 3 business days for changes to be reflected in the Microsoft Store, as updates are approved by real people in the store.&lt;/p&gt; 
&lt;h3&gt;Winget&lt;/h3&gt; 
&lt;p&gt;Install the latest version using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-pwsh"&gt;winget install --id Seelen.SeelenUI
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This option also uses the signed &lt;code&gt;.msix&lt;/code&gt; package and ensures you have the latest secure version. Similar to the Microsoft Store, it may take around 1 to 3 business days for changes to be reflected in Winget, as updates are approved by real people in the &lt;code&gt;winget-pkg&lt;/code&gt; project.&lt;/p&gt; 
&lt;h3&gt;.msix Installer&lt;/h3&gt; 
&lt;p&gt;Download the &lt;code&gt;.msix&lt;/code&gt; installer from the &lt;a href="https://github.com/eythaann/seelen-ui/releases"&gt;Releases&lt;/a&gt; page. This package is signed, ensuring a secure installation. This is the same option as the Microsoft Store but is a portable installer.&lt;/p&gt; 
&lt;h3&gt;.exe Installer&lt;/h3&gt; 
&lt;p&gt;Download the latest version from the &lt;a href="https://github.com/eythaann/seelen-ui/releases"&gt;Releases&lt;/a&gt; page and run the &lt;code&gt;setup.exe&lt;/code&gt; installer. This option is less recommended as the installer is not signed, which may cause it to be flagged as a potential threat by some antivirus programs. The &lt;code&gt;setup.exe&lt;/code&gt; is updated more quickly than the Microsoft Store or Winget versions and also it receives notifications updates on new release.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Once installed or extracted, simply open the program. The easy-to-use and intuitive GUI will guide you through the configuration process. Customize your desktop environment effortlessly.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For in-depth details on various aspects of Seelen UI, explore the following documents:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/languages.md"&gt;Languages&lt;/a&gt; - Information regarding translations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/toolbar.md"&gt;Toolbar&lt;/a&gt; - Details about customizing and using the toolbar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://seelen.io/blog/seelen-ui-theme-tutorial"&gt;Themes&lt;/a&gt; - Guidance on creating and applying themes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/window_manager.md"&gt;Window Manager&lt;/a&gt; - Instructions on configuring the window manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/project.md"&gt;Project&lt;/a&gt; - General information about the project and its structure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Upcoming Features&lt;/h2&gt; 
&lt;p&gt;I’m excited to share some upcoming features for Seelen UI! Here’s a glimpse of what’s planned for the future:&lt;/p&gt; 
&lt;h3&gt;&lt;del&gt;App Launcher&lt;/del&gt; ✅&lt;/h3&gt; 
&lt;p&gt;I’m planning to develop an app launcher inspired by &lt;a href="https://github.com/davatorium/rofi"&gt;Rofi&lt;/a&gt; on Linux. This feature will provide a sleek and highly customizable way to quickly access your applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/adi1090x/files/master/rofi/previews/colorful/main.gif" alt="App Launcher Preview" /&gt; &lt;em&gt;Image courtesy of &lt;a href="https://github.com/dctxmei/rofi-themes"&gt;rofi-themes&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Customizable Popup Widgets&lt;/h3&gt; 
&lt;p&gt;I aim to introduce a set of fully customizable popup widgets, similar to the features available in &lt;a href="https://github.com/elkowar/eww"&gt;EWW&lt;/a&gt;. These widgets will be highly configurable and adaptable to your needs, providing an enhanced and interactive way to manage your desktop environment.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/adi1090x/widgets/main/previews/dashboard.png" alt="Customizable Widgets Preview" /&gt; &lt;em&gt;Image courtesy of &lt;a href="https://github.com/adi1090x/widgets"&gt;adi1090x&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Custom Alt + Tab (Task Switching)&lt;/h3&gt; 
&lt;p&gt;An upgraded Alt + Tab system for task switching is on the horizon. This will offer a more visually appealing and functional experience, allowing for smoother transitions between open applications and windows.&lt;/p&gt; 
&lt;h3&gt;Custom Virtual Desktops Viewer and Animations&lt;/h3&gt; 
&lt;p&gt;I’m also working on a custom virtual desktops viewer and dynamic animations to improve navigation between different workspaces. This will provide a more intuitive and immersive multitasking experience.&lt;/p&gt; 
&lt;p&gt;Stay tuned for more updates as I develop these features. I appreciate your support and enthusiasm!&lt;/p&gt; 
&lt;p&gt;Happy customizing!&lt;/p&gt; 
&lt;p&gt;The Seelen UI Team&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Read the &lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/CONTRIBUTING"&gt;Contribution Guidelines&lt;/a&gt; to get started with terms.&lt;/li&gt; 
 &lt;li&gt;Read the &lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/project.md"&gt;Project Documentation&lt;/a&gt; to understand the project structure and how to use it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;For inquiries and support, please contact me on &lt;a href="https://discord.gg/ABfASx5ZAJ"&gt;Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;See you later&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;                 .      .&amp;amp;     _,x&amp;amp;"``
                  &amp;amp; .   &amp;amp;'  ;.&amp;amp;&amp;amp;'
            &amp;amp;.  . &amp;amp;.&amp;amp;     .0&amp;amp;&amp;amp;&amp;amp;;&amp;amp;""`
       .    '&amp;amp;  &amp;amp;.&amp;amp;&amp;amp;&amp;amp;  .&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;'
     .&amp;amp;         ;&amp;amp;&amp;amp;&amp;amp; &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;'
    &amp;amp;&amp;amp;          &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;     &amp;amp;&amp;amp;&amp;amp;
   0&amp;amp;    .     &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;""
  &amp;amp;&amp;amp;   .0     &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;
 0&amp;amp;&amp;amp; .&amp;amp;'     &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;
:&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;    . &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp; 
0&amp;amp;&amp;amp;&amp;amp;&amp;amp;    &amp;amp; &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;
&amp;amp;&amp;amp;&amp;amp;&amp;amp;'   &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;               .&amp;amp;&amp;amp;&amp;amp;x&amp;amp;
&amp;amp;&amp;amp;&amp;amp;&amp;amp;   :&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0.&amp;amp;'        , .&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;;.
&amp;amp;&amp;amp;&amp;amp;&amp;amp;.  &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;        .&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;'               .
0&amp;amp;&amp;amp;&amp;amp;&amp;amp;  &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;       ,&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;                &amp;amp;
:&amp;amp;&amp;amp;&amp;amp;&amp;amp;; &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0       ,;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;             ;  .0
 0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0     ,;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;             &amp;amp;  &amp;amp;;
  0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0   :',;".&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;".&amp;amp;             &amp;amp;&amp;amp; &amp;amp;0
   0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0  ',;',&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;" ,&amp;amp;'             &amp;amp;&amp;amp;&amp;amp;&amp;amp;0
    0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0 ,x&amp;amp;&amp;amp;&amp;amp;&amp;amp;" .&amp;amp;&amp;amp;&amp;amp;              &amp;amp;&amp;amp;&amp;amp;&amp;amp;0
      0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp; .&amp;amp;&amp;amp;&amp;amp;&amp;amp;"'''"&amp;amp;&amp;amp;"&amp;amp;&amp;amp;            &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
       0&amp;amp;&amp;amp; .&amp;amp;&amp;amp;;``       `&amp;amp;: :&amp;amp;         &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
          &amp;amp;"' &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;   &amp;amp;"&amp;amp; &amp;amp;"&amp;amp;   &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
            0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
               0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0         Seelen
                    0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;p&gt;📌 &lt;strong&gt;Official Website&lt;/strong&gt;: &lt;a href="https://seelen.io"&gt;https://seelen.io&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Seelen Inc © 2025 - All rights reserved&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>0x192/universal-android-debloater</title>
      <link>https://github.com/0x192/universal-android-debloater</link>
      <description>&lt;p&gt;Cross-platform GUI written in Rust using ADB to debloat non-rooted android devices. Improve your privacy, the security and battery life of your device.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Universal Android Debloater GUI&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: Use at your own risk. I am not responsible for anything that could happen to your phone.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/0x192/universal-android-debloater/main/resources/screenshots/v0.5.0.png" width="850" alt="uad_screenshot" /&gt; 
&lt;p&gt;&lt;strong&gt;This software is still in an early stage of development. Check out the issues, and feel free to contribute!&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Summary&lt;/h2&gt; 
&lt;p&gt;This is a complete rewrite in Rust of the &lt;a href="https://gitlab.com/W1nst0n/universal-android-debloater"&gt;UAD project&lt;/a&gt;, which aims to improve privacy and battery performance by removing unnecessary and obscure system apps. This can also contribute to improve security by reducing &lt;a href="https://en.wikipedia.org/wiki/Attack_surface"&gt;the attack surface&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Packages are as well documented as possible in order to provide a better understanding of what you can delete or not. The worst issue that could happen is removing an essential system package needed during boot causing then an unfortunate bootloop. After about 5 failed system boots, the phone will automatically reboot in recovery mode, and you'll have to perform a FACTORY RESET. Make a backup first!&lt;/p&gt; 
&lt;p&gt;In any case, you &lt;strong&gt;CANNOT&lt;/strong&gt; brick your device with this software! That's the main point, right?&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Uninstall/Disable and Restore/Enable system packages&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Multi-user support (e.g. apps in work profiles)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Export/Import your selection in &lt;code&gt;uad_exported_selection.txt&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Multi-device support: you can connect multiple phones at the same time&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; All your actions are logged, so you never forget what you've done&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;NB : System apps cannot truly be uninstalled without root (see the &lt;a href="https://github.com/0x192/universal-android-debloater/wiki/FAQ"&gt;FAQ&lt;/a&gt;)&lt;/p&gt; 
&lt;h2&gt;Universal Debloat Lists&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; GFAM (Google/Facebook/Amazon/Microsoft)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; AOSP&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Manufacturers (OEM)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Mobile carriers&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Qualcomm / Mediatek / Miscellaneous&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Manufacturers debloat lists&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Archos&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Asus&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Blackberry&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Gionee&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; LG&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Google&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; iQOO&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Fairphone&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; HTC&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Huawei&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Motorola&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Nokia&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; OnePlus&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Oppo&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Realme&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Samsung&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Sony&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Tecno&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; TCL&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Unihertz&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Vivo/iQOO&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Wiko&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Xiaomi&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; ZTE&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Mobile carriers debloat lists&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Country&lt;/th&gt; 
   &lt;th&gt;Carriers&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;France&lt;/td&gt; 
   &lt;td&gt;Orange, SFR, Free, Bouygues&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;USA&lt;/td&gt; 
   &lt;td&gt;T-Mobile, Verizon, Sprint, AT&amp;amp;T&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Germany&lt;/td&gt; 
   &lt;td&gt;Telekom&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;UK&lt;/td&gt; 
   &lt;td&gt;EE&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;How to use it&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Read the &lt;a href="https://github.com/0x192/universal-android-debloater/wiki/FAQ"&gt;FAQ&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Do a proper backup of your data! You can never be too careful!&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enable &lt;em&gt;Developer Options&lt;/em&gt; on your smartphone.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Turn on &lt;em&gt;USB Debugging&lt;/em&gt; from the developer panel.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;From the settings, disconnect from any OEM accounts (when you delete an OEM account package it could lock you on the lockscreen because the phone can't associate your identity anymore)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install ADB (see the intructions by clicking on your OS below):&lt;/p&gt; &lt;p&gt; &lt;/p&gt;
  &lt;details&gt; 
   &lt;summary&gt;LINUX&lt;/summary&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Install &lt;em&gt;Android platform tools&lt;/em&gt; on your PC :&lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;p&gt;Debian Base:&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt install android-sdk-platform-tools
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;Arch-Linux Base:&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;sudo pacman -S android-tools
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;Red Hat Base:&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;sudo yum install android-tools
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;OpenSUSE Base:&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;sudo zypper install android-tools
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt; &lt;/p&gt;
  &lt;details&gt; 
   &lt;summary&gt;MAC OS&lt;/summary&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;em&gt;Android platform tools&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;brew install android-platform-tools
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt;
   &lt;/ul&gt;
  &lt;/details&gt; &lt;p&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt; &lt;/p&gt;
&lt;details&gt; 
 &lt;summary&gt;WINDOWS&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;Download &lt;a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip"&gt;android platform tools&lt;/a&gt; and unzip it somewhere.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;a href="https://www.architectryan.com/2018/03/17/add-to-the-path-on-windows-10/"&gt;Add the android platform tools to your PATH&lt;/a&gt; &lt;strong&gt;OR&lt;/strong&gt; make sure to launch UAD from the same directory.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;a href="https://developer.android.com/studio/run/oem-usb#Drivers"&gt;Install USB drivers for your device&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Check your device is detected:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt; adb devices
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt; 
&lt;p&gt;&lt;/p&gt;    
&lt;li&gt; &lt;p&gt;Download the latest release of UAD GUI for your Operating System &lt;a href="https://github.com/0x192/universal-android-debloater/releases"&gt;here&lt;/a&gt;. Take the &lt;code&gt;opengl&lt;/code&gt; version only if the default version (with a Vulkan backend) doesn't launch.&lt;/p&gt; &lt;/li&gt;  
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Chinese phones users may need to use the AOSP list for removing some stock apps because those Chinese manufacturers (especially Xiaomi and Huawei) have been using the name of AOSP packages for their own (modified &amp;amp; closed-source) apps.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT NOTE:&lt;/strong&gt; You will have to run this software whenever your OEM pushes an update to your phone as some &lt;em&gt;uninstalled&lt;/em&gt; system apps could be reinstalled.&lt;/p&gt; 
&lt;h2&gt;How to contribute&lt;/h2&gt; 
&lt;p&gt;Hey-hey-hey! Don't go away so fast! This is a community project. That means I need you! I'm sure you want to make this project better anyway.&lt;/p&gt; 
&lt;p&gt;==&amp;gt; &lt;a href="https://github.com/0x192/universal-android-debloater/wiki"&gt;How to contribute&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Special thanks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mawilms"&gt;@mawilms&lt;/a&gt; for his LotRO plugin manager (&lt;a href="https://github.com/mawilms/lembas"&gt;Lembas&lt;/a&gt;) which helped me a lot to understand how to use the &lt;a href="https://github.com/hecrj/iced"&gt;Iced&lt;/a&gt; GUI library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/casperstorm"&gt;@casperstorm&lt;/a&gt; for the UI/UX inspiration.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jj-vcs/jj</title>
      <link>https://github.com/jj-vcs/jj</link>
      <description>&lt;p&gt;A Git-compatible VCS that is both simple and powerful&lt;/p&gt;&lt;hr&gt;&lt;div class="title-block" style="text-align: center;" align="center"&gt; 
 &lt;h1&gt;Jujutsu—a version control system&lt;/h1&gt; 
 &lt;p&gt;&lt;img title="jj logo" src="https://raw.githubusercontent.com/jj-vcs/jj/main/docs/images/jj-logo.svg?sanitize=true" width="320" height="320" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/jj-vcs/jj/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/martinvonz/jj" alt="Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jj-vcs/jj/releases"&gt;&lt;img src="https://img.shields.io/github/release-date/martinvonz/jj" alt="Release date" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://github.com/jj-vcs/jj/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/martinvonz/jj" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/dkmfj3aGQN"&gt;&lt;img src="https://img.shields.io/discord/968932220549103686.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://web.libera.chat/?channel=#jujutsu"&gt;&lt;img src="https://img.shields.io/badge/irc-%23jujutsu-blue.svg?sanitize=true" alt="IRC" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://jj-vcs.github.io/jj"&gt;Homepage&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://jj-vcs.github.io/jj/latest/install-and-setup"&gt;Installation&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://jj-vcs.github.io/jj/latest/tutorial"&gt;Getting Started&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://jj-vcs.github.io/jj/latest/roadmap"&gt;Development Roadmap&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/jj-vcs/jj/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Jujutsu is a powerful &lt;a href="https://en.wikipedia.org/wiki/Version_control"&gt;version control system&lt;/a&gt; for software projects. You use it to get a copy of your code, track changes to the code, and finally publish those changes for others to see and use. It is designed from the ground up to be easy to use—whether you're new or experienced, working on brand new projects alone, or large scale software projects with large histories and teams.&lt;/p&gt; 
&lt;p&gt;Jujutsu is unlike most other systems, because internally it abstracts the user interface and version control algorithms from the &lt;em&gt;storage systems&lt;/em&gt; used to serve your content. This allows it to serve as a VCS with many possible physical backends, that may have their own data or networking models—like &lt;a href="https://www.mercurial-scm.org/"&gt;Mercurial&lt;/a&gt; or &lt;a href="https://www.breezy-vcs.org/"&gt;Breezy&lt;/a&gt;, or hybrid systems like Google's cloud-based design, &lt;a href="https://youtu.be/W71BTkUbdqE?t=645"&gt;Piper/CitC&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Today, we use Git repositories as a storage layer to serve and track content, making it &lt;strong&gt;compatible with many of your favorite Git-based tools, right now!&lt;/strong&gt; All core developers use Jujutsu to develop Jujutsu, right here on GitHub. But it should hopefully work with your favorite Git forges, too.&lt;/p&gt; 
&lt;p&gt;We combine many distinct design choices and concepts from other version control systems into a single tool. Some of those sources of inspiration include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt;: We make an effort to &lt;a href="https://github.com/jj-vcs/jj/discussions/49"&gt;be fast&lt;/a&gt;—with a snappy UX, efficient algorithms, correct data structures, and good-old-fashioned attention to detail. The default storage backend uses Git repositories for "physical storage", for wide interoperability and ease of onboarding.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Mercurial &amp;amp; Sapling&lt;/strong&gt;: There are many Mercurial-inspired features, such as the &lt;a href="https://jj-vcs.github.io/jj/latest/revsets/"&gt;revset&lt;/a&gt; language to select commits. There is &lt;a href="https://jj-vcs.github.io/jj/latest/git-comparison/#the-index"&gt;no explicit index&lt;/a&gt; or staging area. Branches are "anonymous" like Mercurial, so you don't need to make up a name for each small change. Primitives for rewriting history are powerful and simple. Formatting output is done with a robust template language that can be configured by the user.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Darcs&lt;/strong&gt;: Jujutsu keeps track of conflicts as &lt;a href="https://jj-vcs.github.io/jj/latest/conflicts/"&gt;first-class objects&lt;/a&gt; in its model; they are first-class in the same way commits are, while alternatives like Git simply think of conflicts as textual diffs. While not as rigorous as systems like Darcs (which is based on a formalized theory of patches, as opposed to snapshots), the effect is that many forms of conflict resolution can be performed and propagated automatically.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And it adds several innovative, useful features of its own:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Working-copy-as-a-commit&lt;/strong&gt;: Changes to files are &lt;a href="https://jj-vcs.github.io/jj/latest/working-copy/"&gt;recorded automatically&lt;/a&gt; as normal commits, and amended on every subsequent change. This "snapshot" design simplifies the user-facing data model (commits are the only visible object), simplifies internal algorithms, and completely subsumes features like Git's stashes or the index/staging-area.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Operation log &amp;amp; undo&lt;/strong&gt;: Jujutsu records every operation that is performed on the repository, from commits, to pulls, to pushes. This makes debugging problems like "what just happened?" or "how did I end up here?" easier, &lt;em&gt;especially&lt;/em&gt; when you're helping your coworker answer those questions about their repository! And because everything is recorded, you can undo that mistake you just made with ease. Version control has finally entered &lt;a href="https://en.wikipedia.org/wiki/Undo#History"&gt;the 1960s&lt;/a&gt;!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Automatic rebase and conflict resolution&lt;/strong&gt;: When you modify a commit, every descendent is automatically rebased on top of the freshly-modified one. This makes "patch-based" workflows a breeze. If you resolve a conflict in a commit, the &lt;em&gt;resolution&lt;/em&gt; of that conflict is also propagated through descendants as well. In effect, this is a completely transparent version of &lt;code&gt;git rebase --update-refs&lt;/code&gt; combined with &lt;code&gt;git rerere&lt;/code&gt;, supported by design.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] The following features are available for use, but experimental; they may have bugs, backwards incompatible storage changes, and user-interface changes!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Safe, concurrent replication&lt;/strong&gt;: Have you ever wanted to store your version controlled repositories inside a Dropbox folder? Or continuously backup repositories to S3? No? Well, now you can!&lt;/p&gt; &lt;p&gt;The fundamental problem with using filesystems like Dropbox and backup tools like &lt;code&gt;rsync&lt;/code&gt; on your typical Git/Mercurial repositories is that they rely on &lt;em&gt;local filesystem operations&lt;/em&gt; being atomic, serialized, and non-concurrent with respect to other reads and writes—which is &lt;em&gt;not&lt;/em&gt; true when operating on distributed file systems, or when operations like concurrent file copies (for backup) happen while lock files are being held.&lt;/p&gt; &lt;p&gt;Jujutsu is instead designed to be &lt;a href="https://jj-vcs.github.io/jj/latest/technical/concurrency/"&gt;safe under concurrent scenarios&lt;/a&gt;; simply using rsync or Dropbox and then using that resulting repository should never result in a repository in a &lt;em&gt;corrupt state&lt;/em&gt;. The worst that &lt;em&gt;should&lt;/em&gt; happen is that it will expose conflicts between the local and remote state, leaving you to resolve them.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The command-line tool is called &lt;code&gt;jj&lt;/code&gt; for now because it's easy to type and easy to replace (rare in English). The project is called "Jujutsu" because it matches "jj".&lt;/p&gt; 
&lt;p&gt;Jujutsu is relatively young, with lots of work to still be done. If you have any questions, or want to talk about future plans, please join us on Discord &lt;a href="https://discord.gg/dkmfj3aGQN"&gt;&lt;img src="https://img.shields.io/discord/968932220549103686.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2" alt="Discord" /&gt;&lt;/a&gt;, start a &lt;a href="https://github.com/jj-vcs/jj/discussions"&gt;GitHub Discussion&lt;/a&gt;, or send an IRC message to &lt;a href="https://web.libera.chat/?channel=#jujutsu"&gt;&lt;code&gt;#jujutsu&lt;/code&gt; on Libera Chat&lt;/a&gt;. The developers monitor all of these channels[^bridge].&lt;/p&gt; 
&lt;p&gt;[^bridge]: To be more precise, the &lt;code&gt;#jujutsu&lt;/code&gt; Libera IRC channel is bridged to one of the channels on jj's Discord. Some of the developers stay on Discord and use the bridge to follow IRC.&lt;/p&gt; 
&lt;h3&gt;News and Updates 📣&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;December 2024&lt;/strong&gt;: The &lt;code&gt;jj&lt;/code&gt; Repository has moved to the &lt;code&gt;jj-vcs&lt;/code&gt; GitHub organization.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;November 2024&lt;/strong&gt;: Version 0.24 is released which adds &lt;code&gt;jj file annotate&lt;/code&gt;, which is equivalent to &lt;code&gt;git blame&lt;/code&gt; or &lt;code&gt;hg annotate&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;September 2024&lt;/strong&gt;: Martin gave a &lt;a href="https://www.youtube.com/watch?v=LV0JzI8IcCY"&gt;presentation about Jujutsu&lt;/a&gt; at Git Merge 2024.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Feb 2024&lt;/strong&gt;: Version 0.14 is released, which deprecates &lt;a href="https://raw.githubusercontent.com/jj-vcs/jj/main/CHANGELOG.md#0140---2024-02-07"&gt;"jj checkout" and "jj merge"&lt;/a&gt;, as well as &lt;code&gt;jj init --git&lt;/code&gt;, which is now just called &lt;code&gt;jj git init&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Oct 2023&lt;/strong&gt;: Version 0.10.0 is released! Now includes a bundled merge and diff editor for all platforms, "immutable revsets" to avoid accidentally &lt;code&gt;edit&lt;/code&gt;-ing the wrong revisions, and lots of polish.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jan 2023&lt;/strong&gt;: Martin gave a presentation about Google's plans for Jujutsu at Git Merge 2022! See the &lt;a href="https://docs.google.com/presentation/d/1F8j9_UOOSGUN9MvHxPZX_L4bQ9NMcYOp1isn17kTC_M/view"&gt;slides&lt;/a&gt; or the &lt;a href="https://www.youtube.com/watch?v=bx_LGilOuE4"&gt;recording&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Related Media&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Mar 2024&lt;/strong&gt;: Chris Krycho started &lt;a href="https://www.youtube.com/playlist?list=PLelyiwKWHHAq01Pvmpf6x7J0y-yQpmtxp"&gt;a YouTube series about Jujutsu&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Feb 2024&lt;/strong&gt;: Chris Krycho published an article about Jujutsu called &lt;a href="https://v5.chriskrycho.com/essays/jj-init/"&gt;jj init&lt;/a&gt; and Steve Klabnik followed up with the &lt;a href="https://steveklabnik.github.io/jujutsu-tutorial/"&gt;Jujutsu Tutorial&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jan 2024&lt;/strong&gt;: Jujutsu was featured in an LWN.net article called &lt;a href="https://lwn.net/Articles/958468/"&gt;Jujutsu: a new, Git-compatible version control system&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jan 2023&lt;/strong&gt;: Martin's Talk about Jujutsu at Git Merge 2022, &lt;a href="https://www.youtube.com/watch?v=bx_LGilOuE4"&gt;video&lt;/a&gt; and the associated &lt;a href="https://docs.google.com/presentation/d/1F8j9_UOOSGUN9MvHxPZX_L4bQ9NMcYOp1isn17kTC_M/view"&gt;slides&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The wiki also contains a more extensive list of &lt;a href="https://github.com/jj-vcs/jj/wiki/Media"&gt;media references&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Jujutsu is an &lt;strong&gt;experimental version control system&lt;/strong&gt;. While Git compatibility is stable, and most developers use it daily for all their needs, there may still be work-in-progress features, suboptimal UX, and workflow gaps that make it unusable for your particular use.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Follow the &lt;a href="https://jj-vcs.github.io/jj/latest/install-and-setup"&gt;installation instructions&lt;/a&gt; to obtain and configure &lt;code&gt;jj&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The best way to get started is probably to go through &lt;a href="https://jj-vcs.github.io/jj/latest/tutorial"&gt;the tutorial&lt;/a&gt;. Also see the &lt;a href="https://jj-vcs.github.io/jj/latest/git-comparison"&gt;Git comparison&lt;/a&gt;, which includes a table of &lt;code&gt;jj&lt;/code&gt; vs. &lt;code&gt;git&lt;/code&gt; commands.&lt;/p&gt; 
&lt;p&gt;As you become more familiar with Jujutsu, the following resources may be helpful:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href="https://jj-vcs.github.io/jj/latest/FAQ"&gt;FAQ&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://jj-vcs.github.io/jj/latest/glossary"&gt;Glossary&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;jj help&lt;/code&gt; command (e.g. &lt;code&gt;jj help rebase&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;jj help -k &amp;lt;keyword&amp;gt;&lt;/code&gt; command (e.g. &lt;code&gt;jj help -k config&lt;/code&gt;). Use &lt;code&gt;jj help --help&lt;/code&gt; to see what keywords are available.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are using a &lt;strong&gt;prerelease&lt;/strong&gt; version of &lt;code&gt;jj&lt;/code&gt;, you would want to consult &lt;a href="https://jj-vcs.github.io/jj/prerelease/"&gt;the docs for the prerelease (main branch) version&lt;/a&gt;. You can also get there from the docs for the latest release by using the website's version switcher. The version switcher is visible in the header of the website when you scroll to the top of any page.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Compatible with Git&lt;/h3&gt; 
&lt;p&gt;Jujutsu is designed so that the underlying data and storage model is abstract. Today, only the Git backend is production-ready. The Git backend uses the &lt;a href="https://github.com/Byron/gitoxide"&gt;gitoxide&lt;/a&gt; Rust library.&lt;/p&gt; 
&lt;p&gt;The Git backend is fully featured and maintained, and allows you to use Jujutsu with any Git remote. The commits you create will look like regular Git commits. You can fetch branches from a regular Git remote and push branches to the remote. You can always switch back to Git.&lt;/p&gt; 
&lt;p&gt;Here is how you can explore a GitHub repository with &lt;code&gt;jj&lt;/code&gt;.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/jj-vcs/jj/main/demos/git_compat.png" /&gt; 
&lt;p&gt;You can even have a &lt;a href="https://jj-vcs.github.io/jj/latest/git-compatibility#colocated-jujutsugit-repos"&gt;colocated local repository&lt;/a&gt; where you can use both &lt;code&gt;jj&lt;/code&gt; and &lt;code&gt;git&lt;/code&gt; commands interchangeably.&lt;/p&gt; 
&lt;h3&gt;The working copy is automatically committed&lt;/h3&gt; 
&lt;p&gt;Jujutsu uses a real commit to represent the working copy. Checking out a commit results a new working-copy commit on top of the target commit. Almost all commands automatically amend the working-copy commit.&lt;/p&gt; 
&lt;p&gt;The working-copy being a commit means that commands never fail because the working copy is dirty (no "error: Your local changes to the following files..."), and there is no need for &lt;code&gt;git stash&lt;/code&gt;. Also, because the working copy is a commit, commands work the same way on the working-copy commit as on any other commit, so you can set the commit message before you're done with the changes.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/jj-vcs/jj/main/demos/working_copy.png" /&gt; 
&lt;h3&gt;The repo is the source of truth&lt;/h3&gt; 
&lt;p&gt;With Jujutsu, the working copy plays a smaller role than with Git. Commands snapshot the working copy before they start, then they update the repo, and then the working copy is updated (if the working-copy commit was modified). Almost all commands (even checkout!) operate on the commits in the repo, leaving the common functionality of snapshotting and updating of the working copy to centralized code. For example, &lt;code&gt;jj restore&lt;/code&gt; (similar to &lt;code&gt;git restore&lt;/code&gt;) can restore from any commit and into any commit, and &lt;code&gt;jj describe&lt;/code&gt; can set the commit message of any commit (defaults to the working-copy commit).&lt;/p&gt; 
&lt;h3&gt;Entire repo is under version control&lt;/h3&gt; 
&lt;p&gt;All operations you perform in the repo are recorded, along with a snapshot of the repo state after the operation. This means that you can easily restore to an earlier repo state, simply undo your operations one-by-one or even &lt;em&gt;revert&lt;/em&gt; a particular operation which does not have to be the most recent one.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/jj-vcs/jj/main/demos/operation_log.png" /&gt; 
&lt;h3&gt;Conflicts can be recorded in commits&lt;/h3&gt; 
&lt;p&gt;If an operation results in &lt;a href="https://jj-vcs.github.io/jj/latest/glossary#conflict"&gt;conflicts&lt;/a&gt;, information about those conflicts will be recorded in the commit(s). The operation will succeed. You can then resolve the conflicts later. One consequence of this design is that there's no need to continue interrupted operations. Instead, you get a single workflow for resolving conflicts, regardless of which command caused them. This design also lets Jujutsu rebase merge commits correctly (unlike both Git and Mercurial).&lt;/p&gt; 
&lt;p&gt;Basic conflict resolution:&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/jj-vcs/jj/main/demos/resolve_conflicts.png" /&gt; 
&lt;p&gt;Juggling conflicts:&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/jj-vcs/jj/main/demos/juggle_conflicts.png" /&gt; 
&lt;h3&gt;Automatic rebase&lt;/h3&gt; 
&lt;p&gt;Whenever you modify a commit, any descendants of the old commit will be rebased onto the new commit. Thanks to the conflict design described above, that can be done even if there are conflicts. Bookmarks pointing to rebased commits will be updated. So will the working copy if it points to a rebased commit.&lt;/p&gt; 
&lt;h3&gt;Comprehensive support for rewriting history&lt;/h3&gt; 
&lt;p&gt;Besides the usual rebase command, there's &lt;code&gt;jj describe&lt;/code&gt; for editing the description (commit message) of an arbitrary commit. There's also &lt;code&gt;jj diffedit&lt;/code&gt;, which lets you edit the changes in a commit without checking it out. To split a commit into two, use &lt;code&gt;jj split&lt;/code&gt;. You can even move part of the changes in a commit to any other commit using &lt;code&gt;jj squash -i --from X --into Y&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;p&gt;The tool is fairly feature-complete, but some important features like support for Git submodules are not yet completed. There are also several performance bugs. It's likely that workflows and setups different from what the core developers use are not well supported, e.g. there is no native support for email-based workflows.&lt;/p&gt; 
&lt;p&gt;Today, all core developers use &lt;code&gt;jj&lt;/code&gt; to work on &lt;code&gt;jj&lt;/code&gt;. I (Martin von Zweigbergk) have almost exclusively used &lt;code&gt;jj&lt;/code&gt; to develop the project itself since early January 2021. I haven't had to re-clone from source (I don't think I've even had to restore from backup).&lt;/p&gt; 
&lt;p&gt;There &lt;em&gt;will&lt;/em&gt; be changes to workflows and backward-incompatible changes to the on-disk formats before version 1.0.0. For any format changes, we'll try to implement transparent upgrades (as we've done with recent changes), or provide upgrade commands or scripts if requested.&lt;/p&gt; 
&lt;h2&gt;Related work&lt;/h2&gt; 
&lt;p&gt;There are several tools trying to solve similar problems as Jujutsu. See &lt;a href="https://jj-vcs.github.io/jj/latest/related-work"&gt;related work&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome outside contributions, and there's plenty of things to do, so don't be shy. Please ask if you want a pointer on something you can help with, and hopefully we can all figure something out.&lt;/p&gt; 
&lt;p&gt;We do have &lt;a href="https://jj-vcs.github.io/jj/prerelease/contributing/"&gt;a few policies and suggestions&lt;/a&gt; for contributors. The broad TL;DR:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bug reports are very welcome!&lt;/li&gt; 
 &lt;li&gt;Every commit that lands in the &lt;code&gt;main&lt;/code&gt; branch is code reviewed.&lt;/li&gt; 
 &lt;li&gt;Please behave yourself, and obey the Community Guidelines.&lt;/li&gt; 
 &lt;li&gt;There &lt;strong&gt;is&lt;/strong&gt; a mandatory CLA you must agree to. Importantly, it &lt;strong&gt;does not&lt;/strong&gt; transfer copyright ownership to Google or anyone else; it simply gives us the right to safely redistribute and use your changes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mandatory Google Disclaimer&lt;/h3&gt; 
&lt;p&gt;I (Martin von Zweigbergk, &lt;a href="mailto:martinvonz@google.com"&gt;martinvonz@google.com&lt;/a&gt;) started Jujutsu as a hobby project in late 2019, and it has evolved into my full-time project at Google, with several other Googlers (now) assisting development in various capacities. That said, &lt;strong&gt;this is not a Google product&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Jujutsu is available as Open Source Software, under the Apache 2.0 license. See &lt;a href="https://raw.githubusercontent.com/jj-vcs/jj/main/LICENSE"&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; for details about copyright and redistribution.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;jj&lt;/code&gt; logo was contributed by J. Jennings and is licensed under a Creative Commons License, see &lt;a href="https://raw.githubusercontent.com/jj-vcs/jj/main/docs/images/LICENSE"&gt;&lt;code&gt;docs/images/LICENSE&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>firecracker-microvm/firecracker</title>
      <link>https://github.com/firecracker-microvm/firecracker</link>
      <description>&lt;p&gt;Secure and fast microVMs for serverless computing.&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="docs/images/fc_logo_full_transparent-bg_white-fg.png" /&gt; 
 &lt;source media="(prefers-color-scheme: light)" srcset="docs/images/fc_logo_full_transparent-bg.png" /&gt; 
 &lt;img alt="Firecracker Logo Title" width="750" src="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/images/fc_logo_full_transparent-bg.png" /&gt; 
&lt;/picture&gt; 
&lt;p&gt;Our mission is to enable secure, multi-tenant, minimal-overhead execution of container and function workloads.&lt;/p&gt; 
&lt;p&gt;Read more about the Firecracker Charter &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/CHARTER.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;What is Firecracker?&lt;/h2&gt; 
&lt;p&gt;Firecracker is an open source virtualization technology that is purpose-built for creating and managing secure, multi-tenant container and function-based services that provide serverless operational models. Firecracker runs workloads in lightweight virtual machines, called microVMs, which combine the security and isolation properties provided by hardware virtualization technology with the speed and flexibility of containers.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;The main component of Firecracker is a virtual machine monitor (VMM) that uses the Linux Kernel Virtual Machine (KVM) to create and run microVMs. Firecracker has a minimalist design. It excludes unnecessary devices and guest-facing functionality to reduce the memory footprint and attack surface area of each microVM. This improves security, decreases the startup time, and increases hardware utilization. Firecracker has also been integrated in container runtimes, for example &lt;a href="https://github.com/kata-containers/kata-containers"&gt;Kata Containers&lt;/a&gt; and &lt;a href="https://github.com/liquidmetal-dev/flintlock"&gt;Flintlock&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Firecracker was developed at Amazon Web Services to accelerate the speed and efficiency of services like &lt;a href="https://aws.amazon.com/lambda/"&gt;AWS Lambda&lt;/a&gt; and &lt;a href="https://aws.amazon.com/fargate/"&gt;AWS Fargate&lt;/a&gt;. Firecracker is open sourced under &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/LICENSE"&gt;Apache version 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To read more about Firecracker, check out &lt;a href="https://firecracker-microvm.github.io"&gt;firecracker-microvm.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;To get started with Firecracker, download the latest &lt;a href="https://github.com/firecracker-microvm/firecracker/releases"&gt;release&lt;/a&gt; binaries or build it from source.&lt;/p&gt; 
&lt;p&gt;You can build Firecracker on any Unix/Linux system that has Docker running (we use a development container) and &lt;code&gt;bash&lt;/code&gt; installed, as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/firecracker-microvm/firecracker
cd firecracker
tools/devtool build
toolchain="$(uname -m)-unknown-linux-musl"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The Firecracker binary will be placed at &lt;code&gt;build/cargo_target/${toolchain}/debug/firecracker&lt;/code&gt;. For more information on building, testing, and running Firecracker, go to the &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/getting-started.md"&gt;quickstart guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The overall security of Firecracker microVMs, including the ability to meet the criteria for safe multi-tenant computing, depends on a well configured Linux host operating system. A configuration that we believe meets this bar is included in &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/prod-host-setup.md"&gt;the production host setup document&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Firecracker is already running production workloads within AWS, but it's still Day 1 on the journey guided by our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/CHARTER.md"&gt;mission&lt;/a&gt;. There's a lot more to build and we welcome all contributions.&lt;/p&gt; 
&lt;p&gt;To contribute to Firecracker, check out the development setup section in the &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/getting-started.md"&gt;getting started guide&lt;/a&gt; and then the Firecracker &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;New Firecracker versions are released via the GitHub repository &lt;a href="https://github.com/firecracker-microvm/firecracker/releases"&gt;releases&lt;/a&gt; page, typically every two or three months. A history of changes is recorded in our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/CHANGELOG.md"&gt;changelog&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Firecracker release policy is detailed &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/RELEASE_POLICY.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Design&lt;/h2&gt; 
&lt;p&gt;Firecracker's overall architecture is described in &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/design.md"&gt;the design document&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features &amp;amp; Capabilities&lt;/h2&gt; 
&lt;p&gt;Firecracker consists of a single micro Virtual Machine Manager process that exposes an API endpoint to the host once started. The API is &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/src/firecracker/swagger/firecracker.yaml"&gt;specified in OpenAPI format&lt;/a&gt;. Read more about it in the &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/api_requests"&gt;API docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;strong&gt;API endpoint&lt;/strong&gt; can be used to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Configure the microvm by: 
  &lt;ul&gt; 
   &lt;li&gt;Setting the number of vCPUs (the default is 1).&lt;/li&gt; 
   &lt;li&gt;Setting the memory size (the default is 128 MiB).&lt;/li&gt; 
   &lt;li&gt;Configuring a &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/cpu_templates/cpu-templates.md"&gt;CPU template&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Add one or more network interfaces to the microVM.&lt;/li&gt; 
 &lt;li&gt;Add one or more read-write or read-only disks to the microVM, each represented by a file-backed block device.&lt;/li&gt; 
 &lt;li&gt;Trigger a block device re-scan while the guest is running. This enables the guest OS to pick up size changes to the block device's backing file.&lt;/li&gt; 
 &lt;li&gt;Change the backing file for a block device, before or after the guest boots.&lt;/li&gt; 
 &lt;li&gt;Configure rate limiters for virtio devices which can limit the bandwidth, operations per second, or both.&lt;/li&gt; 
 &lt;li&gt;Configure the logging and metric system.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[BETA]&lt;/code&gt; Configure the data tree of the guest-facing metadata service. The service is only available to the guest if this resource is configured.&lt;/li&gt; 
 &lt;li&gt;Add a &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/vsock.md"&gt;vsock socket&lt;/a&gt; to the microVM.&lt;/li&gt; 
 &lt;li&gt;Add a &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/entropy.md"&gt;entropy device&lt;/a&gt; to the microVM.&lt;/li&gt; 
 &lt;li&gt;Start the microVM using a given kernel image, root file system, and boot arguments.&lt;/li&gt; 
 &lt;li&gt;[x86_64 only] Stop the microVM.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Built-in Capabilities&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Demand fault paging and CPU oversubscription enabled by default.&lt;/li&gt; 
 &lt;li&gt;Advanced, thread-specific seccomp filters for enhanced security.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/jailer.md"&gt;Jailer&lt;/a&gt; process for starting Firecracker in production scenarios; applies a cgroup/namespace isolation barrier and then drops privileges.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tested platforms&lt;/h2&gt; 
&lt;p&gt;We test all combinations of:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Instance&lt;/th&gt; 
   &lt;th align="left"&gt;Host OS &amp;amp; Kernel&lt;/th&gt; 
   &lt;th align="left"&gt;Guest Rootfs&lt;/th&gt; 
   &lt;th align="left"&gt;Guest Kernel&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m5n.metal (Intel Cascade Lake)&lt;/td&gt; 
   &lt;td align="left"&gt;al2 linux_5.10&lt;/td&gt; 
   &lt;td align="left"&gt;ubuntu 24.04&lt;/td&gt; 
   &lt;td align="left"&gt;linux_5.10&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m6i.metal (Intel Ice Lake)&lt;/td&gt; 
   &lt;td align="left"&gt;al2023 linux_6.1&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;linux_6.1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m7i.metal-24xl (Intel Sapphire Rapids)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m7i.metal-48xl (Intel Sapphire Rapids)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m6a.metal (AMD Milan)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m7a.metal-48xl (AMD Genoa)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m6g.metal (Graviton 2)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m7g.metal (Graviton 3)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m8g.metal-24xl (Graviton 4)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m8g.metal-48xl (Graviton 4)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Known issues and Limitations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;pl031&lt;/code&gt; RTC device on aarch64 does not support interrupts, so guest programs which use an RTC alarm (e.g. &lt;code&gt;hwclock&lt;/code&gt;) will not work.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;p&gt;Firecracker's performance characteristics are listed as part of the &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/SPECIFICATION.md"&gt;specification documentation&lt;/a&gt;. All specifications are a part of our commitment to supporting container and function workloads in serverless operational models, and are therefore enforced via continuous integration testing.&lt;/p&gt; 
&lt;h2&gt;Policy for Security Disclosures&lt;/h2&gt; 
&lt;p&gt;The security of Firecracker is our top priority. If you suspect you have uncovered a vulnerability, contact us privately, as outlined in our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/SECURITY.md"&gt;security policy document&lt;/a&gt;; we will immediately prioritize your disclosure.&lt;/p&gt; 
&lt;h2&gt;FAQ &amp;amp; Contact&lt;/h2&gt; 
&lt;p&gt;Frequently asked questions are collected in our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/FAQ.md"&gt;FAQ doc&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can get in touch with the Firecracker community in the following ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Security-related issues, see our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/SECURITY.md"&gt;security policy document&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Chat with us on our &lt;a href="https://join.slack.com/t/firecracker-microvm/shared_invite/zt-2tc0mfxpc-tU~HYAYSzLDl5XGGJU3YIg"&gt;Slack workspace&lt;/a&gt; &lt;em&gt;Note: most of the maintainers are on a European time zone.&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Open a GitHub issue in this repository.&lt;/li&gt; 
 &lt;li&gt;Email the maintainers at &lt;a href="mailto:firecracker-maintainers@amazon.com"&gt;firecracker-maintainers@amazon.com&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When communicating within the Firecracker community, please mind our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/CODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>zama-ai/fhevm</title>
      <link>https://github.com/zama-ai/fhevm</link>
      <description>&lt;p&gt;FHEVM, a full-stack framework for integrating Fully Homomorphic Encryption (FHE) with blockchain applications&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="docs/.gitbook/assets/fhevm-header-dark.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="docs/.gitbook/assets/fhevm-header-light.png" /&gt; 
  &lt;img width="500" alt="fhevm" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/zama-ai/fhevm/main/fhevm-whitepaper.pdf"&gt; 📃 Read white paper&lt;/a&gt; |&lt;a href="https://docs.zama.ai/protocol"&gt; 📒 Documentation&lt;/a&gt; | &lt;a href="https://zama.ai/community"&gt; 💛 Community support&lt;/a&gt; | &lt;a href="https://github.com/zama-ai/awesome-zama"&gt; 📚 FHE resources by Zama&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/zama-ai/fhevm/releases"&gt; &lt;img src="https://img.shields.io/github/v/release/zama-ai/fhevm?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zama-ai/fhevm/raw/main/LICENSE"&gt; 
  &lt;!-- markdown-link-check-disable-next-line --&gt; &lt;img src="https://img.shields.io/badge/License-BSD--3--Clause--Clear-%23ffb243?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zama-ai/bounty-program"&gt; 
  &lt;!-- markdown-link-check-disable-next-line --&gt; &lt;img src="https://img.shields.io/badge/Contribute-Zama%20Bounty%20Program-%23ffd208?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://slsa.dev"&gt;&lt;img alt="SLSA 3" src="https://slsa.dev/images/gh-badge-level3.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;h3&gt;What is FHEVM?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;FHEVM&lt;/strong&gt; is the core framework of the &lt;em&gt;Zama Confidential Blockchain Protocol&lt;/em&gt;. It enables confidential smart contracts on EVM-compatible blockchains by leveraging Fully Homomorphic Encryption (FHE), allowing encrypted data to be processed directly onchain.&lt;/p&gt; 
&lt;p&gt;FHEVM ensures both confidentiality and composability, with the following guarantees:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;End-to-end encryption of transactions and state:&lt;/strong&gt; Data included in transactions is encrypted and never visible to anyone.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Composability and data availability on-chain:&lt;/strong&gt; States are updated while remaining encrypted at all times.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No impact on existing dApps and state:&lt;/strong&gt; Encrypted state co-exists alongside public one, and doesn't impact existing dApps. &lt;br /&gt;&lt;br /&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Table of contents&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zama-ai/fhevm/main/#about"&gt;About&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zama-ai/fhevm/main/#what-is-fhevm"&gt;What is FHEVM?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zama-ai/fhevm/main/#project-structure"&gt;Project structure&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zama-ai/fhevm/main/#main-features"&gt;Main features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zama-ai/fhevm/main/#use-cases"&gt;Use cases&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zama-ai/fhevm/main/#resources"&gt;Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zama-ai/fhevm/main/#working-with-fhevm"&gt;Working with FHEVM&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zama-ai/fhevm/main/#citations"&gt;Citations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zama-ai/fhevm/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zama-ai/fhevm/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zama-ai/fhevm/main/#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zama-ai/fhevm/main/#support"&gt;Support&lt;/a&gt; &lt;br /&gt;&lt;br /&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Project structure&lt;/h3&gt; 
&lt;p&gt;The directories of this repository are organized in the following way:&lt;/p&gt; 
&lt;h6&gt;FHEVM Contracts&lt;/h6&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;gateway-contracts/&lt;/code&gt;&lt;/strong&gt;: Smart contracts managing the gateway between on-chain and off-chain components.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;host-contracts/&lt;/code&gt;&lt;/strong&gt;: Smart Contracts deployed on the host chain for orchestrating FHE workflows.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h6&gt;FHEVM Compute Engines&lt;/h6&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;coprocessor/&lt;/code&gt;&lt;/strong&gt;: Rust-based coprocessor implementation for FHE operations.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;kms-connector/&lt;/code&gt;&lt;/strong&gt;: Interface for integrating with Key Management Services (KMS) to handle encryption keys securely.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h6&gt;FHEVM Utilities&lt;/h6&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;charts/&lt;/code&gt;&lt;/strong&gt;: Helm charts and deployment configurations for the stack.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;golden-container-images/&lt;/code&gt;&lt;/strong&gt;: Docker golden images for Node.js and Rust environments used as base images by the stack.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;test-suite/&lt;/code&gt;&lt;/strong&gt;: Integration with docker-compose and tests covering end-to-end FHEVM stack behavior.&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Main features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy by design:&lt;/strong&gt; Building decentralized apps with full privacy and confidentiality on Ethereum, leveraging FHE.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Solidity integration:&lt;/strong&gt; Write FHEVM contracts like any standard Solidity contract using Solidity. Compatible with existing toolchains — such as Hardhat and Foundry (&lt;em&gt;coming soon&lt;/em&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Programmable privacy:&lt;/strong&gt; Define exactly what data is encrypted and write the access control logic directly in your smart contracts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;High precision encrypted integers :&lt;/strong&gt; Up to 256 bits of precision for integers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Full range of operators:&lt;/strong&gt; All typical operators are available: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, ternary-if, boolean operations…. Consecutive FHE operations are not limited.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security:&lt;/strong&gt; The underlying FHE crypto-scheme of FHEVM is quantum-resistant. Decryption is managed via a key management system (KMS) using multi-party computation (MPC), ensuring security even if some parties are compromised or misbehaving.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Symbolic execution of FHE computations:&lt;/strong&gt; All FHE operations are executed symbolically on the host chain, significantly reducing execution time. The actual computations on encrypted data are offloaded asynchronously to our coprocessor, allowing for faster, efficient, and scalable processing.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Learn more about FHEVM features in the &lt;a href="https://docs.zama.ai/protocol"&gt;documentation&lt;/a&gt; and in our &lt;a href="https://github.com/zama-ai/fhevm/raw/main/fhevm-whitepaper.pdf"&gt;whitepaper&lt;/a&gt;.&lt;/em&gt; &lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h3&gt;Use cases&lt;/h3&gt; 
&lt;p&gt;FHEVM is built for developers to write confidential smart contracts without the need to learn cryptography. Leveraging FHEVM, you can unlock a myriad of new use cases such as DeFi, gaming, and more. For instance:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Confidential transfers&lt;/strong&gt;: Keep balances and amounts private, without using mixers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tokenization&lt;/strong&gt;: Swap tokens and RWAs on-chain without others seeing the amounts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Blind auctions&lt;/strong&gt;: Bid on items without revealing the amount or the winner.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;On-chain games&lt;/strong&gt;: Keep moves, selections, cards, or items hidden until ready to reveal.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Confidential voting&lt;/strong&gt;: Prevents bribery and blackmailing by keeping votes private.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Encrypted DIDs&lt;/strong&gt;: Store identities on-chain and generate attestations without ZK.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Learn more use cases in the &lt;a href="https://docs.zama.ai/protocol/examples"&gt;list of examples&lt;/a&gt;.&lt;/em&gt; &lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.zama.ai/protocol"&gt;Documentation&lt;/a&gt; — Official documentation of FHEVM.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zama-ai/fhevm/main/fhevm-whitepaper.pdf"&gt;Whitepaper&lt;/a&gt; — Technical overview of FHEVM's cryptographic design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.zama.ai/protocol/examples"&gt;Examples&lt;/a&gt; — Examples of building confidential smart contracts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zama-ai/awesome-zama?tab=readme-ov-file#fhevm"&gt;Awesome Zama – FHEVM&lt;/a&gt; — Curated articles, talks, and ecosystem projects.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="right"&gt; &lt;a href="https://raw.githubusercontent.com/zama-ai/fhevm/main/#about"&gt; ↑ Back to top &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Working with FHEVM&lt;/h2&gt; 
&lt;h3&gt;Citations&lt;/h3&gt; 
&lt;p&gt;To cite FHEVM or the whitepaper in academic papers, please use the following entries:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;@Misc{FHEVM,
title={{FHEVM: A full-stack framework for integrating Fully Homomorphic Encryption (FHE) with blockchain applications},
author={Zama},
year={2025},
note={\url{https://github.com/zama-ai/fhevm}},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;There are two ways to contribute to FHEVM:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zama-ai/fhevm/issues/new/choose"&gt;Open issues&lt;/a&gt; to report bugs and typos, or to suggest new ideas&lt;/li&gt; 
 &lt;li&gt;Request to become an official contributor by emailing &lt;a href="mailto:hello@zama.ai"&gt;hello@zama.ai&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Becoming an approved contributor involves signing our Contributor License Agreement (CLA). Only approved contributors can send pull requests, so please make sure to get in touch before you do! &lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;This software is distributed under the &lt;strong&gt;BSD-3-Clause-Clear&lt;/strong&gt; license. Read &lt;a href="https://raw.githubusercontent.com/zama-ai/fhevm/main/LICENSE"&gt;this&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Is Zama’s technology free to use?&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Zama’s libraries are free to use under the BSD 3-Clause Clear license only for development, research, prototyping, and experimentation purposes. However, for any commercial use of Zama's open source code, companies must purchase Zama’s commercial patent license.&lt;/p&gt; 
 &lt;p&gt;Everything we do is open source, and we are very transparent on what it means for our users, you can read more about how we monetize our open source products at Zama in &lt;a href="https://www.zama.ai/post/open-source"&gt;this blog post&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;What do I need to do if I want to use Zama’s technology for commercial purposes?&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;To commercially use Zama’s technology you need to be granted Zama’s patent license. Please contact us at &lt;a href="mailto:hello@zama.ai"&gt;hello@zama.ai&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Do you file IP on your technology?&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Yes, all Zama’s technologies are patented.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Can you customize a solution for my specific use case?&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;We are open to collaborating and advancing the FHE space with our partners. If you have specific needs, please email us at &lt;a href="mailto:hello@zama.ai"&gt;hello@zama.ai&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;a target="_blank" href="https://community.zama.ai"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="docs/.gitbook/assets/support-banner-dark.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="docs/.gitbook/assets/support-banner-light.png" /&gt; 
  &lt;img alt="Support" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;p&gt;🌟 If you find this project helpful or interesting, please consider giving it a star on GitHub! Your support helps to grow the community and motivates further development.&lt;/p&gt; 
&lt;p align="right"&gt; &lt;a href="https://raw.githubusercontent.com/zama-ai/fhevm/main/#about"&gt; ↑ Back to top &lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jdx/mise</title>
      <link>https://github.com/jdx/mise</link>
      <description>&lt;p&gt;dev tools, env vars, task runner&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1 align="center"&gt; &lt;a href="https://mise.jdx.dev"&gt; &lt;img src="https://raw.githubusercontent.com/jdx/mise/main/docs/public/logo.svg?sanitize=true" alt="mise" width="256" height="256" /&gt; &lt;br /&gt; mise-en-place &lt;/a&gt; &lt;/h1&gt; 
 &lt;p&gt; &lt;a href="https://crates.io/crates/mise"&gt;&lt;img alt="Crates.io" src="https://img.shields.io/crates/v/mise?style=for-the-badge&amp;amp;color=00d9ff" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jdx/mise/raw/main/LICENSE"&gt;&lt;img alt="GitHub" src="https://img.shields.io/github/license/jdx/mise?style=for-the-badge&amp;amp;color=52e892" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jdx/mise/actions/workflows/test.yml"&gt;&lt;img alt="GitHub Workflow Status" src="https://img.shields.io/github/actions/workflow/status/jdx/mise/test.yml?style=for-the-badge&amp;amp;color=ff9100" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/mABnUDvP57"&gt;&lt;img alt="Discord" src="https://img.shields.io/discord/1066429325269794907?style=for-the-badge&amp;amp;color=00d9ff" /&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt;&lt;b&gt;The front-end to your dev env&lt;/b&gt;&lt;/p&gt; 
 &lt;p align="center"&gt; &lt;a href="https://mise.jdx.dev/getting-started.html"&gt;Getting Started&lt;/a&gt; • &lt;a href="https://mise.jdx.dev"&gt;Documentation&lt;/a&gt; • &lt;a href="https://mise.jdx.dev/dev-tools/"&gt;Dev Tools&lt;/a&gt; • &lt;a href="https://mise.jdx.dev/environments/"&gt;Environments&lt;/a&gt; • &lt;a href="https://mise.jdx.dev/tasks/"&gt;Tasks&lt;/a&gt; &lt;/p&gt; 
 &lt;hr /&gt; 
&lt;/div&gt; 
&lt;h2&gt;What is it?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Like &lt;a href="https://asdf-vm.com"&gt;asdf&lt;/a&gt; (or &lt;a href="https://github.com/nvm-sh/nvm"&gt;nvm&lt;/a&gt; or &lt;a href="https://github.com/pyenv/pyenv"&gt;pyenv&lt;/a&gt; but for any language) it manages &lt;a href="https://mise.jdx.dev/dev-tools/"&gt;dev tools&lt;/a&gt; like node, python, cmake, terraform, and &lt;a href="https://mise.jdx.dev/registry.html"&gt;hundreds more&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Like &lt;a href="https://github.com/direnv/direnv"&gt;direnv&lt;/a&gt; it manages &lt;a href="https://mise.jdx.dev/environments/"&gt;environment variables&lt;/a&gt; for different project directories.&lt;/li&gt; 
 &lt;li&gt;Like &lt;a href="https://www.gnu.org/software/make/manual/make.html"&gt;make&lt;/a&gt; it manages &lt;a href="https://mise.jdx.dev/tasks/"&gt;tasks&lt;/a&gt; used to build and test projects.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;The following demo shows how to install and use &lt;code&gt;mise&lt;/code&gt; to manage multiple versions of &lt;code&gt;node&lt;/code&gt; on the same system. Note that calling &lt;code&gt;which node&lt;/code&gt; gives us a real path to node, not a shim.&lt;/p&gt; 
&lt;p&gt;It also shows that you can use &lt;code&gt;mise&lt;/code&gt; to install and many other tools such as &lt;code&gt;jq&lt;/code&gt;, &lt;code&gt;terraform&lt;/code&gt;, or &lt;code&gt;go&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://mise.jdx.dev/demo.html"&gt;&lt;img src="https://raw.githubusercontent.com/jdx/mise/main/docs/tapes/demo.gif" alt="demo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://mise.jdx.dev/demo.html"&gt;demo transcript&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;h3&gt;Install mise&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://mise.jdx.dev/getting-started.html"&gt;Getting started&lt;/a&gt; for more options.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh-session"&gt;$ curl https://mise.run | sh
$ ~/.local/bin/mise --version
2025.9.15 macos-arm64 (a1b2d3e 2025-09-21)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Hook mise into your shell (pick the right one for your shell):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh-session"&gt;# note this assumes mise is located at ~/.local/bin/mise
# which is what https://mise.run does by default
echo 'eval "$(~/.local/bin/mise activate bash)"' &amp;gt;&amp;gt; ~/.bashrc
echo 'eval "$(~/.local/bin/mise activate zsh)"' &amp;gt;&amp;gt; ~/.zshrc
echo '~/.local/bin/mise activate fish | source' &amp;gt;&amp;gt; ~/.config/fish/config.fish
echo '~/.local/bin/mise activate pwsh | Out-String | Invoke-Expression' &amp;gt;&amp;gt; ~/.config/powershell/Microsoft.PowerShell_profile.ps1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Execute commands with specific tools&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh-session"&gt;$ mise exec node@22 -- node -v
mise node@22.x.x ✓ installed
v22.x.x
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install tools&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh-session"&gt;$ mise use --global node@22 go@1
$ node -v
v22.x.x
$ go version
go version go1.x.x macos/arm64
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://mise.jdx.dev/dev-tools/"&gt;dev tools&lt;/a&gt; for more examples.&lt;/p&gt; 
&lt;h3&gt;Manage environment variables&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# mise.toml
[env]
SOME_VAR = "foo"
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-sh-session"&gt;$ mise set SOME_VAR=bar
$ echo $SOME_VAR
bar
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that &lt;code&gt;mise&lt;/code&gt; can also &lt;a href="https://mise.jdx.dev/environments/#env-directives"&gt;load &lt;code&gt;.env&lt;/code&gt; files&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Run tasks&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# mise.toml
[tasks.build]
description = "build the project"
run = "echo building..."
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-sh-session"&gt;$ mise run build
building...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://mise.jdx.dev/tasks/"&gt;tasks&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Example mise project&lt;/h3&gt; 
&lt;p&gt;Here is a combined example to give you an idea of how you can use mise to manage your a project's tools, environment, and tasks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# mise.toml
[tools]
terraform = "1"
aws-cli = "2"

[env]
TF_WORKSPACE = "development"
AWS_REGION = "us-west-2"
AWS_PROFILE = "dev"

[tasks.plan]
description = "Run terraform plan with configured workspace"
run = """
terraform init
terraform workspace select $TF_WORKSPACE
terraform plan
"""

[tasks.validate]
description = "Validate AWS credentials and terraform config"
run = """
aws sts get-caller-identity
terraform validate
"""

[tasks.deploy]
description = "Deploy infrastructure after validation"
depends = ["validate", "plan"]
run = "terraform apply -auto-approve"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh-session"&gt;mise install # install tools specified in mise.toml
mise run deploy
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Find more examples in the &lt;a href="https://mise.jdx.dev/mise-cookbook/"&gt;mise cookbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Full Documentation&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://mise.jdx.dev"&gt;mise.jdx.dev&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Special Thanks&lt;/h2&gt; 
&lt;p&gt;We're grateful for Cloudflare's support through &lt;a href="https://www.cloudflare.com/lp/project-alexandria/"&gt;Project Alexandria&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/jdx/mise/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=jdx/mise" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HelixDB/helix-db</title>
      <link>https://github.com/HelixDB/helix-db</link>
      <description>&lt;p&gt;HelixDB is a database built from scratch to be the backend for any AI application.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;img src="https://raw.githubusercontent.com/HelixDB/helix-db/main/assets/full_logo.png" alt="HelixDB Logo" /&gt; 
 &lt;/picture&gt; 
 &lt;p&gt;&lt;b&gt;HelixDB&lt;/b&gt;: a database built from scratch to be the storage backend for any AI application.&lt;/p&gt; 
 &lt;h3&gt; &lt;a href="https://helix-db.com"&gt;Homepage&lt;/a&gt; | &lt;a href="https://docs.helix-db.com"&gt;Docs&lt;/a&gt; | &lt;a href="https://discord.gg/2stgMPr5BD"&gt;Discord&lt;/a&gt; | &lt;a href="https://x.com/hlx_db"&gt;X&lt;/a&gt; &lt;/h3&gt; 
 &lt;p&gt;&lt;a href="https://docs.helix-db.com"&gt;&lt;img src="https://img.shields.io/badge/docs-latest-blue" alt="Docs" /&gt;&lt;/a&gt; &lt;a href="https://docs.helix-db.com/change-log/helixdb"&gt;&lt;img src="https://img.shields.io/badge/changelog-latest-blue" alt="Change Log" /&gt;&lt;/a&gt; &lt;a href="https://github.com/HelixDB/helix-db/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/HelixDB/helix-db" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/2stgMPr5BD"&gt;&lt;img src="https://img.shields.io/discord/1354148209005559819" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://github.com/HelixDB/helix-db"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://ghloc.vercel.app/api/HelixDB/helix-db/badge?filter=.rs$,.sh$&amp;amp;style=flat&amp;amp;logoColor=white&amp;amp;label=Lines%20of%20Code" alt="LOC" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://www.ycombinator.com/launches/Naz-helixdb-the-database-for-rag-ai" target="_blank"&gt;&lt;img src="https://www.ycombinator.com/launches/Naz-helixdb-the-database-for-rag-ai/upvote_embed.svg?sanitize=true" alt="Launch YC: HelixDB - The Database for Intelligence" style="margin-left: 12px;" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;HelixDB was built on the thesis that current database infrastructure is built for how humans think about data, not AI. So we've built a database that makes it easy to build all the components needed for an AI application in a single platform.&lt;/p&gt; 
&lt;p&gt;You no longer need a separate application DB, vector DB, graph DB, or application layers to manage the multiple storage locations. All you need to build any application that uses AI, agents or RAG, is a single HelixDB cluster and HelixQL; we take care of the rest.&lt;/p&gt; 
&lt;p&gt;HelixDB primarily operates with a graph + vector data model, but it can also support support KV, documents, and relational data.&lt;/p&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Built-in MCP tools&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Helix has built-in MCP support to allow your agents to discover data and walk the graph rather than having to generate human readable queries, letting agents actually think.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Built-in Embeddings&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Don't worry about needing to embed your data before sending it to Helix, just use the &lt;code&gt;Embed&lt;/code&gt; function to vectorize text.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Tooling for Knowledge Graphs&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;It is super easy to ingest your unstructured data into a knowledge graph, with our integrations for Zep-AI's Graphiti, and our own implementation of OpenAI's KG tool.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Tooling for RAG&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;HelixDB has a built-in vector search, keyword search, and hybrid search that can be used to power your RAG applications.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Secure by Default&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;HelixDB is private by default. You can only access your data through your compiled HelixQL queries.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Logical Isolation&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Each Helix cluster is logically isolated in its own VPC meaning only you can ever see your data.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Ultra-Low Latency&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Helix is built in Rust and uses LMDB as its storage engine to provide extremely low latencies.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h4&gt;Helix CLI&lt;/h4&gt; 
&lt;p&gt;The Helix CLI tool can be used to check, compile and deploy Helix locally.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install CLI&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSL "https://install.helix-db.com" | bash
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install Helix&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;helix install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Setup&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;helix init --path &amp;lt;path-to-project&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write queries&lt;/p&gt; &lt;p&gt;Open your newly created &lt;code&gt;.hx&lt;/code&gt; files and start writing your schema and queries. Head over to &lt;a href="https://docs.helix-db.com/introduction/cookbook/basic"&gt;our docs&lt;/a&gt; for more information about writing queries&lt;/p&gt; &lt;pre&gt;&lt;code class="language-js"&gt;QUERY addUser(name: String, age: I64) =&amp;gt;
   user &amp;lt;- AddN&amp;lt;User&amp;gt;({name: name, age: age})
   RETURN user

QUERY getUser(user_name: String) =&amp;gt;
   user &amp;lt;- N&amp;lt;User&amp;gt;::WHERE(_::{name}::EQ(user_name))
   RETURN user
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Check your queries compile before building them into API endpoints (optional)&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# in ./&amp;lt;path-to-project&amp;gt;
helix check
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Deploy your queries&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# in ./&amp;lt;path-to-project&amp;gt;
helix deploy
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start calling them using our &lt;a href="https://github.com/HelixDB/helix-ts"&gt;TypeScript SDK&lt;/a&gt; or &lt;a href="https://github.com/HelixDB/helix-py"&gt;Python SDK&lt;/a&gt;. For example:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-typescript"&gt;import HelixDB from "helix-ts";

// Create a new HelixDB client
// The default port is 6969
const client = new HelixDB();

// Query the database
await client.query("addUser", {
  name: "John",
  age: 20,
});

// Get the created user
const user = await client.query("getUser", {
  user_name: "John",
});

console.log(user);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Other commands:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;helix instances&lt;/code&gt; to see all your local instances.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;helix stop &amp;lt;instance-id&amp;gt;&lt;/code&gt; to stop your local instance with specified id.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;helix stop --all&lt;/code&gt; to stop all your local instances.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;helix dockerdev run&lt;/code&gt; to start a Docker development instance.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;helix dockerdev status&lt;/code&gt; to check the Docker development instance status.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;helix dockerdev logs&lt;/code&gt; to view Docker container logs.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;helix dockerdev stop&lt;/code&gt; to stop the Docker development instance.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;helix dockerdev delete&lt;/code&gt; to remove the Docker development instance and data.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;Our current focus areas include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Organizational auth to manage teams, and Helix clusters.&lt;/li&gt; 
 &lt;li&gt;Improvements to our server code to massively improve network IO performance and scalability.&lt;/li&gt; 
 &lt;li&gt;More 3rd party integrations to make it easier to build with Helix.&lt;/li&gt; 
 &lt;li&gt;Guides and educational content to help you get started with Helix.&lt;/li&gt; 
 &lt;li&gt;Binary quantisation for even better performance.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Long term projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In-house SOTA knowledge graph ingestion tool for any data source.&lt;/li&gt; 
 &lt;li&gt;In-house graph-vector storage engine (to replace LMDB)&lt;/li&gt; 
 &lt;li&gt;In-house network protocol &amp;amp; serdes libraries (similar to protobufs/gRPC)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;HelixDB is licensed under the The AGPL (Affero General Public License).&lt;/p&gt; 
&lt;h2&gt;Commercial Support&lt;/h2&gt; 
&lt;p&gt;HelixDB is available as a managed service for selected users, if you're interested in using Helix's managed service or want enterprise support, &lt;a href="mailto:founders@helix-db.com"&gt;contact&lt;/a&gt; us for more information and deployment options.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rustdesk/rustdesk</title>
      <link>https://github.com/rustdesk/rustdesk</link>
      <description>&lt;p&gt;An open-source remote desktop application designed for self-hosting, as an alternative to TeamViewer.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/rustdesk/rustdesk/master/res/logo-header.svg?sanitize=true" alt="RustDesk - Your remote desktop" /&gt;&lt;br /&gt; &lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/#raw-steps-to-build"&gt;Build&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/#how-to-build-with-docker"&gt;Docker&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/#file-structure"&gt;Structure&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/#snapshot"&gt;Snapshot&lt;/a&gt;&lt;br /&gt; [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-UA.md"&gt;Українська&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-CS.md"&gt;česky&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-ZH.md"&gt;中文&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-HU.md"&gt;Magyar&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-ES.md"&gt;Español&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-FA.md"&gt;فارسی&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-FR.md"&gt;Français&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-DE.md"&gt;Deutsch&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-PL.md"&gt;Polski&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-ID.md"&gt;Indonesian&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-FI.md"&gt;Suomi&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-ML.md"&gt;മലയാളം&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-JP.md"&gt;日本語&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-NL.md"&gt;Nederlands&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-IT.md"&gt;Italiano&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-RU.md"&gt;Русский&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-PTBR.md"&gt;Português (Brasil)&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-EO.md"&gt;Esperanto&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-KR.md"&gt;한국어&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-AR.md"&gt;العربي&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-VN.md"&gt;Tiếng Việt&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-DA.md"&gt;Dansk&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-GR.md"&gt;Ελληνικά&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-TR.md"&gt;Türkçe&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-NO.md"&gt;Norsk&lt;/a&gt;]&lt;br /&gt; &lt;b&gt;We need your help to translate this README, &lt;a href="https://github.com/rustdesk/rustdesk/tree/master/src/lang"&gt;RustDesk UI&lt;/a&gt; and &lt;a href="https://github.com/rustdesk/doc.rustdesk.com"&gt;RustDesk Doc&lt;/a&gt; to your native language&lt;/b&gt; &lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Caution] &lt;strong&gt;Misuse Disclaimer:&lt;/strong&gt; &lt;br /&gt; The developers of RustDesk do not condone or support any unethical or illegal use of this software. Misuse, such as unauthorized access, control or invasion of privacy, is strictly against our guidelines. The authors are not responsible for any misuse of the application.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Chat with us: &lt;a href="https://discord.gg/nDceKgxnkV"&gt;Discord&lt;/a&gt; | &lt;a href="https://twitter.com/rustdesk"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.reddit.com/r/rustdesk"&gt;Reddit&lt;/a&gt; | &lt;a href="https://www.youtube.com/@rustdesk"&gt;YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://rustdesk.com/pricing.html"&gt;&lt;img src="https://img.shields.io/badge/RustDesk%20Server%20Pro-Advanced%20Features-blue" alt="RustDesk Server Pro" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Yet another remote desktop solution, written in Rust. Works out of the box with no configuration required. You have full control of your data, with no concerns about security. You can use our rendezvous/relay server, &lt;a href="https://rustdesk.com/server"&gt;set up your own&lt;/a&gt;, or &lt;a href="https://github.com/rustdesk/rustdesk-server-demo"&gt;write your own rendezvous/relay server&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/71636191/171661982-430285f0-2e12-4b1d-9957-4a58e375304d.png" alt="image" /&gt;&lt;/p&gt; 
&lt;p&gt;RustDesk welcomes contribution from everyone. See &lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for help getting started.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/rustdesk/rustdesk/wiki/FAQ"&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/rustdesk/rustdesk/releases"&gt;&lt;strong&gt;BINARY DOWNLOAD&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/rustdesk/rustdesk/releases/tag/nightly"&gt;&lt;strong&gt;NIGHTLY BUILD&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://f-droid.org/en/packages/com.carriez.flutter_hbb"&gt;&lt;img src="https://f-droid.org/badge/get-it-on.png" alt="Get it on F-Droid" height="80" /&gt;&lt;/a&gt; &lt;a href="https://flathub.org/apps/com.rustdesk.RustDesk"&gt;&lt;img src="https://flathub.org/api/badge?svg&amp;amp;locale=en" alt="Get it on Flathub" height="80" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Dependencies&lt;/h2&gt; 
&lt;p&gt;Desktop versions use Flutter or Sciter (deprecated) for GUI, this tutorial is for Sciter only, since it is easier and more friendly to start. Check out our &lt;a href="https://github.com/rustdesk/rustdesk/raw/master/.github/workflows/flutter-build.yml"&gt;CI&lt;/a&gt; for building Flutter version.&lt;/p&gt; 
&lt;p&gt;Please download Sciter dynamic library yourself.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.win/x64/sciter.dll"&gt;Windows&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.lnx/x64/libsciter-gtk.so"&gt;Linux&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.osx/libsciter.dylib"&gt;macOS&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Raw Steps to build&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Prepare your Rust development env and C++ build env&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;a href="https://github.com/microsoft/vcpkg"&gt;vcpkg&lt;/a&gt;, and set &lt;code&gt;VCPKG_ROOT&lt;/code&gt; env variable correctly&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Windows: vcpkg install libvpx:x64-windows-static libyuv:x64-windows-static opus:x64-windows-static aom:x64-windows-static&lt;/li&gt; 
   &lt;li&gt;Linux/macOS: vcpkg install libvpx libyuv opus aom&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;run &lt;code&gt;cargo run&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href="https://rustdesk.com/docs/en/dev/build/"&gt;Build&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;How to Build on Linux&lt;/h2&gt; 
&lt;h3&gt;Ubuntu 18 (Debian 10)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo apt install -y zip g++ gcc git curl wget nasm yasm libgtk-3-dev clang libxcb-randr0-dev libxdo-dev \
        libxfixes-dev libxcb-shape0-dev libxcb-xfixes0-dev libasound2-dev libpulse-dev cmake make \
        libclang-dev ninja-build libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libpam0g-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;openSUSE Tumbleweed&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo zypper install gcc-c++ git curl wget nasm yasm gcc gtk3-devel clang libxcb-devel libXfixes-devel cmake alsa-lib-devel gstreamer-devel gstreamer-plugins-base-devel xdotool-devel pam-devel
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fedora 28 (CentOS 8)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo yum -y install gcc-c++ git curl wget nasm yasm gcc gtk3-devel clang libxcb-devel libxdo-devel libXfixes-devel pulseaudio-libs-devel cmake alsa-lib-devel gstreamer1-devel gstreamer1-plugins-base-devel pam-devel
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Arch (Manjaro)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo pacman -Syu --needed unzip git cmake gcc curl wget yasm nasm zip make pkg-config clang gtk3 xdotool libxcb libxfixes alsa-lib pipewire
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install vcpkg&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/microsoft/vcpkg
cd vcpkg
git checkout 2023.04.15
cd ..
vcpkg/bootstrap-vcpkg.sh
export VCPKG_ROOT=$HOME/vcpkg
vcpkg/vcpkg install libvpx libyuv opus aom
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fix libvpx (For Fedora)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cd vcpkg/buildtrees/libvpx/src
cd *
./configure
sed -i 's/CFLAGS+=-I/CFLAGS+=-fPIC -I/g' Makefile
sed -i 's/CXXFLAGS+=-I/CXXFLAGS+=-fPIC -I/g' Makefile
make
cp libvpx.a $HOME/vcpkg/installed/x64-linux/lib/
cd
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
source $HOME/.cargo/env
git clone --recurse-submodules https://github.com/rustdesk/rustdesk
cd rustdesk
mkdir -p target/debug
wget https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.lnx/x64/libsciter-gtk.so
mv libsciter-gtk.so target/debug
VCPKG_ROOT=$HOME/vcpkg cargo run
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to build with Docker&lt;/h2&gt; 
&lt;p&gt;Begin by cloning the repository and building the Docker container:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/rustdesk/rustdesk
cd rustdesk
git submodule update --init --recursive
docker build -t "rustdesk-builder" .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, each time you need to build the application, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker run --rm -it -v $PWD:/home/user/rustdesk -v rustdesk-git-cache:/home/user/.cargo/git -v rustdesk-registry-cache:/home/user/.cargo/registry -e PUID="$(id -u)" -e PGID="$(id -g)" rustdesk-builder
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the first build may take longer before dependencies are cached, subsequent builds will be faster. Additionally, if you need to specify different arguments to the build command, you may do so at the end of the command in the &lt;code&gt;&amp;lt;OPTIONAL-ARGS&amp;gt;&lt;/code&gt; position. For instance, if you wanted to build an optimized release version, you would run the command above followed by &lt;code&gt;--release&lt;/code&gt;. The resulting executable will be available in the target folder on your system, and can be run with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;target/debug/rustdesk
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, if you're running a release executable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;target/release/rustdesk
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please ensure that you run these commands from the root of the RustDesk repository, or the application may not find the required resources. Also note that other cargo subcommands such as &lt;code&gt;install&lt;/code&gt; or &lt;code&gt;run&lt;/code&gt; are not currently supported via this method as they would install or run the program inside the container instead of the host.&lt;/p&gt; 
&lt;h2&gt;File Structure&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/libs/hbb_common"&gt;libs/hbb_common&lt;/a&gt;&lt;/strong&gt;: video codec, config, tcp/udp wrapper, protobuf, fs functions for file transfer, and some other utility functions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/libs/scrap"&gt;libs/scrap&lt;/a&gt;&lt;/strong&gt;: screen capture&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/libs/enigo"&gt;libs/enigo&lt;/a&gt;&lt;/strong&gt;: platform specific keyboard/mouse control&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/libs/clipboard"&gt;libs/clipboard&lt;/a&gt;&lt;/strong&gt;: file copy and paste implementation for Windows, Linux, macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/src/ui"&gt;src/ui&lt;/a&gt;&lt;/strong&gt;: obsolete Sciter UI (deprecated)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/src/server"&gt;src/server&lt;/a&gt;&lt;/strong&gt;: audio/clipboard/input/video services, and network connections&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/src/client.rs"&gt;src/client.rs&lt;/a&gt;&lt;/strong&gt;: start a peer connection&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/src/rendezvous_mediator.rs"&gt;src/rendezvous_mediator.rs&lt;/a&gt;&lt;/strong&gt;: Communicate with &lt;a href="https://github.com/rustdesk/rustdesk-server"&gt;rustdesk-server&lt;/a&gt;, wait for remote direct (TCP hole punching) or relayed connection&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/src/platform"&gt;src/platform&lt;/a&gt;&lt;/strong&gt;: platform specific code&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/flutter"&gt;flutter&lt;/a&gt;&lt;/strong&gt;: Flutter code for desktop and mobile&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/flutter/web/v1/js"&gt;flutter/web/js&lt;/a&gt;&lt;/strong&gt;: JavaScript for Flutter web client&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://github.com/rustdesk/rustdesk/assets/28412477/db82d4e7-c4bc-4823-8e6f-6af7eadf7651" alt="Connection Manager" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/rustdesk/rustdesk/assets/28412477/9baa91e9-3362-4d06-aa1a-7518edcbd7ea" alt="Connected to a Windows PC" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/rustdesk/rustdesk/assets/28412477/39511ad3-aa9a-4f8c-8947-1cce286a46ad" alt="File Transfer" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/rustdesk/rustdesk/assets/28412477/78e8708f-e87e-4570-8373-1360033ea6c5" alt="TCP Tunneling" /&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>