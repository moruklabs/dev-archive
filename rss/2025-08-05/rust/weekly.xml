<rss version="2.0">
  <channel>
    <title>GitHub Rust Weekly Trending</title>
    <description>Weekly Trending of Rust in GitHub</description>
    <pubDate>Mon, 04 Aug 2025 01:46:42 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>alacritty/alacritty</title>
      <link>https://github.com/alacritty/alacritty</link>
      <description>&lt;p&gt;A cross-platform, OpenGL terminal emulator.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img width="200" alt="Alacritty Logo" src="https://raw.githubusercontent.com/alacritty/alacritty/master/extra/logo/compat/alacritty-term%2Bscanlines.png"&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;Alacritty - A fast, cross-platform, OpenGL terminal emulator&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img alt="Alacritty - A fast, cross-platform, OpenGL terminal emulator" src="https://raw.githubusercontent.com/alacritty/alacritty/master/extra/promo/alacritty-readme.png"&gt; &lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;Alacritty is a modern terminal emulator that comes with sensible defaults, but allows for extensive &lt;a href="https://raw.githubusercontent.com/alacritty/alacritty/master/#configuration"&gt;configuration&lt;/a&gt;. By integrating with other applications, rather than reimplementing their functionality, it manages to provide a flexible set of &lt;a href="https://raw.githubusercontent.com/alacritty/alacritty/master/docs/features.md"&gt;features&lt;/a&gt; with high performance. The supported platforms currently consist of BSD, Linux, macOS and Windows.&lt;/p&gt; 
&lt;p&gt;The software is considered to be at a &lt;strong&gt;beta&lt;/strong&gt; level of readiness; there are a few missing features and bugs to be fixed, but it is already used by many as a daily driver.&lt;/p&gt; 
&lt;p&gt;Precompiled binaries are available from the &lt;a href="https://github.com/alacritty/alacritty/releases"&gt;GitHub releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Join &lt;a href="https://web.libera.chat/gamja/?channels=#alacritty"&gt;&lt;code&gt;#alacritty&lt;/code&gt;&lt;/a&gt; on libera.chat if you have questions or looking for a quick help.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;You can find an overview over the features available in Alacritty &lt;a href="https://raw.githubusercontent.com/alacritty/alacritty/master/docs/features.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Further information&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://jwilm.io/blog/announcing-alacritty/"&gt;Announcing Alacritty, a GPU-Accelerated Terminal Emulator&lt;/a&gt; January 6, 2017&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qHOdYO3WUTk"&gt;A talk about Alacritty at the Rust Meetup January 2017&lt;/a&gt; January 19, 2017&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jwilm.io/blog/alacritty-lands-scrollback/"&gt;Alacritty Lands Scrollback, Publishes Benchmarks&lt;/a&gt; September 17, 2018&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Alacritty can be installed by using various package managers on Linux, BSD, macOS and Windows.&lt;/p&gt; 
&lt;p&gt;Prebuilt binaries for macOS and Windows can also be downloaded from the &lt;a href="https://github.com/alacritty/alacritty/releases"&gt;GitHub releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For everyone else, the detailed instructions to install Alacritty can be found &lt;a href="https://raw.githubusercontent.com/alacritty/alacritty/master/INSTALL.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;At least OpenGL ES 2.0&lt;/li&gt; 
 &lt;li&gt;[Windows] ConPTY support (Windows 10 version 1809 or higher)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;You can find the documentation for Alacritty's configuration in &lt;code&gt;man 5 alacritty&lt;/code&gt;, or by looking at &lt;a href="https://alacritty.org/config-alacritty.html"&gt;the website&lt;/a&gt; if you do not have the manpages installed.&lt;/p&gt; 
&lt;p&gt;Alacritty doesn't create the config file for you, but it looks for one in the following locations:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/alacritty/alacritty.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/alacritty.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$HOME/.config/alacritty/alacritty.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$HOME/.alacritty.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/etc/alacritty/alacritty.toml&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;On Windows, the config file will be looked for in:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;%APPDATA%\alacritty\alacritty.toml&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;A guideline about contributing to Alacritty can be found in the &lt;a href="https://raw.githubusercontent.com/alacritty/alacritty/master/CONTRIBUTING.md"&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Is it really the fastest terminal emulator?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Benchmarking terminal emulators is complicated. Alacritty uses &lt;a href="https://github.com/alacritty/vtebench"&gt;vtebench&lt;/a&gt; to quantify terminal emulator throughput and manages to consistently score better than the competition using it. If you have found an example where this is not the case, please report a bug.&lt;/p&gt; 
&lt;p&gt;Other aspects like latency or framerate and frame consistency are more difficult to quantify. Some terminal emulators also intentionally slow down to save resources, which might be preferred by some users.&lt;/p&gt; 
&lt;p&gt;If you have doubts about Alacritty's performance or usability, the best way to quantify terminal emulators is always to test them with &lt;strong&gt;your&lt;/strong&gt; specific usecases.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Why isn't feature X implemented?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Alacritty has many great features, but not every feature from every other terminal. This could be for a number of reasons, but sometimes it's just not a good fit for Alacritty. This means you won't find things like tabs or splits (which are best left to a window manager or &lt;a href="https://github.com/tmux/tmux"&gt;terminal multiplexer&lt;/a&gt;) nor niceties like a GUI config editor.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Alacritty is released under the &lt;a href="https://github.com/alacritty/alacritty/raw/master/LICENSE-APACHE"&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>n0-computer/iroh</title>
      <link>https://github.com/n0-computer/iroh</link>
      <description>&lt;p&gt;peer-2-peer that just works&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;&lt;a href="https://iroh.computer"&gt;&lt;img alt="iroh" src="https://raw.githubusercontent.com/n0-computer/iroh/main/.img/iroh_wordmark.svg?sanitize=true" width="100"&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;h3 align="center"&gt; less net work for networks &lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://docs.rs/iroh/"&gt;&lt;img src="https://img.shields.io/badge/docs-latest-blue.svg?style=flat-square" alt="Documentation"&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/iroh"&gt;&lt;img src="https://img.shields.io/crates/v/iroh.svg?style=flat-square" alt="Crates.io"&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/iroh"&gt;&lt;img src="https://img.shields.io/crates/d/iroh.svg?style=flat-square" alt="downloads"&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/DpmJgtU7cW"&gt;&lt;img src="https://img.shields.io/discord/1161119546170687619?logo=discord&amp;amp;style=flat-square" alt="Chat"&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/@n0computer"&gt;&lt;img src="https://img.shields.io/badge/YouTube-red?logo=youtube&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="Youtube"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/n0-computer/iroh/main/LICENSE-MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-blue.svg?style=flat-square" alt="License: MIT"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/n0-computer/iroh/main/LICENSE-APACHE"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?style=flat-square" alt="License: Apache 2.0"&gt;&lt;/a&gt; &lt;a href="https://github.com/n0-computer/iroh/actions/workflows/ci.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/n0-computer/iroh/ci.yml?branch=main&amp;amp;style=flat-square&amp;amp;label=CI" alt="CI"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt; &lt;a href="https://iroh.computer/docs"&gt; Docs Site &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href="https://docs.rs/iroh"&gt; Rust Docs &lt;/a&gt; &lt;/h3&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;h2&gt;What is iroh?&lt;/h2&gt; 
&lt;p&gt;Iroh gives you an API for dialing by public key. You say “connect to that phone”, iroh will find &amp;amp; maintain the fastest connection for you, regardless of where it is.&lt;/p&gt; 
&lt;h3&gt;Hole-punching&lt;/h3&gt; 
&lt;p&gt;The fastest route is a direct connection, so if necessary, iroh tries to hole-punch. Should this fail, it can fall back to an open ecosystem of public relay servers. To ensure these connections are as fast as possible, we &lt;a href="https://perf.iroh.computer"&gt;continuously measure iroh&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Built on &lt;a href="https://en.wikipedia.org/wiki/QUIC"&gt;QUIC&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Iroh uses &lt;a href="https://github.com/quinn-rs/quinn"&gt;Quinn&lt;/a&gt; to establish &lt;a href="https://en.wikipedia.org/wiki/QUIC"&gt;QUIC&lt;/a&gt; connections between nodes. This way you get authenticated encryption, concurrent streams with stream priorities, a datagram transport and avoid head-of-line-blocking out of the box.&lt;/p&gt; 
&lt;h2&gt;Compose Protocols&lt;/h2&gt; 
&lt;p&gt;Use pre-existing protocols built on iroh instead of writing your own:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/n0-computer/iroh-blobs"&gt;iroh-blobs&lt;/a&gt; for &lt;a href="https://github.com/BLAKE3-team/BLAKE3"&gt;BLAKE3&lt;/a&gt;-based content-addressed blob transfer scaling from kilobytes to terabytes&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/n0-computer/iroh-gossip"&gt;iroh-gossip&lt;/a&gt; for establishing publish-subscribe overlay networks that scale, requiring only resources that your average phone can handle&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/n0-computer/iroh-docs"&gt;iroh-docs&lt;/a&gt; for an eventually-consistent key-value store of &lt;a href="https://github.com/n0-computer/iroh-blobs"&gt;iroh-blobs&lt;/a&gt; blobs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/n0-computer/iroh-willow"&gt;iroh-willow&lt;/a&gt; for an (in-construction) implementation of the &lt;a href="https://willowprotocol.org"&gt;willow protocol&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Rust Library&lt;/h3&gt; 
&lt;p&gt;It's easiest to use iroh from rust. Install it using &lt;code&gt;cargo add iroh&lt;/code&gt;, then on the connecting side:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rs"&gt;const ALPN: &amp;amp;[u8] = b"iroh-example/echo/0";

let endpoint = Endpoint::builder().discovery_n0().bind().await?;

// Open a connection to the accepting node
let conn = endpoint.connect(addr, ALPN).await?;

// Open a bidirectional QUIC stream
let (mut send, mut recv) = conn.open_bi().await?;

// Send some data to be echoed
send.write_all(b"Hello, world!").await?;
send.finish()?;

// Receive the echo
let response = recv.read_to_end(1000).await?;
assert_eq!(&amp;amp;response, b"Hello, world!");

// As the side receiving the last application data - say goodbye
conn.close(0u32.into(), b"bye!");

// Close the endpoint and all its connections
endpoint.close().await;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And on the accepting side:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rs"&gt;let endpoint = Endpoint::builder().discovery_n0().bind().await?;

let router = Router::builder(endpoint)
    .accept(ALPN.to_vec(), Arc::new(Echo))
    .spawn()
    .await?;

// The protocol definition:
#[derive(Debug, Clone)]
struct Echo;

impl ProtocolHandler for Echo {
    async fn accept(&amp;amp;self, connection: Connection) -&amp;gt; Result&amp;lt;()&amp;gt; {
        let (mut send, mut recv) = connection.accept_bi().await?;

        // Echo any bytes received back directly.
        let bytes_sent = tokio::io::copy(&amp;amp;mut recv, &amp;amp;mut send).await?;

        send.finish()?;
        connection.closed().await;

        Ok(())
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The full example code with more comments can be found at &lt;a href="https://raw.githubusercontent.com/n0-computer/iroh/main/iroh/examples/echo.rs"&gt;&lt;code&gt;echo.rs&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Or use one of the pre-existing protocols, e.g. &lt;a href="https://github.com/n0-computer/iroh-blobs"&gt;iroh-blobs&lt;/a&gt; or &lt;a href="https://github.com/n0-computer/iroh-gossip"&gt;iroh-gossip&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Other Languages&lt;/h3&gt; 
&lt;p&gt;If you want to use iroh from other languages, make sure to check out &lt;a href="https://github.com/n0-computer/iroh-ffi"&gt;iroh-ffi&lt;/a&gt;, the repository for FFI bindings.&lt;/p&gt; 
&lt;h3&gt;Links&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RwAt36Xe3UI_"&gt;Introducing Iroh (video)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://iroh.computer/docs"&gt;Iroh Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/n0-computer/iroh-examples"&gt;Iroh Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/n0-computer/iroh-experiments"&gt;Iroh Experiments&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Repository Structure&lt;/h2&gt; 
&lt;p&gt;This repository contains a workspace of crates:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;iroh&lt;/code&gt;: The core library for hole-punching &amp;amp; communicating with relays.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;iroh-relay&lt;/code&gt;: The relay server implementation. This is the code we run in production (and you can, too!).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;iroh-base&lt;/code&gt;: Common types like &lt;code&gt;Hash&lt;/code&gt;, key types or &lt;code&gt;RelayUrl&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;iroh-dns-server&lt;/code&gt;: DNS server implementation powering the &lt;code&gt;n0_discovery&lt;/code&gt; for NodeIds, running at dns.iroh.link.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;iroh-net-report&lt;/code&gt;: Analyzes your host's networking ability &amp;amp; NAT.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright 2024 N0, INC.&lt;/p&gt; 
&lt;p&gt;This project is licensed under either of&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Apache License, Version 2.0, (&lt;a href="https://raw.githubusercontent.com/n0-computer/iroh/main/LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;MIT license (&lt;a href="https://raw.githubusercontent.com/n0-computer/iroh/main/LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href="http://opensource.org/licenses/MIT"&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;at your option.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in this project by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hyperium/tonic</title>
      <link>https://github.com/hyperium/tonic</link>
      <description>&lt;p&gt;A native gRPC client &amp; server implementation with async/await support.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://github.com/hyperium/tonic/raw/master/.github/assets/tonic-banner.svg?sanitize=true" alt=""&gt;&lt;/p&gt; 
&lt;p&gt;A rust implementation of &lt;a href="https://grpc.io"&gt;gRPC&lt;/a&gt;, a high performance, open source, general RPC framework that puts mobile and HTTP/2 first.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/hyperium/tonic/master/tonic"&gt;&lt;code&gt;tonic&lt;/code&gt;&lt;/a&gt; is a gRPC over HTTP/2 implementation focused on high performance, interoperability, and flexibility. This library was created to have first class support of async/await and to act as a core building block for production systems written in Rust.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://crates.io/crates/tonic"&gt;&lt;img src="https://img.shields.io/crates/v/tonic" alt="Crates.io"&gt;&lt;/a&gt; &lt;a href="https://docs.rs/tonic"&gt;&lt;img src="https://docs.rs/tonic/badge.svg?sanitize=true" alt="Documentation"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/hyperium/tonic/master/LICENSE"&gt;&lt;img src="https://img.shields.io/crates/l/tonic" alt="Crates.io"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/hyperium/tonic/tree/master/examples"&gt;Examples&lt;/a&gt; | &lt;a href="https://github.com/hyperium/tonic"&gt;Website&lt;/a&gt; | &lt;a href="https://docs.rs/tonic"&gt;Docs&lt;/a&gt; | &lt;a href="https://discord.gg/6yGkFeN"&gt;Chat&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/hyperium/tonic/master/tonic"&gt;&lt;code&gt;tonic&lt;/code&gt;&lt;/a&gt; is composed of three main components: the generic gRPC implementation, the high performance HTTP/2 implementation and the codegen powered by &lt;a href="https://github.com/tokio-rs/prost"&gt;&lt;code&gt;prost&lt;/code&gt;&lt;/a&gt;. The generic implementation can support any HTTP/2 implementation and any encoding via a set of generic traits. The HTTP/2 implementation is based on &lt;a href="https://github.com/hyperium/hyper"&gt;&lt;code&gt;hyper&lt;/code&gt;&lt;/a&gt;, a fast HTTP/1.1 and HTTP/2 client and server built on top of the robust &lt;a href="https://github.com/tokio-rs/tokio"&gt;&lt;code&gt;tokio&lt;/code&gt;&lt;/a&gt; stack. The codegen contains the tools to build clients and servers from &lt;a href="https://protobuf.dev/"&gt;&lt;code&gt;protobuf&lt;/code&gt;&lt;/a&gt; definitions.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bi-directional streaming&lt;/li&gt; 
 &lt;li&gt;High performance async io&lt;/li&gt; 
 &lt;li&gt;Interoperability&lt;/li&gt; 
 &lt;li&gt;TLS backed by &lt;a href="https://github.com/rustls/rustls"&gt;&lt;code&gt;rustls&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Load balancing&lt;/li&gt; 
 &lt;li&gt;Custom metadata&lt;/li&gt; 
 &lt;li&gt;Authentication&lt;/li&gt; 
 &lt;li&gt;Health Checking&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href="https://github.com/hyperium/tonic/raw/master/examples/helloworld-tutorial.md"&gt;&lt;code&gt;helloworld&lt;/code&gt;&lt;/a&gt; tutorial provides a basic example of using &lt;code&gt;tonic&lt;/code&gt;, perfect for first time users!&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://github.com/hyperium/tonic/raw/master/examples/routeguide-tutorial.md"&gt;&lt;code&gt;routeguide&lt;/code&gt;&lt;/a&gt; tutorial provides a complete example of using &lt;code&gt;tonic&lt;/code&gt; and all its features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Examples can be found in &lt;a href="https://raw.githubusercontent.com/hyperium/tonic/master/examples"&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt; and for more complex scenarios &lt;a href="https://raw.githubusercontent.com/hyperium/tonic/master/interop"&gt;&lt;code&gt;interop&lt;/code&gt;&lt;/a&gt; may be a good resource as it shows examples of many of the gRPC features.&lt;/p&gt; 
&lt;h3&gt;Rust Version&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;tonic&lt;/code&gt;'s MSRV is &lt;code&gt;1.75&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Dependencies&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/hyperium/tonic/master/tonic-build"&gt;&lt;code&gt;tonic-build&lt;/code&gt;&lt;/a&gt; uses &lt;code&gt;protoc&lt;/code&gt; &lt;a href="https://protobuf.dev/downloads/"&gt;Protocol Buffers compiler&lt;/a&gt; in some APIs which compile Protocol Buffers resource files such as &lt;a href="https://docs.rs/tonic-build/latest/tonic_build/fn.compile_protos.html"&gt;&lt;code&gt;tonic_build::compile_protos()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Help&lt;/h2&gt; 
&lt;p&gt;First, see if the answer to your question can be found in the API documentation. If the answer is not there, there is an active community in the &lt;a href="https://discord.gg/6yGkFeN"&gt;Tonic Discord channel&lt;/a&gt;. We would be happy to try to answer your question. If that doesn't work, try opening an &lt;a href="https://github.com/hyperium/tonic/issues/new/choose"&gt;issue&lt;/a&gt; with the question.&lt;/p&gt; 
&lt;h2&gt;Project Layout&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hyperium/tonic/master/tonic"&gt;&lt;code&gt;tonic&lt;/code&gt;&lt;/a&gt;: Generic gRPC and HTTP/2 client/server implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hyperium/tonic/master/tonic-build"&gt;&lt;code&gt;tonic-build&lt;/code&gt;&lt;/a&gt;: &lt;a href="https://github.com/tokio-rs/prost"&gt;&lt;code&gt;prost&lt;/code&gt;&lt;/a&gt; based service codegen.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hyperium/tonic/master/tonic-types"&gt;&lt;code&gt;tonic-types&lt;/code&gt;&lt;/a&gt;: &lt;a href="https://github.com/tokio-rs/prost"&gt;&lt;code&gt;prost&lt;/code&gt;&lt;/a&gt; based grpc utility types including support for gRPC Well Known Types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hyperium/tonic/master/tonic-health"&gt;&lt;code&gt;tonic-health&lt;/code&gt;&lt;/a&gt;: Implementation of the standard &lt;a href="https://grpc.io/docs/guides/health-checking/"&gt;gRPC health checking service&lt;/a&gt;. Also serves as an example of both unary and response streaming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hyperium/tonic/master/tonic-reflection"&gt;&lt;code&gt;tonic-reflection&lt;/code&gt;&lt;/a&gt;: A tonic based gRPC reflection implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hyperium/tonic/master/examples"&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt;: Example gRPC implementations showing off tls, load balancing and bi-directional streaming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hyperium/tonic/master/interop"&gt;&lt;code&gt;interop&lt;/code&gt;&lt;/a&gt;: Interop tests implementation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;🎈&lt;/span&gt; Thanks for your help improving the project! We are so happy to have you! We have a &lt;a href="https://raw.githubusercontent.com/hyperium/tonic/master/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to help you get involved in the Tonic project.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/hyperium/tonic/master/LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contribution&lt;/h3&gt; 
&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in Tonic by you, shall be licensed as MIT, without any additional terms or conditions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bee-san/RustScan</title>
      <link>https://github.com/bee-san/RustScan</link>
      <description>&lt;p&gt;🤖 The Modern Port Scanner 🤖&lt;/p&gt;&lt;hr&gt;&lt;div align="center" markdown="1"&gt; 
 &lt;p&gt;➡️ &lt;a href="http://discord.skerritt.blog" title="Discord blog"&gt;Discord&lt;/a&gt; | &lt;a href="https://github.com/RustScan/RustScan/wiki/Installation-Guide" title="Installation Guide Wiki"&gt;Installation Guide&lt;/a&gt; | &lt;a href="https://github.com/RustScan/RustScan#-usage"&gt;Usage Guide&lt;/a&gt; ⬅️&lt;/p&gt; 
 &lt;img src="https://raw.githubusercontent.com/bee-san/RustScan/master/pictures/rustscan.png" height="400px" width="400px"&gt; 
 &lt;!--&lt;u&gt;**The Modern Port Scanner.**&lt;/u&gt;--&gt; 
 &lt;p&gt;&lt;strong&gt;Fast, smart, effective.&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://img.shields.io/archlinux/v/extra/x86_64/rustscan?style=plastic&amp;amp;logo=archlinux&amp;amp;link=https%3A%2F%2Farchlinux.org%2Fpackages%2Fextra%2Fx86_64%2Frustscan%2F" alt="Arch Linux package"&gt; &lt;img src="https://img.shields.io/badge/Built%20with-Rust-Purple" alt="Built with Rust"&gt; &lt;img src="https://img.shields.io/github/downloads/rustscan/rustscan/total?label=GitHub%20Downloads" alt="GitHub All Releases"&gt; &lt;img src="https://img.shields.io/crates/d/rustscan?label=Cargo%20Downloads" alt="Crates.io"&gt; &lt;img src="https://img.shields.io/discord/754001738184392704" alt="Discord"&gt; &lt;img src="https://github.com/RustScan/RustScan/actions/workflows/build.yml/badge.svg?branch=master" alt="Actions"&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h1&gt;🤔 What is this?&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/bee-san/RustScan/master/pictures/fast.gif" alt="fast" title="Speed"&gt;&lt;/p&gt; 
&lt;p&gt;The Modern Port Scanner. &lt;strong&gt;Find ports quickly (3 seconds at its fastest)&lt;/strong&gt;. Run scripts through our scripting engine (Python, Lua, Shell supported).&lt;/p&gt; 
&lt;h1&gt;🛠️ Installation&lt;/h1&gt; 
&lt;p&gt;You can install RustScan's binary from our &lt;a href="https://github.com/RustScan/RustScan/releases"&gt;releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We would prefer you to install with a package manager so it is tested and works for your system.&lt;/p&gt; 
&lt;p&gt;RustScan is in many repositories already. Install it with whatever tools you wish:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/rustscan/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/rustscan.svg?sanitize=true" alt="Packaging status"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;RustScan only officially supports Cargo installations, if you want to use that please install Rust and then &lt;code&gt;cargo install rustscan&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Example installations include:&lt;/p&gt; 
&lt;p&gt;MacOS:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;  brew install rustscan
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Arch:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;  yay rustscan
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;✨ Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Scans all 65k ports in &lt;strong&gt;3 seconds&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Full scripting engine support. Automatically pipe results into Nmap, or use our scripts (or write your own) to do whatever you want.&lt;/li&gt; 
 &lt;li&gt;Adaptive learning. RustScan improves the more you use it. No bloated machine learning here, just basic maths.&lt;/li&gt; 
 &lt;li&gt;The usuals you would expect. IPv6, CIDR, file input and more.&lt;/li&gt; 
 &lt;li&gt;Automatically pipes ports into Nmap.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‼️ Important Links&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;
    &lt;!--Installation Guide--&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;
    &lt;!--Documentation--&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;
    &lt;!--Discord--&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;span&gt;📖&lt;/span&gt; &lt;a href="https://github.com/RustScan/RustScan#-full-installation-guide" title="Full installation guide"&gt;Installation Guide&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;📚&lt;/span&gt; &lt;a href="https://github.com/bee-san/RustScan/wiki" title="Rustscan"&gt;Documentation&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;🦜&lt;/span&gt; &lt;a href="http://discord.skerritt.blog" title="Discord blog"&gt;Discord&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🙋 Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;📖 &lt;a href="https://github.com/RustScan/RustScan/wiki/Installation-Guide" title="Installation Guide Wiki"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🐋 &lt;a href="https://github.com/RustScan/RustScan/wiki/Installation-Guide#docker-" title="Docker Installation Guide Wiki"&gt;Docker Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🦜 &lt;a href="http://discord.skerritt.blog" title="Discord blog"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🤸 &lt;a href="https://github.com/RustScan/RustScan/wiki/Usage" title="Basic Usage of Rustscan"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;🔭 Why RustScan?&lt;/h1&gt; 
&lt;p&gt;RustScan is a modern take on the port scanner. Sleek &amp;amp; fast. All while providing extensive extendability to you.&lt;/p&gt; 
&lt;p&gt;Not to mention RustScan uses Adaptive Learning to improve itself over time, making it the best port scanner for &lt;strong&gt;you&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;🧋 Speed&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/bee-san/RustScan/master/pictures/fast.gif" alt="fast" title="Speed"&gt;&lt;/p&gt; 
&lt;p&gt;Speed is guaranteed via RustScan. However, if you want to run a slow scan due to stealth, that is possible too.&lt;/p&gt; 
&lt;p&gt;Firstly, let's talk code.&lt;/p&gt; 
&lt;p&gt;We have tests that check to see if RustScan is significantly slower than the previous version. If it is, the continuous integration fails, and we can't commit code to master unless we make it faster.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/sharkdp/hyperfine" title="Hyperfine"&gt;HyperFine&lt;/a&gt; is used to monitor RustScan's performance over time to answer the question, "Are we getting faster? Are we getting slower?".&lt;/p&gt; 
&lt;p&gt;Every pull request is reviewed by &lt;strong&gt;one&lt;/strong&gt; person, but more often than not, &lt;strong&gt;two&lt;/strong&gt; people review it. We test it manually and ensure the code doesn't negatively affect performance.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/RustScan/RustScan/wiki/Increasing-Speed-&amp;amp;-Accuracy" title="Increasing Speed &amp;amp; Accuracy"&gt;Read more here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;⚙️ Extensible&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/bee-san/RustScan/master/pictures/scripts.gif" alt="scripts" title="Scripts"&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;em&gt;RustScan piping results into the custom Python script&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;RustScan has a new scripting engine that allows anyone to write scripts in most languages. Python, Lua, and Shell are all supported.&lt;/p&gt; 
&lt;p&gt;Want to take your found ports and pipe them into Nmap for further analysis? That's possible. Want to run &lt;code&gt;smb-enum&lt;/code&gt; if SMB is found open? Possible.&lt;/p&gt; 
&lt;p&gt;The possibilities are endless -- and you can write scripts in whatever language you feel comfortable with.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/RustScan/RustScan/wiki/RustScan-Scripting-Engine" title="Scripting Engine"&gt;Read more here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🌊 Adaptive&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/bee-san/RustScan/master/pictures/adaptive.gif" alt="adaptive" title="Adaptive"&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;em&gt;RustScan automatically fine-tunes itself to match the host OS&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;RustScan has a cool set of features called "Adaptive Learning". These features "learn" about the environment you are scanning and how &lt;em&gt;you&lt;/em&gt; use RustScan to &lt;strong&gt;improve itself over time&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;We use this umbrella term for any feature that fits this criterion. The list constantly changes, so &lt;a href="https://github.com/RustScan/RustScan/wiki/Adaptive-Learning" title="Adaptive Learning"&gt;check out our wiki for more information&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;👩‍🦯 Accessible&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/bee-san/RustScan/master/pictures/accessible.gif" alt="fast" title="Fast"&gt;&lt;/p&gt; 
&lt;p&gt;RustScan is one of the first penetration testing tools that aims to be entirely accessible.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://bees.substack.com/p/making-hacking-accessible" title="Making Hacking Accessible"&gt;Most penetration testing tools are not accessible&lt;/a&gt;, which negatively affects the whole industry.&lt;/p&gt; 
&lt;p&gt;RustScan has continuous integration testing that aims to ensure it is accessible, and we are constantly working on ways to improve our accessibility and ensure &lt;em&gt;everyone&lt;/em&gt; can use RustScan.&lt;/p&gt; 
&lt;h1&gt;🤸 Usage&lt;/h1&gt; 
&lt;p&gt;We have 2 usage guides. &lt;a href="https://github.com/RustScan/RustScan/wiki/Usage" title="Basic Usage of Rustscan"&gt;Basic Usage&lt;/a&gt; and &lt;a href="https://github.com/RustScan/RustScan/wiki/Things-you-may-want-to-do-with-RustScan-but-don't-understand-how" title="Things you may want to do with rustscan but don't know how"&gt;Things you may want to do&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We also have documentation about our config file &lt;a href="https://github.com/RustScan/RustScan/wiki/Config-File" title="RustScan Configuration File"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;🎪 Community&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/RustScan/RustScan/wiki/Contributing" title="Learn how to contribute"&gt;Contributing&lt;/a&gt; Read this to learn how.&lt;/p&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#contributors-"&gt;&lt;img src="https://img.shields.io/badge/all_contributors-26-orange.svg?style=flat-square" alt="All Contributors"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; 
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href="https://allcontributors.org/docs/en/emoji-key"&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://skerritt.blog"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/10378052?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bee&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#infra-beeskerritt" title="Infrastructure (Hosting, Build-Tools, etc)"&gt;🚇&lt;/a&gt; &lt;a href="https://github.com/RustScan/RustScan/commits?author=beeskerritt" title="Tests"&gt;⚠️&lt;/a&gt; &lt;a href="https://github.com/RustScan/RustScan/commits?author=beesan" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#design-beeskerritt" title="Design"&gt;🎨&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://sakiir.ovh"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/9950578?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;SakiiR&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/RustScan/RustScan/commits?author=SakiiR" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/RustScan/RustScan/issues?q=author%3ASakiiR" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/smackhack"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/48143394?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;smackhack&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#ideas-smackhack" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#example-smackhack" title="Examples"&gt;💡&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="http://bernardoamc.github.io/"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/428984?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bernardo Araujo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/RustScan/RustScan/commits?author=bernardoamc" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/RustScan/RustScan/issues?q=author%3Abernardoamc" title="Bug reports"&gt;🐛&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#design-bernardoamc" title="Design"&gt;🎨&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/Isona"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/11759523?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Izzy Whistlecroft&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/RustScan/RustScan/issues?q=author%3AIsona" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://imlonghao.com"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/4951333?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;imlonghao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/RustScan/RustScan/issues?q=author%3Aimlonghao" title="Bug reports"&gt;🐛&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#maintenance-imlonghao" title="Maintenance"&gt;🚧&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/royharoush"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/8113056?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;royharoush&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#ideas-royharoush" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#design-royharoush" title="Design"&gt;🎨&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/Atul9"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/3390330?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Atul Bhosale&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/RustScan/RustScan/commits?author=Atul9" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://tgotwig.dev"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/30773779?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thomas Gotwig&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#platform-TGotwig" title="Packaging/porting to new platform"&gt;📦&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/remigourdon"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/2874133?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rémi Gourdon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/RustScan/RustScan/commits?author=remigourdon" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://github.com/RustScan/RustScan/commits?author=remigourdon" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://cmnatic.co.uk"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/4163116?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ben (CMNatic)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/RustScan/RustScan/commits?author=cmnatic" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/RustScan/RustScan/commits?author=cmnatic" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#design-cmnatic" title="Design"&gt;🎨&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/Ferryistaken"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/47927670?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alessandro Ferrari&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#content-Ferryistaken" title="Content"&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/Phenomite"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/8285537?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Phenomite&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#content-Phenomite" title="Content"&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://supersandro.de/"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/7258858?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sandro&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#content-SuperSandro2000" title="Content"&gt;🖋&lt;/a&gt; &lt;a href="https://github.com/RustScan/RustScan/issues?q=author%3ASuperSandro2000" title="Bug reports"&gt;🐛&lt;/a&gt; &lt;a href="https://github.com/RustScan/RustScan/commits?author=SuperSandro2000" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://swag.lgbt"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/25358963?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Cass&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#platform-caass" title="Packaging/porting to new platform"&gt;📦&lt;/a&gt; &lt;a href="https://github.com/RustScan/RustScan/commits?author=caass" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/RustScan/RustScan/issues?q=author%3Acaass" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/niklasmohrin"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/47574893?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Niklas Mohrin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/RustScan/RustScan/commits?author=niklasmohrin" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://github.com/RustScan/RustScan/commits?author=niklasmohrin" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/RustScan/RustScan/issues?q=author%3Aniklasmohrin" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://liberapay.com/Artem4/"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/5614476?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Artem Polishchuk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#platform-tim77" title="Packaging/porting to new platform"&gt;📦&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/buermarc"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/44375277?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;buermarc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/RustScan/RustScan/commits?author=buermarc" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/bergabman"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/44554109?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;bergabman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/RustScan/RustScan/commits?author=bergabman" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/RustScan/RustScan/issues?q=author%3Abergabman" title="Bug reports"&gt;🐛&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#design-bergabman" title="Design"&gt;🎨&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/dmitris"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/31205?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dmitry Savintsev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/RustScan/RustScan/commits?author=dmitris" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/bofh69"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/1444315?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sebastian Andersson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/RustScan/RustScan/commits?author=bofh69" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/mattcorbin"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/6537765?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matt Corbin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/RustScan/RustScan/commits?author=mattcorbin" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="http://rootsploit.com"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/67270834?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;RootSploit&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/bee-san/RustScan/master/#blog-rootsploit" title="Blogposts"&gt;📝&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/eiffel-fl"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/12171754?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;eiffel-fl&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/RustScan/RustScan/commits?author=eiffel-fl" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/u5surf"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/14180225?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Y.Horie&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/RustScan/RustScan/commits?author=u5surf" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/okrplay"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/32576280?v=4" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Oskar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/RustScan/RustScan/commits?author=okrplay" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/RustScan/RustScan/commits?author=okrplay" title="Tests"&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-enable --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; 
&lt;p&gt;This project follows the &lt;a href="https://github.com/all-contributors/all-contributors"&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; 
&lt;!--Links--&gt; 
&lt;!--Pictures--&gt;</description>
    </item>
    
    <item>
      <title>solana-foundation/anchor</title>
      <link>https://github.com/solana-foundation/anchor</link>
      <description>&lt;p&gt;⚓ Solana Sealevel Framework&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img height="170x" src="https://pbs.twimg.com/media/FVUVaO9XEAAulvK?format=png&amp;amp;name=small"&gt; 
 &lt;h1&gt;Anchor&lt;/h1&gt; 
 &lt;p&gt; &lt;strong&gt;Solana Program Framework&lt;/strong&gt; &lt;/p&gt; 
 &lt;p&gt; &lt;a href="https://github.com/coral-xyz/anchor/actions"&gt;&lt;img alt="Build Status" src="https://github.com/coral-xyz/anchor/actions/workflows/tests.yaml/badge.svg?sanitize=true"&gt;&lt;/a&gt; &lt;a href="https://anchor-lang.com"&gt;&lt;img alt="Tutorials" src="https://img.shields.io/badge/docs-tutorials-blueviolet"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/NHHGSXAnXk"&gt;&lt;img alt="Discord Chat" src="https://img.shields.io/discord/889577356681945098?color=blueviolet"&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;&lt;img alt="License" src="https://img.shields.io/github/license/coral-xyz/anchor?color=blueviolet"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://www.anchor-lang.com/"&gt;Anchor&lt;/a&gt; is a framework providing several convenient developer tools for writing Solana programs (sometimes called 'smart contracts').&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Rust eDSL for writing Solana programs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Interface_description_language"&gt;IDL&lt;/a&gt; specification&lt;/li&gt; 
 &lt;li&gt;TypeScript package for generating clients from IDL&lt;/li&gt; 
 &lt;li&gt;CLI and workspace management for developing complete applications&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Anchor is the most popular framework for Solana programs.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you're familiar with developing in Ethereum's &lt;a href="https://docs.soliditylang.org/en/"&gt;Solidity&lt;/a&gt;, &lt;a href="https://www.trufflesuite.com/"&gt;Truffle&lt;/a&gt;, &lt;a href="https://github.com/ethereum/web3.js"&gt;web3.js&lt;/a&gt;, then using Anchor will be familiar. Although the DSL syntax and semantics are targeted at Solana, the high level flow of writing RPC request handlers, emitting an IDL, and generating clients from IDL is the same.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;For a quickstart guide and in depth tutorials, see the &lt;a href="https://book.anchor-lang.com"&gt;Anchor book&lt;/a&gt; and the &lt;a href="https://anchor-lang.com"&gt;Anchor documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To jump straight to examples, go &lt;a href="https://github.com/coral-xyz/anchor/tree/master/examples"&gt;here&lt;/a&gt;. For the latest Rust and TypeScript API documentation, see &lt;a href="https://docs.rs/anchor-lang"&gt;docs.rs&lt;/a&gt; and the &lt;a href="https://www.anchor-lang.com/docs/clients/typescript"&gt;typedoc&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Packages&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Package&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Version&lt;/th&gt; 
   &lt;th align="left"&gt;Docs&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;anchor-lang&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Rust primitives for writing programs on Solana&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://crates.io/crates/anchor-lang"&gt;&lt;img src="https://img.shields.io/crates/v/anchor-lang?color=blue" alt="Crates.io"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://docs.rs/anchor-lang"&gt;&lt;img src="https://docs.rs/anchor-lang/badge.svg?sanitize=true" alt="Docs.rs"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;anchor-spl&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;CPI clients for SPL programs on Solana&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://crates.io/crates/anchor-spl"&gt;&lt;img src="https://img.shields.io/crates/v/anchor-spl?color=blue" alt="crates"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://docs.rs/anchor-spl"&gt;&lt;img src="https://docs.rs/anchor-spl/badge.svg?sanitize=true" alt="Docs.rs"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;anchor-client&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Rust client for Anchor programs&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://crates.io/crates/anchor-client"&gt;&lt;img src="https://img.shields.io/crates/v/anchor-client?color=blue" alt="crates"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://docs.rs/anchor-client"&gt;&lt;img src="https://docs.rs/anchor-client/badge.svg?sanitize=true" alt="Docs.rs"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;@coral-xyz/anchor&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;TypeScript client for Anchor programs&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://www.npmjs.com/package/@coral-xyz/anchor"&gt;&lt;img src="https://img.shields.io/npm/v/@coral-xyz/anchor.svg?color=blue" alt="npm"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://coral-xyz.github.io/anchor/ts/index.html"&gt;&lt;img src="https://img.shields.io/badge/docs-typedoc-blue" alt="Docs"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;@coral-xyz/anchor-cli&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;CLI to support building and managing an Anchor workspace&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://www.npmjs.com/package/@coral-xyz/anchor-cli"&gt;&lt;img src="https://img.shields.io/npm/v/@coral-xyz/anchor-cli.svg?color=blue" alt="npm"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://coral-xyz.github.io/anchor/cli/commands.html"&gt;&lt;img src="https://img.shields.io/badge/docs-typedoc-blue" alt="Docs"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Note&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Anchor is in active development, so all APIs are subject to change.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;This code is unaudited. Use at your own risk.&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Here's a counter program, where only the designated &lt;code&gt;authority&lt;/code&gt; can increment the count.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;use anchor_lang::prelude::*;

declare_id!("Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS");

#[program]
mod counter {
    use super::*;

    pub fn initialize(ctx: Context&amp;lt;Initialize&amp;gt;, start: u64) -&amp;gt; Result&amp;lt;()&amp;gt; {
        let counter = &amp;amp;mut ctx.accounts.counter;
        counter.authority = *ctx.accounts.authority.key;
        counter.count = start;
        Ok(())
    }

    pub fn increment(ctx: Context&amp;lt;Increment&amp;gt;) -&amp;gt; Result&amp;lt;()&amp;gt; {
        let counter = &amp;amp;mut ctx.accounts.counter;
        counter.count += 1;
        Ok(())
    }
}

#[derive(Accounts)]
pub struct Initialize&amp;lt;'info&amp;gt; {
    #[account(init, payer = authority, space = 48)]
    pub counter: Account&amp;lt;'info, Counter&amp;gt;,
    pub authority: Signer&amp;lt;'info&amp;gt;,
    pub system_program: Program&amp;lt;'info, System&amp;gt;,
}

#[derive(Accounts)]
pub struct Increment&amp;lt;'info&amp;gt; {
    #[account(mut, has_one = authority)]
    pub counter: Account&amp;lt;'info, Counter&amp;gt;,
    pub authority: Signer&amp;lt;'info&amp;gt;,
}

#[account]
pub struct Counter {
    pub authority: Pubkey,
    pub count: u64,
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more, see the &lt;a href="https://github.com/coral-xyz/anchor/tree/master/examples"&gt;examples&lt;/a&gt; and &lt;a href="https://github.com/coral-xyz/anchor/tree/master/tests"&gt;tests&lt;/a&gt; directories.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Anchor is licensed under &lt;a href="https://raw.githubusercontent.com/solana-foundation/anchor/master/LICENSE"&gt;Apache 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in Anchor by you, as defined in the Apache-2.0 license, shall be licensed as above, without any additional terms or conditions.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Thank you for your interest in contributing to Anchor! Please see the &lt;a href="https://raw.githubusercontent.com/solana-foundation/anchor/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; to learn how.&lt;/p&gt; 
&lt;h3&gt;Thanks ❤️&lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/coral-xyz/anchor/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=coral-xyz/anchor" width="100%"&gt; &lt;/a&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>openobserve/openobserve</title>
      <link>https://github.com/openobserve/openobserve</link>
      <description>&lt;p&gt;🚀 10x easier, 🚀 140x lower storage cost, 🚀 high performance, 🚀 petabyte scale - Elasticsearch/Splunk/Datadog alternative for 🚀 (logs, metrics, traces, RUM, Error tracking, Session replay).&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://openobserve.ai"&gt;&lt;img src="https://openobserve.ai/img/logo/o2-logo-readme.svg?sanitize=true" alt="OpenObserve"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;em&gt;🚀 10x easier, 🚀 140x lower storage cost, 🚀 high performance, 🚀 petabyte scale - Elasticsearch/Splunk/Datadog alternative for 🚀 (logs, metrics, traces).&lt;/em&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/openobserve/openobserve" target="_blank"&gt; &lt;img src="https://img.shields.io/github/last-commit/openobserve/openobserve" alt="Last Commit"&gt; &lt;/a&gt; &lt;a href="https://github.com/openobserve/openobserve/stargazers" target="_blank"&gt; &lt;img src="https://img.shields.io/github/stars/openobserve/openobserve" alt="GitHub Stars"&gt; &lt;/a&gt; &lt;a href="https://github.com/openobserve/openobserve/issues" target="_blank"&gt; &lt;img src="https://img.shields.io/github/issues/openobserve/openobserve" alt="GitHub Issues"&gt; &lt;/a&gt; &lt;a href="https://github.com/openobserve/openobserve/graphs/contributors" target="_blank"&gt; &lt;img src="https://img.shields.io/github/contributors/openobserve/openobserve" alt="Contributors"&gt; &lt;/a&gt; &lt;a href="https://github.com/openobserve/openobserve/releases" target="_blank"&gt; &lt;img src="https://img.shields.io/github/v/release/openobserve/openobserve" alt="GitHub Release"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;OpenObserve (O2 for short) is a cloud-native observability platform built specifically for logs, metrics, traces, analytics, RUM (Real User Monitoring - Performance, Errors, Session Replay) designed to work at petabyte scale.&lt;/p&gt; 
&lt;p&gt;It is straightforward and easy to operate, in contrast to Elasticsearch, which requires understanding and tuning numerous settings. Get OpenObserve up and running in under 2 minutes.&lt;/p&gt; 
&lt;p&gt;OpenObserve serves as a seamless replacement for Elasticsearch for users who ingest data using APIs and perform searches. OpenObserve comes with its own user interface, eliminating the need for separate installation.&lt;/p&gt; 
&lt;p&gt;You can reduce your log storage costs by ~140x compared to Elasticsearch by using OpenObserve. Below, we present the results from pushing logs from our production Kubernetes cluster to both Elasticsearch and OpenObserve using Fluent Bit.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/zo_vs_es.png" alt="OpenObserve Vs Elasticsearch"&gt;&lt;/p&gt; 
&lt;h2&gt;🎥 Introduction Video&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=4VwuC1tpRP4"&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/o2_intro.webp" alt="OpenObserve Introduction"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🌟 Features:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Logs, Metrics, Traces&lt;/strong&gt;: Comprehensive support for various data types.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OpenTelemetry Support&lt;/strong&gt;: Full compatibility with OTLP for logs, metrics, and traces.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real User Monitoring (RUM)&lt;/strong&gt;: Includes performance tracking, error logging, and session replay.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dashboards, Reports, Alerts&lt;/strong&gt;: Features over 18 different chart types for comprehensive data visualization for on-the-fly analysis and reporting along with alerting.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pipelines&lt;/strong&gt;: Enrich, redact, reduce, normalize data on the fly. Stream processing for logs to metrics and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced Embedded GUI&lt;/strong&gt;: Intuitive and user-friendly interface.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SQL and PromQL Support&lt;/strong&gt;: Query logs and traces with SQL, and metrics with SQL and PromQL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Single Binary or HA Installation&lt;/strong&gt;: Install using a single binary for small deployments or in HA mode for large deployments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Versatile Storage Options&lt;/strong&gt;: Supports local disk, S3, MinIO, GCS, Azure Blob Storage.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;High Availability and Clustering&lt;/strong&gt;: Ensures reliable and scalable performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Schema&lt;/strong&gt;: Adapts to your data structure seamlessly.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Built-in Authentication&lt;/strong&gt;: Secure and ready to use.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ease of Operation&lt;/strong&gt;: Designed for simplicity and efficiency.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Seamless Upgrades&lt;/strong&gt;: Hassle-free updates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multilingual UI&lt;/strong&gt;: Supports 11 languages, including English, Spanish, German, French, Chinese, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For a full list of features, check the &lt;a href="https://openobserve.ai/docs/#project-status-features-and-roadmap"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;⚡️ Quick start&lt;/h2&gt; 
&lt;h3&gt;🐳 Docker:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d \
      --name openobserve \
      -v $PWD/data:/data \
      -p 5080:5080 \
      -e ZO_ROOT_USER_EMAIL="root@example.com" \
      -e ZO_ROOT_USER_PASSWORD="Complexpass#123" \
      public.ecr.aws/zinclabs/openobserve:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🐙 Docker Compose:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  openobserve:
    image: public.ecr.aws/zinclabs/openobserve:latest
    restart: unless-stopped
    environment:
      ZO_ROOT_USER_EMAIL: "root@example.com"
      ZO_ROOT_USER_PASSWORD: "Complexpass#123"
    ports:
      - "5080:5080"
    volumes:
      - data:/data
volumes:
  data:
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For other ways to quickly install OpenObserve or use OpenObserve cloud, check &lt;a href="https://openobserve.ai/docs/quickstart"&gt;quickstart documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For installing OpenObserve in HA mode, check &lt;a href="https://openobserve.ai/docs/ha_deployment/"&gt;HA deployment documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- ## Enterprise Vs Open source Vs Cloud edition

OpenObserve is available in three different editions:


| Feature | Open Source (Self hosted) | Enterprise (Self hosted) | Cloud |
| --- | --- | --- | --- | 
| Logs | ✅ | ✅ | ✅ |
| Metrics | ✅ | ✅ | ✅ |
| Traces | ✅ | ✅ | ✅ |
| RUM | ✅ | ✅ | ✅ |
| Alerts | ✅ | ✅ | ✅ |
| Dashboards | ✅ | ✅ | ✅ |
| Reports | ✅ | ✅ | ✅ |
| VRL functions | ✅ | ✅ | ✅ |
| Pipelines | ✅ | ✅ | ✅ |
| High Availability | ✅ | ✅ | ✅ |
| Multitenancy (Organizations) | ✅ | ✅ | ✅ |
| Dynamic schema and schema evolution | ✅ | ✅ | ✅ |
| Advanced multilingual GUI | ✅ | ✅ | ✅ |
| Single Sign On | ❌ | ✅ | ✅ |
| Role Based Access Control (RBAC) | ❌ | ✅ | ✅ |
| Federated search / Super cluster | ❌ | ✅ | ❌ |
| Query management | ❌ | ✅ | ❌ |
| Workload management (QoS) | ❌ | ✅ | ❌ |
| Audit trail | ❌ | ✅ | ❌ |
| Ability to influence roadmap | ❌ | ✅ | ✅ on enterprise plan |
| License | AGPL | Enterprise | Cloud |
| Support | Community | Enterprise | Cloud |
| Cost | Free | If self hosted, free for up to 200 GB/Day data ingested &lt;br&gt; Paid thereafter  | Free 200 GB/Month data ingested &lt;br&gt; Paid thereafter | --&gt; 
&lt;h2&gt;📷 Screenshots&lt;/h2&gt; 
&lt;h3&gt;Home&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/zo_home.png" alt="Home"&gt;&lt;/p&gt; 
&lt;h3&gt;Logs&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/logs.png" alt="Logs"&gt;&lt;/p&gt; 
&lt;h3&gt;Traces (OpenTelemetry)&lt;/h3&gt; 
&lt;p&gt;Trace details page &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/traces.png" alt="Traces using OpenTelemetry"&gt;&lt;/p&gt; 
&lt;p&gt;Golden metrics based on traces &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/traces-overall.png" alt="Traces golden metrics"&gt;&lt;/p&gt; 
&lt;h3&gt;Visualizations and Dashboards&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/dashboard.png" alt="Dashboard"&gt; &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/dashboard2.png" alt="Dashboard"&gt; &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/create-panel.png" alt="Create panel"&gt; &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/map.png" alt="Map"&gt;&lt;/p&gt; 
&lt;h3&gt;Front end monitoring&lt;/h3&gt; 
&lt;p&gt;Performance analytics &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/performance.png" alt="Performance"&gt;&lt;/p&gt; 
&lt;p&gt;Session replay &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/session-replay.png" alt="Session replay"&gt;&lt;/p&gt; 
&lt;p&gt;Error tracking &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/error-tracking.png" alt="Error tracking"&gt;&lt;/p&gt; 
&lt;h3&gt;Alerts&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/alerts.png" alt="Alerts"&gt;&lt;/p&gt; 
&lt;h3&gt;Streams&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/streams.png" alt="Streams"&gt;&lt;/p&gt; 
&lt;h3&gt;Ingestion&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/ingestion1.png" alt="Ingestion"&gt;&lt;/p&gt; 
&lt;h3&gt;Pipeline&lt;/h3&gt; 
&lt;p&gt;Pipeline &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/pipeline.png" alt="Pipeline"&gt;&lt;/p&gt; 
&lt;p&gt;Function &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/function.png" alt="Function"&gt;&lt;/p&gt; 
&lt;h3&gt;IAM&lt;/h3&gt; 
&lt;p&gt;SSO (Single Sign On) &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/sso.png" alt="SSO"&gt;&lt;/p&gt; 
&lt;p&gt;RBAC (Role Based Access Control) &lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/iam_rbac.png" alt="RBAC"&gt;&lt;/p&gt; 
&lt;h3&gt;SBOM&lt;/h3&gt; 
&lt;p&gt;Software Bill of Materials for OpenObserve&lt;/p&gt; 
&lt;h4&gt;Rust&lt;/h4&gt; 
&lt;p&gt;SBOM can be found &lt;a href="https://raw.githubusercontent.com/openobserve/openobserve/main/openobserve.cdx.xml"&gt;here&lt;/a&gt;. You can analyze it using &lt;a href="https://dependencytrack.org/"&gt;dependency track&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In order to generate the SBOM, you can use the following commands:&lt;/p&gt; 
&lt;p&gt;Install cargo-cyclonedx:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cargo install cargo-cyclonedx
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Generate the SBOM:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cargo-cyclonedx cyclonedx
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;JavaScript&lt;/h4&gt; 
&lt;p&gt;SBOM can be found &lt;a href="https://raw.githubusercontent.com/openobserve/openobserve/main/web/sbom.json"&gt;here&lt;/a&gt;. You can analyze it using &lt;a href="https://dependencytrack.org/"&gt;dependency track&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In order to generate the SBOM, you can use the following commands:&lt;/p&gt; 
&lt;p&gt;Install cyclonedx-npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install --global @cyclonedx/cyclonedx-npm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Generate the SBOM:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd web
cyclonedx-npm &amp;gt; sbom.json         
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;⚖️ License&lt;/h2&gt; 
&lt;p&gt;OpenObserve is licensed under the AGPL-3.0 license. For more details, see the &lt;a href="https://github.com/openobserve/openobserve/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🌍 Community&lt;/h2&gt; 
&lt;h3&gt;🔗 Join OpenObserve community on Slack&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://short.openobserve.ai/community"&gt;&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/slack.png" alt="Slack"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Easiest way to get support is to join the &lt;a href="https://short.openobserve.ai/community"&gt;Slack channel&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;📱 Join OpenObserve community on WeChat&lt;/h3&gt; 
&lt;img src="https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/wechat_qr.jpg" width="300"&gt;</description>
    </item>
    
    <item>
      <title>tw93/Pake</title>
      <link>https://github.com/tw93/Pake</link>
      <description>&lt;p&gt;🤱🏻 Turn any webpage into a desktop app with Rust. 🤱🏻 利用 Rust 轻松构建轻量级多端桌面应用&lt;/p&gt;&lt;hr&gt;&lt;h4 align="right"&gt;&lt;strong&gt;English&lt;/strong&gt; | &lt;a href="https://github.com/tw93/Pake/raw/main/README_CN.md"&gt;简体中文&lt;/a&gt; | &lt;a href="https://github.com/tw93/Pake/raw/main/README_JP.md"&gt;日本語&lt;/a&gt;&lt;/h4&gt; 
&lt;p align="center"&gt; &lt;img src="https://gw.alipayobjects.com/zos/k/fa/logo-modified.png" width="138/"&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;Pake&lt;/h1&gt; 
&lt;p align="center"&gt;&lt;strong&gt;Turn any webpage into a desktop app with Rust &lt;em&gt;with ease&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://twitter.com/HiTw93" target="_blank"&gt; &lt;img alt="twitter" src="https://img.shields.io/badge/follow-Tw93-red?style=flat-square&amp;amp;logo=Twitter"&gt;&lt;/a&gt; 
 &lt;a href="https://t.me/+GclQS9ZnxyI2ODQ1" target="_blank"&gt; &lt;img alt="telegram" src="https://img.shields.io/badge/chat-telegram-blueviolet?style=flat-square&amp;amp;logo=Telegram"&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/tw93/Pake/releases" target="_blank"&gt; &lt;img alt="GitHub downloads" src="https://img.shields.io/github/downloads/tw93/Pake/total.svg?style=flat-square"&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/tw93/Pake/commits" target="_blank"&gt; &lt;img alt="GitHub commit" src="https://img.shields.io/github/commit-activity/m/tw93/Pake?style=flat-square"&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/tw93/Pake/issues?q=is%3Aissue+is%3Aclosed" target="_blank"&gt; &lt;img alt="GitHub closed issues" src="https://img.shields.io/github/issues-closed/tw93/Pake.svg?style=flat-square"&gt;&lt;/a&gt; 
 &lt;a href="https://colab.research.google.com/drive/1bX345znvDZ30848xjRtpgtU8eypWwXrp?usp=sharing" target="_blank"&gt; &lt;img alt="Open in Colab" src="https://colab.research.google.com/assets/colab-badge.svg?sanitize=true"&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="left"&gt;
 Pake supports Mac, Windows, and Linux. Check out README for 
 &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#popular-packages"&gt;Popular Packages&lt;/a&gt;, 
 &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#command-line-packaging"&gt;Command-Line Packaging&lt;/a&gt;, and 
 &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#development"&gt;Customized Development&lt;/a&gt; information. Feel free to share your suggestions in 
 &lt;a href="https://github.com/tw93/Pake/discussions"&gt;Discussions&lt;/a&gt;.
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎐 Nearly 20 times smaller than an Electron package (around 5M!)&lt;/li&gt; 
 &lt;li&gt;🚀 With Rust Tauri, Pake is much more lightweight and faster than JS-based frameworks.&lt;/li&gt; 
 &lt;li&gt;📦 Battery-included package — shortcut pass-through, immersive windows, and minimalist customization.&lt;/li&gt; 
 &lt;li&gt;👻 Pake is just a simple tool — replace the old bundle approach with Tauri (though PWA is good enough).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Popular Packages&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;WeRead &lt;a href="https://github.com/tw93/Pake/releases/latest/download/WeRead.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/WeRead_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/WeRead_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;Twitter &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Twitter.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Twitter_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Twitter_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/WeRead.jpg" width="600/"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/Twitter.jpg" width="600/"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Grok &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Grok.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Grok_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Grok_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;DeepSeek &lt;a href="https://github.com/tw93/Pake/releases/latest/download/DeepSeek.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/DeepSeek_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/DeepSeek_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/Grok.png" width="600/"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/DeepSeek.png" width="600/"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ChatGPT &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ChatGPT.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ChatGPT_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ChatGPT_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;Gemini &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Gemini.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Gemini_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Gemini_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/ChatGPT.png" width="600/"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/Gemini.png" width="600/"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;YouTube Music &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTubeMusic.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTubeMusic_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTubeMusic_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;YouTube &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTube.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTube_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTube_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/YouTubeMusic.png" width="600"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/YouTube.jpg" width="600"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LiZhi &lt;a href="https://github.com/tw93/Pake/releases/latest/download/LiZhi.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/LiZhi_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/LiZhi_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;ProgramMusic &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ProgramMusic.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ProgramMusic_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ProgramMusic_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/LiZhi.jpg" width="600/"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/ProgramMusic.jpg" width="600/"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Excalidraw &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Excalidraw.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Excalidraw_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Excalidraw_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;XiaoHongShu &lt;a href="https://github.com/tw93/Pake/releases/latest/download/XiaoHongShu.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/XiaoHongShu_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/XiaoHongShu_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/Excalidraw.png" width="600/"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/XiaoHongShu.png" width="600/"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;details&gt; 
 &lt;summary&gt;🏂 You can download more applications from &lt;a href="https://github.com/tw93/Pake/releases"&gt;Releases&lt;/a&gt;. &lt;b&gt;Click here to expand the shortcuts reference!&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Mac&lt;/th&gt; 
    &lt;th&gt;Windows/Linux&lt;/th&gt; 
    &lt;th&gt;Function&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;[&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;←&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Return to the previous page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;]&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Go to the next page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;↑&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;↑&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Auto scroll to top of page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;↓&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;↓&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Auto scroll to bottom of page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;r&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;r&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Refresh Page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;w&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;w&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Hide window, not quite&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;-&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;-&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Zoom out the page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;+&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;+&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Zoom in the page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;=&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;=&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Zoom in the Page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;0&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;0&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Reset the page zoom&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;In addition, double-click the title bar to switch to full-screen mode. For Mac users, you can also use the gesture to go to the previous or next page and drag the title bar to move the window.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Before starting&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;For beginners&lt;/strong&gt;: Play with Popular Packages to find out Pake's capabilities, or try to pack your application with &lt;a href="https://github.com/tw93/Pake/wiki/Online-Compilation-(used-by-ordinary-users)"&gt;GitHub Actions&lt;/a&gt;. Don't hesitate to reach for assistance at &lt;a href="https://github.com/tw93/Pake/discussions"&gt;Discussion&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;For developers&lt;/strong&gt;: “Command-Line Packaging” supports macOS fully. For Windows/Linux users, it requires some tinkering. &lt;a href="https://tauri.app/start/prerequisites/"&gt;Configure your environment&lt;/a&gt; before getting started.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;For hackers&lt;/strong&gt;: For people who are good at both front-end development and Rust, how about customizing your apps' function more with the following &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#development"&gt;Customized Development&lt;/a&gt;?&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Command-Line Packaging&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/pake.gif" alt="Pake"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Pake provides a command line tool, making the flow of package customization quicker and easier. See &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/bin/README.md"&gt;documentation&lt;/a&gt; for more information.&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install with npm
npm install -g pake-cli

# Command usage
pake url [OPTIONS]...

# Feel free to play with Pake! It might take a while to prepare the environment the first time you launch Pake.
pake https://weekly.tw93.fun --name Weekly --hide-title-bar

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are new to the command line, you can compile packages online with &lt;em&gt;GitHub Actions&lt;/em&gt;. See the &lt;a href="https://github.com/tw93/Pake/wiki/Online-Compilation-(used-by-ordinary-users)"&gt;Tutorial&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Prepare your environment before starting. Make sure you have Rust &lt;code&gt;&amp;gt;=1.63&lt;/code&gt; and Node &lt;code&gt;&amp;gt;=16&lt;/code&gt; (e.g., &lt;code&gt;16.18.1&lt;/code&gt;) installed on your computer. For installation guidance, see &lt;a href="https://tauri.app/start/prerequisites/"&gt;Tauri documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you are unfamiliar with these, it is better to try out the above tool to pack with one click.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Install Dependencies
npm i

# Local development [Right-click to open debug mode.]
npm run dev

# Pack application
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Advanced Usage&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;You can refer to the &lt;a href="https://github.com/tw93/Pake/wiki/Description-of-Pake's-code-structure"&gt;codebase structure&lt;/a&gt; before working on Pake, which will help you much in development.&lt;/li&gt; 
 &lt;li&gt;Modify the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;productName&lt;/code&gt; fields in the &lt;code&gt;pake.json&lt;/code&gt; file under the src-tauri directory, the "domain" field in the &lt;code&gt;tauri.config.json&lt;/code&gt; file needs to be modified synchronously, as well as the &lt;code&gt;icon&lt;/code&gt; and &lt;code&gt;identifier&lt;/code&gt; fields in the &lt;code&gt;tauri.xxx.conf.json&lt;/code&gt; file. You can select an &lt;code&gt;icon&lt;/code&gt; from the &lt;code&gt;icons&lt;/code&gt; directory or download one from &lt;a href="https://macosicons.com/#/"&gt;macOSicons&lt;/a&gt; to match your product needs.&lt;/li&gt; 
 &lt;li&gt;For configurations on window properties, you can modify the &lt;code&gt;pake.json&lt;/code&gt; file to change the value of &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;fullscreen&lt;/code&gt; (or not), &lt;code&gt;resizable&lt;/code&gt; (or not) of the &lt;code&gt;windows&lt;/code&gt; property. To adapt to the immersive header on Mac, change &lt;code&gt;hideTitleBar&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, look for the &lt;code&gt;Header&lt;/code&gt; element, and add the &lt;code&gt;padding-top&lt;/code&gt; property.&lt;/li&gt; 
 &lt;li&gt;For advanced usages such as style rewriting, advertisement removal, JS injection, container message communication, and user-defined shortcut keys, see &lt;a href="https://github.com/tw93/Pake/wiki/Advanced-Usage-of-Pake"&gt;Advanced Usage of Pake&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Developers&lt;/h2&gt; 
&lt;p&gt;Pake's development can not be without these Hackers. They contributed a lot of capabilities for Pake. Also, welcome to follow them! ❤️&lt;/p&gt; 
&lt;!-- readme: contributors -start --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/tw93"&gt; &lt;img src="https://avatars.githubusercontent.com/u/8736212?v=4" width="90;" alt="tw93"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Tw93&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Tlntin"&gt; &lt;img src="https://avatars.githubusercontent.com/u/28218658?v=4" width="90;" alt="Tlntin"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Tlntin&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/jeasonnow"&gt; &lt;img src="https://avatars.githubusercontent.com/u/16950207?v=4" width="90;" alt="jeasonnow"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Santree&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/pan93412"&gt; &lt;img src="https://avatars.githubusercontent.com/u/28441561?v=4" width="90;" alt="pan93412"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Pan93412&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/stone-w4tch3r"&gt; &lt;img src="https://avatars.githubusercontent.com/u/100294019?v=4" width="90;" alt="stone-w4tch3r"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Данил Бизимов&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/wanghanzhen"&gt; &lt;img src="https://avatars.githubusercontent.com/u/25301012?v=4" width="90;" alt="wanghanzhen"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Volare&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/liby"&gt; &lt;img src="https://avatars.githubusercontent.com/u/38807139?v=4" width="90;" alt="liby"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Bryan Lee&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/essesoul"&gt; &lt;img src="https://avatars.githubusercontent.com/u/58624474?v=4" width="90;" alt="essesoul"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Essesoul&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/YangguangZhou"&gt; &lt;img src="https://avatars.githubusercontent.com/u/61733195?v=4" width="90;" alt="YangguangZhou"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Jerry Zhou&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/AielloChan"&gt; &lt;img src="https://avatars.githubusercontent.com/u/7900765?v=4" width="90;" alt="AielloChan"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Aiello&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/m1911star"&gt; &lt;img src="https://avatars.githubusercontent.com/u/4948120?v=4" width="90;" alt="m1911star"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Horus&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Pake-Actions"&gt; &lt;img src="https://avatars.githubusercontent.com/u/126550811?v=4" width="90;" alt="Pake-Actions"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Pake Actions&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/GoodbyeNJN"&gt; &lt;img src="https://avatars.githubusercontent.com/u/6856639?v=4" width="90;" alt="GoodbyeNJN"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;GoodbyeNJN&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/mattbajorek"&gt; &lt;img src="https://avatars.githubusercontent.com/u/17235301?v=4" width="90;" alt="mattbajorek"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Matt Bajorek&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/QingZ11"&gt; &lt;img src="https://avatars.githubusercontent.com/u/38887077?v=4" width="90;" alt="QingZ11"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Steam&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Tianj0o"&gt; &lt;img src="https://avatars.githubusercontent.com/u/68584284?v=4" width="90;" alt="Tianj0o"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Qitianjia&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/xinyii"&gt; &lt;img src="https://avatars.githubusercontent.com/u/17895104?v=4" width="90;" alt="xinyii"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Yi Xin&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/exposir"&gt; &lt;img src="https://avatars.githubusercontent.com/u/33340988?v=4" width="90;" alt="exposir"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;孟世博&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/2nthony"&gt; &lt;img src="https://avatars.githubusercontent.com/u/19513289?v=4" width="90;" alt="2nthony"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;2nthony&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/ACGNnsj"&gt; &lt;img src="https://avatars.githubusercontent.com/u/22112141?v=4" width="90;" alt="ACGNnsj"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Null&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/imabutahersiddik"&gt; &lt;img src="https://avatars.githubusercontent.com/u/138387257?v=4" width="90;" alt="imabutahersiddik"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Abu Taher Siddik&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/kidylee"&gt; &lt;img src="https://avatars.githubusercontent.com/u/841310?v=4" width="90;" alt="kidylee"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;An Li&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/nekomeowww"&gt; &lt;img src="https://avatars.githubusercontent.com/u/11081491?v=4" width="90;" alt="nekomeowww"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Ayaka Neko&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/turkyden"&gt; &lt;img src="https://avatars.githubusercontent.com/u/24560160?v=4" width="90;" alt="turkyden"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Dengju Deng&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Fechin"&gt; &lt;img src="https://avatars.githubusercontent.com/u/2541482?v=4" width="90;" alt="Fechin"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Fechin&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/ImgBotApp"&gt; &lt;img src="https://avatars.githubusercontent.com/u/31427850?v=4" width="90;" alt="ImgBotApp"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Imgbot&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/droid-Q"&gt; &lt;img src="https://avatars.githubusercontent.com/u/708277?v=4" width="90;" alt="droid-Q"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Jiaqi Gu&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Milo123459"&gt; &lt;img src="https://avatars.githubusercontent.com/u/50248166?v=4" width="90;" alt="Milo123459"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Milo&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/princemaple"&gt; &lt;img src="https://avatars.githubusercontent.com/u/1329716?v=4" width="90;" alt="princemaple"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Po Chen&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/beautifulrem"&gt; &lt;img src="https://avatars.githubusercontent.com/u/98527099?v=4" width="90;" alt="beautifulrem"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Xie Ruiqi&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/bocanhcam"&gt; &lt;img src="https://avatars.githubusercontent.com/u/35592955?v=4" width="90;" alt="bocanhcam"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Null&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/geekvest"&gt; &lt;img src="https://avatars.githubusercontent.com/u/126322776?v=4" width="90;" alt="geekvest"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Null&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/houhoz"&gt; &lt;img src="https://avatars.githubusercontent.com/u/19684376?v=4" width="90;" alt="houhoz"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Hyzhao&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/lakca"&gt; &lt;img src="https://avatars.githubusercontent.com/u/16255922?v=4" width="90;" alt="lakca"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Null&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/liudonghua123"&gt; &lt;img src="https://avatars.githubusercontent.com/u/2276718?v=4" width="90;" alt="liudonghua123"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Liudonghua&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/liusishan"&gt; &lt;img src="https://avatars.githubusercontent.com/u/33129823?v=4" width="90;" alt="liusishan"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Liusishan&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/piaoyidage"&gt; &lt;img src="https://avatars.githubusercontent.com/u/5135405?v=4" width="90;" alt="piaoyidage"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Ranger&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/hetz"&gt; &lt;img src="https://avatars.githubusercontent.com/u/820141?v=4" width="90;" alt="hetz"&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;贺天卓&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- readme: contributors -end --&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Right-clicking on an image element in the page to open the menu and select download image or other events does not work (common in MacOS systems). This issue is due to the MacOS built-in webview not supporting this feature.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;I have two cats, TangYuan and Coke. If you think Pake delights your life, you can feed them &lt;a href="https://miaoyan.app/cats.html?name=Pake" target="_blank"&gt;some canned food 🥩&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you like Pake, you can star it on GitHub. Also, welcome to &lt;a href="https://twitter.com/intent/tweet?url=https://github.com/tw93/Pake&amp;amp;text=%23Pake%20-%20A%20simple%20Rust%20packaged%20web%20pages%20to%20generate%20Mac%20App%20tool,%20compared%20to%20traditional%20Electron%20package,%20the%20size%20of%20nearly%2040%20times%20smaller,%20generally%20about%202M,%20the%20underlying%20use%20of%20Tauri,%20performance%20experience%20than%20the%20JS%20framework%20is%20much%20lighter~"&gt;recommend Pake&lt;/a&gt; to your friends.&lt;/li&gt; 
 &lt;li&gt;You can follow my &lt;a href="https://twitter.com/HiTw93"&gt;Twitter&lt;/a&gt; to get the latest news of Pake or join our &lt;a href="https://t.me/+GclQS9ZnxyI2ODQ1"&gt;Telegram&lt;/a&gt; chat group.&lt;/li&gt; 
 &lt;li&gt;I hope that you enjoy playing with it. Let us know if you find a website that would be great for a Mac App!&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>LGUG2Z/komorebi</title>
      <link>https://github.com/LGUG2Z/komorebi</link>
      <description>&lt;p&gt;A tiling window manager for Windows 🍉&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;komorebi&lt;/h1&gt; 
&lt;p&gt;Tiling Window Management for Windows.&lt;/p&gt; 
&lt;p&gt; &lt;a href="https://techforpalestine.org/learn-more"&gt; &lt;img alt="Tech for Palestine" src="https://badge.techforpalestine.org/default"&gt; &lt;/a&gt; &lt;img alt="GitHub Workflow Status" src="https://img.shields.io/github/actions/workflow/status/LGUG2Z/komorebi/.github/workflows/windows.yaml"&gt; &lt;img alt="GitHub all releases" src="https://img.shields.io/github/downloads/LGUG2Z/komorebi/total"&gt; &lt;img alt="GitHub commits since latest release (by date) for a branch" src="https://img.shields.io/github/commits-since/LGUG2Z/komorebi/latest"&gt; &lt;img alt="Active Individual Commercial Use Licenses" src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Flgug2z-ecstaticmagentacheetah.web.val.run&amp;amp;query=%24.&amp;amp;label=active%20individual%20commercial%20use%20licenses&amp;amp;cacheSeconds=3600&amp;amp;link=https%3A%2F%2Flgug2z.com%2Fsoftware%2Fkomorebi"&gt; &lt;a href="https://discord.gg/mGkn66PHkx"&gt; &lt;img alt="Discord" src="https://img.shields.io/discord/898554690126630914"&gt; &lt;/a&gt; &lt;a href="https://github.com/sponsors/LGUG2Z"&gt; &lt;img alt="GitHub Sponsors" src="https://img.shields.io/github/sponsors/LGUG2Z"&gt; &lt;/a&gt; &lt;a href="https://ko-fi.com/lgug2z"&gt; &lt;img alt="Ko-fi" src="https://img.shields.io/badge/kofi-tip-green"&gt; &lt;/a&gt; &lt;a href="https://notado.app/feeds/jado/software-development"&gt; &lt;img alt="Notado Feed" src="https://img.shields.io/badge/Notado-Subscribe-informational"&gt; &lt;/a&gt; &lt;a href="https://www.youtube.com/channel/UCeai3-do-9O4MNy9_xjO6mg?sub_confirmation=1"&gt; &lt;img alt="YouTube" src="https://img.shields.io/youtube/channel/subscribers/UCeai3-do-9O4MNy9_xjO6mg"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/13164844/184027064-f5a6cec2-2865-4d65-a549-a1f1da589abf.png" alt="screenshot"&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;komorebi&lt;/em&gt; is a tiling window manager that works as an extension to Microsoft's &lt;a href="https://docs.microsoft.com/en-us/windows/win32/dwm/dwm-overview"&gt;Desktop Window Manager&lt;/a&gt; in Windows 10 and above.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;komorebi&lt;/em&gt; allows you to control application windows, virtual workspaces and display monitors with a CLI which can be used with third-party software such as &lt;a href="https://github.com/LGUG2Z/whkd"&gt;&lt;code&gt;whkd&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/Lexikos/AutoHotkey_L"&gt;AutoHotKey&lt;/a&gt; to set user-defined keyboard shortcuts.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;komorebi&lt;/em&gt; aims to make &lt;em&gt;as few modifications as possible&lt;/em&gt; to the operating system and desktop environment by default. Users are free to make such modifications in their own configuration files for &lt;em&gt;komorebi&lt;/em&gt;, but these will remain opt-in and off-by-default for the foreseeable future.&lt;/p&gt; 
&lt;p&gt;Please refer to the &lt;a href="https://lgug2z.github.io/komorebi"&gt;documentation&lt;/a&gt; for instructions on how to &lt;a href="https://lgug2z.github.io/komorebi/installation.html"&gt;install&lt;/a&gt; and &lt;a href="https://lgug2z.github.io/komorebi/example-configurations.html"&gt;configure&lt;/a&gt; &lt;em&gt;komorebi&lt;/em&gt;, &lt;a href="https://lgug2z.github.io/komorebi/common-workflows/komorebi-config-home.html"&gt;common workflows&lt;/a&gt;, a complete &lt;a href="https://komorebi.lgug2z.com/schema"&gt;configuration schema reference&lt;/a&gt; and a complete &lt;a href="https://lgug2z.github.io/komorebi/cli/quickstart.html"&gt;CLI reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;There is a &lt;a href="https://discord.gg/mGkn66PHkx"&gt;Discord server&lt;/a&gt; available for &lt;em&gt;komorebi&lt;/em&gt;-related discussion, help, troubleshooting etc. If you have any specific feature requests or bugs to report, please create an issue in this repository.&lt;/p&gt; 
&lt;p&gt;There is a &lt;a href="https://www.youtube.com/channel/UCeai3-do-9O4MNy9_xjO6mg"&gt;YouTube channel&lt;/a&gt; where I post &lt;em&gt;komorebi&lt;/em&gt; development videos, feature previews and release overviews. Subscribing to the channel (which is monetized as part of the YouTube Partner Program) and watching videos is a really simple and passive way to contribute financially to the development and maintenance of &lt;em&gt;komorebi&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;There is an &lt;a href="https://github.com/LGUG2Z/awesome-komorebi"&gt;Awesome List&lt;/a&gt; which showcases the many awesome projects that exist in the &lt;em&gt;komorebi&lt;/em&gt; ecosystem.&lt;/p&gt; 
&lt;h2&gt;Licensing for Personal Use&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;komorebi&lt;/code&gt; is &lt;a href="https://lgug2z.com/articles/educational-source-software/"&gt;educational source software&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;komorebi&lt;/code&gt; is licensed under the &lt;a href="https://github.com/LGUG2Z/komorebi-license"&gt;Komorebi 2.0.0 license&lt;/a&gt;, which is a fork of the &lt;a href="https://polyformproject.org/licenses/strict/1.0.0"&gt;PolyForm Strict 1.0.0 license&lt;/a&gt;. On a high level this means that you are free to do whatever you want with &lt;code&gt;komorebi&lt;/code&gt; for personal use other than redistribution, or distribution of new works (i.e. hard-forks) based on the software.&lt;/p&gt; 
&lt;p&gt;Anyone is free to make their own fork of &lt;code&gt;komorebi&lt;/code&gt; with changes intended either for personal use or for integration back upstream via pull requests.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://github.com/LGUG2Z/komorebi-license"&gt;Komorebi 2.0.0 License&lt;/a&gt; does not permit any kind of commercial use (i.e. using &lt;code&gt;komorebi&lt;/code&gt; at work).&lt;/p&gt; 
&lt;h2&gt;Sponsorship for Personal Use&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;komorebi&lt;/em&gt; is a free and educational source project, and one that encourages you to make charitable donations if you find the software to be useful and have the financial means.&lt;/p&gt; 
&lt;p&gt;I encourage you to make a charitable donation to the &lt;a href="https://pcrf1.app.neoncrm.com/forms/gaza-recovery"&gt;Palestine Children's Relief Fund&lt;/a&gt; or to contribute to a &lt;a href="https://gazafunds.com"&gt;Gaza Funds campaign&lt;/a&gt; before you consider sponsoring me on GitHub.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/LGUG2Z"&gt;GitHub Sponsors is enabled for this project&lt;/a&gt;. Sponsors can claim custom roles on the Discord server, get shout outs at the end of &lt;em&gt;komorebi&lt;/em&gt;-related videos on YouTube, gain the ability to submit feature requests on the issue tracker, and receive releases of komorebi with "easter eggs" on physical media.&lt;/p&gt; 
&lt;p&gt;If you would like to tip or sponsor the project but are unable to use GitHub Sponsors, you may also sponsor through &lt;a href="https://ko-fi.com/lgug2z"&gt;Ko-fi&lt;/a&gt;, or make an anonymous Bitcoin donation to &lt;code&gt;bc1qv73wzspc77k46uty4vp85x8sdp24mphvm58f6q&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Licensing for Commercial Use&lt;/h2&gt; 
&lt;p&gt;A dedicated Individual Commercial Use License is available for those who want to use &lt;code&gt;komorebi&lt;/code&gt; at work.&lt;/p&gt; 
&lt;p&gt;The Individual Commerical Use License adds “Commercial Use” as a “Permitted Use” for the licensed individual only, for the duration of a valid paid license subscription only. All provisions and restrictions enumerated in the &lt;a href="https://github.com/LGUG2Z/komorebi-license"&gt;Komorebi License&lt;/a&gt; continue to apply.&lt;/p&gt; 
&lt;p&gt;More information, pricing and purchase links for Individual Commercial Use Licenses &lt;a href="https://lgug2z.com/software/komorebi"&gt;can be found here&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;A &lt;a href="https://lgug2z.github.io/komorebi/installation.html"&gt;detailed installation and quickstart guide&lt;/a&gt; is available which shows how to get started using &lt;code&gt;scoop&lt;/code&gt;, &lt;code&gt;winget&lt;/code&gt; or building from source.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=MMZUAtHbTYY"&gt;&lt;img src="https://img.youtube.com/vi/MMZUAtHbTYY/hqdefault.jpg" alt="Watch the quickstart walkthrough video"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Comparison With Fancy Zones&lt;/h1&gt; 
&lt;p&gt;Community member &lt;a href="https://www.youtube.com/@polle5555"&gt;Olge&lt;/a&gt; has created an excellent video which compares the default window management features of Windows 11, Fancy Zones and komorebi.&lt;/p&gt; 
&lt;p&gt;If you are not familiar with tiling window managers or if you are looking at komorebi and wondering "how is this different from Fancy Zones? 🤔", this short video will answer the majority of your questions.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=0LCbS_gm0RA"&gt;&lt;img src="https://img.youtube.com/vi/0LCbS_gm0RA/hqdefault.jpg" alt="Watch the comparison video"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Demonstrations&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/amnweb"&gt;@amnweb&lt;/a&gt; showing &lt;em&gt;komorebi&lt;/em&gt; &lt;code&gt;v0.1.28&lt;/code&gt; running on Windows 11 with window borders, unfocused window transparency and animations enabled, using a custom status bar integrated using &lt;em&gt;komorebi&lt;/em&gt;' s &lt;a href="https://github.com/LGUG2Z/komorebi?tab=readme-ov-file#window-manager-event-subscriptions"&gt;Window Manager Event Subscriptions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/LGUG2Z/komorebi/assets/13164844/21be8dc4-fa76-4f70-9b37-1d316f4b40c2"&gt;https://github.com/LGUG2Z/komorebi/assets/13164844/21be8dc4-fa76-4f70-9b37-1d316f4b40c2&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/haxibami"&gt;@haxibami&lt;/a&gt; showing &lt;em&gt;komorebi&lt;/em&gt; running on Windows 11 with a terminal emulator, a web browser and a code editor. The original video can be viewed &lt;a href="https://twitter.com/haxibami/status/1501560766578659332"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/13164844/163496447-20c3ff0a-c5d8-40d1-9cc8-156c4cebf12e.mp4"&gt;https://user-images.githubusercontent.com/13164844/163496447-20c3ff0a-c5d8-40d1-9cc8-156c4cebf12e.mp4&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/aik2mlj"&gt;@aik2mlj&lt;/a&gt; showing &lt;em&gt;komorebi&lt;/em&gt; running on Windows 11 with multiple workspaces, terminal emulators, a web browser, and the &lt;a href="https://github.com/DenBot/yasb"&gt;yasb&lt;/a&gt; status bar with the &lt;em&gt;komorebi&lt;/em&gt; workspace widget enabled. The original video can be viewed &lt;a href="https://zhuanlan.zhihu.com/p/455064481"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/13164844/163496414-a9cde3d1-b8a7-4a7a-96fb-a8985380bc70.mp4"&gt;https://user-images.githubusercontent.com/13164844/163496414-a9cde3d1-b8a7-4a7a-96fb-a8985380bc70.mp4&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Contribution Guidelines&lt;/h1&gt; 
&lt;p&gt;If you would like to contribute to &lt;code&gt;komorebi&lt;/code&gt; please take the time to carefully read the guidelines below.&lt;/p&gt; 
&lt;p&gt;Please see &lt;a href="https://raw.githubusercontent.com/LGUG2Z/komorebi/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information about how code contributions to &lt;code&gt;komorebi&lt;/code&gt; are licensed.&lt;/p&gt; 
&lt;h2&gt;Commit hygiene&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Flatten all &lt;code&gt;use&lt;/code&gt; statements&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;cargo +stable clippy&lt;/code&gt; and ensure that all lints and suggestions have been addressed before committing&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;cargo +nightly fmt --all&lt;/code&gt; to ensure consistent formatting before committing&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;git cz&lt;/code&gt; with the &lt;a href="https://github.com/commitizen/cz-cli#conventional-commit-messages-as-a-global-utility"&gt;Commitizen CLI&lt;/a&gt; to prepare commit messages&lt;/li&gt; 
 &lt;li&gt;Provide &lt;strong&gt;at least&lt;/strong&gt; one short sentence or paragraph in your commit message body to describe your thought process for the changes being committed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;PRs should contain only a single feature or bug fix&lt;/h2&gt; 
&lt;p&gt;It is very difficult to review pull requests which touch multiple unrelated features and parts of the codebase.&lt;/p&gt; 
&lt;p&gt;Please do not submit pull requests like this; you will be asked to separate them into smaller PRs that deal only with one feature or bug fix at a time.&lt;/p&gt; 
&lt;p&gt;If you are working on multiple features and bug fixes, I suggest that you cut a branch called &lt;code&gt;local-trunk&lt;/code&gt; from &lt;code&gt;master&lt;/code&gt; which you keep up to date, and rebase the various independent branches you are working on onto that branch if you want to test them together or create a build with everything integrated.&lt;/p&gt; 
&lt;h2&gt;Refactors to the codebase must have prior approval&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;komorebi&lt;/code&gt; is a mature codebase with an internal consistency and structure that has developed organically over close to half a decade.&lt;/p&gt; 
&lt;p&gt;There are &lt;a href="https://youtube.com/@LGUG2Z"&gt;countless hours of live coding videos&lt;/a&gt; demonstrating work on this project and showing new contributors how to do everything from basic tasks like implementing new &lt;code&gt;komorebic&lt;/code&gt; commands to distinguishing monitors by manufacturer hardware identifiers and video card ports.&lt;/p&gt; 
&lt;p&gt;Refactors to the structure of the codebase are not taken lightly and require prior discussion and approval.&lt;/p&gt; 
&lt;p&gt;Please do not start refactoring the codebase with the expectation of having your changes integrated until you receive an explicit approval or a request to do so.&lt;/p&gt; 
&lt;p&gt;Similarly, when implementing features and bug fixes, please stick to the structure of the codebase as much as possible and do not take this as an opportunity to do some "refactoring along the way".&lt;/p&gt; 
&lt;p&gt;It is extremely difficult to review PRs for features and bug fixes if they are lost in sweeping changes to the structure of the codebase.&lt;/p&gt; 
&lt;h2&gt;Breaking changes to user-facing interfaces are unacceptable&lt;/h2&gt; 
&lt;p&gt;This includes but is not limited to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All &lt;code&gt;komorebic&lt;/code&gt; commands&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;komorebi.json&lt;/code&gt; schema&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://github.com/LGUG2Z/komorebi-application-specific-configuration"&gt; &lt;code&gt;komorebi-application-specific-configuration&lt;/code&gt;&lt;/a&gt; schema&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;No user should ever find that their configuration file has stopped working after upgrading to a new version of &lt;code&gt;komorebi&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;More often than not there are ways to reformulate changes that may initially seem like they require breaking user-facing interfaces into additive changes.&lt;/p&gt; 
&lt;p&gt;For some inspiration please take a look at &lt;a href="https://github.com/LGUG2Z/komorebi/commit/e7d928a065eb63bb4ea1fb864c69c1cae8cc763b"&gt;this commit&lt;/a&gt; which added the ability for users to specify colours in &lt;code&gt;komorebi.json&lt;/code&gt; in Hex format alongside RGB.&lt;/p&gt; 
&lt;p&gt;There is also a process in place for graceful, non-breaking, deprecation of configuration options that are no longer required.&lt;/p&gt; 
&lt;h1&gt;Development&lt;/h1&gt; 
&lt;p&gt;If you use IntelliJ, you should enable the following settings to ensure that code generated by macros is recognised by the IDE for completions and navigation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set &lt;code&gt;Expand declarative macros&lt;/code&gt; to &lt;code&gt;Use new engine&lt;/code&gt; under "Settings &amp;gt; Langauges &amp;amp; Frameworks &amp;gt; Rust"&lt;/li&gt; 
 &lt;li&gt;Enable the following experimental features: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;org.rust.cargo.evaluate.build.scripts&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;org.rust.macros.proc&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Logs and Debugging&lt;/h1&gt; 
&lt;p&gt;Logs from &lt;code&gt;komorebi&lt;/code&gt; will be appended to &lt;code&gt;%LOCALAPPDATA%/komorebi/komorebi.log&lt;/code&gt;; this file is never rotated or overwritten, so it will keep growing until it is deleted by the user.&lt;/p&gt; 
&lt;p&gt;Whenever running the &lt;code&gt;komorebic stop&lt;/code&gt; command or sending a Ctrl-C signal to &lt;code&gt;komorebi&lt;/code&gt; directly, the &lt;code&gt;komorebi&lt;/code&gt; process ensures that all hidden windows are restored before termination.&lt;/p&gt; 
&lt;p&gt;If however, you ever end up with windows that are hidden and cannot be restored, a list of window handles known to &lt;code&gt;komorebi&lt;/code&gt; are stored and continuously updated in &lt;code&gt;%LOCALAPPDATA%/komorebi//komorebi.hwnd.json&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Restoring Windows&lt;/h2&gt; 
&lt;p&gt;Running &lt;code&gt;komorebic restore-windows&lt;/code&gt; will read the list of window handles and forcibly restore them, regardless of whether the main &lt;code&gt;komorebi&lt;/code&gt; process is running.&lt;/p&gt; 
&lt;h2&gt;Panics and Deadlocks&lt;/h2&gt; 
&lt;p&gt;If &lt;code&gt;komorebi&lt;/code&gt; ever stops responding, it is most likely either due to either a panic or a deadlock. In the case of a panic, this will be reported in the log. In the case of a deadlock, there will not be any errors in the log, but the process and the log will appear frozen.&lt;/p&gt; 
&lt;p&gt;If you believe you have encountered a deadlock, you can compile &lt;code&gt;komorebi&lt;/code&gt; with &lt;code&gt;--features deadlock_detection&lt;/code&gt; and try reproducing the deadlock again. This will check for deadlocks every 5 seconds in the background, and if a deadlock is found, information about it will appear in the log which can be shared when opening an issue.&lt;/p&gt; 
&lt;h1&gt;Window Manager State and Integrations&lt;/h1&gt; 
&lt;p&gt;The current state of the window manager can be queried using the &lt;code&gt;komorebic state&lt;/code&gt; command, which returns a JSON representation of the &lt;code&gt;State&lt;/code&gt; struct.&lt;/p&gt; 
&lt;p&gt;This may also be polled to build further integrations and widgets on top of.&lt;/p&gt; 
&lt;h1&gt;Window Manager Event Subscriptions&lt;/h1&gt; 
&lt;h2&gt;Named Pipes&lt;/h2&gt; 
&lt;p&gt;It is possible to subscribe to notifications of every &lt;code&gt;WindowManagerEvent&lt;/code&gt; and &lt;code&gt;SocketMessage&lt;/code&gt; handled by &lt;code&gt;komorebi&lt;/code&gt; using &lt;a href="https://docs.microsoft.com/en-us/windows/win32/ipc/named-pipes"&gt;Named Pipes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;First, your application must create a named pipe. Once the named pipe has been created, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;komorebic.exe subscribe-pipe &amp;lt;your pipe name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that you do not have to include the full path of the named pipe, just the name.&lt;/p&gt; 
&lt;p&gt;If the named pipe exists, &lt;code&gt;komorebi&lt;/code&gt; will start pushing JSON data of successfully handled events and messages:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{"event":{"type":"AddSubscriber","content":"yasb"},"state":{}}
{"event":{"type":"FocusWindow","content":"Left"},"state":{}}
{"event":{"type":"FocusChange","content":["SystemForeground",{"hwnd":131444,"title":"komorebi – README.md","exe":"idea64.exe","class":"SunAwtFrame","rect":{"left":13,"top":60,"right":1520,"bottom":1655}}]},"state":{}}
{"event":{"type":"MonitorPoll","content":["ObjectCreate",{"hwnd":5572450,"title":"OLEChannelWnd","exe":"explorer.exe","class":"OleMainThreadWndClass","rect":{"left":0,"top":0,"right":0,"bottom":0}}]},"state":{}}
{"event":{"type":"FocusWindow","content":"Right"},"state":{}}
{"event":{"type":"FocusChange","content":["SystemForeground",{"hwnd":132968,"title":"Windows PowerShell","exe":"WindowsTerminal.exe","class":"CASCADIA_HOSTING_WINDOW_CLASS","rect":{"left":1539,"top":60,"right":1520,"bottom":821}}]},"state":{}}
{"event":{"type":"FocusWindow","content":"Down"},"state":{}}
{"event":{"type":"FocusChange","content":["SystemForeground",{"hwnd":329264,"title":"den — Mozilla Firefox","exe":"firefox.exe","class":"MozillaWindowClass","rect":{"left":1539,"top":894,"right":1520,"bottom":821}}]},"state":{}}
{"event":{"type":"FocusWindow","content":"Up"},"state":{}}
{"event":{"type":"FocusChange","content":["SystemForeground",{"hwnd":132968,"title":"Windows PowerShell","exe":"WindowsTerminal.exe","class":"CASCADIA_HOSTING_WINDOW_CLASS","rect":{"left":1539,"top":60,"right":1520,"bottom":821}}]},"state":{}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may then filter on the &lt;code&gt;type&lt;/code&gt; key to listen to the events that you are interested in. For a full list of possible notification types, refer to the enum variants of &lt;code&gt;WindowManagerEvent&lt;/code&gt; in &lt;code&gt;komorebi&lt;/code&gt; and &lt;code&gt;SocketMessage&lt;/code&gt; in &lt;code&gt;komorebi::core&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Below is an example of how you can subscribe to and filter on events using a named pipe in &lt;code&gt;nodejs&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const { exec } = require("child_process");
const net = require("net");

const pipeName = "\\\\.\\pipe\\komorebi-js";
const server = net.createServer((stream) =&amp;gt; {
  console.log("Client connected");

  // Every time there is a workspace-related event, let's log the names of all
  // workspaces on the currently focused monitor, and then log the name of the
  // currently focused workspace on that monitor

  stream.on("data", (data) =&amp;gt; {
    let json = JSON.parse(data.toString());
    let event = json.event;

    if (event.type.includes("Workspace")) {
      let monitors = json.state.monitors;
      let current_monitor = monitors.elements[monitors.focused];
      let workspaces = monitors.elements[monitors.focused].workspaces;
      let current_workspace = workspaces.elements[workspaces.focused];

      console.log(
        workspaces.elements
          .map((workspace) =&amp;gt; workspace.name)
          .filter((name) =&amp;gt; name !== null)
      );
      console.log(current_workspace.name);
    }
  });

  stream.on("end", () =&amp;gt; {
    console.log("Client disconnected");
  });
});

server.listen(pipeName, () =&amp;gt; {
  console.log("Named pipe server listening");
});

const command = "komorebic subscribe-pipe komorebi-js";

exec(command, (error, stdout, stderr) =&amp;gt; {
  if (error) {
    console.error(`Error executing command: ${error}`);
    return;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Unix Domain Sockets&lt;/h2&gt; 
&lt;p&gt;It is possible to subscribe to notifications of every &lt;code&gt;WindowManagerEvent&lt;/code&gt; and &lt;code&gt;SocketMessage&lt;/code&gt; handled by &lt;code&gt;komorebi&lt;/code&gt; using &lt;a href="https://devblogs.microsoft.com/commandline/af_unix-comes-to-windows/"&gt;Unix Domain Sockets&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;UDS are also the only mode of communication between &lt;code&gt;komorebi&lt;/code&gt; and &lt;code&gt;komorebic&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;First, your application must create a socket in &lt;code&gt;$ENV:LocalAppData\komorebi&lt;/code&gt;. Once the socket has been created, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;komorebic.exe subscribe-socket &amp;lt;your socket name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the socket exists, komorebi will start pushing JSON data of successfully handled events and messages as in the example above in the Named Pipes section.&lt;/p&gt; 
&lt;h2&gt;Rust Client&lt;/h2&gt; 
&lt;p&gt;As of &lt;code&gt;v0.1.22&lt;/code&gt; it is possible to use the &lt;code&gt;komorebi-client&lt;/code&gt; crate to subscribe to notifications of every &lt;code&gt;WindowManagerEvent&lt;/code&gt; and &lt;code&gt;SocketMessage&lt;/code&gt; handled by &lt;code&gt;komorebi&lt;/code&gt; in a Rust codebase.&lt;/p&gt; 
&lt;p&gt;Below is a simple example of how to use &lt;code&gt;komorebi-client&lt;/code&gt; in a basic Rust application.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;// komorebi-client = { git = "https://github.com/LGUG2Z/komorebi", tag = "v0.1.37"}

use anyhow::Result;
use komorebi_client::Notification;
use komorebi_client::NotificationEvent;
use komorebi_client::UnixListener;
use komorebi_client::WindowManagerEvent;
use std::io::BufRead;
use std::io::BufReader;
use std::io::Read;

pub fn main() -&amp;gt; anyhow::Result&amp;lt;()&amp;gt; {
  let socket = komorebi_client::subscribe(NAME)?;

  for incoming in socket.incoming() {
    match incoming {
      Ok(data) =&amp;gt; {
        let reader = BufReader::new(data.try_clone()?);

        for line in reader.lines().flatten() {
          let notification: Notification = match serde_json::from_str(&amp;amp;line) {
            Ok(notification) =&amp;gt; notification,
            Err(error) =&amp;gt; {
              log::debug!("discarding malformed komorebi notification: {error}");
              continue;
            }
          };

          // match and filter on desired notifications
        }
      }
      Err(error) =&amp;gt; {
        log::debug!("{error}");
      }
    }
  }

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A read-world example can be found in &lt;a href="https://github.com/LGUG2Z/komokana/raw/feature/komorebi-uds/src/main.rs"&gt;komokana&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Subscription Event Notification Schema&lt;/h2&gt; 
&lt;p&gt;A &lt;a href="https://json-schema.org/"&gt;JSON Schema&lt;/a&gt; of the event notifications emitted to subscribers can be generated with the &lt;code&gt;komorebic notification-schema&lt;/code&gt; command. The output of this command can be redirected to the clipboard or a file, which can be used with services such as &lt;a href="https://app.quicktype.io/"&gt;Quicktype&lt;/a&gt; to generate type definitions in different programming languages.&lt;/p&gt; 
&lt;h2&gt;Communication over TCP&lt;/h2&gt; 
&lt;p&gt;A TCP listener can optionally be exposed on a port of your choosing with the &lt;code&gt;--tcp-port=N&lt;/code&gt; flag. If this flag is not provided to &lt;code&gt;komorebi&lt;/code&gt; or &lt;code&gt;komorebic start&lt;/code&gt;, no TCP listener will be created.&lt;/p&gt; 
&lt;p&gt;Once created, your client may send any &lt;a href="https://github.com/LGUG2Z/komorebi/raw/master/komorebi/src/core/mod.rs#L37"&gt;SocketMessage&lt;/a&gt; to &lt;code&gt;komorebi&lt;/code&gt; in the same way that &lt;code&gt;komorebic&lt;/code&gt; would.&lt;/p&gt; 
&lt;p&gt;This can be used if you would like to create your own alternative to &lt;code&gt;komorebic&lt;/code&gt; which incorporates scripting and various middleware layers, and similarly it can be used if you would like to integrate &lt;code&gt;komorebi&lt;/code&gt; with a &lt;a href="https://github.com/LGUG2Z/komorebi/issues/176#issue-1302643961"&gt;custom input handler&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If a client sends an unrecognized message, it will be disconnected and have to reconnect before trying to communicate again.&lt;/p&gt; 
&lt;h2&gt;Socket Message Schema&lt;/h2&gt; 
&lt;p&gt;A &lt;a href="https://json-schema.org/"&gt;JSON Schema&lt;/a&gt; of socket messages used to send instructions to &lt;code&gt;komorebi&lt;/code&gt; can be generated with the &lt;code&gt;komorebic socket-schema&lt;/code&gt; command. The output of this command can be redirected to the clipboard or a file, which can be used with services such as &lt;a href="https://app.quicktype.io/"&gt;Quicktype&lt;/a&gt; to generate type definitions in different programming languages.&lt;/p&gt; 
&lt;h1&gt;Appreciations&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;First and foremost, thank you to my wife, both for naming this project and for her patience throughout its never-ending development&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Thank you to &lt;a href="https://github.com/sitiom"&gt;@sitiom&lt;/a&gt; for being &lt;a href="https://jeezy.substack.com/p/the-open-source-contributions-i-appreciate"&gt;an exemplary open source community leader&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Thank you to the developers of &lt;a href="https://github.com/TimUntersberger/nog"&gt;nog&lt;/a&gt; who came before me and whose work taught me more than I can ever hope to repay&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Thank you to the developers of &lt;a href="https://github.com/lars-berger/GlazeWM"&gt;GlazeWM&lt;/a&gt; for pushing the boundaries of tiling window management on Windows with me and having an excellent spirit of collaboration&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Thank you to &lt;a href="https://github.com/Ciantic"&gt;@Ciantic&lt;/a&gt; for helping me bring the &lt;a href="https://github.com/Ciantic/AltTabAccessor/issues/1"&gt;hidden Virtual Desktops cloaking function&lt;/a&gt; to &lt;code&gt;komorebi&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>0xPlaygrounds/rig</title>
      <link>https://github.com/0xPlaygrounds/rig</link>
      <description>&lt;p&gt;⚙️🦀 Build portable, modular &amp; lightweight Fullstack Agents&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="img/rig-playgrounds-dark.svg"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="img/rig-playgrounds-light.svg"&gt; 
  &lt;img src="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/img/rig-playgrounds-light.svg?sanitize=true" style="width: 40%; height: 40%;" alt="Rig logo"&gt; 
 &lt;/picture&gt; &lt;br&gt; &lt;a href="https://docs.rig.rs"&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%93%96%20docs-rig.rs-dca282.svg?sanitize=true"&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://docs.rs/rig-core/latest/rig/"&gt;&lt;img src="https://img.shields.io/badge/docs-API%20Reference-dca282.svg?sanitize=true"&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://crates.io/crates/rig-core"&gt;&lt;img src="https://img.shields.io/crates/v/rig-core.svg?color=dca282"&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://crates.io/crates/rig-core"&gt;&lt;img src="https://img.shields.io/crates/d/rig-core.svg?color=dca282"&gt;&lt;/a&gt; &lt;br&gt; &lt;a href="https://discord.gg/playgrounds"&gt;&lt;img src="https://img.shields.io/discord/511303648119226382?color=%236d82cc&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white"&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/0xPlaygrounds/rig"&gt;&lt;img src="https://img.shields.io/github/stars/0xPlaygrounds/rig?style=social" alt="stars - rig"&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=""&gt;&lt;img src="https://img.shields.io/badge/built_with-Rust-dca282.svg?logo=rust"&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://twitter.com/Playgrounds0x"&gt;&lt;img src="https://img.shields.io/twitter/follow/Playgrounds0x"&gt;&lt;/a&gt; &amp;nbsp; &lt;br&gt; &lt;/p&gt; &amp;nbsp; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://docs.rig.rs"&gt;📑 Docs&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href="https://rig.rs"&gt;🌐 Website&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href="https://github.com/0xPlaygrounds/rig/issues/new"&gt;🤝 Contribute&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href="https://docs.rig.rs/guides"&gt;✍🏽 Blogs&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;✨ If you would like to help spread the word about Rig, please consider starring the repo!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Here be dragons! As we plan to ship a torrent of features in the following months, future updates &lt;strong&gt;will&lt;/strong&gt; contain &lt;strong&gt;breaking changes&lt;/strong&gt;. With Rig evolving, we'll annotate changes and highlight migration paths as we encounter them.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#table-of-contents"&gt;Table of contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#what-is-rig"&gt;What is Rig?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#high-level-features"&gt;High-level features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#who-is-using-rig-in-production"&gt;Who's using Rig in production?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#get-started"&gt;Get Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#simple-example"&gt;Simple example:&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#integrations"&gt;Integrations&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What is Rig?&lt;/h2&gt; 
&lt;p&gt;Rig is a Rust library for building scalable, modular, and ergonomic &lt;strong&gt;LLM-powered&lt;/strong&gt; applications.&lt;/p&gt; 
&lt;p&gt;More information about this crate can be found in the &lt;a href="https://docs.rig.rs"&gt;official&lt;/a&gt; &amp;amp; &lt;a href="https://docs.rs/rig-core/latest/rig/"&gt;crate&lt;/a&gt; (API Reference) documentations.&lt;/p&gt; 
&lt;h2&gt;High-level features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Full support for LLM completion and embedding workflows&lt;/li&gt; 
 &lt;li&gt;Simple but powerful common abstractions over LLM providers (e.g. OpenAI, Cohere) and vector stores (e.g. MongoDB, SQlite, in-memory)&lt;/li&gt; 
 &lt;li&gt;Integrate LLMs in your app with minimal boilerplate&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Who is using Rig in production?&lt;/h2&gt; 
&lt;p&gt;Below is a non-exhaustive list of companies and people who are using Rig in production:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/firstbatchxyz/dkn-compute-node"&gt;Dria Compute Node&lt;/a&gt; - a node that serves computation results within the Dria Knowledge Network&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/modelcontextprotocol/rust-sdk"&gt;The MCP Rust SDK&lt;/a&gt; - the official Model Context Protocol Rust SDK. Has an example for usage with Rig.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/buger/probe"&gt;Probe&lt;/a&gt; - an AI-friendly, fully local semantic code search tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NethermindEth/nine"&gt;NINE&lt;/a&gt; - Neural Interconnected Nodes Engine, by &lt;a href="https://www.nethermind.io/"&gt;Nethermind.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/0xPlaygrounds/rig-onchain-kit"&gt;rig-onchain-kit&lt;/a&gt; - the Rig Onchain Kit. Intended to make interactions between Solana/EVM and Rig much easier to implement.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linera-io/linera-protocol"&gt;Linera Protocol&lt;/a&gt; - Decentralized blockchain infrastructure designed for highly scalable, secure, low-latency Web3 applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/piotrostr/listen"&gt;Listen&lt;/a&gt; - A framework aiming to become the go-to framework for AI portfolio management agents. Powers &lt;a href="https://app.listen-rs.com/"&gt;the Listen app.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Are you also using Rig in production? &lt;a href="https://www.github.com/0xPlaygrounds/rig/issues"&gt;Open an issue&lt;/a&gt; to have your name added!&lt;/p&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cargo add rig-core
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Simple example:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;use rig::{completion::Prompt, providers::openai};

#[tokio::main]
async fn main() {
    // Create OpenAI client and model
    // This requires the `OPENAI_API_KEY` environment variable to be set.
    let openai_client = openai::Client::from_env();

    let gpt4 = openai_client.agent("gpt-4").build();

    // Prompt the model and print its response
    let response = gpt4
        .prompt("Who are you?")
        .await
        .expect("Failed to prompt GPT-4");

    println!("GPT-4: {response}");
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note using &lt;code&gt;#[tokio::main]&lt;/code&gt; requires you enable tokio's &lt;code&gt;macros&lt;/code&gt; and &lt;code&gt;rt-multi-thread&lt;/code&gt; features or just &lt;code&gt;full&lt;/code&gt; to enable all features (&lt;code&gt;cargo add tokio --features macros,rt-multi-thread&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;You can find more examples each crate's &lt;code&gt;examples&lt;/code&gt; (ie. &lt;a href="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/rig-core/examples"&gt;&lt;code&gt;rig-core/examples&lt;/code&gt;&lt;/a&gt;) directory. More detailed use cases walkthroughs are regularly published on our &lt;a href="https://dev.to/0thtachi"&gt;Dev.to Blog&lt;/a&gt; and added to Rig's official documentation &lt;a href="http://docs.rig.rs"&gt;(docs.rig.rs)&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported Integrations&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Model Providers&lt;/th&gt; 
   &lt;th align="center"&gt;Vector Stores&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;br&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/ChatGPT_logo.svg/1024px-ChatGPT_logo.svg.png" alt="ChatGPT logo" width="50em"&gt; 
    &lt;picture&gt;
     &lt;source media="(prefers-color-scheme: dark)" srcset="https://www.fahimai.com/wp-content/uploads/2024/06/Untitled-design-7.png"&gt;
     &lt;source media="(prefers-color-scheme: light)" srcset="https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Claude_AI_logo.svg/1024px-Claude_AI_logo.svg.png"&gt;
     &lt;img src="https://www.fahimai.com/wp-content/uploads/2024/06/Untitled-design-7.png" alt="Claude Anthropic logo" width="50em"&gt;
    &lt;/picture&gt; &lt;br&gt; &lt;img src="https://logospng.org/download/google-gemini/google-gemini-1024.png" style="background-color: white; border-radius: 10px; padding: 5px 5px ; width: 3em;" alt="Gemini logo"&gt; &lt;br&gt; &lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/XAI-Logo.svg/512px-XAI-Logo.svg.png?20240912222841" style="background-color: white; border-radius: 10px; padding: 5px 5px ; width: 3em;" alt="xAI logo"&gt; &lt;img src="https://github.com/user-attachments/assets/4763ae96-ddc9-4f69-ab38-23592e6c4ead" style="background-color: white; border-radius: 10px; padding: 5px 0px ; width: 4em;" alt="perplexity logo"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;br&gt;&lt;img src="https://cdn.prod.website-files.com/6640cd28f51f13175e577c05/664e00a400e23f104ed2b6cd_3b3dd6e8-8a73-5879-84a9-a42d5b910c74.svg?sanitize=true" alt="Mongo DB logo" width="50em"&gt; &lt;img src="https://upload.wikimedia.org/wikipedia/commons/e/e5/Neo4j-logo_color.png" alt="Neo4j logo" style="background-color: white; border-radius: 1em; padding: 1em 1em ; width: 4em;"&gt;&lt;br&gt;&lt;br&gt;&lt;img src="https://cdn-images-1.medium.com/max/844/1*Jp6VwF0OcdeyRyW0Ln0RMQ@2x.png" width="100em" alt="Lance DB logo"&gt; &lt;br&gt; &lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/38/SQLite370.svg/440px-SQLite370.svg.png" style="width: 6em"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Vector stores are available as separate companion-crates:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MongoDB vector store: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-mongodb"&gt;&lt;code&gt;rig-mongodb&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;LanceDB vector store: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-lancedb"&gt;&lt;code&gt;rig-lancedb&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Neo4j vector store: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-neo4j"&gt;&lt;code&gt;rig-neo4j&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Qdrant vector store: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-qdrant"&gt;&lt;code&gt;rig-qdrant&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SQLite vector store: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-sqlite"&gt;&lt;code&gt;rig-sqlite&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SurrealDB vector store: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-surrealdb"&gt;&lt;code&gt;rig-surrealdb&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Milvus vector store: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-milvus"&gt;&lt;code&gt;rig-milvus&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following providers are available as separate companion-crates:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fastembed: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-fastembed"&gt;&lt;code&gt;rig-fastembed&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;br&gt; &lt;br&gt; &lt;img src="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/img/built-by-playgrounds.svg?sanitize=true" alt="Build by Playgrounds" width="30%"&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gleam-lang/gleam</title>
      <link>https://github.com/gleam-lang/gleam</link>
      <description>&lt;p&gt;⭐️ A friendly language for building type-safe, scalable systems!&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/gleam-lang/gleam/main/images/lucy.png" alt="Lucy, Gleam's mascot"&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/gleam-lang/gleam/releases"&gt;&lt;img src="https://img.shields.io/github/release/gleam-lang/gleam" alt="GitHub release"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/Fm8Pwmy"&gt;&lt;img src="https://img.shields.io/discord/768594524158427167?color=blue" alt="Discord chat"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;!-- A spacer --&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;p&gt;Gleam is a friendly language for building type-safe systems that scale! For more information see &lt;a href="https://gleam.run"&gt;the website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Gleam is kindly supported by its sponsors. If you would like to support Gleam please consider sponsoring its development &lt;a href="https://github.com/sponsors/lpil"&gt;on GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Thank you to our sponsors! Gleam would not be possible without you.&lt;/p&gt; 
&lt;!-- Below this line this file is autogenerated --&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/agundy"&gt;Aaron Gunderson&lt;/a&gt; - &lt;a href="https://github.com/abeljim"&gt;Abel Jimenez&lt;/a&gt; - &lt;a href="https://github.com/ad-ops"&gt;ad-ops&lt;/a&gt; - &lt;a href="https://github.com/AdamBrodzinski"&gt;Adam Brodzinski&lt;/a&gt; - &lt;a href="https://github.com/adjohnston"&gt;Adam Johnston&lt;/a&gt; - &lt;a href="https://github.com/adam-wyluda"&gt;Adam Wyłuda&lt;/a&gt; - &lt;a href="https://github.com/thebugcatcher"&gt;Adi Iyengar&lt;/a&gt; - &lt;a href="https://github.com/amouat"&gt;Adrian Mouat&lt;/a&gt; - &lt;a href="https://github.com/JitPackJoyride"&gt;Ajit Krishna&lt;/a&gt; - &lt;a href="https://github.com/Guria"&gt;Aleksei Gurianov&lt;/a&gt; - &lt;a href="https://alembic.com.au"&gt;Alembic&lt;/a&gt; - &lt;a href="https://github.com/ahouseago"&gt;Alex Houseago&lt;/a&gt; - &lt;a href="https://github.com/rawhat"&gt;Alex Manning&lt;/a&gt; - &lt;a href="https://github.com/aexvir"&gt;Alex Viscreanu&lt;/a&gt; - &lt;a href="https://github.com/akoutmos"&gt;Alexander Koutmos&lt;/a&gt; - &lt;a href="https://github.com/muonoum"&gt;Alexander Stensrud&lt;/a&gt; - &lt;a href="https://github.com/defgenx"&gt;Alexandre Del Vecchio&lt;/a&gt; - &lt;a href="https://github.com/Acepie"&gt;Ameen Radwan&lt;/a&gt; - &lt;a href="https://github.com/abueide"&gt;Andrea Bueide&lt;/a&gt; - &lt;a href="https://github.com/AndreHogberg"&gt;AndreHogberg&lt;/a&gt; - &lt;a href="https://github.com/andremw"&gt;André Mazoni&lt;/a&gt; - &lt;a href="https://github.com/antharuu"&gt;Antharuu&lt;/a&gt; - &lt;a href="https://github.com/anthony-khong"&gt;Anthony Khong&lt;/a&gt; - &lt;a href="https://github.com/Illbjorn"&gt;Anthony Maxwell&lt;/a&gt; - &lt;a href="https://github.com/amscotti"&gt;Anthony Scotti&lt;/a&gt; - &lt;a href="https://github.com/aweagel"&gt;Arthur Weagel&lt;/a&gt; - &lt;a href="https://github.com/aryairani"&gt;Arya Irani&lt;/a&gt; - &lt;a href="https://github.com/azureflash"&gt;Azure Flash&lt;/a&gt; - &lt;a href="https://github.com/chiroptical"&gt;Barry Moore&lt;/a&gt; - &lt;a href="https://github.com/bartekgorny"&gt;Bartek Górny&lt;/a&gt; - &lt;a href="https://github.com/BenitoEck"&gt;Ben&lt;/a&gt; - &lt;a href="https://github.com/requestben"&gt;Ben Martin&lt;/a&gt; - &lt;a href="https://github.com/bgmarx"&gt;Ben Marx&lt;/a&gt; - &lt;a href="https://github.com/benmyles"&gt;Ben Myles&lt;/a&gt; - &lt;a href="https://github.com/bbkane"&gt;Benjamin Kane&lt;/a&gt; - &lt;a href="https://github.com/drteeth"&gt;Benjamin Moss&lt;/a&gt; - &lt;a href="https://github.com/bgwdotdev"&gt;bgw&lt;/a&gt; - &lt;a href="https://github.com/bjartelund"&gt;Bjarte Aarmo Lund&lt;/a&gt; - &lt;a href="https://github.com/00bpa"&gt;Bjoern Paschen&lt;/a&gt; - &lt;a href="https://github.com/bmehder"&gt;Brad Mehder&lt;/a&gt; - &lt;a href="https://github.com/brettcannon"&gt;Brett Cannon&lt;/a&gt; - &lt;a href="https://github.com/brettkolodny"&gt;Brett Kolodny&lt;/a&gt; - &lt;a href="https://github.com/brian-dawn"&gt;Brian Dawn&lt;/a&gt; - &lt;a href="https://github.com/bglusman"&gt;Brian Glusman&lt;/a&gt; - &lt;a href="https://github.com/bruce"&gt;Bruce Williams&lt;/a&gt; - &lt;a href="https://github.com/nono"&gt;Bruno Michel&lt;/a&gt; - &lt;a href="https://github.com/bucsi"&gt;bucsi&lt;/a&gt; - &lt;a href="https://github.com/camray"&gt;Cam Ray&lt;/a&gt; - &lt;a href="https://github.com/cameronpresley"&gt;Cameron Presley&lt;/a&gt; - &lt;a href="https://github.com/carlomunguia"&gt;Carlo Munguia&lt;/a&gt; - &lt;a href="https://github.com/csaltos"&gt;Carlos Saltos&lt;/a&gt; - &lt;a href="https://github.com/chadselph"&gt;Chad Selph&lt;/a&gt; - &lt;a href="https://github.com/ctdio"&gt;Charlie Duong&lt;/a&gt; - &lt;a href="https://github.com/charlie-n01r"&gt;Charlie Govea&lt;/a&gt; - &lt;a href="https://github.com/choonkeat"&gt;Chew Choon Keat&lt;/a&gt; - &lt;a href="https://github.com/ceedon"&gt;Chris Donnelly&lt;/a&gt; - &lt;a href="https://github.com/Morzaram"&gt;Chris King&lt;/a&gt; - &lt;a href="https://github.com/chrislloyd"&gt;Chris Lloyd&lt;/a&gt; - &lt;a href="https://github.com/utilForever"&gt;Chris Ohk&lt;/a&gt; - &lt;a href="https://github.com/Chriscbr"&gt;Chris Rybicki&lt;/a&gt; - &lt;a href="https://github.com/cvincent"&gt;Chris Vincent&lt;/a&gt; - &lt;a href="https://github.com/christophershirk"&gt;Christopher David Shirk&lt;/a&gt; - &lt;a href="https://github.com/devries"&gt;Christopher De Vries&lt;/a&gt; - &lt;a href="https://github.com/cdaringe"&gt;Christopher Dieringer&lt;/a&gt; - &lt;a href="https://github.com/christopherhjung"&gt;Christopher Jung&lt;/a&gt; - &lt;a href="https://github.com/christhekeele"&gt;Christopher Keele&lt;/a&gt; - &lt;a href="https://github.com/specialblend"&gt;CJ Salem&lt;/a&gt; - &lt;a href="https://github.com/CliffordAnderson"&gt;Clifford Anderson&lt;/a&gt; - &lt;a href="https://github.com/coder"&gt;Coder&lt;/a&gt; - &lt;a href="https://github.com/colelawrence"&gt;Cole Lawrence&lt;/a&gt; - &lt;a href="https://github.com/insanitybit"&gt;Colin&lt;/a&gt; - &lt;a href="https://github.com/Comamoca"&gt;Comamoca&lt;/a&gt; - &lt;a href="https://github.com/comet-ml"&gt;Comet&lt;/a&gt; - &lt;a href="https://github.com/Lucostus"&gt;Constantin (Cleo) Winkler&lt;/a&gt; - &lt;a href="https://github.com/jcorentin"&gt;Corentin J.&lt;/a&gt; - &lt;a href="https://github.com/sdaigo"&gt;Daigo Shitara&lt;/a&gt; - &lt;a href="https://github.com/dvic"&gt;Damir Vandic&lt;/a&gt; - &lt;a href="https://github.com/d2718"&gt;Dan&lt;/a&gt; - &lt;a href="https://github.com/ddresselhaus"&gt;Dan Dresselhaus&lt;/a&gt; - &lt;a href="https://github.com/strongoose"&gt;Dan Strong&lt;/a&gt; - &lt;a href="https://github.com/Daniel-Shunom"&gt;Daniel S Jeremiah&lt;/a&gt; - &lt;a href="https://github.com/DanielleMaywood"&gt;Danielle Maywood&lt;/a&gt; - &lt;a href="https://github.com/ndan"&gt;Daniil Nevdah&lt;/a&gt; - &lt;a href="https://github.com/pinnet"&gt;Danny Arnold&lt;/a&gt; - &lt;a href="https://github.com/despairblue"&gt;Danny Martini&lt;/a&gt; - &lt;a href="https://github.com/dbernheisel"&gt;David Bernheisel&lt;/a&gt; - &lt;a href="https://github.com/davidcornu"&gt;David Cornu&lt;/a&gt; - &lt;a href="https://github.com/dangdennis"&gt;Dennis Dang&lt;/a&gt; - &lt;a href="https://github.com/dennistruemper"&gt;dennistruemper&lt;/a&gt; - &lt;a href="https://github.com/devinalvaro"&gt;devinalvaro&lt;/a&gt; - &lt;a href="https://github.com/diemogebhardt"&gt;Diemo Gebhardt&lt;/a&gt; - &lt;a href="https://github.com/floodfx"&gt;Donnie Flood&lt;/a&gt; - &lt;a href="https://github.com/dbanty"&gt;Dylan Anthony&lt;/a&gt; - &lt;a href="https://github.com/gdcrisp"&gt;Dylan Carlson&lt;/a&gt; - &lt;a href="https://github.com/edhinrichsen"&gt;Ed Hinrichsen&lt;/a&gt; - &lt;a href="https://github.com/edongashi"&gt;Edon Gashi&lt;/a&gt; - &lt;a href="https://github.com/enoonan"&gt;Eileen Noonan&lt;/a&gt; - &lt;a href="https://github.com/dropwhile"&gt;eli&lt;/a&gt; - &lt;a href="https://liberapay.com/ijomeli/"&gt;elke&lt;/a&gt; - &lt;a href="https://github.com/Emma-Fuller"&gt;Emma&lt;/a&gt; - &lt;a href="https://github.com/EMRTS"&gt;EMR Technical Solutions&lt;/a&gt; - &lt;a href="https://github.com/yellowsman"&gt;Endo Shogo&lt;/a&gt; - &lt;a href="https://github.com/ekosz"&gt;Eric Koslow&lt;/a&gt; - &lt;a href="https://github.com/eterps"&gt;Erik Terpstra&lt;/a&gt; - &lt;a href="https://liberapay.com/erikareads/"&gt;erikareads&lt;/a&gt; - &lt;a href="https://github.com/ErikML"&gt;ErikML&lt;/a&gt; - &lt;a href="https://github.com/erlend-axelsson"&gt;erlend-axelsson&lt;/a&gt; - &lt;a href="https://github.com/oberernst"&gt;Ernesto Malave&lt;/a&gt; - &lt;a href="https://github.com/EthanOlpin"&gt;Ethan Olpin&lt;/a&gt; - &lt;a href="https://github.com/evaldobratti"&gt;Evaldo Bratti&lt;/a&gt; - &lt;a href="https://github.com/evanj2357"&gt;Evan Johnson&lt;/a&gt; - &lt;a href="https://github.com/evanasse"&gt;evanasse&lt;/a&gt; - &lt;a href="https://github.com/fabridamicelli"&gt;Fabrizio Damicelli&lt;/a&gt; - &lt;a href="https://github.com/fmesteban"&gt;Fede Esteban&lt;/a&gt; - &lt;a href="https://github.com/yerTools"&gt;Felix&lt;/a&gt; - &lt;a href="https://github.com/nandofarias"&gt;Fernando Farias&lt;/a&gt; - &lt;a href="https://github.com/ffigiel"&gt;Filip Figiel&lt;/a&gt; - &lt;a href="https://github.com/floriank"&gt;Florian Kraft&lt;/a&gt; - &lt;a href="https://github.com/francishamel"&gt;Francis Hamel&lt;/a&gt; - &lt;a href="https://github.com/Frank-III"&gt;frankwang&lt;/a&gt; - &lt;a href="https://github.com/gvrooyen"&gt;G-J van Rooyen&lt;/a&gt; - &lt;a href="https://github.com/gabrielvincent"&gt;Gabriel Vincent&lt;/a&gt; - &lt;a href="https://github.com/olgam4"&gt;gamachexx&lt;/a&gt; - &lt;a href="https://github.com/allenap"&gt;Gavin Panella&lt;/a&gt; - &lt;a href="https://github.com/gahjelle"&gt;Geir Arne Hjelle&lt;/a&gt; - &lt;a href="https://github.com/brasilikum"&gt;Georg Hartmann&lt;/a&gt; - &lt;a href="https://github.com/gmartsenkov"&gt;Georgi Martsenkov&lt;/a&gt; - &lt;a href="https://github.com/ggobbe"&gt;ggobbe&lt;/a&gt; - &lt;a href="https://github.com/giacomocavalieri"&gt;Giacomo Cavalieri&lt;/a&gt; - &lt;a href="https://github.com/giovannibonetti"&gt;Giovanni Kock Bonetti&lt;/a&gt; - &lt;a href="https://github.com/GV14982"&gt;Graham Vasquez&lt;/a&gt; - &lt;a href="https://github.com/YoyoSaur"&gt;Grant Everett&lt;/a&gt; - &lt;a href="https://github.com/nirev"&gt;Guilherme de Maio&lt;/a&gt; - &lt;a href="https://github.com/guillheu"&gt;Guillaume Heu&lt;/a&gt; - &lt;a href="https://github.com/ghivert"&gt;Guillaume Hivert&lt;/a&gt; - &lt;a href="https://github.com/hammad-r-javed"&gt;Hammad Javed&lt;/a&gt; - &lt;a href="https://github.com/kwando"&gt;Hannes Nevalainen&lt;/a&gt; - &lt;a href="https://github.com/ildorn"&gt;Hannes Schnaitter&lt;/a&gt; - &lt;a href="https://github.com/oderwat"&gt;Hans Raaf&lt;/a&gt; - &lt;a href="https://github.com/hayleigh-dot-dev"&gt;Hayleigh Thompson&lt;/a&gt; - &lt;a href="https://github.com/hibachrach"&gt;Hazel Bachrach&lt;/a&gt; - &lt;a href="https://github.com/hdahlheim"&gt;Henning Dahlheim&lt;/a&gt; - &lt;a href="https://github.com/tudborg"&gt;Henrik Tudborg&lt;/a&gt; - &lt;a href="https://github.com/henrysdev"&gt;Henry Warren&lt;/a&gt; - &lt;a href="https://github.com/losfair"&gt;Heyang Zhou&lt;/a&gt; - &lt;a href="https://liberapay.com/Hizuru3/"&gt;Hizuru3&lt;/a&gt; - &lt;a href="https://github.com/hubertmalkowski"&gt;Hubert Małkowski&lt;/a&gt; - &lt;a href="https://github.com/iainh"&gt;Iain H&lt;/a&gt; - &lt;a href="https://github.com/Ian-GL"&gt;Ian González&lt;/a&gt; - &lt;a href="https://github.com/ianmjones"&gt;Ian M. Jones&lt;/a&gt; - &lt;a href="https://github.com/igordsm"&gt;Igor Montagner&lt;/a&gt; - &lt;a href="https://github.com/inoas"&gt;inoas&lt;/a&gt; - &lt;a href="https://github.com/graphiteisaac"&gt;Isaac&lt;/a&gt; - &lt;a href="https://github.com/isaacharrisholt"&gt;Isaac Harris-Holt&lt;/a&gt; - &lt;a href="https://github.com/imcquee"&gt;Isaac McQueen&lt;/a&gt; - &lt;a href="https://github.com/bozso"&gt;István Bozsó&lt;/a&gt; - &lt;a href="https://github.com/ivarvong"&gt;Ivar Vong&lt;/a&gt; - &lt;a href="https://github.com/jacobdalamb"&gt;Jacob Lamb&lt;/a&gt; - &lt;a href="https://github.com/jakecleary"&gt;Jake Cleary&lt;/a&gt; - &lt;a href="https://github.com/jzwood"&gt;Jake Wood&lt;/a&gt; - &lt;a href="https://github.com/jakob753951"&gt;Jakob Ladegaard Møller&lt;/a&gt; - &lt;a href="https://github.com/jamesbirtles"&gt;James Birtles&lt;/a&gt; - &lt;a href="https://github.com/jamesmacaulay"&gt;James MacAulay&lt;/a&gt; - &lt;a href="https://github.com/janpieper"&gt;Jan Pieper&lt;/a&gt; - &lt;a href="https://github.com/monzool"&gt;Jan Skriver Sørensen&lt;/a&gt; - &lt;a href="https://github.com/hypirion"&gt;Jean Niklas L'orange&lt;/a&gt; - &lt;a href="https://github.com/MightyGoldenOctopus"&gt;Jean-Adrien Ducastaing&lt;/a&gt; - &lt;a href="https://github.com/jlgeering"&gt;Jean-Luc Geering&lt;/a&gt; - &lt;a href="https://github.com/jihem"&gt;Jean-Marc QUERE&lt;/a&gt; - &lt;a href="https://github.com/okkdev"&gt;Jen Stehlik&lt;/a&gt; - &lt;a href="https://github.com/shepherdjerred"&gt;Jerred Shepherd&lt;/a&gt; - &lt;a href="https://github.com/jiangplus"&gt;jiangplus&lt;/a&gt; - &lt;a href="https://github.com/hunkyjimpjorps"&gt;Jimpjorps™&lt;/a&gt; - &lt;a href="https://github.com/joeykilpatrick"&gt;Joey Kilpatrick&lt;/a&gt; - &lt;a href="https://github.com/joeytrapp"&gt;Joey Trapp&lt;/a&gt; - &lt;a href="https://github.com/johan-st"&gt;Johan Strand&lt;/a&gt; - &lt;a href="https://github.com/JohnBjrk"&gt;John Björk&lt;/a&gt; - &lt;a href="https://github.com/jmpavlick"&gt;John Pavlick&lt;/a&gt; - &lt;a href="https://github.com/jrstrunk"&gt;John Strunk&lt;/a&gt; - &lt;a href="https://github.com/xjojorx"&gt;Jojor&lt;/a&gt; - &lt;a href="https://github.com/jonlambert"&gt;Jon Lambert&lt;/a&gt; - &lt;a href="https://github.com/igern"&gt;Jonas E. P&lt;/a&gt; - &lt;a href="https://github.com/JonasHedEng"&gt;Jonas Hedman Engström&lt;/a&gt; - &lt;a href="https://github.com/jooaf"&gt;jooaf&lt;/a&gt; - &lt;a href="https://github.com/joseph-lozano"&gt;Joseph Lozano&lt;/a&gt; - &lt;a href="https://github.com/joshocalico"&gt;Joshua Steele&lt;/a&gt; - &lt;a href="https://github.com/nineluj"&gt;Julian Hirn&lt;/a&gt; - &lt;a href="https://liberapay.com/d2quadra/"&gt;Julian Lukwata&lt;/a&gt; - &lt;a href="https://github.com/schurhammer"&gt;Julian Schurhammer&lt;/a&gt; - &lt;a href="https://github.com/justinlubin"&gt;Justin Lubin&lt;/a&gt; - &lt;a href="https://github.com/Neofox"&gt;Jérôme Schaeffer&lt;/a&gt; - &lt;a href="https://github.com/Kamila-P"&gt;KamilaP&lt;/a&gt; - &lt;a href="https://github.com/jkbrinso"&gt;Kemp Brinson&lt;/a&gt; - &lt;a href="https://github.com/keroami"&gt;Kero van Gelder&lt;/a&gt; - &lt;a href="https://github.com/kevinschweikert"&gt;Kevin Schweikert&lt;/a&gt; - &lt;a href="https://github.com/hamptokr"&gt;Kramer Hampton&lt;/a&gt; - &lt;a href="https://github.com/Bearfinn"&gt;Kritsada Sunthornwutthikrai&lt;/a&gt; - &lt;a href="https://github.com/krzysztofgb"&gt;Krzysztof Gasienica-Bednarz&lt;/a&gt; - &lt;a href="https://github.com/leah-u"&gt;Leah Ulmschneider&lt;/a&gt; - &lt;a href="https://github.com/leostera"&gt;Leandro Ostera&lt;/a&gt; - &lt;a href="https://github.com/leejarvis"&gt;Lee Jarvis&lt;/a&gt; - &lt;a href="https://github.com/rcoder"&gt;Lennon Day-Reynolds&lt;/a&gt; - &lt;a href="https://github.com/leonqadirie"&gt;Leon Qadirie&lt;/a&gt; - &lt;a href="https://github.com/LeartS"&gt;Leonardo Donelli&lt;/a&gt; - &lt;a href="https://github.com/lexx27"&gt;Lexx&lt;/a&gt; - &lt;a href="https://github.com/defp"&gt;lidashuang&lt;/a&gt; - &lt;a href="https://github.com/LilyRose2798"&gt;Lily Rose&lt;/a&gt; - &lt;a href="https://github.com/lbjarre"&gt;Lukas Bjarre&lt;/a&gt; - &lt;a href="https://github.com/lamdor"&gt;Luke Amdor&lt;/a&gt; - &lt;a href="https://github.com/2kool4idkwhat"&gt;Luna&lt;/a&gt; - &lt;a href="https://github.com/manuel-rubio"&gt;Manuel Rubio&lt;/a&gt; - &lt;a href="https://github.com/ideaMarcos"&gt;Marcos&lt;/a&gt; - &lt;a href="https://github.com/marcusandre"&gt;marcusandre&lt;/a&gt; - &lt;a href="https://github.com/AYM1607"&gt;Mariano Uvalle&lt;/a&gt; - &lt;a href="https://github.com/mariuskalvo"&gt;Marius Kalvø&lt;/a&gt; - &lt;a href="https://github.com/mkdynamic"&gt;Mark Dodwell&lt;/a&gt; - &lt;a href="https://github.com/markholmes"&gt;Mark Holmes&lt;/a&gt; - &lt;a href="https://github.com/markmark206"&gt;Mark Markaryan&lt;/a&gt; - &lt;a href="https://github.com/Janiczek"&gt;Martin Janiczek&lt;/a&gt; - &lt;a href="https://github.com/poelstra"&gt;Martin Poelstra&lt;/a&gt; - &lt;a href="https://github.com/rechsteiner"&gt;Martin Rechsteiner &lt;/a&gt; - &lt;a href="https://github.com/martonkaufmann"&gt;martonkaufmann&lt;/a&gt; - &lt;a href="https://github.com/mwarger"&gt;Mat Warger&lt;/a&gt; - &lt;a href="https://github.com/han-tyumi"&gt;Matt Champagne&lt;/a&gt; - &lt;a href="https://github.com/mhheise"&gt;Matt Heise&lt;/a&gt; - &lt;a href="https://github.com/m"&gt;Matt Mullenweg&lt;/a&gt; - &lt;a href="https://github.com/matthewrobinsondev"&gt;Matt Robinson&lt;/a&gt; - &lt;a href="https://github.com/matt-savvy"&gt;Matt Savoia&lt;/a&gt; - &lt;a href="https://github.com/mattvanhorn"&gt;Matt Van Horn&lt;/a&gt; - &lt;a href="https://github.com/matthewj-dev"&gt;Matthew Jackson&lt;/a&gt; - &lt;a href="https://github.com/mwhitworth"&gt;Matthew Whitworth&lt;/a&gt; - &lt;a href="https://github.com/maxwelldb"&gt;Max Bridges&lt;/a&gt; - &lt;a href="https://github.com/maxmcd"&gt;Max McDonnell&lt;/a&gt; - &lt;a href="https://github.com/metame"&gt;metame&lt;/a&gt; - &lt;a href="https://github.com/metatexx"&gt;METATEXX GmbH&lt;/a&gt; - &lt;a href="https://github.com/amiroff"&gt;Metin Emiroğlu&lt;/a&gt; - &lt;a href="https://github.com/stunthamster"&gt;Michael Duffy&lt;/a&gt; - &lt;a href="https://github.com/michaeljones"&gt;Michael Jones&lt;/a&gt; - &lt;a href="https://github.com/monocursive"&gt;Michael Mazurczak&lt;/a&gt; - &lt;a href="https://github.com/mrmcc3"&gt;Michael McClintock&lt;/a&gt; - &lt;a href="https://github.com/karlsson"&gt;Mikael Karlsson&lt;/a&gt; - &lt;a href="https://github.com/mroach"&gt;Mike Roach&lt;/a&gt; - &lt;a href="https://liberapay.com/mikej/"&gt;Mikey J&lt;/a&gt; - &lt;a href="https://github.com/MoeDevelops"&gt;MoeDev&lt;/a&gt; - &lt;a href="https://github.com/rykawamu"&gt;MzRyuKa&lt;/a&gt; - &lt;a href="https://github.com/n8nio"&gt;n8n - Workflow Automation&lt;/a&gt; - &lt;a href="https://github.com/natanaelsirqueira"&gt;Natanael Sirqueira&lt;/a&gt; - &lt;a href="https://github.com/nathanielknight"&gt;Nathaniel Knight&lt;/a&gt; - &lt;a href="https://github.com/NFIBrokerage"&gt;NFIBrokerage&lt;/a&gt; - &lt;a href="https://github.com/nchapman"&gt;Nick Chapman&lt;/a&gt; - &lt;a href="https://github.com/ndreynolds"&gt;Nick Reynolds&lt;/a&gt; - &lt;a href="https://github.com/NicklasXYZ"&gt;Nicklas Sindlev Andersen&lt;/a&gt; - &lt;a href="https://github.com/NicoVIII"&gt;NicoVIII&lt;/a&gt; - &lt;a href="https://github.com/mrniket"&gt;Niket Shah&lt;/a&gt; - &lt;a href="https://github.com/blink1415"&gt;Nikolai Steen Kjosnes&lt;/a&gt; - &lt;a href="https://github.com/ninanomenon"&gt;Ninaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&lt;/a&gt; - &lt;a href="http://www.ninefx.com"&gt;NineFX&lt;/a&gt; - &lt;a href="https://github.com/Nezteb"&gt;Noah Betzen&lt;/a&gt; - &lt;a href="https://github.com/nomio"&gt;Nomio&lt;/a&gt; - &lt;a href="https://github.com/nunulk"&gt;nunulk&lt;/a&gt; - &lt;a href="https://github.com/oceanlewis"&gt;Ocean&lt;/a&gt; - &lt;a href="https://github.com/osebelin"&gt;Olaf Sebelin&lt;/a&gt; - &lt;a href="https://github.com/OldhamMade"&gt;OldhamMade&lt;/a&gt; - &lt;a href="https://github.com/CanadaHonk"&gt;Oliver Medhurst&lt;/a&gt; - &lt;a href="https://github.com/otosky"&gt;Oliver Tosky&lt;/a&gt; - &lt;a href="https://github.com/nnuuvv"&gt;ollie&lt;/a&gt; - &lt;a href="https://github.com/optizio"&gt;optizio&lt;/a&gt; - &lt;a href="https://github.com/Davorak"&gt;Patrick Wheeler&lt;/a&gt; - &lt;a href="https://github.com/pguse"&gt;Paul Guse&lt;/a&gt; - &lt;a href="https://github.com/Tulkdan"&gt;Pedro Correa&lt;/a&gt; - &lt;a href="https://github.com/petejodo"&gt;Pete Jodo&lt;/a&gt; - &lt;a href="https://github.com/pvsr"&gt;Peter Rice&lt;/a&gt; - &lt;a href="https://github.com/philpax"&gt;Philpax&lt;/a&gt; - &lt;a href="https://github.com/pierrot-lc"&gt;Pierrot&lt;/a&gt; - &lt;a href="https://github.com/qdentity"&gt;Qdentity&lt;/a&gt; - &lt;a href="https://github.com/raquentin"&gt;Race Williams&lt;/a&gt; - &lt;a href="https://github.com/stoft"&gt;Rasmus&lt;/a&gt; - &lt;a href="https://github.com/chouzar"&gt;Raúl Chouza &lt;/a&gt; - &lt;a href="https://github.com/renatillas"&gt;re.natillas&lt;/a&gt; - &lt;a href="https://github.com/redmar"&gt;Redmar Kerkhoff&lt;/a&gt; - &lt;a href="https://github.com/reillysiemens"&gt;Reilly Tucker Siemens&lt;/a&gt; - &lt;a href="https://github.com/renatomassaro"&gt;Renato Massaro&lt;/a&gt; - &lt;a href="https://github.com/renovatorruler"&gt;Renovator&lt;/a&gt; - &lt;a href="https://github.com/richard-viney"&gt;Richard Viney&lt;/a&gt; - &lt;a href="https://github.com/rico"&gt;Rico Leuthold&lt;/a&gt; - &lt;a href="https://github.com/rinx"&gt;Rintaro Okamura&lt;/a&gt; - &lt;a href="https://github.com/ripta"&gt;Ripta Pasay&lt;/a&gt; - &lt;a href="https://github.com/TanklesXL"&gt;Robert Attard&lt;/a&gt; - &lt;a href="https://github.com/rellen"&gt;Robert Ellen&lt;/a&gt; - &lt;a href="https://github.com/malkomalko"&gt;Robert Malko&lt;/a&gt; - &lt;a href="https://github.com/Papipo"&gt;Rodrigo Álvarez&lt;/a&gt; - &lt;a href="https://liberapay.com/Karakunai/"&gt;Ronan Harris&lt;/a&gt; - &lt;a href="https://github.com/rotabull"&gt;Rotabull&lt;/a&gt; - &lt;a href="https://github.com/reinefjord"&gt;Rupus Reinefjord&lt;/a&gt; - &lt;a href="https://github.com/ustitc"&gt;Ruslan Ustitc&lt;/a&gt; - &lt;a href="https://github.com/samaaron"&gt;Sam Aaron&lt;/a&gt; - &lt;a href="https://github.com/metruzanca"&gt;Sam Zanca&lt;/a&gt; - &lt;a href="https://github.com/soulsam480"&gt;sambit&lt;/a&gt; - &lt;a href="https://github.com/bkspace"&gt;Sammy Isseyegh&lt;/a&gt; - &lt;a href="https://github.com/castletaste"&gt;Savva&lt;/a&gt; - &lt;a href="https://github.com/sasa1977"&gt;Saša Jurić&lt;/a&gt; - &lt;a href="https://github.com/scotttrinh"&gt;Scott Trinh&lt;/a&gt; - &lt;a href="https://github.com/scottwey"&gt;Scott Wey&lt;/a&gt; - &lt;a href="https://github.com/star-szr"&gt;Scott Zhu Reeves&lt;/a&gt; - &lt;a href="https://github.com/seancribbs"&gt;Sean Cribbs&lt;/a&gt; - &lt;a href="https://github.com/seanjensengrey"&gt;Sean Jensen-Grey&lt;/a&gt; - &lt;a href="https://github.com/SeanRoberts"&gt;Sean Roberts&lt;/a&gt; - &lt;a href="https://github.com/sporto"&gt;Sebastian Porto&lt;/a&gt; - &lt;a href="https://github.com/tehprofessor"&gt;Seve Salazar&lt;/a&gt; - &lt;a href="https://github.com/codemonkey76"&gt;Shane Poppleton&lt;/a&gt; - &lt;a href="https://github.com/sigmasternchen"&gt;Sigma&lt;/a&gt; - &lt;a href="https://github.com/simonewebdesign"&gt;simone&lt;/a&gt; - &lt;a href="https://github.com/bytesource"&gt;Stefan&lt;/a&gt; - &lt;a href="https://github.com/sthagen"&gt;Stefan Hagen&lt;/a&gt; - &lt;a href="https://github.com/steinareliassen"&gt;Steinar Eliassen&lt;/a&gt; - &lt;a href="https://github.com/Qard"&gt;Stephen Belanger&lt;/a&gt; - &lt;a href="https://github.com/Strandinator"&gt;Strandinator&lt;/a&gt; - &lt;a href="https://github.com/slafs"&gt;Sławomir Ehlert&lt;/a&gt; - &lt;a href="https://github.com/takasehideki"&gt;takasehideki&lt;/a&gt; - &lt;a href="https://github.com/Theosaurus-Rex"&gt;Theo Harris&lt;/a&gt; - &lt;a href="https://github.com/thomaswhyyou"&gt;Thomas&lt;/a&gt; - &lt;a href="https://github.com/tcoopman"&gt;Thomas Coopman&lt;/a&gt; - &lt;a href="https://github.com/ernstla"&gt;Thomas Ernst&lt;/a&gt; - &lt;a href="https://github.com/tmbrwn"&gt;Tim Brown&lt;/a&gt; - &lt;a href="https://github.com/timgluz"&gt;Timo Sulg&lt;/a&gt; - &lt;a href="https://github.com/tomalexhughes"&gt;Tom Hughes&lt;/a&gt; - &lt;a href="https://github.com/tomjschuster"&gt;Tom Schuster&lt;/a&gt; - &lt;a href="https://github.com/tomekowal"&gt;Tomasz Kowal&lt;/a&gt; - &lt;a href="https://github.com/tommaisey"&gt;tommaisey&lt;/a&gt; - &lt;a href="https://github.com/TristanCacqueray"&gt;Tristan de Cacqueray&lt;/a&gt; - &lt;a href="https://github.com/tsloughter"&gt;Tristan Sloughter&lt;/a&gt; - &lt;a href="https://github.com/lucamtudor"&gt;Tudor Luca&lt;/a&gt; - &lt;a href="https://github.com/tymak"&gt;tymak&lt;/a&gt; - &lt;a href="https://github.com/vvzen"&gt;Valerio Viperino&lt;/a&gt; - &lt;a href="https://github.com/bondiano"&gt;Vassiliy Kuzenkov&lt;/a&gt; - &lt;a href="https://github.com/sandsower"&gt;Vic Valenzuela&lt;/a&gt; - &lt;a href="https://github.com/rodrigues"&gt;Victor Rodrigues&lt;/a&gt; - &lt;a href="https://github.com/PerpetualPossum"&gt;Viv Verner&lt;/a&gt; - &lt;a href="https://github.com/yelps"&gt;Volker Rabe&lt;/a&gt; - &lt;a href="https://github.com/Whoops"&gt;Walton Hoops&lt;/a&gt; - &lt;a href="https://github.com/weizhliu"&gt;Weizheng Liu&lt;/a&gt; - &lt;a href="https://github.com/Willyboar"&gt;Willyboar&lt;/a&gt; - &lt;a href="https://github.com/wilsonsilva"&gt;Wilson Silva&lt;/a&gt; - &lt;a href="https://github.com/HymanZHAN"&gt;Xucong Zhan&lt;/a&gt; - &lt;a href="https://github.com/yamen"&gt;Yamen Sader&lt;/a&gt; - &lt;a href="https://github.com/Yasuo-Higano"&gt;Yasuo Higano&lt;/a&gt; - &lt;a href="https://github.com/yoshi-monster"&gt;yoshi~ &lt;/a&gt; - &lt;a href="https://github.com/gasparinzsombor"&gt;Zsombor Gasparin&lt;/a&gt; - &lt;a href="https://github.com/zwubs"&gt;ZWubs&lt;/a&gt; - &lt;a href="https://liberapay.com/~1847917/"&gt;~1847917&lt;/a&gt; - &lt;a href="https://liberapay.com/~1867501/"&gt;~1867501&lt;/a&gt; - &lt;a href="https://github.com/eberfreitas"&gt;Éber Freitas Dias&lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pola-rs/polars</title>
      <link>https://github.com/pola-rs/polars</link>
      <description>&lt;p&gt;Dataframes powered by a multithreaded, vectorized query engine, written in Rust&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;a href="https://pola.rs"&gt; &lt;img src="https://raw.githubusercontent.com/pola-rs/polars-static/master/banner/polars_github_banner.svg?sanitize=true" alt="Polars logo"&gt; &lt;/a&gt; &lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://crates.io/crates/polars"&gt; &lt;img src="https://img.shields.io/crates/v/polars.svg?sanitize=true" alt="crates.io Latest Release"&gt; &lt;/a&gt; 
 &lt;a href="https://pypi.org/project/polars/"&gt; &lt;img src="https://img.shields.io/pypi/v/polars.svg?sanitize=true" alt="PyPi Latest Release"&gt; &lt;/a&gt; 
 &lt;a href="https://www.npmjs.com/package/nodejs-polars"&gt; &lt;img src="https://img.shields.io/npm/v/nodejs-polars.svg?sanitize=true" alt="NPM Latest Release"&gt; &lt;/a&gt; 
 &lt;a href="https://community.r-multiverse.org/polars"&gt; &lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fcommunity.r-multiverse.org%2Fapi%2Fpackages%2Fpolars&amp;amp;query=%24.Version&amp;amp;label=r-multiverse" alt="R-multiverse Latest Release"&gt; &lt;/a&gt; 
 &lt;a href="https://doi.org/10.5281/zenodo.7697217"&gt; &lt;img src="https://zenodo.org/badge/DOI/10.5281/zenodo.7697217.svg?sanitize=true" alt="DOI Latest Release"&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;b&gt;Documentation&lt;/b&gt;: &lt;a href="https://docs.pola.rs/api/python/stable/reference/index.html"&gt;Python&lt;/a&gt; - &lt;a href="https://docs.rs/polars/latest/polars/"&gt;Rust&lt;/a&gt; - &lt;a href="https://pola-rs.github.io/nodejs-polars/index.html"&gt;Node.js&lt;/a&gt; - &lt;a href="https://pola-rs.github.io/r-polars/index.html"&gt;R&lt;/a&gt; | &lt;b&gt;StackOverflow&lt;/b&gt;: &lt;a href="https://stackoverflow.com/questions/tagged/python-polars"&gt;Python&lt;/a&gt; - &lt;a href="https://stackoverflow.com/questions/tagged/rust-polars"&gt;Rust&lt;/a&gt; - &lt;a href="https://stackoverflow.com/questions/tagged/nodejs-polars"&gt;Node.js&lt;/a&gt; - &lt;a href="https://stackoverflow.com/questions/tagged/r-polars"&gt;R&lt;/a&gt; | &lt;a href="https://docs.pola.rs/"&gt;User guide&lt;/a&gt; | &lt;a href="https://discord.gg/4UfP5cfBE7"&gt;Discord&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Polars: Blazingly fast DataFrames in Rust, Python, Node.js, R, and SQL&lt;/h2&gt; 
&lt;p&gt;Polars is a DataFrame interface on top of an OLAP Query Engine implemented in Rust using &lt;a href="https://arrow.apache.org/docs/format/Columnar.html"&gt;Apache Arrow Columnar Format&lt;/a&gt; as the memory model.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lazy | eager execution&lt;/li&gt; 
 &lt;li&gt;Multi-threaded&lt;/li&gt; 
 &lt;li&gt;SIMD&lt;/li&gt; 
 &lt;li&gt;Query optimization&lt;/li&gt; 
 &lt;li&gt;Powerful expression API&lt;/li&gt; 
 &lt;li&gt;Hybrid Streaming (larger-than-RAM datasets)&lt;/li&gt; 
 &lt;li&gt;Rust | Python | NodeJS | R | ...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To learn more, read the &lt;a href="https://docs.pola.rs/"&gt;user guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Python&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;&amp;gt;&amp;gt;&amp;gt; import polars as pl
&amp;gt;&amp;gt;&amp;gt; df = pl.DataFrame(
...     {
...         "A": [1, 2, 3, 4, 5],
...         "fruits": ["banana", "banana", "apple", "apple", "banana"],
...         "B": [5, 4, 3, 2, 1],
...         "cars": ["beetle", "audi", "beetle", "beetle", "beetle"],
...     }
... )

# embarrassingly parallel execution &amp;amp; very expressive query language
&amp;gt;&amp;gt;&amp;gt; df.sort("fruits").select(
...     "fruits",
...     "cars",
...     pl.lit("fruits").alias("literal_string_fruits"),
...     pl.col("B").filter(pl.col("cars") == "beetle").sum(),
...     pl.col("A").filter(pl.col("B") &amp;gt; 2).sum().over("cars").alias("sum_A_by_cars"),
...     pl.col("A").sum().over("fruits").alias("sum_A_by_fruits"),
...     pl.col("A").reverse().over("fruits").alias("rev_A_by_fruits"),
...     pl.col("A").sort_by("B").over("fruits").alias("sort_A_by_B_by_fruits"),
... )
shape: (5, 8)
┌──────────┬──────────┬──────────────┬─────┬─────────────┬─────────────┬─────────────┬─────────────┐
│ fruits   ┆ cars     ┆ literal_stri ┆ B   ┆ sum_A_by_ca ┆ sum_A_by_fr ┆ rev_A_by_fr ┆ sort_A_by_B │
│ ---      ┆ ---      ┆ ng_fruits    ┆ --- ┆ rs          ┆ uits        ┆ uits        ┆ _by_fruits  │
│ str      ┆ str      ┆ ---          ┆ i64 ┆ ---         ┆ ---         ┆ ---         ┆ ---         │
│          ┆          ┆ str          ┆     ┆ i64         ┆ i64         ┆ i64         ┆ i64         │
╞══════════╪══════════╪══════════════╪═════╪═════════════╪═════════════╪═════════════╪═════════════╡
│ "apple"  ┆ "beetle" ┆ "fruits"     ┆ 11  ┆ 4           ┆ 7           ┆ 4           ┆ 4           │
│ "apple"  ┆ "beetle" ┆ "fruits"     ┆ 11  ┆ 4           ┆ 7           ┆ 3           ┆ 3           │
│ "banana" ┆ "beetle" ┆ "fruits"     ┆ 11  ┆ 4           ┆ 8           ┆ 5           ┆ 5           │
│ "banana" ┆ "audi"   ┆ "fruits"     ┆ 11  ┆ 2           ┆ 8           ┆ 2           ┆ 2           │
│ "banana" ┆ "beetle" ┆ "fruits"     ┆ 11  ┆ 4           ┆ 8           ┆ 1           ┆ 1           │
└──────────┴──────────┴──────────────┴─────┴─────────────┴─────────────┴─────────────┴─────────────┘
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;SQL&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;&amp;gt;&amp;gt;&amp;gt; df = pl.scan_csv("docs/assets/data/iris.csv")
&amp;gt;&amp;gt;&amp;gt; ## OPTION 1
&amp;gt;&amp;gt;&amp;gt; # run SQL queries on frame-level
&amp;gt;&amp;gt;&amp;gt; df.sql("""
...	SELECT species,
...	  AVG(sepal_length) AS avg_sepal_length
...	FROM self
...	GROUP BY species
...	""").collect()
shape: (3, 2)
┌────────────┬──────────────────┐
│ species    ┆ avg_sepal_length │
│ ---        ┆ ---              │
│ str        ┆ f64              │
╞════════════╪══════════════════╡
│ Virginica  ┆ 6.588            │
│ Versicolor ┆ 5.936            │
│ Setosa     ┆ 5.006            │
└────────────┴──────────────────┘
&amp;gt;&amp;gt;&amp;gt; ## OPTION 2
&amp;gt;&amp;gt;&amp;gt; # use pl.sql() to operate on the global context
&amp;gt;&amp;gt;&amp;gt; df2 = pl.LazyFrame({
...    "species": ["Setosa", "Versicolor", "Virginica"],
...    "blooming_season": ["Spring", "Summer", "Fall"]
...})
&amp;gt;&amp;gt;&amp;gt; pl.sql("""
... SELECT df.species,
...     AVG(df.sepal_length) AS avg_sepal_length,
...     df2.blooming_season
... FROM df
... LEFT JOIN df2 ON df.species = df2.species
... GROUP BY df.species, df2.blooming_season
... """).collect()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;SQL commands can also be run directly from your terminal using the Polars CLI:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# run an inline SQL query
&amp;gt; polars -c "SELECT species, AVG(sepal_length) AS avg_sepal_length, AVG(sepal_width) AS avg_sepal_width FROM read_csv('docs/assets/data/iris.csv') GROUP BY species;"

# run interactively
&amp;gt; polars
Polars CLI v0.3.0
Type .help for help.

&amp;gt; SELECT species, AVG(sepal_length) AS avg_sepal_length, AVG(sepal_width) AS avg_sepal_width FROM read_csv('docs/assets/data/iris.csv') GROUP BY species;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Refer to the &lt;a href="https://github.com/pola-rs/polars-cli"&gt;Polars CLI repository&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Performance 🚀🚀&lt;/h2&gt; 
&lt;h3&gt;Blazingly fast&lt;/h3&gt; 
&lt;p&gt;Polars is very fast. In fact, it is one of the best performing solutions available. See the &lt;a href="https://www.pola.rs/benchmarks.html"&gt;PDS-H benchmarks&lt;/a&gt; results.&lt;/p&gt; 
&lt;h3&gt;Lightweight&lt;/h3&gt; 
&lt;p&gt;Polars is also very lightweight. It comes with zero required dependencies, and this shows in the import times:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;polars: 70ms&lt;/li&gt; 
 &lt;li&gt;numpy: 104ms&lt;/li&gt; 
 &lt;li&gt;pandas: 520ms&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Handles larger-than-RAM data&lt;/h3&gt; 
&lt;p&gt;If you have data that does not fit into memory, Polars' query engine is able to process your query (or parts of your query) in a streaming fashion. This drastically reduces memory requirements, so you might be able to process your 250GB dataset on your laptop. Collect with &lt;code&gt;collect(engine='streaming')&lt;/code&gt; to run the query streaming. (This might be a little slower, but it is still very fast!)&lt;/p&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;p&gt;Install the latest Polars version with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pip install polars
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We also have a conda package (&lt;code&gt;conda install -c conda-forge polars&lt;/code&gt;), however pip is the preferred way to install Polars.&lt;/p&gt; 
&lt;p&gt;Install Polars with all optional dependencies.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pip install 'polars[all]'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also install a subset of all optional dependencies.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pip install 'polars[numpy,pandas,pyarrow]'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://docs.pola.rs/user-guide/installation/#feature-flags"&gt;User Guide&lt;/a&gt; for more details on optional dependencies&lt;/p&gt; 
&lt;p&gt;To see the current Polars version and a full list of its optional dependencies, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;pl.show_versions()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Releases happen quite often (weekly / every few days) at the moment, so updating Polars regularly to get the latest bugfixes / features might not be a bad idea.&lt;/p&gt; 
&lt;h3&gt;Rust&lt;/h3&gt; 
&lt;p&gt;You can take latest release from &lt;code&gt;crates.io&lt;/code&gt;, or if you want to use the latest features / performance improvements point to the &lt;code&gt;main&lt;/code&gt; branch of this repo.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;polars = { git = "https://github.com/pola-rs/polars", rev = "&amp;lt;optional git tag&amp;gt;" }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Requires Rust version &lt;code&gt;&amp;gt;=1.80&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Want to contribute? Read our &lt;a href="https://docs.pola.rs/development/contributing/"&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Python: compile Polars from source&lt;/h2&gt; 
&lt;p&gt;If you want a bleeding edge release or maximal performance you should compile Polars from source.&lt;/p&gt; 
&lt;p&gt;This can be done by going through the following steps in sequence:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the latest &lt;a href="https://www.rust-lang.org/tools/install"&gt;Rust compiler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install &lt;a href="https://maturin.rs/"&gt;maturin&lt;/a&gt;: &lt;code&gt;pip install maturin&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cd py-polars&lt;/code&gt; and choose one of the following: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;make build&lt;/code&gt;, slow binary with debug assertions and symbols, fast compile times&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;make build-release&lt;/code&gt;, fast binary without debug assertions, minimal debug symbols, long compile times&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;make build-nodebug-release&lt;/code&gt;, same as build-release but without any debug symbols, slightly faster to compile&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;make build-debug-release&lt;/code&gt;, same as build-release but with full debug symbols, slightly slower to compile&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;make build-dist-release&lt;/code&gt;, fastest binary, extreme compile times&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;By default the binary is compiled with optimizations turned on for a modern CPU. Specify &lt;code&gt;LTS_CPU=1&lt;/code&gt; with the command if your CPU is older and does not support e.g. AVX2.&lt;/p&gt; 
&lt;p&gt;Note that the Rust crate implementing the Python bindings is called &lt;code&gt;py-polars&lt;/code&gt; to distinguish from the wrapped Rust crate &lt;code&gt;polars&lt;/code&gt; itself. However, both the Python package and the Python module are named &lt;code&gt;polars&lt;/code&gt;, so you can &lt;code&gt;pip install polars&lt;/code&gt; and &lt;code&gt;import polars&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Using custom Rust functions in Python&lt;/h2&gt; 
&lt;p&gt;Extending Polars with UDFs compiled in Rust is easy. We expose PyO3 extensions for &lt;code&gt;DataFrame&lt;/code&gt; and &lt;code&gt;Series&lt;/code&gt; data structures. See more in &lt;a href="https://github.com/pola-rs/polars/tree/main/pyo3-polars"&gt;https://github.com/pola-rs/polars/tree/main/pyo3-polars&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Going big...&lt;/h2&gt; 
&lt;p&gt;Do you expect more than 2^32 (~4.2 billion) rows? Compile Polars with the &lt;code&gt;bigidx&lt;/code&gt; feature flag or, for Python users, install &lt;code&gt;pip install polars-u64-idx&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Don't use this unless you hit the row boundary as the default build of Polars is faster and consumes less memory.&lt;/p&gt; 
&lt;h2&gt;Legacy&lt;/h2&gt; 
&lt;p&gt;Do you want Polars to run on an old CPU (e.g. dating from before 2011), or on an &lt;code&gt;x86-64&lt;/code&gt; build of Python on Apple Silicon under Rosetta? Install &lt;code&gt;pip install polars-lts-cpu&lt;/code&gt;. This version of Polars is compiled without &lt;a href="https://en.wikipedia.org/wiki/Advanced_Vector_Extensions"&gt;AVX&lt;/a&gt; target features.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.jetbrains.com"&gt;&lt;img src="https://www.jetbrains.com/company/brand/img/jetbrains_logo.png" height="50" alt="JetBrains logo"&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>idootop/open-xiaoai</title>
      <link>https://github.com/idootop/open-xiaoai</link>
      <description>&lt;p&gt;让小爱音箱「听见你的声音」，解锁无限可能。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open-XiaoAI&lt;/h1&gt; 
&lt;p&gt;让小爱音箱「听见你的声音」，解锁无限可能。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/idootop/open-xiaoai/main/docs/images/cover.jpg" alt=""&gt;&lt;/p&gt; 
&lt;h2&gt;简介&lt;/h2&gt; 
&lt;p&gt;2017 年，当全球首款千万级销量的智能音箱诞生时，我们以为触摸到了未来。但很快发现，这些设备被困在「指令-响应」的牢笼里：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;它听得见分贝，却听不懂情感&lt;/li&gt; 
 &lt;li&gt;它能执行命令，却不会主动思考&lt;/li&gt; 
 &lt;li&gt;它有千万用户，却只有一套思维&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;我们曾幻想中的"贾维斯"级人工智能，在现实场景中沦为"天气预报+音乐播放器"。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;真正的智能不应被预设的代码逻辑所束缚，而应像生命体般在交互中进化。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在上一个 &lt;a href="https://github.com/idootop/mi-gpt"&gt;MiGPT&lt;/a&gt; 项目中，我们已经实现将 ChatGPT 接入到小爱音箱。&lt;/p&gt; 
&lt;p&gt;这一次 &lt;a href="https://github.com/idootop/open-xiaoai"&gt;Open-XiaoAI&lt;/a&gt; 再次进化，直接接管小爱音箱的“耳朵”和“嘴巴”，&lt;/p&gt; 
&lt;p&gt;通过多模态大模型和 AI Agent，将小爱音箱的潜力完全释放，解锁无限可能。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;未来由你定义!&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;你的声音 + 小爱音箱 = 无限可能&lt;/h2&gt; 
&lt;p&gt;👉 &lt;a href="https://www.bilibili.com/video/BV1TxJhzvEhz"&gt;小爱音箱接入小智 AI 演示视频&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1TxJhzvEhz"&gt;&lt;img src="https://raw.githubusercontent.com/idootop/open-xiaoai/main/docs/images/xiaozhi.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;👉 &lt;a href="https://www.bilibili.com/video/BV1YfVUz5EMj"&gt;小爱音箱自定义唤醒词演示视频&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1YfVUz5EMj"&gt;&lt;img src="https://raw.githubusercontent.com/idootop/open-xiaoai/main/docs/images/kws.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;👉 &lt;a href="https://www.bilibili.com/video/BV1N1421y7qn"&gt;小爱音箱接入 MiGPT 演示视频&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1N1421y7qn"&gt;&lt;img src="https://raw.githubusercontent.com/idootop/open-xiaoai/main/docs/images/migpt.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] 本教程仅适用于 &lt;strong&gt;小爱音箱 Pro（LX06）&lt;/strong&gt; 和 &lt;strong&gt;Xiaomi 智能音箱 Pro（OH2P）&lt;/strong&gt; 这两款机型，&lt;strong&gt;其他型号&lt;/strong&gt;的小爱音箱请勿直接使用！🚨&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;本项目由 Client 端 + Server 端两部分组成，你可以按照以下顺序运行该项目：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;刷机更新小爱音箱补丁固件，开启并 SSH 连接到小爱音箱 👉 &lt;a href="https://raw.githubusercontent.com/idootop/open-xiaoai/main/docs/flash.md"&gt;教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;在小爱音箱上安装运行 Client 端补丁程序 👉 &lt;a href="https://raw.githubusercontent.com/idootop/open-xiaoai/main/packages/client-rust/README.md"&gt;教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;运行以下演示程序，体验小爱音箱的全新能力 ✨ 
  &lt;ul&gt; 
   &lt;li&gt;👉 &lt;a href="https://raw.githubusercontent.com/idootop/open-xiaoai/main/examples/xiaozhi/README.md"&gt;小爱音箱接入小智 AI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;👉 &lt;a href="https://raw.githubusercontent.com/idootop/open-xiaoai/main/examples/kws/README.md"&gt;小爱音箱自定义唤醒词&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;👉 &lt;a href="https://raw.githubusercontent.com/idootop/open-xiaoai/main/examples/migpt/README.md"&gt;小爱音箱接入 MiGPT（完美版）&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;👉 &lt;a href="https://raw.githubusercontent.com/idootop/open-xiaoai/main/examples/gemini/README.md"&gt;小爱音箱接入 Gemini Live API&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;以上皆为抛砖引玉，你也可以亲手编写自己想要的功能，一切由你定义！&lt;/p&gt; 
&lt;h2&gt;相关项目&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] 技术的意义在于分享与共创。如果你打算或正在使用本项目做些有趣的事情， 欢迎提交 PR 或 issue 分享你的项目和创意。✨&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;如果你不想刷机，或者不是小爱音箱 Pro，下面的项目或许对你有用：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/idootop/mi-gpt"&gt;https://github.com/idootop/mi-gpt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/idootop/migpt-next"&gt;https://github.com/idootop/migpt-next&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yihong0618/xiaogpt"&gt;https://github.com/yihong0618/xiaogpt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hanxi/xiaomusic"&gt;https://github.com/hanxi/xiaomusic&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;参考链接&lt;/h2&gt; 
&lt;p&gt;如果你想要了解更多技术细节，下面的链接可能对你有用：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yihong0618/gitblog/issues/258"&gt;https://github.com/yihong0618/gitblog/issues/258&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jialeicui/open-lx01"&gt;https://github.com/jialeicui/open-lx01&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/duhow/xiaoai-patch"&gt;https://github.com/duhow/xiaoai-patch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javabin.cn/2021/xiaoai_fm.html"&gt;https://javabin.cn/2021/xiaoai_fm.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://xuanxuanblingbling.github.io/iot/2022/09/16/mi/"&gt;https://xuanxuanblingbling.github.io/iot/2022/09/16/mi/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;免责声明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;适用范围&lt;/strong&gt; 本项目为开源非营利项目，仅供学术研究或个人测试用途。严禁用于商业服务、网络攻击、数据窃取、系统破坏等违反《网络安全法》及使用者所在地司法管辖区的法律规定的场景。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;非官方声明&lt;/strong&gt; 本项目由第三方开发者独立开发，与小米集团及其关联方（下称"权利方"）无任何隶属/合作关系，亦未获其官方授权/认可或技术支持。项目中涉及的商标、固件、云服务的所有权利归属小米集团。若权利方主张权益，使用者应立即主动停止使用并删除本项目。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;继续下载或运行本项目，即表示您已完整阅读并同意&lt;a href="https://raw.githubusercontent.com/idootop/open-xiaoai/main/agreement.md"&gt;用户协议&lt;/a&gt;，否则请立即终止使用并彻底删除本项目。&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/idootop/open-xiaoai/main/LICENSE"&gt;MIT&lt;/a&gt; License © 2024-PRESENT Del Wang&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>zed-industries/zed</title>
      <link>https://github.com/zed-industries/zed</link>
      <description>&lt;p&gt;Code at the speed of thought – Zed is a high-performance, multiplayer code editor from the creators of Atom and Tree-sitter.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zed&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://zed.dev"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/zed-industries/zed/main/assets/badge/v0.json" alt="Zed"&gt;&lt;/a&gt; &lt;a href="https://github.com/zed-industries/zed/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/zed-industries/zed/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Welcome to Zed, a high-performance, multiplayer code editor from the creators of &lt;a href="https://github.com/atom/atom"&gt;Atom&lt;/a&gt; and &lt;a href="https://github.com/tree-sitter/tree-sitter"&gt;Tree-sitter&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;On macOS and Linux you can &lt;a href="https://zed.dev/download"&gt;download Zed directly&lt;/a&gt; or &lt;a href="https://zed.dev/docs/linux#installing-via-a-package-manager"&gt;install Zed via your local package manager&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Other platforms are not yet available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows (&lt;a href="https://github.com/zed-industries/zed/issues/5394"&gt;tracking issue&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Web (&lt;a href="https://github.com/zed-industries/zed/issues/5396"&gt;tracking issue&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Developing Zed&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/development/macos.md"&gt;Building Zed for macOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/development/linux.md"&gt;Building Zed for Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/development/windows.md"&gt;Building Zed for Windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/development/local-collaboration.md"&gt;Running Collaboration Locally&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/zed-industries/zed/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for ways you can contribute to Zed.&lt;/p&gt; 
&lt;p&gt;Also... we're hiring! Check out our &lt;a href="https://zed.dev/jobs"&gt;jobs&lt;/a&gt; page for open roles.&lt;/p&gt; 
&lt;h3&gt;Licensing&lt;/h3&gt; 
&lt;p&gt;License information for third party dependencies must be correctly provided for CI to pass.&lt;/p&gt; 
&lt;p&gt;We use &lt;a href="https://github.com/EmbarkStudios/cargo-about"&gt;&lt;code&gt;cargo-about&lt;/code&gt;&lt;/a&gt; to automatically comply with open source licenses. If CI is failing, check the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Is it showing a &lt;code&gt;no license specified&lt;/code&gt; error for a crate you've created? If so, add &lt;code&gt;publish = false&lt;/code&gt; under &lt;code&gt;[package]&lt;/code&gt; in your crate's Cargo.toml.&lt;/li&gt; 
 &lt;li&gt;Is the error &lt;code&gt;failed to satisfy license requirements&lt;/code&gt; for a dependency? If so, first determine what license the project has and whether this system is sufficient to comply with this license's requirements. If you're unsure, ask a lawyer. Once you've verified that this system is acceptable add the license's SPDX identifier to the &lt;code&gt;accepted&lt;/code&gt; array in &lt;code&gt;script/licenses/zed-licenses.toml&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Is &lt;code&gt;cargo-about&lt;/code&gt; unable to find the license for a dependency? If so, add a clarification field at the end of &lt;code&gt;script/licenses/zed-licenses.toml&lt;/code&gt;, as specified in the &lt;a href="https://embarkstudios.github.io/cargo-about/cli/generate/config.html#crate-configuration"&gt;cargo-about book&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>EFForg/rayhunter</title>
      <link>https://github.com/EFForg/rayhunter</link>
      <description>&lt;p&gt;Rust tool to detect cell site simulators on an orbic mobile hotspot&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://www.eff.org/files/styles/media_browser_preview/public/banner_library/rayhunter-banner.png" alt="Rayhunter Logo - An Orca taking a bite out of a cellular signal bar"&gt;&lt;/p&gt; 
&lt;h1&gt;Rayhunter&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://github.com/EFForg/rayhunter/actions/workflows/main.yml/badge.svg?sanitize=true" alt="Tests"&gt;&lt;/p&gt; 
&lt;p&gt;Rayhunter is an IMSI Catcher Catcher for the Orbic mobile hotspot. To learn more, check out the &lt;a href="https://efforg.github.io/rayhunter/"&gt;Rayhunter Book&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rustdesk/rustdesk</title>
      <link>https://github.com/rustdesk/rustdesk</link>
      <description>&lt;p&gt;An open-source remote desktop application designed for self-hosting, as an alternative to TeamViewer.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/rustdesk/rustdesk/master/res/logo-header.svg?sanitize=true" alt="RustDesk - Your remote desktop"&gt;&lt;br&gt; &lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/#raw-steps-to-build"&gt;Build&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/#how-to-build-with-docker"&gt;Docker&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/#file-structure"&gt;Structure&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/#snapshot"&gt;Snapshot&lt;/a&gt;&lt;br&gt; [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-UA.md"&gt;Українська&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-CS.md"&gt;česky&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-ZH.md"&gt;中文&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-HU.md"&gt;Magyar&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-ES.md"&gt;Español&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-FA.md"&gt;فارسی&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-FR.md"&gt;Français&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-DE.md"&gt;Deutsch&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-PL.md"&gt;Polski&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-ID.md"&gt;Indonesian&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-FI.md"&gt;Suomi&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-ML.md"&gt;മലയാളം&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-JP.md"&gt;日本語&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-NL.md"&gt;Nederlands&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-IT.md"&gt;Italiano&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-RU.md"&gt;Русский&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-PTBR.md"&gt;Português (Brasil)&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-EO.md"&gt;Esperanto&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-KR.md"&gt;한국어&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-AR.md"&gt;العربي&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-VN.md"&gt;Tiếng Việt&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-DA.md"&gt;Dansk&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-GR.md"&gt;Ελληνικά&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-TR.md"&gt;Türkçe&lt;/a&gt;] | [&lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/README-NO.md"&gt;Norsk&lt;/a&gt;]&lt;br&gt; &lt;b&gt;We need your help to translate this README, &lt;a href="https://github.com/rustdesk/rustdesk/tree/master/src/lang"&gt;RustDesk UI&lt;/a&gt; and &lt;a href="https://github.com/rustdesk/doc.rustdesk.com"&gt;RustDesk Doc&lt;/a&gt; to your native language&lt;/b&gt; &lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Caution] &lt;strong&gt;Misuse Disclaimer:&lt;/strong&gt; &lt;br&gt; The developers of RustDesk do not condone or support any unethical or illegal use of this software. Misuse, such as unauthorized access, control or invasion of privacy, is strictly against our guidelines. The authors are not responsible for any misuse of the application.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Chat with us: &lt;a href="https://discord.gg/nDceKgxnkV"&gt;Discord&lt;/a&gt; | &lt;a href="https://twitter.com/rustdesk"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.reddit.com/r/rustdesk"&gt;Reddit&lt;/a&gt; | &lt;a href="https://www.youtube.com/@rustdesk"&gt;YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://ko-fi.com/I2I04VU09"&gt;&lt;img src="https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true" alt="ko-fi"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Yet another remote desktop solution, written in Rust. Works out of the box with no configuration required. You have full control of your data, with no concerns about security. You can use our rendezvous/relay server, &lt;a href="https://rustdesk.com/server"&gt;set up your own&lt;/a&gt;, or &lt;a href="https://github.com/rustdesk/rustdesk-server-demo"&gt;write your own rendezvous/relay server&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/71636191/171661982-430285f0-2e12-4b1d-9957-4a58e375304d.png" alt="image"&gt;&lt;/p&gt; 
&lt;p&gt;RustDesk welcomes contribution from everyone. See &lt;a href="https://raw.githubusercontent.com/rustdesk/rustdesk/master/docs/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for help getting started.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/rustdesk/rustdesk/wiki/FAQ"&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/rustdesk/rustdesk/releases"&gt;&lt;strong&gt;BINARY DOWNLOAD&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/rustdesk/rustdesk/releases/tag/nightly"&gt;&lt;strong&gt;NIGHTLY BUILD&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://f-droid.org/en/packages/com.carriez.flutter_hbb"&gt;&lt;img src="https://f-droid.org/badge/get-it-on.png" alt="Get it on F-Droid" height="80"&gt;&lt;/a&gt; &lt;a href="https://flathub.org/apps/com.rustdesk.RustDesk"&gt;&lt;img src="https://flathub.org/api/badge?svg&amp;amp;locale=en" alt="Get it on Flathub" height="80"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Dependencies&lt;/h2&gt; 
&lt;p&gt;Desktop versions use Flutter or Sciter (deprecated) for GUI, this tutorial is for Sciter only, since it is easier and more friendly to start. Check out our &lt;a href="https://github.com/rustdesk/rustdesk/raw/master/.github/workflows/flutter-build.yml"&gt;CI&lt;/a&gt; for building Flutter version.&lt;/p&gt; 
&lt;p&gt;Please download Sciter dynamic library yourself.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.win/x64/sciter.dll"&gt;Windows&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.lnx/x64/libsciter-gtk.so"&gt;Linux&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.osx/libsciter.dylib"&gt;macOS&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Raw Steps to build&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Prepare your Rust development env and C++ build env&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;a href="https://github.com/microsoft/vcpkg"&gt;vcpkg&lt;/a&gt;, and set &lt;code&gt;VCPKG_ROOT&lt;/code&gt; env variable correctly&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Windows: vcpkg install libvpx:x64-windows-static libyuv:x64-windows-static opus:x64-windows-static aom:x64-windows-static&lt;/li&gt; 
   &lt;li&gt;Linux/macOS: vcpkg install libvpx libyuv opus aom&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;run &lt;code&gt;cargo run&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href="https://rustdesk.com/docs/en/dev/build/"&gt;Build&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;How to Build on Linux&lt;/h2&gt; 
&lt;h3&gt;Ubuntu 18 (Debian 10)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo apt install -y zip g++ gcc git curl wget nasm yasm libgtk-3-dev clang libxcb-randr0-dev libxdo-dev \
        libxfixes-dev libxcb-shape0-dev libxcb-xfixes0-dev libasound2-dev libpulse-dev cmake make \
        libclang-dev ninja-build libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libpam0g-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;openSUSE Tumbleweed&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo zypper install gcc-c++ git curl wget nasm yasm gcc gtk3-devel clang libxcb-devel libXfixes-devel cmake alsa-lib-devel gstreamer-devel gstreamer-plugins-base-devel xdotool-devel pam-devel
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fedora 28 (CentOS 8)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo yum -y install gcc-c++ git curl wget nasm yasm gcc gtk3-devel clang libxcb-devel libxdo-devel libXfixes-devel pulseaudio-libs-devel cmake alsa-lib-devel gstreamer1-devel gstreamer1-plugins-base-devel pam-devel
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Arch (Manjaro)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo pacman -Syu --needed unzip git cmake gcc curl wget yasm nasm zip make pkg-config clang gtk3 xdotool libxcb libxfixes alsa-lib pipewire
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install vcpkg&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/microsoft/vcpkg
cd vcpkg
git checkout 2023.04.15
cd ..
vcpkg/bootstrap-vcpkg.sh
export VCPKG_ROOT=$HOME/vcpkg
vcpkg/vcpkg install libvpx libyuv opus aom
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fix libvpx (For Fedora)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cd vcpkg/buildtrees/libvpx/src
cd *
./configure
sed -i 's/CFLAGS+=-I/CFLAGS+=-fPIC -I/g' Makefile
sed -i 's/CXXFLAGS+=-I/CXXFLAGS+=-fPIC -I/g' Makefile
make
cp libvpx.a $HOME/vcpkg/installed/x64-linux/lib/
cd
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
source $HOME/.cargo/env
git clone --recurse-submodules https://github.com/rustdesk/rustdesk
cd rustdesk
mkdir -p target/debug
wget https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.lnx/x64/libsciter-gtk.so
mv libsciter-gtk.so target/debug
VCPKG_ROOT=$HOME/vcpkg cargo run
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to build with Docker&lt;/h2&gt; 
&lt;p&gt;Begin by cloning the repository and building the Docker container:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/rustdesk/rustdesk
cd rustdesk
git submodule update --init --recursive
docker build -t "rustdesk-builder" .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, each time you need to build the application, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker run --rm -it -v $PWD:/home/user/rustdesk -v rustdesk-git-cache:/home/user/.cargo/git -v rustdesk-registry-cache:/home/user/.cargo/registry -e PUID="$(id -u)" -e PGID="$(id -g)" rustdesk-builder
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the first build may take longer before dependencies are cached, subsequent builds will be faster. Additionally, if you need to specify different arguments to the build command, you may do so at the end of the command in the &lt;code&gt;&amp;lt;OPTIONAL-ARGS&amp;gt;&lt;/code&gt; position. For instance, if you wanted to build an optimized release version, you would run the command above followed by &lt;code&gt;--release&lt;/code&gt;. The resulting executable will be available in the target folder on your system, and can be run with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;target/debug/rustdesk
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, if you're running a release executable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;target/release/rustdesk
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please ensure that you run these commands from the root of the RustDesk repository, or the application may not find the required resources. Also note that other cargo subcommands such as &lt;code&gt;install&lt;/code&gt; or &lt;code&gt;run&lt;/code&gt; are not currently supported via this method as they would install or run the program inside the container instead of the host.&lt;/p&gt; 
&lt;h2&gt;File Structure&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/libs/hbb_common"&gt;libs/hbb_common&lt;/a&gt;&lt;/strong&gt;: video codec, config, tcp/udp wrapper, protobuf, fs functions for file transfer, and some other utility functions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/libs/scrap"&gt;libs/scrap&lt;/a&gt;&lt;/strong&gt;: screen capture&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/libs/enigo"&gt;libs/enigo&lt;/a&gt;&lt;/strong&gt;: platform specific keyboard/mouse control&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/libs/clipboard"&gt;libs/clipboard&lt;/a&gt;&lt;/strong&gt;: file copy and paste implementation for Windows, Linux, macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/src/ui"&gt;src/ui&lt;/a&gt;&lt;/strong&gt;: obsolete Sciter UI (deprecated)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/src/server"&gt;src/server&lt;/a&gt;&lt;/strong&gt;: audio/clipboard/input/video services, and network connections&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/src/client.rs"&gt;src/client.rs&lt;/a&gt;&lt;/strong&gt;: start a peer connection&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/src/rendezvous_mediator.rs"&gt;src/rendezvous_mediator.rs&lt;/a&gt;&lt;/strong&gt;: Communicate with &lt;a href="https://github.com/rustdesk/rustdesk-server"&gt;rustdesk-server&lt;/a&gt;, wait for remote direct (TCP hole punching) or relayed connection&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/src/platform"&gt;src/platform&lt;/a&gt;&lt;/strong&gt;: platform specific code&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/flutter"&gt;flutter&lt;/a&gt;&lt;/strong&gt;: Flutter code for desktop and mobile&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rustdesk/rustdesk/tree/master/flutter/web/v1/js"&gt;flutter/web/js&lt;/a&gt;&lt;/strong&gt;: JavaScript for Flutter web client&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://github.com/rustdesk/rustdesk/assets/28412477/db82d4e7-c4bc-4823-8e6f-6af7eadf7651" alt="Connection Manager"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/rustdesk/rustdesk/assets/28412477/9baa91e9-3362-4d06-aa1a-7518edcbd7ea" alt="Connected to a Windows PC"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/rustdesk/rustdesk/assets/28412477/39511ad3-aa9a-4f8c-8947-1cce286a46ad" alt="File Transfer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/rustdesk/rustdesk/assets/28412477/78e8708f-e87e-4570-8373-1360033ea6c5" alt="TCP Tunneling"&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>a2x/cs2-dumper</title>
      <link>https://github.com/a2x/cs2-dumper</link>
      <description>&lt;p&gt;Counter-Strike: 2 Offset Dumper&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cs2-dumper&lt;/h1&gt; 
&lt;p&gt;An external offset/interface dumper for Counter-Strike 2, with support for both Windows &amp;amp; Linux. Powered by &lt;a href="https://github.com/memflow/memflow"&gt;memflow&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The native Linux version is available in the &lt;a href="https://github.com/a2x/cs2-dumper/tree/linux"&gt;linux&lt;/a&gt; branch (currently outdated).&lt;/p&gt; 
&lt;p&gt;For a work-in-progress offline version, check out the &lt;a href="https://github.com/a2x/cs2-analyzer"&gt;cs2-analyzer&lt;/a&gt; repository or view its included web demo &lt;a href="https://a2x.github.io/cs2-analyzer"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;You can download the latest release from &lt;a href="https://github.com/a2x/cs2-dumper/releases"&gt;Releases&lt;/a&gt; or compile it yourself. Note that compiling it yourself requires your Rust compiler version to be at least 1.74.0 or newer.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Ensure the game is running (Being in the main menu should suffice).&lt;/li&gt; 
 &lt;li&gt;Run the &lt;code&gt;cs2-dumper&lt;/code&gt; executable.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; If you run the executable without specifying an optional memflow connector name, it will automatically use the &lt;a href="https://github.com/memflow/memflow-native"&gt;memflow-native&lt;/a&gt; OS layer to read the memory of the game process. If you wish to use an existing memflow connector instead, such as &lt;strong&gt;pcileech&lt;/strong&gt; or &lt;strong&gt;kvm&lt;/strong&gt;, you can pass the &lt;code&gt;connector&lt;/code&gt; and optional &lt;code&gt;connector-args&lt;/code&gt; arguments to the program. These connectors can be installed and managed using the &lt;a href="https://github.com/memflow/memflowup"&gt;memflowup&lt;/a&gt; tool.&lt;/p&gt; 
&lt;p&gt;E.g (for pcileech). &lt;code&gt;cs2-dumper -c pcileech -a :device=FPGA -vv&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Certain connectors, such as the &lt;a href="https://github.com/memflow/memflow-kvm"&gt;kvm&lt;/a&gt; connector on Linux or the &lt;a href="https://github.com/memflow/memflow-pcileech"&gt;pcileech&lt;/a&gt; / &lt;a href="https://github.com/a2x/memflow-winio"&gt;winio&lt;/a&gt; connectors on Windows, require elevated privileges to work. So either run the &lt;code&gt;cs2-dumper&lt;/code&gt; executable with &lt;code&gt;sudo&lt;/code&gt; on Linux or as an administrator on Windows.&lt;/p&gt; 
&lt;h3&gt;Available Arguments&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-c, --connector &amp;lt;connector&amp;gt;&lt;/code&gt;: The name of the memflow connector to use.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-a, --connector-args &amp;lt;connector-args&amp;gt;&lt;/code&gt;: Additional arguments to pass to the memflow connector.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-f, --file-types &amp;lt;file-types&amp;gt;&lt;/code&gt;: The types of files to generate. Default: &lt;code&gt;cs&lt;/code&gt;, &lt;code&gt;hpp&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;rs&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-i, --indent-size &amp;lt;indent-size&amp;gt;&lt;/code&gt;: The number of spaces to use per indentation level. Default: &lt;code&gt;4&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-o, --output &amp;lt;output&amp;gt;&lt;/code&gt;: The output directory to write the generated files to. Default: &lt;code&gt;output&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-p, --process-name &amp;lt;process-name&amp;gt;&lt;/code&gt;: The name of the game process. Default: &lt;code&gt;cs2.exe&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-v...&lt;/code&gt;: Increase logging verbosity. Can be specified multiple times.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-h, --help&lt;/code&gt;: Print help.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-V, --version&lt;/code&gt;: Print version.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running Tests&lt;/h2&gt; 
&lt;p&gt;To run the few basic provided tests, use the following command: &lt;code&gt;cargo test -- --nocapture&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under the MIT license (&lt;a href="https://raw.githubusercontent.com/a2x/cs2-dumper/main/LICENSE"&gt;LICENSE&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dani-garcia/vaultwarden</title>
      <link>https://github.com/dani-garcia/vaultwarden</link>
      <description>&lt;p&gt;Unofficial Bitwarden compatible server written in Rust, formerly known as bitwarden_rs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/dani-garcia/vaultwarden/main/resources/vaultwarden-logo-auto.svg?sanitize=true" alt="Vaultwarden Logo"&gt;&lt;/p&gt; 
&lt;p&gt;An alternative server implementation of the Bitwarden Client API, written in Rust and compatible with &lt;a href="https://bitwarden.com/download/"&gt;official Bitwarden clients&lt;/a&gt; [&lt;a href="https://raw.githubusercontent.com/dani-garcia/vaultwarden/main/#disclaimer"&gt;disclaimer&lt;/a&gt;], perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href="https://github.com/dani-garcia/vaultwarden/releases/latest"&gt;&lt;img src="https://img.shields.io/github/release/dani-garcia/vaultwarden.svg?style=for-the-badge&amp;amp;logo=vaultwarden&amp;amp;color=005AA4" alt="GitHub Release"&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/pkgs/container/vaultwarden"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=005AA4&amp;amp;url=https%3A%2F%2Fipitio.github.io%2Fbackage%2Fdani-garcia%2Fvaultwarden%2Fvaultwarden.json&amp;amp;query=%24.downloads&amp;amp;label=ghcr.io%20pulls&amp;amp;cacheSeconds=14400" alt="ghcr.io Pulls"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/vaultwarden/server"&gt;&lt;img src="https://img.shields.io/docker/pulls/vaultwarden/server.svg?style=for-the-badge&amp;amp;logo=docker&amp;amp;logoColor=fff&amp;amp;color=005AA4&amp;amp;label=docker.io%20pulls" alt="Docker Pulls"&gt;&lt;/a&gt; &lt;a href="https://quay.io/repository/vaultwarden/server"&gt;&lt;img src="https://img.shields.io/badge/quay.io-download-005AA4?style=for-the-badge&amp;amp;logo=redhat&amp;amp;cacheSeconds=14400" alt="Quay.io"&gt;&lt;/a&gt; &lt;br&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors-anon/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=vaultwarden&amp;amp;color=005AA4" alt="Contributors"&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/network/members"&gt;&lt;img src="https://img.shields.io/github/forks/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=005AA4" alt="Forks"&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=005AA4" alt="Stars"&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/issues"&gt;&lt;img src="https://img.shields.io/github/issues/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=005AA4&amp;amp;cacheSeconds=300" alt="Issues Open"&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/issues?q=is%3Aissue+is%3Aclosed"&gt;&lt;img src="https://img.shields.io/github/issues-closed/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=005AA4&amp;amp;cacheSeconds=300" alt="Issues Closed"&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/raw/main/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/github/license/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=vaultwarden&amp;amp;color=944000&amp;amp;cacheSeconds=14400" alt="AGPL-3.0 Licensed"&gt;&lt;/a&gt; &lt;br&gt; &lt;a href="https://deps.rs/repo/github/dani-garcia/vaultwarden"&gt;&lt;img src="https://img.shields.io/badge/dynamic/xml?url=https%3A%2F%2Fdeps.rs%2Frepo%2Fgithub%2Fdani-garcia%2Fvaultwarden%2Fstatus.svg&amp;amp;query=%2F*%5Blocal-name()%3D'svg'%5D%2F*%5Blocal-name()%3D'g'%5D%5B2%5D%2F*%5Blocal-name()%3D'text'%5D%5B4%5D&amp;amp;style=flat-square&amp;amp;logo=rust&amp;amp;label=dependencies&amp;amp;color=005AA4" alt="Dependency Status"&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/actions/workflows/release.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/dani-garcia/vaultwarden/release.yml?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;label=Release%20Workflow" alt="GHA Release"&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/actions/workflows/build.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/dani-garcia/vaultwarden/build.yml?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;label=Build%20Workflow" alt="GHA Build"&gt;&lt;/a&gt; &lt;br&gt; &lt;a href="https://matrix.to/#/%23vaultwarden:matrix.org"&gt;&lt;img src="https://img.shields.io/matrix/vaultwarden:matrix.org.svg?style=flat-square&amp;amp;logo=matrix&amp;amp;logoColor=fff&amp;amp;color=953B00&amp;amp;cacheSeconds=14400" alt="Matrix Chat"&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/discussions"&gt;&lt;img src="https://img.shields.io/github/discussions/dani-garcia/vaultwarden?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=953B00&amp;amp;cacheSeconds=300" alt="GitHub Discussions"&gt;&lt;/a&gt; &lt;a href="https://vaultwarden.discourse.group/"&gt;&lt;img src="https://img.shields.io/discourse/topics?server=https%3A%2F%2Fvaultwarden.discourse.group%2F&amp;amp;style=flat-square&amp;amp;logo=discourse&amp;amp;color=953B00" alt="Discourse Discussions"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] &lt;strong&gt;When using this server, please report any bugs or suggestions directly to us (see &lt;a href="https://raw.githubusercontent.com/dani-garcia/vaultwarden/main/#get-in-touch"&gt;Get in touch&lt;/a&gt;), regardless of whatever clients you are using (mobile, desktop, browser...). DO NOT use the official Bitwarden support channels.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;A nearly complete implementation of the Bitwarden Client API is provided, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/managing-items/"&gt;Personal Vault&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/about-send/"&gt;Send&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/attachments/"&gt;Attachments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/website-icons/"&gt;Website icons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/personal-api-key/"&gt;Personal API Key&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/getting-started-organizations/"&gt;Organizations&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://bitwarden.com/help/about-collections/"&gt;Collections&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/sharing/"&gt;Password Sharing&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/user-types-access-control/"&gt;Member Roles&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/about-groups/"&gt;Groups&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/event-logs/"&gt;Event Logs&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/admin-reset/"&gt;Admin Password Reset&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/directory-sync/"&gt;Directory Connector&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/policies/"&gt;Policies&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/bitwarden-field-guide-two-step-login/"&gt;Multi/Two Factor Authentication&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://bitwarden.com/help/setup-two-step-login-authenticator/"&gt;Authenticator&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/setup-two-step-login-email/"&gt;Email&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/setup-two-step-login-fido/"&gt;FIDO2 WebAuthn&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/setup-two-step-login-yubikey/"&gt;YubiKey&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/setup-two-step-login-duo/"&gt;Duo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/emergency-access/"&gt;Emergency Access&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Enabling-admin-page"&gt;Vaultwarden Admin Backend&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dani-garcia/bw_web_builds"&gt;Modified Web Vault client&lt;/a&gt; (Bundled within our containers)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] The web-vault requires the use a secure context for the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API"&gt;Web Crypto API&lt;/a&gt;. That means it will only work via &lt;code&gt;http://localhost:8000&lt;/code&gt; (using the port from the example below) or if you &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Enabling-HTTPS"&gt;enable HTTPS&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The recommended way to install and use Vaultwarden is via our container images which are published to &lt;a href="https://github.com/dani-garcia/vaultwarden/pkgs/container/vaultwarden"&gt;ghcr.io&lt;/a&gt;, &lt;a href="https://hub.docker.com/r/vaultwarden/server"&gt;docker.io&lt;/a&gt; and &lt;a href="https://quay.io/repository/vaultwarden/server"&gt;quay.io&lt;/a&gt;. See &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Which-container-image-to-use"&gt;which container image to use&lt;/a&gt; for an explanation of the provided tags.&lt;/p&gt; 
&lt;p&gt;There are also &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Third-party-packages"&gt;community driven packages&lt;/a&gt; which can be used, but those might be lagging behind the latest version or might deviate in the way Vaultwarden is configured, as described in our &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki"&gt;Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Alternatively, you can also &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Building-binary"&gt;build Vaultwarden&lt;/a&gt; yourself.&lt;/p&gt; 
&lt;p&gt;While Vaultwarden is based upon the &lt;a href="https://rocket.rs"&gt;Rocket web framework&lt;/a&gt; which has built-in support for TLS our recommendation would be that you setup a reverse proxy (see &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Proxy-examples"&gt;proxy examples&lt;/a&gt;).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] &lt;strong&gt;For more detailed examples on how to install, use and configure Vaultwarden you can check our &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki"&gt;Wiki&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Docker/Podman CLI&lt;/h3&gt; 
&lt;p&gt;Pull the container image and mount a volume from the host for persistent storage.&lt;br&gt; You can replace &lt;code&gt;docker&lt;/code&gt; with &lt;code&gt;podman&lt;/code&gt; if you prefer to use podman.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker pull vaultwarden/server:latest
docker run --detach --name vaultwarden \
  --env DOMAIN="https://vw.domain.tld" \
  --volume /vw-data/:/data/ \
  --restart unless-stopped \
  --publish 127.0.0.1:8000:80 \
  vaultwarden/server:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will preserve any persistent data under &lt;code&gt;/vw-data/&lt;/code&gt;, you can adapt the path to whatever suits you.&lt;/p&gt; 
&lt;h3&gt;Docker Compose&lt;/h3&gt; 
&lt;p&gt;To use Docker compose you need to create a &lt;code&gt;compose.yaml&lt;/code&gt; which will hold the configuration to run the Vaultwarden container.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    environment:
      DOMAIN: "https://vw.domain.tld"
    volumes:
      - ./vw-data/:/data/
    ports:
      - 127.0.0.1:8000:80
&lt;/code&gt;&lt;/pre&gt; 
&lt;br&gt; 
&lt;h2&gt;Get in touch&lt;/h2&gt; 
&lt;p&gt;Have a question, suggestion or need help? Join our community on &lt;a href="https://matrix.to/#/%23vaultwarden:matrix.org"&gt;Matrix&lt;/a&gt;, &lt;a href="https://github.com/dani-garcia/vaultwarden/discussions"&gt;GitHub Discussions&lt;/a&gt; or &lt;a href="https://vaultwarden.discourse.group/"&gt;Discourse Forums&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Encountered a bug or crash? Please search our issue tracker and discussions to see if it's already been reported. If not, please &lt;a href="https://github.com/dani-garcia/vaultwarden/discussions"&gt;start a new discussion&lt;/a&gt; or &lt;a href="https://github.com/dani-garcia/vaultwarden/issues/"&gt;create a new issue&lt;/a&gt;. Ensure you're using the latest version of Vaultwarden and there aren't any similar issues open or closed!&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks for your contribution to the project!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/dani-garcia/vaultwarden/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors-anon/dani-garcia/vaultwarden?style=for-the-badge&amp;amp;logo=vaultwarden&amp;amp;color=005AA4" alt="Contributors Count"&gt;&lt;/a&gt;&lt;br&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/graphs/contributors"&gt;&lt;img src="https://contributors-img.web.app/image?repo=dani-garcia/vaultwarden" alt="Contributors Avatars"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;This project is not associated with &lt;a href="https://bitwarden.com/"&gt;Bitwarden&lt;/a&gt; or Bitwarden, Inc.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;However, one of the active maintainers for Vaultwarden is employed by Bitwarden and is allowed to contribute to the project on their own time. These contributions are independent of Bitwarden and are reviewed by other maintainers.&lt;/p&gt; 
&lt;p&gt;The maintainers work together to set the direction for the project, focusing on serving the self-hosting community, including individuals, families, and small organizations, while ensuring the project's sustainability.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; We cannot be held liable for any data loss that may occur while using Vaultwarden. This includes passwords, attachments, and other information handled by the application. We highly recommend performing regular backups of your files and database. However, should you experience data loss, we encourage you to contact us immediately.&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Bitwarden_RS&lt;/h2&gt; 
&lt;p&gt;This project was known as Bitwarden_RS and has been renamed to separate itself from the official Bitwarden server in the hopes of avoiding confusion and trademark/branding issues.&lt;br&gt; Please see &lt;a href="https://github.com/dani-garcia/vaultwarden/discussions/1642"&gt;#1642 - v1.21.0 release and project rename to Vaultwarden&lt;/a&gt; for more explanation.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>EricLBuehler/mistral.rs</title>
      <link>https://github.com/EricLBuehler/mistral.rs</link>
      <description>&lt;p&gt;Blazingly fast LLM inference.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name="top"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1 align="center"&gt; mistral.rs &lt;/h1&gt; 
&lt;h3 align="center"&gt; Blazingly fast LLM inference. &lt;/h3&gt; 
&lt;p align="center"&gt; | &lt;a href="https://ericlbuehler.github.io/mistral.rs/mistralrs/"&gt;&lt;b&gt;Rust Documentation&lt;/b&gt;&lt;/a&gt; | &lt;a href="https://github.com/EricLBuehler/mistral.rs/raw/master/mistralrs-pyo3/API.md"&gt;&lt;b&gt;Python Documentation&lt;/b&gt;&lt;/a&gt; | &lt;a href="https://discord.gg/SZrecqK8qw"&gt;&lt;b&gt;Discord&lt;/b&gt;&lt;/a&gt; | &lt;a href="https://matrix.to/#/%23mistral.rs:matrix.org"&gt;&lt;b&gt;Matrix&lt;/b&gt;&lt;/a&gt; | &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/EricLBuehler/mistral.rs/stargazers"&gt; &lt;img src="https://img.shields.io/github/stars/EricLBuehler/mistral.rs?style=social&amp;amp;label=Star" alt="GitHub stars"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Mistral.rs is a cross-platform, highly-multimodal inference engine that brings you:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All-in-one multimodal workflow: text↔text, text+vision↔text, text+vision+audio↔text, text→speech, text→image&lt;/li&gt; 
 &lt;li&gt;APIs: Rust, Python, OpenAI HTTP server (with Chat Completions, Responses API), MCP server&lt;/li&gt; 
 &lt;li&gt;🔗 &lt;strong&gt;MCP Client&lt;/strong&gt;: Connect to external tools and services automatically (file systems, web search, databases, APIs)&lt;/li&gt; 
 &lt;li&gt;Performance: ISQ, PagedAttention, FlashAttention&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please submit requests for new models &lt;a href="https://github.com/EricLBuehler/mistral.rs/issues/156"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Get started fast 🚀&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/#installation-and-build"&gt;Install&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/#getting-models"&gt;Get models&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Deploy with our easy to use APIs&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/examples/python"&gt;Python&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/mistralrs/examples"&gt;Rust&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/README.md#openai-http-server"&gt;OpenAI-compatible HTTP server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/README.md#interactive-mode"&gt;Interactive mode&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;🔗 &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/examples/MCP_QUICK_START.md"&gt;&lt;strong&gt;MCP Client&lt;/strong&gt;&lt;/a&gt; - Connect to external tools automatically&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Try the &lt;strong&gt;web chat app&lt;/strong&gt; for local in-browser conversation (text, vision, and speech support):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Quickstart &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/mistralrs-web-chat/README.md"&gt;here&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Run the server and visit &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt; by default.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;br&gt; 
&lt;!-- Web Chat App --&gt; 
&lt;details open&gt; 
 &lt;summary&gt;🖥️ &lt;strong&gt;Web Chat App&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;img src="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/res/chat.gif" alt="Web Chat UI Demo"&gt; 
 &lt;br&gt; Try our modern in-browser chat with text, vision, and speech support (TTS generation). 
&lt;/details&gt; 
&lt;!-- Interactive Mode --&gt; 
&lt;details&gt; 
 &lt;summary&gt;💻 &lt;strong&gt;Terminal Interactive Mode&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;img src="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/res/demo.gif" alt="Terminal Interactive Mode"&gt; 
 &lt;br&gt; Prefer the terminal? Use interactive mode for a classic CLI experience. 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Quick examples&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;After following installation instructions&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;💎🪆💎🪆💎 Run the &lt;strong&gt;Gemma 3n&lt;/strong&gt; family (E2B, E4B) with &lt;strong&gt;vision&lt;/strong&gt;, &lt;strong&gt;audio&lt;/strong&gt;, and &lt;strong&gt;MatFormer&lt;/strong&gt; support: &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/GEMMA3N.md"&gt;documentation&lt;/a&gt;&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Show commands&lt;/summary&gt; 
   &lt;p&gt;&lt;strong&gt;Normal use, run the full model (E4B or E2B):&lt;/strong&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server -i --isq 8 run -m google/gemma-3n-E4B-it
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;&lt;strong&gt;Use &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/GEMMA3N.md#using-matformer-with-gemma-3n"&gt;MatFormer&lt;/a&gt; to get a balanced smaller model:&lt;/strong&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server -i --isq 8 run -m google/gemma-3n-E4B-it \
  --matformer-config-path matformer_configs/gemma3n.csv \
  --matformer-slice-name "Config for E2.49B (block-level)"
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🤗🤗🤗 Run the &lt;strong&gt;SmolLM 3&lt;/strong&gt; long-context hybrid-reasoning model with full tool-calling support: &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/SMOLLM3.md"&gt;documentation&lt;/a&gt;&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Show command&lt;/summary&gt; 
   &lt;p&gt;&lt;strong&gt;Default, easiest:&lt;/strong&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server -i --isq 8 run -m HuggingFaceTB/SmolLM3-3B
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;&lt;strong&gt;UQFF prequantized:&lt;/strong&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server -i run -m EricB/SmolLM3-3B-UQFF -f smollm33b-q4k-0.uqff
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔊 Run the &lt;strong&gt;Dia 1.6b&lt;/strong&gt; model for highly-realistic dialogue generation: &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/DIA.md"&gt;documentation&lt;/a&gt;&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Show command&lt;/summary&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server -i speech -m nari-labs/Dia-1.6B -a dia
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🦙 Run the &lt;strong&gt;Llama 3.* and Llama 4&lt;/strong&gt; models with long context &amp;amp; vision support: &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/VLLAMA.md"&gt;docs (llama 3.2)&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/LLAMA4.md"&gt;docs (llama 4)&lt;/a&gt;&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Show commands&lt;/summary&gt; 
   &lt;p&gt;&lt;strong&gt;Llama 4:&lt;/strong&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server -i --isq 4 run -m meta-llama/Llama-4-Scout-17B-16E-Instruct
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;&lt;strong&gt;Llama 3.1/3.2/3.3:&lt;/strong&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code&gt;./mistralrs-server -i --isq 8 run -m meta-llama/Llama-3.2-3B-Instruct
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;&lt;strong&gt;Llama 3.2 vision:&lt;/strong&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code&gt;./mistralrs-server -i --isq 8 run -m meta-llama/Llama-3.2-11B-Vision-Instruct
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;💎💎💎 Run the &lt;strong&gt;Gemma 3&lt;/strong&gt; family (1b, 4b, 12b, 27b) with 128k context &amp;amp; vision support: &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/GEMMA3.md"&gt;documentation&lt;/a&gt;&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Show command&lt;/summary&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server -i --isq 8 run -m google/gemma-3-4b-it
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🌲📷 Run the &lt;strong&gt;FLUX.1&lt;/strong&gt; diffusion model: &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/FLUX.md"&gt;documentation&lt;/a&gt;&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Show command&lt;/summary&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server -i diffusion -m black-forest-labs/FLUX.1-schnell -a flux
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🧠 Run the &lt;strong&gt;Qwen 3&lt;/strong&gt; hybrid-reasoning model with full tool-calling support: &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/QWEN3.md"&gt;documentation&lt;/a&gt;&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Show command&lt;/summary&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server -i --isq 8 run -m Qwen/Qwen3-8B
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔗 &lt;strong&gt;MCP Client&lt;/strong&gt; - Connect to external tools and services automatically: &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/examples/MCP_QUICK_START.md"&gt;&lt;strong&gt;Quick Start Guide&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Show examples&lt;/summary&gt; 
   &lt;p&gt;&lt;strong&gt;1. Create config file (&lt;code&gt;mcp-config.json&lt;/code&gt;):&lt;/strong&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-json"&gt;{
  "servers": [{
    "name": "Filesystem Tools",
    "source": {
      "type": "Process",
      "command": "npx",
      "args": ["@modelcontextprotocol/server-filesystem", "/tmp", "-y"]
    }
  }],
  "auto_register_tools": true
}
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;&lt;strong&gt;2. Start server with tools:&lt;/strong&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server --mcp-config mcp-config.json --port 1234 run -m Qwen/Qwen3-4B
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;&lt;strong&gt;3. Tools work automatically:&lt;/strong&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST http://localhost:1234/v1/chat/completions \
  -d '{"model":"Qwen/Qwen3-4B","messages":[{"role":"user","content":"List files in /tmp and create hello.txt"}]}'
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;&lt;strong&gt;Python API:&lt;/strong&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-python"&gt;mcp_config = mistralrs.McpClientConfigPy(
    servers=[mistralrs.McpServerConfigPy(
        name="Filesystem",
        source=mistralrs.McpServerSourcePy.Process(
            command="npx", 
            args=["@modelcontextprotocol/server-filesystem", "/tmp", "-y"]
        )
    )],
    auto_register_tools=True
)

runner = mistralrs.Runner(
    which=mistralrs.Which.Plain(model_id="Qwen/Qwen3-4B"),
    mcp_client_config=mcp_config
)
# Tools automatically available!
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;&lt;strong&gt;Rust API:&lt;/strong&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-rust"&gt;let model = TextModelBuilder::new("Qwen/Qwen3-4B")
    .with_mcp_client(mcp_config) // Tools automatically available!
    .build().await?;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Description&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/EricLBuehler/mistral.rs"&gt;mistral.rs&lt;/a&gt; is a blazing-fast, cross-platform LLM inference engine with support for text, vision, image generation, and speech.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Key Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Ease of Use&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/HTTP.md"&gt;OpenAI-compatible HTTP server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://ericlbuehler.github.io/mistral.rs/mistralrs/"&gt;Rust API&lt;/a&gt; &amp;amp; &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/mistralrs-pyo3/API.md"&gt;Python API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/DEVICE_MAPPING.md"&gt;Automatic device mapping&lt;/a&gt; (multi-GPU, CPU)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/CHAT_TOK.md"&gt;Chat templates&lt;/a&gt; &amp;amp; tokenizer auto-detection&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/MCP/server.md"&gt;MCP server&lt;/a&gt; for structured, realtime tool calls&lt;/li&gt; 
   &lt;li&gt;⭐ &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/examples/MCP_QUICK_START.md"&gt;MCP client&lt;/a&gt; to connect to external tools and services automatically&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;CPU acceleration (MKL, AVX, NEON, Accelerate)&lt;/li&gt; 
   &lt;li&gt;GPU acceleration (CUDA with &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/FLASH_ATTENTION.md"&gt;FlashAttention&lt;/a&gt; &amp;amp; cuDNN, Metal)&lt;/li&gt; 
   &lt;li&gt;Automatic &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/DISTRIBUTED/DISTRIBUTED.md"&gt;tensor parallelism&lt;/a&gt; for splitting models across multiple devices 
    &lt;ul&gt; 
     &lt;li&gt;CUDA-specialized &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/DISTRIBUTED/NCCL.md"&gt;NCCL&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;Heterogeneous, flexible &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/DISTRIBUTED/RING.md"&gt;Ring backend&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Quantization&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/ISQ.md"&gt;In-place quantization (ISQ)&lt;/a&gt; of Hugging Face models&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/QUANTS.md"&gt;GGML &amp;amp; GGUF support&lt;/a&gt;: 2–8 bit&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/QUANTS.md"&gt;GPTQ&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/scripts/convert_awq_marlin.py"&gt;AWQ&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/QUANTS.md"&gt;AFQ&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/QUANTS.md"&gt;HQQ&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/QUANTS.md"&gt;FP8&lt;/a&gt;, &lt;a href="https://github.com/TimDettmers/bitsandbytes"&gt;BNB&lt;/a&gt; (int8/fp4/nf4)&lt;/li&gt; 
   &lt;li&gt;⭐ Auto-select the fastest quant method&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/PAGED_ATTENTION.md#kv-cache-quantization"&gt;KV cache quantization&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Flexibility&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/ADAPTER_MODELS.md"&gt;LoRA&lt;/a&gt; &amp;amp; &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/ADAPTER_MODELS.md"&gt;X-LoRA&lt;/a&gt; adapters with weight merging&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/ANYMOE.md"&gt;AnyMoE&lt;/a&gt;: create MoE models on any base model&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/SAMPLING.md"&gt;Sampling &amp;amp; penalty options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Prompt chunking for large inputs&lt;/li&gt; 
   &lt;li&gt;Integrated &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/TOOL_CALLING.md"&gt;tool calling&lt;/a&gt; with customizable Python/Rust native tool and search callbacks&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Advanced Features&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;High-throughput with &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/PAGED_ATTENTION.md"&gt;PagedAttention&lt;/a&gt; &amp;amp; FlashAttention V2/V3&lt;/li&gt; 
   &lt;li&gt;Prefix caching (including multimodal)&lt;/li&gt; 
   &lt;li&gt;Customizable quantization with &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/TOPOLOGY.md"&gt;topology&lt;/a&gt; &amp;amp; &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/UQFF.md"&gt;UQFF format&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Speculative decoding across models&lt;/li&gt; 
   &lt;li&gt;⭐ Agentic &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/WEB_SEARCH.md"&gt;web search integration&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;APIs and Integrations&lt;/h2&gt; 
&lt;h3&gt;Rust Crate&lt;/h3&gt; 
&lt;p&gt;Rust multithreaded/async API for easy integration into any application.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://ericlbuehler.github.io/mistral.rs/mistralrs/"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/mistralrs/examples/"&gt;Examples&lt;/a&gt; including &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/mistralrs/examples/mcp_client"&gt;MCP client integration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;To use: add &lt;code&gt;mistralrs = { git = "https://github.com/EricLBuehler/mistral.rs.git" }&lt;/code&gt; to your Cargo.toml&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Client&lt;/strong&gt;: Connect to external tools automatically - &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/examples/MCP_QUICK_START.md"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Python API&lt;/h3&gt; 
&lt;p&gt;Python API for mistral.rs.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/mistralrs-pyo3/_README.md"&gt;Installation including PyPI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/mistralrs-pyo3/API.md"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/examples/python"&gt;Examples&lt;/a&gt; including &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/examples/python/mcp_client.py"&gt;MCP client usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/examples/python/cookbook.ipynb"&gt;Cookbook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Client&lt;/strong&gt;: Full MCP integration - &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/examples/MCP_QUICK_START.md"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;HTTP Server&lt;/h3&gt; 
&lt;p&gt;OpenAI API compatible API server&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/HTTP.md"&gt;API Docs&lt;/a&gt; - includes chat completions, completions, and &lt;strong&gt;Responses API&lt;/strong&gt; for stateful conversations&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/README.md#using-the-cli"&gt;Launching the server or use the CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/examples/server/chat.py"&gt;Example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/examples/server/responses.py"&gt;Responses API examples&lt;/a&gt; - maintain conversation context without resending history&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ericlbuehler.github.io/mistral.rs/mistralrs_server_core/"&gt;Use or extend the server in other axum projects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Client&lt;/strong&gt;: Configure via &lt;code&gt;--mcp-config&lt;/code&gt; flag for automatic tool integration - &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/examples/MCP_QUICK_START.md"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;MCP Protocol&lt;/h3&gt; 
&lt;p&gt;Serve the same models over the open &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/mcp/server.md"&gt;MCP&lt;/a&gt; (Model Context Protocol) in parallel to the HTTP API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server --mcp-port 4321 plain -m Qwen/Qwen3-4B
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/mcp/server.md"&gt;docs&lt;/a&gt; for feature flags, examples and limitations.&lt;/p&gt; 
&lt;h3&gt;Llama Index integration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docs: &lt;a href="https://docs.llamaindex.ai/en/stable/examples/llm/mistral_rs/"&gt;https://docs.llamaindex.ai/en/stable/examples/llm/mistral_rs/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Supported accelerators&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Accelerator&lt;/th&gt; 
   &lt;th&gt;Feature Flag&lt;/th&gt; 
   &lt;th&gt;Additional Flags&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GPUs (CUDA)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;cuda&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;flash-attn&lt;/code&gt;, &lt;code&gt;flash-attn-v3&lt;/code&gt;, &lt;code&gt;cudnn&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Apple Silicon GPU (Metal)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;metal&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CPU (Intel)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;mkl&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CPU (Apple Accelerate)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;accelerate&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Generic CPU (ARM/AVX)&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;ARM NEON / AVX enabled by default&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;To enable one or more features, pass them to Cargo. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cargo build --release --features "cuda flash-attn cudnn"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note for Linux users:&lt;/strong&gt; The &lt;code&gt;metal&lt;/code&gt; feature is macOS-only and should not be used on Linux. Use &lt;code&gt;--features "cuda flash-attn cudnn"&lt;/code&gt; for NVIDIA GPUs or &lt;code&gt;--features mkl&lt;/code&gt; for Intel CPUs instead of &lt;code&gt;--all-features&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Installation and Build&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: You can use our &lt;a href="https://github.com/EricLBuehler/mistral.rs/pkgs/container/mistral.rs"&gt;Docker containers here&lt;/a&gt;. Learn more about running Docker containers: &lt;a href="https://docs.docker.com/engine/reference/run/"&gt;https://docs.docker.com/engine/reference/run/&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install the &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/mistralrs-pyo3/_README.md"&gt;Python package here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The Python package has &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/mistralrs-pyo3/_README.md#installation-from-pypi"&gt;wheels on PyPi&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install required packages:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;OpenSSL&lt;/code&gt; (&lt;em&gt;Example on Ubuntu:&lt;/em&gt; &lt;code&gt;sudo apt install libssl-dev&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;b&gt;&lt;em&gt;Linux only:&lt;/em&gt;&lt;/b&gt; &lt;code&gt;pkg-config&lt;/code&gt; (&lt;em&gt;Example on Ubuntu:&lt;/em&gt; &lt;code&gt;sudo apt install pkg-config&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install Rust: &lt;a href="https://rustup.rs/"&gt;https://rustup.rs/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Example on Ubuntu:&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
source $HOME/.cargo/env
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;b&gt;&lt;em&gt;Optional:&lt;/em&gt;&lt;/b&gt; Set HF token correctly (skip if already set or your model is not gated, or if you want to use the &lt;code&gt;token_source&lt;/code&gt; parameters in Python or the command line.)&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Note: you can install &lt;code&gt;huggingface-cli&lt;/code&gt; as documented &lt;a href="https://huggingface.co/docs/huggingface_hub/en/installation"&gt;here&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;huggingface-cli login
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Download the code:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/EricLBuehler/mistral.rs.git
cd mistral.rs
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Build or install &lt;code&gt;mistralrs-server&lt;/code&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Build the &lt;code&gt;mistralrs-server&lt;/code&gt; binary, which can be found at &lt;code&gt;target/release/mistralrs-server&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;cargo build --release --features &amp;lt;specify feature(s) here&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Install with &lt;code&gt;cargo install&lt;/code&gt; for easy command line usage&lt;/p&gt; &lt;p&gt;Pass the same values to &lt;code&gt;--features&lt;/code&gt; as you would for &lt;code&gt;cargo build&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;cargo install --path mistralrs-server --features &amp;lt;specify feature(s) here&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;(&lt;em&gt;If you used &lt;code&gt;cargo build&lt;/code&gt;&lt;/em&gt;) The build process will output a binary &lt;code&gt;mistralrs-server&lt;/code&gt; at &lt;code&gt;./target/release/mistralrs-server&lt;/code&gt;. We can switch to that directory so that the binary can be accessed as &lt;code&gt;./mistralrs-server&lt;/code&gt; with the following command:&lt;/p&gt; &lt;p&gt;&lt;em&gt;Example on Ubuntu:&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd target/release
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use our APIs and integrations:&lt;/p&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/#apis-and-integrations"&gt;APIs and integrations list&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Getting models&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Show: How to get models (Hub, local, GGUF, adapters, etc.)&lt;/summary&gt; 
 &lt;h3&gt;Getting models from Hugging Face Hub&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Default:&lt;/strong&gt; Downloads from Hugging Face Hub.&lt;/li&gt; 
  &lt;li&gt;For gated models, you can optionally set token source: 
   &lt;ul&gt; 
    &lt;li&gt;CLI: &lt;code&gt;./mistralrs-server --token-source env:HF_TOKEN ...&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;Python: See &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/examples/python/token_source.py"&gt;examples/python/token_source.py&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;If no token is found, tries &lt;code&gt;~/.cache/huggingface/token&lt;/code&gt; or runs with no token.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Loading models from local files&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Pass a path to a downloaded model from Hugging Face hub: 
   &lt;ul&gt; 
    &lt;li&gt;Example: &lt;pre&gt;&lt;code&gt;./mistralrs-server -i run -m path/to/model
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Running GGUF models&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Minimal example: &lt;pre&gt;&lt;code&gt;./mistralrs-server gguf -m author/model-repo -f model-quant.gguf
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt;Specify tokenizer (if needed): &lt;pre&gt;&lt;code&gt;./mistralrs-server gguf -m author/model-repo -f file.gguf -t author/official-tokenizer
&lt;/code&gt;&lt;/pre&gt; (Or use the built-in GGUF tokenizer.)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Adapters, X-LoRA, LoRA, Chat Templates&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use the correct subcommand (&lt;code&gt;x-lora-*&lt;/code&gt;, &lt;code&gt;lora-*&lt;/code&gt;), pass model, adapter, or quant file as needed.&lt;/li&gt; 
  &lt;li&gt;See &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/ADAPTER_MODELS.md"&gt;docs/ADAPTER_MODELS.md&lt;/a&gt; for details.&lt;/li&gt; 
  &lt;li&gt;For chat templates: usually auto-detected, override with &lt;code&gt;--chat-template &amp;lt;file&amp;gt;&lt;/code&gt;.&lt;br&gt; See &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/CHAT_TOK.md"&gt;docs/CHAT_TOK.md&lt;/a&gt;.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;More model CLI examples&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;See &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/#run-with-the-cli"&gt;Run with the CLI&lt;/a&gt; below or &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/README.md"&gt;full documentation&lt;/a&gt;.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Using the CLI&lt;/h2&gt; 
&lt;p&gt;Mistral.rs uses subcommands to control the model type. Please run &lt;code&gt;./mistralrs-server --help&lt;/code&gt; to see the subcommands which categorize the models by kind.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;🚨 Important:&lt;/strong&gt; The &lt;code&gt;run&lt;/code&gt; subcommand (alias for &lt;code&gt;plain&lt;/code&gt;/&lt;code&gt;vision-plain&lt;/code&gt;) only auto-detects and runs &lt;strong&gt;text&lt;/strong&gt; and &lt;strong&gt;vision&lt;/strong&gt; models. It does &lt;strong&gt;not&lt;/strong&gt; support &lt;strong&gt;diffusion&lt;/strong&gt; or &lt;strong&gt;speech&lt;/strong&gt; models. To run a diffusion model (e.g. FLUX series), use the &lt;code&gt;diffusion&lt;/code&gt; subcommand:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;mistralrs-server -i diffusion -m &amp;lt;model-id&amp;gt; [options]
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To run a speech model (e.g. Dia), use the &lt;code&gt;speech&lt;/code&gt; subcommand:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;mistralrs-server -i speech -m &amp;lt;model-id&amp;gt; [options]
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you attempt to use &lt;code&gt;run&lt;/code&gt; with diffusion or speech models, model loading will fail.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Interactive mode&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Llama 3.2 3B running on an M3 Max with 8-bit ISQ:&lt;/strong&gt;&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/res/demo.gif" alt="Interactive demo"&gt; 
&lt;p&gt;You can launch interactive mode, a simple chat application running in the terminal, by passing &lt;code&gt;-i&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server -i plain -m meta-llama/Llama-3.2-3B-Instruct
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Vision models work seamlessly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server -i vision-plain -m lamm-mit/Cephalo-Llama-3.2-11B-Vision-Instruct-128k
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Diffusion models can be run too (quantization and adapters are not yet supported):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server -i diffusion -m black-forest-labs/FLUX.1-schnell -a flux
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And you can run speech generation in your terminal!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server -i speech -m nari-labs/Dia-1.6B -a dia
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;OpenAI HTTP server&lt;/h3&gt; 
&lt;p&gt;You can launch an HTTP server by replacing &lt;code&gt;-i&lt;/code&gt; with &lt;code&gt;--port &amp;lt;port&amp;gt;&lt;/code&gt;. For instance:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server --port 1234 run -m microsoft/Phi-3.5-MoE-instruct
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can find documentation about the server itself &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/HTTP.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Multi-model support&lt;/h3&gt; 
&lt;p&gt;Serve multiple models simultaneously from a single server instance. Perfect for comparing models, A/B testing, or serving different models for different use cases.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server --port 1234 multi-model --config example-multi-model-config.json --default-model-id meta-llama/Llama-3.2-3B-Instruct
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Select models in your requests using the &lt;code&gt;model&lt;/code&gt; parameter:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl http://localhost:1234/v1/chat/completions \
  -H "Content-Type: application/json" \
  -d '{"model": "meta-llama/Llama-3.2-3B-Instruct", "messages": [{"role": "user", "content": "Hello!"}]}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;📖 &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/multi_model/README.md"&gt;Complete multi-model documentation →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Structured selection with a &lt;code&gt;.toml&lt;/code&gt; file&lt;/h3&gt; 
&lt;p&gt;We provide a method to select models with a &lt;code&gt;.toml&lt;/code&gt; file. The keys are the same as the command line, with &lt;code&gt;no_kv_cache&lt;/code&gt; and &lt;code&gt;tokenizer_json&lt;/code&gt; being "global" keys.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server --port 1234 toml -f toml-selectors/gguf.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Architecture for plain models&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: for plain models, you can specify the data type to load and run in. This must be one of &lt;code&gt;f32&lt;/code&gt;, &lt;code&gt;f16&lt;/code&gt;, &lt;code&gt;bf16&lt;/code&gt; or &lt;code&gt;auto&lt;/code&gt; to choose based on the device. This is specified in the &lt;code&gt;--dype&lt;/code&gt;/&lt;code&gt;-d&lt;/code&gt; parameter after the model architecture (&lt;code&gt;plain&lt;/code&gt;). For quantized models (gguf/ggml), you may specify data type of &lt;code&gt;f32&lt;/code&gt; or &lt;code&gt;bf16&lt;/code&gt; (&lt;code&gt;f16&lt;/code&gt; is not recommended due to its lower precision in quantized inference).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you do not specify the architecture, an attempt will be made to use the model's config. If this fails, please raise an issue.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Show plain architectures&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;mistral&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;gemma&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;mixtral&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;llama&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;phi2&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;phi3&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;phi3.5moe&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;qwen2&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;gemma2&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;glm4&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;starcoder2&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;deepseekv2&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;deepseekv3&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;qwen3&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;qwen3moe&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;smollm3&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;Architecture for vision models&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: for vision models, you can specify the data type to load and run in. This must be one of &lt;code&gt;f32&lt;/code&gt;, &lt;code&gt;f16&lt;/code&gt;, &lt;code&gt;bf16&lt;/code&gt; or &lt;code&gt;auto&lt;/code&gt; to choose based on the device. This is specified in the &lt;code&gt;--dype&lt;/code&gt;/&lt;code&gt;-d&lt;/code&gt; parameter after the model architecture (&lt;code&gt;vision-plain&lt;/code&gt;).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;Show vision architectures&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;phi3v&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;idefics2&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;llava_next&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;llava&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;vllama&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;qwen2vl&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;idefics3&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;minicpmo&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;phi4mm&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;qwen2_5vl&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;gemma3&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;mistral3&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;llama4&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;gemma3n&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;Supported GGUF architectures&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Show supported GGUF architectures&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Plain:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;llama&lt;/li&gt; 
  &lt;li&gt;phi2&lt;/li&gt; 
  &lt;li&gt;phi3&lt;/li&gt; 
  &lt;li&gt;starcoder2&lt;/li&gt; 
  &lt;li&gt;qwen2&lt;/li&gt; 
  &lt;li&gt;qwen3&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;With adapters:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;llama&lt;/li&gt; 
  &lt;li&gt;phi3&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;Please submit more benchmarks via raising an issue!&lt;/p&gt; 
&lt;h2&gt;Supported models&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Show quantization support&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Quantization support&lt;/strong&gt;&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Model&lt;/th&gt; 
    &lt;th&gt;GGUF&lt;/th&gt; 
    &lt;th&gt;GGML&lt;/th&gt; 
    &lt;th&gt;ISQ&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Mistral&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Gemma&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Llama&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Mixtral&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Phi 2&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Phi 3&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Phi 3.5 MoE&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Qwen 2.5&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Phi 3 Vision&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Idefics 2&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Gemma 2&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;GLM4&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Starcoder 2&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;LLaVa Next&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;LLaVa&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Llama 3.2 Vision&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Qwen2-VL&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Idefics 3&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Deepseek V2&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Deepseek V3&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;MiniCPM-O 2.6&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Qwen2.5-VL&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Gemma 3&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Mistral 3&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Llama 4&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Qwen 3&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SmolLM3&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Dia 1.6b&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Gemma 3n&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Show device mapping support&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Device mapping support&lt;/strong&gt;&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Model category&lt;/th&gt; 
    &lt;th&gt;Supported&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Plain&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;GGUF&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;GGML&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Vision Plain&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Show X-LoRA and LoRA support&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;X-LoRA and LoRA support&lt;/strong&gt;&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Model&lt;/th&gt; 
    &lt;th&gt;X-LoRA&lt;/th&gt; 
    &lt;th&gt;X-LoRA+GGUF&lt;/th&gt; 
    &lt;th&gt;X-LoRA+GGML&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Mistral&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Gemma&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Llama&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Mixtral&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Phi 2&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Phi 3&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Phi 3.5 MoE&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Qwen 2.5&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Phi 3 Vision&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Idefics 2&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Gemma 2&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;GLM4&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Starcoder 2&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;LLaVa Next&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;LLaVa&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Qwen2-VL&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Idefics 3&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Deepseek V2&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Deepseek V3&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;MiniCPM-O 2.6&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Qwen2.5-VL&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Gemma 3&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Mistral 3&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Llama 4&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Qwen 3&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SmolLM3&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Gemma 3n&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Show AnyMoE support&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;AnyMoE support&lt;/strong&gt;&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Model&lt;/th&gt; 
    &lt;th&gt;AnyMoE&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Mistral 7B&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Gemma&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Llama&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Mixtral&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Phi 2&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Phi 3&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Phi 3.5 MoE&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Qwen 2.5&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Phi 3 Vision&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Idefics 2&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Gemma 2&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Starcoder 2&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;LLaVa Next&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;LLaVa&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Llama 3.2 Vision&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Qwen2-VL&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Idefics 3&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Deepseek V2&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Deepseek V3&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;MiniCPM-O 2.6&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Qwen2.5-VL&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Gemma 3&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Mistral 3&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Llama 4&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Qwen 3&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SmolLM3&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Gemma 3n&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;h3&gt;Using derivative and adapter models&lt;/h3&gt; 
&lt;p&gt;To use a derivative or adapter model (e.g., quantized, LoRA, X-LoRA, vision, etc.), select the correct architecture subcommand and pass the required arguments—typically model id, and for quantized/adapters, also the quantization filename, tokenizer, or adapter ordering if needed.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;See all options:&lt;/strong&gt; Run &lt;code&gt;./mistralrs-server &amp;lt;subcommand&amp;gt; --help&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docs:&lt;/strong&gt; &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/ADAPTER_MODELS.md"&gt;Adapter models&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/CHAT_TOK.md"&gt;Chat templates&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Arguments by model type&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Model Type&lt;/th&gt; 
    &lt;th&gt;Required Arguments&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Plain&lt;/td&gt; 
    &lt;td&gt;model id&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Quantized&lt;/td&gt; 
    &lt;td&gt;model id, quantized filename, tokenizer id&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;X-LoRA&lt;/td&gt; 
    &lt;td&gt;model id, X-LoRA ordering (if not default)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;X-LoRA quantized&lt;/td&gt; 
    &lt;td&gt;model id, quantized filename, tokenizer id, X-LoRA ordering&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;LoRA&lt;/td&gt; 
    &lt;td&gt;model id, LoRA ordering (if not default)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;LoRA quantized&lt;/td&gt; 
    &lt;td&gt;model id, quantized filename, tokenizer id, LoRA ordering&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Vision Plain&lt;/td&gt; 
    &lt;td&gt;model id&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Example: Zephyr GGUF model&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;./mistralrs-server --port 1234 --log output.txt gguf -t HuggingFaceH4/zephyr-7b-beta -m TheBloke/zephyr-7B-beta-GGUF -f zephyr-7b-beta.Q5_0.gguf
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Chat template and tokenizer are usually auto-detected.&lt;br&gt; If you need to override, see the &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/CHAT_TOK.md"&gt;chat templates doc&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;An adapter model is a model with X-LoRA or LoRA. X-LoRA support is provided by selecting the &lt;code&gt;x-lora-*&lt;/code&gt; architecture, and LoRA support by selecting the &lt;code&gt;lora-*&lt;/code&gt; architecture. Please find docs for adapter models &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/ADAPTER_MODELS.md"&gt;here&lt;/a&gt;. Examples may be found &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/LORA_XLORA.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Chat Templates and Tokenizer&lt;/h3&gt; 
&lt;p&gt;Mistral.rs will attempt to automatically load a chat template and tokenizer. This enables high flexibility across models and ensures accurate and flexible chat templating. However, this behavior can be customized. Please find detailed documentation &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/docs/CHAT_TOK.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Thank you for contributing! If you have any problems or want to contribute something, please raise an issue or pull request. If you want to add a new model, please contact us via an issue and we can coordinate how to do this.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Debugging with the environment variable &lt;code&gt;MISTRALRS_DEBUG=1&lt;/code&gt; causes the following things 
  &lt;ul&gt; 
   &lt;li&gt;If loading a GGUF or GGML model, this will output a file containing the names, shapes, and types of each tensor. 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;mistralrs_gguf_tensors.txt&lt;/code&gt; or &lt;code&gt;mistralrs_ggml_tensors.txt&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;More logging.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Setting the CUDA compiler path: 
  &lt;ul&gt; 
   &lt;li&gt;Set the &lt;code&gt;NVCC_CCBIN&lt;/code&gt; environment variable during build.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Error: &lt;code&gt;recompile with -fPIE&lt;/code&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Some Linux distributions require compiling with &lt;code&gt;-fPIE&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Set the &lt;code&gt;CUDA_NVCC_FLAGS&lt;/code&gt; environment variable to &lt;code&gt;-fPIE&lt;/code&gt; during build: &lt;code&gt;CUDA_NVCC_FLAGS=-fPIE&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Error &lt;code&gt;CUDA_ERROR_NOT_FOUND&lt;/code&gt; or symbol not found when using a normal or vison model: 
  &lt;ul&gt; 
   &lt;li&gt;For non-quantized models, you can specify the data type to load and run in. This must be one of &lt;code&gt;f32&lt;/code&gt;, &lt;code&gt;f16&lt;/code&gt;, &lt;code&gt;bf16&lt;/code&gt; or &lt;code&gt;auto&lt;/code&gt; to choose based on the device.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;What is the minimum supported CUDA compute cap? 
  &lt;ul&gt; 
   &lt;li&gt;The minimum CUDA compute cap is &lt;strong&gt;5.3&lt;/strong&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Metal not found (error: unable to find utility "metal", not a developer tool or in PATH) 
  &lt;ol&gt; 
   &lt;li&gt;Install Xcode: &lt;code&gt;xcode-select --install&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Set the active developer directory: &lt;code&gt;sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Disabling Metal kernel precompilation: 
  &lt;ul&gt; 
   &lt;li&gt;By default, Metal kernels are precompiled during build time for better performance&lt;/li&gt; 
   &lt;li&gt;To skip Metal kernel precompilation (useful for CI or when Metal is not needed), set &lt;code&gt;MISTRALRS_METAL_PRECOMPILE=0&lt;/code&gt; or &lt;code&gt;MISTRALRS_METAL_PRECOMPILE=false&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Example: &lt;code&gt;MISTRALRS_METAL_PRECOMPILE=0 cargo build --release --features metal&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;This project would not be possible without the excellent work at &lt;a href="https://github.com/huggingface/candle"&gt;&lt;code&gt;candle&lt;/code&gt;&lt;/a&gt;. Additionally, thank you to all contributors! Contributing can range from raising an issue or suggesting a feature to adding some new functionality.&lt;/p&gt; 
&lt;p align="right"&gt; &lt;a href="https://raw.githubusercontent.com/EricLBuehler/mistral.rs/master/#top"&gt;⬆️ Back to Top&lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lapce/lapce</title>
      <link>https://github.com/lapce/lapce</link>
      <description>&lt;p&gt;Lightning-fast and Powerful Code Editor written in Rust&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;a href="https://lapce.dev" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/lapce/lapce/master/extra/images/logo.png" width="200" height="200/"&gt;&lt;br&gt; Lapce &lt;/a&gt; &lt;/h1&gt; 
&lt;h4 align="center"&gt;Lightning-fast And Powerful Code Editor&lt;/h4&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/lapce/lapce/actions/workflows/ci.yml" target="_blank"&gt; &lt;img src="https://github.com/lapce/lapce/actions/workflows/ci.yml/badge.svg?sanitize=true"&gt; &lt;/a&gt; 
 &lt;a href="https://discord.gg/n8tGJ6Rn6D" target="_blank"&gt; &lt;img src="https://img.shields.io/discord/946858761413328946?logo=discord"&gt; &lt;/a&gt; 
 &lt;a href="https://docs.lapce.dev" target="_blank"&gt; &lt;img src="https://img.shields.io/static/v1?label=Docs&amp;amp;message=docs.lapce.dev&amp;amp;color=blue" alt="Lapce Docs"&gt; &lt;/a&gt; 
 &lt;a href="https://wiki.mutable.ai/lapce/lapce" target="_blank"&gt; &lt;img src="https://img.shields.io/static/v1?label=Code%20Wiki&amp;amp;message=Mutable.ai&amp;amp;color=blue" alt="Mutable.ai Auto Wiki"&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;p&gt;Lapce (IPA: /læps/) is written in pure Rust, with a UI in &lt;a href="https://github.com/lapce/floem"&gt;Floem&lt;/a&gt;. It is designed with &lt;a href="https://xi-editor.io/docs/rope_science_00.html"&gt;Rope Science&lt;/a&gt; from the &lt;a href="https://github.com/xi-editor/xi-editor"&gt;Xi-Editor&lt;/a&gt;, enabling lightning-fast computation, and leverages &lt;a href="https://github.com/gfx-rs/wgpu"&gt;wgpu&lt;/a&gt; for rendering. More information about the features of Lapce can be found on the &lt;a href="https://lapce.dev"&gt;main website&lt;/a&gt; and user documentation can be found on &lt;a href="https://docs.lapce.dev/"&gt;GitBook&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/lapce/lapce/raw/master/extra/images/screenshot.png?raw=true" alt=""&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Built-in LSP (&lt;a href="https://microsoft.github.io/language-server-protocol/"&gt;Language Server Protocol&lt;/a&gt;) support to give you intelligent code features such as: completion, diagnostics and code actions&lt;/li&gt; 
 &lt;li&gt;Modal editing support as first class citizen (Vim-like, and toggleable)&lt;/li&gt; 
 &lt;li&gt;Built-in remote development support inspired by &lt;a href="https://code.visualstudio.com/docs/remote/remote-overview"&gt;VSCode Remote Development&lt;/a&gt;. Enjoy the benefits of a "local" experience, and seamlessly gain the full power of a remote system. We also have &lt;a href="https://lap.dev/"&gt;Lapdev&lt;/a&gt; which can help manage your remote dev environments.&lt;/li&gt; 
 &lt;li&gt;Plugins can be written in programming languages that can compile to the &lt;a href="https://wasi.dev/"&gt;WASI&lt;/a&gt; format (C, Rust, &lt;a href="https://www.assemblyscript.org/"&gt;AssemblyScript&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Built-in terminal, so you can execute commands in your workspace, without leaving Lapce.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;You can find pre-built releases for Windows, Linux and macOS &lt;a href="https://github.com/lapce/lapce/releases"&gt;here&lt;/a&gt;, or &lt;a href="https://raw.githubusercontent.com/lapce/lapce/master/docs/installing-with-package-manager.md"&gt;installing with a package manager&lt;/a&gt;. If you'd like to compile from source, you can find the &lt;a href="https://raw.githubusercontent.com/lapce/lapce/master/docs/building-from-source.md"&gt;guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;a href="https://ws.lap.dev/#https://github.com/lapce/lapce" target="_blank"&gt; &lt;img src="https://lap.dev/images/open-in-lapdev.svg?version=8" alt="Open in Lapdev"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;a href="https://lap.dev/"&gt;Lapdev&lt;/a&gt;, developed by the Lapce team, is a cloud dev env service similar to GitHub Codespaces. By clicking the button above, you'll be taken to a fully set up Lapce dev env where you can browse the code and start developing. All dependencies are pre-installed, so you can get straight to code.&lt;/p&gt; 
&lt;p&gt;Guidelines for contributing to Lapce can be found in &lt;a href="https://raw.githubusercontent.com/lapce/lapce/master/CONTRIBUTING.md"&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Feedback &amp;amp; Contact&lt;/h2&gt; 
&lt;p&gt;The most popular place for Lapce developers and users is on the &lt;a href="https://discord.gg/n8tGJ6Rn6D"&gt;Discord server&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Or, join the discussion on &lt;a href="https://www.reddit.com/r/lapce/"&gt;Reddit&lt;/a&gt; where we are just getting started.&lt;/p&gt; 
&lt;p&gt;There is also a &lt;a href="https://matrix.to/#/%23lapce-editor:matrix.org"&gt;Matrix Space&lt;/a&gt;, which is linked to the content from the Discord server.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Lapce is released under the Apache License Version 2, which is an open source license. You may contribute to this project, or use the code as you please as long as you adhere to its conditions. You can find a copy of the license text here: &lt;a href="https://raw.githubusercontent.com/lapce/lapce/master/LICENSE"&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>warp-tech/warpgate</title>
      <link>https://github.com/warp-tech/warpgate</link>
      <description>&lt;p&gt;Smart SSH, HTTPS, MySQL and Postgres bastion/PAM that doesn't need additional client-side software&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://github.com/user-attachments/assets/89be835b-ff96-46df-94c7-ae2d176615e3"&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset=".github/readme/brand-dark.svg"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="warpgate-web/public/assets/brand.svg"&gt; 
  &lt;img alt="Shows a black logo in light color mode and a white one in dark color mode." src="https://raw.githubusercontent.com/warp-tech/warpgate/main/.github/readme/brand-dark.svg?sanitize=true"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/warp-tech/warpgate/releases/latest"&gt;&lt;img alt="GitHub All Releases" src="https://img.shields.io/github/downloads/warp-tech/warpgate/total.svg?label=DOWNLOADS&amp;amp;logo=github&amp;amp;style=for-the-badge&amp;amp;color=8f8"&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://nightly.link/warp-tech/warpgate/workflows/build/main"&gt;&lt;img src="https://shields.io/badge/-Nightly%20Builds-fa5?logo=hackthebox&amp;amp;logoColor=444&amp;amp;style=for-the-badge"&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://discord.gg/Vn7BjmzhtF"&gt;&lt;img alt="Discord" src="https://img.shields.io/discord/1280890060195233934?style=for-the-badge&amp;amp;color=acc&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;label=Discord"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://ko-fi.com/J3J8KWTF"&gt; &lt;img src="https://cdn.ko-fi.com/cdn/kofi3.png?v=2" width="150"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Warpgate is a smart SSH, HTTPS, MySQL and PostgreSQL bastion host for Linux that doesn't need special client apps.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set it up in your DMZ, add user accounts and easily assign them to specific hosts and URLs within the network.&lt;/li&gt; 
 &lt;li&gt;Warpgate will record every session for you to view (live) and replay later through a built-in admin web UI.&lt;/li&gt; 
 &lt;li&gt;Not a jump host - forwards your connections straight to the target instead.&lt;/li&gt; 
 &lt;li&gt;Native 2FA and SSO support (TOTP &amp;amp; OpenID Connect)&lt;/li&gt; 
 &lt;li&gt;Single binary with no dependencies.&lt;/li&gt; 
 &lt;li&gt;Written in 100% safe Rust.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started &amp;amp; downloads&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;See the &lt;a href="https://warpgate.null.page/getting-started/"&gt;Getting started&lt;/a&gt; docs page (or &lt;a href="https://warpgate.null.page/getting-started-on-docker/"&gt;Getting started on Docker&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/warp-tech/warpgate/releases"&gt;Release / beta binaries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nightly.link/warp-tech/warpgate/workflows/build/main"&gt;Nightly builds&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;center&gt; 
 &lt;img width="783" alt="image" src="https://user-images.githubusercontent.com/161476/162640762-a91a2816-48c0-44d9-8b03-5b1e2cb42d51.png"&gt; 
&lt;/center&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;img src="https://github.com/user-attachments/assets/c9a6a372-198e-4f46-ab86-8c420dc24bca"&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://github.com/user-attachments/assets/a2166426-e865-4aba-9600-520954bcfe7f"&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://github.com/user-attachments/assets/366a5afb-aa86-4902-9080-eb2f40bf162c"&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Reporting security issues&lt;/h2&gt; 
&lt;p&gt;Please use GitHub's &lt;a href="https://github.com/warp-tech/warpgate/security/policy"&gt;vulnerability reporting system&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Project Status&lt;/h2&gt; 
&lt;p&gt;The project is ready for production.&lt;/p&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;p&gt;Warpgate is a service that you deploy on the bastion/DMZ host, which will accept SSH, HTTPS, MySQL and PostgreSQL connections and provide an (optional) web admin UI.&lt;/p&gt; 
&lt;p&gt;Run &lt;code&gt;warpgate setup&lt;/code&gt; to interactively generate a config file, including port bindings. See &lt;a href="https://warpgate.null.page/getting-started/"&gt;Getting started&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;It receives connections with specifically formatted credentials, authenticates the user locally, connects to the target itself, and then connects both parties together while (optionally) recording the session.&lt;/p&gt; 
&lt;p&gt;When connecting through HTTPS, Warpgate presents a selection of available targets, and will then proxy all traffic in a session to the selected target. You can switch between targets at any time.&lt;/p&gt; 
&lt;p&gt;You manage the target and user lists and assign them to each other through the admin UI, and the session history is stored in an SQLite database (default: in &lt;code&gt;/var/lib/warpgate&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;You can also use the admin web interface to view the live session list, review session recordings, logs and more.&lt;/p&gt; 
&lt;h2&gt;Contributing / building from source&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;You'll need Rust, NodeJS and NPM&lt;/li&gt; 
 &lt;li&gt;Clone the repo&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/casey/just"&gt;Just&lt;/a&gt; is used to run tasks - install it: &lt;code&gt;cargo install just&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install the admin UI deps: &lt;code&gt;just npm&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Build the frontend: &lt;code&gt;just npm run build&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Build Warpgate: &lt;code&gt;cargo build&lt;/code&gt; (optionally &lt;code&gt;--release&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The binary is in &lt;code&gt;target/{debug|release}&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Tech stack&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Rust 🦀 
  &lt;ul&gt; 
   &lt;li&gt;HTTP: &lt;code&gt;poem-web&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Database: SQLite via &lt;code&gt;sea-orm&lt;/code&gt; + &lt;code&gt;sqlx&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;SSH: &lt;code&gt;russh&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Typescript 
  &lt;ul&gt; 
   &lt;li&gt;Svelte&lt;/li&gt; 
   &lt;li&gt;Bootstrap&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Backend API&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Warpgate admin and user facing APIs use autogenerated OpenAPI schemas and SDKs. To update the SDKs after changing the query/response structures, run &lt;code&gt;just openapi-all&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href="https://allcontributors.org/docs/en/emoji-key"&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Eugeny"&gt;&lt;img src="https://avatars.githubusercontent.com/u/161476?v=4?s=100" width="100px;" alt="Eugeny"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eugeny&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/Eugeny/warpgate/commits?author=Eugeny" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://the-empire.systems/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18178614?v=4?s=100" width="100px;" alt="Spencer Heywood"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Spencer Heywood&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/Eugeny/warpgate/commits?author=heywoodlh" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/apiening"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2064875?v=4?s=100" width="100px;" alt="Andreas Piening"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andreas Piening&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/Eugeny/warpgate/commits?author=apiening" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Gurkengewuerz"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10966337?v=4?s=100" width="100px;" alt="Niklas"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Niklas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/Eugeny/warpgate/commits?author=Gurkengewuerz" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/notnooblord"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11678665?v=4?s=100" width="100px;" alt="Nooblord"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nooblord&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/Eugeny/warpgate/commits?author=notnooblord" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://shea.nz/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51303984?v=4?s=100" width="100px;" alt="Shea Smith"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shea Smith&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/Eugeny/warpgate/commits?author=SheaSmith" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/samtoxie"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7732658?v=4?s=100" width="100px;" alt="samtoxie"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;samtoxie&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/Eugeny/warpgate/commits?author=samtoxie" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; 
&lt;p&gt;This project follows the &lt;a href="https://github.com/all-contributors/all-contributors"&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>