<rss version="2.0">
  <channel>
    <title>GitHub Go Daily Trending</title>
    <description>Daily Trending of Go in GitHub</description>
    <pubDate>Mon, 04 Aug 2025 01:32:57 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>evcc-io/evcc</title>
      <link>https://github.com/evcc-io/evcc</link>
      <description>&lt;p&gt;solar charging ‚òÄÔ∏èüöò&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;evcc üöò‚òÄÔ∏è&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/evcc-io/evcc/actions/workflows/nightly.yml"&gt;&lt;img src="https://github.com/evcc-io/evcc/actions/workflows/nightly.yml/badge.svg?sanitize=true" alt="Build"&gt;&lt;/a&gt; &lt;a href="https://hosted.weblate.org/engage/evcc/"&gt;&lt;img src="https://hosted.weblate.org/widgets/evcc/-/evcc/svg-badge.svg?sanitize=true" alt="Translation"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/docker/pulls/evcc/evcc" alt="Docker Pulls"&gt; &lt;a href="https://cloudsmith.io/~evcc/packages/"&gt;&lt;img src="https://img.shields.io/badge/OSS%20hosting%20by-cloudsmith-blue?logo=cloudsmith" alt="OSS hosting by cloudsmith"&gt;&lt;/a&gt; &lt;a href="https://github.com/evcc-io/evcc/releases"&gt;&lt;img src="https://img.shields.io/github/release/evcc-io/evcc.svg?sanitize=true" alt="Latest Version"&gt;&lt;/a&gt;&lt;br&gt; &lt;a href="https://depot.dev/?utm_source=evcc"&gt;&lt;img src="https://depot.dev/badges/built-with-depot.svg?sanitize=true" alt="Built with Depot"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;evcc is an extensible EV Charge Controller and home energy management system.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/evcc-io/evcc/master/assets/github/screenshot.webp" alt="Screenshot"&gt;&lt;/p&gt; 
&lt;p&gt;Our goal is to provide local energy management, without relying on cloud services. Featured in &lt;a href="https://www.pv-magazine.de/2022/01/14/mit-open-source-lademanager-schnittstellen-zu-wallbox-und-photovoltaik-anlage-meistern/"&gt;PV Magazine&lt;/a&gt; and &lt;a href="https://www.youtube.com/watch?v=MoBpEXHMNjI"&gt;c‚Äôt Magazin&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;simple and clean user interface&lt;/li&gt; 
 &lt;li&gt;support for many &lt;a href="https://docs.evcc.io/en/docs/devices/chargers"&gt;EV chargers&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;ABB, ABL, Alfen, Alphatec, Amperfied, Ampure, Audi, AUTEL, Autoaid, Bender, BMW, cFos, Charge Amps, Compleo, CUBOS, Cupra, Dadapower, DaheimLaden, Delta, E.ON Drive, E3/DC, Easee, Ebee, echarge, EcoHarmony, Edgetech, Elecq, eledio, Elli, EM2GO, EN+, enercab, Ensto, EntraTek, ESL, eSystems, Etrel, EVBox, Free2Move, Free2move eSolutions, Fronius, Garo, go-e, Hardy Barth, Heidelberg, Hesotec, Homecharge, Huawei, Innogy, INRO, Juice, Kathrein, KEBA, Kontron Solar, Kostal, KSE, LadeFoxx, LRT, Mennekes, NRGkick, OBO Bettermann, OpenEVSE, openWB, Optec, Orbis, PC Electric, Peblar, Phoenix Contact, Plugchoice, Porsche, Pracht, Pulsares, Pulsatrix, Qcells, Schneider, Schrack, SENEC, Siemens, Skoda, SMA, Smartfox, SolarEdge, Solax, Sonnen, Spelsberg, Stark in Strom, Sungrow, TechniSat, Tesla, Tigo, TinkerForge, Ubitricity, V2C Trydan, Vestel, Victron, Viridian EV, Volkswagen, Volt Time, Wallbe, wallbox, Walther Werke, Webasto, Weidm√ºller, Zaptec, ZJ Beny. &lt;a href="https://docs.evcc.io/en/docs/devices/chargers"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;EEBus&lt;/strong&gt; support (Elli, PMCC)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;OCPP&lt;/strong&gt; support&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;build-your-own:&lt;/strong&gt; Phoenix Contact (includes ESL Walli), EVSE DIN&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;smart switches:&lt;/strong&gt; AVM, Home Assistant, Homematic IP, HomeWizard, myStrom, Shelly, Tasmota, TP-Link. &lt;a href="https://docs.evcc.io/en/docs/devices/smartswitches"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;heat pumps and electric heaters:&lt;/strong&gt; alpha innotec, Bosch, Buderus, B√∂sch, CTA All-In-One, Daikin, Elco, IDM, Junkers, Kermi, Lambda, my-PV, Nibe, Novelan, Roth, Stiebel Eltron, Tecalor, Vaillant, Viessmann, Wolf, Zewotherm. &lt;a href="https://docs.evcc.io/en/docs/devices/heating"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;support for many &lt;a href="https://docs.evcc.io/en/docs/devices/meters"&gt;energy meters&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;solar inverters and battery systems:&lt;/strong&gt; A-Tronix, Acrel, Ads-tec, Alpha ESS, Ampere, Anker, APsystems, AVM, Axitec, BGEtech, Bosch, Bosswerk, Carlo Gavazzi, Deye, E3/DC, Eastron, Enphase, FENECON, FoxESS, Fronius, Ginlong, go-e, GoodWe, Growatt, Homematic IP, HomeWizard, Hoymiles, Huawei, IAMMETER, IGEN Tech, Kostal, LG, Loxone, M-TEC, Marstek, myStrom, OpenEMS, Powerfox, Qcells, RCT, SAJ, SAX, SENEC, Senergy, Shelly, Siemens, Sigenergy, SMA, Smartfox, SofarSolar, Solaranzeige, SolarEdge, SolarMax, Solarwatt, Solax, Solinteng, Sonnen, St-ems, Steca, Sungrow, Sunsynk, Sunway, Tasmota, Tesla, TP-Link, VARTA, Victron, Wattsonic, Youless, ZCS Azzurro, Zendure. &lt;a href="https://docs.evcc.io/en/docs/devices/meters"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;general energy meters:&lt;/strong&gt; A-Tronix, ABB, Acrel, Alpha ESS, Ampere, AVM, Axitec, Bernecker Engineering, BGEtech, Bosch, Carlo Gavazzi, cFos, Deye, DSMR, DZG, E3/DC, Eastron, Enphase, ESPHome, FENECON, FoxESS, Fronius, Ginlong, go-e, GoodWe, Growatt, Homematic IP, HomeWizard, Huawei, IAMMETER, inepro, IOmeter, Janitza, KEBA, Kostal, LG, Loxone, M-TEC, mhendriks, my-PV, myStrom, OpenEMS, ORNO, P1Monitor, Powerfox, Qcells, RCT, Saia-Burgess Controls (SBC), SAJ, SAX, Schneider Electric, SENEC, Shelly, Siemens, Sigenergy, SMA, Smartfox, SofarSolar, Solaranzeige, SolarEdge, SolarMax, Solarwatt, Solax, Solinteng, Sonnen, St-ems, Sungrow, Sunsynk, Sunway, Tasmota, Tesla, Tibber, TQ, VARTA, Victron, Volksz√§hler, Wago, Wattsonic, Weidm√ºller, Youless, ZCS Azzurro, Zuidwijk. &lt;a href="https://docs.evcc.io/en/docs/devices/meters"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;integrated systems&lt;/strong&gt;: SMA Sunny Home Manager and Energy Meter, KOSTAL Smart Energy Meter (KSEM, EMxx)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;sunspec&lt;/strong&gt;-compatible inverter or home battery devices&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;mbmd&lt;/strong&gt;-compatible devices, see &lt;a href="https://github.com/volkszaehler/mbmd#supported-devices"&gt;volkszaehler/mbmd&lt;/a&gt; for a complete list&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.evcc.io/en/docs/devices/vehicles"&gt;vehicle&lt;/a&gt; integrations (state of charge, remote charge, battery and preconditioning status): 
  &lt;ul&gt; 
   &lt;li&gt;Aiways, Audi, BMW, Citro√´n, Dacia, DS, Fiat, Ford, Hyundai, Jeep, Kia, Mercedes-Benz, MG, Mini, Nissan, NIU, Opel, Peugeot, Polestar, Renault, Seat, Skoda, Smart, Tesla, Toyota, Volkswagen, Volvo, Zero Motorcycles. &lt;a href="https://docs.evcc.io/en/docs/devices/vehicles"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;services:&lt;/strong&gt; OVMS, Tronity, evNotify, ioBroker.bmw, mg2mqtt, mz2mqtt, TeslaLogger, TeslaMate, Tessi, volvo2mqtt&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.evcc.io/en/docs/devices/plugins"&gt;plugins&lt;/a&gt; for integrating with any charger, smartswitch, heatpump, electric heater, meter, solar- / battery-inverter or vehicle: 
  &lt;ul&gt; 
   &lt;li&gt;Modbus, HTTP, MQTT, JavaScript, WebSocket, Go and shell scripts&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;status &lt;a href="https://docs.evcc.io/en/docs/reference/configuration/messaging"&gt;notifications&lt;/a&gt; using &lt;a href="https://telegram.org"&gt;Telegram&lt;/a&gt;, &lt;a href="https://pushover.net"&gt;PushOver&lt;/a&gt; and &lt;a href="https://containrrr.dev/shoutrrr/"&gt;many more&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;logging using &lt;a href="https://www.influxdata.com"&gt;InfluxDB&lt;/a&gt; and &lt;a href="https://grafana.com/grafana/"&gt;Grafana&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.evcc.io/en/docs/integrations/rest-api"&gt;REST&lt;/a&gt; and &lt;a href="https://docs.evcc.io/en/docs/integrations/mqtt-api"&gt;MQTT&lt;/a&gt; APIs for integration with home automation systems&lt;/li&gt; 
 &lt;li&gt;Add-ons for &lt;a href="https://docs.evcc.io/en/docs/integrations/home-assistant"&gt;Home Assistant&lt;/a&gt; and &lt;a href="https://www.openhab.org/addons/bindings/evcc"&gt;OpenHAB&lt;/a&gt; (not maintained by the evcc core team)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;You'll find everything you need in our &lt;a href="https://docs.evcc.io/en/"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Technical details on how to contribute, how to add translations and how to build evcc from source can be found &lt;a href="https://raw.githubusercontent.com/evcc-io/evcc/master/CONTRIBUTING.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hosted.weblate.org/engage/evcc/"&gt;&lt;img src="https://hosted.weblate.org/widgets/evcc/-/evcc/287x66-grey.png" alt="Weblate Hosted"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsorship&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/evcc-io/evcc/master/assets/github/evcc-gopher.png" align="right" width="150"&gt; 
&lt;p&gt;evcc believes in open source software. We're committed to provide best in class EV charging experience. Maintaining evcc consumes time and effort. With the vast amount of different devices to support, we depend on community and vendor support to keep evcc alive.&lt;/p&gt; 
&lt;p&gt;While evcc is open source, we would also like to encourage vendors to provide open source hardware devices, public documentation and support open source projects like ours that provide additional value to otherwise closed hardware. Where this is not the case, evcc requires "sponsor token" to finance ongoing development and support of evcc.&lt;/p&gt; 
&lt;p&gt;Learn more about our &lt;a href="https://docs.evcc.io/en/docs/sponsorship"&gt;sponsorship model&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>v2fly/v2ray-core</title>
      <link>https://github.com/v2fly/v2ray-core</link>
      <description>&lt;p&gt;A platform for building proxies to bypass network restrictions.&lt;/p&gt;&lt;hr&gt;&lt;div&gt; 
 &lt;img width="190" height="210" align="left" src="https://raw.githubusercontent.com/v2fly/v2fly-github-io/master/docs/.vuepress/public/readme-logo.png" alt="V2Ray"&gt; 
 &lt;br&gt; 
 &lt;h1&gt;Project V&lt;/h1&gt; 
 &lt;p&gt;Project V is a set of network tools that helps you to build your own computer network. It secures your network connections and thus protects your privacy.&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://github.com/v2fly/v2ray-core/actions"&gt;&lt;img src="https://github.com/v2fly/v2ray-core/workflows/Test/badge.svg?sanitize=true" alt="GitHub Test Badge"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/v2fly/v2ray-core?branch=master"&gt;&lt;img src="https://codecov.io/gh/v2fly/v2ray-core/branch/master/graph/badge.svg?branch=master" alt="codecov.io"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/v2fly/v2ray-core"&gt;&lt;img src="https://goreportcard.com/badge/github.com/v2fly/v2ray-core" alt="codebeat"&gt;&lt;/a&gt; &lt;a href="https://www.codacy.com/gh/v2fly/v2ray-core/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=v2fly/v2ray-core&amp;amp;utm_campaign=Badge_Grade"&gt;&lt;img src="https://app.codacy.com/project/badge/Grade/e150b7ede2114388921943bf23d95161" alt="Codacy Badge"&gt;&lt;/a&gt; &lt;a href="https://github.com/v2fly/v2ray-core/releases/latest"&gt;&lt;img src="https://img.shields.io/github/downloads/v2fly/v2ray-core/total.svg?sanitize=true" alt="Downloads"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Related Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.v2fly.org"&gt;Documentation&lt;/a&gt; and &lt;a href="https://www.v2fly.org/guide/start.html"&gt;Newcomer's Instructions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Welcome to translate V2Ray documents via &lt;a href="https://www.transifex.com/v2fly/public/"&gt;Transifex&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Packaging Status&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If you are willing to package V2Ray for other distros/platforms, please let us know or seek for help via &lt;a href="https://github.com/v2fly/v2ray-core/issues"&gt;GitHub issues&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/v2ray/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/v2ray.svg?sanitize=true" alt="Packaging status"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/v2fly/v2ray-core/master/LICENSE"&gt;The MIT License (MIT)&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;This repo relies on the following third-party projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;In production:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/gorilla/websocket"&gt;gorilla/websocket&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/quic-go/quic-go"&gt;quic-go/quic-go&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/pires/go-proxyproto"&gt;pires/go-proxyproto&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/seiflotfy/cuckoofilter"&gt;seiflotfy/cuckoofilter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/google/starlark-go"&gt;google/starlark-go&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/jhump/protoreflect"&gt;jhump/protoreflect&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/inetaf/netaddr"&gt;inetaf/netaddr&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For testing only:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/miekg/dns"&gt;miekg/dns&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/h12w/socks"&gt;h12w/socks&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>sst/opencode</title>
      <link>https://github.com/sst/opencode</link>
      <description>&lt;p&gt;AI coding agent, built for the terminal.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://opencode.ai"&gt; 
  &lt;picture&gt; 
   &lt;source srcset="packages/web/src/assets/logo-ornate-dark.svg" media="(prefers-color-scheme: dark)"&gt; 
   &lt;source srcset="packages/web/src/assets/logo-ornate-light.svg" media="(prefers-color-scheme: light)"&gt; 
   &lt;img src="https://raw.githubusercontent.com/sst/opencode/dev/packages/web/src/assets/logo-ornate-light.svg?sanitize=true" alt="opencode logo"&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;AI coding agent, built for the terminal.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://opencode.ai/discord"&gt;&lt;img alt="Discord" src="https://img.shields.io/discord/1391832426048651334?style=flat-square&amp;amp;label=discord"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/opencode-ai"&gt;&lt;img alt="npm" src="https://img.shields.io/npm/v/opencode-ai?style=flat-square"&gt;&lt;/a&gt; &lt;a href="https://github.com/sst/opencode/actions/workflows/publish.yml"&gt;&lt;img alt="Build status" src="https://img.shields.io/github/actions/workflow/status/sst/opencode/publish.yml?style=flat-square&amp;amp;branch=dev"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencode.ai"&gt;&lt;img src="https://raw.githubusercontent.com/sst/opencode/dev/packages/web/src/assets/lander/screenshot.png" alt="opencode Terminal UI"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# YOLO
curl -fsSL https://opencode.ai/install | bash

# Package managers
npm i -g opencode-ai@latest        # or bun/pnpm/yarn
brew install sst/tap/opencode      # macOS
paru -S opencode-bin               # Arch Linux
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Remove versions older than 0.1.x before installing.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Installation Directory&lt;/h4&gt; 
&lt;p&gt;The install script respects the following priority order for the installation path:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;$OPENCODE_INSTALL_DIR&lt;/code&gt; - Custom installation directory&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$XDG_BIN_DIR&lt;/code&gt; - XDG Base Directory Specification compliant path&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$HOME/bin&lt;/code&gt; - Standard user binary directory (if exists or can be created)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$HOME/.opencode/bin&lt;/code&gt; - Default fallback&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Examples
OPENCODE_INSTALL_DIR=/usr/local/bin curl -fsSL https://opencode.ai/install | bash
XDG_BIN_DIR=$HOME/.local/bin curl -fsSL https://opencode.ai/install | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;For more info on how to configure opencode &lt;a href="https://opencode.ai/docs"&gt;&lt;strong&gt;head over to our docs&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;opencode is an opinionated tool so any fundamental feature needs to go through a design process with the core team.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] We do not accept PRs for core features.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;However we still merge a ton of PRs - you can contribute:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bug fixes&lt;/li&gt; 
 &lt;li&gt;Improvements to LLM performance&lt;/li&gt; 
 &lt;li&gt;Support for new providers&lt;/li&gt; 
 &lt;li&gt;Fixes for env specific quirks&lt;/li&gt; 
 &lt;li&gt;Missing standard behavior&lt;/li&gt; 
 &lt;li&gt;Documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Take a look at the git history to see what kind of PRs we end up merging.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you do not follow the above guidelines we might close your PR.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To run opencode locally you need.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bun&lt;/li&gt; 
 &lt;li&gt;Golang 1.24.x&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And run.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ bun install
$ bun run packages/opencode/src/index.ts
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Development Notes&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;API Client&lt;/strong&gt;: After making changes to the TypeScript API endpoints in &lt;code&gt;packages/opencode/src/server/server.ts&lt;/code&gt;, you will need the opencode team to generate a new stainless sdk for the clients.&lt;/p&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;h4&gt;How is this different than Claude Code?&lt;/h4&gt; 
&lt;p&gt;It's very similar to Claude Code in terms of capability. Here are the key differences:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;100% open source&lt;/li&gt; 
 &lt;li&gt;Not coupled to any provider. Although Anthropic is recommended, opencode can be used with OpenAI, Google or even local models. As models evolve the gaps between them will close and pricing will drop so being provider-agnostic is important.&lt;/li&gt; 
 &lt;li&gt;A focus on TUI. opencode is built by neovim users and the creators of &lt;a href="https://terminal.shop"&gt;terminal.shop&lt;/a&gt;; we are going to push the limits of what's possible in the terminal.&lt;/li&gt; 
 &lt;li&gt;A client/server architecture. This for example can allow opencode to run on your computer, while you can drive it remotely from a mobile app. Meaning that the TUI frontend is just one of the possible clients.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;What's the other repo?&lt;/h4&gt; 
&lt;p&gt;The other confusingly named repo has no relation to this one. You can &lt;a href="https://x.com/thdxr/status/1933561254481666466"&gt;read the story behind it here&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Join our community&lt;/strong&gt; &lt;a href="https://discord.gg/opencode"&gt;Discord&lt;/a&gt; | &lt;a href="https://www.youtube.com/c/sst-dev"&gt;YouTube&lt;/a&gt; | &lt;a href="https://x.com/SST_dev"&gt;X.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SagerNet/sing-box</title>
      <link>https://github.com/SagerNet/sing-box</link>
      <description>&lt;p&gt;The universal proxy platform&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sing-box&lt;/h1&gt; 
&lt;p&gt;The universal proxy platform.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/sing-box/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/sing-box.svg?sanitize=true" alt="Packaging status"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://sing-box.sagernet.org"&gt;https://sing-box.sagernet.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright (C) 2022 by nekohasekai &amp;lt;contact-sagernet@sekai.icu&amp;gt;

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.

In addition, no derivative work may use the name or imply association
with this application without prior consent.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>henrygd/beszel</title>
      <link>https://github.com/henrygd/beszel</link>
      <description>&lt;p&gt;Lightweight server monitoring hub with historical data, docker stats, and alerts.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Beszel&lt;/h1&gt; 
&lt;p&gt;Beszel is a lightweight server monitoring platform that includes Docker statistics, historical data, and alert functions.&lt;/p&gt; 
&lt;p&gt;It has a friendly web interface, simple configuration, and is ready to use out of the box. It supports automatic backup, multi-user, OAuth authentication, and API access.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/henrygd/beszel-agent"&gt;&lt;img src="https://img.shields.io/docker/image-size/henrygd/beszel-agent/latest?logo=docker&amp;amp;label=agent%20image%20size" alt="agent Docker Image Size"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/henrygd/beszel"&gt;&lt;img src="https://img.shields.io/docker/image-size/henrygd/beszel/latest?logo=docker&amp;amp;label=hub%20image%20size" alt="hub Docker Image Size"&gt;&lt;/a&gt; &lt;a href="https://github.com/henrygd/beszel/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/henrygd/beszel?color=%239944ee" alt="MIT license"&gt;&lt;/a&gt; &lt;a href="https://crowdin.com/project/beszel"&gt;&lt;img src="https://badges.crowdin.net/beszel/localized.svg?sanitize=true" alt="Crowdin"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://henrygd-assets.b-cdn.net/beszel/screenshot-new.png" alt="Screenshot of Beszel dashboard and system page, side by side. The dashboard shows metrics from multiple connected systems, while the system page shows detailed metrics for a single system."&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Lightweight&lt;/strong&gt;: Smaller and less resource-intensive than leading solutions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt;: Easy setup with little manual configuration required.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker stats&lt;/strong&gt;: Tracks CPU, memory, and network usage history for each container.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Alerts&lt;/strong&gt;: Configurable alerts for CPU, memory, disk, bandwidth, temperature, load average, and status.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt;: Users manage their own systems. Admins can share systems across users.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OAuth / OIDC&lt;/strong&gt;: Supports many OAuth2 providers. Password auth can be disabled.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic backups&lt;/strong&gt;: Save to and restore from disk or S3-compatible storage.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- - **REST API**: Use or update your data in your own scripts and applications. --&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;Beszel consists of two main components: the &lt;strong&gt;hub&lt;/strong&gt; and the &lt;strong&gt;agent&lt;/strong&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Hub&lt;/strong&gt;: A web application built on &lt;a href="https://pocketbase.io/"&gt;PocketBase&lt;/a&gt; that provides a dashboard for viewing and managing connected systems.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Agent&lt;/strong&gt;: Runs on each system you want to monitor and communicates system metrics to the hub.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://beszel.dev/guide/getting-started"&gt;quick start guide&lt;/a&gt; and other documentation is available on our website, &lt;a href="https://beszel.dev"&gt;beszel.dev&lt;/a&gt;. You'll be up and running in a few minutes.&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://beszel.dev/image/dashboard.png" alt="Dashboard"&gt; &lt;img src="https://beszel.dev/image/system-full.png" alt="System page"&gt; &lt;img src="https://beszel.dev/image/settings-notifications.png" alt="Notification Settings"&gt;&lt;/p&gt; 
&lt;h2&gt;Supported metrics&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;CPU usage&lt;/strong&gt; - Host system and Docker / Podman containers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Memory usage&lt;/strong&gt; - Host system and containers. Includes swap and ZFS ARC.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Disk usage&lt;/strong&gt; - Host system. Supports multiple partitions and devices.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Disk I/O&lt;/strong&gt; - Host system. Supports multiple partitions and devices.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Network usage&lt;/strong&gt; - Host system and containers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Load average&lt;/strong&gt; - Host system.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Temperature&lt;/strong&gt; - Host system sensors.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GPU usage / temperature / power draw&lt;/strong&gt; - Nvidia and AMD only. Must use binary agent.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Help and discussion&lt;/h2&gt; 
&lt;p&gt;Please search existing issues and discussions before opening a new one. I try my best to respond, but may not always have time to do so.&lt;/p&gt; 
&lt;h4&gt;Bug reports and feature requests&lt;/h4&gt; 
&lt;p&gt;Bug reports and detailed feature requests should be posted on &lt;a href="https://github.com/henrygd/beszel/issues"&gt;GitHub issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Support and general discussion&lt;/h4&gt; 
&lt;p&gt;Support requests and general discussion can be posted on &lt;a href="https://github.com/henrygd/beszel/discussions"&gt;GitHub discussions&lt;/a&gt; or the community-run &lt;a href="https://matrix.to/#/%23beszel:matrix.org"&gt;Matrix room&lt;/a&gt;: &lt;code&gt;#beszel:matrix.org&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Beszel is licensed under the MIT License. See the &lt;a href="https://raw.githubusercontent.com/henrygd/beszel/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AdguardTeam/AdGuardHome</title>
      <link>https://github.com/AdguardTeam/AdGuardHome</link>
      <description>&lt;p&gt;Network-wide ads &amp; trackers blocking DNS server&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="doc/adguard_home_darkmode.svg"&gt; 
  &lt;img alt="AdGuard Home" src="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/doc/adguard_home_lightmode.svg?sanitize=true" width="300px"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt;Privacy protection center for you and your devices&lt;/h3&gt; 
&lt;p align="center"&gt; Free and open source, powerful network-wide ads &amp;amp; trackers blocking DNS server. &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://adguard.com/"&gt;AdGuard.com&lt;/a&gt; | &lt;a href="https://github.com/AdguardTeam/AdGuardHome/wiki"&gt;Wiki&lt;/a&gt; | &lt;a href="https://reddit.com/r/Adguard"&gt;Reddit&lt;/a&gt; | &lt;a href="https://twitter.com/AdGuard"&gt;Twitter&lt;/a&gt; | &lt;a href="https://t.me/adguard_en"&gt;Telegram&lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;a href="https://codecov.io/github/AdguardTeam/AdGuardHome?branch=master"&gt; &lt;img src="https://img.shields.io/codecov/c/github/AdguardTeam/AdGuardHome/master.svg?sanitize=true" alt="Code Coverage"&gt; &lt;/a&gt; &lt;a href="https://goreportcard.com/report/AdguardTeam/AdGuardHome"&gt; &lt;img src="https://goreportcard.com/badge/github.com/AdguardTeam/AdGuardHome" alt="Go Report Card"&gt; &lt;/a&gt; &lt;a href="https://hub.docker.com/r/adguard/adguardhome"&gt; &lt;img alt="Docker Pulls" src="https://img.shields.io/docker/pulls/adguard/adguardhome.svg?maxAge=604800"&gt; &lt;/a&gt; &lt;br&gt; &lt;a href="https://github.com/AdguardTeam/AdGuardHome/releases"&gt; &lt;img src="https://img.shields.io/github/release/AdguardTeam/AdGuardHome/all.svg?sanitize=true" alt="Latest release"&gt; &lt;/a&gt; &lt;a href="https://snapcraft.io/adguard-home"&gt; &lt;img alt="adguard-home" src="https://snapcraft.io/adguard-home/badge.svg?sanitize=true"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;p align="center"&gt; &lt;img src="https://cdn.adtidy.org/public/Adguard/Common/adguard_home.gif" width="800"&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;AdGuard Home is a network-wide software for blocking ads and tracking. After you set it up, it'll cover ALL your home devices, and you don't need any client-side software for that.&lt;/p&gt; 
&lt;p&gt;It operates as a DNS server that re-routes tracking domains to a ‚Äúblack hole‚Äù, thus preventing your devices from connecting to those servers. It's based on software we use for our public &lt;a href="https://adguard-dns.io/"&gt;AdGuard DNS&lt;/a&gt; servers, and both share a lot of code.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#getting-started"&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#automated-install-linux-and-mac"&gt;Automated install (Linux/Unix/MacOS/FreeBSD/OpenBSD)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#alternative-methods"&gt;Alternative methods&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#guides"&gt;Guides&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#api"&gt;API&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison"&gt;Comparing AdGuard Home to other solutions&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-adguard-dns"&gt;How is this different from public AdGuard DNS servers?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-pi-hole"&gt;How does AdGuard Home compare to Pi-Hole&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-adblock"&gt;How does AdGuard Home compare to traditional ad blockers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-limitations"&gt;Known limitations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#how-to-build"&gt;How to build from source&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#building"&gt;Building&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#contributing"&gt;Contributing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#test-unstable-versions"&gt;Test unstable versions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#reporting-issues"&gt;Reporting issues&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#translate"&gt;Help with translations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#help-other"&gt;Other&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#uses"&gt;Projects that use AdGuard Home&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#acknowledgments"&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#privacy"&gt;Privacy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#getting-started" id="getting-started" name="getting-started"&gt;Getting Started&lt;/a&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#automated-install-linux-and-mac" id="automated-install-linux-and-mac" name="automated-install-linux-and-mac"&gt;Automated install (Linux/Unix/MacOS/FreeBSD/OpenBSD)&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;To install with &lt;code&gt;curl&lt;/code&gt; run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl -s -S -L https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install with &lt;code&gt;wget&lt;/code&gt; run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;wget --no-verbose -O - https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install with &lt;code&gt;fetch&lt;/code&gt; run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;fetch -o - https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The script also accepts some options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-c &amp;lt;channel&amp;gt;&lt;/code&gt; to use specified channel;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-r&lt;/code&gt; to reinstall AdGuard Home;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-u&lt;/code&gt; to uninstall AdGuard Home;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-v&lt;/code&gt; for verbose output.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that options &lt;code&gt;-r&lt;/code&gt; and &lt;code&gt;-u&lt;/code&gt; are mutually exclusive.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#alternative-methods" id="alternative-methods" name="alternative-methods"&gt;Alternative methods&lt;/a&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#manual-installation" id="manual-installation" name="manual-installation"&gt;Manual installation&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Please read the &lt;strong&gt;&lt;a href="https://adguard-dns.io/kb/adguard-home/getting-started/"&gt;Getting Started&lt;/a&gt;&lt;/strong&gt; article on our Wiki to learn how to install AdGuard Home manually, and how to configure your devices to use it.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#docker" id="docker" name="docker"&gt;Docker&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;You can use our official Docker image on &lt;a href="https://hub.docker.com/r/adguard/adguardhome"&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#snap-store" id="snap-store" name="snap-store"&gt;Snap Store&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;If you're running &lt;strong&gt;Linux,&lt;/strong&gt; there's a secure and easy way to install AdGuard Home: get it from the &lt;a href="https://snapcraft.io/adguard-home"&gt;Snap Store&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#guides" id="guides" name="guides"&gt;Guides&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;See our &lt;a href="https://github.com/AdguardTeam/AdGuardHome/wiki"&gt;Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#api" id="api" name="api"&gt;API&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;If you want to integrate with AdGuard Home, you can use our &lt;a href="https://github.com/AdguardTeam/AdGuardHome/tree/master/openapi"&gt;REST API&lt;/a&gt;. Alternatively, you can use this &lt;a href="https://pypi.org/project/adguardhome/"&gt;python client&lt;/a&gt;, which is used to build the &lt;a href="https://www.home-assistant.io/integrations/adguard/"&gt;AdGuard Home Hass.io Add-on&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison" id="comparison" name="comparison"&gt;Comparing AdGuard Home to other solutions&lt;/a&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-adguard-dns" id="comparison-adguard-dns" name="comparison-adguard-dns"&gt;How is this different from public AdGuard DNS servers?&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Running your own AdGuard Home server allows you to do much more than using a public DNS server. It's a completely different level. See for yourself:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Choose what exactly the server blocks and permits.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Monitor your network activity.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Add your own custom filtering rules.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Most importantly, it's your own server, and you are the only one who's in control.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-pi-hole" id="comparison-pi-hole" name="comparison-pi-hole"&gt;How does AdGuard Home compare to Pi-Hole&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;At this point, AdGuard Home has a lot in common with Pi-Hole. Both block ads and trackers using the so-called ‚ÄúDNS sinkholing‚Äù method and both allow customizing what's blocked.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] We're not going to stop here. DNS sinkholing is not a bad starting point, but this is just the beginning.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;AdGuard Home provides a lot of features out-of-the-box with no need to install and configure additional software. We want it to be simple to the point when even casual users can set it up with minimal effort.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Some of the listed features can be added to Pi-Hole by installing additional software or by manually using SSH terminal and reconfiguring one of the utilities Pi-Hole consists of. However, in our opinion, this cannot be legitimately counted as a Pi-Hole's feature.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;AdGuard&amp;nbsp;Home&lt;/th&gt; 
   &lt;th&gt;Pi-Hole&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Blocking ads and trackers&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Customizing blocklists&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Built-in DHCP server&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;HTTPS for the Admin interface&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Kind of, but you'll need to manually configure lighttpd&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Encrypted DNS upstream servers (DNS-over-HTTPS, DNS-over-TLS, DNSCrypt)&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå (requires additional software)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Cross-platform&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå (not natively, only via Docker)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Running as a DNS-over-HTTPS or DNS-over-TLS server&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå (requires additional software)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Blocking phishing and malware domains&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå (requires non-default blocklists)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Parental control (blocking adult domains)&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå (requires non-default blocklists)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Force Safe search on search engines&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Per-client (device) configuration&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Access settings (choose who can use AGH DNS)&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Running &lt;a href="https://adguard-dns.io/kb/adguard-home/getting-started/#running-without-superuser"&gt;without root privileges&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-adblock" id="comparison-adblock" name="comparison-adblock"&gt;How does AdGuard Home compare to traditional ad blockers&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;It depends.&lt;/p&gt; 
&lt;p&gt;DNS sinkholing is capable of blocking a big percentage of ads, but it lacks the flexibility and the power of traditional ad blockers. You can get a good impression about the difference between these methods by reading &lt;a href="https://adguard.com/blog/adguard-vs-adaway-dns66.html"&gt;this article&lt;/a&gt;, which compares AdGuard for Android (a traditional ad blocker) to hosts-level ad blockers (which are almost identical to DNS-based blockers in their capabilities). This level of protection is enough for some users.&lt;/p&gt; 
&lt;p&gt;Additionally, using a DNS-based blocker can help to block ads, tracking and analytics requests on other types of devices, such as SmartTVs, smart speakers or other kinds of IoT devices (on which you can't install traditional ad blockers).&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-limitations" id="comparison-limitations" name="comparison-limitations"&gt;Known limitations&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Here are some examples of what cannot be blocked by a DNS-level blocker:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;YouTube, Twitch ads;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Facebook, Twitter, Instagram sponsored posts.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Essentially, any advertising that shares a domain with content cannot be blocked by a DNS-level blocker.&lt;/p&gt; 
&lt;p&gt;Is there a chance to handle this in the future? DNS will never be enough to do this. Our only option is to use a content blocking proxy like what we do in the standalone AdGuard applications. We're &lt;a href="https://github.com/AdguardTeam/AdGuardHome/issues/1228"&gt;going to bring&lt;/a&gt; this feature support to AdGuard Home in the future. Unfortunately, even in this case, there still will be cases when this won't be enough or would require quite a complicated configuration.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#how-to-build" id="how-to-build" name="how-to-build"&gt;How to build from source&lt;/a&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#prerequisites" id="prerequisites" name="prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;make init&lt;/code&gt; to prepare the development environment.&lt;/p&gt; 
&lt;p&gt;You will need this to build AdGuard Home:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/dl/"&gt;Go&lt;/a&gt; v1.24 or later;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt; v20.19 or later;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/"&gt;npm&lt;/a&gt; v10.8 or later;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#building" id="building" name="building"&gt;Building&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Open your terminal and execute these commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/AdguardTeam/AdGuardHome
cd AdGuardHome
make
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] The non-standard &lt;code&gt;-j&lt;/code&gt; flag is currently not supported, so building with &lt;code&gt;make -j 4&lt;/code&gt; or setting your &lt;code&gt;MAKEFLAGS&lt;/code&gt; to include, for example, &lt;code&gt;-j 4&lt;/code&gt; is likely to break the build. If you do have your &lt;code&gt;MAKEFLAGS&lt;/code&gt; set to that, and you don't want to change it, you can override it by running &lt;code&gt;make -j 1&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Check the &lt;a href="https://github.com/AdguardTeam/AdGuardHome/raw/master/Makefile"&gt;&lt;code&gt;Makefile&lt;/code&gt;&lt;/a&gt; to learn about other commands.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#building-cross" id="building-cross" name="building-cross"&gt;Building for a different platform&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;You can build AdGuard Home for any OS/ARCH that Go supports. In order to do this, specify &lt;code&gt;GOOS&lt;/code&gt; and &lt;code&gt;GOARCH&lt;/code&gt; environment variables as macros when running &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;env GOOS='linux' GOARCH='arm64' make
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;make GOOS='linux' GOARCH='arm64'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#preparing-releases" id="preparing-releases" name="preparing-releases"&gt;Preparing releases&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;You'll need &lt;a href="https://snapcraft.io/"&gt;&lt;code&gt;snapcraft&lt;/code&gt;&lt;/a&gt; to prepare a release build. Once installed, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;make build-release CHANNEL='...' VERSION='...'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/AdguardTeam/AdGuardHome/tree/master/scripts#build-releasesh-build-a-release-for-all-platforms"&gt;&lt;code&gt;build-release&lt;/code&gt; target documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#docker-image" id="docker-image" name="docker-image"&gt;Docker image&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Run &lt;code&gt;make build-docker&lt;/code&gt; to build the Docker image locally (the one that we publish to DockerHub). Please note, that we're using &lt;a href="https://docs.docker.com/buildx/working-with-buildx/"&gt;Docker Buildx&lt;/a&gt; to build our official image.&lt;/p&gt; 
&lt;p&gt;You may need to prepare before using these builds:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;(Linux-only) Install Qemu:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker run --rm --privileged multiarch/qemu-user-static --reset -p yes --credential yes
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Prepare the builder:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker buildx create --name buildx-builder --driver docker-container --use
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/AdguardTeam/AdGuardHome/tree/master/scripts#build-dockersh-build-a-multi-architecture-docker-image"&gt;&lt;code&gt;build-docker&lt;/code&gt; target documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#debugging-the-frontend" id="debugging-the-frontend" name="debugging-the-frontend"&gt;Debugging the frontend&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;When you need to debug the frontend without recompiling the production version every time, for example to check how your labels would look on a form, you can run the frontend build a development environment.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;In a separate terminal, run:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;( cd ./client/ &amp;amp;&amp;amp; env NODE_ENV='development' npm run watch )
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run your &lt;code&gt;AdGuardHome&lt;/code&gt; binary with the &lt;code&gt;--local-frontend&lt;/code&gt; flag, which instructs AdGuard Home to ignore the built-in frontend files and use those from the &lt;code&gt;./build/&lt;/code&gt; directory.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Now any changes you make in the &lt;code&gt;./client/&lt;/code&gt; directory should be recompiled and become available on the web UI. Make sure that you disable the browser cache to make sure that you actually get the recompiled version.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#e2e-frontend-tests" id="e2e-frontend-tests" name="e2e-frontend-tests"&gt;End-to-End (E2E) Frontend Tests&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;AdGuard Home uses &lt;a href="https://playwright.dev"&gt;Playwright&lt;/a&gt; for E2E testing. Tests are located in &lt;code&gt;tests/e2e&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Running Tests:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;npm run test:e2e&lt;/code&gt; ‚Äì run all tests (headless).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run test:e2e:interactive&lt;/code&gt; ‚Äì run tests interactively.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run test:e2e:debug&lt;/code&gt; ‚Äì run tests in debug mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run test:e2e:codegen&lt;/code&gt; ‚Äì generate new test code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Setup:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; to install dependencies.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npx playwright install&lt;/code&gt; to set up required browsers.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; Playwright will download and install its own browser binaries for testing, which may differ from the browsers installed on your system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#contributing" id="contributing" name="contributing"&gt;Contributing&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;You are welcome to fork this repository, make your changes and &lt;a href="https://github.com/AdguardTeam/AdGuardHome/pulls"&gt;submit a pull request&lt;/a&gt;. Please make sure you follow our &lt;a href="https://github.com/AdguardTeam/CodeGuidelines/"&gt;code guidelines&lt;/a&gt; though.&lt;/p&gt; 
&lt;p&gt;Please note that we don't expect people to contribute to both UI and backend parts of the program simultaneously. Ideally, the backend part is implemented first, i.e. configuration, API, and the functionality itself. The UI part can be implemented later in a different pull request by a different person.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#test-unstable-versions" id="test-unstable-versions" name="test-unstable-versions"&gt;Test unstable versions&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;There are two update channels that you can use:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;beta&lt;/code&gt;: beta versions of AdGuard Home. More or less stable versions, usually released every two weeks or more often.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;edge&lt;/code&gt;: the newest version of AdGuard Home from the development branch. New updates are pushed to this channel daily.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are three options how you can install an unstable version:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://snapcraft.io/adguard-home"&gt;Snap Store&lt;/a&gt;: look for the &lt;code&gt;beta&lt;/code&gt; and &lt;code&gt;edge&lt;/code&gt; channels.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://hub.docker.com/r/adguard/adguardhome"&gt;Docker Hub&lt;/a&gt;: look for the &lt;code&gt;beta&lt;/code&gt; and &lt;code&gt;edge&lt;/code&gt; tags.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Standalone builds. Use the automated installation script or look for the available builds &lt;a href="https://github.com/AdguardTeam/AdGuardHome/wiki/Platforms"&gt;on the Wiki&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Script to install a beta version:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;curl -s -S -L https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -c beta
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Script to install an edge version:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;curl -s -S -L https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -c edge
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#reporting-issues" id="reporting-issues" name="reporting-issues"&gt;Report issues&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;If you run into any problem or have a suggestion, head to &lt;a href="https://github.com/AdguardTeam/AdGuardHome/issues"&gt;this page&lt;/a&gt; and click on the ‚ÄúNew issue‚Äù button. Please follow the instructions in the issue form carefully and don't forget to start by searching for duplicates.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#translate" id="translate" name="translate"&gt;Help with translations&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;If you want to help with AdGuard Home translations, please learn more about translating AdGuard products &lt;a href="https://kb.adguard.com/en/general/adguard-translations"&gt;in our Knowledge Base&lt;/a&gt;. You can contribute to the &lt;a href="https://crowdin.com/project/adguard-applications/en#/adguard-home"&gt;AdGuardHome project on CrowdIn&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#help-other" id="help-other" name="help-other"&gt;Other&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Another way you can contribute is by &lt;a href="https://github.com/AdguardTeam/AdGuardHome/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22"&gt;looking for issues&lt;/a&gt; marked as &lt;code&gt;help wanted&lt;/code&gt;, asking if the issue is up for grabs, and sending a PR fixing the bug or implementing the feature.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#uses" id="uses" name="uses"&gt;Projects that use AdGuard Home&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Please note that these projects are not affiliated with AdGuard, but are made by third-party developers and fans.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://apps.apple.com/app/apple-store/id1543143740"&gt;AdGuard Home Remote&lt;/a&gt;: iOS app by &lt;a href="https://rocketscience-it.nl/"&gt;Joost&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/frenck/python-adguardhome"&gt;Python library&lt;/a&gt; by &lt;a href="https://github.com/frenck"&gt;@frenck&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/hassio-addons/addon-adguard-home"&gt;Home Assistant add-on&lt;/a&gt; by &lt;a href="https://github.com/frenck"&gt;@frenck&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/kongfl888/luci-app-adguardhome"&gt;OpenWrt LUCI app&lt;/a&gt; by &lt;a href="https://github.com/kongfl888"&gt;@kongfl888&lt;/a&gt; (originally by &lt;a href="https://github.com/rufengsuixing"&gt;@rufengsuixing&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/bakito/adguardhome-sync"&gt;AdGuardHome sync&lt;/a&gt; by &lt;a href="https://github.com/bakito"&gt;@bakito&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/Lissy93/AdGuardian-Term"&gt;Terminal-based, real-time traffic monitoring and statistics for your AdGuard Home instance&lt;/a&gt; by &lt;a href="https://github.com/Lissy93"&gt;@Lissy93&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://forum.gl-inet.com/t/adguardhome-on-gl-routers/10664"&gt;AdGuard Home on GLInet routers&lt;/a&gt; by &lt;a href="https://gl-inet.com/"&gt;Gl-Inet&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://git.cloudron.io/cloudron/adguard-home-app"&gt;Cloudron app&lt;/a&gt; by &lt;a href="https://github.com/gramakri"&gt;@gramakri&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/jumpsmm7/Asuswrt-Merlin-AdGuardHome-Installer"&gt;Asuswrt-Merlin-AdGuardHome-Installer&lt;/a&gt; by &lt;a href="https://github.com/jumpsmm7"&gt;@jumpsmm7&lt;/a&gt; aka &lt;a href="https://www.snbforums.com/members/somewhereovertherainbow.64179/"&gt;@SomeWhereOverTheRainBow&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/Andrea055/AdguardHomeAPI"&gt;Node.js library&lt;/a&gt; by &lt;a href="https://github.com/Andrea055/"&gt;@Andrea055&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/satheshshiva/Adguard-Home-Browser-Ext"&gt;Browser Extension&lt;/a&gt; by &lt;a href="https://github.com/satheshshiva/"&gt;@satheshshiva&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/diasdmhub/AdGuard_Home_Zabbix_Template"&gt;Zabbix Template for AdGuard Home&lt;/a&gt; by &lt;a href="https://github.com/diasdmhub"&gt;@diasdmhub&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://community.chocolatey.org/packages/adguardhome/"&gt;Chocolatey package&lt;/a&gt; by &lt;a href="https://community.chocolatey.org/profiles/niks255"&gt;niks255&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#acknowledgments" id="acknowledgments" name="acknowledgments"&gt;Acknowledgments&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;This software wouldn't have been possible without:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/dl/"&gt;Go&lt;/a&gt; and its libraries: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bluele/gcache"&gt;gcache&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/miekg/dns"&gt;miekg's dns&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/go-yaml/yaml"&gt;go-yaml&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://godoc.org/github.com/kardianos/service"&gt;service&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AdguardTeam/dnsproxy"&gt;dnsproxy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AdguardTeam/urlfilter"&gt;urlfilter&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; and its libraries: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://reactjs.org"&gt;React.js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tabler/tabler"&gt;Tabler&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;And many more Node.js packages.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cliqz-oss/whotracks.me"&gt;whotracks.me data&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You might have seen that &lt;a href="https://coredns.io"&gt;CoreDNS&lt;/a&gt; was mentioned here before, but we've stopped using it in AdGuard Home.&lt;/p&gt; 
&lt;p&gt;For the full list of all Node.js packages in use, please take a look at &lt;a href="https://github.com/AdguardTeam/AdGuardHome/raw/master/client/package.json"&gt;&lt;code&gt;client/package.json&lt;/code&gt;&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#privacy" id="privacy" name="privacy"&gt;Privacy&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Our main idea is that you are the one, who should be in control of your data. So it is only natural, that AdGuard Home does not collect any usage statistics, and does not use any web services unless you configure it to do so. See also the &lt;a href="https://adguard.com/en/privacy/home.html"&gt;full privacy policy&lt;/a&gt; with every bit that &lt;em&gt;could in theory be sent&lt;/em&gt; by AdGuard Home is available.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>navidrome/navidrome</title>
      <link>https://github.com/navidrome/navidrome</link>
      <description>&lt;p&gt;üéß‚òÅÔ∏è Your Personal Streaming Service&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://www.navidrome.org"&gt;&lt;img src="https://raw.githubusercontent.com/navidrome/navidrome/master/resources/logo-192x192.png" alt="Navidrome logo" title="navidrome" align="right" height="60px"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Navidrome Music Server &amp;nbsp;&lt;a href="https://twitter.com/intent/tweet?text=Tired%20of%20paying%20for%20music%20subscriptions%2C%20and%20not%20finding%20what%20you%20really%20like%3F%20Roll%20your%20own%20streaming%20service%21&amp;amp;url=https://navidrome.org&amp;amp;via=navidrome"&gt;&lt;img src="https://img.shields.io/twitter/url/http/shields.io.svg?style=social" alt="Tweet"&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/navidrome/navidrome/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/navidrome/navidrome?logo=github&amp;amp;label=latest&amp;amp;style=flat-square" alt="Last Release"&gt;&lt;/a&gt; &lt;a href="https://nightly.link/navidrome/navidrome/workflows/pipeline/master"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/navidrome/navidrome/pipeline.yml?branch=master&amp;amp;logo=github&amp;amp;style=flat-square" alt="Build"&gt;&lt;/a&gt; &lt;a href="https://github.com/navidrome/navidrome/releases/latest"&gt;&lt;img src="https://img.shields.io/github/downloads/navidrome/navidrome/total?logo=github&amp;amp;style=flat-square" alt="Downloads"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/deluan/navidrome"&gt;&lt;img src="https://img.shields.io/docker/pulls/deluan/navidrome?logo=docker&amp;amp;label=pulls&amp;amp;style=flat-square" alt="Docker Pulls"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/xh7j7yF"&gt;&lt;img src="https://img.shields.io/discord/671335427726114836?logo=discord&amp;amp;label=discord&amp;amp;style=flat-square" alt="Dev Chat"&gt;&lt;/a&gt; &lt;a href="https://www.reddit.com/r/navidrome/"&gt;&lt;img src="https://img.shields.io/reddit/subreddit-subscribers/navidrome?logo=reddit&amp;amp;label=/r/navidrome&amp;amp;style=flat-square" alt="Subreddit"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/navidrome/navidrome/master/CODE_OF_CONDUCT.md"&gt;&lt;img src="https://img.shields.io/badge/Contributor%20Covenant-v2.0-ff69b4.svg?style=flat-square" alt="Contributor Covenant"&gt;&lt;/a&gt; &lt;a href="https://gurubase.io/g/navidrome"&gt;&lt;img src="https://img.shields.io/badge/Gurubase-Ask%20Navidrome%20Guru-006BFF?style=flat-square" alt="Gurubase"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Navidrome is an open source web-based music collection server and streamer. It gives you freedom to listen to your music collection from any browser or mobile device. It's like your personal Spotify!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;master&lt;/code&gt; branch may be in an unstable or even broken state during development. Please use &lt;a href="https://github.com/navidrome/navidrome/releases"&gt;releases&lt;/a&gt; instead of the &lt;code&gt;master&lt;/code&gt; branch in order to get a stable set of binaries.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://www.navidrome.org/demo/"&gt;Check out our Live Demo!&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Any feedback is welcome!&lt;/strong&gt; If you need/want a new feature, find a bug or think of any way to improve Navidrome, please file a &lt;a href="https://github.com/navidrome/navidrome/issues"&gt;GitHub issue&lt;/a&gt; or join the discussion in our &lt;a href="https://www.reddit.com/r/navidrome/"&gt;Subreddit&lt;/a&gt;. If you want to contribute to the project in any other way (&lt;a href="https://www.navidrome.org/docs/developers/"&gt;ui/backend dev&lt;/a&gt;, &lt;a href="https://www.navidrome.org/docs/developers/translations/"&gt;translations&lt;/a&gt;, &lt;a href="https://www.navidrome.org/docs/developers/creating-themes"&gt;themes&lt;/a&gt;), please join the chat in our &lt;a href="https://discord.gg/xh7j7yF"&gt;Discord server&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;See instructions on the &lt;a href="https://www.navidrome.org/docs/installation/"&gt;project's website&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Cloud Hosting&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.pikapods.com"&gt;PikaPods&lt;/a&gt; has partnered with us to offer you an &lt;a href="https://www.navidrome.org/docs/installation/managed/#pikapods"&gt;officially supported, cloud-hosted solution&lt;/a&gt;. A share of the revenue helps fund the development of Navidrome at no additional cost for you.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.pikapods.com/pods?run=navidrome"&gt;&lt;img src="https://www.pikapods.com/static/run-button.svg?sanitize=true" alt="PikaPods"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Handles very &lt;strong&gt;large music collections&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Streams virtually &lt;strong&gt;any audio format&lt;/strong&gt; available&lt;/li&gt; 
 &lt;li&gt;Reads and uses all your beautifully curated &lt;strong&gt;metadata&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Great support for &lt;strong&gt;compilations&lt;/strong&gt; (Various Artists albums) and &lt;strong&gt;box sets&lt;/strong&gt; (multi-disc albums)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt;, each user has their own play counts, playlists, favourites, etc...&lt;/li&gt; 
 &lt;li&gt;Very &lt;strong&gt;low resource usage&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-platform&lt;/strong&gt;, runs on macOS, Linux and Windows. &lt;strong&gt;Docker&lt;/strong&gt; images are also provided&lt;/li&gt; 
 &lt;li&gt;Ready to use binaries for all major platforms, including &lt;strong&gt;Raspberry Pi&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Automatically &lt;strong&gt;monitors your library&lt;/strong&gt; for changes, importing new files and reloading new metadata&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Themeable&lt;/strong&gt;, modern and responsive &lt;strong&gt;Web interface&lt;/strong&gt; based on &lt;a href="https://material-ui.com"&gt;Material UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Compatible&lt;/strong&gt; with all Subsonic/Madsonic/Airsonic &lt;a href="https://www.navidrome.org/docs/overview/#apps"&gt;clients&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Transcoding&lt;/strong&gt; on the fly. Can be set per user/player. &lt;strong&gt;Opus encoding is supported&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Translated to &lt;strong&gt;various languages&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;Navidrome uses &lt;a href="https://poeditor.com/"&gt;POEditor&lt;/a&gt; for translations, and we are always looking for &lt;a href="https://www.navidrome.org/docs/developers/translations/"&gt;more contributors&lt;/a&gt;&lt;/p&gt; 
&lt;a href="https://poeditor.com/"&gt; &lt;img height="32" src="https://github.com/user-attachments/assets/c19b1d2b-01e1-4682-a007-12356c42147c"&gt; &lt;/a&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;All documentation can be found in the project's website: &lt;a href="https://www.navidrome.org/docs"&gt;https://www.navidrome.org/docs&lt;/a&gt;. Here are some useful direct links:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.navidrome.org/docs/overview/"&gt;Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.navidrome.org/docs/installation/"&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.navidrome.org/docs/installation/docker/"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.navidrome.org/docs/installation/pre-built-binaries/"&gt;Binaries&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.navidrome.org/docs/installation/build-from-source/"&gt;Build from source&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.navidrome.org/docs/developers/"&gt;Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.navidrome.org/docs/developers/subsonic-api/"&gt;Subsonic API Compatibility&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p align="left"&gt; &lt;img height="550" src="https://raw.githubusercontent.com/navidrome/navidrome/master/.github/screenshots/ss-mobile-login.png"&gt; &lt;img height="550" src="https://raw.githubusercontent.com/navidrome/navidrome/master/.github/screenshots/ss-mobile-player.png"&gt; &lt;img height="550" src="https://raw.githubusercontent.com/navidrome/navidrome/master/.github/screenshots/ss-mobile-album-view.png"&gt; &lt;img width="550" src="https://raw.githubusercontent.com/navidrome/navidrome/master/.github/screenshots/ss-desktop-player.png"&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>photoprism/photoprism</title>
      <link>https://github.com/photoprism/photoprism</link>
      <description>&lt;p&gt;AI-Powered Photos App for the Decentralized Web üåàüíé‚ú®&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PhotoPrism: Browse Your Life in Pictures&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://docs.photoprism.app/license/agpl/"&gt;&lt;img src="https://img.shields.io/badge/license-AGPL%203.0-454377.svg?sanitize=true" alt="License: AGPL"&gt;&lt;/a&gt; &lt;a href="https://docs.photoprism.app/"&gt;&lt;img src="https://img.shields.io/badge/read-the%20docs-4d6a91.svg?sanitize=true" alt="Documentation"&gt;&lt;/a&gt; &lt;a href="https://link.photoprism.app/chat"&gt;&lt;img src="https://img.shields.io/badge/chat-on%20gitter-4d6a91.svg?sanitize=true" alt="Community Chat"&gt;&lt;/a&gt; &lt;a href="https://link.photoprism.app/discussions"&gt;&lt;img src="https://img.shields.io/badge/ask-%20on%20github-4d6a91.svg?sanitize=true" alt="GitHub Discussions"&gt;&lt;/a&gt; &lt;a href="https://bsky.app/profile/photoprism.app"&gt;&lt;img src="https://dl.photoprism.app/img/badges/badge-bluesky.svg?sanitize=true" alt="Bluesky Social"&gt;&lt;/a&gt; &lt;a href="https://floss.social/@photoprism"&gt;&lt;img src="https://dl.photoprism.app/img/badges/badge-floss-social.svg?sanitize=true" alt="Mastodon"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;PhotoPrism¬Æ is an AI-Powered Photos App for the &lt;a href="https://en.wikipedia.org/wiki/Decentralized_web"&gt;Decentralized Web&lt;/a&gt;. It makes use of the latest technologies to tag and find pictures automatically without getting in your way. You can run it at home, on a private server, or in the cloud.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://dl.photoprism.app/img/ui/2025/desktop-search.jpg" alt=""&gt;&lt;/p&gt; 
&lt;p&gt;To get a first impression, you are welcome to play with our &lt;a href="https://try.photoprism.app/"&gt;public demo&lt;/a&gt;. Please be careful not to upload any private, unlawful or offensive pictures.&lt;/p&gt; 
&lt;h2&gt;Feature Overview&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Our mission is to provide the most user- and privacy-friendly solution to keep your pictures organized and accessible.&lt;/strong&gt; That's why PhotoPrism was built from the ground up to run wherever you need it, without compromising freedom, privacy, or functionality:&lt;/p&gt; 
&lt;img align="right" height="270" src="https://dl.photoprism.app/img/ui/2025/iphone-crocus-540px.png"&gt; 
&lt;ul&gt; 
 &lt;li&gt;Browse &lt;a href="https://docs.photoprism.app/user-guide/organize/browse/"&gt;all your pictures&lt;/a&gt; without worrying about &lt;a href="https://www.photoprism.app/kb/file-formats"&gt;RAW images&lt;/a&gt; or &lt;a href="https://docs.photoprism.app/user-guide/organize/video/"&gt;video formats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Whether you're using a phone, tablet, or desktop computer, our &lt;a href="https://try.photoprism.app/"&gt;intuitive PWA&lt;/a&gt; provides a native app-like experience and can be &lt;a href="https://docs.photoprism.app/user-guide/pwa/"&gt;easily installed&lt;/a&gt; on your home screen&lt;/li&gt; 
 &lt;li&gt;Quickly find specific photos and videos with &lt;a href="https://docs.photoprism.app/user-guide/search/filters/"&gt;powerful search filters&lt;/a&gt; that can be combined and are available for &lt;a href="https://docs.photoprism.app/user-guide/search/filters/#filter-reference"&gt;many different properties&lt;/a&gt;, including &lt;a href="https://try.photoprism.app/library/labels"&gt;labels&lt;/a&gt;, &lt;a href="https://try.photoprism.app/library/places?q=s2:47a85a63f764"&gt;location&lt;/a&gt;, &lt;a href="https://try.photoprism.app/library/browse?view=cards&amp;amp;q=mp:4"&gt;resolution&lt;/a&gt;, &lt;a href="https://try.photoprism.app/library/browse?view=cards&amp;amp;q=color:red"&gt;color&lt;/a&gt;, &lt;a href="https://try.photoprism.app/library/browse?view=cards&amp;amp;q=mono%3Atrue"&gt;chroma&lt;/a&gt;, and &lt;a href="https://try.photoprism.app/library/review"&gt;quality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://try.photoprism.app/library/labels"&gt;Automatically labels your pictures&lt;/a&gt; based on content and location, and recognizes the faces of &lt;a href="https://try.photoprism.app/library/people/new"&gt;your family and friends&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://try.photoprism.app/library/live"&gt;Live Photos&lt;/a&gt; start playing when you &lt;a href="https://try.photoprism.app/library/browse?view=cards&amp;amp;q=type%3Alive"&gt;hover over them&lt;/a&gt; and when viewing a slideshow&lt;/li&gt; 
 &lt;li&gt;Six high-resolution &lt;a href="https://try.photoprism.app/library/places"&gt;World Maps&lt;/a&gt; and our &lt;a href="https://docs.photoprism.app/getting-started/#maps-places"&gt;privacy-preserving geocoding service&lt;/a&gt; help bring back memories of your favorite trips and let you explore the world&lt;/li&gt; 
 &lt;li&gt;Metadata can be extracted and merged from Exif, XMP, and other sources like Google Photos&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.photoprism.app/user-guide/native-apps/"&gt;Use compatible apps&lt;/a&gt; like &lt;a href="https://link.photoprism.app/photosync"&gt;PhotoSync&lt;/a&gt; to back up iOS and Android phones in the background&lt;/li&gt; 
 &lt;li&gt;WebDAV clients such as &lt;a href="https://docs.photoprism.app/user-guide/sync/webdav/#__tabbed_1_2"&gt;Microsoft's Windows Explorer&lt;/a&gt; and &lt;a href="https://docs.photoprism.app/user-guide/sync/webdav/#connect-to-a-webdav-server"&gt;Apple's Finder&lt;/a&gt; can &lt;a href="https://docs.photoprism.app/user-guide/sync/webdav/"&gt;connect directly to PhotoPrism&lt;/a&gt;, allowing you to open, edit, and delete files from your computer as if they were local&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Being completely &lt;a href="https://link.photoprism.app/membership"&gt;&lt;strong&gt;self-funded and independent&lt;/strong&gt;&lt;/a&gt;, we can promise you that we will &lt;a href="https://www.photoprism.app/privacy"&gt;never sell your data&lt;/a&gt; and that we will &lt;a href="https://www.photoprism.app/terms"&gt;always be transparent&lt;/a&gt; about our software and services. Your data will never be shared with Google, Amazon, Microsoft or Apple unless you intentionally upload files to one of their services. üîí&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Step-by-step &lt;a href="https://docs.photoprism.app/getting-started/"&gt;installation instructions&lt;/a&gt; for our self-hosted &lt;a href="https://link.photoprism.app/personal-editions"&gt;community edition&lt;/a&gt; can be found on &lt;a href="https://docs.photoprism.app/getting-started/"&gt;docs.photoprism.app&lt;/a&gt; - all you need is a Web browser and &lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt; to run the server. It is available for Mac, Linux, and Windows.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://docs.photoprism.app/release-notes/"&gt;stable releases&lt;/a&gt; and &lt;a href="https://docs.photoprism.app/getting-started/updates/#development-preview"&gt;development preview&lt;/a&gt; are available as a &lt;a href="https://link.photoprism.app/docker-hub"&gt;multi-arch image&lt;/a&gt; for 64-bit AMD, Intel, and ARM processors. That means, &lt;a href="https://docs.photoprism.app/getting-started/raspberry-pi/"&gt;Raspberry Pi&lt;/a&gt; and Apple Silicon users enjoy the exact same functionality and can follow the same &lt;a href="https://docs.photoprism.app/getting-started/docker-compose/"&gt;installation steps&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See our &lt;a href="https://docs.photoprism.app/getting-started/faq/#how-can-i-install-photoprism-without-docker"&gt;Getting Started FAQ&lt;/a&gt; for alternative installation methods, for example using the &lt;a href="https://dl.photoprism.app/pkg/linux/README.html"&gt;&lt;em&gt;tar.gz&lt;/em&gt; packages&lt;/a&gt; we provide.&lt;/p&gt; 
&lt;h2&gt;Support Our Mission üíé&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;PhotoPrism is 100% self-funded and independent.&lt;/strong&gt; Your &lt;a href="https://link.photoprism.app/membership"&gt;continued support&lt;/a&gt; helps us &lt;a href="https://www.photoprism.app/oss/faq#what-functionality-is-generally-available"&gt;provide more features to the public&lt;/a&gt;, release &lt;a href="https://docs.photoprism.app/release-notes/"&gt;regular updates&lt;/a&gt;, and remain independent!&lt;/p&gt; 
&lt;p&gt;Our members &lt;a href="https://www.photoprism.app/kb/personal"&gt;enjoy additional features&lt;/a&gt;, including access to &lt;a href="https://try.photoprism.app/library/places"&gt;interactive world maps&lt;/a&gt;, and can join our private chat room to &lt;a href="https://www.photoprism.app/about/team"&gt;connect with our team&lt;/a&gt;. We currently have the following membership options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can &lt;a href="https://link.photoprism.app/membership"&gt;sign up directly on our website&lt;/a&gt; and pay with credit card or SEPA through Stripe, so you don't need to &lt;a href="https://www.photoprism.app/kb/activation"&gt;link an external account&lt;/a&gt; and can easily upgrade or downgrade at any time&lt;/li&gt; 
 &lt;li&gt;Alternatively, &lt;a href="https://link.photoprism.app/patreon"&gt;Patreon&lt;/a&gt; also supports PayPal, additional currencies, and lets you choose between monthly and annual billing for all tiers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you currently support us through &lt;a href="https://link.photoprism.app/sponsor"&gt;GitHub Sponsors&lt;/a&gt;, you can also &lt;a href="https://my.photoprism.app/register"&gt;register on our website&lt;/a&gt; and use the &lt;em&gt;Activate GitHub Sponsors Membership&lt;/em&gt; button to link your account. For details on this and how to &lt;a href="https://www.patreon.com/pledges"&gt;link your Patreon account&lt;/a&gt;, see our &lt;a href="https://www.photoprism.app/kb/activation"&gt;Activation Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You are &lt;a href="https://www.photoprism.app/contact"&gt;welcome to contact us&lt;/a&gt; for change requests, membership questions, and business partnerships.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.photoprism.app/kb/membership"&gt;View Membership FAQ ‚Ä∫&lt;/a&gt;‚ÄÉ&lt;a href="https://link.photoprism.app/membership"&gt;Sign Up ‚Ä∫&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Why Your Support Matters&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Your continued support helps us provide regular updates and remain independent, so we can fulfill our mission and protect your privacy&lt;/li&gt; 
 &lt;li&gt;Sustained funding is key to quickly releasing new features requested by you and other community members&lt;/li&gt; 
 &lt;li&gt;Being self-funded and independent, we can personally promise you that we will never sell your data and that we will always be transparent about our software and services&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please also leave &lt;a href="https://github.com/photoprism/photoprism/stargazers"&gt;a star&lt;/a&gt; on GitHub if you like this project. It provides additional motivation to keep going.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A big thank you to all current and past sponsors, whose generous support has been and continues to be essential to the success of the project!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/photoprism/photoprism/develop/SPONSORS.md"&gt;View Sponsors ‚Ä∫&lt;/a&gt;‚ÄÉ&lt;a href="https://docs.photoprism.app/credits/"&gt;View Credits ‚Ä∫&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Support&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://docs.photoprism.app/user-guide/"&gt;docs.photoprism.app/user-guide&lt;/a&gt; to learn how to &lt;a href="https://docs.photoprism.app/user-guide/sync/webdav/"&gt;sync&lt;/a&gt;, &lt;a href="https://docs.photoprism.app/user-guide/library/"&gt;organize&lt;/a&gt;, and &lt;a href="https://docs.photoprism.app/user-guide/share/"&gt;share&lt;/a&gt; your pictures. If you need help installing our software at home, you are welcome to post your question in &lt;a href="https://link.photoprism.app/discussions"&gt;GitHub Discussions&lt;/a&gt; or ask in our &lt;a href="https://link.photoprism.app/chat"&gt;Community Chat&lt;/a&gt;. Common problems can be quickly diagnosed and solved using our &lt;a href="https://docs.photoprism.app/getting-started/troubleshooting/"&gt;Troubleshooting Checklists&lt;/a&gt;. Eligible &lt;a href="https://link.photoprism.app/membership"&gt;members&lt;/a&gt; are also welcome to email us for technical support and advice.&lt;/p&gt; 
&lt;h2&gt;Upcoming Features and Enhancements&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/orgs/photoprism/projects/5"&gt;&lt;img align="right" height="240" src="https://dl.photoprism.app/img/ui/2025/upcoming-features-240px.png"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Our &lt;a href="https://link.photoprism.app/roadmap"&gt;Project Roadmap&lt;/a&gt; shows what tasks are in progress and what features will be implemented next. You are invited to give ideas you like a thumbs-up, so we know what's most popular.&lt;/p&gt; 
&lt;p&gt;Be aware that we have a zero-bug policy and do our best to help users when they need support or have other questions. This comes at a price though, as we can't give exact release dates for new features. Our team receives many more requests than can be implemented, so we want to emphasize that we are in no way obligated to implement the features, enhancements, or other changes you request. We do, however, appreciate your feedback and carefully consider all requests.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Because sustained funding is key to quickly releasing new features, we encourage you to support our mission by &lt;a href="https://link.photoprism.app/membership"&gt;signing up for a personal membership&lt;/a&gt; or &lt;a href="https://www.photoprism.app/teams#compare"&gt;purchasing a commercial license&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://link.photoprism.app/membership"&gt;Become a Member ‚Ä∫&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;GitHub Issues ‚ö†Ô∏è&lt;/h2&gt; 
&lt;p&gt;We kindly ask you not to report bugs via GitHub Issues &lt;strong&gt;unless you are certain to have found a fully reproducible and previously unreported issue&lt;/strong&gt; that must be fixed directly in the app. Thank you for your careful consideration!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;When browsing issues, please note that &lt;strong&gt;our team and all issue subscribers receive an email notification&lt;/strong&gt; from GitHub whenever a new comment is added, so these should only be used for sharing important information and not for &lt;a href="https://github.com/photoprism/photoprism/discussions"&gt;discussions, questions&lt;/a&gt;, or &lt;a href="https://www.photoprism.app/code-of-conduct"&gt;expressing personal opinions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;In order for us to investigate &lt;a href="https://www.photoprism.app/kb/reporting-bugs"&gt;new bug reports&lt;/a&gt;, they must include &lt;strong&gt;a complete list of steps to reproduce the problem&lt;/strong&gt;, the software versions used and information about the environment in which the problem occurred, such as &lt;a href="https://docs.photoprism.app/getting-started/troubleshooting/browsers/"&gt;browser type, browser version, browser plug-ins&lt;/a&gt;, operating system, &lt;a href="https://docs.photoprism.app/getting-started/troubleshooting/performance/#storage"&gt;storage type&lt;/a&gt;, &lt;a href="https://docs.photoprism.app/getting-started/troubleshooting/performance/#server-cpu"&gt;processor type&lt;/a&gt;, and &lt;a href="https://docs.photoprism.app/getting-started/troubleshooting/performance/#memory"&gt;memory size&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.photoprism.app/contact"&gt;Contact us&lt;/a&gt; or &lt;a href="https://link.photoprism.app/discussions"&gt;a community member&lt;/a&gt; if you need help, it could be a local configuration problem, or a misunderstanding in how the software works&lt;/li&gt; 
 &lt;li&gt;This gives us the opportunity to &lt;a href="https://docs.photoprism.app/getting-started/troubleshooting/"&gt;improve our documentation&lt;/a&gt; and provide best-in-class support instead of dealing with unclear/duplicate bug reports or triggering a flood of notifications by replying to comments&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Connect with the Community&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://link.photoprism.app/chat"&gt;&lt;img align="right" width="144" height="144" src="https://dl.photoprism.app/img/brands/element-logo.svg?sanitize=true"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Follow us on &lt;a href="https://floss.social/@photoprism"&gt;Mastodon&lt;/a&gt;, &lt;a href="https://bsky.app/profile/photoprism.app"&gt;Bluesky&lt;/a&gt;, or join the &lt;a href="https://link.photoprism.app/chat"&gt;Community Chat&lt;/a&gt; to get regular updates, connect with other users, and discuss your ideas. Our &lt;a href="https://www.photoprism.app/code-of-conduct"&gt;Code of Conduct&lt;/a&gt; explains the "dos and don‚Äôts" when interacting with other community members.&lt;/p&gt; 
&lt;p&gt;As a &lt;a href="https://raw.githubusercontent.com/photoprism/photoprism/develop/CONTRIBUTING.md"&gt;contributor&lt;/a&gt;, you are also welcome to &lt;a href="https://www.photoprism.app/contact"&gt;contact us directly&lt;/a&gt; if you have something on your mind that you don't want to discuss publicly. Please note, however, that due to the high volume of emails we receive, our team may be unable to get back to you immediately. We do our best to respond within five business days or less.&lt;/p&gt; 
&lt;h2&gt;Every Contribution Makes a Difference&lt;/h2&gt; 
&lt;p&gt;We welcome &lt;a href="https://raw.githubusercontent.com/photoprism/photoprism/develop/CONTRIBUTING.md"&gt;contributions&lt;/a&gt; of any kind, including blog posts, tutorials, translations, testing, writing documentation, and pull requests. Our &lt;a href="https://docs.photoprism.app/developer-guide/"&gt;Developer Guide&lt;/a&gt; contains all the information necessary for you to get started.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;em&gt;PhotoPrism¬Æ is a &lt;a href="https://www.photoprism.app/trademark"&gt;registered trademark&lt;/a&gt;. By using the software and services we provide, you agree to our &lt;a href="https://www.photoprism.app/terms"&gt;Terms of Service&lt;/a&gt;, &lt;a href="https://www.photoprism.app/privacy"&gt;Privacy Policy&lt;/a&gt;, and &lt;a href="https://www.photoprism.app/code-of-conduct"&gt;Code of Conduct&lt;/a&gt;. Docs are &lt;a href="https://link.photoprism.app/github-docs"&gt;available&lt;/a&gt; under the &lt;a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;CC BY-NC-SA 4.0 License&lt;/a&gt;; &lt;a href="https://github.com/photoprism/photoprism/raw/develop/assets/README.md"&gt;additional terms&lt;/a&gt; may apply.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>wailsapp/wails</title>
      <link>https://github.com/wailsapp/wails</link>
      <description>&lt;p&gt;Create beautiful applications using Go&lt;/p&gt;&lt;hr&gt;&lt;p align="center" style="text-align: center"&gt; &lt;img src="https://raw.githubusercontent.com/wailsapp/wails/master/assets/images/logo-universal.png" width="55%"&gt;&lt;br&gt; &lt;/p&gt; 
&lt;p align="center"&gt; Build desktop applications using Go &amp;amp; Web Technologies. &lt;br&gt; &lt;br&gt; &lt;a href="https://github.com/wailsapp/wails/raw/master/LICENSE"&gt; &lt;img alt="GitHub" src="https://img.shields.io/github/license/wailsapp/wails"&gt; &lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/wailsapp/wails"&gt; &lt;img src="https://goreportcard.com/badge/github.com/wailsapp/wails"&gt; &lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/wailsapp/wails"&gt; &lt;img src="https://pkg.go.dev/badge/github.com/wailsapp/wails.svg?sanitize=true" alt="Go Reference"&gt; &lt;/a&gt; &lt;a href="https://github.com/wailsapp/wails/issues"&gt; &lt;img src="https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat" alt="CodeFactor"&gt; &lt;/a&gt; &lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fwailsapp%2Fwails?ref=badge_shield" alt="FOSSA Status"&gt; &lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fwailsapp%2Fwails.svg?type=shield"&gt; &lt;/a&gt; &lt;a href="https://github.com/avelino/awesome-go" rel="nofollow"&gt; &lt;img src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true" alt="Awesome"&gt; &lt;/a&gt; &lt;a href="https://discord.gg/BrRSWTaxVK"&gt; &lt;img alt="Discord" src="https://dcbadge.vercel.app/api/server/BrRSWTaxVK?style=flat"&gt; &lt;/a&gt; &lt;br&gt; &lt;a href="https://github.com/wailsapp/wails/actions/workflows/build-and-test.yml" rel="nofollow"&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/wailsapp/wails/build-and-test.yml?branch=master&amp;amp;logo=Github" alt="Build"&gt; &lt;/a&gt; &lt;a href="https://github.com/wailsapp/wails/tags" rel="nofollow"&gt; &lt;img alt="GitHub tag (latest SemVer pre-release)" src="https://img.shields.io/github/v/tag/wailsapp/wails?include_prereleases&amp;amp;label=version"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;strong&gt; &lt;samp&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.md"&gt;English&lt;/a&gt; ¬∑ &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.zh-Hans.md"&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; ¬∑ &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.ja.md"&gt;Êó•Êú¨Ë™û&lt;/a&gt; ¬∑ &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.ko.md"&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt; ¬∑ &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.es.md"&gt;Espa√±ol&lt;/a&gt; ¬∑ &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.pt-br.md"&gt;Portugu√™s&lt;/a&gt; ¬∑ &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.ru.md"&gt;–†—É—Å—Å–∫–∏–π&lt;/a&gt; ¬∑ &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.fr.md"&gt;Francais&lt;/a&gt; ¬∑ &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.uz.md"&gt;Uzbek&lt;/a&gt; ¬∑ &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.de.md"&gt;Deutsch&lt;/a&gt; ¬∑ &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.tr.md"&gt;T√ºrk√ße&lt;/a&gt;&lt;/p&gt; &lt;/samp&gt; &lt;/strong&gt; 
&lt;/div&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#features"&gt;Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#sponsors"&gt;Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#stargazers-over-time"&gt;Stargazers over time&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#inspiration"&gt;Inspiration&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;The traditional method of providing web interfaces to Go programs is via a built-in web server. Wails offers a different approach: it provides the ability to wrap both Go code and a web frontend into a single binary. Tools are provided to make this easy for you by handling project creation, compilation and bundling. All you have to do is get creative!&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use standard Go for the backend&lt;/li&gt; 
 &lt;li&gt;Use any frontend technology you are already familiar with to build your UI&lt;/li&gt; 
 &lt;li&gt;Quickly create rich frontends for your Go programs using pre-built templates&lt;/li&gt; 
 &lt;li&gt;Easily call Go methods from Javascript&lt;/li&gt; 
 &lt;li&gt;Auto-generated Typescript definitions for your Go structs and methods&lt;/li&gt; 
 &lt;li&gt;Native Dialogs &amp;amp; Menus&lt;/li&gt; 
 &lt;li&gt;Native Dark / Light mode support&lt;/li&gt; 
 &lt;li&gt;Supports modern translucency and "frosted window" effects&lt;/li&gt; 
 &lt;li&gt;Unified eventing system between Go and Javascript&lt;/li&gt; 
 &lt;li&gt;Powerful cli tool to quickly generate and build your projects&lt;/li&gt; 
 &lt;li&gt;Multiplatform&lt;/li&gt; 
 &lt;li&gt;Uses native rendering engines - &lt;em&gt;no embedded browser&lt;/em&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Roadmap&lt;/h3&gt; 
&lt;p&gt;The project roadmap may be found &lt;a href="https://github.com/wailsapp/wails/discussions/1484"&gt;here&lt;/a&gt;. Please consult it before creating an enhancement request.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;The installation instructions are on the &lt;a href="https://wails.io/docs/gettingstarted/installation"&gt;official website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;This project is supported by these kind people / companies: &lt;img src="https://raw.githubusercontent.com/wailsapp/wails/master/website/static/img/sponsors.svg?sanitize=true" style="width:100%;max-width:800px;"&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://wails.io/img/sponsor/jetbrains-grayscale.webp" style="width: 100px"&gt; &lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Is this an alternative to Electron?&lt;/p&gt; &lt;p&gt;Depends on your requirements. It's designed to make it easy for Go programmers to make lightweight desktop applications or add a frontend to their existing applications. Wails does offer native elements such as menus and dialogs, so it could be considered a lightweight electron alternative.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Who is this project aimed at?&lt;/p&gt; &lt;p&gt;Go programmers who want to bundle an HTML/JS/CSS frontend with their applications, without resorting to creating a server and opening a browser to view it.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;What's with the name?&lt;/p&gt; &lt;p&gt;When I saw WebView, I thought "What I really want is tooling around building a WebView app, a bit like Rails is to Ruby". So initially it was a play on words (Webview on Rails). It just so happened to also be a homophone of the English name for the &lt;a href="https://en.wikipedia.org/wiki/Wales"&gt;Country&lt;/a&gt; I am from. So it stuck.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;a href="https://star-history.com/#wailsapp/wails&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=wailsapp/wails&amp;amp;type=Date&amp;amp;theme=dark"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=wailsapp/wails&amp;amp;type=Date"&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=wailsapp/wails&amp;amp;type=Date"&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;The contributors list is getting too big for the readme! All the amazing people who have contributed to this project have their own page &lt;a href="https://wails.io/credits#contributors"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fwailsapp%2Fwails?ref=badge_large"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fwailsapp%2Fwails.svg?type=large" alt="FOSSA Status"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Inspiration&lt;/h2&gt; 
&lt;p&gt;This project was mainly coded to the following albums:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/1R2rsEUqXjIvAbzM0yHrxA"&gt;Manic Street Preachers - Resistance Is Futile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/4VzCL9kjhgGQeKCiojK1YN"&gt;Manic Street Preachers - This Is My Truth, Tell Me Yours&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/4Krg8zvprquh7TVn9OxZn8"&gt;The Midnight - Endless Summer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/3kMfsD07Q32HRWKRrpcexr"&gt;Gary Newman - Savage (Songs from a Broken World)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/0oL0OhrE2rYVns4IGj8h2m"&gt;Steve Vai - Passion &amp;amp; Warfare&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/1nJsbWm3Yy2DW1KIc1OKle"&gt;Ben Howard - Every Kingdom&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/6astw05cTiXEc2OvyByaPs"&gt;Ben Howard - Noonday Dream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/2vBE40Rp60tl7rNqIZjaXM"&gt;Adwaith - Melyn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/3v2hrfNGINPLuDP0YDTOjm"&gt;Gwidaith Hen Fran - Cedors Hen Wrach&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/2Kh43m04B1UkVcpcRa1Zug"&gt;Metallica - Metallica&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/6SsIdN05HQg2GwYLfXuzLB"&gt;Bloc Party - Silent Alarm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/3tklE2Fgw1hCIUstIwPBJF"&gt;Maxthor - Another World&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/0c32OywcLpdJCWWMC6vB8v"&gt;Alun Tan Lan - Y Distawrwydd&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>aquasecurity/trivy</title>
      <link>https://github.com/aquasecurity/trivy</link>
      <description>&lt;p&gt;Find vulnerabilities, misconfigurations, secrets, SBOM in containers, Kubernetes, code repositories, clouds and more&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/aquasecurity/trivy/main/docs/imgs/logo.png" width="200"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/aquasecurity/trivy/releases"&gt;&lt;img src="https://img.shields.io/github/release/aquasecurity/trivy.svg?logo=github" alt="GitHub Release"&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/actions/workflows/test.yaml"&gt;&lt;img src="https://github.com/aquasecurity/trivy/actions/workflows/test.yaml/badge.svg?sanitize=true" alt="Test"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/aquasecurity/trivy"&gt;&lt;img src="https://goreportcard.com/badge/github.com/aquasecurity/trivy" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License: Apache-2.0"&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/aquasecurity/trivy/total?logo=github" alt="GitHub Downloads"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/docker/pulls/aquasec/trivy?logo=docker&amp;amp;label=docker%20pulls%20%2F%20trivy" alt="Docker Pulls"&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://trivy.dev/latest/docs/"&gt;üìñ Documentation&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Trivy (&lt;a href="https://raw.githubusercontent.com/aquasecurity/trivy/main/#how-to-pronounce-the-name-trivy"&gt;pronunciation&lt;/a&gt;) is a comprehensive and versatile security scanner. Trivy has &lt;em&gt;scanners&lt;/em&gt; that look for security issues, and &lt;em&gt;targets&lt;/em&gt; where it can find those issues.&lt;/p&gt; 
&lt;p&gt;Targets (what Trivy can scan):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Container Image&lt;/li&gt; 
 &lt;li&gt;Filesystem&lt;/li&gt; 
 &lt;li&gt;Git Repository (remote)&lt;/li&gt; 
 &lt;li&gt;Virtual Machine Image&lt;/li&gt; 
 &lt;li&gt;Kubernetes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Scanners (what Trivy can find there):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OS packages and software dependencies in use (SBOM)&lt;/li&gt; 
 &lt;li&gt;Known vulnerabilities (CVEs)&lt;/li&gt; 
 &lt;li&gt;IaC issues and misconfigurations&lt;/li&gt; 
 &lt;li&gt;Sensitive information and secrets&lt;/li&gt; 
 &lt;li&gt;Software licenses&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Trivy supports most popular programming languages, operating systems, and platforms. For a complete list, see the &lt;a href="https://trivy.dev/latest/docs/coverage/"&gt;Scanning Coverage&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;To learn more, go to the &lt;a href="https://trivy.dev"&gt;Trivy homepage&lt;/a&gt; for feature highlights, or to the &lt;a href="https://trivy.dev/latest/docs/"&gt;Documentation site&lt;/a&gt; for detailed information.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Get Trivy&lt;/h3&gt; 
&lt;p&gt;Trivy is available in most common distribution channels. The full list of installation options is available in the &lt;a href="https://trivy.dev/latest/getting-started/installation/"&gt;Installation&lt;/a&gt; page. Here are a few popular examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;brew install trivy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;docker run aquasec/trivy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Download binary from &lt;a href="https://github.com/aquasecurity/trivy/releases/latest/"&gt;https://github.com/aquasecurity/trivy/releases/latest/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://trivy.dev/latest/getting-started/installation/"&gt;Installation&lt;/a&gt; for more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Trivy is integrated with many popular platforms and applications. The complete list of integrations is available in the &lt;a href="https://trivy.dev/latest/ecosystem/"&gt;Ecosystem&lt;/a&gt; page. Here are a few popular examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-action"&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-operator"&gt;Kubernetes operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-vscode-extension"&gt;VS Code plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://trivy.dev/latest/ecosystem/"&gt;Ecosystem&lt;/a&gt; for more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Canary builds&lt;/h3&gt; 
&lt;p&gt;There are canary builds (&lt;a href="https://hub.docker.com/r/aquasec/trivy/tags?page=1&amp;amp;name=canary"&gt;Docker Hub&lt;/a&gt;, &lt;a href="https://github.com/aquasecurity/trivy/pkgs/container/trivy/75776514?tag=canary"&gt;GitHub&lt;/a&gt;, &lt;a href="https://gallery.ecr.aws/aquasecurity/trivy#canary"&gt;ECR&lt;/a&gt; images and &lt;a href="https://github.com/aquasecurity/trivy/actions/workflows/canary.yaml"&gt;binaries&lt;/a&gt;) as generated every push to main branch.&lt;/p&gt; 
&lt;p&gt;Please be aware: canary builds might have critical bugs, it's not recommended for use in production.&lt;/p&gt; 
&lt;h3&gt;General usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy &amp;lt;target&amp;gt; [--scanners &amp;lt;scanner1,scanner2&amp;gt;] &amp;lt;subject&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy image python:3.4-alpine
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/1161307/171013513-95f18734-233d-45d3-aaf5-d6aec687db0e.mov"&gt;https://user-images.githubusercontent.com/1161307/171013513-95f18734-233d-45d3-aaf5-d6aec687db0e.mov&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy fs --scanners vuln,secret,misconfig myproject/
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/1161307/171013917-b1f37810-f434-465c-b01a-22de036bd9b3.mov"&gt;https://user-images.githubusercontent.com/1161307/171013917-b1f37810-f434-465c-b01a-22de036bd9b3.mov&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy k8s --report summary cluster
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/aquasecurity/trivy/main/docs/imgs/trivy-k8s.png" alt="k8s summary"&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;How to pronounce the name "Trivy"?&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;tri&lt;/code&gt; is pronounced like &lt;strong&gt;tri&lt;/strong&gt;gger, &lt;code&gt;vy&lt;/code&gt; is pronounced like en&lt;strong&gt;vy&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Want more? Check out Aqua&lt;/h2&gt; 
&lt;p&gt;If you liked Trivy, you will love Aqua which builds on top of Trivy to provide even more enhanced capabilities for a complete security management offering.&lt;br&gt; You can find a high level comparison table specific to Trivy users &lt;a href="https://trivy.dev/latest/commercial/compare/"&gt;here&lt;/a&gt;. In addition check out the &lt;a href="https://aquasec.com"&gt;https://aquasec.com&lt;/a&gt; website for more information about our products and services. If you'd like to contact Aqua or request a demo, please use this form: &lt;a href="https://www.aquasec.com/demo"&gt;https://www.aquasec.com/demo&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Trivy is an &lt;a href="https://aquasec.com"&gt;Aqua Security&lt;/a&gt; open source project.&lt;br&gt; Learn about our open source work and portfolio &lt;a href="https://www.aquasec.com/products/open-source-projects/"&gt;here&lt;/a&gt;.&lt;br&gt; Contact us about any matter by opening a GitHub Discussion &lt;a href="https://github.com/aquasecurity/trivy/discussions"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please ensure to abide by our &lt;a href="https://github.com/aquasecurity/community/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; during all interactions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>traefik/traefik</title>
      <link>https://github.com/traefik/traefik</link>
      <description>&lt;p&gt;The Cloud Native Application Proxy&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="docs/content/assets/img/traefik.logo-dark.png"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="docs/content/assets/img/traefik.logo.png"&gt; 
  &lt;img alt="Traefik" title="Traefik" src="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/assets/img/traefik.logo.png"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://traefik-oss.semaphoreci.com/projects/traefik"&gt;&lt;img src="https://traefik-oss.semaphoreci.com/badges/traefik/branches/master.svg?style=shields" alt="Build Status SemaphoreCI"&gt;&lt;/a&gt; &lt;a href="https://doc.traefik.io/traefik"&gt;&lt;img src="https://img.shields.io/badge/docs-current-brightgreen.svg?sanitize=true" alt="Docs"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/traefik/traefik"&gt;&lt;img src="https://goreportcard.com/badge/traefik/traefik" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="https://github.com/traefik/traefik/raw/master/LICENSE.md"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="License"&gt;&lt;/a&gt; &lt;a href="https://community.traefik.io/"&gt;&lt;img src="https://img.shields.io/badge/style-register-green.svg?style=social&amp;amp;label=Discourse" alt="Join the community support forum at https://community.traefik.io/"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=traefik"&gt;&lt;img src="https://img.shields.io/twitter/follow/traefik.svg?style=social" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Traefik (pronounced &lt;em&gt;traffic&lt;/em&gt;) is a modern HTTP reverse proxy and load balancer that makes deploying microservices easy. Traefik integrates with your existing infrastructure components (&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;, &lt;a href="https://docs.docker.com/engine/swarm/"&gt;Swarm mode&lt;/a&gt;, &lt;a href="https://kubernetes.io"&gt;Kubernetes&lt;/a&gt;, &lt;a href="https://www.consul.io/"&gt;Consul&lt;/a&gt;, &lt;a href="https://coreos.com/etcd/"&gt;Etcd&lt;/a&gt;, &lt;a href="https://rancher.com"&gt;Rancher v2&lt;/a&gt;, &lt;a href="https://aws.amazon.com/ecs"&gt;Amazon ECS&lt;/a&gt;, ...) and configures itself automatically and dynamically. Pointing Traefik at your orchestrator should be the &lt;em&gt;only&lt;/em&gt; configuration step you need.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;. &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#overview"&gt;Overview&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#features"&gt;Features&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#supported-backends"&gt;Supported backends&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#quickstart"&gt;Quickstart&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#web-ui"&gt;Web UI&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#documentation"&gt;Documentation&lt;/a&gt;&lt;/strong&gt; .&lt;/p&gt; 
&lt;p&gt;. &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#support"&gt;Support&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#release-cycle"&gt;Release cycle&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#maintainers"&gt;Maintainers&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#credits"&gt;Credits&lt;/a&gt;&lt;/strong&gt; .&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; When migrating to a new major version of Traefik, please refer to the &lt;a href="https://doc.traefik.io/traefik/migration/v2-to-v3/"&gt;migration guide&lt;/a&gt; to ensure a smooth transition and to be aware of any breaking changes.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Imagine that you have deployed a bunch of microservices with the help of an orchestrator (like Swarm or Kubernetes) or a service registry (like etcd or consul). Now you want users to access these microservices, and you need a reverse proxy.&lt;/p&gt; 
&lt;p&gt;Traditional reverse-proxies require that you configure &lt;em&gt;each&lt;/em&gt; route that will connect paths and subdomains to &lt;em&gt;each&lt;/em&gt; microservice. In an environment where you add, remove, kill, upgrade, or scale your services &lt;em&gt;many&lt;/em&gt; times a day, the task of keeping the routes up to date becomes tedious.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This is when Traefik can help you!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Traefik listens to your service registry/orchestrator API and instantly generates the routes so your microservices are connected to the outside world -- without further intervention from your part.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Run Traefik and let it do the work for you!&lt;/strong&gt; &lt;em&gt;(But if you'd rather configure some of your routes manually, Traefik supports that too!)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/assets/img/traefik-architecture.png" alt="Architecture"&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Continuously updates its configuration (No restarts!)&lt;/li&gt; 
 &lt;li&gt;Supports multiple load balancing algorithms&lt;/li&gt; 
 &lt;li&gt;Provides HTTPS to your microservices by leveraging &lt;a href="https://letsencrypt.org"&gt;Let's Encrypt&lt;/a&gt; (wildcard certificates support)&lt;/li&gt; 
 &lt;li&gt;Circuit breakers, retry&lt;/li&gt; 
 &lt;li&gt;See the magic through its clean web UI&lt;/li&gt; 
 &lt;li&gt;WebSocket, HTTP/2, gRPC ready&lt;/li&gt; 
 &lt;li&gt;Provides metrics (Rest, Prometheus, Datadog, Statsd, InfluxDB 2.X)&lt;/li&gt; 
 &lt;li&gt;Keeps access logs (JSON, CLF)&lt;/li&gt; 
 &lt;li&gt;Fast&lt;/li&gt; 
 &lt;li&gt;Exposes a Rest API&lt;/li&gt; 
 &lt;li&gt;Packaged as a single binary file (made with &lt;span&gt;‚ù§Ô∏è&lt;/span&gt; with go) and available as an &lt;a href="https://hub.docker.com/r/_/traefik/"&gt;official&lt;/a&gt; docker image&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Backends&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/docker/"&gt;Docker&lt;/a&gt; / &lt;a href="https://doc.traefik.io/traefik/providers/docker/"&gt;Swarm mode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/kubernetes-crd/"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/ecs/"&gt;ECS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/file/"&gt;File&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;To get your hands on Traefik, you can use the &lt;a href="https://doc.traefik.io/traefik/getting-started/quick-start/"&gt;5-Minute Quickstart&lt;/a&gt; in our documentation (you will need Docker).&lt;/p&gt; 
&lt;h2&gt;Web UI&lt;/h2&gt; 
&lt;p&gt;You can access the simple HTML frontend of Traefik.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/assets/img/webui-dashboard.png" alt="Web UI Providers"&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find the complete documentation of Traefik v3 at &lt;a href="https://doc.traefik.io/traefik/"&gt;https://doc.traefik.io/traefik/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;To get community support, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;join the Traefik community forum: &lt;a href="https://community.traefik.io/"&gt;&lt;img src="https://img.shields.io/badge/style-register-green.svg?style=social&amp;amp;label=Discourse" alt="Join the chat at https://community.traefik.io/"&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you need commercial support, please contact &lt;a href="https://traefik.io"&gt;Traefik.io&lt;/a&gt; by mail: &lt;a href="mailto:support@traefik.io"&gt;mailto:support@traefik.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grab the latest binary from the &lt;a href="https://github.com/traefik/traefik/releases"&gt;releases&lt;/a&gt; page and run it with the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/traefik.sample.toml"&gt;sample configuration file&lt;/a&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;./traefik --configFile=traefik.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or use the official tiny Docker image and run it with the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/traefik.sample.toml"&gt;sample configuration file&lt;/a&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker run -d -p 8080:8080 -p 80:80 -v $PWD/traefik.toml:/etc/traefik/traefik.toml traefik
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or get the sources:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/traefik/traefik
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Introductory Videos&lt;/h2&gt; 
&lt;p&gt;You can find high level and deep dive videos on &lt;a href="https://videos.traefik.io"&gt;videos.traefik.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;p&gt;We are strongly promoting a philosophy of openness and sharing, and firmly standing against the elitist closed approach. Being part of the core team should be accessible to anyone who is motivated and want to be part of that journey! This &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/contributing/maintainers-guidelines.md"&gt;document&lt;/a&gt; describes how to be part of the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/contributing/maintainers.md"&gt;maintainers' team&lt;/a&gt; as well as various responsibilities and guidelines for Traefik maintainers. You can also find more information on our process to review pull requests and manage issues &lt;a href="https://github.com/traefik/contributors-guide/raw/master/issue_triage.md"&gt;in this document&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you'd like to contribute to the project, refer to the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/CONTRIBUTING.md"&gt;contributing documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please note that this project is released with a &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/CODE_OF_CONDUCT.md"&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project, you agree to abide by its terms.&lt;/p&gt; 
&lt;h2&gt;Release Cycle&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;We usually release 3/4 new versions (e.g. 1.1.0, 1.2.0, 1.3.0) per year.&lt;/li&gt; 
 &lt;li&gt;Release Candidates are available before the release (e.g. 1.1.0-rc1, 1.1.0-rc2, 1.1.0-rc3, 1.1.0-rc4, before 1.1.0).&lt;/li&gt; 
 &lt;li&gt;Bug-fixes (e.g. 1.1.1, 1.1.2, 1.2.1, 1.2.3) are released as needed (no additional features are delivered in those versions, bug-fixes only).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each version is supported until the next one is released (e.g. 1.1.x will be supported until 1.2.0 is out).&lt;/p&gt; 
&lt;p&gt;We use &lt;a href="https://semver.org/"&gt;Semantic Versioning&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Mailing Lists&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;General announcements, new releases: mail at &lt;a href="mailto:news+subscribe@traefik.io"&gt;news+subscribe@traefik.io&lt;/a&gt; or on &lt;a href="https://groups.google.com/a/traefik.io/forum/#!forum/news"&gt;the online viewer&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Security announcements: mail at &lt;a href="mailto:security+subscribe@traefik.io"&gt;security+subscribe@traefik.io&lt;/a&gt; or on &lt;a href="https://groups.google.com/a/traefik.io/forum/#!forum/security"&gt;the online viewer&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Kudos to Peka for his awesome work on the gopher's logo!.&lt;/p&gt; 
&lt;p&gt;The gopher's logo of Traefik is licensed under the Creative Commons 3.0 Attributions license.&lt;/p&gt; 
&lt;p&gt;The gopher's logo of Traefik was inspired by the gopher stickers made by &lt;a href="https://twitter.com/tenntenn"&gt;Takuya Ueda&lt;/a&gt;. The original Go gopher was designed by &lt;a href="https://reneefrench.blogspot.com/"&gt;Renee French&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tinygo-org/tinygo</title>
      <link>https://github.com/tinygo-org/tinygo</link>
      <description>&lt;p&gt;Go compiler for small places. Microcontrollers, WebAssembly (WASM/WASI), and command-line tools. Based on LLVM.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TinyGo - Go compiler for small places&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/tinygo-org/tinygo/actions/workflows/linux.yml"&gt;&lt;img src="https://github.com/tinygo-org/tinygo/actions/workflows/linux.yml/badge.svg?branch=dev" alt="Linux"&gt;&lt;/a&gt; &lt;a href="https://github.com/tinygo-org/tinygo/actions/workflows/build-macos.yml"&gt;&lt;img src="https://github.com/tinygo-org/tinygo/actions/workflows/build-macos.yml/badge.svg?branch=dev" alt="macOS"&gt;&lt;/a&gt; &lt;a href="https://github.com/tinygo-org/tinygo/actions/workflows/windows.yml"&gt;&lt;img src="https://github.com/tinygo-org/tinygo/actions/workflows/windows.yml/badge.svg?branch=dev" alt="Windows"&gt;&lt;/a&gt; &lt;a href="https://github.com/tinygo-org/tinygo/actions/workflows/docker.yml"&gt;&lt;img src="https://github.com/tinygo-org/tinygo/actions/workflows/docker.yml/badge.svg?branch=dev" alt="Docker"&gt;&lt;/a&gt; &lt;a href="https://github.com/tinygo-org/tinygo/actions/workflows/nix.yml"&gt;&lt;img src="https://github.com/tinygo-org/tinygo/actions/workflows/nix.yml/badge.svg?branch=dev" alt="Nix"&gt;&lt;/a&gt; &lt;a href="https://circleci.com/gh/tinygo-org/tinygo/tree/dev"&gt;&lt;img src="https://circleci.com/gh/tinygo-org/tinygo/tree/dev.svg?style=svg" alt="CircleCI"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;TinyGo is a Go compiler intended for use in small places such as microcontrollers, WebAssembly (wasm/wasi), and command-line tools.&lt;/p&gt; 
&lt;p&gt;It reuses libraries used by the &lt;a href="https://golang.org/pkg/go/"&gt;Go language tools&lt;/a&gt; alongside &lt;a href="http://llvm.org"&gt;LLVM&lt;/a&gt; to provide an alternative way to compile programs written in the Go programming language.&lt;/p&gt; 
&lt;h2&gt;Embedded&lt;/h2&gt; 
&lt;p&gt;Here is an example program that blinks the built-in LED when run directly on any supported board with onboard LED:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "machine"
    "time"
)

func main() {
    led := machine.LED
    led.Configure(machine.PinConfig{Mode: machine.PinOutput})
    for {
        led.Low()
        time.Sleep(time.Millisecond * 1000)

        led.High()
        time.Sleep(time.Millisecond * 1000)
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The above program can be compiled and run without modification on an Arduino Uno, an Adafruit ItsyBitsy M0, or any of the supported boards that have a built-in LED, just by setting the correct TinyGo compiler target. For example, this compiles and flashes an Arduino Uno:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;tinygo flash -target arduino examples/blinky1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;WebAssembly&lt;/h2&gt; 
&lt;p&gt;TinyGo is very useful for compiling programs both for use in browsers (WASM) as well as for use on servers and other edge devices (WASI).&lt;/p&gt; 
&lt;p&gt;TinyGo programs can run in &lt;a href="https://www.fastly.com/documentation/guides/compute/go/"&gt;Fastly Compute&lt;/a&gt;, &lt;a href="https://developer.fermyon.com/spin/go-components"&gt;Fermyon Spin&lt;/a&gt;, &lt;a href="https://wazero.io/languages/tinygo/"&gt;wazero&lt;/a&gt; and many other WebAssembly runtimes.&lt;/p&gt; 
&lt;p&gt;Here is a small TinyGo program for use by a WASI host application:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

//go:wasmexport add
func add(x, y uint32) uint32 {
	return x + y
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This compiles the above TinyGo program for use on any WASI Preview 1 runtime:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;tinygo build -buildmode=c-shared -o add.wasm -target=wasip1 add.go
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use the same syntax as Go 1.24+:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;GOARCH=wasip1 GOOS=wasm tinygo build -buildmode=c-shared -o add.wasm add.go
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://tinygo.org/getting-started/"&gt;getting started instructions&lt;/a&gt; for information on how to install TinyGo, as well as how to run the TinyGo compiler using our Docker container.&lt;/p&gt; 
&lt;h2&gt;Supported targets&lt;/h2&gt; 
&lt;h3&gt;Embedded&lt;/h3&gt; 
&lt;p&gt;You can compile TinyGo programs for over 94 different microcontroller boards.&lt;/p&gt; 
&lt;p&gt;For more information, please see &lt;a href="https://tinygo.org/docs/reference/microcontrollers/"&gt;https://tinygo.org/docs/reference/microcontrollers/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;WebAssembly&lt;/h3&gt; 
&lt;p&gt;TinyGo programs can be compiled for both WASM and WASI targets.&lt;/p&gt; 
&lt;p&gt;For more information, see &lt;a href="https://tinygo.org/docs/guides/webassembly/"&gt;https://tinygo.org/docs/guides/webassembly/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Operating Systems&lt;/h3&gt; 
&lt;p&gt;You can also compile programs for Linux, macOS, and Windows targets.&lt;/p&gt; 
&lt;p&gt;For more information:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Linux &lt;a href="https://tinygo.org/docs/guides/linux/"&gt;https://tinygo.org/docs/guides/linux/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;macOS &lt;a href="https://tinygo.org/docs/guides/macos/"&gt;https://tinygo.org/docs/guides/macos/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Windows &lt;a href="https://tinygo.org/docs/guides/windows/"&gt;https://tinygo.org/docs/guides/windows/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Currently supported features:&lt;/h2&gt; 
&lt;p&gt;For a description of currently supported Go language features, please see &lt;a href="https://tinygo.org/lang-support/"&gt;https://tinygo.org/lang-support/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation is located on our web site at &lt;a href="https://tinygo.org/"&gt;https://tinygo.org/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can find the web site code at &lt;a href="https://github.com/tinygo-org/tinygo-site"&gt;https://github.com/tinygo-org/tinygo-site&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting help&lt;/h2&gt; 
&lt;p&gt;If you're looking for a more interactive way to discuss TinyGo usage or development, we have a &lt;a href="https://gophers.slack.com/messages/CDJD3SUP6/"&gt;#TinyGo channel&lt;/a&gt; on the &lt;a href="https://gophers.slack.com"&gt;Gophers Slack&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you need an invitation for the Gophers Slack, you can generate one here which should arrive fairly quickly (under 1 min): &lt;a href="https://invite.slack.golangbridge.org"&gt;https://invite.slack.golangbridge.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Your contributions are welcome!&lt;/p&gt; 
&lt;p&gt;Please take a look at our &lt;a href="https://tinygo.org/docs/guides/contributing/"&gt;Contributing&lt;/a&gt; page on our web site for details.&lt;/p&gt; 
&lt;h2&gt;Project Scope&lt;/h2&gt; 
&lt;p&gt;Goals:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Have very small binary sizes. Don't pay for what you don't use.&lt;/li&gt; 
 &lt;li&gt;Support for most common microcontroller boards.&lt;/li&gt; 
 &lt;li&gt;Be usable on the web using WebAssembly.&lt;/li&gt; 
 &lt;li&gt;Good CGo support, with no more overhead than a regular function call.&lt;/li&gt; 
 &lt;li&gt;Support most standard library packages and compile most Go code without modification.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Non-goals:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Be efficient while using zillions of goroutines. However, good goroutine support is certainly a goal.&lt;/li&gt; 
 &lt;li&gt;Be as fast as &lt;code&gt;gc&lt;/code&gt;. However, LLVM will probably be better at optimizing certain things so TinyGo might actually turn out to be faster for number crunching.&lt;/li&gt; 
 &lt;li&gt;Be able to compile every Go program out there.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why this project exists&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;We never expected Go to be an embedded language and so its got serious problems...&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;-- Rob Pike, &lt;a href="https://www.youtube.com/watch?v=VoS7DsT1rdM&amp;amp;feature=youtu.be&amp;amp;t=2799"&gt;GopherCon 2014 Opening Keynote&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;TinyGo is a project to bring Go to microcontrollers and small systems with a single processor core. It is similar to &lt;a href="https://github.com/ziutek/emgo"&gt;emgo&lt;/a&gt; but a major difference is that we want to keep the Go memory model (which implies garbage collection of some sort). Another difference is that TinyGo uses LLVM internally instead of emitting C, which hopefully leads to smaller and more efficient code and certainly leads to more flexibility.&lt;/p&gt; 
&lt;p&gt;The original reasoning was: if &lt;a href="https://micropython.org/"&gt;Python&lt;/a&gt; can run on microcontrollers, then certainly &lt;a href="https://golang.org/"&gt;Go&lt;/a&gt; should be able to run on even lower level micros.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the BSD 3-clause license, just like the &lt;a href="https://golang.org/LICENSE"&gt;Go project&lt;/a&gt; itself.&lt;/p&gt; 
&lt;p&gt;Some code has been copied from the LLVM project and is therefore licensed under &lt;a href="http://releases.llvm.org/11.0.0/LICENSE.TXT"&gt;a variant of the Apache 2.0 license&lt;/a&gt;. This has been clearly indicated in the header of these files.&lt;/p&gt; 
&lt;p&gt;Some code has been copied and/or ported from Paul Stoffregen's Teensy libraries and is therefore licensed under PJRC's license. This has been clearly indicated in the header of these files.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>aldinokemal/go-whatsapp-web-multidevice</title>
      <link>https://github.com/aldinokemal/go-whatsapp-web-multidevice</link>
      <description>&lt;p&gt;GOWA - WhatsApp REST API with support for UI, Webhooks, and MCP. Built with Golang for efficient memory use.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;!-- markdownlint-disable-next-line MD033 --&gt; 
 &lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/src/views/assets/gowa.svg?sanitize=true" alt="GoWA Logo" width="200" height="200"&gt; 
 &lt;h2&gt;Golang WhatsApp - Built with Go for efficient memory use&lt;/h2&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://www.patreon.com/c/aldinokemal"&gt;&lt;img src="https://img.shields.io/badge/Support%20on-Patreon-orange.svg?sanitize=true" alt="Patreon"&gt;&lt;/a&gt; &lt;strong&gt;If you're using this tools to generate income, consider supporting its development by becoming a Patreon member!&lt;/strong&gt; Your support helps ensure the library stays maintained and receives regular updates!&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/v/release/aldinokemal/go-whatsapp-web-multidevice" alt="release version"&gt; &lt;img src="https://github.com/aldinokemal/go-whatsapp-web-multidevice/actions/workflows/build-docker-image.yaml/badge.svg?sanitize=true" alt="Build Image"&gt; &lt;img src="https://github.com/aldinokemal/go-whatsapp-web-multidevice/actions/workflows/release.yml/badge.svg?sanitize=true" alt="Binary Release"&gt;&lt;/p&gt; 
&lt;h2&gt;Support for &lt;code&gt;ARM&lt;/code&gt; &amp;amp; &lt;code&gt;AMD&lt;/code&gt; Architecture along with &lt;code&gt;MCP&lt;/code&gt; Support&lt;/h2&gt; 
&lt;p&gt;Download:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aldinokemal/go-whatsapp-web-multidevice/releases/latest"&gt;Release&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/aldinokemal2104/go-whatsapp-web-multidevice/tags"&gt;Docker Image&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support n8n package (n8n.io)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/@aldinokemal2104/n8n-nodes-gowa"&gt;n8n package&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Go to Settings -&amp;gt; Community Nodes -&amp;gt; Input &lt;code&gt;@aldinokemal2104/n8n-nodes-gowa&lt;/code&gt; -&amp;gt; Install&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Breaking Changes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;v6&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;For REST mode, you need to run &lt;code&gt;&amp;lt;binary&amp;gt; rest&lt;/code&gt; instead of &lt;code&gt;&amp;lt;binary&amp;gt;&lt;/code&gt; 
    &lt;ul&gt; 
     &lt;li&gt;for example: &lt;code&gt;./whatsapp rest&lt;/code&gt; instead of &lt;del&gt;./whatsapp&lt;/del&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;For MCP mode, you need to run &lt;code&gt;&amp;lt;binary&amp;gt; mcp&lt;/code&gt; 
    &lt;ul&gt; 
     &lt;li&gt;for example: &lt;code&gt;./whatsapp mcp&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;v7&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Starting version 7.x we are using goreleaser to build the binary, so you can download the binary from &lt;a href="https://github.com/aldinokemal/go-whatsapp-web-multidevice/releases/latest"&gt;release&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Feature&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Send WhatsApp message via http API, &lt;a href="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/docs/openapi.yaml"&gt;docs/openapi.yml&lt;/a&gt; for more details&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;MCP (Model Context Protocol) Server Support&lt;/strong&gt; - Integrate with AI agents and tools using standardized protocol&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Mention someone&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;@phoneNumber&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;example: &lt;code&gt;Hello @628974812XXXX, @628974812XXXX&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Post Whatsapp Status&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Compress image before send&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Compress video before send&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Change OS name become your app (it's the device name when connect via mobile)&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--os=Chrome&lt;/code&gt; or &lt;code&gt;--os=MyApplication&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Basic Auth (able to add multi credentials)&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--basic-auth=kemal:secret,toni:password,userName:secretPassword&lt;/code&gt;, or you can simplify&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;-b=kemal:secret,toni:password,userName:secretPassword&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Subpath deployment support&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--base-path="/gowa"&lt;/code&gt; (allows deployment under a specific path like &lt;code&gt;/gowa/sub/path&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Customizable port and debug mode&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--port 8000&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--debug true&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Auto reply message&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--autoreply="Don't reply this message"&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Auto mark read incoming messages&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--auto-mark-read=true&lt;/code&gt; (automatically marks incoming messages as read)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Webhook for received message&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--webhook="http://yourwebhook.site/handler"&lt;/code&gt;, or you can simplify&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;-w="http://yourwebhook.site/handler"&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;for more detail, see &lt;a href="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/docs/webhook-payload.md"&gt;Webhook Payload Documentation&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Webhook Secret Our webhook will be sent to you with an HMAC header and a sha256 default key &lt;code&gt;secret&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;You may modify this by using the option below:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--webhook-secret="secret"&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Webhook Payload Documentation&lt;/strong&gt; For detailed webhook payload schemas, security implementation, and integration examples, see &lt;a href="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/docs/webhook-payload.md"&gt;Webhook Payload Documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;You can configure the application using either command-line flags (shown above) or environment variables. Configuration can be set in three ways (in order of priority):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Command-line flags (highest priority)&lt;/li&gt; 
 &lt;li&gt;Environment variables&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;.env&lt;/code&gt; file (lowest priority)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Environment Variables&lt;/h3&gt; 
&lt;p&gt;You can configure the application using environment variables. Configuration can be set in three ways (in order of priority):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Command-line flags (highest priority)&lt;/li&gt; 
 &lt;li&gt;Environment variables&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;.env&lt;/code&gt; file (lowest priority)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;To use environment variables:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; in your project root (&lt;code&gt;cp src/.env.example src/.env&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Modify the values in &lt;code&gt;.env&lt;/code&gt; according to your needs&lt;/li&gt; 
 &lt;li&gt;Or set the same variables as system environment variables&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Available Environment Variables&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Variable&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;APP_PORT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Application port&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;3000&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;APP_PORT=8080&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;APP_DEBUG&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enable debug logging&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;APP_DEBUG=true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;APP_OS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;OS name (device name in WhatsApp)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Chrome&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;APP_OS=MyApp&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;APP_BASIC_AUTH&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Basic authentication credentials&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;APP_BASIC_AUTH=user1:pass1,user2:pass2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;APP_BASE_PATH&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Base path for subpath deployment&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;APP_BASE_PATH=/gowa&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;DB_URI&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Database connection URI&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;file:storages/whatsapp.db?_foreign_keys=on&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;DB_URI=postgres://user:pass@host/db&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_AUTO_REPLY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Auto-reply message&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_AUTO_REPLY="Auto reply message"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_AUTO_MARK_READ&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Auto-mark incoming messages as read&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_AUTO_MARK_READ=true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_WEBHOOK&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Webhook URL(s) for events (comma-separated)&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_WEBHOOK=https://webhook.site/xxx&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_WEBHOOK_SECRET&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Webhook secret for validation&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;secret&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_WEBHOOK_SECRET=super-secret-key&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_ACCOUNT_VALIDATION&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enable account validation&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_ACCOUNT_VALIDATION=false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_CHAT_STORAGE&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enable chat storage&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_CHAT_STORAGE=false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Note: Command-line flags will override any values set in environment variables or &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For more command &lt;code&gt;./whatsapp --help&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;h3&gt;System Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Go 1.24.0 or higher&lt;/strong&gt; (for building from source)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;FFmpeg&lt;/strong&gt; (for media processing)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Platform Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux (x86_64, ARM64)&lt;/li&gt; 
 &lt;li&gt;macOS (Intel, Apple Silicon)&lt;/li&gt; 
 &lt;li&gt;Windows (x86_64) - WSL recommended&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Dependencies (without docker)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Mac OS: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;brew install ffmpeg&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;export CGO_CFLAGS_ALLOW="-Xpreprocessor"&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Linux: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;sudo apt update&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;sudo apt install ffmpeg&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Windows (not recomended, prefer using &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install"&gt;WSL&lt;/a&gt;): 
  &lt;ul&gt; 
   &lt;li&gt;install ffmpeg, &lt;a href="https://www.ffmpeg.org/download.html#build-windows"&gt;download here&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;add to ffmpeg to &lt;a href="https://www.google.com/search?q=windows+add+to+environment+path"&gt;environment variable&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;h3&gt;Basic&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone this repo: &lt;code&gt;git clone https://github.com/aldinokemal/go-whatsapp-web-multidevice&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Open the folder that was cloned via cmd/terminal.&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;cd src&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;go run . rest&lt;/code&gt; (for REST API mode)&lt;/li&gt; 
 &lt;li&gt;Open &lt;code&gt;http://localhost:3000&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Docker (you don't need to install in required)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone this repo: &lt;code&gt;git clone https://github.com/aldinokemal/go-whatsapp-web-multidevice&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Open the folder that was cloned via cmd/terminal.&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;docker-compose up -d --build&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;open &lt;code&gt;http://localhost:3000&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Build your own binary&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone this repo &lt;code&gt;git clone https://github.com/aldinokemal/go-whatsapp-web-multidevice&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Open the folder that was cloned via cmd/terminal.&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;cd src&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;run 
  &lt;ol&gt; 
   &lt;li&gt;Linux &amp;amp; MacOS: &lt;code&gt;go build -o whatsapp&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Windows (CMD / PowerShell): &lt;code&gt;go build -o whatsapp.exe&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;run 
  &lt;ol&gt; 
   &lt;li&gt;Linux &amp;amp; MacOS: &lt;code&gt;./whatsapp rest&lt;/code&gt; (for REST API mode) 
    &lt;ol&gt; 
     &lt;li&gt;run &lt;code&gt;./whatsapp --help&lt;/code&gt; for more detail flags&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt;Windows: &lt;code&gt;.\whatsapp.exe rest&lt;/code&gt; (for REST API mode) 
    &lt;ol&gt; 
     &lt;li&gt;run &lt;code&gt;.\whatsapp.exe --help&lt;/code&gt; for more detail flags&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;open &lt;code&gt;http://localhost:3000&lt;/code&gt; in browser&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;MCP Server (Model Context Protocol)&lt;/h3&gt; 
&lt;p&gt;This application can also run as an MCP server, allowing AI agents and tools to interact with WhatsApp through a standardized protocol.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone this repo &lt;code&gt;git clone https://github.com/aldinokemal/go-whatsapp-web-multidevice&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Open the folder that was cloned via cmd/terminal.&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;cd src&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;go run . mcp&lt;/code&gt; or build the binary and run &lt;code&gt;./whatsapp mcp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;The MCP server will start on &lt;code&gt;http://localhost:8080&lt;/code&gt; by default&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;MCP Server Options&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--host localhost&lt;/code&gt; - Set the host for MCP server (default: localhost)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--port 8080&lt;/code&gt; - Set the port for MCP server (default: 8080)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Available MCP Tools&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_send_text&lt;/code&gt; - Send text messages&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_send_contact&lt;/code&gt; - Send contact cards&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_send_link&lt;/code&gt; - Send links with captions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_send_location&lt;/code&gt; - Send location coordinates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;MCP Endpoints&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;SSE endpoint: &lt;code&gt;http://localhost:8080/sse&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Message endpoint: &lt;code&gt;http://localhost:8080/message&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;MCP Configuration&lt;/h3&gt; 
&lt;p&gt;Make sure you have the MCP server running: &lt;code&gt;./whatsapp mcp&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For AI tools that support MCP with SSE (like Cursor), add this configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "whatsapp": {
      "url": "http://localhost:8080/sse"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Production Mode REST (docker)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --detach --publish=3000:3000 --name=whatsapp --restart=always --volume=$(docker volume create --name=whatsapp):/app/storages aldinokemal2104/go-whatsapp-web-multidevice rest --autoreply="Dont't reply this message please"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Production Mode REST (docker compose)&lt;/h3&gt; 
&lt;p&gt;create &lt;code&gt;docker-compose.yml&lt;/code&gt; file with the following configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yml"&gt;services:
  whatsapp:
    image: aldinokemal2104/go-whatsapp-web-multidevice
    container_name: whatsapp
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - whatsapp:/app/storages
    command:
      - rest
      - --basic-auth=admin:admin
      - --port=3000
      - --debug=true
      - --os=Chrome
      - --account-validation=false

volumes:
  whatsapp:
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or with env file&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yml"&gt;services:
  whatsapp:
    image: aldinokemal2104/go-whatsapp-web-multidevice
    container_name: whatsapp
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - whatsapp:/app/storages
    environment:
      - APP_BASIC_AUTH=admin:admin
      - APP_PORT=3000
      - APP_DEBUG=true
      - APP_OS=Chrome
      - APP_ACCOUNT_VALIDATION=false

volumes:
  whatsapp:
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Production Mode (binary)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;download binary from &lt;a href="https://github.com/aldinokemal/go-whatsapp-web-multidevice/releases"&gt;release&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can fork or edit this source code !&lt;/p&gt; 
&lt;h2&gt;Current API&lt;/h2&gt; 
&lt;h3&gt;MCP (Model Context Protocol) API&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;MCP server provides standardized tools for AI agents to interact with WhatsApp&lt;/li&gt; 
 &lt;li&gt;Supports Server-Sent Events (SSE) transport&lt;/li&gt; 
 &lt;li&gt;Available tools: &lt;code&gt;whatsapp_send_text&lt;/code&gt;, &lt;code&gt;whatsapp_send_contact&lt;/code&gt;, &lt;code&gt;whatsapp_send_link&lt;/code&gt;, &lt;code&gt;whatsapp_send_location&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Compatible with MCP-enabled AI tools and agents&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;HTTP REST API&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://bump.sh/aldinokemal/doc/go-whatsapp-web-multidevice"&gt;API Specification Document&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Check &lt;a href="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/docs/openapi.yaml"&gt;docs/openapi.yml&lt;/a&gt; for detailed API specifications.&lt;/li&gt; 
 &lt;li&gt;Use &lt;a href="https://editor.swagger.io"&gt;SwaggerEditor&lt;/a&gt; to visualize the API.&lt;/li&gt; 
 &lt;li&gt;Generate HTTP clients using &lt;a href="https://openapi-generator.tech/#try"&gt;openapi-generator&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Menu&lt;/th&gt; 
   &lt;th&gt;Method&lt;/th&gt; 
   &lt;th&gt;URL&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Login with Scan QR&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/app/login&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Login With Pair Code&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/app/login-with-code&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Logout&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/app/logout&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Reconnect&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/app/reconnect&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Devices&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/app/devices&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;User Info&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/user/info&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;User Avatar&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/user/avatar&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;User Change Avatar&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/user/avatar&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;User Change PushName&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/user/pushname&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;User My Groups&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/user/my/groups&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;User My Newsletter&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/user/my/newsletters&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;User My Privacy Setting&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/user/my/privacy&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;User My Contacts&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/user/my/contacts&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;User Check&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/user/check&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;User Business Profile&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/user/business-profile&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Send Message&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/message&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Send Image&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/image&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Send Audio&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/audio&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Send File&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/file&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Send Video&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/video&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Send Contact&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/contact&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Send Link&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/link&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Send Location&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/location&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Send Poll / Vote&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/poll&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Send Presence&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/presence&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Send Chat Presence (Typing Indicator)&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/chat-presence&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Revoke Message&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/message/:message_id/revoke&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;React Message&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/message/:message_id/reaction&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Delete Message&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/message/:message_id/delete&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Edit Message&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/message/:message_id/update&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Read Message (DM)&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/message/:message_id/read&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Star Message&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/message/:message_id/star&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Unstar Message&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/message/:message_id/unstar&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Join Group With Link&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/join-with-link&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Group Info From Link&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/group/info-from-link&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Group Info&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/group/info&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Leave Group&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/leave&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Create Group&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Add Participants in Group&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/participants&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Remove Participant in Group&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/participants/remove&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Promote Participant in Group&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/participants/promote&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Demote Participant in Group&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/participants/demote&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;List Requested Participants in Group&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/group/participant-requests&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Approve Requested Participant in Group&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/participant-requests/approve&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Reject Requested Participant in Group&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/participant-requests/reject&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Set Group Photo&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/photo&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Set Group Name&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/name&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Set Group Locked&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/locked&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Set Group Announce&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/announce&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Set Group Topic&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/topic&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Unfollow Newsletter&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/newsletter/unfollow&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Get Chat List&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/chats&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Get Chat Messages&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/chat/:chat_jid/messages&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Label Chat&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/chat/:chat_jid/label&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Pin Chat&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/chat/:chat_jid/pin&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-txt"&gt;‚úÖ = Available
‚ùå = Not Available Yet
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;User Interface&lt;/h2&gt; 
&lt;h3&gt;MCP UI&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Setup MCP (tested in cursor) &lt;img src="https://i.ibb.co/vCg4zNWt/mcpsetup.png" alt="Setup MCP"&gt;&lt;/li&gt; 
 &lt;li&gt;Test MCP &lt;img src="https://i.ibb.co/B2LX38DW/mcptest.png" alt="Test MCP"&gt;&lt;/li&gt; 
 &lt;li&gt;Successfully setup MCP &lt;img src="https://i.ibb.co/1fCx0Myc/mcpsuccess.png" alt="Success MCP"&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;HTTP REST API UI&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Image&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Homepage&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/homepage.png" alt="Homepage"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Login&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/login.png" alt="Login"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Login With Code&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/login-with-code.png" alt="Login With Code"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Message&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-message.png" alt="Send Message"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Image&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-image.png" alt="Send Image"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send File&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-file.png" alt="Send File"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Video&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-video.png" alt="Send Video"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Contact&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-contact.png" alt="Send Contact"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Location&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-location.png" alt="Send Location"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Audio&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-audio.png" alt="Send Audio"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Poll&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-poll.png" alt="Send Poll"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Presence&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-presence.png" alt="Send Presence"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Link&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-link.png" alt="Send Link"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;My Group&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/group-list.png" alt="My Group"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Group Info From Link&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/group-info-from-link.png" alt="Group Info From Link"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Create Group&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/group-create.png" alt="Create Group"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Join Group with LInk&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/group-join-link.png" alt="Join Group with Link"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Manage Participant&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/group-manage-participant.png" alt="Manage Participant"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;My Newsletter&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/newsletter-list.png" alt="My Newsletter"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;My Contacts&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/contact-list.png" alt="My Contacts"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Business Profile&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/business-profile.png" alt="Business Profile"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Mac OS NOTE&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Please do this if you have an error (invalid flag in pkg-config --cflags: -Xpreprocessor) &lt;code&gt;export CGO_CFLAGS_ALLOW="-Xpreprocessor"&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Important&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;This project is unofficial and not affiliated with WhatsApp.&lt;/li&gt; 
 &lt;li&gt;Please use official WhatsApp API to avoid any issues.&lt;/li&gt; 
 &lt;li&gt;We only able to run MCP or REST API, this is limitation from whatsmeow library. independent MCP will be available in the future.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>kubesphere/kubesphere</title>
      <link>https://github.com/kubesphere/kubesphere</link>
      <description>&lt;p&gt;The container platform tailored for Kubernetes multi-cloud, datacenter, and edge management ‚éà üñ• ‚òÅÔ∏è&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://kubesphere.io/"&gt;&lt;img src="https://raw.githubusercontent.com/kubesphere/kubesphere/master/docs/images/kubesphere-icon.gif" alt="banner" width="200px"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;b&gt;The container platform tailored for &lt;i&gt;Kubernetes multi-cloud, datacenter, and edge&lt;/i&gt; management&lt;/b&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://goreportcard.com/report/github.com/kubesphere/kubesphere"&gt;&lt;img src="https://goreportcard.com/badge/github.com/kubesphere/kubesphere" alt="A+"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/kubesphere/ks-installer"&gt;&lt;img src="https://img.shields.io/docker/pulls/kubesphere/ks-installer"&gt;&lt;/a&gt; &lt;a href="https://github.com/kubesphere/kubesphere/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3A%22good+first+issue%22"&gt;&lt;img src="https://img.shields.io/github/issues/kubesphere/kubesphere/good%20first%20issue?logo=github" alt="good first issue"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=KubeSphere"&gt;&lt;img src="https://img.shields.io/twitter/follow/KubeSphere?style=social" alt="follow on Twitter"&gt;&lt;/a&gt; &lt;a href="https://join.slack.com/t/kubesphere/shared_invite/zt-2b4t6rdb4-ico_4UJzCln_S2c1pcrIpQ"&gt;&lt;img src="https://img.shields.io/badge/Slack-2000%2B-blueviolet?logo=slack&amp;amp;logoColor=white"&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/channel/UCyTdUQUYjf7XLjxECx63Hpw"&gt;&lt;img src="https://img.shields.io/youtube/channel/subscribers/UCyTdUQUYjf7XLjxECx63Hpw?style=social"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;What is KubeSphere&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/kubesphere/kubesphere/master/README_zh.md"&gt;‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://kubesphere.io/"&gt;KubeSphere&lt;/a&gt; is a &lt;strong&gt;distributed operating system for cloud-native application management&lt;/strong&gt;, using &lt;a href="https://kubernetes.io"&gt;Kubernetes&lt;/a&gt; as its kernel. It provides a plug-and-play architecture, allowing third-party applications to be seamlessly integrated into its ecosystem. KubeSphere is also a multi-tenant container platform with full-stack automated IT operation and streamlined DevOps workflows. It provides developer-friendly wizard web UI, helping enterprises to build out a more robust and feature-rich platform, which includes most common functionalities needed for enterprise Kubernetes strategy, see &lt;a href="https://raw.githubusercontent.com/kubesphere/kubesphere/master/#features"&gt;Feature List&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;The following screenshots give a close insight into KubeSphere. Please check &lt;a href="https://kubesphere.io/docs/introduction/what-is-kubesphere/"&gt;What is KubeSphere&lt;/a&gt; for further information.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="50%" align="center"&gt;&lt;b&gt;Workbench&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="50%" align="center"&gt;&lt;b&gt;Project Resources&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/kubesphere/kubesphere/master/docs/images/console.png"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/kubesphere/kubesphere/master/docs/images/project.png"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" align="center"&gt;&lt;b&gt;CI/CD Pipeline&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="50%" align="center"&gt;&lt;b&gt;App Store&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/kubesphere/kubesphere/master/docs/images/cicd.png"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/kubesphere/kubesphere/master/docs/images/app-store.png"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Demo environment&lt;/h2&gt; 
&lt;p&gt;üéÆ &lt;a href="https://kubesphere.cloud/en/console/managed-cluster/"&gt;KubeSphere Lite&lt;/a&gt; provides you with free, stable, and out-of-the-box managed cluster service. After registration and login, you can easily create a K8s cluster with KubeSphere installed in only 5 seconds and experience feature-rich KubeSphere.&lt;/p&gt; 
&lt;p&gt;üñ• You can view the &lt;a href="https://youtu.be/YxZ1YUv0CYs"&gt;Demo Video&lt;/a&gt; to get started with KubeSphere.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;üß© Extensible Architecture&lt;/b&gt;&lt;/summary&gt; Designed for flexibility, supporting plugin-based extensions and seamless integrations. Easily customize and expand functionalities to meet evolving needs. 
 &lt;a href="https://kubesphere.io/docs/v4.1/01-intro/02-architecture/"&gt;Learn more&lt;/a&gt;. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;üï∏ Provisioning Kubernetes Cluster&lt;/b&gt;&lt;/summary&gt; Support deploy Kubernetes on any infrastructure, support online and air-gapped installation. 
 &lt;a href="https://kubesphere.io/docs/v4.1/03-installation-and-upgrade/02-install-kubesphere/"&gt;Learn more&lt;/a&gt;. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;üîó Kubernetes Multi-cluster Management&lt;/b&gt;&lt;/summary&gt; Provide a centralized control plane to manage multiple Kubernetes clusters, and support the ability to propagate an app to multiple K8s clusters across different cloud providers. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;ü§ñ Kubernetes DevOps&lt;/b&gt;&lt;/summary&gt; Provide GitOps-based CD solutions and use Argo CD to provide the underlying support, collecting CD status information in real time. With the mainstream CI engine Jenkins integrated, DevOps has never been easier. 
 &lt;a href="https://kubesphere.io/docs/v4.1/11-use-extensions/01-devops/01-overview/"&gt;Learn more&lt;/a&gt;. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;üîé Cloud Native Observability&lt;/b&gt;&lt;/summary&gt; Multi-dimensional monitoring, events and auditing logs are supported; multi-tenant log query and collection, alerting and notification are built-in. 
 &lt;a href="https://kubesphere.io/docs/v4.1/11-use-extensions/05-observability-platform/"&gt;Learn more&lt;/a&gt;. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;üåê Service Mesh (Istio-based)&lt;/b&gt;&lt;/summary&gt; Provide fine-grained traffic management, observability and tracing for distributed microservice applications, provides visualization for traffic topology. 
 &lt;a href="https://kubesphere.io/docs/v4.1/11-use-extensions/03-service-mesh/"&gt;Learn more&lt;/a&gt;. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;üíª App Store&lt;/b&gt;&lt;/summary&gt; Provide an App Store for Helm-based applications, and offer application lifecycle management on Kubernetes platform. 
 &lt;a href="https://kubesphere.io/docs/v4.1/11-use-extensions/02-app-store/02-app-management/"&gt;Learn more&lt;/a&gt;. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;üí° Edge Computing Platform&lt;/b&gt;&lt;/summary&gt; KubeSphere integrates 
 &lt;a href="https://kubeedge.io/en/"&gt;KubeEdge&lt;/a&gt; to enable users to deploy applications on the edge devices and view logs and monitoring metrics of them on the console. 
 &lt;a href="https://kubesphere.io/docs/v4.1/11-use-extensions/17-kubeedge/"&gt;Learn more&lt;/a&gt;. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;üóÉ Support Multiple Storage and Networking Solutions&lt;/b&gt;&lt;/summary&gt; 
 &lt;li&gt;Support GlusterFS, CephRBD, NFS, LocalPV solutions, and provide CSI plugins to consume storage from multiple cloud providers.&lt;/li&gt;
 &lt;li&gt;Provide Load Balancer Implementation &lt;a href="https://github.com/kubesphere/openelb"&gt;OpenELB&lt;/a&gt; for Kubernetes in bare-metal, edge, and virtualization.&lt;/li&gt;
 &lt;li&gt; Provides network policy and Pod IP pools management, support Calico, Flannel, Kube-OVN&lt;/li&gt;.. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;üè¢ Multi-Tenancy&lt;/b&gt;&lt;/summary&gt; Isolated workspaces with role-based access control ensure secure resource sharing across multiple tenants. Supports fine-grained permissions and quota management. 
 &lt;a href="https://kubesphere.io/docs/v4.1/08-workspace-management/"&gt;Learn more&lt;/a&gt;. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;üß† GPU Workloads Scheduling and Monitoring&lt;/b&gt;&lt;/summary&gt; Create GPU workloads on the GUI, schedule GPU resources, and manage GPU resource quotas by tenant. 
&lt;/details&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;KubeSphere 4.x adopts a microkernel + extension components architecture (&lt;a href="https://kubesphere.io/docs/v4.1/01-intro/01-introduction/"&gt;codename LuBan&lt;/a&gt;). The core part (KubeSphere Core) only includes the essential basic functions required for system operation, with independent functional modules split and provided in the form of extension components. Users can dynamically manage the extension components during system operation. With the extension capabilities, KubeSphere can support more application scenarios and meet the needs of different users.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kubesphere/kubesphere/master/docs/images/architecture.png" alt="Architecture"&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Latest release&lt;/h2&gt; 
&lt;p&gt;üéâ KubeSphere v4.1.2 was released! It brings enhancements and better user experience, see the &lt;a href="https://kubesphere.io/docs/v4.1/20-release-notes/release-v412/"&gt;Release Notes For 4.1.2&lt;/a&gt; for the updates.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;KubeSphere can run anywhere from on-premise datacenter to any cloud to edge. In addition, it can be deployed on any version-compatible Kubernetes cluster. KubeSphere consumes very few resources, and you can optionally &lt;a href="https://kubesphere.io/docs/v4.1/02-quickstart/03-install-an-extension/"&gt;install additional extensions after installation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Quick start&lt;/h3&gt; 
&lt;h4&gt;Installing on K8s&lt;/h4&gt; 
&lt;p&gt;Run the following commands to install KubeSphere on an existing Kubernetes cluster:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;helm upgrade --install -n kubesphere-system --create-namespace ks-core https://charts.kubesphere.io/main/ks-core-1.1.3.tgz --debug --wait
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;KubeSphere for hosted Kubernetes services&lt;/h3&gt; 
&lt;p&gt;KubeSphere is hosted on the following cloud providers, and you can try KubeSphere by one-click installation on their hosted Kubernetes services.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://aws.amazon.com/quickstart/architecture/qingcloud-kubesphere/"&gt;KubeSphere for Amazon EKS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://market.azure.cn/marketplace/apps/qingcloud.kubesphere"&gt;KubeSphere for Azure AKS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://marketplace.digitalocean.com/apps/kubesphere"&gt;KubeSphere for DigitalOcean Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.qingcloud.com/products/kubesphereqke"&gt;KubeSphere on QingCloud AppCenter(QKE)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also install KubeSphere on other hosted Kubernetes services within minutes, see the &lt;a href="https://kubesphere.io/docs/v4.1/02-quickstart/01-install-kubesphere/"&gt;step-by-step guides&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üë®‚Äçüíª No internet access? Refer to the &lt;a href="https://kubesphere.io/docs/v4.1/03-installation-and-upgrade/02-install-kubesphere/04-offline-installation/"&gt;Air-gapped Installation&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Guidance, discussion, contribution, and support&lt;/h2&gt; 
&lt;p&gt;You can reach the KubeSphere &lt;a href="https://github.com/kubesphere/community"&gt;community&lt;/a&gt; and developers via the following channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://join.slack.com/t/kubesphere/shared_invite/zt-2b4t6rdb4-ico_4UJzCln_S2c1pcrIpQ"&gt;Slack Channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCyTdUQUYjf7XLjxECx63Hpw"&gt;Youtube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/KubeSphere"&gt;X/Twitter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;ü§ó&lt;/span&gt; Please submit any KubeSphere bugs, issues, and feature requests to &lt;a href="https://github.com/kubesphere/kubesphere/issues"&gt;KubeSphere GitHub Issue&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;üíü&lt;/span&gt; The KubeSphere team also provides efficient official ticket support to respond in hours. For more information, click &lt;a href="https://kubesphere.cloud/en/ticket/"&gt;KubeSphere Online Support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubesphere/community/tree/master/developer-guide/development"&gt;KubeSphere Development Guide&lt;/a&gt; explains how to build and develop KubeSphere.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev-guide.kubesphere.io/extension-dev-guide/en/"&gt;KubeSphere Extension Development Guide&lt;/a&gt; explains how to develop KubeSphere extensions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Code of conduct&lt;/h2&gt; 
&lt;p&gt;Participation in the KubeSphere community is governed by the &lt;a href="https://github.com/kubesphere/community/raw/master/code-of-conduct.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;The security process for reporting vulnerabilities is described in &lt;a href="https://raw.githubusercontent.com/kubesphere/kubesphere/master/SECURITY.md"&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Who are using KubeSphere&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://kubesphere.io/case/"&gt;user case studies&lt;/a&gt; page includes the user list of the project. You can &lt;a href="https://github.com/kubesphere/kubesphere/issues/4123"&gt;leave a comment&lt;/a&gt; to let us know your use case.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p align="center"&gt; &lt;br&gt;&lt;br&gt; &lt;img src="https://raw.githubusercontent.com/cncf/artwork/refs/heads/main/other/cncf-landscape/horizontal/color/cncf-landscape-horizontal-color.svg?sanitize=true" width="150"&gt;&amp;nbsp;&amp;nbsp;&lt;img src="https://raw.githubusercontent.com/cncf/artwork/refs/heads/main/other/cncf/horizontal/color/cncf-color.svg?sanitize=true" width="200"&gt;&amp;nbsp;&amp;nbsp; &lt;br&gt;&lt;br&gt; KubeSphere is a member of CNCF and a &lt;a href="https://www.cncf.io/certification/software-conformance/#logos"&gt;Kubernetes Conformance Certified platform &lt;/a&gt;, which enriches the &lt;a href="https://landscape.cncf.io/?landscape=observability-and-analysis&amp;amp;group=certified-partners-and-providers&amp;amp;item=platform--certified-kubernetes-distribution--kubesphere"&gt;CNCF CLOUD NATIVE Landscape. &lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/typescript-go</title>
      <link>https://github.com/microsoft/typescript-go</link>
      <description>&lt;p&gt;Staging repo for development of native port of TypeScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TypeScript 7&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/typescript/typescript-native-port/"&gt;Not sure what this is? Read the announcement post!&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Preview&lt;/h2&gt; 
&lt;p&gt;A preview build is available on npm as &lt;a href="https://www.npmjs.com/package/@typescript/native-preview"&gt;&lt;code&gt;@typescript/native-preview&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install @typescript/native-preview
npx tsgo # Use this as you would tsc.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A preview VS Code extension is &lt;a href="https://marketplace.visualstudio.com/items?itemName=TypeScriptTeam.native-preview"&gt;available on the VS Code marketplace&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To use this, set this in your VS Code settings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
    "typescript.experimental.useTsgo": true
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to Build and Run&lt;/h2&gt; 
&lt;p&gt;This repo uses &lt;a href="https://go.dev/dl/"&gt;Go 1.24 or higher&lt;/a&gt;, &lt;a href="https://www.rust-lang.org/tools/install"&gt;Rust 1.85 or higher&lt;/a&gt;, &lt;a href="https://nodejs.org/"&gt;Node.js with npm&lt;/a&gt;, and &lt;a href="https://www.npmjs.com/package/hereby"&gt;&lt;code&gt;hereby&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For tests and code generation, this repo contains a git submodule to the main TypeScript repo pointing to the commit being ported. When cloning, you'll want to clone with submodules:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone --recurse-submodules https://github.com/microsoft/typescript-go.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have already cloned the repo, you can initialize the submodule with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the submodule in place and &lt;code&gt;npm ci&lt;/code&gt;, you can run tasks via &lt;code&gt;hereby&lt;/code&gt;, similar to the TypeScript repo:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;hereby build          # Verify that the project builds
hereby test           # Run all tests
hereby install-tools  # Install additional tools such as linters
hereby lint           # Run all linters
hereby format         # Format all code
hereby generate       # Generate all Go code (e.g. diagnostics, committed to repo)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Additional tasks are a work in progress.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;hereby&lt;/code&gt; is not required to work on the repo; the regular &lt;code&gt;go&lt;/code&gt; tooling (e.g., &lt;code&gt;go build&lt;/code&gt;, &lt;code&gt;go test ./...&lt;/code&gt;) will work as expected. &lt;code&gt;hereby&lt;/code&gt; tasks are provided as a convenience for those familiar with the TypeScript repo.&lt;/p&gt; 
&lt;h3&gt;Running &lt;code&gt;tsgo&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;After running &lt;code&gt;hereby build&lt;/code&gt;, you can run &lt;code&gt;built/local/tsgo&lt;/code&gt;, which behaves mostly the same as &lt;code&gt;tsc&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Running LSP Prototype&lt;/h3&gt; 
&lt;p&gt;To debug and run the VS Code extension without installing it globally:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run VS Code in the repo workspace (&lt;code&gt;code .&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Copy &lt;code&gt;.vscode/launch.template.json&lt;/code&gt; to &lt;code&gt;.vscode/launch.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;kbd&gt;F5&lt;/kbd&gt; (or &lt;code&gt;Debug: Start Debugging&lt;/code&gt; from the command palette)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This will launch a new VS Code instance which uses the Corsa LS as the backend. If correctly set up, you should see "tsgo" in the status bar when a TypeScript or JavaScript file is open:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/typescript-go/main/.github/ls-screenshot.png" alt="LSP Prototype Screenshot"&gt;&lt;/p&gt; 
&lt;h2&gt;What Works So Far?&lt;/h2&gt; 
&lt;p&gt;This is still a work in progress and is not yet at full feature parity with TypeScript. Bugs may exist. Please check this list carefully before logging a new issue or assuming an intentional change.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Notes&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Program creation&lt;/td&gt; 
   &lt;td&gt;done&lt;/td&gt; 
   &lt;td&gt;Same files and module resolution as TS5.8. Not all resolution modes supported yet.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Parsing/scanning&lt;/td&gt; 
   &lt;td&gt;done&lt;/td&gt; 
   &lt;td&gt;Exact same syntax errors as TS5.8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Commandline and &lt;code&gt;tsconfig.json&lt;/code&gt; parsing&lt;/td&gt; 
   &lt;td&gt;mostly done&lt;/td&gt; 
   &lt;td&gt;Entry point slightly different for now&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Type resolution&lt;/td&gt; 
   &lt;td&gt;done&lt;/td&gt; 
   &lt;td&gt;Same types as TS5.8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Type checking&lt;/td&gt; 
   &lt;td&gt;done&lt;/td&gt; 
   &lt;td&gt;Same errors, locations, and messages as TS5.8. Types printback in errors may display differently (in progress)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;JavaScript-specific inference and JS Doc&lt;/td&gt; 
   &lt;td&gt;not ready&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;JSX&lt;/td&gt; 
   &lt;td&gt;done&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Declaration emit&lt;/td&gt; 
   &lt;td&gt;in progress&lt;/td&gt; 
   &lt;td&gt;Most common features are in place, but some edge cases and feature flags are still unhandled&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Emit (JS output)&lt;/td&gt; 
   &lt;td&gt;in progress&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;target: esnext&lt;/code&gt; well-supported, other targets may have gaps&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Watch mode&lt;/td&gt; 
   &lt;td&gt;prototype&lt;/td&gt; 
   &lt;td&gt;Watches files and rebuilds, but no incremental rechecking&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Build mode / project references&lt;/td&gt; 
   &lt;td&gt;not ready&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Incremental build&lt;/td&gt; 
   &lt;td&gt;not ready&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Language service (LSP)&lt;/td&gt; 
   &lt;td&gt;prototype&lt;/td&gt; 
   &lt;td&gt;Minimal functionality (errors, hover, go to def). More features coming soon&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;API&lt;/td&gt; 
   &lt;td&gt;not ready&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Definitions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;done&lt;/strong&gt; aka "believed done": We're not currently aware of any deficits or major left work to do. OK to log bugs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;in progress&lt;/strong&gt;: currently being worked on; some features may work and some might not. OK to log panics, but nothing else please&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;prototype&lt;/strong&gt;: proof-of-concept only; do not log bugs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;not ready&lt;/strong&gt;: either haven't even started yet, or far enough from ready that you shouldn't bother messing with it yet&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Other Notes&lt;/h2&gt; 
&lt;p&gt;Long-term, we expect that this repo and its contents will be merged into &lt;code&gt;microsoft/TypeScript&lt;/code&gt;. As a result, the repo and issue tracker for typescript-go will eventually be closed, so treat discussions/issues accordingly.&lt;/p&gt; 
&lt;p&gt;For a list of intentional changes with respect to TypeScript 5.7, see CHANGES.md.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href="https://cla.opensource.microsoft.com"&gt;Contributor License Agreements&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href="https://www.microsoft.com/legal/intellectualproperty/trademarks/usage/general"&gt;Microsoft's Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AlexxIT/go2rtc</title>
      <link>https://github.com/AlexxIT/go2rtc</link>
      <description>&lt;p&gt;Ultimate camera streaming application with support RTSP, RTMP, HTTP-FLV, WebRTC, MSE, HLS, MP4, MJPEG, HomeKit, FFmpeg, etc.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/assets/logo.gif" alt="go2rtc"&gt; &lt;br&gt; &lt;a href="https://github.com/AlexxIT/go2rtc/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/AlexxIT/go2rtc?style=flat-square&amp;amp;logo=github" alt="stars"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/alexxit/go2rtc"&gt;&lt;img src="https://img.shields.io/docker/pulls/alexxit/go2rtc?style=flat-square&amp;amp;logo=docker&amp;amp;logoColor=white&amp;amp;label=pulls" alt="docker pulls"&gt;&lt;/a&gt; &lt;a href="https://github.com/AlexxIT/go2rtc/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/AlexxIT/go2rtc/total?color=blue&amp;amp;style=flat-square&amp;amp;logo=github" alt="releases"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/AlexxIT/go2rtc"&gt;&lt;img src="https://goreportcard.com/badge/github.com/AlexxIT/go2rtc" alt="goreport"&gt;&lt;/a&gt;&lt;/p&gt; &lt;/h1&gt; 
&lt;p&gt;Ultimate camera streaming application with support for RTSP, WebRTC, HomeKit, FFmpeg, RTMP, etc.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/assets/go2rtc.png" alt=""&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;zero-dependency and zero-config &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#go2rtc-binary"&gt;small app&lt;/a&gt; for all OS (Windows, macOS, Linux, ARM)&lt;/li&gt; 
 &lt;li&gt;zero-delay for many supported protocols (lowest possible streaming latency)&lt;/li&gt; 
 &lt;li&gt;streaming from &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-rtsp"&gt;RTSP&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-rtmp"&gt;RTMP&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-dvrip"&gt;DVRIP&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-http"&gt;HTTP&lt;/a&gt; (FLV/MJPEG/JPEG/TS), &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ffmpeg-device"&gt;USB Cameras&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-streams"&gt;other sources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;streaming from any sources, supported by &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ffmpeg"&gt;FFmpeg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;streaming to &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-rtsp"&gt;RTSP&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-webrtc"&gt;WebRTC&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-mp4"&gt;MSE/MP4&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-homekit"&gt;HomeKit&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-hls"&gt;HLS&lt;/a&gt; or &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-mjpeg"&gt;MJPEG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#publish-stream"&gt;publish&lt;/a&gt; any source to popular streaming services (YouTube, Telegram, etc.)&lt;/li&gt; 
 &lt;li&gt;first project in the World with support streaming from &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-homekit"&gt;HomeKit Cameras&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;support H265 for WebRTC in browser (Safari only, &lt;a href="https://github.com/AlexxIT/Blog/issues/5"&gt;read more&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;on-the-fly transcoding for unsupported codecs via &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ffmpeg"&gt;FFmpeg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;play audio files and live streams on some cameras with &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#stream-to-camera"&gt;speaker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;multi-source 2-way &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#codecs-negotiation"&gt;codecs negotiation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;mixing tracks from different sources to single stream&lt;/li&gt; 
   &lt;li&gt;auto-match client-supported codecs&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#two-way-audio"&gt;2-way audio&lt;/a&gt; for some cameras&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;streaming from private networks via &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-ngrok"&gt;ngrok&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;can be &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-api"&gt;integrated to&lt;/a&gt; any smart home platform or be used as &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#go2rtc-binary"&gt;standalone app&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Inspired by:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;series of streaming projects from &lt;a href="https://github.com/deepch"&gt;@deepch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pion/webrtc"&gt;webrtc&lt;/a&gt; go library and whole &lt;a href="https://github.com/pion"&gt;@pion&lt;/a&gt; team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aler9/rtsp-simple-server"&gt;rtsp-simple-server&lt;/a&gt; idea from &lt;a href="https://github.com/aler9"&gt;@aler9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gstreamer.freedesktop.org/"&gt;GStreamer&lt;/a&gt; framework pipeline idea&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mediasoup.org/"&gt;MediaSoup&lt;/a&gt; framework routing idea&lt;/li&gt; 
 &lt;li&gt;HomeKit Accessory Protocol from &lt;a href="https://github.com/brutella/hap"&gt;@brutella&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;creator of the project's logo &lt;a href="https://www.instagram.com/v_novoseltsev"&gt;@v_novoseltsev&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#fast-start"&gt;Fast start&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#go2rtc-binary"&gt;go2rtc: Binary&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#go2rtc-docker"&gt;go2rtc: Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#go2rtc-home-assistant-add-on"&gt;go2rtc: Home Assistant Add-on&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#go2rtc-home-assistant-integration"&gt;go2rtc: Home Assistant Integration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#go2rtc-dev-version"&gt;go2rtc: Dev version&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#configuration"&gt;Configuration&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-streams"&gt;Module: Streams&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#two-way-audio"&gt;Two way audio&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-rtsp"&gt;Source: RTSP&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-rtmp"&gt;Source: RTMP&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-http"&gt;Source: HTTP&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-onvif"&gt;Source: ONVIF&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ffmpeg"&gt;Source: FFmpeg&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ffmpeg-device"&gt;Source: FFmpeg Device&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-exec"&gt;Source: Exec&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-echo"&gt;Source: Echo&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-expr"&gt;Source: Expr&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-homekit"&gt;Source: HomeKit&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-bubble"&gt;Source: Bubble&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-dvrip"&gt;Source: DVRIP&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-tapo"&gt;Source: Tapo&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-kasa"&gt;Source: Kasa&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-gopro"&gt;Source: GoPro&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ivideon"&gt;Source: Ivideon&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-hass"&gt;Source: Hass&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-isapi"&gt;Source: ISAPI&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-nest"&gt;Source: Nest&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-roborock"&gt;Source: Roborock&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-webrtc"&gt;Source: WebRTC&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-webtorrent"&gt;Source: WebTorrent&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#incoming-sources"&gt;Incoming sources&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#stream-to-camera"&gt;Stream to camera&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#publish-stream"&gt;Publish stream&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-api"&gt;Module: API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-rtsp"&gt;Module: RTSP&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-rtmp"&gt;Module: RTMP&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-webrtc"&gt;Module: WebRTC&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-homekit"&gt;Module: HomeKit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-webtorrent"&gt;Module: WebTorrent&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-ngrok"&gt;Module: ngrok&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-hass"&gt;Module: Hass&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-mp4"&gt;Module: MP4&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-hls"&gt;Module: HLS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-mjpeg"&gt;Module: MJPEG&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-log"&gt;Module: Log&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#security"&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#codecs-filters"&gt;Codecs filters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#codecs-madness"&gt;Codecs madness&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#codecs-negotiation"&gt;Codecs negotiation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#projects-using-go2rtc"&gt;Projects using go2rtc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#cameras-experience"&gt;Camera experience&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#tips"&gt;TIPS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Fast start&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#go2rtc-binary"&gt;binary&lt;/a&gt; or use &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#go2rtc-docker"&gt;Docker&lt;/a&gt; or Home Assistant &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#go2rtc-home-assistant-add-on"&gt;Add-on&lt;/a&gt; or &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#go2rtc-home-assistant-integration"&gt;Integration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Open web interface: &lt;code&gt;http://localhost:1984/&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Optionally:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;add your &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-streams"&gt;streams&lt;/a&gt; to &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#configuration"&gt;config&lt;/a&gt; file&lt;/li&gt; 
 &lt;li&gt;setup &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-webrtc"&gt;external access&lt;/a&gt; to webrtc&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Developers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;write your own &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-api"&gt;web interface&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;integrate &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-api"&gt;web api&lt;/a&gt; into your smart home platform&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;go2rtc: Binary&lt;/h3&gt; 
&lt;p&gt;Download binary for your OS from &lt;a href="https://github.com/AlexxIT/go2rtc/releases/"&gt;latest release&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;go2rtc_win64.zip&lt;/code&gt; - Windows 10+ 64-bit&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;go2rtc_win32.zip&lt;/code&gt; - Windows 7+ 32-bit&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;go2rtc_win_arm64.zip&lt;/code&gt; - Windows ARM 64-bit&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;go2rtc_linux_amd64&lt;/code&gt; - Linux 64-bit&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;go2rtc_linux_i386&lt;/code&gt; - Linux 32-bit&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;go2rtc_linux_arm64&lt;/code&gt; - Linux ARM 64-bit (ex. Raspberry 64-bit OS)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;go2rtc_linux_arm&lt;/code&gt; - Linux ARM 32-bit (ex. Raspberry 32-bit OS)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;go2rtc_linux_armv6&lt;/code&gt; - Linux ARMv6 (for old Raspberry 1 and Zero)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;go2rtc_linux_mipsel&lt;/code&gt; - Linux MIPS (ex. &lt;a href="https://github.com/AlexxIT/XiaomiGateway3"&gt;Xiaomi Gateway 3&lt;/a&gt;, &lt;a href="https://github.com/gtxaspec/wz_mini_hacks"&gt;Wyze cameras&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;go2rtc_mac_amd64.zip&lt;/code&gt; - macOS 10.13+ Intel 64-bit&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;go2rtc_mac_arm64.zip&lt;/code&gt; - macOS ARM 64-bit&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;go2rtc_freebsd_amd64.zip&lt;/code&gt; - FreeBSD 64-bit&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;go2rtc_freebsd_arm64.zip&lt;/code&gt; - FreeBSD ARM 64-bit&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Don't forget to fix the rights &lt;code&gt;chmod +x go2rtc_xxx_xxx&lt;/code&gt; on Linux and Mac.&lt;/p&gt; 
&lt;h3&gt;go2rtc: Docker&lt;/h3&gt; 
&lt;p&gt;The Docker container &lt;a href="https://hub.docker.com/r/alexxit/go2rtc"&gt;&lt;code&gt;alexxit/go2rtc&lt;/code&gt;&lt;/a&gt; supports multiple architectures including &lt;code&gt;amd64&lt;/code&gt;, &lt;code&gt;386&lt;/code&gt;, &lt;code&gt;arm64&lt;/code&gt;, and &lt;code&gt;arm&lt;/code&gt;. This container offers the same functionality as the &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#go2rtc-home-assistant-add-on"&gt;Home Assistant Add-on&lt;/a&gt; but is designed to operate independently of Home Assistant. It comes preinstalled with &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ffmpeg"&gt;FFmpeg&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-ngrok"&gt;ngrok&lt;/a&gt;, and &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-echo"&gt;Python&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;go2rtc: Home Assistant Add-on&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://my.home-assistant.io/redirect/supervisor_addon/?addon=a889bffc_go2rtc&amp;amp;repository_url=https%3A%2F%2Fgithub.com%2FAlexxIT%2Fhassio-addons"&gt;&lt;img src="https://my.home-assistant.io/badges/supervisor_addon.svg?sanitize=true" alt=""&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Add-On: 
  &lt;ul&gt; 
   &lt;li&gt;Settings &amp;gt; Add-ons &amp;gt; Plus &amp;gt; Repositories &amp;gt; Add &lt;code&gt;https://github.com/AlexxIT/hassio-addons&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;go2rtc &amp;gt; Install &amp;gt; Start&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Setup &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-hass"&gt;Integration&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;go2rtc: Home Assistant Integration&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/AlexxIT/WebRTC"&gt;WebRTC Camera&lt;/a&gt; custom component can be used on any &lt;a href="https://www.home-assistant.io/installation/"&gt;Home Assistant installation&lt;/a&gt;, including &lt;a href="https://github.com/AlexxIT/HassWP"&gt;HassWP&lt;/a&gt; on Windows. It can automatically download and use the latest version of go2rtc. Or it can connect to an existing version of go2rtc. Addon installation in this case is optional.&lt;/p&gt; 
&lt;h3&gt;go2rtc: Dev version&lt;/h3&gt; 
&lt;p&gt;Latest, but maybe unstable version:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Binary: &lt;a href="https://nightly.link/AlexxIT/go2rtc/workflows/build/master"&gt;latest nightly release&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Docker: &lt;code&gt;alexxit/go2rtc:master&lt;/code&gt; or &lt;code&gt;alexxit/go2rtc:master-hardware&lt;/code&gt; versions&lt;/li&gt; 
 &lt;li&gt;Hass Add-on: &lt;code&gt;go2rtc master&lt;/code&gt; or &lt;code&gt;go2rtc master hardware&lt;/code&gt; versions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;by default go2rtc will search &lt;code&gt;go2rtc.yaml&lt;/code&gt; in the current work directory&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;api&lt;/code&gt; server will start on default &lt;strong&gt;1984 port&lt;/strong&gt; (TCP)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rtsp&lt;/code&gt; server will start on default &lt;strong&gt;8554 port&lt;/strong&gt; (TCP)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;webrtc&lt;/code&gt; will use port &lt;strong&gt;8555&lt;/strong&gt; (TCP/UDP) for connections&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ffmpeg&lt;/code&gt; will use default transcoding options&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Configuration options and a complete list of settings can be found in &lt;a href="https://github.com/AlexxIT/go2rtc/wiki/Configuration"&gt;the wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Available modules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-streams"&gt;streams&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-api"&gt;api&lt;/a&gt; - HTTP API (important for WebRTC support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-rtsp"&gt;rtsp&lt;/a&gt; - RTSP Server (important for FFmpeg support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-webrtc"&gt;webrtc&lt;/a&gt; - WebRTC Server&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-mp4"&gt;mp4&lt;/a&gt; - MSE, MP4 stream and MP4 snapshot Server&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-hls"&gt;hls&lt;/a&gt; - HLS TS or fMP4 stream Server&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-mjpeg"&gt;mjpeg&lt;/a&gt; - MJPEG Server&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ffmpeg"&gt;ffmpeg&lt;/a&gt; - FFmpeg integration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-ngrok"&gt;ngrok&lt;/a&gt; - ngrok integration (external access for private network)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-hass"&gt;hass&lt;/a&gt; - Home Assistant integration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-log"&gt;log&lt;/a&gt; - logs config&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Module: Streams&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;go2rtc&lt;/strong&gt; supports different stream source types. You can config one or multiple links of any type as a stream source.&lt;/p&gt; 
&lt;p&gt;Available source types:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-rtsp"&gt;rtsp&lt;/a&gt; - &lt;code&gt;RTSP&lt;/code&gt; and &lt;code&gt;RTSPS&lt;/code&gt; cameras with &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#two-way-audio"&gt;two-way audio&lt;/a&gt; support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-rtmp"&gt;rtmp&lt;/a&gt; - &lt;code&gt;RTMP&lt;/code&gt; streams&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-http"&gt;http&lt;/a&gt; - &lt;code&gt;HTTP-FLV&lt;/code&gt;, &lt;code&gt;MPEG-TS&lt;/code&gt;, &lt;code&gt;JPEG&lt;/code&gt; (snapshots), &lt;code&gt;MJPEG&lt;/code&gt; streams&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-onvif"&gt;onvif&lt;/a&gt; - get camera &lt;code&gt;RTSP&lt;/code&gt; link and snapshot link using &lt;code&gt;ONVIF&lt;/code&gt; protocol&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ffmpeg"&gt;ffmpeg&lt;/a&gt; - FFmpeg integration (&lt;code&gt;HLS&lt;/code&gt;, &lt;code&gt;files&lt;/code&gt; and many others)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ffmpeg-device"&gt;ffmpeg:device&lt;/a&gt; - local USB Camera or Webcam&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-exec"&gt;exec&lt;/a&gt; - get media from external app output&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-echo"&gt;echo&lt;/a&gt; - get stream link from bash or python&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-expr"&gt;expr&lt;/a&gt; - get stream link via built-in expression language&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-homekit"&gt;homekit&lt;/a&gt; - streaming from HomeKit Camera&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-bubble"&gt;bubble&lt;/a&gt; - streaming from ESeeCloud/dvr163 NVR&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-dvrip"&gt;dvrip&lt;/a&gt; - streaming from DVR-IP NVR&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-tapo"&gt;tapo&lt;/a&gt; - TP-Link Tapo cameras with &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#two-way-audio"&gt;two way audio&lt;/a&gt; support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-tapo"&gt;kasa&lt;/a&gt; - TP-Link Kasa cameras&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-gopro"&gt;gopro&lt;/a&gt; - GoPro cameras&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ivideon"&gt;ivideon&lt;/a&gt; - public cameras from &lt;a href="https://tv.ivideon.com/"&gt;Ivideon&lt;/a&gt; service&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-hass"&gt;hass&lt;/a&gt; - Home Assistant integration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-isapi"&gt;isapi&lt;/a&gt; - two-way audio for Hikvision (ISAPI) cameras&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-roborock"&gt;roborock&lt;/a&gt; - Roborock vacuums with cameras&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-webrtc"&gt;webrtc&lt;/a&gt; - WebRTC/WHEP sources&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-webtorrent"&gt;webtorrent&lt;/a&gt; - WebTorrent source from another go2rtc&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Read more about &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#incoming-sources"&gt;incoming sources&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Two-way audio&lt;/h4&gt; 
&lt;p&gt;Supported sources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-rtsp"&gt;RTSP cameras&lt;/a&gt; with &lt;a href="https://www.onvif.org/specs/stream/ONVIF-Streaming-Spec.pdf"&gt;ONVIF Profile T&lt;/a&gt; (back channel connection)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-dvrip"&gt;DVRIP&lt;/a&gt; cameras&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-tapo"&gt;TP-Link Tapo&lt;/a&gt; cameras&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-isapi"&gt;Hikvision ISAPI&lt;/a&gt; cameras&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-roborock"&gt;Roborock vacuums&lt;/a&gt; models with cameras&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-exec"&gt;Exec&lt;/a&gt; audio on server&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#incoming-browser"&gt;Any Browser&lt;/a&gt; as IP-camera&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Two-way audio can be used in browser with &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-webrtc"&gt;WebRTC&lt;/a&gt; technology. The browser will give access to the microphone only for HTTPS sites (&lt;a href="https://stackoverflow.com/questions/52759992/how-to-access-camera-and-microphone-in-chrome-without-https"&gt;read more&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;go2rtc also supports &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#stream-to-camera"&gt;play audio&lt;/a&gt; files and live streams on this cameras.&lt;/p&gt; 
&lt;h4&gt;Source: RTSP&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  sonoff_camera: rtsp://rtsp:12345678@192.168.1.123/av_stream/ch0
  dahua_camera:
    - rtsp://admin:password@192.168.1.123/cam/realmonitor?channel=1&amp;amp;subtype=0&amp;amp;unicast=true&amp;amp;proto=Onvif
    - rtsp://admin:password@192.168.1.123/cam/realmonitor?channel=1&amp;amp;subtype=1#backchannel=0
  amcrest_doorbell:
    - rtsp://username:password@192.168.1.123:554/cam/realmonitor?channel=1&amp;amp;subtype=0#backchannel=0
  unifi_camera: rtspx://192.168.1.123:7441/fD6ouM72bWoFijxK
  glichy_camera: ffmpeg:rtsp://username:password@192.168.1.123/live/ch00_1 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Recommendations&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Amcrest Doorbell&lt;/strong&gt; users may want to disable two-way audio, because with an active stream, you won't have a working call button. You need to add &lt;code&gt;#backchannel=0&lt;/code&gt; to the end of your RTSP link in YAML config file&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dahua Doorbell&lt;/strong&gt; users may want to change &lt;a href="https://github.com/AlexxIT/go2rtc/issues/49#issuecomment-2127107379"&gt;audio codec&lt;/a&gt; for proper 2-way audio. Make sure not to request backchannel multiple times by adding &lt;code&gt;#backchannel=0&lt;/code&gt; to other stream sources of the same doorbell. The &lt;code&gt;unicast=true&amp;amp;proto=Onvif&lt;/code&gt; is preferred for 2-way audio as this makes the doorbell accept multiple codecs for the incoming audio&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reolink&lt;/strong&gt; users may want NOT to use RTSP protocol at all, some camera models have a very awful, unusable stream implementation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ubiquiti UniFi&lt;/strong&gt; users may want to disable HTTPS verification. Use &lt;code&gt;rtspx://&lt;/code&gt; prefix instead of &lt;code&gt;rtsps://&lt;/code&gt;. And don't use &lt;code&gt;?enableSrtp&lt;/code&gt; &lt;a href="https://github.com/AlexxIT/go2rtc/issues/81"&gt;suffix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TP-Link Tapo&lt;/strong&gt; users may skip login and password, because go2rtc support login &lt;a href="https://drmnsamoliu.github.io/video.html"&gt;without them&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;If your camera has two RTSP links, you can add both as sources. This is useful when streams have different codecs, for example AAC audio with main stream and PCMU/PCMA audio with second stream&lt;/li&gt; 
 &lt;li&gt;If the stream from your camera is glitchy, try using &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ffmpeg"&gt;ffmpeg source&lt;/a&gt;. It will not add CPU load if you don't use transcoding&lt;/li&gt; 
 &lt;li&gt;If the stream from your camera is very glitchy, try to use transcoding with &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ffmpeg"&gt;ffmpeg source&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other options&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Format: &lt;code&gt;rtsp...#{param1}#{param2}#{param3}&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add custom timeout &lt;code&gt;#timeout=30&lt;/code&gt; (in seconds)&lt;/li&gt; 
 &lt;li&gt;Ignore audio - &lt;code&gt;#media=video&lt;/code&gt; or ignore video - &lt;code&gt;#media=audio&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Ignore two-way audio API &lt;code&gt;#backchannel=0&lt;/code&gt; - important for some glitchy cameras&lt;/li&gt; 
 &lt;li&gt;Use WebSocket transport &lt;code&gt;#transport=ws...&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;RTSP over WebSocket&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  # WebSocket with authorization, RTSP - without
  axis-rtsp-ws:  rtsp://192.168.1.123:4567/axis-media/media.amp?overview=0&amp;amp;camera=1&amp;amp;resolution=1280x720&amp;amp;videoframeskipmode=empty&amp;amp;Axis-Orig-Sw=true#transport=ws://user:pass@192.168.1.123:4567/rtsp-over-websocket
  # WebSocket without authorization, RTSP - with
  dahua-rtsp-ws: rtsp://user:pass@192.168.1.123/cam/realmonitor?channel=1&amp;amp;subtype=1&amp;amp;proto=Private3#transport=ws://192.168.1.123/rtspoverwebsocket
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Source: RTMP&lt;/h4&gt; 
&lt;p&gt;You can get a stream from an RTMP server, for example &lt;a href="https://github.com/arut/nginx-rtmp-module"&gt;Nginx with nginx-rtmp-module&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  rtmp_stream: rtmp://192.168.1.123/live/camera1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Source: HTTP&lt;/h4&gt; 
&lt;p&gt;Support Content-Type:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP-FLV&lt;/strong&gt; (&lt;code&gt;video/x-flv&lt;/code&gt;) - same as RTMP, but over HTTP&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP-JPEG&lt;/strong&gt; (&lt;code&gt;image/jpeg&lt;/code&gt;) - camera snapshot link, can be converted by go2rtc to MJPEG stream&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP-MJPEG&lt;/strong&gt; (&lt;code&gt;multipart/x&lt;/code&gt;) - simple MJPEG stream over HTTP&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MPEG-TS&lt;/strong&gt; (&lt;code&gt;video/mpeg&lt;/code&gt;) - legacy &lt;a href="https://en.wikipedia.org/wiki/MPEG_transport_stream"&gt;streaming format&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Source also supports HTTP and TCP streams with autodetection for different formats: &lt;strong&gt;MJPEG&lt;/strong&gt;, &lt;strong&gt;H.264/H.265 bitstream&lt;/strong&gt;, &lt;strong&gt;MPEG-TS&lt;/strong&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  # [HTTP-FLV] stream in video/x-flv format
  http_flv: http://192.168.1.123:20880/api/camera/stream/780900131155/657617
  
  # [JPEG] snapshots from Dahua camera, will be converted to MJPEG stream
  dahua_snap: http://admin:password@192.168.1.123/cgi-bin/snapshot.cgi?channel=1

  # [MJPEG] stream will be proxied without modification
  http_mjpeg: https://mjpeg.sanford.io/count.mjpeg

  # [MJPEG or H.264/H.265 bitstream or MPEG-TS]
  tcp_magic: tcp://192.168.1.123:12345

  # Add custom header
  custom_header: "https://mjpeg.sanford.io/count.mjpeg#header=Authorization: Bearer XXX"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;PS.&lt;/strong&gt; Dahua camera has a bug: if you select MJPEG codec for RTSP second stream, snapshot won't work.&lt;/p&gt; 
&lt;h4&gt;Source: ONVIF&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.5.0"&gt;New in v1.5.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;The source is not very useful if you already know RTSP and snapshot links for your camera. But it can be useful if you don't.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WebUI &amp;gt; Add&lt;/strong&gt; webpage support ONVIF autodiscovery. Your server must be on the same subnet as the camera. If you use Docker, you must use "network host".&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  dahua1: onvif://admin:password@192.168.1.123
  reolink1: onvif://admin:password@192.168.1.123:8000
  tapo1: onvif://admin:password@192.168.1.123:2020
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Source: FFmpeg&lt;/h4&gt; 
&lt;p&gt;You can get any stream, file or device via FFmpeg and push it to go2rtc. The app will automatically start FFmpeg with the proper arguments when someone starts watching the stream.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;FFmpeg preistalled for &lt;strong&gt;Docker&lt;/strong&gt; and &lt;strong&gt;Hass Add-on&lt;/strong&gt; users&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hass Add-on&lt;/strong&gt; users can target files from &lt;a href="https://www.home-assistant.io/more-info/local-media/setup-media/"&gt;/media&lt;/a&gt; folder&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Format: &lt;code&gt;ffmpeg:{input}#{param1}#{param2}#{param3}&lt;/code&gt;. Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  # [FILE] all tracks will be copied without transcoding codecs
  file1: ffmpeg:/media/BigBuckBunny.mp4

  # [FILE] video will be transcoded to H264, audio will be skipped
  file2: ffmpeg:/media/BigBuckBunny.mp4#video=h264

  # [FILE] video will be copied, audio will be transcoded to PCMU
  file3: ffmpeg:/media/BigBuckBunny.mp4#video=copy#audio=pcmu

  # [HLS] video will be copied, audio will be skipped
  hls: ffmpeg:https://devstreaming-cdn.apple.com/videos/streaming/examples/bipbop_16x9/gear5/prog_index.m3u8#video=copy

  # [MJPEG] video will be transcoded to H264
  mjpeg: ffmpeg:http://185.97.122.128/cgi-bin/faststream.jpg#video=h264

  # [RTSP] video with rotation, should be transcoded, so select H264
  rotate: ffmpeg:rtsp://12345678@192.168.1.123/av_stream/ch0#video=h264#rotate=90
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All transcoding formats have &lt;a href="https://github.com/AlexxIT/go2rtc/raw/master/internal/ffmpeg/ffmpeg.go"&gt;built-in templates&lt;/a&gt;: &lt;code&gt;h264&lt;/code&gt;, &lt;code&gt;h265&lt;/code&gt;, &lt;code&gt;opus&lt;/code&gt;, &lt;code&gt;pcmu&lt;/code&gt;, &lt;code&gt;pcmu/16000&lt;/code&gt;, &lt;code&gt;pcmu/48000&lt;/code&gt;, &lt;code&gt;pcma&lt;/code&gt;, &lt;code&gt;pcma/16000&lt;/code&gt;, &lt;code&gt;pcma/48000&lt;/code&gt;, &lt;code&gt;aac&lt;/code&gt;, &lt;code&gt;aac/16000&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;But you can override them via YAML config. You can also add your own formats to the config and use them with source params.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;ffmpeg:
  bin: ffmpeg  # path to ffmpeg binary
  h264: "-codec:v libx264 -g:v 30 -preset:v superfast -tune:v zerolatency -profile:v main -level:v 4.1"
  mycodec: "-any args that supported by ffmpeg..."
  myinput: "-fflags nobuffer -flags low_delay -timeout 5000000 -i {input}"
  myraw: "-ss 00:00:20"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can use go2rtc stream name as ffmpeg input (ex. &lt;code&gt;ffmpeg:camera1#video=h264&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;You can use &lt;code&gt;video&lt;/code&gt; and &lt;code&gt;audio&lt;/code&gt; params multiple times (ex. &lt;code&gt;#video=copy#audio=copy#audio=pcmu&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;You can use &lt;code&gt;rotate&lt;/code&gt; param with &lt;code&gt;90&lt;/code&gt;, &lt;code&gt;180&lt;/code&gt;, &lt;code&gt;270&lt;/code&gt; or &lt;code&gt;-90&lt;/code&gt; values, important with transcoding (ex. &lt;code&gt;#video=h264#rotate=90&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;You can use &lt;code&gt;width&lt;/code&gt; and/or &lt;code&gt;height&lt;/code&gt; params, important with transcoding (ex. &lt;code&gt;#video=h264#width=1280&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;You can use &lt;code&gt;drawtext&lt;/code&gt; to add a timestamp (ex. &lt;code&gt;drawtext=x=2:y=2:fontsize=12:fontcolor=white:box=1:boxcolor=black&lt;/code&gt;) 
  &lt;ul&gt; 
   &lt;li&gt;This will greatly increase the CPU of the server, even with hardware acceleration&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;You can use &lt;code&gt;raw&lt;/code&gt; param for any additional FFmpeg arguments (ex. &lt;code&gt;#raw=-vf transpose=1&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;You can use &lt;code&gt;input&lt;/code&gt; param to override default input template (ex. &lt;code&gt;#input=rtsp/udp&lt;/code&gt; will change RTSP transport from TCP to UDP+TCP) 
  &lt;ul&gt; 
   &lt;li&gt;You can use raw input value (ex. &lt;code&gt;#input=-timeout 5000000 -i {input}&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;You can add your own input templates&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Read more about &lt;a href="https://github.com/AlexxIT/go2rtc/wiki/Hardware-acceleration"&gt;hardware acceleration&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;PS.&lt;/strong&gt; It is recommended to check the available hardware in the WebUI add page.&lt;/p&gt; 
&lt;h4&gt;Source: FFmpeg Device&lt;/h4&gt; 
&lt;p&gt;You can get video from any USB camera or Webcam as RTSP or WebRTC stream. This is part of FFmpeg integration.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;check available devices in web interface&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;video_size&lt;/code&gt; and &lt;code&gt;framerate&lt;/code&gt; must be supported by your camera!&lt;/li&gt; 
 &lt;li&gt;for Linux supported only video for now&lt;/li&gt; 
 &lt;li&gt;for macOS you can stream FaceTime camera or whole desktop!&lt;/li&gt; 
 &lt;li&gt;for macOS important to set right framerate&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Format: &lt;code&gt;ffmpeg:device?{input-params}#{param1}#{param2}#{param3}&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  linux_usbcam:   ffmpeg:device?video=0&amp;amp;video_size=1280x720#video=h264
  windows_webcam: ffmpeg:device?video=0#video=h264
  macos_facetime: ffmpeg:device?video=0&amp;amp;audio=1&amp;amp;video_size=1280x720&amp;amp;framerate=30#video=h264#audio=pcma
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;PS.&lt;/strong&gt; It is recommended to check the available devices in the WebUI add page.&lt;/p&gt; 
&lt;h4&gt;Source: Exec&lt;/h4&gt; 
&lt;p&gt;Exec source can run any external application and expect data from it. Two transports are supported - &lt;strong&gt;pipe&lt;/strong&gt; (&lt;em&gt;from &lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.5.0"&gt;v1.5.0&lt;/a&gt;&lt;/em&gt;) and &lt;strong&gt;RTSP&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to use &lt;strong&gt;RTSP&lt;/strong&gt; transport, the command must contain the &lt;code&gt;{output}&lt;/code&gt; argument in any place. On launch, it will be replaced by the local address of the RTSP server.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;pipe&lt;/strong&gt; reads data from app stdout in different formats: &lt;strong&gt;MJPEG&lt;/strong&gt;, &lt;strong&gt;H.264/H.265 bitstream&lt;/strong&gt;, &lt;strong&gt;MPEG-TS&lt;/strong&gt;. Also pipe can write data to app stdin in two formats: &lt;strong&gt;PCMA&lt;/strong&gt; and &lt;strong&gt;PCM/48000&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;The source can be used with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://ffmpeg.org/"&gt;FFmpeg&lt;/a&gt; - go2rtc ffmpeg source just a shortcut to exec source&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ffmpeg.org/ffplay.html"&gt;FFplay&lt;/a&gt; - play audio on your server&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gstreamer.freedesktop.org/"&gt;GStreamer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.raspberrypi.com/documentation/computers/camera_software.html"&gt;Raspberry Pi Cameras&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;any of your own software&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Pipe commands support parameters (format: &lt;code&gt;exec:{command}#{param1}#{param2}&lt;/code&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;killsignal&lt;/code&gt; - signal which will be sent to stop the process (numeric form)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;killtimeout&lt;/code&gt; - time in seconds for forced termination with sigkill&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;backchannel&lt;/code&gt; - enable backchannel for two-way audio&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  stream: exec:ffmpeg -re -i /media/BigBuckBunny.mp4 -c copy -rtsp_transport tcp -f rtsp {output}
  picam_h264: exec:libcamera-vid -t 0 --inline -o -
  picam_mjpeg: exec:libcamera-vid -t 0 --codec mjpeg -o -
  pi5cam_h264: exec:libcamera-vid -t 0 --libav-format h264 -o -
  canon: exec:gphoto2 --capture-movie --stdout#killsignal=2#killtimeout=5
  play_pcma: exec:ffplay -fflags nobuffer -f alaw -ar 8000 -i -#backchannel=1
  play_pcm48k: exec:ffplay -fflags nobuffer -f s16be -ar 48000 -i -#backchannel=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Source: Echo&lt;/h4&gt; 
&lt;p&gt;Some sources may have a dynamic link. And you will need to get it using a Bash or Python script. Your script should echo a link to the source. RTSP, FFmpeg or any of the &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-streams"&gt;supported sources&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt; and &lt;strong&gt;Hass Add-on&lt;/strong&gt; users has preinstalled &lt;code&gt;python3&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;jq&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Check examples in &lt;a href="https://github.com/AlexxIT/go2rtc/wiki/Source-Echo-examples"&gt;wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  apple_hls: echo:python3 hls.py https://developer.apple.com/streaming/examples/basic-stream-osx-ios5.html
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Source: Expr&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.8.2"&gt;New in v1.8.2&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Like &lt;code&gt;echo&lt;/code&gt; source, but uses the built-in &lt;a href="https://github.com/antonmedv/expr"&gt;expr&lt;/a&gt; expression language (&lt;a href="https://github.com/AlexxIT/go2rtc/raw/master/internal/expr/README.md"&gt;read more&lt;/a&gt;).&lt;/p&gt; 
&lt;h4&gt;Source: HomeKit&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can use HomeKit Cameras &lt;strong&gt;without Apple devices&lt;/strong&gt; (iPhone, iPad, etc.), it's just a yet another protocol&lt;/li&gt; 
 &lt;li&gt;HomeKit device can be paired with only one ecosystem. So, if you have paired it to an iPhone (Apple Home), you can't pair it with Home Assistant or go2rtc. Or if you have paired it to go2rtc, you can't pair it with an iPhone&lt;/li&gt; 
 &lt;li&gt;HomeKit device should be on the same network with working &lt;a href="https://en.wikipedia.org/wiki/Multicast_DNS"&gt;mDNS&lt;/a&gt; between the device and go2rtc&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;go2rtc supports importing paired HomeKit devices from &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-hass"&gt;Home Assistant&lt;/a&gt;. So you can use HomeKit camera with Hass and go2rtc simultaneously. If you are using Hass, I recommend pairing devices with it; it will give you more options.&lt;/p&gt; 
&lt;p&gt;You can pair device with go2rtc on the HomeKit page. If you can't see your devices, reload the page. Also, try rebooting your HomeKit device (power off). If you still can't see it, you have a problem with mDNS.&lt;/p&gt; 
&lt;p&gt;If you see a device but it does not have a pairing button, it is paired to some ecosystem (Apple Home, Home Assistant, HomeBridge etc). You need to delete the device from that ecosystem, and it will be available for pairing. If you cannot unpair the device, you will have to reset it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;HomeKit audio uses very non-standard &lt;strong&gt;AAC-ELD&lt;/strong&gt; codec with very non-standard params and specification violations&lt;/li&gt; 
 &lt;li&gt;Audio can't be played in &lt;code&gt;VLC&lt;/code&gt; and probably any other player&lt;/li&gt; 
 &lt;li&gt;Audio should be transcoded for use with MSE, WebRTC, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Recommended settings for using HomeKit Camera with WebRTC, MSE, MP4, RTSP:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;streams:
  aqara_g3:
    - hass:Camera-Hub-G3-AB12
    - ffmpeg:aqara_g3#audio=aac#audio=opus
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;RTSP link with "normal" audio for any player: &lt;code&gt;rtsp://192.168.1.123:8554/aqara_g3?video&amp;amp;audio=aac&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This source is in active development!&lt;/strong&gt; Tested only with &lt;a href="https://www.aqara.com/eu/product/camera-hub-g3"&gt;Aqara Camera Hub G3&lt;/a&gt; (both EU and CN versions).&lt;/p&gt; 
&lt;h4&gt;Source: Bubble&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.6.1"&gt;New in v1.6.1&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Other names: &lt;a href="http://www.eseecloud.com/"&gt;ESeeCloud&lt;/a&gt;, &lt;a href="http://help.dvr163.com/"&gt;dvr163&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;you can skip &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;ch&lt;/code&gt; and &lt;code&gt;stream&lt;/code&gt; if they are default&lt;/li&gt; 
 &lt;li&gt;set up separate streams for different channels and streams&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  camera1: bubble://username:password@192.168.1.123:34567/bubble/live?ch=0&amp;amp;stream=0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Source: DVRIP&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.2.0"&gt;New in v1.2.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Other names: DVR-IP, NetSurveillance, Sofia protocol (NETsurveillance ActiveX plugin XMeye SDK).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;you can skip &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;channel&lt;/code&gt; and &lt;code&gt;subtype&lt;/code&gt; if they are default&lt;/li&gt; 
 &lt;li&gt;set up separate streams for different channels&lt;/li&gt; 
 &lt;li&gt;use &lt;code&gt;subtype=0&lt;/code&gt; for Main stream, and &lt;code&gt;subtype=1&lt;/code&gt; for Extra1 stream&lt;/li&gt; 
 &lt;li&gt;only the TCP protocol is supported&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  only_stream: dvrip://username:password@192.168.1.123:34567?channel=0&amp;amp;subtype=0
  only_tts: dvrip://username:password@192.168.1.123:34567?backchannel=1
  two_way_audio:
    - dvrip://username:password@192.168.1.123:34567?channel=0&amp;amp;subtype=0
    - dvrip://username:password@192.168.1.123:34567?backchannel=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Source: Tapo&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.2.0"&gt;New in v1.2.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.tapo.com/"&gt;TP-Link Tapo&lt;/a&gt; proprietary camera protocol with &lt;strong&gt;two way audio&lt;/strong&gt; support.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;stream quality is the same as &lt;a href="https://www.tapo.com/en/faq/34/"&gt;RTSP protocol&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;use the &lt;strong&gt;cloud password&lt;/strong&gt;, this is not the RTSP password! you do not need to add a login!&lt;/li&gt; 
 &lt;li&gt;you can also use UPPERCASE MD5 hash from your cloud password with &lt;code&gt;admin&lt;/code&gt; username&lt;/li&gt; 
 &lt;li&gt;some new camera firmwares require SHA256 instead of MD5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  # cloud password without username
  camera1: tapo://cloud-password@192.168.1.123
  # admin username and UPPERCASE MD5 cloud-password hash
  camera2: tapo://admin:UPPERCASE-MD5@192.168.1.123
  # admin username and UPPERCASE SHA256 cloud-password hash
  camera3: tapo://admin:UPPERCASE-SHA256@192.168.1.123
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;echo -n "cloud password" | md5 | awk '{print toupper($0)}'
echo -n "cloud password" | shasum -a 256 | awk '{print toupper($0)}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Source: Kasa&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.7.0"&gt;New in v1.7.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.kasasmart.com/"&gt;TP-Link Kasa&lt;/a&gt; non-standard protocol &lt;a href="https://medium.com/@hu3vjeen/reverse-engineering-tp-link-kc100-bac4641bf1cd"&gt;more info&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;username&lt;/code&gt; - urlsafe email, &lt;code&gt;alex@gmail.com&lt;/code&gt; -&amp;gt; &lt;code&gt;alex%40gmail.com&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;password&lt;/code&gt; - base64password, &lt;code&gt;secret1&lt;/code&gt; -&amp;gt; &lt;code&gt;c2VjcmV0MQ==&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  kc401: kasa://username:password@192.168.1.123:19443/https/stream/mixed
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Tested: KD110, KC200, KC401, KC420WS, EC71.&lt;/p&gt; 
&lt;h4&gt;Source: GoPro&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.8.3"&gt;New in v1.8.3&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Support streaming from &lt;a href="https://gopro.com/"&gt;GoPro&lt;/a&gt; cameras, connected via USB or Wi-Fi to Linux, Mac, Windows. &lt;a href="https://github.com/AlexxIT/go2rtc/tree/master/internal/gopro"&gt;Read more&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Source: Ivideon&lt;/h4&gt; 
&lt;p&gt;Support public cameras from the service &lt;a href="https://tv.ivideon.com/"&gt;Ivideon&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  quailcam: ivideon:100-tu5dkUPct39cTp9oNEN2B6/0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Source: Hass&lt;/h4&gt; 
&lt;p&gt;Support import camera links from &lt;a href="https://www.home-assistant.io/"&gt;Home Assistant&lt;/a&gt; config files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.home-assistant.io/integrations/generic/"&gt;Generic Camera&lt;/a&gt;, setup via GUI&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.home-assistant.io/integrations/homekit_controller/"&gt;HomeKit Camera&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.home-assistant.io/integrations/onvif/"&gt;ONVIF&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humbertogontijo/homeassistant-roborock"&gt;Roborock&lt;/a&gt; vacuums with camera&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;hass:
  config: "/config"  # skip this setting if you Hass add-on user

streams:
  generic_camera: hass:Camera1  # Settings &amp;gt; Integrations &amp;gt; Integration Name
  aqara_g3: hass:Camera-Hub-G3-AB12
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;WebRTC Cameras&lt;/strong&gt; (&lt;em&gt;from &lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.6.0"&gt;v1.6.0&lt;/a&gt;&lt;/em&gt;)&lt;/p&gt; 
&lt;p&gt;Any cameras in WebRTC format are supported. But at the moment Home Assistant only supports some &lt;a href="https://www.home-assistant.io/integrations/nest/"&gt;Nest&lt;/a&gt; cameras in this format.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Important.&lt;/strong&gt; The Nest API only allows you to get a link to a stream for 5 minutes. Do not use this with Frigate! If the stream expires, Frigate will consume all available RAM on your machine within seconds. It's recommended to use &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-nest"&gt;Nest source&lt;/a&gt; - it supports extending the stream.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  # link to Home Assistant Supervised
  hass-webrtc1: hass://supervisor?entity_id=camera.nest_doorbell
  # link to external Hass with Long-Lived Access Tokens
  hass-webrtc2: hass://192.168.1.123:8123?entity_id=camera.nest_doorbell&amp;amp;token=eyXYZ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;RTSP Cameras&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;By default, the Home Assistant API does not allow you to get a dynamic RTSP link to a camera stream. So more cameras, like &lt;a href="https://www.home-assistant.io/integrations/tuya/"&gt;Tuya&lt;/a&gt;, and possibly others, can also be imported using &lt;a href="https://github.com/felipecrs/hass-expose-camera-stream-source#importing-home-assistant-cameras-to-go2rtc-andor-frigate"&gt;this method&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Source: ISAPI&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.3.0"&gt;New in v1.3.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;This source type supports only backchannel audio for the Hikvision ISAPI protocol. So it should be used as a second source in addition to the RTSP protocol.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  hikvision1:
    - rtsp://admin:password@192.168.1.123:554/Streaming/Channels/101
    - isapi://admin:password@192.168.1.123:80/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Source: Nest&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.6.0"&gt;New in v1.6.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Currently, only WebRTC cameras are supported.&lt;/p&gt; 
&lt;p&gt;For simplicity, it is recommended to connect the Nest/WebRTC camera to the &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-hass"&gt;Home Assistant&lt;/a&gt;. But if you can somehow get the below parameters, Nest/WebRTC source will work without Hass.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  nest-doorbell: nest:?client_id=***&amp;amp;client_secret=***&amp;amp;refresh_token=***&amp;amp;project_id=***&amp;amp;device_id=***
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Source: Roborock&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.3.0"&gt;New in v1.3.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;This source type supports Roborock vacuums with cameras. Known working models:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Roborock S6 MaxV - only video (the vacuum has no microphone)&lt;/li&gt; 
 &lt;li&gt;Roborock S7 MaxV - video and two-way audio&lt;/li&gt; 
 &lt;li&gt;Roborock Qrevo MaxV - video and two-way audio&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Source supports loading Roborock credentials from Home Assistant &lt;a href="https://github.com/humbertogontijo/homeassistant-roborock"&gt;custom integration&lt;/a&gt; or the &lt;a href="https://www.home-assistant.io/integrations/roborock"&gt;core integration&lt;/a&gt;. Otherwise, you need to log in to your Roborock account (MiHome account is not supported). Go to: go2rtc WebUI &amp;gt; Add webpage. Copy &lt;code&gt;roborock://...&lt;/code&gt; source for your vacuum and paste it to &lt;code&gt;go2rtc.yaml&lt;/code&gt; config.&lt;/p&gt; 
&lt;p&gt;If you have a graphic PIN for your vacuum, add it as a numeric PIN (lines: 123, 456, 789) to the end of the &lt;code&gt;roborock&lt;/code&gt; link.&lt;/p&gt; 
&lt;h4&gt;Source: WebRTC&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.3.0"&gt;New in v1.3.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;This source type supports four connection formats.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;whep&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://datatracker.ietf.org/doc/draft-murillo-whep/"&gt;WebRTC/WHEP&lt;/a&gt; is replaced by &lt;a href="https://datatracker.ietf.org/doc/charter-ietf-wish/02/"&gt;WebRTC/WISH&lt;/a&gt; standard for WebRTC video/audio viewers. But it may already be supported in some third-party software. It is supported in go2rtc.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;go2rtc&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This format is only supported in go2rtc. Unlike WHEP, it supports asynchronous WebRTC connections and two-way audio.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;openipc&lt;/strong&gt; (&lt;em&gt;from &lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.7.0"&gt;v1.7.0&lt;/a&gt;&lt;/em&gt;)&lt;/p&gt; 
&lt;p&gt;Support connection to &lt;a href="https://openipc.org/"&gt;OpenIPC&lt;/a&gt; cameras.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;wyze&lt;/strong&gt; (&lt;em&gt;from &lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.6.1"&gt;v1.6.1&lt;/a&gt;&lt;/em&gt;)&lt;/p&gt; 
&lt;p&gt;Supports connection to &lt;a href="https://www.wyze.com/"&gt;Wyze&lt;/a&gt; cameras, using WebRTC protocol. You can use the &lt;a href="https://github.com/mrlt8/docker-wyze-bridge"&gt;docker-wyze-bridge&lt;/a&gt; project to get connection credentials.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;kinesis&lt;/strong&gt; (&lt;em&gt;from &lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.6.1"&gt;v1.6.1&lt;/a&gt;&lt;/em&gt;)&lt;/p&gt; 
&lt;p&gt;Supports &lt;a href="https://aws.amazon.com/kinesis/video-streams/"&gt;Amazon Kinesis Video Streams&lt;/a&gt;, using WebRTC protocol. You need to specify the signalling WebSocket URL with all credentials in query params, &lt;code&gt;client_id&lt;/code&gt; and &lt;code&gt;ice_servers&lt;/code&gt; list in &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer"&gt;JSON format&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;switchbot&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Support connection to &lt;a href="https://us.switch-bot.com/"&gt;SwitchBot&lt;/a&gt; cameras that are based on Kinesis Video Streams. Specifically, this includes &lt;a href="https://us.switch-bot.com/pages/switchbot-pan-tilt-cam-plus-2k"&gt;Pan/Tilt Cam Plus 2K&lt;/a&gt; and &lt;a href="https://us.switch-bot.com/pages/switchbot-pan-tilt-cam-plus-3k"&gt;Pan/Tilt Cam Plus 3K&lt;/a&gt;. &lt;code&gt;Outdoor Spotlight Cam 1080P&lt;/code&gt;, &lt;code&gt;Outdoor Spotlight Cam 2K&lt;/code&gt;, &lt;code&gt;Pan/Tilt Cam&lt;/code&gt;, &lt;code&gt;Pan/Tilt Cam 2K&lt;/code&gt;, &lt;code&gt;Indoor Cam&lt;/code&gt; are based on Tuya, so this feature is not available.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  webrtc-whep:      webrtc:http://192.168.1.123:1984/api/webrtc?src=camera1
  webrtc-go2rtc:    webrtc:ws://192.168.1.123:1984/api/ws?src=camera1
  webrtc-openipc:   webrtc:ws://192.168.1.123/webrtc_ws#format=openipc#ice_servers=[{"urls":"stun:stun.kinesisvideo.eu-north-1.amazonaws.com:443"}]
  webrtc-wyze:      webrtc:http://192.168.1.123:5000/signaling/camera1?kvs#format=wyze
  webrtc-kinesis:   webrtc:wss://...amazonaws.com/?...#format=kinesis#client_id=...#ice_servers=[{...},{...}]
  webrtc-switchbot: webrtc:wss://...amazonaws.com/?...#format=switchbot#resolution=hd#client_id=...#ice_servers=[{...},{...}]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;PS.&lt;/strong&gt; For &lt;code&gt;kinesis&lt;/code&gt; sources, you can use &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-echo"&gt;echo&lt;/a&gt; to get connection params using &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;python&lt;/code&gt; or any other script language.&lt;/p&gt; 
&lt;h4&gt;Source: WebTorrent&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.3.0"&gt;New in v1.3.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;This source can get a stream from another go2rtc via &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-webtorrent"&gt;WebTorrent&lt;/a&gt; protocol.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  webtorrent1: webtorrent:?share=huofssuxaty00izc&amp;amp;pwd=k3l2j9djeg8v8r7e
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Incoming sources&lt;/h4&gt; 
&lt;p&gt;By default, go2rtc establishes a connection to the source when any client requests it. Go2rtc drops the connection to the source when it has no clients left.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go2rtc also can accepts incoming sources in &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-rtsp"&gt;RTSP&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-rtmp"&gt;RTMP&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-http"&gt;HTTP&lt;/a&gt; and &lt;strong&gt;WebRTC/WHIP&lt;/strong&gt; formats&lt;/li&gt; 
 &lt;li&gt;Go2rtc won't stop such a source if it has no clients&lt;/li&gt; 
 &lt;li&gt;You can push data only to an existing stream (create a stream with empty source in config)&lt;/li&gt; 
 &lt;li&gt;You can push multiple incoming sources to the same stream&lt;/li&gt; 
 &lt;li&gt;You can push data to a non-empty stream, so it will have additional codecs inside&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;RTSP with any codec &lt;pre&gt;&lt;code class="language-yaml"&gt;ffmpeg -re -i BigBuckBunny.mp4 -c copy -rtsp_transport tcp -f rtsp rtsp://localhost:8554/camera1
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;HTTP-MJPEG with MJPEG codec &lt;pre&gt;&lt;code class="language-yaml"&gt;ffmpeg -re -i BigBuckBunny.mp4 -c mjpeg -f mpjpeg http://localhost:1984/api/stream.mjpeg?dst=camera1
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;HTTP-FLV with H264, AAC codecs &lt;pre&gt;&lt;code class="language-yaml"&gt;ffmpeg -re -i BigBuckBunny.mp4 -c copy -f flv http://localhost:1984/api/stream.flv?dst=camera1
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;MPEG-TS with H264 codec &lt;pre&gt;&lt;code class="language-yaml"&gt;ffmpeg -re -i BigBuckBunny.mp4 -c copy -f mpegts http://localhost:1984/api/stream.ts?dst=camera1
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Incoming: Browser&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.3.0"&gt;New in v1.3.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;You can turn the browser of any PC or mobile into an IP camera with support for video and two-way audio. Or even broadcast your PC screen:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create empty stream in the &lt;code&gt;go2rtc.yaml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Go to go2rtc WebUI&lt;/li&gt; 
 &lt;li&gt;Open &lt;code&gt;links&lt;/code&gt; page for your stream&lt;/li&gt; 
 &lt;li&gt;Select &lt;code&gt;camera+microphone&lt;/code&gt; or &lt;code&gt;display+speaker&lt;/code&gt; option&lt;/li&gt; 
 &lt;li&gt;Open &lt;code&gt;webrtc&lt;/code&gt; local page (your go2rtc &lt;strong&gt;should work over HTTPS!&lt;/strong&gt;) or &lt;code&gt;share link&lt;/code&gt; via &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-webtorrent"&gt;WebTorrent&lt;/a&gt; technology (work over HTTPS by default)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Incoming: WebRTC/WHIP&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.3.0"&gt;New in v1.3.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;You can use &lt;strong&gt;OBS Studio&lt;/strong&gt; or any other broadcast software with &lt;a href="https://www.ietf.org/archive/id/draft-ietf-wish-whip-01.html"&gt;WHIP&lt;/a&gt; protocol support. This standard has not yet been approved. But you can download OBS Studio &lt;a href="https://github.com/obsproject/obs-studio/actions/runs/3969201209"&gt;dev version&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Settings &amp;gt; Stream &amp;gt; Service: WHIP &amp;gt; &lt;a href="http://192.168.1.123:1984/api/webrtc?dst=camera1"&gt;http://192.168.1.123:1984/api/webrtc?dst=camera1&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Stream to camera&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.3.0"&gt;New in v1.3.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;go2rtc supports playing audio files (ex. music or &lt;a href="https://www.home-assistant.io/integrations/#text-to-speech"&gt;TTS&lt;/a&gt;) and live streams (ex. radio) on cameras with &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#two-way-audio"&gt;two-way audio&lt;/a&gt; support (RTSP/ONVIF cameras, TP-Link Tapo, Hikvision ISAPI, Roborock vacuums, any Browser).&lt;/p&gt; 
&lt;p&gt;API example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;POST http://localhost:1984/api/streams?dst=camera1&amp;amp;src=ffmpeg:http://example.com/song.mp3#audio=pcma#input=file
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;you can stream: local files, web files, live streams or any format, supported by FFmpeg&lt;/li&gt; 
 &lt;li&gt;you should use &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ffmpeg"&gt;ffmpeg source&lt;/a&gt; for transcoding audio to codec, that your camera supports&lt;/li&gt; 
 &lt;li&gt;you can check camera codecs on the go2rtc WebUI info page when the stream is active&lt;/li&gt; 
 &lt;li&gt;some cameras support only low quality &lt;code&gt;PCMA/8000&lt;/code&gt; codec (ex. &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-tapo"&gt;Tapo&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;it is recommended to choose higher quality formats if your camera supports them (ex. &lt;code&gt;PCMA/48000&lt;/code&gt; for some Dahua cameras)&lt;/li&gt; 
 &lt;li&gt;if you play files over &lt;code&gt;http&lt;/code&gt; link, you need to add &lt;code&gt;#input=file&lt;/code&gt; params for transcoding, so the file will be transcoded and played in real time&lt;/li&gt; 
 &lt;li&gt;if you play live streams, you should skip &lt;code&gt;#input&lt;/code&gt; param, because it is already in real time&lt;/li&gt; 
 &lt;li&gt;you can stop active playback by calling the API with the empty &lt;code&gt;src&lt;/code&gt; parameter&lt;/li&gt; 
 &lt;li&gt;you will see one active producer and one active consumer in go2rtc WebUI info page during streaming&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Publish stream&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.8.0"&gt;New in v1.8.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;You can publish any stream to streaming services (YouTube, Telegram, etc.) via RTMP/RTMPS. Important:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supported codecs: H264 for video and AAC for audio&lt;/li&gt; 
 &lt;li&gt;AAC audio is required for YouTube; videos without audio will not work&lt;/li&gt; 
 &lt;li&gt;You don't need to enable &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-rtmp"&gt;RTMP module&lt;/a&gt; listening for this task&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can use the API:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;POST http://localhost:1984/api/streams?src=camera1&amp;amp;dst=rtmps://...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or config file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;publish:
  # publish stream "video_audio_transcode" to Telegram
  video_audio_transcode:
    - rtmps://xxx-x.rtmp.t.me/s/xxxxxxxxxx:xxxxxxxxxxxxxxxxxxxxxx
  # publish stream "audio_transcode" to Telegram and YouTube
  audio_transcode:
    - rtmps://xxx-x.rtmp.t.me/s/xxxxxxxxxx:xxxxxxxxxxxxxxxxxxxxxx
    - rtmp://xxx.rtmp.youtube.com/live2/xxxx-xxxx-xxxx-xxxx-xxxx

streams:
  video_audio_transcode:
    - ffmpeg:rtsp://user:pass@192.168.1.123/stream1#video=h264#hardware#audio=aac
  audio_transcode:
    - ffmpeg:rtsp://user:pass@192.168.1.123/stream1#video=copy#audio=aac
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Telegram Desktop App&lt;/strong&gt; &amp;gt; Any public or private channel or group (where you admin) &amp;gt; Live stream &amp;gt; Start with... &amp;gt; Start streaming.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;YouTube&lt;/strong&gt; &amp;gt; Create &amp;gt; Go live &amp;gt; Stream latency: Ultra low-latency &amp;gt; Copy: Stream URL + Stream key.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Module: API&lt;/h3&gt; 
&lt;p&gt;The HTTP API is the main part for interacting with the application. Default address: &lt;code&gt;http://localhost:1984/&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Important!&lt;/strong&gt; go2rtc passes requests from localhost and from Unix sockets without HTTP authorisation, even if you have it configured! It is your responsibility to set up secure external access to the API. If not properly configured, an attacker can gain access to your cameras and even your server.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/tree/master/api"&gt;API description&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Module config&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;you can disable HTTP API with &lt;code&gt;listen: ""&lt;/code&gt; and use, for example, only RTSP client/server protocol&lt;/li&gt; 
 &lt;li&gt;you can enable HTTP API only on localhost with &lt;code&gt;listen: "127.0.0.1:1984"&lt;/code&gt; setting&lt;/li&gt; 
 &lt;li&gt;you can change the API &lt;code&gt;base_path&lt;/code&gt; and host go2rtc on your main app webserver suburl&lt;/li&gt; 
 &lt;li&gt;all files from &lt;code&gt;static_dir&lt;/code&gt; hosted on root path: &lt;code&gt;/&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;you can use raw TLS cert/key content or path to files&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;api:
  listen: ":1984"    # default ":1984", HTTP API port ("" - disabled)
  username: "admin"  # default "", Basic auth for WebUI
  password: "pass"   # default "", Basic auth for WebUI
  base_path: "/rtc"  # default "", API prefix for serving on suburl (/api =&amp;gt; /rtc/api)
  static_dir: "www"  # default "", folder for static files (custom web interface)
  origin: "*"        # default "", allow CORS requests (only * supported)
  tls_listen: ":443" # default "", enable HTTPS server
  tls_cert: |        # default "", PEM-encoded fullchain certificate for HTTPS
    -----BEGIN CERTIFICATE-----
    ...
    -----END CERTIFICATE-----
  tls_key: |         # default "", PEM-encoded private key for HTTPS
    -----BEGIN PRIVATE KEY-----
    ...
    -----END PRIVATE KEY-----
  unix_listen: "/tmp/go2rtc.sock"  # default "", unix socket listener for API
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MJPEG over WebSocket plays better than native MJPEG because Chrome &lt;a href="https://bugs.chromium.org/p/chromium/issues/detail?id=527446"&gt;bug&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;MP4 over WebSocket was created only for Apple iOS because it doesn't support MSE and native MP4&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Module: RTSP&lt;/h3&gt; 
&lt;p&gt;You can get any stream as RTSP-stream: &lt;code&gt;rtsp://192.168.1.123:8554/{stream_name}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;You can enable external password protection for your RTSP streams. Password protection is always disabled for localhost calls (ex. FFmpeg or Hass on the same server).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;rtsp:
  listen: ":8554"    # RTSP Server TCP port, default - 8554
  username: "admin"  # optional, default - disabled
  password: "pass"   # optional, default - disabled
  default_query: "video&amp;amp;audio"  # optional, default codecs filters 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default go2rtc provide RTSP-stream with only one first video and only one first audio. You can change it with the &lt;code&gt;default_query&lt;/code&gt; setting:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;default_query: "mp4"&lt;/code&gt; - MP4 compatible codecs (H264, H265, AAC)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;default_query: "video=all&amp;amp;audio=all"&lt;/code&gt; - all tracks from all source (not all players can handle this)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;default_query: "video=h264,h265"&lt;/code&gt; - only one video track (H264 or H265)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;default_query: "video&amp;amp;audio=all"&lt;/code&gt; - only one first any video and all audio as separate tracks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Read more about &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#codecs-filters"&gt;codecs filters&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Module: RTMP&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.8.0"&gt;New in v1.8.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;You can get any stream as RTMP-stream: &lt;code&gt;rtmp://192.168.1.123/{stream_name}&lt;/code&gt;. Only H264/AAC codecs supported right now.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#incoming-sources"&gt;Incoming stream&lt;/a&gt; in RTMP format tested only with &lt;a href="https://obsproject.com/"&gt;OBS Studio&lt;/a&gt; and a Dahua camera. Different FFmpeg versions have different problems with this format.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;rtmp:
  listen: ":1935"  # by default - disabled!
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Module: WebRTC&lt;/h3&gt; 
&lt;p&gt;In most cases, &lt;a href="https://en.wikipedia.org/wiki/WebRTC"&gt;WebRTC&lt;/a&gt; uses a direct peer-to-peer connection from your browser to go2rtc and sends media data via UDP. It &lt;strong&gt;can't pass&lt;/strong&gt; media data through your Nginx or Cloudflare or &lt;a href="https://www.nabucasa.com/"&gt;Nabu Casa&lt;/a&gt; HTTP TCP connection! It can automatically detect your external IP via a public &lt;a href="https://en.wikipedia.org/wiki/STUN"&gt;STUN&lt;/a&gt; server. It can establish an external direct connection via &lt;a href="https://en.wikipedia.org/wiki/UDP_hole_punching"&gt;UDP hole punching&lt;/a&gt; technology even if you do not open your server to the World.&lt;/p&gt; 
&lt;p&gt;But about 10-20% of users may need to configure additional settings for external access if &lt;strong&gt;mobile phone&lt;/strong&gt; or &lt;strong&gt;go2rtc server&lt;/strong&gt; is behind &lt;a href="https://tomchen.github.io/symmetric-nat-test/"&gt;Symmetric NAT&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;by default, WebRTC uses both TCP and UDP on port 8555 for connections&lt;/li&gt; 
 &lt;li&gt;you can use this port for external access&lt;/li&gt; 
 &lt;li&gt;you can change the port in YAML config:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;webrtc:
  listen: ":8555"  # address of your local server and port (TCP/UDP)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Static public IP&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;forward the port 8555 on your router (you can use the same 8555 port or any other as external port)&lt;/li&gt; 
 &lt;li&gt;add your external IP address and external port to the YAML config&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;webrtc:
  candidates:
    - 216.58.210.174:8555  # if you have a static public IP address
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Dynamic public IP&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;forward the port 8555 on your router (you can use the same 8555 port or any other as the external port)&lt;/li&gt; 
 &lt;li&gt;add &lt;code&gt;stun&lt;/code&gt; word and external port to YAML config 
  &lt;ul&gt; 
   &lt;li&gt;go2rtc automatically detects your external address with STUN server&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;webrtc:
  candidates:
    - stun:8555  # if you have a dynamic public IP address
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Private IP&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;setup integration with &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-ngrok"&gt;ngrok service&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;ngrok:
  command: ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Hard tech way 1. Own TCP-tunnel&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you have a personal &lt;a href="https://en.wikipedia.org/wiki/Virtual_private_server"&gt;VPS&lt;/a&gt;, you can create a TCP tunnel and setup in the same way as "Static public IP". But use your VPS IP address in the YAML config.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Hard tech way 2. Using TURN-server&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you have personal &lt;a href="https://en.wikipedia.org/wiki/Virtual_private_server"&gt;VPS&lt;/a&gt;, you can install TURN server (e.g. &lt;a href="https://github.com/coturn/coturn"&gt;coturn&lt;/a&gt;, config &lt;a href="https://github.com/AlexxIT/WebRTC/wiki/Coturn-Example"&gt;example&lt;/a&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;webrtc:
  ice_servers:
    - urls: [stun:stun.l.google.com:19302]
    - urls: [turn:123.123.123.123:3478]
      username: your_user
      credential: your_pass
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Module: HomeKit&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.7.0"&gt;New in v1.7.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;HomeKit module can work in two modes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;export any H264 camera to Apple HomeKit&lt;/li&gt; 
 &lt;li&gt;transparent proxy any Apple HomeKit camera (Aqara, Eve, Eufy, etc.) back to Apple HomeKit, so you will have all camera features in Apple Home and also will have RTSP/WebRTC/MP4/etc. from your HomeKit camera&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;HomeKit cameras support only H264 video and OPUS audio&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Minimal config&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  dahua1: rtsp://admin:password@192.168.1.123/cam/realmonitor?channel=1&amp;amp;subtype=0
homekit:
  dahua1:  # same stream ID from streams list, default PIN - 19550224
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Full config&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  dahua1:
    - rtsp://admin:password@192.168.1.123/cam/realmonitor?channel=1&amp;amp;subtype=0
    - ffmpeg:dahua1#video=h264#hardware  # if your camera doesn't support H264, important for HomeKit
    - ffmpeg:dahua1#audio=opus           # only OPUS audio supported by HomeKit

homekit:
  dahua1:                   # same stream ID from streams list
    pin: 12345678           # custom PIN, default: 19550224
    name: Dahua camera      # custom camera name, default: generated from stream ID
    device_id: dahua1       # custom ID, default: generated from stream ID
    device_private: dahua1  # custom key, default: generated from stream ID
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Proxy HomeKit camera&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Video stream from HomeKit camera to Apple device (iPhone, AppleTV) will be transmitted directly&lt;/li&gt; 
 &lt;li&gt;Video stream from HomeKit camera to RTSP/WebRTC/MP4/etc. will be transmitted via go2rtc&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  aqara1:
    - homekit://...
    - ffmpeg:aqara1#audio=aac#audio=opus  # optional audio transcoding

homekit:
  aqara1:  # same stream ID from streams list
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Module: WebTorrent&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.3.0"&gt;New in v1.3.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;This module supports:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Share any local stream via &lt;a href="https://webtorrent.io/"&gt;WebTorrent&lt;/a&gt; technology&lt;/li&gt; 
 &lt;li&gt;Get any &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#incoming-browser"&gt;incoming stream&lt;/a&gt; from PC or mobile via &lt;a href="https://webtorrent.io/"&gt;WebTorrent&lt;/a&gt; technology&lt;/li&gt; 
 &lt;li&gt;Get any remote &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-webtorrent"&gt;go2rtc source&lt;/a&gt; via &lt;a href="https://webtorrent.io/"&gt;WebTorrent&lt;/a&gt; technology&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Securely and freely. You do not need to open a public access to the go2rtc server. But in some cases (Symmetric NAT), you may need to set up external access to &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-webrtc"&gt;WebRTC module&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To generate a sharing link or incoming link, go to the go2rtc WebUI (stream links page). This link is &lt;strong&gt;temporary&lt;/strong&gt; and will stop working after go2rtc is restarted!&lt;/p&gt; 
&lt;p&gt;You can create permanent external links in the go2rtc config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;webtorrent:
  shares:
    super-secret-share:  # share name, should be unique among all go2rtc users!
      pwd: super-secret-password
      src: rtsp-dahua1   # stream name from streams section
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Link example: &lt;a href="https://alexxit.github.io/go2rtc/#share=02SNtgjKXY&amp;amp;pwd=wznEQqznxW&amp;amp;media=video+audio"&gt;https://alexxit.github.io/go2rtc/#share=02SNtgjKXY&amp;amp;pwd=wznEQqznxW&amp;amp;media=video+audio&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;TODO: article on how it works...&lt;/p&gt; 
&lt;h3&gt;Module: ngrok&lt;/h3&gt; 
&lt;p&gt;With ngrok integration, you can get external access to your streams in situations when you have Internet with a private IP address.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ngrok is pre-installed for &lt;strong&gt;Docker&lt;/strong&gt; and &lt;strong&gt;Hass add-on&lt;/strong&gt; users&lt;/li&gt; 
 &lt;li&gt;you may need external access for two different things: 
  &lt;ul&gt; 
   &lt;li&gt;WebRTC stream, so you need a tunnel WebRTC TCP port (ex. 8555)&lt;/li&gt; 
   &lt;li&gt;go2rtc web interface, so you need a tunnel API HTTP port (ex. 1984)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ngrok supports authorization for your web interface&lt;/li&gt; 
 &lt;li&gt;ngrok automatically adds HTTPS to your web interface&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The ngrok free subscription has the following limitations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can reserve a free domain for serving the web interface, but the TCP address you get will always be random and change with each restart of the ngrok agent (not a problem for WebRTC stream)&lt;/li&gt; 
 &lt;li&gt;You can forward multiple ports from a single agent, but you can only run one ngrok agent on the free plan&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;go2rtc will automatically get your external TCP address (if you enable it in ngrok config) and use it with WebRTC connection (if you enable it in webrtc config).&lt;/p&gt; 
&lt;p&gt;You need to manually download the &lt;a href="https://ngrok.com/download"&gt;ngrok agent app&lt;/a&gt; for your OS and register with the &lt;a href="https://ngrok.com/signup"&gt;ngrok service&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Tunnel for only WebRTC Stream&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You need to add your &lt;a href="https://dashboard.ngrok.com/get-started/your-authtoken"&gt;ngrok authtoken&lt;/a&gt; and WebRTC TCP port to YAML:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;ngrok:
  command: ngrok tcp 8555 --authtoken eW91IHNoYWxsIG5vdCBwYXNzCnlvdSBzaGFsbCBub3QgcGFzcw
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Tunnel for WebRTC and Web interface&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You need to create &lt;code&gt;ngrok.yaml&lt;/code&gt; config file and add it to the go2rtc config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;ngrok:
  command: ngrok start --all --config ngrok.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;ngrok config example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;version: "2"
authtoken: eW91IHNoYWxsIG5vdCBwYXNzCnlvdSBzaGFsbCBub3QgcGFzcw
tunnels:
  api:
    addr: 1984  # use the same port as in the go2rtc config
    proto: http
    basic_auth:
      - admin:password  # you can set login/pass for your web interface
  webrtc:
    addr: 8555  # use the same port as in the go2rtc config
    proto: tcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://ngrok.com/docs/agent/config/"&gt;ngrok agent documentation&lt;/a&gt; for more details on the ngrok configuration file.&lt;/p&gt; 
&lt;h3&gt;Module: Hass&lt;/h3&gt; 
&lt;p&gt;The best and easiest way to use go2rtc inside Home Assistant is to install the custom integration &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#go2rtc-home-assistant-integration"&gt;WebRTC Camera&lt;/a&gt; and custom Lovelace card.&lt;/p&gt; 
&lt;p&gt;But go2rtc is also compatible and can be used with the &lt;a href="https://www.home-assistant.io/integrations/rtsp_to_webrtc/"&gt;RTSPtoWebRTC&lt;/a&gt; built-in integration.&lt;/p&gt; 
&lt;p&gt;You have several options on how to add a camera to Home Assistant:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Camera RTSP source =&amp;gt; &lt;a href="https://www.home-assistant.io/integrations/generic/"&gt;Generic Camera&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Camera &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-streams"&gt;any source&lt;/a&gt; =&amp;gt; &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#configuration"&gt;go2rtc config&lt;/a&gt; =&amp;gt; &lt;a href="https://www.home-assistant.io/integrations/generic/"&gt;Generic Camera&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Install any &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#fast-start"&gt;go2rtc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Add your stream to &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#configuration"&gt;go2rtc config&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Hass &amp;gt; Settings &amp;gt; Integrations &amp;gt; Add Integration &amp;gt; &lt;a href="https://my.home-assistant.io/redirect/config_flow_start/?domain=onvif"&gt;ONVIF&lt;/a&gt; &amp;gt; Host: &lt;code&gt;127.0.0.1&lt;/code&gt;, Port: &lt;code&gt;1984&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Hass &amp;gt; Settings &amp;gt; Integrations &amp;gt; Add Integration &amp;gt; &lt;a href="https://my.home-assistant.io/redirect/config_flow_start/?domain=generic"&gt;Generic Camera&lt;/a&gt; &amp;gt; Stream Source URL: &lt;code&gt;rtsp://127.0.0.1:8554/camera1&lt;/code&gt; (change to your stream name, leave everything else as is)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You have several options on how to watch the stream from the cameras in Home Assistant:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;Camera Entity&lt;/code&gt; =&amp;gt; &lt;code&gt;Picture Entity Card&lt;/code&gt; =&amp;gt; Technology &lt;code&gt;HLS&lt;/code&gt;, codecs: &lt;code&gt;H264/H265/AAC&lt;/code&gt;, poor latency.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Camera Entity&lt;/code&gt; =&amp;gt; &lt;a href="https://www.home-assistant.io/integrations/rtsp_to_webrtc/"&gt;RTSPtoWebRTC&lt;/a&gt; =&amp;gt; &lt;code&gt;Picture Entity Card&lt;/code&gt; =&amp;gt; Technology &lt;code&gt;WebRTC&lt;/code&gt;, codecs: &lt;code&gt;H264/PCMU/PCMA/OPUS&lt;/code&gt;, best latency. 
  &lt;ul&gt; 
   &lt;li&gt;Install any &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#fast-start"&gt;go2rtc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Hass &amp;gt; Settings &amp;gt; Integrations &amp;gt; Add Integration &amp;gt; &lt;a href="https://my.home-assistant.io/redirect/config_flow_start/?domain=rtsp_to_webrtc"&gt;RTSPtoWebRTC&lt;/a&gt; &amp;gt; &lt;code&gt;http://127.0.0.1:1984/&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;RTSPtoWebRTC &amp;gt; Configure &amp;gt; STUN server: &lt;code&gt;stun.l.google.com:19302&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Use Picture Entity or Picture Glance Lovelace card&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Camera Entity&lt;/code&gt; or &lt;code&gt;Camera URL&lt;/code&gt; =&amp;gt; &lt;a href="https://github.com/AlexxIT/WebRTC"&gt;WebRTC Camera&lt;/a&gt; =&amp;gt; Technology: &lt;code&gt;WebRTC/MSE/MP4/MJPEG&lt;/code&gt;, codecs: &lt;code&gt;H264/H265/AAC/PCMU/PCMA/OPUS&lt;/code&gt;, best latency, best compatibility. 
  &lt;ul&gt; 
   &lt;li&gt;Install and add &lt;a href="https://github.com/AlexxIT/WebRTC"&gt;WebRTC Camera&lt;/a&gt; custom integration&lt;/li&gt; 
   &lt;li&gt;Use WebRTC Camera custom Lovelace card&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You can add camera &lt;code&gt;entity_id&lt;/code&gt; to &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#configuration"&gt;go2rtc config&lt;/a&gt; if you need transcoding:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  "camera.hall": ffmpeg:{input}#video=copy#audio=opus
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;PS.&lt;/strong&gt; Default Home Assistant lovelace cards don't support two-way audio. You can use 2-way audio from &lt;a href="https://my.home-assistant.io/redirect/supervisor_addon/?addon=a889bffc_go2rtc&amp;amp;repository_url=https%3A%2F%2Fgithub.com%2FAlexxIT%2Fhassio-addons"&gt;Add-on Web UI&lt;/a&gt;, but you need to use HTTPS to access the microphone. This is a browser restriction and cannot be avoided.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;PS.&lt;/strong&gt; There is also another nice card with go2rtc support - &lt;a href="https://github.com/dermotduffy/frigate-hass-card"&gt;Frigate Lovelace Card&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Module: MP4&lt;/h3&gt; 
&lt;p&gt;Provides several features:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;MSE stream (fMP4 over WebSocket)&lt;/li&gt; 
 &lt;li&gt;Camera snapshots in MP4 format (single frame), can be sent to &lt;a href="https://github.com/AlexxIT/go2rtc/wiki/Snapshot-to-Telegram"&gt;Telegram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;HTTP progressive streaming (MP4 file stream) - bad format for streaming because of high start delay. This format doesn't work in all Safari browsers, but go2rtc will automatically redirect it to HLS/fMP4 in this case.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;API examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MP4 snapshot: &lt;code&gt;http://192.168.1.123:1984/api/frame.mp4?src=camera1&lt;/code&gt; (H264, H265)&lt;/li&gt; 
 &lt;li&gt;MP4 stream: &lt;code&gt;http://192.168.1.123:1984/api/stream.mp4?src=camera1&lt;/code&gt; (H264, H265, AAC)&lt;/li&gt; 
 &lt;li&gt;MP4 file: &lt;code&gt;http://192.168.1.123:1984/api/stream.mp4?src=camera1&lt;/code&gt; (H264, H265*, AAC, OPUS, MP3, PCMA, PCMU, PCM) 
  &lt;ul&gt; 
   &lt;li&gt;You can use &lt;code&gt;mp4&lt;/code&gt;, &lt;code&gt;mp4=flac&lt;/code&gt; and &lt;code&gt;mp4=all&lt;/code&gt; param for codec filters&lt;/li&gt; 
   &lt;li&gt;You can use &lt;code&gt;duration&lt;/code&gt; param in seconds (ex. &lt;code&gt;duration=15&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;You can use &lt;code&gt;filename&lt;/code&gt; param (ex. &lt;code&gt;filename=record.mp4&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;You can use &lt;code&gt;rotate&lt;/code&gt; param with &lt;code&gt;90&lt;/code&gt;, &lt;code&gt;180&lt;/code&gt; or &lt;code&gt;270&lt;/code&gt; values&lt;/li&gt; 
   &lt;li&gt;You can use &lt;code&gt;scale&lt;/code&gt; param with positive integer values (ex. &lt;code&gt;scale=4:3&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Read more about &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#codecs-filters"&gt;codecs filters&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;PS.&lt;/strong&gt; Rotate and scale params don't use transcoding and change video using metadata.&lt;/p&gt; 
&lt;h3&gt;Module: HLS&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/releases/tag/v1.1.0"&gt;New in v1.1.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/HTTP_Live_Streaming"&gt;HLS&lt;/a&gt; is the worst technology for real-time streaming. It can only be useful on devices that do not support more modern technology, like &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-webrtc"&gt;WebRTC&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-mp4"&gt;MSE/MP4&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The go2rtc implementation differs from the standards and may not work with all players.&lt;/p&gt; 
&lt;p&gt;API examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;HLS/TS stream: &lt;code&gt;http://192.168.1.123:1984/api/stream.m3u8?src=camera1&lt;/code&gt; (H264)&lt;/li&gt; 
 &lt;li&gt;HLS/fMP4 stream: &lt;code&gt;http://192.168.1.123:1984/api/stream.m3u8?src=camera1&amp;amp;mp4&lt;/code&gt; (H264, H265, AAC)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Read more about &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#codecs-filters"&gt;codecs filters&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Module: MJPEG&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Important.&lt;/strong&gt; For stream in MJPEG format, your source MUST contain the MJPEG codec. If your stream has an MJPEG codec, you can receive &lt;strong&gt;MJPEG stream&lt;/strong&gt; or &lt;strong&gt;JPEG snapshots&lt;/strong&gt; via API.&lt;/p&gt; 
&lt;p&gt;You can receive an MJPEG stream in several ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;some cameras support MJPEG codec inside &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-rtsp"&gt;RTSP stream&lt;/a&gt; (ex. second stream for Dahua cameras)&lt;/li&gt; 
 &lt;li&gt;some cameras have an HTTP link with &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-http"&gt;MJPEG stream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;some cameras have an HTTP link with snapshots - go2rtc can convert them to &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-http"&gt;MJPEG stream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;you can convert H264/H265 stream from your camera via &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ffmpeg"&gt;FFmpeg integraion&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;With this example, your stream will have both H264 and MJPEG codecs:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  camera1:
    - rtsp://rtsp:12345678@192.168.1.123/av_stream/ch0
    - ffmpeg:camera1#video=mjpeg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;API examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MJPEG stream: &lt;code&gt;http://192.168.1.123:1984/api/stream.mjpeg?src=camera1&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;JPEG snapshots: &lt;code&gt;http://192.168.1.123:1984/api/frame.jpeg?src=camera1&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;You can use &lt;code&gt;width&lt;/code&gt;/&lt;code&gt;w&lt;/code&gt; and/or &lt;code&gt;height&lt;/code&gt;/&lt;code&gt;h&lt;/code&gt; params&lt;/li&gt; 
   &lt;li&gt;You can use &lt;code&gt;rotate&lt;/code&gt; param with &lt;code&gt;90&lt;/code&gt;, &lt;code&gt;180&lt;/code&gt;, &lt;code&gt;270&lt;/code&gt; or &lt;code&gt;-90&lt;/code&gt; values&lt;/li&gt; 
   &lt;li&gt;You can use &lt;code&gt;hardware&lt;/code&gt;/&lt;code&gt;hw&lt;/code&gt; param &lt;a href="https://github.com/AlexxIT/go2rtc/wiki/Hardware-acceleration"&gt;read more&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;PS.&lt;/strong&gt; This module also supports streaming to the server console (terminal) in the &lt;strong&gt;animated ASCII art&lt;/strong&gt; format (&lt;a href="https://github.com/AlexxIT/go2rtc/raw/master/internal/mjpeg/README.md"&gt;read more&lt;/a&gt;):&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=sHj_3h_sX7M"&gt;&lt;img src="https://img.youtube.com/vi/sHj_3h_sX7M/mqdefault.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Module: Log&lt;/h3&gt; 
&lt;p&gt;You can set different log levels for different modules.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;log:
  level: info  # default level
  api: trace
  exec: debug
  ngrok: info
  rtsp: warn
  streams: error
  webrtc: fatal
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;By default, &lt;code&gt;go2rtc&lt;/code&gt; starts the Web interface on port &lt;code&gt;1984&lt;/code&gt; and RTSP on port &lt;code&gt;8554&lt;/code&gt;, as well as uses port &lt;code&gt;8555&lt;/code&gt; for WebRTC connections. The three ports are accessible from your local network. So anyone on your local network can watch video from your cameras without authorization. The same rule applies to the Home Assistant Add-on.&lt;/p&gt; 
&lt;p&gt;This is not a problem if you trust your local network as much as I do. But you can change this behaviour with a &lt;code&gt;go2rtc.yaml&lt;/code&gt; config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;api:
  listen: "127.0.0.1:1984" # localhost

rtsp:
  listen: "127.0.0.1:8554" # localhost

webrtc:
  listen: ":8555" # external TCP/UDP port
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;local access to RTSP is not a problem for &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ffmpeg"&gt;FFmpeg&lt;/a&gt; integration, because it runs locally on your server&lt;/li&gt; 
 &lt;li&gt;local access to API is not a problem for the &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#go2rtc-home-assistant-add-on"&gt;Home Assistant add-on&lt;/a&gt;, because Hass runs locally on the same server, and the add-on web UI is protected with Hass authorization (&lt;a href="https://www.home-assistant.io/blog/2019/04/15/hassio-ingress/"&gt;Ingress feature&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;external access to WebRTC TCP port is not a problem, because it is used only for transmitting encrypted media data 
  &lt;ul&gt; 
   &lt;li&gt;anyway you need to open this port to your local network and to the Internet for WebRTC to work&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you need web interface protection without the Home Assistant add-on, you need to use a reverse proxy, like &lt;a href="https://nginx.org/"&gt;Nginx&lt;/a&gt;, &lt;a href="https://caddyserver.com/"&gt;Caddy&lt;/a&gt;, &lt;a href="https://ngrok.com/"&gt;ngrok&lt;/a&gt;, etc.&lt;/p&gt; 
&lt;p&gt;PS. Additionally, WebRTC will try to use the 8555 UDP port to transmit encrypted media. It works without problems on the local network, and sometimes also works for external access, even if you haven't opened this port on your router (&lt;a href="https://en.wikipedia.org/wiki/UDP_hole_punching"&gt;read more&lt;/a&gt;). But for stable external WebRTC access, you need to open the 8555 port on your router for both TCP and UDP.&lt;/p&gt; 
&lt;h2&gt;Codecs filters&lt;/h2&gt; 
&lt;p&gt;go2rtc can automatically detect which codecs your device supports for &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-webrtc"&gt;WebRTC&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-mp4"&gt;MSE&lt;/a&gt; technologies.&lt;/p&gt; 
&lt;p&gt;But it cannot be done for &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-rtsp"&gt;RTSP&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-mp4"&gt;HTTP progressive streaming&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-hls"&gt;HLS&lt;/a&gt; technologies. You can manually add a codec filter when you create a link to a stream. The filters work the same for all three technologies. Filters do not create a new codec. They only select the suitable codec from existing sources. You can add new codecs to the stream using the &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ffmpeg"&gt;FFmpeg transcoding&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Without filters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;RTSP will provide only the first video and only the first audio (any codec)&lt;/li&gt; 
 &lt;li&gt;MP4 will include only compatible codecs (H264, H265, AAC)&lt;/li&gt; 
 &lt;li&gt;HLS will output in the legacy TS format (H264 without audio)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Some examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;rtsp://192.168.1.123:8554/camera1?mp4&lt;/code&gt; - useful for recording as MP4 files (e.g. Hass or Frigate)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rtsp://192.168.1.123:8554/camera1?video=h264,h265&amp;amp;audio=aac&lt;/code&gt; - full version of the filter above&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rtsp://192.168.1.123:8554/camera1?video=h264&amp;amp;audio=aac&amp;amp;audio=opus&lt;/code&gt; - H264 video codec and two separate audio tracks&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rtsp://192.168.1.123:8554/camera1?video&amp;amp;audio=all&lt;/code&gt; - any video codec and all audio codecs as separate tracks&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;http://192.168.1.123:1984/api/stream.m3u8?src=camera1&amp;amp;mp4&lt;/code&gt; - HLS stream with MP4 compatible codecs (HLS/fMP4)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;http://192.168.1.123:1984/api/stream.m3u8?src=camera1&amp;amp;mp4=flac&lt;/code&gt; - HLS stream with PCMA/PCMU/PCM audio support (HLS/fMP4), won't work on old devices&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;http://192.168.1.123:1984/api/stream.mp4?src=camera1&amp;amp;mp4=flac&lt;/code&gt; - MP4 file with PCMA/PCMU/PCM audio support, won't work on old devices (ex. iOS 12)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;http://192.168.1.123:1984/api/stream.mp4?src=camera1&amp;amp;mp4=all&lt;/code&gt; - MP4 file with non-standard audio codecs, won't work on some players&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Codecs madness&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;AVC/H.264&lt;/code&gt; video can be played almost anywhere. But &lt;code&gt;HEVC/H.265&lt;/code&gt; has many limitations in supporting different devices and browsers. It's all about patents and money; you can't do anything about it.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Device&lt;/th&gt; 
   &lt;th&gt;WebRTC&lt;/th&gt; 
   &lt;th&gt;MSE&lt;/th&gt; 
   &lt;th&gt;HTTP*&lt;/th&gt; 
   &lt;th&gt;HLS&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;latency&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;best&lt;/td&gt; 
   &lt;td&gt;medium&lt;/td&gt; 
   &lt;td&gt;bad&lt;/td&gt; 
   &lt;td&gt;bad&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;- Desktop Chrome 107+ &lt;br&gt; - Desktop Edge &lt;br&gt; - Android Chrome 107+&lt;/td&gt; 
   &lt;td&gt;H264 &lt;br&gt; PCMU, PCMA &lt;br&gt; OPUS&lt;/td&gt; 
   &lt;td&gt;H264, H265* &lt;br&gt; AAC, FLAC* &lt;br&gt; OPUS&lt;/td&gt; 
   &lt;td&gt;H264, H265* &lt;br&gt; AAC, FLAC* &lt;br&gt; OPUS, MP3&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Desktop Firefox&lt;/td&gt; 
   &lt;td&gt;H264 &lt;br&gt; PCMU, PCMA &lt;br&gt; OPUS&lt;/td&gt; 
   &lt;td&gt;H264 &lt;br&gt; AAC, FLAC* &lt;br&gt; OPUS&lt;/td&gt; 
   &lt;td&gt;H264 &lt;br&gt; AAC, FLAC* &lt;br&gt; OPUS&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;- Desktop Safari 14+ &lt;br&gt; - iPad Safari 14+ &lt;br&gt; - iPhone Safari 17.1+&lt;/td&gt; 
   &lt;td&gt;H264, H265* &lt;br&gt; PCMU, PCMA &lt;br&gt; OPUS&lt;/td&gt; 
   &lt;td&gt;H264, H265 &lt;br&gt; AAC, FLAC*&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;no!&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;H264, H265 &lt;br&gt; AAC, FLAC*&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iPhone Safari 14+&lt;/td&gt; 
   &lt;td&gt;H264, H265* &lt;br&gt; PCMU, PCMA &lt;br&gt; OPUS&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;no!&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;no!&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;H264, H265 &lt;br&gt; AAC, FLAC*&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS &lt;a href="https://apps.apple.com/app/home-assistant/id1099568401"&gt;Hass App&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;H264, H265 &lt;br&gt; AAC, FLAC*&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;code&gt;HTTP*&lt;/code&gt; - HTTP Progressive Streaming, not related to &lt;a href="https://en.wikipedia.org/wiki/Progressive_download"&gt;progressive download&lt;/a&gt;, because the file has no size and no end&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chrome H265: &lt;a href="https://chromestatus.com/feature/5186511939567616"&gt;read this&lt;/a&gt; and &lt;a href="https://github.com/StaZhu/enable-chromium-hevc-hardware-decoding"&gt;read this&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Edge H265: &lt;a href="https://www.reddit.com/r/MicrosoftEdge/comments/v9iw8k/enable_hevc_support_in_edge/"&gt;read this&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Desktop Safari H265: Menu &amp;gt; Develop &amp;gt; Experimental &amp;gt; WebRTC H265&lt;/li&gt; 
 &lt;li&gt;iOS Safari H265: Settings &amp;gt; Safari &amp;gt; Advanced &amp;gt; Experimental &amp;gt; WebRTC H265&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Audio&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go2rtc support &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#built-in-transcoding"&gt;automatic repack&lt;/a&gt; &lt;code&gt;PCMA/PCMU/PCM&lt;/code&gt; codecs to &lt;code&gt;FLAC&lt;/code&gt; for MSE/MP4/HLS so they will work almost anywhere&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WebRTC&lt;/strong&gt; audio codecs: &lt;code&gt;PCMU/8000&lt;/code&gt;, &lt;code&gt;PCMA/8000&lt;/code&gt;, &lt;code&gt;OPUS/48000/2&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OPUS&lt;/code&gt; and &lt;code&gt;MP3&lt;/code&gt; inside &lt;strong&gt;MP4&lt;/strong&gt; are part of the standard, but some players do not support them anyway (especially Apple)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Apple devices&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;all Apple devices don't support HTTP progressive streaming&lt;/li&gt; 
 &lt;li&gt;iPhones don't support MSE technology because it competes with the HTTP Live Streaming (HLS) technology, invented by Apple&lt;/li&gt; 
 &lt;li&gt;HLS is the worst technology for &lt;strong&gt;live&lt;/strong&gt; streaming, it still exists only because of iPhones&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Codec names&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;H264 = H.264 = AVC (Advanced Video Coding)&lt;/li&gt; 
 &lt;li&gt;H265 = H.265 = HEVC (High Efficiency Video Coding)&lt;/li&gt; 
 &lt;li&gt;PCMA = G.711 PCM (A-law) = PCM A-law (&lt;code&gt;alaw&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;PCMU = G.711 PCM (¬µ-law) = PCM mu-law (&lt;code&gt;mulaw&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;PCM = L16 = PCM signed 16-bit big-endian (&lt;code&gt;s16be&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;AAC = MPEG4-GENERIC&lt;/li&gt; 
 &lt;li&gt;MP3 = MPEG-1 Audio Layer III or MPEG-2 Audio Layer III&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Built-in transcoding&lt;/h2&gt; 
&lt;p&gt;There are no plans to embed complex transcoding algorithms inside go2rtc. &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ffmpeg"&gt;FFmpeg source&lt;/a&gt; does a great job with this. Including &lt;a href="https://github.com/AlexxIT/go2rtc/wiki/Hardware-acceleration"&gt;hardware acceleration&lt;/a&gt; support.&lt;/p&gt; 
&lt;p&gt;But go2rtc has some simple algorithms. They are turned on automatically; you do not need to set them up additionally.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;PCM for MSE/MP4/HLS&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Go2rtc can pack &lt;code&gt;PCMA&lt;/code&gt;, &lt;code&gt;PCMU&lt;/code&gt; and &lt;code&gt;PCM&lt;/code&gt; codecs into an MP4 container so that they work in all browsers and all built-in players on modern devices. Including Apple QuickTime:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;PCMA/PCMU =&amp;gt; PCM =&amp;gt; FLAC =&amp;gt; MSE/MP4/HLS
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Resample PCMA/PCMU for WebRTC&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;By default WebRTC supports only &lt;code&gt;PCMA/8000&lt;/code&gt; and &lt;code&gt;PCMU/8000&lt;/code&gt;. But go2rtc can automatically resample PCMA and PCMU codecs with a different sample rate. Also, go2rtc can transcode &lt;code&gt;PCM&lt;/code&gt; codec to &lt;code&gt;PCMA/8000&lt;/code&gt;, so WebRTC can play it:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;PCM/xxx =&amp;gt; PCMA/8000 =&amp;gt; WebRTC
PCMA/xxx =&amp;gt; PCMA/8000 =&amp;gt; WebRTC
PCMU/xxx =&amp;gt; PCMU/8000 =&amp;gt; WebRTC
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;FLAC codec not supported in an RTSP stream. If you are using Frigate or Hass for recording MP4 files with PCMA/PCMU/PCM audio, you should set up transcoding to the AAC codec.&lt;/li&gt; 
 &lt;li&gt;PCMA and PCMU are VERY low-quality codecs. They support only 256! different sounds. Use them only when you have no other options.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Codecs negotiation&lt;/h2&gt; 
&lt;p&gt;For example, you want to watch RTSP-stream from &lt;a href="https://www.dahuasecurity.com/fr/products/All-Products/Network-Cameras/Wireless-Series/Wi-Fi-Series/4MP/IPC-K42"&gt;Dahua IPC-K42&lt;/a&gt; camera in your Chrome browser.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;this camera supports two-way audio standard &lt;strong&gt;ONVIF Profile T&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;this camera supports codecs &lt;strong&gt;H264, H265&lt;/strong&gt; for send video, and you select &lt;code&gt;H264&lt;/code&gt; in camera settings&lt;/li&gt; 
 &lt;li&gt;this camera supports codecs &lt;strong&gt;AAC, PCMU, PCMA&lt;/strong&gt; for sending audio (from mic), and you select &lt;code&gt;AAC/16000&lt;/code&gt; in camera settings&lt;/li&gt; 
 &lt;li&gt;this camera supports codecs &lt;strong&gt;AAC, PCMU, PCMA&lt;/strong&gt; for receiving audio (to speaker), you don't need to select them&lt;/li&gt; 
 &lt;li&gt;your browser supports codecs &lt;strong&gt;H264, VP8, VP9, AV1&lt;/strong&gt; for receiving video, you don't need to select them&lt;/li&gt; 
 &lt;li&gt;your browser supports codecs &lt;strong&gt;OPUS, PCMU, PCMA&lt;/strong&gt; for sending and receiving audio, you don't need to select them&lt;/li&gt; 
 &lt;li&gt;you can't get camera audio directly, because its audio codecs don't match with your browser codecs 
  &lt;ul&gt; 
   &lt;li&gt;so you decide to use transcoding via FFmpeg and add this setting to the config YAML file&lt;/li&gt; 
   &lt;li&gt;you have chosen &lt;code&gt;OPUS/48000/2&lt;/code&gt; codec, because it is higher quality than the &lt;code&gt;PCMU/8000&lt;/code&gt; or &lt;code&gt;PCMA/8000&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Now you have a stream with two sources - &lt;strong&gt;RTSP and FFmpeg&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;streams:
  dahua:
    - rtsp://admin:password@192.168.1.123/cam/realmonitor?channel=1&amp;amp;subtype=0&amp;amp;unicast=true&amp;amp;proto=Onvif
    - ffmpeg:rtsp://admin:password@192.168.1.123/cam/realmonitor?channel=1&amp;amp;subtype=0#audio=opus
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;go2rtc&lt;/strong&gt; automatically matches codecs for your browser and all your stream sources. This is called &lt;strong&gt;multi-source two-way codec negotiation&lt;/strong&gt;. And this is one of the main features of this app.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/assets/codecs.svg?sanitize=true" alt=""&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;PS.&lt;/strong&gt; You can select &lt;code&gt;PCMU&lt;/code&gt; or &lt;code&gt;PCMA&lt;/code&gt; codec in camera settings and not use transcoding at all. Or you can select &lt;code&gt;AAC&lt;/code&gt; codec for main stream and &lt;code&gt;PCMU&lt;/code&gt; codec for second stream and add both RTSP to YAML config, this also will work fine.&lt;/p&gt; 
&lt;h2&gt;Projects using go2rtc&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://frigate.video/"&gt;Frigate&lt;/a&gt; 0.12+ - open-source NVR built around real-time AI object detection&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dermotduffy/frigate-hass-card"&gt;Frigate Lovelace Card&lt;/a&gt; - custom card for Home Assistant&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OpenIPC/firmware/tree/master/general/package/go2rtc"&gt;OpenIPC&lt;/a&gt; - alternative IP camera firmware from an open community&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gtxaspec/wz_mini_hacks"&gt;wz_mini_hacks&lt;/a&gt; - custom firmware for Wyze cameras&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oischinger/eufyp2pstream"&gt;EufyP2PStream&lt;/a&gt; - a small project that provides a video/audio stream from Eufy cameras that don't directly support RTSP&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bropat/ioBroker.eusec"&gt;ioBroker.euSec&lt;/a&gt; - &lt;a href="https://www.iobroker.net/"&gt;ioBroker&lt;/a&gt; adapter for controlling Eufy security devices&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Anonym-tsk/MMM-go2rtc"&gt;MMM-go2rtc&lt;/a&gt; - MagicMirror¬≤ module&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tsightler/ring-mqtt"&gt;ring-mqtt&lt;/a&gt; - Ring-to-MQTT bridge&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Distributions&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://pkgs.alpinelinux.org/packages?name=go2rtc"&gt;Alpine Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://linux-packages.com/aur/package/go2rtc"&gt;Arch User Repository&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/inode64/inode64-overlay/tree/main/media-video/go2rtc"&gt;Gentoo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://search.nixos.org/packages?query=go2rtc"&gt;NixOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tteck.github.io/Proxmox/"&gt;Proxmox Helper Scripts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.myqnap.org/product/go2rtc/"&gt;QNAP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://synocommunity.com/package/go2rtc"&gt;Synology NAS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://unraid.net/community/apps?q=go2rtc"&gt;Unraid&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Camera experience&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.dahuasecurity.com/"&gt;Dahua&lt;/a&gt; - reference implementation streaming protocols, a lot of settings, high stream quality, multiple streaming clients&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ezviz.com/"&gt;EZVIZ&lt;/a&gt; - awful RTSP protocol implementation, many bugs in SDP&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.hikvision.com/"&gt;Hikvision&lt;/a&gt; - a lot of proprietary streaming technologies&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://reolink.com/"&gt;Reolink&lt;/a&gt; - some models have an awful, unusable RTSP implementation and not the best RTMP alternative (I recommend that you contact Reolink support for new firmware), few settings&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sonoff.tech/"&gt;Sonoff&lt;/a&gt; - very low stream quality, no settings, not the best protocol implementation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tp-link.com/"&gt;TP-Link&lt;/a&gt; - few streaming clients, packet loss?&lt;/li&gt; 
 &lt;li&gt;Chinese cheap noname cameras, Wyze Cams, Xiaomi cameras with hacks (usually have &lt;code&gt;/live/ch00_1&lt;/code&gt; in RTSP URL) - awful but usable RTSP protocol implementation, low stream quality, few settings, packet loss?&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;TIPS&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Using apps for low RTSP delay&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ffplay -fflags nobuffer -flags low_delay "rtsp://192.168.1.123:8554/camera1"&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;VLC &amp;gt; Preferences &amp;gt; Input / Codecs &amp;gt; Default Caching Level: Lowest Latency&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Snapshots to Telegram&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/AlexxIT/go2rtc/wiki/Snapshot-to-Telegram"&gt;read more&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Q. What's the difference between go2rtc, WebRTC Camera and RTSPtoWebRTC?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;go2rtc&lt;/strong&gt; is a new version of the server-side &lt;a href="https://github.com/AlexxIT/WebRTC"&gt;WebRTC Camera&lt;/a&gt; integration, completely rewritten from scratch, with a number of fixes and a huge number of new features. It is compatible with native Home Assistant &lt;a href="https://www.home-assistant.io/integrations/rtsp_to_webrtc/"&gt;RTSPtoWebRTC&lt;/a&gt; integration. So you &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#module-hass"&gt;can use&lt;/a&gt; default Lovelace Picture Entity or Picture Glance.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q. Should I use the go2rtc add-on or WebRTC Camera integration?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;go2rtc&lt;/strong&gt; is more than just viewing your stream online with WebRTC/MSE/HLS/etc. You can use it all the time for your various tasks. But every time Hass is rebooted, all integrations are also rebooted. So your streams may be interrupted if you use them in additional tasks.&lt;/p&gt; 
&lt;p&gt;Basic users can use the &lt;strong&gt;WebRTC Camera&lt;/strong&gt; integration. Advanced users can use the go2rtc add-on or the Frigate 0.12+ add-on.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q. Which RTSP link should I use inside Hass?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can use a direct link to your cameras there (as you always do). &lt;strong&gt;go2rtc&lt;/strong&gt; supports zero-config feature. You may leave &lt;code&gt;streams&lt;/code&gt; config section empty. And your streams will be created on the fly on first start from Hass. And your cameras will have multiple connections. Some from Hass directly and one from &lt;strong&gt;go2rtc&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Also, you can specify your streams in &lt;strong&gt;go2rtc&lt;/strong&gt; &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#configuration"&gt;config file&lt;/a&gt; and use RTSP links to this add-on with additional features: multi-source &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#codecs-negotiation"&gt;codecs negotiation&lt;/a&gt; or FFmpeg &lt;a href="https://raw.githubusercontent.com/AlexxIT/go2rtc/master/#source-ffmpeg"&gt;transcoding&lt;/a&gt; for unsupported codecs. Or use them as a source for Frigate. And your cameras will have one connection from &lt;strong&gt;go2rtc&lt;/strong&gt;. And &lt;strong&gt;go2rtc&lt;/strong&gt; will have multiple connections - some from Hass via RTSP protocol, some from your browser via WebRTC/MSE/HLS protocols.&lt;/p&gt; 
&lt;p&gt;Use any config that you like.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q. What about Lovelace card with support for two-way audio?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;At this moment, I am focused on improving stability and adding new features to &lt;strong&gt;go2rtc&lt;/strong&gt;. Maybe someone could write such a card themselves. It's not difficult, I have &lt;a href="https://github.com/AlexxIT/go2rtc/raw/master/www/webrtc.html"&gt;some sketches&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hypermodeinc/dgraph</title>
      <link>https://github.com/hypermodeinc/dgraph</link>
      <description>&lt;p&gt;high-performance graph database for real-time use cases&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source srcset="/logo-dark.png" media="(prefers-color-scheme: dark)"&gt; 
 &lt;source srcset="/logo.png" media="(prefers-color-scheme: light), (prefers-color-scheme: no-preference)"&gt; 
 &lt;img alt="Dgraph Logo" src="https://raw.githubusercontent.com/hypermodeinc/dgraph/main/logo.png"&gt; 
&lt;/picture&gt; 
&lt;p&gt;&lt;a href="https://discord.hypermode.com"&gt;&lt;img src="https://img.shields.io/discord/1267579648657850441" alt="chat"&gt;&lt;/a&gt; &lt;a href="https://github.com/hypermodeinc/dgraph/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/hypermodeinc/dgraph" alt="GitHub Repo stars"&gt;&lt;/a&gt; &lt;a href="https://github.com/hypermodeinc/dgraph/commits/main/"&gt;&lt;img src="https://img.shields.io/github/commit-activity/m/hypermodeinc/dgraph" alt="GitHub commit activity"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/dgraph-io/dgraph"&gt;&lt;img src="https://goreportcard.com/badge/github.com/dgraph-io/dgraph" alt="Go Report Card"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Dgraph is a horizontally scalable and distributed GraphQL database with a graph backend. It provides ACID transactions, consistent replication, and linearizable reads. It's built from the ground up to perform a rich set of queries. Being a native GraphQL database, it tightly controls how the data is arranged on disk to optimize for query performance and throughput, reducing disk seeks and network calls in a cluster.&lt;/p&gt; 
&lt;p&gt;Dgraph's goal is to provide Google production-level scale and throughput, with low enough latency to serve real-time user queries over terabytes of structured data. Dgraph supports &lt;a href="https://docs.hypermode.com/dgraph/graphql/overview"&gt;GraphQL query syntax&lt;/a&gt;, and responds in &lt;a href="http://www.json.org/"&gt;JSON&lt;/a&gt; and &lt;a href="https://developers.google.com/protocol-buffers/"&gt;Protocol Buffers&lt;/a&gt; over &lt;a href="http://www.grpc.io/"&gt;GRPC&lt;/a&gt; and HTTP. Dgraph is written using the Go Programming Language.&lt;/p&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;p&gt;Dgraph is at &lt;a href="https://github.com/hypermodeinc/dgraph/releases/tag/v24.1.3"&gt;version v24.1.3&lt;/a&gt; and is production-ready. Apart from the vast open source community, it is being used in production at multiple Fortune 500 companies, and by &lt;a href="https://github.com/intuit/katlas"&gt;Intuit Katlas&lt;/a&gt; and &lt;a href="https://github.com/vmware/purser"&gt;VMware Purser&lt;/a&gt;. A hosted version of Dgraph is available at &lt;a href="https://cloud.dgraph.io"&gt;https://cloud.dgraph.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported Platforms&lt;/h2&gt; 
&lt;p&gt;Dgraph officially supports the Linux/amd64 architecture. Support for Linux/arm64 is in development. In order to take advantage of memory performance gains and other architecture-specific advancements in Linux, we dropped official support Mac and Windows in 2021, see &lt;a href="https://discuss.hypermode.com/t/dropping-support-for-windows-and-mac/12913"&gt;this blog post&lt;/a&gt; for more information. You can still build and use Dgraph on other platforms (for live or bulk loading for instance), but support for platforms other than Linux/amd64 is not available.&lt;/p&gt; 
&lt;p&gt;Running Dgraph in a Docker environment is the recommended testing and deployment method.&lt;/p&gt; 
&lt;h2&gt;Install with Docker&lt;/h2&gt; 
&lt;p&gt;If you're using Docker, you can use the &lt;a href="https://hub.docker.com/r/dgraph/dgraph/"&gt;official Dgraph image&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull dgraph/dgraph:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on a variety Docker deployment methods including Docker Compose and Kubernetes, see the &lt;a href="https://docs.hypermode.com/dgraph/self-managed/overview"&gt;docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Run a Quick Standalone Cluster&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -it -p 8080:8080 -p 9080:9080 -v ~/dgraph:/dgraph dgraph/standalone:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install from Source&lt;/h2&gt; 
&lt;p&gt;If you want to install from source, install Go 1.19+ or later and the following dependencies:&lt;/p&gt; 
&lt;h3&gt;Ubuntu&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt-get update
sudo apt-get install build-essential
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build and Install&lt;/h3&gt; 
&lt;p&gt;Then clone the Dgraph repository and use &lt;code&gt;make install&lt;/code&gt; to install the Dgraph binary in the directory named by the GOBIN environment variable, which defaults to $GOPATH/bin or $HOME/go/bin if the GOPATH environment variable is not set.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/hypermodeinc/dgraph.git
cd dgraph
make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;To get started with Dgraph, follow:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.hypermode.com/dgraph/quickstart"&gt;Installation to queries in 3 steps&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Tutorial and presentation videos on &lt;a href="https://www.youtube.com/channel/UCghE41LR8nkKFlR3IFTRO4w/featured"&gt;YouTube channel&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Is Dgraph the right choice for me?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Do you have more than 10 SQL tables connected via foreign keys?&lt;/li&gt; 
 &lt;li&gt;Do you have sparse data, which doesn't elegantly fit into SQL tables?&lt;/li&gt; 
 &lt;li&gt;Do you want a simple and flexible schema, which is readable and maintainable over time?&lt;/li&gt; 
 &lt;li&gt;Do you care about speed and performance at scale?&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the answers to the above are YES, then Dgraph would be a great fit for your application. Dgraph provides NoSQL like scalability while providing SQL like transactions and the ability to select, filter, and aggregate data points. It combines that with distributed joins, traversals, and graph operations, which makes it easy to build applications with it.&lt;/p&gt; 
&lt;h2&gt;Dgraph compared to other graph DBs&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Features&lt;/th&gt; 
   &lt;th&gt;Dgraph&lt;/th&gt; 
   &lt;th&gt;Neo4j&lt;/th&gt; 
   &lt;th&gt;Janus Graph&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Architecture&lt;/td&gt; 
   &lt;td&gt;Sharded and Distributed&lt;/td&gt; 
   &lt;td&gt;Single server (+ replicas in enterprise)&lt;/td&gt; 
   &lt;td&gt;Layer on top of other distributed DBs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Replication&lt;/td&gt; 
   &lt;td&gt;Consistent&lt;/td&gt; 
   &lt;td&gt;None in community edition (only available in enterprise)&lt;/td&gt; 
   &lt;td&gt;Via underlying DB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Data movement for shard rebalancing&lt;/td&gt; 
   &lt;td&gt;Automatic&lt;/td&gt; 
   &lt;td&gt;Not applicable (all data lies on each server)&lt;/td&gt; 
   &lt;td&gt;Via underlying DB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Language&lt;/td&gt; 
   &lt;td&gt;GraphQL inspired&lt;/td&gt; 
   &lt;td&gt;Cypher&lt;/td&gt; 
   &lt;td&gt;Gremlin&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Protocols&lt;/td&gt; 
   &lt;td&gt;Grpc / HTTP + JSON / RDF&lt;/td&gt; 
   &lt;td&gt;Bolt + Cypher&lt;/td&gt; 
   &lt;td&gt;Websocket / HTTP&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Transactions&lt;/td&gt; 
   &lt;td&gt;Distributed ACID transactions&lt;/td&gt; 
   &lt;td&gt;Single server ACID transactions&lt;/td&gt; 
   &lt;td&gt;Not typically ACID&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Full-Text Search&lt;/td&gt; 
   &lt;td&gt;Native support&lt;/td&gt; 
   &lt;td&gt;Native support&lt;/td&gt; 
   &lt;td&gt;Via External Indexing System&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Regular Expressions&lt;/td&gt; 
   &lt;td&gt;Native support&lt;/td&gt; 
   &lt;td&gt;Native support&lt;/td&gt; 
   &lt;td&gt;Via External Indexing System&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Geo Search&lt;/td&gt; 
   &lt;td&gt;Native support&lt;/td&gt; 
   &lt;td&gt;External support only&lt;/td&gt; 
   &lt;td&gt;Via External Indexing System&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;License&lt;/td&gt; 
   &lt;td&gt;Apache 2.0&lt;/td&gt; 
   &lt;td&gt;GPL v3&lt;/td&gt; 
   &lt;td&gt;Apache 2.0&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Users&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Dgraph official documentation is present at &lt;a href="https://docs.hypermode.com/dgraph"&gt;docs.hypermode.com/dgraph&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;For feature requests or questions, visit &lt;a href="https://discuss.hypermode.com"&gt;https://discuss.hypermode.com&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Please see &lt;a href="https://github.com/hypermodeinc/dgraph/releases"&gt;releases tab&lt;/a&gt; to find the latest release and corresponding release notes.&lt;/li&gt; 
 &lt;li&gt;Read about the latest updates from the Dgraph team &lt;a href="https://hypermode.com/blog"&gt;on our blog&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Watch tech talks on our &lt;a href="https://www.youtube.com/channel/UCghE41LR8nkKFlR3IFTRO4w/featured"&gt;YouTube channel&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Developers&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href="https://github.com/hypermodeinc/dgraph/raw/main/CONTRIBUTING.md"&gt;Contributing to Dgraph&lt;/a&gt; for guidelines on contributions.&lt;/p&gt; 
&lt;h2&gt;Client Libraries&lt;/h2&gt; 
&lt;p&gt;The Dgraph team maintains several &lt;a href="https://docs.hypermode.com/dgraph/sdks/overview"&gt;officially supported client libraries&lt;/a&gt;. There are also libraries contributed by the community &lt;a href="https://docs.hypermode.com/dgraph/sdks/unofficial-clients#unofficial-dgraph-clients"&gt;unofficial client libraries&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Please use &lt;a href="https://discuss.hypermode.com"&gt;discuss.hypermode.com&lt;/a&gt; for documentation, questions, feature requests and discussions.&lt;/li&gt; 
 &lt;li&gt;Please use &lt;a href="https://github.com/hypermodeinc/dgraph/issues"&gt;GitHub Issues&lt;/a&gt; for filing bugs or feature requests.&lt;/li&gt; 
 &lt;li&gt;Follow us on Twitter &lt;a href="https://twitter.com/dgraphlabs"&gt;@dgraphlabs&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>glanceapp/glance</title>
      <link>https://github.com/glanceapp/glance</link>
      <description>&lt;p&gt;A self-hosted dashboard that puts all your feeds in one place&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt;&lt;em&gt;What if you could see everything at a...&lt;/em&gt;&lt;/p&gt; 
&lt;h1 align="center"&gt;Glance&lt;/h1&gt; 
&lt;p align="center"&gt;&lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/#installation"&gt;Install&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/configuration.md#configuring-glance"&gt;Configuration&lt;/a&gt; ‚Ä¢ &lt;a href="https://discord.com/invite/7KQ7Xa9kJd"&gt;Discord&lt;/a&gt; ‚Ä¢ &lt;a href="https://github.com/sponsors/glanceapp"&gt;Sponsor&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt;&lt;a href="https://github.com/glanceapp/community-widgets"&gt;Community widgets&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/preconfigured-pages.md"&gt;Preconfigured pages&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/themes.md"&gt;Themes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/glanceapp/glance/main/docs/images/readme-main-image.png" alt=""&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Various widgets&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;RSS feeds&lt;/li&gt; 
 &lt;li&gt;Subreddit posts&lt;/li&gt; 
 &lt;li&gt;Hacker News posts&lt;/li&gt; 
 &lt;li&gt;Weather forecasts&lt;/li&gt; 
 &lt;li&gt;YouTube channel uploads&lt;/li&gt; 
 &lt;li&gt;Twitch channels&lt;/li&gt; 
 &lt;li&gt;Market prices&lt;/li&gt; 
 &lt;li&gt;Docker containers status&lt;/li&gt; 
 &lt;li&gt;Server stats&lt;/li&gt; 
 &lt;li&gt;Custom widgets&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/configuration.md#configuring-glance"&gt;and many more...&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Fast and lightweight&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Low memory usage&lt;/li&gt; 
 &lt;li&gt;Few dependencies&lt;/li&gt; 
 &lt;li&gt;Minimal vanilla JS&lt;/li&gt; 
 &lt;li&gt;Single &amp;lt;20mb binary available for multiple OSs &amp;amp; architectures and just as small Docker container&lt;/li&gt; 
 &lt;li&gt;Uncached pages usually load within ~1s (depending on internet speed and number of widgets)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Tons of customizability&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Different layouts&lt;/li&gt; 
 &lt;li&gt;As many pages/tabs as you need&lt;/li&gt; 
 &lt;li&gt;Numerous configuration options for each widget&lt;/li&gt; 
 &lt;li&gt;Multiple styles for some widgets&lt;/li&gt; 
 &lt;li&gt;Custom CSS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Optimized for mobile devices&lt;/h3&gt; 
&lt;p&gt;Because you'll want to take it with you on the go.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/glanceapp/glance/main/docs/images/mobile-preview.png" alt=""&gt;&lt;/p&gt; 
&lt;h3&gt;Themeable&lt;/h3&gt; 
&lt;p&gt;Easily create your own theme by tweaking a few numbers or choose from one of the &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/themes.md"&gt;already available themes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/glanceapp/glance/main/docs/images/themes-example.png" alt=""&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Configuration is done through YAML files, to learn more about how the layout works, how to add more pages and how to configure widgets, visit the &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/configuration.md#configuring-glance"&gt;configuration documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Preview example configuration file&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;pages:
  - name: Home
    columns:
      - size: small
        widgets:
          - type: calendar
            first-day-of-week: monday

          - type: rss
            limit: 10
            collapse-after: 3
            cache: 12h
            feeds:
              - url: https://selfh.st/rss/
                title: selfh.st
                limit: 4
              - url: https://ciechanow.ski/atom.xml
              - url: https://www.joshwcomeau.com/rss.xml
                title: Josh Comeau
              - url: https://samwho.dev/rss.xml
              - url: https://ishadeed.com/feed.xml
                title: Ahmad Shadeed

          - type: twitch-channels
            channels:
              - theprimeagen
              - j_blow
              - piratesoftware
              - cohhcarnage
              - christitustech
              - EJ_SA

      - size: full
        widgets:
          - type: group
            widgets:
              - type: hacker-news
              - type: lobsters

          - type: videos
            channels:
              - UCXuqSBlHAE6Xw-yeJA0Tunw # Linus Tech Tips
              - UCR-DXc1voovS8nhAvccRZhg # Jeff Geerling
              - UCsBjURrPoezykLs9EqgamOA # Fireship
              - UCBJycsmduvYEL83R_U4JriQ # Marques Brownlee
              - UCHnyfMqiRRG1u-2MsSQLbXA # Veritasium

          - type: group
            widgets:
              - type: reddit
                subreddit: technology
                show-thumbnails: true
              - type: reddit
                subreddit: selfhosted
                show-thumbnails: true

      - size: small
        widgets:
          - type: weather
            location: London, United Kingdom
            units: metric
            hour-format: 12h

          - type: markets
            markets:
              - symbol: SPY
                name: S&amp;amp;P 500
              - symbol: BTC-USD
                name: Bitcoin
              - symbol: NVDA
                name: NVIDIA
              - symbol: AAPL
                name: Apple
              - symbol: MSFT
                name: Microsoft

          - type: releases
            cache: 1d
            repositories:
              - glanceapp/glance
              - go-gitea/gitea
              - immich-app/immich
              - syncthing/syncthing
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Choose one of the following methods:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Docker compose using provided directory structure (recommended)&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Create a new directory called &lt;code&gt;glance&lt;/code&gt; as well as the template files within it by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;mkdir glance &amp;amp;&amp;amp; cd glance &amp;amp;&amp;amp; curl -sL https://github.com/glanceapp/docker-compose-template/archive/refs/heads/main.tar.gz | tar -xzf - --strip-components 2
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/glanceapp/docker-compose-template/tree/main/root"&gt;click here to view the files that will be created&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;Then, edit the following files as desired:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt; to configure the port, volumes and other containery things&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;config/home.yml&lt;/code&gt; to configure the widgets or layout of the home page&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;config/glance.yml&lt;/code&gt; if you want to change the theme or add more pages&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;details&gt; 
  &lt;summary&gt;Other files you may want to edit&lt;/summary&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;.env&lt;/code&gt; to configure environment variables that will be available inside configuration files&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;assets/user.css&lt;/code&gt; to add custom CSS&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/details&gt; 
 &lt;p&gt;When ready, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you encounter any issues, you can check the logs by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose logs
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Docker compose manual&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Create a &lt;code&gt;docker-compose.yml&lt;/code&gt; file with the following contents:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  glance:
    container_name: glance
    image: glanceapp/glance
    restart: unless-stopped
    volumes:
      - ./config:/app/config
    ports:
      - 8080:8080
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Then, create a new directory called &lt;code&gt;config&lt;/code&gt; and download the example starting &lt;a href="https://github.com/glanceapp/glance/raw/main/docs/glance.yml"&gt;&lt;code&gt;glance.yml&lt;/code&gt;&lt;/a&gt; file into it by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;mkdir config &amp;amp;&amp;amp; wget -O config/glance.yml https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Feel free to edit the &lt;code&gt;glance.yml&lt;/code&gt; file to your liking, and when ready run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you encounter any issues, you can check the logs by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker logs glance
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Manual binary installation&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Precompiled binaries are available for Linux, Windows and macOS (x86, x86_64, ARM and ARM64 architectures).&lt;/p&gt; 
 &lt;h3&gt;Linux&lt;/h3&gt; 
 &lt;p&gt;Visit the &lt;a href="https://github.com/glanceapp/glance/releases/latest"&gt;latest release page&lt;/a&gt; for available binaries. You can place the binary in &lt;code&gt;/opt/glance/&lt;/code&gt; and have it start with your server via a &lt;a href="https://linuxhandbook.com/create-systemd-services/"&gt;systemd service&lt;/a&gt;. By default, when running the binary, it will look for a &lt;code&gt;glance.yml&lt;/code&gt; file in the directory it's placed in. To specify a different path for the config file, use the &lt;code&gt;--config&lt;/code&gt; option:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;/opt/glance/glance --config /etc/glance.yml
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To grab a starting template for the config file, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;wget https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Windows&lt;/h3&gt; 
 &lt;p&gt;Download and extract the executable from the &lt;a href="https://github.com/glanceapp/glance/releases/latest"&gt;latest release&lt;/a&gt; (most likely the file called &lt;code&gt;glance-windows-amd64.zip&lt;/code&gt; if you're on a 64-bit system) and place it in a folder of your choice. Then, create a new text file called &lt;code&gt;glance.yml&lt;/code&gt; in the same folder and paste the content from &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml"&gt;here&lt;/a&gt; in it. You should then be able to run the executable and access the dashboard by visiting &lt;code&gt;http://localhost:8080&lt;/code&gt; in your browser.&lt;/p&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Other&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Glance can also be installed through the following 3rd party channels:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://community-scripts.github.io/ProxmoxVE/scripts?id=glance"&gt;Proxmox VE Helper Script&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://search.nixos.org/packages?channel=unstable&amp;amp;show=glance"&gt;NixOS package&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://coolify.io/docs/services/glance/"&gt;Coolify.io&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Common issues&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Requests timing out&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;The most common cause of this is when using Pi-Hole, AdGuard Home or other ad-blocking DNS services, which by default have a fairly low rate limit. Depending on the number of widgets you have in a single page, this limit can very easily be exceeded. To fix this, increase the rate limit in the settings of your DNS service.&lt;/p&gt; 
 &lt;p&gt;If using Podman, in some rare cases the timeout can be caused by an unknown issue, in which case it may be resolved by adding the following to the bottom of your &lt;code&gt;docker-compose.yml&lt;/code&gt; file:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;networks:
  podman:
    external: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Broken layout for markets, bookmarks or other widgets&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;This is almost always caused by the browser extension Dark Reader. To fix this, disable dark mode for the domain where Glance is hosted.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;cannot unmarshal !!map into []glance.page&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;The most common cause of this is having a &lt;code&gt;pages&lt;/code&gt; key in your &lt;code&gt;glance.yml&lt;/code&gt; and then also having a &lt;code&gt;pages&lt;/code&gt; key inside one of your included pages. To fix this, remove the &lt;code&gt;pages&lt;/code&gt; key from the top of your included pages.&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Does the information on the page update automatically?&lt;/strong&gt;&lt;/summary&gt; No, a page refresh is required to update the information. Some things do dynamically update where it makes sense, like the clock widget and the relative time showing how long ago something happened. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;How frequently do widgets update?&lt;/strong&gt;&lt;/summary&gt; No requests are made periodically in the background, information is only fetched upon loading the page and then cached. The default cache lifetime is different for each widget and can be configured. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Can I create my own widgets?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Yes, there are multiple ways to create custom widgets:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;iframe&lt;/code&gt; widget - allows you to embed things from other websites&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;html&lt;/code&gt; widget - allows you to insert your own static HTML&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;extension&lt;/code&gt; widget - fetch HTML from a URL&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;custom-api&lt;/code&gt; widget - fetch JSON from a URL and render it using custom HTML&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Can I change the title of a widget?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Yes, the title of all widgets can be changed by specifying the &lt;code&gt;title&lt;/code&gt; property in the widget's configuration:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;- type: rss
  title: My custom title

- type: markets
  title: My custom title

- type: videos
  title: My custom title

# and so on for all widgets...
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Feature requests&lt;/h2&gt; 
&lt;p&gt;New feature suggestions are always welcome and will be considered, though please keep in mind that some of them may be out of scope for what the project is trying to achieve (or is reasonably capable of). If you have an idea for a new feature and would like to share it, you can do so &lt;a href="https://github.com/glanceapp/glance/issues/new?template=feature_request.yml"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Feature requests are tagged with one of the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/glanceapp/glance/labels/roadmap"&gt;Roadmap&lt;/a&gt; - will be implemented in a future release&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/glanceapp/glance/labels/backlog"&gt;Backlog&lt;/a&gt; - may be implemented in the future but needs further feedback or interest from the community&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/glanceapp/glance/labels/icebox"&gt;Icebox&lt;/a&gt; - no plans to implement as it doesn't currently align with the project's goals or capabilities, may be revised at a later date&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;Choose one of the following methods:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Build binary with Go&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Requirements: &lt;a href="https://go.dev/dl/"&gt;Go&lt;/a&gt; &amp;gt;= v1.23&lt;/p&gt; 
 &lt;p&gt;To build the project for your current OS and architecture, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;go build -o build/glance .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To build for a specific OS and architecture, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;GOOS=linux GOARCH=amd64 go build -o build/glance .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;a href="https://go.dev/doc/install/source#:~:text=$GOOS%20and%20$GOARCH"&gt;&lt;em&gt;click here for a full list of GOOS and GOARCH combinations&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Alternatively, if you just want to run the app without creating a binary, like when you're testing out changes, you can run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;go run .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Build project and Docker image with Docker&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Requirements: &lt;a href="https://docs.docker.com/engine/install/"&gt;Docker&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;To build the project and image using just Docker, run:&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;(replace &lt;code&gt;owner&lt;/code&gt; with your name or organization)&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker build -t owner/glance:latest .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you wish to push the image to a registry (by default Docker Hub), run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker push owner/glance:latest
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Contributing guidelines&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Before working on a new feature it's preferable to submit a feature request first and state that you'd like to implement it yourself&lt;/li&gt; 
 &lt;li&gt;Please don't submit PRs for feature requests that are either in the roadmap&lt;sup&gt;[1]&lt;/sup&gt;, backlog&lt;sup&gt;[2]&lt;/sup&gt; or icebox&lt;sup&gt;[3]&lt;/sup&gt;&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;dev&lt;/code&gt; for the base branch if you're adding new features or fixing bugs, otherwise use &lt;code&gt;main&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Avoid introducing new dependencies&lt;/li&gt; 
 &lt;li&gt;Avoid making backwards-incompatible configuration changes&lt;/li&gt; 
 &lt;li&gt;Avoid introducing new colors or hard-coding colors, use the standard &lt;code&gt;primary&lt;/code&gt;, &lt;code&gt;positive&lt;/code&gt; and &lt;code&gt;negative&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For icons, try to use &lt;a href="https://heroicons.com/"&gt;heroicons&lt;/a&gt; where applicable&lt;/li&gt; 
 &lt;li&gt;Provide a screenshot of the changes if UI related where possible&lt;/li&gt; 
 &lt;li&gt;No &lt;code&gt;package.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;&lt;sup&gt;[1] [2] [3]&lt;/sup&gt;&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;[1] The feature likely already has work put into it that may conflict with your implementation&lt;/p&gt; 
 &lt;p&gt;[2] The demand, implementation or functionality for this feature is not yet clear&lt;/p&gt; 
 &lt;p&gt;[3] No plans to add this feature for the time being&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Thank you&lt;/h2&gt; 
&lt;p&gt;To all the people who were generous enough to &lt;a href="https://github.com/sponsors/glanceapp"&gt;sponsor&lt;/a&gt; the project and to everyone who has contributed in any way, be it PRs, submitting issues, helping others in the discussions or Discord server, creating guides and tools or just mentioning Glance on social media. Your support is greatly appreciated and helps keep the project going.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ollama/ollama</title>
      <link>https://github.com/ollama/ollama</link>
      <description>&lt;p&gt;Get up and running with Llama 3.3, DeepSeek-R1, Phi-4, Gemma 3, Mistral Small 3.1 and other large language models.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt;
  &amp;nbsp; 
 &lt;a href="https://ollama.com"&gt; &lt;img alt="ollama" width="240" src="https://github.com/ollama/ollama/assets/3325447/0d0b44e2-8f4a-4e99-9b52-a5c1c741c8f7"&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h1&gt;Ollama&lt;/h1&gt; 
&lt;p&gt;Get up and running with large language models.&lt;/p&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://ollama.com/download/Ollama.dmg"&gt;Download&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://ollama.com/download/OllamaSetup.exe"&gt;Download&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl -fsSL https://ollama.com/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://github.com/ollama/ollama/raw/main/docs/linux.md"&gt;Manual install instructions&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;The official &lt;a href="https://hub.docker.com/r/ollama/ollama"&gt;Ollama Docker image&lt;/a&gt; &lt;code&gt;ollama/ollama&lt;/code&gt; is available on Docker Hub.&lt;/p&gt; 
&lt;h3&gt;Libraries&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama/ollama-python"&gt;ollama-python&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama/ollama-js"&gt;ollama-js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/ollama"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://reddit.com/r/ollama"&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;To run and chat with &lt;a href="https://ollama.com/library/gemma3"&gt;Gemma 3&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama run gemma3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Model library&lt;/h2&gt; 
&lt;p&gt;Ollama supports a list of models available on &lt;a href="https://ollama.com/library" title="ollama model library"&gt;ollama.com/library&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Here are some example models that can be downloaded:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Model&lt;/th&gt; 
   &lt;th&gt;Parameters&lt;/th&gt; 
   &lt;th&gt;Size&lt;/th&gt; 
   &lt;th&gt;Download&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;1B&lt;/td&gt; 
   &lt;td&gt;815MB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:1b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;4B&lt;/td&gt; 
   &lt;td&gt;3.3GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;12B&lt;/td&gt; 
   &lt;td&gt;8.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:12b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;27B&lt;/td&gt; 
   &lt;td&gt;17GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:27b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;QwQ&lt;/td&gt; 
   &lt;td&gt;32B&lt;/td&gt; 
   &lt;td&gt;20GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run qwq&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepSeek-R1&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.7GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run deepseek-r1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepSeek-R1&lt;/td&gt; 
   &lt;td&gt;671B&lt;/td&gt; 
   &lt;td&gt;404GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run deepseek-r1:671b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 4&lt;/td&gt; 
   &lt;td&gt;109B&lt;/td&gt; 
   &lt;td&gt;67GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama4:scout&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 4&lt;/td&gt; 
   &lt;td&gt;400B&lt;/td&gt; 
   &lt;td&gt;245GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama4:maverick&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.3&lt;/td&gt; 
   &lt;td&gt;70B&lt;/td&gt; 
   &lt;td&gt;43GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2&lt;/td&gt; 
   &lt;td&gt;3B&lt;/td&gt; 
   &lt;td&gt;2.0GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2&lt;/td&gt; 
   &lt;td&gt;1B&lt;/td&gt; 
   &lt;td&gt;1.3GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2:1b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2 Vision&lt;/td&gt; 
   &lt;td&gt;11B&lt;/td&gt; 
   &lt;td&gt;7.9GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2-vision&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2 Vision&lt;/td&gt; 
   &lt;td&gt;90B&lt;/td&gt; 
   &lt;td&gt;55GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2-vision:90b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.1&lt;/td&gt; 
   &lt;td&gt;8B&lt;/td&gt; 
   &lt;td&gt;4.7GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.1&lt;/td&gt; 
   &lt;td&gt;405B&lt;/td&gt; 
   &lt;td&gt;231GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.1:405b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Phi 4&lt;/td&gt; 
   &lt;td&gt;14B&lt;/td&gt; 
   &lt;td&gt;9.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run phi4&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Phi 4 Mini&lt;/td&gt; 
   &lt;td&gt;3.8B&lt;/td&gt; 
   &lt;td&gt;2.5GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run phi4-mini&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mistral&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run mistral&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Moondream 2&lt;/td&gt; 
   &lt;td&gt;1.4B&lt;/td&gt; 
   &lt;td&gt;829MB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run moondream&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Neural Chat&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run neural-chat&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Starling&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run starling-lm&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Code Llama&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;3.8GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run codellama&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 2 Uncensored&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;3.8GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama2-uncensored&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LLaVA&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.5GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llava&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Granite-3.3&lt;/td&gt; 
   &lt;td&gt;8B&lt;/td&gt; 
   &lt;td&gt;4.9GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run granite3.3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You should have at least 8 GB of RAM available to run the 7B models, 16 GB to run the 13B models, and 32 GB to run the 33B models.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Customize a model&lt;/h2&gt; 
&lt;h3&gt;Import from GGUF&lt;/h3&gt; 
&lt;p&gt;Ollama supports importing GGUF models in the Modelfile:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create a file named &lt;code&gt;Modelfile&lt;/code&gt;, with a &lt;code&gt;FROM&lt;/code&gt; instruction with the local filepath to the model you want to import.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;FROM ./vicuna-33b.Q4_0.gguf
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create the model in Ollama&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;ollama create example -f Modelfile
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the model&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;ollama run example
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Import from Safetensors&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/ollama/ollama/main/docs/import.md"&gt;guide&lt;/a&gt; on importing models for more information.&lt;/p&gt; 
&lt;h3&gt;Customize a prompt&lt;/h3&gt; 
&lt;p&gt;Models from the Ollama library can be customized with a prompt. For example, to customize the &lt;code&gt;llama3.2&lt;/code&gt; model:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama pull llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a &lt;code&gt;Modelfile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM llama3.2

# set the temperature to 1 [higher is more creative, lower is more coherent]
PARAMETER temperature 1

# set the system message
SYSTEM """
You are Mario from Super Mario Bros. Answer as Mario, the assistant, only.
"""
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, create and run the model:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ollama create mario -f ./Modelfile
ollama run mario
&amp;gt;&amp;gt;&amp;gt; hi
Hello! It's your friend Mario.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on working with a Modelfile, see the &lt;a href="https://raw.githubusercontent.com/ollama/ollama/main/docs/modelfile.md"&gt;Modelfile&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;CLI Reference&lt;/h2&gt; 
&lt;h3&gt;Create a model&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;ollama create&lt;/code&gt; is used to create a model from a Modelfile.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama create mymodel -f ./Modelfile
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Pull a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama pull llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This command can also be used to update a local model. Only the diff will be pulled.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Remove a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama rm llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Copy a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama cp llama3.2 my-model
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multiline input&lt;/h3&gt; 
&lt;p&gt;For multiline input, you can wrap text with &lt;code&gt;"""&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; """Hello,
... world!
... """
I'm a basic program that prints the famous "Hello, world!" message to the console.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multimodal models&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;ollama run llava "What's in this image? /Users/jmorgan/Desktop/smile.png"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;: The image features a yellow smiley face, which is likely the central focus of the picture.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Pass the prompt as an argument&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama run llama3.2 "Summarize this file: $(cat README.md)"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;: Ollama is a lightweight, extensible framework for building and running language models on the local machine. It provides a simple API for creating, running, and managing models, as well as a library of pre-built models that can be easily used in a variety of applications.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Show model information&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama show llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;List models on your computer&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama list
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;List which models are currently loaded&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama ps
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Stop a model which is currently running&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama stop llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Start Ollama&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;ollama serve&lt;/code&gt; is used when you want to start ollama without running the desktop application.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/ollama/ollama/raw/main/docs/development.md"&gt;developer guide&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Running local builds&lt;/h3&gt; 
&lt;p&gt;Next, start the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;./ollama serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, in a separate shell, run a model:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;./ollama run llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;REST API&lt;/h2&gt; 
&lt;p&gt;Ollama has a REST API for running and managing models.&lt;/p&gt; 
&lt;h3&gt;Generate a response&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl http://localhost:11434/api/generate -d '{
  "model": "llama3.2",
  "prompt":"Why is the sky blue?"
}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Chat with a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl http://localhost:11434/api/chat -d '{
  "model": "llama3.2",
  "messages": [
    { "role": "user", "content": "why is the sky blue?" }
  ]
}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/ollama/ollama/main/docs/api.md"&gt;API documentation&lt;/a&gt; for all endpoints.&lt;/p&gt; 
&lt;h2&gt;Community Integrations&lt;/h2&gt; 
&lt;h3&gt;Web &amp;amp; Desktop&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/open-webui/open-webui"&gt;Open WebUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/swift-chat"&gt;SwiftChat (macOS with ReactNative)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AugustDev/enchanted"&gt;Enchanted (macOS native)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fmaclen/hollama"&gt;Hollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ParisNeo/lollms-webui"&gt;Lollms-Webui&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/danny-avila/LibreChat"&gt;LibreChat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bionic-gpt/bionic-gpt"&gt;Bionic GPT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rtcfirefly/ollama-ui"&gt;HTML UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jikkuatwork/saddle"&gt;Saddle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tagspaces.org"&gt;TagSpaces&lt;/a&gt; (A platform for file-based apps, &lt;a href="https://docs.tagspaces.org/ai/"&gt;utilizing Ollama&lt;/a&gt; for the generation of tags and descriptions)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ivanfioravanti/chatbot-ollama"&gt;Chatbot UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mckaywrigley/chatbot-ui"&gt;Chatbot UI v2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama-interface/Ollama-Gui?tab=readme-ov-file"&gt;Typescript UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/richawo/minimal-llm-ui"&gt;Minimalistic React UI for Ollama Models&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kevinhermawan/Ollamac"&gt;Ollamac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/enricoros/big-AGI"&gt;big-AGI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cheshire-cat-ai/core"&gt;Cheshire Cat assistant framework&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/semperai/amica"&gt;Amica&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BruceMacD/chatd"&gt;chatd&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kghandour/Ollama-SwiftUI"&gt;Ollama-SwiftUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langgenius/dify"&gt;Dify.AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mindmac.app"&gt;MindMac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jakobhoeg/nextjs-ollama-llm-ui"&gt;NextJS Web Interface for Ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://msty.app"&gt;Msty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Bin-Huang/Chatbox"&gt;Chatbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tgraupmann/WinForm_Ollama_Copilot"&gt;WinForm Ollama Copilot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web"&gt;NextChat&lt;/a&gt; with &lt;a href="https://docs.nextchat.dev/models/ollama"&gt;Get Started Doc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mmo80/alpaca-webui"&gt;Alpaca WebUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/enoch1118/ollamaGUI"&gt;OllamaGUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/InternLM/OpenAOE"&gt;OpenAOE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leonid20000/OdinRunes"&gt;Odin Runes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mrdjohnson/llm-x"&gt;LLM-X&lt;/a&gt; (Progressive Web App)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Mintplex-Labs/anything-llm"&gt;AnythingLLM (Docker + MacOs/Windows/Linux native app)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama_basic_chat"&gt;Ollama Basic Chat: Uses HyperDiv Reactive UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/drazdra/ollama-chats"&gt;Ollama-chats RPG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://intellibar.app/"&gt;IntelliBar&lt;/a&gt; (AI-powered assistant for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AliAhmedNada/jirapt"&gt;Jirapt&lt;/a&gt; (Jira Integration to generate issues, tasks, epics)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AliAhmedNada/ojira"&gt;ojira&lt;/a&gt; (Jira chrome plugin to easily generate descriptions for tasks)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reid41/QA-Pilot"&gt;QA-Pilot&lt;/a&gt; (Interactive chat tool that can leverage Ollama models for rapid understanding and navigation of GitHub code repositories)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sugarforever/chat-ollama"&gt;ChatOllama&lt;/a&gt; (Open Source Chatbot based on Ollama with Knowledge Bases)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Nagi-ovo/CRAG-Ollama-Chat"&gt;CRAG Ollama Chat&lt;/a&gt; (Simple Web Search with Corrective RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/infiniflow/ragflow"&gt;RAGFlow&lt;/a&gt; (Open-source Retrieval-Augmented Generation engine based on deep document understanding)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/StreamDeploy-DevRel/streamdeploy-llm-app-scaffold"&gt;StreamDeploy&lt;/a&gt; (LLM Application Scaffold)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/swuecho/chat"&gt;chat&lt;/a&gt; (chat web app for teams)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lobehub/lobe-chat"&gt;Lobe Chat&lt;/a&gt; with &lt;a href="https://lobehub.com/docs/self-hosting/examples/ollama"&gt;Integrating Doc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/datvodinh/rag-chatbot.git"&gt;Ollama RAG Chatbot&lt;/a&gt; (Local Chat with multiple PDFs using Ollama and RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.nurgo-software.com/products/brainsoup"&gt;BrainSoup&lt;/a&gt; (Flexible native client with RAG &amp;amp; multi-agent automation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Renset/macai"&gt;macai&lt;/a&gt; (macOS client for Ollama, ChatGPT, and other compatible API back-ends)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/josStorer/RWKV-Runner"&gt;RWKV-Runner&lt;/a&gt; (RWKV offline LLM deployment tool, also usable as a client for ChatGPT and Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dezoito/ollama-grid-search"&gt;Ollama Grid Search&lt;/a&gt; (app to evaluate and compare models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Otacon/olpaka"&gt;Olpaka&lt;/a&gt; (User-friendly Flutter Web App for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://casibase.org"&gt;Casibase&lt;/a&gt; (An open source AI knowledge base and dialogue system combining the latest RAG, SSO, ollama support, and multiple large language models.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CrazyNeil/OllamaSpring"&gt;OllamaSpring&lt;/a&gt; (Ollama Client for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kartikm7/llocal"&gt;LLocal.in&lt;/a&gt; (Easy to use Electron Desktop Client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dcSpark/shinkai-apps"&gt;Shinkai Desktop&lt;/a&gt; (Two click install Local AI using Ollama + Files + RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zeyoyt/ailama"&gt;AiLama&lt;/a&gt; (A Discord User App that allows you to interact with Ollama anywhere in Discord)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama_mesop/"&gt;Ollama with Google Mesop&lt;/a&gt; (Mesop Chat Client implementation with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SciPhi-AI/R2R"&gt;R2R&lt;/a&gt; (Open-source RAG engine)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elearningshow/ollama-kis"&gt;Ollama-Kis&lt;/a&gt; (A simple easy-to-use GUI with sample custom LLM for Drivers Education)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://opengpa.org"&gt;OpenGPA&lt;/a&gt; (Open-source offline-first Enterprise Agentic Application)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mateuszmigas/painting-droid"&gt;Painting Droid&lt;/a&gt; (Painting app with AI integrations)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.kerlig.com/"&gt;Kerlig AI&lt;/a&gt; (AI writing assistant for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MindWorkAI/AI-Studio"&gt;AI Studio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gyopak/sidellama"&gt;Sidellama&lt;/a&gt; (browser-based LLM client)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trypromptly/LLMStack"&gt;LLMStack&lt;/a&gt; (No-code multi-agent framework to build LLM agents and workflows)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://boltai.com"&gt;BoltAI for Mac&lt;/a&gt; (AI Chat Client for Mac)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/av/harbor"&gt;Harbor&lt;/a&gt; (Containerized LLM Toolkit with Ollama as default backend)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/szczyglis-dev/py-gpt"&gt;PyGPT&lt;/a&gt; (AI desktop assistant for Linux, Windows, and Mac)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jeffser/Alpaca"&gt;Alpaca&lt;/a&gt; (An Ollama client application for Linux and macOS made with GTK4 and Adwaita)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Significant-Gravitas/AutoGPT/raw/master/docs/content/platform/ollama.md"&gt;AutoGPT&lt;/a&gt; (AutoGPT Ollama integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.jonathanhecl.com/go-crew/"&gt;Go-CREW&lt;/a&gt; (Powerful Offline RAG in Golang)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openvmp/partcad/"&gt;PartCAD&lt;/a&gt; (CAD model generation with OpenSCAD and CadQuery)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama4j/ollama4j-web-ui"&gt;Ollama4j Web UI&lt;/a&gt; - Java-based Web UI for Ollama built with Vaadin, Spring Boot, and Ollama4j&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kspviswa/pyOllaMx"&gt;PyOllaMx&lt;/a&gt; - macOS application capable of chatting with both Ollama and Apple MLX models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cline/cline"&gt;Cline&lt;/a&gt; - Formerly known as Claude Dev is a VSCode extension for multi-file/whole-repo coding&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kangfenmao/cherry-studio"&gt;Cherry Studio&lt;/a&gt; (Desktop client with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1runeberg/confichat"&gt;ConfiChat&lt;/a&gt; (Lightweight, standalone, multi-platform, and privacy-focused LLM chat interface with optional encryption)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nickthecook/archyve"&gt;Archyve&lt;/a&gt; (RAG-enabling document library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama-crew-mesop"&gt;crewAI with Mesop&lt;/a&gt; (Mesop Web Interface to run crewAI with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chyok/ollama-gui"&gt;Tkinter-based client&lt;/a&gt; (Python tkinter-based Client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trendy-design/llmchat"&gt;LLMChat&lt;/a&gt; (Privacy focused, 100% local, intuitive all-in-one chat interface)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Leon-Sander/Local-Multimodal-AI-Chat"&gt;Local Multimodal AI Chat&lt;/a&gt; (Ollama-based LLM Chat with support for multiple features, including PDF RAG, voice chat, image-based interactions, and integration with OpenAI.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xark-argo/argo"&gt;ARGO&lt;/a&gt; (Locally download and run Ollama and Huggingface models with RAG and deep research on Mac/Windows/Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/EliasPereirah/OrionChat"&gt;OrionChat&lt;/a&gt; - OrionChat is a web interface for chatting with different AI providers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bklieger-groq/g1"&gt;G1&lt;/a&gt; (Prototype of using prompting strategies to improve the LLM's reasoning through o1-like reasoning chains.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lemonit-eric-mao/ollama-web-management"&gt;Web management&lt;/a&gt; (Web management page)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/promptery/promptery"&gt;Promptery&lt;/a&gt; (desktop client for Ollama.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JHubi1/ollama-app"&gt;Ollama App&lt;/a&gt; (Modern and easy-to-use multi-platform client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/annilq/chat-ollama"&gt;chat-ollama&lt;/a&gt; (a React Native client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tcsenpai/spacellama"&gt;SpaceLlama&lt;/a&gt; (Firefox and Chrome extension to quickly summarize web pages with ollama in a sidebar)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tcsenpai/youlama"&gt;YouLama&lt;/a&gt; (Webapp to quickly summarize any YouTube video, supporting Invidious as well)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tcsenpai/dualmind"&gt;DualMind&lt;/a&gt; (Experimental app allowing two models to talk to each other in the terminal or in a web interface)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/h1ddenpr0cess20/ollamarama-matrix"&gt;ollamarama-matrix&lt;/a&gt; (Ollama chatbot for the Matrix chat protocol)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anan1213095357/ollama-chat-app"&gt;ollama-chat-app&lt;/a&gt; (Flutter-based chat app)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.perfectmemory.ai/"&gt;Perfect Memory AI&lt;/a&gt; (Productivity AI assists personalized by what you have seen on your screen, heard, and said in the meetings)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hexastack/hexabot"&gt;Hexabot&lt;/a&gt; (A conversational AI builder)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/reddit_analyzer"&gt;Reddit Rate&lt;/a&gt; (Search and Rate Reddit topics with a weighted summation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adarshM84/OpenTalkGpt"&gt;OpenTalkGpt&lt;/a&gt; (Chrome Extension to manage open-source models supported by Ollama, create custom models, and chat with models from a user-friendly UI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vinhnx/vt.ai"&gt;VT&lt;/a&gt; (A minimal multimodal AI chat app, with dynamic conversation routing. Supports local models via Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nosia-ai/nosia"&gt;Nosia&lt;/a&gt; (Easy to install and use RAG platform based on Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nbonamy/witsy"&gt;Witsy&lt;/a&gt; (An AI Desktop application available for Mac/Windows/Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/US-Artificial-Intelligence/abbey"&gt;Abbey&lt;/a&gt; (A configurable AI interface server with notebooks, document storage, and YouTube support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dmayboroda/minima"&gt;Minima&lt;/a&gt; (RAG with on-premises or fully local workflow)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AidfulAI/aidful-ollama-model-delete"&gt;aidful-ollama-model-delete&lt;/a&gt; (User interface for simplified model cleanup)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ItzCrazyKns/Perplexica"&gt;Perplexica&lt;/a&gt; (An AI-powered search engine &amp;amp; an open-source alternative to Perplexity AI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oslook/ollama-webui"&gt;Ollama Chat WebUI for Docker &lt;/a&gt; (Support for local docker deployment, lightweight ollama webui)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/ai-tooklit/ollama-docs"&gt;AI Toolkit for Visual Studio Code&lt;/a&gt; (Microsoft-official VSCode extension to chat, test, evaluate models with Ollama support, and use them in your AI applications.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anilkay/MinimalNextOllamaChat"&gt;MinimalNextOllamaChat&lt;/a&gt; (Minimal Web UI for Chat and Model Control)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TilmanGriesel/chipper"&gt;Chipper&lt;/a&gt; AI interface for tinkerers (Ollama, Haystack RAG, Python)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CosmicEventHorizon/ChibiChat"&gt;ChibiChat&lt;/a&gt; (Kotlin-based Android app to chat with Ollama and Koboldcpp API endpoints)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qusaismael/localllm"&gt;LocalLLM&lt;/a&gt; (Minimal Web-App to run ollama models on it with a GUI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/buiducnhat/ollamazing"&gt;Ollamazing&lt;/a&gt; (Web extension to run Ollama models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benhaotang/OpenDeepResearcher-via-searxng"&gt;OpenDeepResearcher-via-searxng&lt;/a&gt; (A Deep Research equivalent endpoint with Ollama support for running locally)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AIDotNet/AntSK"&gt;AntSK&lt;/a&gt; (Out-of-the-box &amp;amp; Adaptable RAG Chatbot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1Panel-dev/MaxKB/"&gt;MaxKB&lt;/a&gt; (Ready-to-use &amp;amp; flexible RAG Chatbot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/danielekp/yla"&gt;yla&lt;/a&gt; (Web interface to freely interact with your customized models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RockChinQ/LangBot"&gt;LangBot&lt;/a&gt; (LLM-based instant messaging bots platform, with Agents, RAG features, supports multiple platforms)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1Panel-dev/1Panel/"&gt;1Panel&lt;/a&gt; (Web-based Linux Server Management Tool)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Soulter/AstrBot/"&gt;AstrBot&lt;/a&gt; (User-friendly LLM-based multi-platform chatbot with a WebUI, supporting RAG, LLM agents, and plugins integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ibrahimcetin/reins"&gt;Reins&lt;/a&gt; (Easily tweak parameters, customize system prompts per chat, and enhance your AI experiments with reasoning model support.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aharon-Bensadoun/Flufy"&gt;Flufy&lt;/a&gt; (A beautiful chat interface for interacting with Ollama's API. Built with React, TypeScript, and Material-UI.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zeozeozeo/ellama"&gt;Ellama&lt;/a&gt; (Friendly native app to chat with an Ollama instance)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mediar-ai/screenpipe"&gt;screenpipe&lt;/a&gt; Build agents powered by your screen history&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hengkysteen/ollamb"&gt;Ollamb&lt;/a&gt; (Simple yet rich in features, cross-platform built with Flutter and designed for Ollama. Try the &lt;a href="https://hengkysteen.github.io/demo/ollamb/"&gt;web demo&lt;/a&gt;.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Writeopia/Writeopia"&gt;Writeopia&lt;/a&gt; (Text editor with integration with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AppFlowy-IO/AppFlowy"&gt;AppFlowy&lt;/a&gt; (AI collaborative workspace with Ollama, cross-platform and self-hostable)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cushydigit/lumina.git"&gt;Lumina&lt;/a&gt; (A lightweight, minimal React.js frontend for interacting with Ollama servers)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/tiny-notepad"&gt;Tiny Notepad&lt;/a&gt; (A lightweight, notepad-like interface to chat with ollama available on PyPI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hellotunamayo/macLlama"&gt;macLlama (macOS native)&lt;/a&gt; (A native macOS GUI application for interacting with Ollama models, featuring a chat interface.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philberndt/GPTranslate"&gt;GPTranslate&lt;/a&gt; (A fast and lightweight, AI powered desktop translation application written with Rust and Tauri. Features real-time translation with OpenAI/Azure/Ollama.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NGC13009/ollama-launcher"&gt;ollama launcher&lt;/a&gt; (A launcher for Ollama, aiming to provide users with convenient functions such as ollama server launching, management, or configuration.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aj-Seven/ai-hub"&gt;ai-hub&lt;/a&gt; (AI Hub supports multiple models via API keys and Chat support via Ollama API.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/mayan-edms/mayan-edms"&gt;Mayan EDMS&lt;/a&gt; (Open source document management system to organize, tag, search, and automate your files with powerful Ollama driven workflows.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Cloud&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/run/docs/tutorials/gpu-gemma2-with-ollama"&gt;Google Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fly.io/docs/python/do-more/add-ollama/"&gt;Fly.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.koyeb.com/deploy/ollama"&gt;Koyeb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Terminal&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggozad/oterm"&gt;oterm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s-kostyaev/ellama"&gt;Ellama Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zweifisch/ollama"&gt;Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paradoxical-dev/neollama"&gt;neollama&lt;/a&gt; UI client for interacting with models from within Neovim&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/David-Kunz/gen.nvim"&gt;gen.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nomnivore/ollama.nvim"&gt;ollama.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marco-souza/ollero.nvim"&gt;ollero.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gerazov/ollama-chat.nvim"&gt;ollama-chat.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huynle/ogpt.nvim"&gt;ogpt.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/karthink/gptel"&gt;gptel Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dustinblackman/oatmeal"&gt;Oatmeal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pgibler/cmdh"&gt;cmdh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/npahlfer/ooo"&gt;ooo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reid41/shell-pilot"&gt;shell-pilot&lt;/a&gt;(Interact with models via pure shell scripts on Linux or macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pythops/tenere"&gt;tenere&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/taketwo/llm-ollama"&gt;llm-ollama&lt;/a&gt; for &lt;a href="https://llm.datasette.io/en/stable/"&gt;Datasette's LLM CLI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anaisbetts/typechat-cli"&gt;typechat-cli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/djcopley/ShellOracle"&gt;ShellOracle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yusufcanb/tlm"&gt;tlm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ericcurtin/podman-ollama"&gt;podman-ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sammcj/gollama"&gt;gollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paulrobello/parllama"&gt;ParLlama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cognitivetech/ollama-ebook-summary/"&gt;Ollama eBook Summary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama_moe"&gt;Ollama Mixture of Experts (MOE) in 50 lines of code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pepo-ec/vim-intelligence-bridge"&gt;vim-intelligence-bridge&lt;/a&gt; Simple interaction of "Ollama" with the Vim editor&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x-cmd.com/mod/ollama"&gt;x-cmd ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/drunkwcodes/bb7"&gt;bb7&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marcusziade/Swollama"&gt;SwollamaCLI&lt;/a&gt; bundled with the Swollama Swift package. &lt;a href="https://github.com/marcusziade/Swollama?tab=readme-ov-file#cli-usage"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sigoden/aichat"&gt;aichat&lt;/a&gt; All-in-one LLM CLI tool featuring Shell Assistant, Chat-REPL, RAG, AI tools &amp;amp; agents, with access to OpenAI, Claude, Gemini, Ollama, Groq, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rrg92/powershai"&gt;PowershAI&lt;/a&gt; PowerShell module that brings AI to terminal on Windows, including support for Ollama&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Abyss-c0re/deepshell"&gt;DeepShell&lt;/a&gt; Your self-hosted AI assistant. Interactive Shell, Files and Folders analysis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xyproto/orbiton"&gt;orbiton&lt;/a&gt; Configuration-free text editor and IDE with support for tab completion with Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/molbal/orca-cli"&gt;orca-cli&lt;/a&gt; Ollama Registry CLI Application - Browse, pull, and download models from Ollama Registry in your terminal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonathanhecl/gguf-to-ollama"&gt;GGUF-to-Ollama&lt;/a&gt; - Importing GGUF to Ollama made easy (multiplatform)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama_strands"&gt;AWS-Strands-With-Ollama&lt;/a&gt; - AWS Strands Agents with Ollama Examples&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/attogram/ollama-multirun"&gt;ollama-multirun&lt;/a&gt; - A bash shell script to run a single prompt against any or all of your locally installed ollama models, saving the output and performance statistics as easily navigable web pages. (&lt;a href="https://attogram.github.io/ai_test_zone/"&gt;Demo&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/attogram/ollama-bash-toolshed"&gt;ollama-bash-toolshed&lt;/a&gt; - Bash scripts to chat with tool using models. Add new tools to your shed with ease. Runs on Ollama.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Apple Vision Pro&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/swift-chat"&gt;SwiftChat&lt;/a&gt; (Cross-platform AI chat app supporting Apple Vision Pro via "Designed for iPad")&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AugustDev/enchanted"&gt;Enchanted&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Database&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/timescale/pgai"&gt;pgai&lt;/a&gt; - PostgreSQL as a vector database (Create and search embeddings from Ollama models using pgvector) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/timescale/pgai/raw/main/docs/vectorizer-quick-start.md"&gt;Get started guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mindsdb/mindsdb/raw/staging/mindsdb/integrations/handlers/ollama_handler/README.md"&gt;MindsDB&lt;/a&gt; (Connects Ollama models with nearly 200 data platforms and apps)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philippgille/chromem-go/raw/v0.5.0/embed_ollama.go"&gt;chromem-go&lt;/a&gt; with &lt;a href="https://github.com/philippgille/chromem-go/tree/v0.5.0/examples/rag-wikipedia-ollama"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dbkangaroo/kangaroo"&gt;Kangaroo&lt;/a&gt; (AI-powered SQL client and admin tool for popular databases)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Package managers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://archlinux.org/packages/extra/x86_64/ollama/"&gt;Pacman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gentoo/guru/tree/master/app-misc/ollama"&gt;Gentoo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://formulae.brew.sh/formula/ollama"&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://artifacthub.io/packages/helm/ollama-helm/ollama"&gt;Helm Chart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeberg.org/tusharhero/ollama-guix"&gt;Guix channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://search.nixos.org/packages?show=ollama&amp;amp;from=0&amp;amp;size=50&amp;amp;sort=relevance&amp;amp;type=packages&amp;amp;query=ollama"&gt;Nix package&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flox.dev/blog/ollama-part-one"&gt;Flox&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Libraries&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://python.langchain.com/docs/integrations/chat/ollama/"&gt;LangChain&lt;/a&gt; and &lt;a href="https://js.langchain.com/docs/integrations/chat/ollama/"&gt;LangChain.js&lt;/a&gt; with &lt;a href="https://js.langchain.com/docs/tutorials/local_rag/"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://firebase.google.com/docs/genkit/plugins/ollama"&gt;Firebase Genkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/crewAIInc/crewAI"&gt;crewAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://remembersoftwares.github.io/yacana/"&gt;Yacana&lt;/a&gt; (User-friendly multi-agent framework for brainstorming and executing predetermined flows with built-in tool integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spring-projects/spring-ai"&gt;Spring AI&lt;/a&gt; with &lt;a href="https://docs.spring.io/spring-ai/reference/api/chat/ollama-chat.html"&gt;reference&lt;/a&gt; and &lt;a href="https://github.com/tzolov/ollama-tools"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tmc/langchaingo/"&gt;LangChainGo&lt;/a&gt; with &lt;a href="https://github.com/tmc/langchaingo/tree/main/examples/ollama-completion-example"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langchain4j/langchain4j"&gt;LangChain4j&lt;/a&gt; with &lt;a href="https://github.com/langchain4j/langchain4j-examples/tree/main/ollama-examples/src/main/java"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Abraxas-365/langchain-rust"&gt;LangChainRust&lt;/a&gt; with &lt;a href="https://github.com/Abraxas-365/langchain-rust/raw/main/examples/llm_ollama.rs"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tryAGI/LangChain"&gt;LangChain for .NET&lt;/a&gt; with &lt;a href="https://github.com/tryAGI/LangChain/raw/main/examples/LangChain.Samples.OpenAI/Program.cs"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/theodo-group/LLPhant?tab=readme-ov-file#ollama"&gt;LLPhant&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.llamaindex.ai/en/stable/examples/llm/ollama/"&gt;LlamaIndex&lt;/a&gt; and &lt;a href="https://ts.llamaindex.ai/modules/llms/available_llms/ollama"&gt;LlamaIndexTS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BerriAI/litellm"&gt;LiteLLM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/presbrey/ollamafarm"&gt;OllamaFarm for Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/awaescher/OllamaSharp"&gt;OllamaSharp for .NET&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gbaptista/ollama-ai"&gt;Ollama for Ruby&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pepperoni21/ollama-rs"&gt;Ollama-rs for Rust&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmont-dev/ollama-hpp"&gt;Ollama-hpp for C++&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama4j/ollama4j"&gt;Ollama4j for Java&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://modelfusion.dev/integration/model-provider/ollama"&gt;ModelFusion Typescript Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kevinhermawan/OllamaKit"&gt;OllamaKit for Swift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/breitburg/dart-ollama"&gt;Ollama for Dart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudstudio/ollama-laravel"&gt;Ollama for Laravel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/davidmigloz/langchain_dart"&gt;LangChainDart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/semantic-kernel/tree/main/python/semantic_kernel/connectors/ai/ollama"&gt;Semantic Kernel - Python&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deepset-ai/haystack-integrations/raw/main/integrations/ollama.md"&gt;Haystack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brainlid/langchain"&gt;Elixir LangChain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JBGruber/rollama"&gt;Ollama for R - rollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hauselin/ollama-r"&gt;Ollama for R - ollama-r&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lebrunel/ollama-ex"&gt;Ollama-ex for Elixir&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/b-tocs/abap_btocs_ollama"&gt;Ollama Connector for SAP ABAP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://testcontainers.com/modules/ollama/"&gt;Testcontainers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://portkey.ai/docs/welcome/integration-guides/ollama"&gt;Portkey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/svilupp/PromptingTools.jl"&gt;PromptingTools.jl&lt;/a&gt; with an &lt;a href="https://svilupp.github.io/PromptingTools.jl/dev/examples/working_with_ollama"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Project-Llama/llamascript"&gt;LlamaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emirsahin1/llm-axe"&gt;llm-axe&lt;/a&gt; (Python Toolkit for Building LLM Powered Apps)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.gollm.co/examples/ollama-example"&gt;Gollm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonathanhecl/gollama"&gt;Gollama for Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xyproto/ollamaclient"&gt;Ollamaclient for Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/tozd/go/fun"&gt;High-level function abstraction in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ArdaGnsrn/ollama-php"&gt;Ollama PHP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agents-flex/agents-flex"&gt;Agents-Flex for Java&lt;/a&gt; with &lt;a href="https://github.com/agents-flex/agents-flex/tree/main/agents-flex-llm/agents-flex-llm-ollama/src/test/java/com/agentsflex/llm/ollama"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/parakeet-nest/parakeet"&gt;Parakeet&lt;/a&gt; is a GoLang library, made to simplify the development of small generative AI applications with Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygill/haverscript"&gt;Haverscript&lt;/a&gt; with &lt;a href="https://github.com/andygill/haverscript/tree/main/examples"&gt;examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattt/ollama-swift"&gt;Ollama for Swift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marcusziade/Swollama"&gt;Swollama for Swift&lt;/a&gt; with &lt;a href="https://marcusziade.github.io/Swollama/documentation/swollama/"&gt;DocC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prasad89/golamify"&gt;GoLamify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tusharad/ollama-haskell"&gt;Ollama for Haskell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nbonamy/multi-llm-ts"&gt;multi-llm-ts&lt;/a&gt; (A Typescript/JavaScript library allowing access to different LLM in a unified API)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lofcz/llmtornado"&gt;LlmTornado&lt;/a&gt; (C# library providing a unified interface for major FOSS &amp;amp; Commercial inference APIs)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dravenk/ollama-zig"&gt;Ollama for Zig&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lunary-ai/abso"&gt;Abso&lt;/a&gt; (OpenAI-compatible TypeScript SDK for any LLM provider)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goodreasonai/nichey"&gt;Nichey&lt;/a&gt; is a Python package for generating custom wikis for your research topic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kassane/ollama-d"&gt;Ollama for D&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HardCodeDev777/OllamaPlusPlus"&gt;OllamaPlusPlus&lt;/a&gt; (Very simple C++ library for Ollama)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mobile&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/swift-chat"&gt;SwiftChat&lt;/a&gt; (Lightning-fast Cross-platform AI chat app with native UI for Android, iOS, and iPad)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AugustDev/enchanted"&gt;Enchanted&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Mobile-Artificial-Intelligence/maid"&gt;Maid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JHubi1/ollama-app"&gt;Ollama App&lt;/a&gt; (Modern and easy-to-use multi-platform client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1runeberg/confichat"&gt;ConfiChat&lt;/a&gt; (Lightweight, standalone, multi-platform, and privacy-focused LLM chat interface with optional encryption)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sunshine0523/OllamaServer"&gt;Ollama Android Chat&lt;/a&gt; (No need for Termux, start the Ollama service with one click on an Android device)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ibrahimcetin/reins"&gt;Reins&lt;/a&gt; (Easily tweak parameters, customize system prompts per chat, and enhance your AI experiments with reasoning model support.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Extensions &amp;amp; Plugins&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MassimilianoPasquini97/raycast_ollama"&gt;Raycast extension&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mxyng/discollama"&gt;Discollama&lt;/a&gt; (Discord bot inside the Ollama discord channel)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/continuedev/continue"&gt;Continue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thewh1teagle/vibe"&gt;Vibe&lt;/a&gt; (Transcribe and analyze meetings with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hinterdupfinger/obsidian-ollama"&gt;Obsidian Ollama plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/omagdy7/ollama-logseq"&gt;Logseq Ollama plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andersrex/notesollama"&gt;NotesOllama&lt;/a&gt; (Apple Notes Ollama plugin)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samalba/dagger-chatbot"&gt;Dagger Chatbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mekb-turtle/discord-ai-bot"&gt;Discord AI Bot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ruecat/ollama-telegram"&gt;Ollama Telegram Bot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ej52/hass-ollama-conversation"&gt;Hass Ollama Conversation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abrenneke/rivet-plugin-ollama"&gt;Rivet plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/longy2k/obsidian-bmo-chatbot"&gt;Obsidian BMO Chatbot plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/herval/cliobot"&gt;Cliobot&lt;/a&gt; (Telegram bot with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/logancyang/obsidian-copilot"&gt;Copilot for Obsidian plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pfrankov/obsidian-local-gpt"&gt;Obsidian Local GPT plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.openinterpreter.com/language-model-setup/local-models/ollama"&gt;Open Interpreter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ex3ndr/llama-coder"&gt;Llama Coder&lt;/a&gt; (Copilot alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bernardo-bruning/ollama-copilot"&gt;Ollama Copilot&lt;/a&gt; (Proxy that allows you to use Ollama as a copilot like GitHub Copilot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rjmacarthy/twinny"&gt;twinny&lt;/a&gt; (Copilot and Copilot chat alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RussellCanfield/wingman-ai"&gt;Wingman-AI&lt;/a&gt; (Copilot code and chat alternative using Ollama and Hugging Face)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/n4ze3m/page-assist"&gt;Page Assist&lt;/a&gt; (Chrome Extension)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/imoize/plasmoid-ollamacontrol"&gt;Plasmoid Ollama Control&lt;/a&gt; (KDE Plasma extension that allows you to quickly manage/control Ollama model)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tusharhero/aitelegrambot"&gt;AI Telegram Bot&lt;/a&gt; (Telegram bot using Ollama in backend)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yaroslavyaroslav/OpenAI-sublime-text"&gt;AI ST Completion&lt;/a&gt; (Sublime Text 4 AI assistant plugin with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kevinthedang/discord-ollama"&gt;Discord-Ollama Chat Bot&lt;/a&gt; (Generalized TypeScript Discord Bot w/ Tuning Documentation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/josStorer/chatGPTBox"&gt;ChatGPTBox: All in one browser extension&lt;/a&gt; with &lt;a href="https://github.com/josStorer/chatGPTBox/issues/616#issuecomment-1975186467"&gt;Integrating Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapmd73/Companion"&gt;Discord AI chat/moderation bot&lt;/a&gt; Chat/moderation bot written in python. Uses Ollama to create personalities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nischalj10/headless-ollama"&gt;Headless Ollama&lt;/a&gt; (Scripts to automatically install ollama client &amp;amp; models on any OS for apps that depend on ollama server)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xuyangbocn/terraform-aws-self-host-llm"&gt;Terraform AWS Ollama &amp;amp; Open WebUI&lt;/a&gt; (A Terraform module to deploy on AWS a ready-to-use Ollama service, together with its front-end Open WebUI service.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jakubburkiewicz/node-red-contrib-ollama"&gt;node-red-contrib-ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ivostoykov/localAI"&gt;Local AI Helper&lt;/a&gt; (Chrome and Firefox extensions that enable interactions with the active tab and customisable API endpoints. Includes secure storage for user prompts.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jake83741/vnc-lm"&gt;vnc-lm&lt;/a&gt; (Discord bot for messaging with LLMs through Ollama and LiteLLM. Seamlessly move between local and flagship models.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SilasMarvin/lsp-ai"&gt;LSP-AI&lt;/a&gt; (Open-source language server for AI-powered functionality)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Palm1r/QodeAssist"&gt;QodeAssist&lt;/a&gt; (AI-powered coding assistant plugin for Qt Creator)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ECuiDev/obsidian-quiz-generator"&gt;Obsidian Quiz Generator plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philffm/ai-summary-helper"&gt;AI Summmary Helper plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/suncloudsmoon/TextCraft"&gt;TextCraft&lt;/a&gt; (Copilot in Word alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zeitlings/alfred-ollama"&gt;Alfred Ollama&lt;/a&gt; (Alfred Workflow)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adarshM84/TextLLaMA"&gt;TextLLaMA&lt;/a&gt; A Chrome Extension that helps you write emails, correct grammar, and translate into any language&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zyphixor/simple-discord-ai"&gt;Simple-Discord-AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/innightwolfsleep/llm_telegram_bot"&gt;LLM Telegram Bot&lt;/a&gt; (telegram bot, primary for RP. Oobabooga-like buttons, &lt;a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui"&gt;A1111&lt;/a&gt; API integration e.t.c)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sammcj/mcp-llm"&gt;mcp-llm&lt;/a&gt; (MCP Server to allow LLMs to call other LLMs)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HardCodeDev777/SimpleOllamaUnity"&gt;SimpleOllamaUnity&lt;/a&gt; (Unity Engine extension for communicating with Ollama in a few lines of code. Also works at runtime)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HardCodeDev777/UnityCodeLama"&gt;UnityCodeLama&lt;/a&gt; (Unity Edtior tool to analyze scripts via Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NativeMindBrowser/NativeMindExtension"&gt;NativeMind&lt;/a&gt; (Private, on-device AI Assistant, no cloud dependencies)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gmai.premex.se/"&gt;GMAI - Gradle Managed AI&lt;/a&gt; (Gradle plugin for automated Ollama lifecycle management during build phases)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Supported backends&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggml-org/llama.cpp"&gt;llama.cpp&lt;/a&gt; project founded by Georgi Gerganov.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Observability&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.comet.com/docs/opik/cookbook/ollama"&gt;Opik&lt;/a&gt; is an open-source platform to debug, evaluate, and monitor your LLM applications, RAG systems, and agentic workflows with comprehensive tracing, automated evaluations, and production-ready dashboards. Opik supports native intergration to Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lunary.ai/docs/integrations/ollama"&gt;Lunary&lt;/a&gt; is the leading open-source LLM observability platform. It provides a variety of enterprise-grade features such as real-time analytics, prompt templates management, PII masking, and comprehensive agent tracing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openlit/openlit"&gt;OpenLIT&lt;/a&gt; is an OpenTelemetry-native tool for monitoring Ollama Applications &amp;amp; GPUs using traces and metrics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.honeyhive.ai/integrations/ollama"&gt;HoneyHive&lt;/a&gt; is an AI observability and evaluation platform for AI agents. Use HoneyHive to evaluate agent performance, interrogate failures, and monitor quality in production.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://langfuse.com/docs/integrations/ollama"&gt;Langfuse&lt;/a&gt; is an open source LLM observability platform that enables teams to collaboratively monitor, evaluate and debug AI applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mlflow.org/docs/latest/llms/tracing/index.html#automatic-tracing"&gt;MLflow Tracing&lt;/a&gt; is an open source LLM observability tool with a convenient API to log and visualize traces, making it easy to debug and evaluate GenAI applications.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>XTLS/Xray-core</title>
      <link>https://github.com/XTLS/Xray-core</link>
      <description>&lt;p&gt;Xray, Penetrates Everything. Also the best v2ray-core. Where the magic happens. An open platform for various uses.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Project X&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS"&gt;Project X&lt;/a&gt; originates from XTLS protocol, providing a set of network tools such as &lt;a href="https://github.com/XTLS/Xray-core"&gt;Xray-core&lt;/a&gt; and &lt;a href="https://github.com/XTLS/REALITY"&gt;REALITY&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS/Xray-core#readme"&gt;README&lt;/a&gt; is open, so feel free to submit your project &lt;a href="https://github.com/XTLS/Xray-core/pulls"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Donation &amp;amp; NFTs&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/1"&gt;Collect a Project X NFT to support the development of Project X!&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/1"&gt;&lt;img alt="Project X NFT" width="150px" src="https://raw2.seadn.io/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/7fa9ce900fb39b44226348db330e32/8b7fa9ce900fb39b44226348db330e32.svg?sanitize=true"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ETH/USDT/USDC: &lt;code&gt;0xDc3Fe44F0f25D13CACb1C4896CD0D321df3146Ee&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REALITY NFT: &lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/2"&gt;https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/2&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Related links: &lt;a href="https://opensea.io/collection/xtls"&gt;https://opensea.io/collection/xtls&lt;/a&gt;, &lt;a href="https://github.com/XTLS/Xray-core/discussions/3633"&gt;Announcement of NFTs by Project X&lt;/a&gt;, &lt;a href="https://github.com/XTLS/Xray-core/discussions/4113"&gt;XHTTP: Beyond REALITY&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS/Xray-core/raw/main/LICENSE"&gt;Mozilla Public License Version 2.0&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://xtls.github.io"&gt;Project X Official Website&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Telegram&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectXray"&gt;Project X&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectXtls"&gt;Project X Channel&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectVless"&gt;Project VLESS&lt;/a&gt; (–†—É—Å—Å–∫–∏–π)&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectXhttp"&gt;Project XHTTP&lt;/a&gt; (Persian)&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux Script 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-install"&gt;XTLS/Xray-install&lt;/a&gt; (&lt;strong&gt;Official&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/team-cloudchaser/tempest"&gt;tempest&lt;/a&gt; (supports &lt;a href="https://systemd.io"&gt;&lt;code&gt;systemd&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/OpenRC/openrc"&gt;OpenRC&lt;/a&gt;; Linux-only)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Docker 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://ghcr.io/xtls/xray-core"&gt;ghcr.io/xtls/xray-core&lt;/a&gt; (&lt;strong&gt;Official&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://hub.docker.com/r/teddysun/xray"&gt;teddysun/xray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/wulabing/xray_docker"&gt;wulabing/xray_docker&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Web Panel - &lt;strong&gt;WARNING: Please DO NOT USE plain HTTP panels like 3X-UI&lt;/strong&gt;, as they are believed to be bribed by Iran GFW for supporting plain HTTP by default and refused to change (&lt;a href="https://github.com/XTLS/Xray-core/pull/3884#issuecomment-2439595331"&gt;https://github.com/XTLS/Xray-core/pull/3884#issuecomment-2439595331&lt;/a&gt;), which has already put many users' data security in danger in the past few years. &lt;strong&gt;If you are already using 3X-UI, please switch to the following panels, which are verified to support HTTPS and SSH port forwarding only:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/remnawave/panel"&gt;Remnawave&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Gozargah/Marzban"&gt;Marzban&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/qist/xray-ui"&gt;Xray-UI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hiddify/Hiddify-Manager"&gt;Hiddify&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;One Click 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/zxcvos/Xray-script"&gt;Xray-REALITY&lt;/a&gt;, &lt;a href="https://github.com/sajjaddg/xray-reality"&gt;xray-reality&lt;/a&gt;, &lt;a href="https://github.com/aleskxyz/reality-ezpz"&gt;reality-ezpz&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hello-yunshu/Xray_bash_onekey"&gt;Xray_bash_onekey&lt;/a&gt;, &lt;a href="https://github.com/LordPenguin666/XTool"&gt;XTool&lt;/a&gt;, &lt;a href="https://github.com/vpainless/vpainless"&gt;VPainLess&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mack-a/v2ray-agent"&gt;v2ray-agent&lt;/a&gt;, &lt;a href="https://github.com/wulabing/Xray_onekey"&gt;Xray_onekey&lt;/a&gt;, &lt;a href="https://github.com/proxysu/ProxySU"&gt;ProxySU&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Magisk 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Asterisk4Magisk/Xray4Magisk"&gt;Xray4Magisk&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/E7KMbb/Xray_For_Magisk"&gt;Xray_For_Magisk&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Homebrew 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;brew install xray&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Example 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/REALITY#readme"&gt;VLESS-XTLS-uTLS-REALITY&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-examples/tree/main/VLESS-TCP-XTLS-Vision"&gt;VLESS-TCP-XTLS-Vision&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-examples/tree/main/All-in-One-fallbacks-Nginx"&gt;All-in-One-fallbacks-Nginx&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Xray-examples 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-examples"&gt;XTLS/Xray-examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/chika0801/Xray-examples"&gt;chika0801/Xray-examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lxhao61/integrated-examples"&gt;lxhao61/integrated-examples&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Tutorial 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/chika0801/Xray-install"&gt;XTLS Vision&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://cscot.pages.dev/2023/03/02/Xray-REALITY-tutorial/"&gt;REALITY (English)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SasukeFreestyle/XTLS-Iran-Reality"&gt;XTLS-Iran-Reality (English)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://computerscot.github.io/vless-xtls-utls-reality-steal-oneself.html"&gt;Xray REALITY with 'steal oneself' (English)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://g800.pages.dev/wireguard"&gt;Xray with WireGuard inbound (English)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;GUI Clients&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenWrt 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/xiaorouji/openwrt-passwall"&gt;PassWall&lt;/a&gt;, &lt;a href="https://github.com/xiaorouji/openwrt-passwall2"&gt;PassWall 2&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/fw876/helloworld"&gt;ShadowSocksR Plus+&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/yichya/luci-app-xray"&gt;luci-app-xray&lt;/a&gt; (&lt;a href="https://github.com/yichya/openwrt-xray"&gt;openwrt-xray&lt;/a&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Asuswrt-Merlin 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/DanielLavrushin/asuswrt-merlin-xrayui"&gt;XRAYUI&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Windows 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/2dust/v2rayN"&gt;v2rayN&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Furious"&gt;Furious&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/InvisibleManVPN/InvisibleMan-XRayClient"&gt;Invisible Man - Xray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Android 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/2dust/v2rayNG"&gt;v2rayNG&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/X-flutter"&gt;X-flutter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SaeedDev94/Xray"&gt;SaeedDev94/Xray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lhear/SimpleXray"&gt;SimpleXray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;iOS &amp;amp; macOS arm64 &amp;amp; tvOS 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/happ-proxy-utility/id6504287215"&gt;Happ&lt;/a&gt; (&lt;a href="https://apps.apple.com/us/app/happ-proxy-utility-for-tv/id6748297274"&gt;tvOS&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/streisand/id6450534064"&gt;Streisand&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/OneXray/OneXray"&gt;OneXray&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;macOS arm64 &amp;amp; x64 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/happ-proxy-utility/id6504287215"&gt;Happ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/yanue/V2rayU"&gt;V2rayU&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tzmax/V2RayXS"&gt;V2RayXS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Furious"&gt;Furious&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/OneXray/OneXray"&gt;OneXray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/goxray/desktop"&gt;GoXRay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Linux 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/v2rayA/v2rayA"&gt;v2rayA&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Furious"&gt;Furious&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ketetefid/GorzRay"&gt;GorzRay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/goxray/desktop"&gt;GoXRay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Others that support VLESS, XTLS, REALITY, XUDP, PLUX...&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;iOS &amp;amp; macOS arm64 &amp;amp; tvOS 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/shadowrocket/id932747118"&gt;Shadowrocket&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/us/app/loon/id1373567447"&gt;Loon&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Xray Tools 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lilendian0x00/xray-knife"&gt;xray-knife&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/kutovoys/xray-checker"&gt;xray-checker&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Xray Wrapper 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/libXray"&gt;XTLS/libXray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/remnawave/xtls-sdk"&gt;xtls-sdk&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hiddify/xtlsapi"&gt;xtlsapi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/2dust/AndroidLibXrayLite"&gt;AndroidLibXrayLite&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Xray-core-python"&gt;Xray-core-python&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XVGuardian/xray-api"&gt;xray-api&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/XrayR-project/XrayR"&gt;XrayR&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XrayR-project/XrayR-release"&gt;XrayR-release&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/missuo/XrayR-V2Board"&gt;XrayR-V2Board&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Cores 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/amnezia-vpn"&gt;Amnezia VPN&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/MetaCubeX/mihomo"&gt;mihomo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SagerNet/sing-box"&gt;sing-box&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS/Xray-core/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://deepwiki.com/XTLS/Xray-core"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-core/releases/tag/v1.0.0"&gt;Xray-core v1.0.0&lt;/a&gt; was forked from &lt;a href="https://github.com/v2fly/v2ray-core/commit/9a03cc5c98d04cc28320fcee26dbc236b3291256"&gt;v2fly-core 9a03cc5&lt;/a&gt;, and we have made &amp;amp; accumulated a huge number of enhancements over time, check &lt;a href="https://github.com/XTLS/Xray-core/releases"&gt;the release notes for each version&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For third-party projects used in &lt;a href="https://github.com/XTLS/Xray-core"&gt;Xray-core&lt;/a&gt;, check your local or &lt;a href="https://github.com/XTLS/Xray-core/raw/main/go.mod"&gt;the latest go.mod&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;One-line Compilation&lt;/h2&gt; 
&lt;h3&gt;Windows (PowerShell)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;$env:CGO_ENABLED=0
go build -o xray.exe -trimpath -buildvcs=false -ldflags="-s -w -buildid=" -v ./main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux / macOS&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;CGO_ENABLED=0 go build -o xray -trimpath -buildvcs=false -ldflags="-s -w -buildid=" -v ./main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Reproducible Releases&lt;/h3&gt; 
&lt;p&gt;Make sure that you are using the same Go version, and remember to set the git commit id (7 bytes):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;CGO_ENABLED=0 go build -o xray -trimpath -buildvcs=false -ldflags="-X github.com/xtls/xray-core/core.build=REPLACE -s -w -buildid=" -v ./main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/XTLS/Xray-core"&gt;&lt;img src="https://starchart.cc/XTLS/Xray-core.svg?sanitize=true" alt="Stargazers over time"&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>