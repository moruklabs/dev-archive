<rss version="2.0">
  <channel>
    <title>GitHub Rust Weekly Trending</title>
    <description>Weekly Trending of Rust in GitHub</description>
    <pubDate>Fri, 29 Aug 2025 01:47:50 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>intentee/paddler</title>
      <link>https://github.com/intentee/paddler</link>
      <description>&lt;p&gt;Open-source LLMOps platform for hosting and scaling AI in your own infrastructure üèìü¶ô&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Paddler&lt;/h1&gt; 
&lt;p&gt;Digital products and their users need privacy, reliability, cost control and an option to be independent from third party vendors.&lt;/p&gt; 
&lt;p&gt;Paddler is an open-source LLMOps platform for organizations that host and scale open-source models in their own infrastructure.&lt;/p&gt; 
&lt;h2&gt;Key features&lt;/h2&gt; 
&lt;img align="right" src="https://github.com/user-attachments/assets/19e74262-1918-4b1d-9b4c-bcb4f0ab79f5" /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Inference through a built-in &lt;a href="https://github.com/ggml-org/llama.cpp"&gt;llama.cpp&lt;/a&gt; engine&lt;/li&gt; 
 &lt;li&gt;Load balancing&lt;/li&gt; 
 &lt;li&gt;Works through agents that can be added dynamically, allowing integration with autoscaling tools&lt;/li&gt; 
 &lt;li&gt;Request buffering, enabling scaling from zero hosts&lt;/li&gt; 
 &lt;li&gt;Dynamic model swapping&lt;/li&gt; 
 &lt;li&gt;Built-in web admin panel for management, monitoring and testing&lt;/li&gt; 
 &lt;li&gt;Observability metrics&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;For whom?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Product teams that need LLM inference and embeddings in their features&lt;/li&gt; 
 &lt;li&gt;DevOps/LLMOps teams that need to run and deploy LLMs at scale&lt;/li&gt; 
 &lt;li&gt;Organizations handling sensitive data with high compliance and privacy requirements (medical, financial, etc.)&lt;/li&gt; 
 &lt;li&gt;Organizations wanting to achieve predictable LLM costs instead of being exposed to per-token pricing&lt;/li&gt; 
 &lt;li&gt;Product leaders who need reliable model performance to maintain consistent user experience of their AI-based features&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit our &lt;a href="https://paddler.intentee.com/docs/introduction/what-is-paddler/"&gt;documentation page&lt;/a&gt; to install Paddler and get started with it.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://paddler.intentee.com/api/introduction/using-paddler-api/"&gt;API documentation&lt;/a&gt; is also available.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=aT6QCL8lk08"&gt;Video overview&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;There are multiple ways to install Paddler, but the goal is to obtain the &lt;code&gt;paddler&lt;/code&gt; binary and make it available in your system.&lt;/p&gt; 
&lt;p&gt;You can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Option 1: Download the latest release from our &lt;a href="https://github.com/intentee/paddler/releases"&gt;GitHub releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Option 2: Build Paddler from source&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Using Paddler&lt;/h3&gt; 
&lt;p&gt;The entire Paddler functionality is available through the &lt;code&gt;paddler&lt;/code&gt; command.&lt;/p&gt; 
&lt;p&gt;You can run &lt;code&gt;paddler --help&lt;/code&gt; to see the available commands and options.&lt;/p&gt; 
&lt;p&gt;Read more about &lt;a href="https://paddler.intentee.com/docs/introduction/installation/"&gt;installation and initial setup&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How does it work?&lt;/h2&gt; 
&lt;p&gt;Paddler is built for an easy set up. It comes as a self-contained binary with only two deployable components, the &lt;code&gt;balancer&lt;/code&gt; and the &lt;code&gt;agents&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The&amp;nbsp;&lt;code&gt;balancer&lt;/code&gt;&amp;nbsp;exposes the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Inference service (used by applications that connect to it to obtain tokens or embeddings)&lt;/li&gt; 
 &lt;li&gt;Management service, which manages the Paddler's setup internally&lt;/li&gt; 
 &lt;li&gt;Web admin panel that lets you view and test your Paddler setup&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;Agents&lt;/code&gt; are usually deployed on separate instances. They further distribute the incoming requests to &lt;code&gt;slots&lt;/code&gt;, which are responsible for generating tokens and embeddings.&lt;/p&gt; 
&lt;p&gt;Paddler uses a built-in llama.cpp engine for inference, but has its own implementation of llama.cpp slots which keep their own context and KV cache.&lt;/p&gt; 
&lt;h3&gt;Web admin panel&lt;/h3&gt; 
&lt;p&gt;Paddler comes with a built-in web admin panel.&lt;/p&gt; 
&lt;p&gt;You can use it to monitor your Paddler fleet: &lt;img width="1587" height="732" alt="paddler-web-admin-panel" src="https://github.com/user-attachments/assets/de26312e-e83e-4def-8326-0aa5d559396c" /&gt;&lt;/p&gt; 
&lt;p&gt;Add and update your model and customize the chat template and inference parameters: &lt;img width="1422" height="1584" alt="paddler-model" src="https://github.com/user-attachments/assets/dd9d7eb0-a990-4b1c-b523-7286956baeb2" /&gt;&lt;/p&gt; 
&lt;p&gt;And use GUI to test the inference: &lt;img width="1413" height="984" alt="paddler-prompt" src="https://github.com/user-attachments/assets/30b35b5a-c3de-4acc-a602-c7ffaa21d0a6" /&gt;&lt;/p&gt; 
&lt;h2&gt;Starting out&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://paddler.intentee.com/docs/starting-out/setup-a-basic-llm-cluster/"&gt;Setup a basic LLM cluster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://paddler.intentee.com/docs/starting-out/using-web-admin-panel/"&gt;Use Paddler's web admin panel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://paddler.intentee.com/docs/starting-out/generating-tokens-and-embeddings/"&gt;Generate tokens and embeddings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://paddler.intentee.com/docs/starting-out/using-function-calling/"&gt;Use function calling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://paddler.intentee.com/docs/starting-out/multi-agent-fleet/"&gt;Create a multi agent fleet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://paddler.intentee.com/docs/starting-out/going-beyond-a-single-device/"&gt;Go beyond a single device&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why the Name&lt;/h2&gt; 
&lt;p&gt;We initially wanted to use &lt;a href="https://raft.github.io/"&gt;Raft&lt;/a&gt; consensus algorithm (thus Paddler, because it paddles on a Raft), but eventually dropped that idea. The name stayed, though.&lt;/p&gt; 
&lt;p&gt;Later, people started sending us the "that's a paddlin'" clip from The Simpsons, and we just embraced it.&lt;/p&gt; 
&lt;h2&gt;Community and contributions&lt;/h2&gt; 
&lt;p&gt;We keep everything simple and on GitHub. Please use GitHub discussions for community conversations, and feel free to contribute.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>eythaann/Seelen-UI</title>
      <link>https://github.com/eythaann/Seelen-UI</link>
      <description>&lt;p&gt;The Fully Customizable Desktop Environment for Windows 10/11.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/logo.svg?sanitize=true" width="44" align="top" alt="Seelen UI Logo" /&gt; Seelen UI &lt;/h1&gt; 
&lt;h2 align="center"&gt; Fully Customizable Desktop Environment for Windows &lt;br /&gt; Available in 70+ Languages &lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/eythaann/seelen-ui/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/eythaann/seelen-ui.svg?sanitize=true" alt="Contributors" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eythaann/seelen-ui/commits/main"&gt;&lt;img src="https://img.shields.io/github/last-commit/eythaann/seelen-ui.svg?sanitize=true" alt="Last Commit" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eythaann/seelen-ui/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/eythaann/seelen-ui.svg?sanitize=true" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eythaann/seelen-ui/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/eythaann/seelen-ui/total.svg?sanitize=true" alt="Downloads" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/preview.png" width="100%" alt="Screenshot of Seelen UI desktop showing a customized desktop environment" /&gt; 
&lt;table align="center"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://apps.microsoft.com/detail/Seelen%20UI/9p67c2d4t9fb?mode=full" target="_blank" rel="noopener noreferrer" aria-label="Download Seelen UI from Microsoft Store"&gt; &lt;img src="https://get.microsoft.com/images/en-us%20dark.svg?sanitize=true" width="100%" alt="Download Seelen UI from Microsoft Store" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://discord.gg/ABfASx5ZAJ" target="_blank" rel="noopener noreferrer" aria-label="Join the Seelen UI Discord community"&gt; &lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/discord-alt.png" width="100%" alt="Join the Seelen UI Discord community" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://www.digitalocean.com/?refcode=955c7335abf5&amp;amp;utm_campaign=Referral_Invite&amp;amp;utm_medium=Referral_Program&amp;amp;utm_source=badge" target="_blank" rel="noopener noreferrer" aria-label="DigitalOcean Referral Badge"&gt; &lt;img src="https://web-platforms.sfo2.cdn.digitaloceanspaces.com/WWW/Badge%201.svg?sanitize=true" width="100%" alt="DigitalOcean Referral Badge" /&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://seelen.io/apps/seelen-ui"&gt;Seelen UI&lt;/a&gt; is a tool designed to enhance your Windows desktop experience with a focus on customization and productivity. It integrates smoothly into your system, providing a range of features that allow you to personalize your desktop and optimize your workflow.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Be Creative&lt;/strong&gt;: Seelen UI lets you tailor your desktop to fit your style and needs. You can adjust menus, widgets, icons, and other elements to create a personalized and visually appealing desktop environment.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/theme_preview.png" alt="Seelen UI Custom Theme" /&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enhance Your Productivity&lt;/strong&gt;: Seelen UI helps you organize your desktop efficiently. With a Tiling Windows Manager, windows automatically arrange themselves to support multitasking, making your work more streamlined.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/twm_preview.png" alt="Seelen UI Tiling Window Manager" /&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enjoy your music&lt;/strong&gt;: With an integrated media module that's compatible with most music players, Seelen UI allows you to enjoy your music seamlessly. You can pause, resume, and skip tracks at any time without the need to open additional windows.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/media_module_preview.png" alt="Seelen UI Media Module" /&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Be faster!&lt;/strong&gt;: With an app launcher inspired by Rofi, Seelen UI provides a simple and intuitive way to quickly access your applications and execute commands.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/app_launcher_preview.png" alt="Seelen UI App Launcher" /&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;User-Friendly Configuration&lt;/strong&gt;: Seelen UI offers an intuitive interface for easy customization. Adjust settings such as themes, taskbar layouts, icons, etc. With just a few clicks.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/settings_preview.png" alt="Seelen UI Settings" /&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] Seelen UI requires the WebView runtime to be installed. On Windows 11, it comes pre-installed with the system. However, on Windows 10, the WebView runtime is included with the &lt;code&gt;setup.exe&lt;/code&gt; installer. Additionally, Microsoft Edge is necessary to function correctly. Some users may have modified their system and removed Edge, so please ensure both Edge and the WebView runtime are installed on your system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] On fresh installations of Windows, the app might show a white or dark screen. You only need to update your Windows through Windows Update and restart your PC.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can choose from different installation options based on your preference:&lt;/p&gt; 
&lt;h3&gt;Microsoft Store &lt;em&gt;(recommended)&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;Download the latest version from the &lt;a href="https://www.microsoft.com/store/productId/9P67C2D4T9FB?ocid=pdpshare"&gt;Store&lt;/a&gt; page. This is the recommended option because you will receive updates and a secure version of the program.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/em&gt;: It may take around 1 to 3 business days for changes to be reflected in the Microsoft Store, as updates are approved by real people in the store.&lt;/p&gt; 
&lt;h3&gt;Winget&lt;/h3&gt; 
&lt;p&gt;Install the latest version using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-pwsh"&gt;winget install --id Seelen.SeelenUI
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This option also uses the signed &lt;code&gt;.msix&lt;/code&gt; package and ensures you have the latest secure version. Similar to the Microsoft Store, it may take around 1 to 3 business days for changes to be reflected in Winget, as updates are approved by real people in the &lt;code&gt;winget-pkg&lt;/code&gt; project.&lt;/p&gt; 
&lt;h3&gt;.msix Installer&lt;/h3&gt; 
&lt;p&gt;Download the &lt;code&gt;.msix&lt;/code&gt; installer from the &lt;a href="https://github.com/eythaann/seelen-ui/releases"&gt;Releases&lt;/a&gt; page. This package is signed, ensuring a secure installation. This is the same option as the Microsoft Store but is a portable installer.&lt;/p&gt; 
&lt;h3&gt;.exe Installer&lt;/h3&gt; 
&lt;p&gt;Download the latest version from the &lt;a href="https://github.com/eythaann/seelen-ui/releases"&gt;Releases&lt;/a&gt; page and run the &lt;code&gt;setup.exe&lt;/code&gt; installer. This option is less recommended as the installer is not signed, which may cause it to be flagged as a potential threat by some antivirus programs. The &lt;code&gt;setup.exe&lt;/code&gt; is updated more quickly than the Microsoft Store or Winget versions and also it receives notifications updates on new release.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Once installed or extracted, simply open the program. The easy-to-use and intuitive GUI will guide you through the configuration process. Customize your desktop environment effortlessly.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For in-depth details on various aspects of Seelen UI, explore the following documents:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/languages.md"&gt;Languages&lt;/a&gt; - Information regarding translations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/toolbar.md"&gt;Toolbar&lt;/a&gt; - Details about customizing and using the toolbar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://seelen.io/blog/seelen-ui-theme-tutorial"&gt;Themes&lt;/a&gt; - Guidance on creating and applying themes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/window_manager.md"&gt;Window Manager&lt;/a&gt; - Instructions on configuring the window manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/project.md"&gt;Project&lt;/a&gt; - General information about the project and its structure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Upcoming Features&lt;/h2&gt; 
&lt;p&gt;I‚Äôm excited to share some upcoming features for Seelen UI! Here‚Äôs a glimpse of what‚Äôs planned for the future:&lt;/p&gt; 
&lt;h3&gt;&lt;del&gt;App Launcher&lt;/del&gt; ‚úÖ&lt;/h3&gt; 
&lt;p&gt;I‚Äôm planning to develop an app launcher inspired by &lt;a href="https://github.com/davatorium/rofi"&gt;Rofi&lt;/a&gt; on Linux. This feature will provide a sleek and highly customizable way to quickly access your applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/adi1090x/files/master/rofi/previews/colorful/main.gif" alt="App Launcher Preview" /&gt; &lt;em&gt;Image courtesy of &lt;a href="https://github.com/dctxmei/rofi-themes"&gt;rofi-themes&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Customizable Popup Widgets&lt;/h3&gt; 
&lt;p&gt;I aim to introduce a set of fully customizable popup widgets, similar to the features available in &lt;a href="https://github.com/elkowar/eww"&gt;EWW&lt;/a&gt;. These widgets will be highly configurable and adaptable to your needs, providing an enhanced and interactive way to manage your desktop environment.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/adi1090x/widgets/main/previews/dashboard.png" alt="Customizable Widgets Preview" /&gt; &lt;em&gt;Image courtesy of &lt;a href="https://github.com/adi1090x/widgets"&gt;adi1090x&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Custom Alt + Tab (Task Switching)&lt;/h3&gt; 
&lt;p&gt;An upgraded Alt + Tab system for task switching is on the horizon. This will offer a more visually appealing and functional experience, allowing for smoother transitions between open applications and windows.&lt;/p&gt; 
&lt;h3&gt;Custom Virtual Desktops Viewer and Animations&lt;/h3&gt; 
&lt;p&gt;I‚Äôm also working on a custom virtual desktops viewer and dynamic animations to improve navigation between different workspaces. This will provide a more intuitive and immersive multitasking experience.&lt;/p&gt; 
&lt;p&gt;Stay tuned for more updates as I develop these features. I appreciate your support and enthusiasm!&lt;/p&gt; 
&lt;p&gt;Happy customizing!&lt;/p&gt; 
&lt;p&gt;The Seelen UI Team&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Read the &lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/CONTRIBUTING"&gt;Contribution Guidelines&lt;/a&gt; to get started with terms.&lt;/li&gt; 
 &lt;li&gt;Read the &lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/project.md"&gt;Project Documentation&lt;/a&gt; to understand the project structure and how to use it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;For inquiries and support, please contact me on &lt;a href="https://discord.gg/ABfASx5ZAJ"&gt;Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;See you later&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;                   .      .&amp;amp;     _,x&amp;amp;"``
                    &amp;amp; .   &amp;amp;'  ;.&amp;amp;&amp;amp;'
              &amp;amp;.  . &amp;amp;.&amp;amp;     .0&amp;amp;&amp;amp;&amp;amp;;&amp;amp;""`
         .    '&amp;amp;  &amp;amp;.&amp;amp;&amp;amp;&amp;amp;  .&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;'
       .&amp;amp;         ;&amp;amp;&amp;amp;&amp;amp; &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;'
      &amp;amp;&amp;amp;          &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;     &amp;amp;&amp;amp;&amp;amp;
     0&amp;amp;    .     &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;""
    &amp;amp;&amp;amp;   .0     &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;
   0&amp;amp;&amp;amp; .&amp;amp;'     &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;
  :&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;    . &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp; 
  0&amp;amp;&amp;amp;&amp;amp;&amp;amp;    &amp;amp; &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;
  &amp;amp;&amp;amp;&amp;amp;&amp;amp;'   &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;               .&amp;amp;&amp;amp;&amp;amp;x&amp;amp;
  &amp;amp;&amp;amp;&amp;amp;&amp;amp;   :&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0.&amp;amp;'        , .&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;;.
  &amp;amp;&amp;amp;&amp;amp;&amp;amp;.  &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;        .&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;'               .
  0&amp;amp;&amp;amp;&amp;amp;&amp;amp;  &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;       ,&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;                &amp;amp;
  :&amp;amp;&amp;amp;&amp;amp;&amp;amp;; &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0       ,;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;             ;  .0
   0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0     ,;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;             &amp;amp;  &amp;amp;;
    0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0   :',;".&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;".&amp;amp;             &amp;amp;&amp;amp; &amp;amp;0
     0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0  ',;',&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;" ,&amp;amp;'             &amp;amp;&amp;amp;&amp;amp;&amp;amp;0
      0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0 ,x&amp;amp;&amp;amp;&amp;amp;&amp;amp;" .&amp;amp;&amp;amp;&amp;amp;              &amp;amp;&amp;amp;&amp;amp;&amp;amp;0
        0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp; .&amp;amp;&amp;amp;&amp;amp;&amp;amp;"'''"&amp;amp;&amp;amp;"&amp;amp;&amp;amp;            &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
         0&amp;amp;&amp;amp; .&amp;amp;&amp;amp;;``       `&amp;amp;: :&amp;amp;         &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
            &amp;amp;"' &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;   &amp;amp;"&amp;amp; &amp;amp;"&amp;amp;   &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
              0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
                 0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0         Seelen
                      0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;p&gt;üìå &lt;strong&gt;Official Website&lt;/strong&gt;: &lt;a href="https://seelen.io"&gt;https://seelen.io&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Seelen Inc ¬© 2025 - All rights reserved&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chroma-core/chroma</title>
      <link>https://github.com/chroma-core/chroma</link>
      <description>&lt;p&gt;Open-source search and retrieval database for AI applications.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://trychroma.com"&gt;&lt;img src="https://user-images.githubusercontent.com/891664/227103090-6624bf7d-9524-4e05-9d2c-c28d5d451481.png" alt="Chroma logo" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;b&gt;Chroma - the open-source embedding database&lt;/b&gt;. &lt;br /&gt; The fastest way to build Python or JavaScript LLM apps with memory! &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://discord.gg/MMeYNTmh3x" target="_blank"&gt; &lt;img src="https://img.shields.io/discord/1073293645303795742?cacheSeconds=3600" alt="Discord" /&gt; &lt;/a&gt; | &lt;a href="https://github.com/chroma-core/chroma/raw/master/LICENSE" target="_blank"&gt; &lt;img src="https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true" alt="License" /&gt; &lt;/a&gt; | &lt;a href="https://docs.trychroma.com/" target="_blank"&gt; Docs &lt;/a&gt; | &lt;a href="https://www.trychroma.com/" target="_blank"&gt; Homepage &lt;/a&gt; &lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install chromadb # python client
# for javascript, npm install chromadb!
# for client-server mode, chroma run --path /chroma_db_path
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Chroma Cloud&lt;/h2&gt; 
&lt;p&gt;Our hosted service, Chroma Cloud, powers serverless vector and full-text search. It's extremely fast, cost-effective, scalable and painless. Create a DB and try it out in under 30 seconds with $5 of free credits.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://trychroma.com/signup"&gt;Get started with Chroma Cloud&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;p&gt;The core API is only 4 functions (run our &lt;a href="https://colab.research.google.com/drive/1QEzFyqnoFxq7LUGyP1vzR4iLt9PpCDXv?usp=sharing"&gt;üí° Google Colab&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import chromadb
# setup Chroma in-memory, for easy prototyping. Can add persistence easily!
client = chromadb.Client()

# Create collection. get_collection, get_or_create_collection, delete_collection also available!
collection = client.create_collection("all-my-documents")

# Add docs to the collection. Can also update and delete. Row-based API coming soon!
collection.add(
    documents=["This is document1", "This is document2"], # we handle tokenization, embedding, and indexing automatically. You can skip that and add your own embeddings as well
    metadatas=[{"source": "notion"}, {"source": "google-docs"}], # filter on these!
    ids=["doc1", "doc2"], # unique for each doc
)

# Query/search 2 most similar results. You can also .get by id
results = collection.query(
    query_texts=["This is a query document"],
    n_results=2,
    # where={"metadata_field": "is_equal_to_this"}, # optional filter
    # where_document={"$contains":"search_string"}  # optional filter
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Learn about all features on our &lt;a href="https://docs.trychroma.com"&gt;Docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt;: Fully-typed, fully-tested, fully-documented == happiness&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Integrations&lt;/strong&gt;: &lt;a href="https://blog.langchain.dev/langchain-chroma/"&gt;&lt;code&gt;ü¶úÔ∏èüîó LangChain&lt;/code&gt;&lt;/a&gt; (python and js), &lt;a href="https://twitter.com/atroyn/status/1628557389762007040"&gt;&lt;code&gt;ü¶ô LlamaIndex&lt;/code&gt;&lt;/a&gt; and more soon&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dev, Test, Prod&lt;/strong&gt;: the same API that runs in your python notebook, scales to your cluster&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Feature-rich&lt;/strong&gt;: Queries, filtering, regex and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Free &amp;amp; Open Source&lt;/strong&gt;: Apache 2.0 Licensed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Use case: ChatGPT for ______&lt;/h2&gt; 
&lt;p&gt;For example, the &lt;code&gt;"Chat your data"&lt;/code&gt; use case:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Add documents to your database. You can pass in your own embeddings, embedding function, or let Chroma embed them for you.&lt;/li&gt; 
 &lt;li&gt;Query relevant documents with natural language.&lt;/li&gt; 
 &lt;li&gt;Compose documents into the context window of an LLM like &lt;code&gt;GPT4&lt;/code&gt; for additional summarization or analysis.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Embeddings?&lt;/h2&gt; 
&lt;p&gt;What are embeddings?&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://platform.openai.com/docs/guides/embeddings/what-are-embeddings"&gt;Read the guide from OpenAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Literal&lt;/strong&gt;: Embedding something turns it from image/text/audio into a list of numbers. üñºÔ∏è or üìÑ =&amp;gt; &lt;code&gt;[1.2, 2.1, ....]&lt;/code&gt;. This process makes documents "understandable" to a machine learning model.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;By analogy&lt;/strong&gt;: An embedding represents the essence of a document. This enables documents and queries with the same essence to be "near" each other and therefore easy to find.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Technical&lt;/strong&gt;: An embedding is the latent-space position of a document at a layer of a deep neural network. For models trained specifically to embed data, this is the last layer.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;A small example&lt;/strong&gt;: If you search your photos for "famous bridge in San Francisco". By embedding this query and comparing it to the embeddings of your photos and their metadata - it should return photos of the Golden Gate Bridge.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Embeddings databases (also known as &lt;strong&gt;vector databases&lt;/strong&gt;) store embeddings and allow you to search by nearest neighbors rather than by substrings like a traditional database. By default, Chroma uses &lt;a href="https://docs.trychroma.com/guides/embeddings#default:-all-minilm-l6-v2"&gt;Sentence Transformers&lt;/a&gt; to embed for you but you can also use OpenAI embeddings, Cohere (multilingual) embeddings, or your own.&lt;/p&gt; 
&lt;h2&gt;Get involved&lt;/h2&gt; 
&lt;p&gt;Chroma is a rapidly developing project. We welcome PR contributors and ideas for how to improve the project.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/MMeYNTmh3x"&gt;Join the conversation on Discord&lt;/a&gt; - &lt;code&gt;#contributing&lt;/code&gt; channel&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.trychroma.com/roadmap"&gt;Review the üõ£Ô∏è Roadmap and contribute your ideas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chroma-core/chroma/issues"&gt;Grab an issue and open a PR&lt;/a&gt; - &lt;a href="https://github.com/chroma-core/chroma/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22"&gt;&lt;code&gt;Good first issue tag&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.trychroma.com/contributing"&gt;Read our contributing guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Release Cadence&lt;/strong&gt; We currently release new tagged versions of the &lt;code&gt;pypi&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt; packages on Mondays. Hotfixes go out at any time during the week.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/chroma-core/chroma/main/LICENSE"&gt;Apache 2.0&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>firecracker-microvm/firecracker</title>
      <link>https://github.com/firecracker-microvm/firecracker</link>
      <description>&lt;p&gt;Secure and fast microVMs for serverless computing.&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="docs/images/fc_logo_full_transparent-bg_white-fg.png" /&gt; 
 &lt;source media="(prefers-color-scheme: light)" srcset="docs/images/fc_logo_full_transparent-bg.png" /&gt; 
 &lt;img alt="Firecracker Logo Title" width="750" src="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/images/fc_logo_full_transparent-bg.png" /&gt; 
&lt;/picture&gt; 
&lt;p&gt;Our mission is to enable secure, multi-tenant, minimal-overhead execution of container and function workloads.&lt;/p&gt; 
&lt;p&gt;Read more about the Firecracker Charter &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/CHARTER.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;What is Firecracker?&lt;/h2&gt; 
&lt;p&gt;Firecracker is an open source virtualization technology that is purpose-built for creating and managing secure, multi-tenant container and function-based services that provide serverless operational models. Firecracker runs workloads in lightweight virtual machines, called microVMs, which combine the security and isolation properties provided by hardware virtualization technology with the speed and flexibility of containers.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;The main component of Firecracker is a virtual machine monitor (VMM) that uses the Linux Kernel Virtual Machine (KVM) to create and run microVMs. Firecracker has a minimalist design. It excludes unnecessary devices and guest-facing functionality to reduce the memory footprint and attack surface area of each microVM. This improves security, decreases the startup time, and increases hardware utilization. Firecracker has also been integrated in container runtimes, for example &lt;a href="https://github.com/kata-containers/kata-containers"&gt;Kata Containers&lt;/a&gt; and &lt;a href="https://github.com/liquidmetal-dev/flintlock"&gt;Flintlock&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Firecracker was developed at Amazon Web Services to accelerate the speed and efficiency of services like &lt;a href="https://aws.amazon.com/lambda/"&gt;AWS Lambda&lt;/a&gt; and &lt;a href="https://aws.amazon.com/fargate/"&gt;AWS Fargate&lt;/a&gt;. Firecracker is open sourced under &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/LICENSE"&gt;Apache version 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To read more about Firecracker, check out &lt;a href="https://firecracker-microvm.github.io"&gt;firecracker-microvm.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;To get started with Firecracker, download the latest &lt;a href="https://github.com/firecracker-microvm/firecracker/releases"&gt;release&lt;/a&gt; binaries or build it from source.&lt;/p&gt; 
&lt;p&gt;You can build Firecracker on any Unix/Linux system that has Docker running (we use a development container) and &lt;code&gt;bash&lt;/code&gt; installed, as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/firecracker-microvm/firecracker
cd firecracker
tools/devtool build
toolchain="$(uname -m)-unknown-linux-musl"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The Firecracker binary will be placed at &lt;code&gt;build/cargo_target/${toolchain}/debug/firecracker&lt;/code&gt;. For more information on building, testing, and running Firecracker, go to the &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/getting-started.md"&gt;quickstart guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The overall security of Firecracker microVMs, including the ability to meet the criteria for safe multi-tenant computing, depends on a well configured Linux host operating system. A configuration that we believe meets this bar is included in &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/prod-host-setup.md"&gt;the production host setup document&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Firecracker is already running production workloads within AWS, but it's still Day 1 on the journey guided by our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/CHARTER.md"&gt;mission&lt;/a&gt;. There's a lot more to build and we welcome all contributions.&lt;/p&gt; 
&lt;p&gt;To contribute to Firecracker, check out the development setup section in the &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/getting-started.md"&gt;getting started guide&lt;/a&gt; and then the Firecracker &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;New Firecracker versions are released via the GitHub repository &lt;a href="https://github.com/firecracker-microvm/firecracker/releases"&gt;releases&lt;/a&gt; page, typically every two or three months. A history of changes is recorded in our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/CHANGELOG.md"&gt;changelog&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Firecracker release policy is detailed &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/RELEASE_POLICY.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Design&lt;/h2&gt; 
&lt;p&gt;Firecracker's overall architecture is described in &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/design.md"&gt;the design document&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features &amp;amp; Capabilities&lt;/h2&gt; 
&lt;p&gt;Firecracker consists of a single micro Virtual Machine Manager process that exposes an API endpoint to the host once started. The API is &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/src/firecracker/swagger/firecracker.yaml"&gt;specified in OpenAPI format&lt;/a&gt;. Read more about it in the &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/api_requests"&gt;API docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;strong&gt;API endpoint&lt;/strong&gt; can be used to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Configure the microvm by: 
  &lt;ul&gt; 
   &lt;li&gt;Setting the number of vCPUs (the default is 1).&lt;/li&gt; 
   &lt;li&gt;Setting the memory size (the default is 128 MiB).&lt;/li&gt; 
   &lt;li&gt;Configuring a &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/cpu_templates/cpu-templates.md"&gt;CPU template&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Add one or more network interfaces to the microVM.&lt;/li&gt; 
 &lt;li&gt;Add one or more read-write or read-only disks to the microVM, each represented by a file-backed block device.&lt;/li&gt; 
 &lt;li&gt;Trigger a block device re-scan while the guest is running. This enables the guest OS to pick up size changes to the block device's backing file.&lt;/li&gt; 
 &lt;li&gt;Change the backing file for a block device, before or after the guest boots.&lt;/li&gt; 
 &lt;li&gt;Configure rate limiters for virtio devices which can limit the bandwidth, operations per second, or both.&lt;/li&gt; 
 &lt;li&gt;Configure the logging and metric system.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[BETA]&lt;/code&gt; Configure the data tree of the guest-facing metadata service. The service is only available to the guest if this resource is configured.&lt;/li&gt; 
 &lt;li&gt;Add a &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/vsock.md"&gt;vsock socket&lt;/a&gt; to the microVM.&lt;/li&gt; 
 &lt;li&gt;Add a &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/entropy.md"&gt;entropy device&lt;/a&gt; to the microVM.&lt;/li&gt; 
 &lt;li&gt;Start the microVM using a given kernel image, root file system, and boot arguments.&lt;/li&gt; 
 &lt;li&gt;[x86_64 only] Stop the microVM.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Built-in Capabilities&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Demand fault paging and CPU oversubscription enabled by default.&lt;/li&gt; 
 &lt;li&gt;Advanced, thread-specific seccomp filters for enhanced security.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/jailer.md"&gt;Jailer&lt;/a&gt; process for starting Firecracker in production scenarios; applies a cgroup/namespace isolation barrier and then drops privileges.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tested platforms&lt;/h2&gt; 
&lt;p&gt;We test all combinations of:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Instance&lt;/th&gt; 
   &lt;th align="left"&gt;Host OS &amp;amp; Kernel&lt;/th&gt; 
   &lt;th align="left"&gt;Guest Rootfs&lt;/th&gt; 
   &lt;th align="left"&gt;Guest Kernel&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m5n.metal (Intel Cascade Lake)&lt;/td&gt; 
   &lt;td align="left"&gt;al2 linux_5.10&lt;/td&gt; 
   &lt;td align="left"&gt;ubuntu 24.04&lt;/td&gt; 
   &lt;td align="left"&gt;linux_5.10&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m6i.metal (Intel Ice Lake)&lt;/td&gt; 
   &lt;td align="left"&gt;al2023 linux_6.1&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;linux_6.1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m7i.metal-24xl (Intel Sapphire Rapids)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m7i.metal-48xl (Intel Sapphire Rapids)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m6a.metal (AMD Milan)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m7a.metal-48xl (AMD Genoa)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m6g.metal (Graviton 2)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m7g.metal (Graviton 3)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m8g.metal-24xl (Graviton 4)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m8g.metal-48xl (Graviton 4)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Known issues and Limitations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;pl031&lt;/code&gt; RTC device on aarch64 does not support interrupts, so guest programs which use an RTC alarm (e.g. &lt;code&gt;hwclock&lt;/code&gt;) will not work.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;p&gt;Firecracker's performance characteristics are listed as part of the &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/SPECIFICATION.md"&gt;specification documentation&lt;/a&gt;. All specifications are a part of our commitment to supporting container and function workloads in serverless operational models, and are therefore enforced via continuous integration testing.&lt;/p&gt; 
&lt;h2&gt;Policy for Security Disclosures&lt;/h2&gt; 
&lt;p&gt;The security of Firecracker is our top priority. If you suspect you have uncovered a vulnerability, contact us privately, as outlined in our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/SECURITY.md"&gt;security policy document&lt;/a&gt;; we will immediately prioritize your disclosure.&lt;/p&gt; 
&lt;h2&gt;FAQ &amp;amp; Contact&lt;/h2&gt; 
&lt;p&gt;Frequently asked questions are collected in our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/FAQ.md"&gt;FAQ doc&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can get in touch with the Firecracker community in the following ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Security-related issues, see our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/SECURITY.md"&gt;security policy document&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Chat with us on our &lt;a href="https://join.slack.com/t/firecracker-microvm/shared_invite/zt-2tc0mfxpc-tU~HYAYSzLDl5XGGJU3YIg"&gt;Slack workspace&lt;/a&gt; &lt;em&gt;Note: most of the maintainers are on a European time zone.&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Open a GitHub issue in this repository.&lt;/li&gt; 
 &lt;li&gt;Email the maintainers at &lt;a href="mailto:firecracker-maintainers@amazon.com"&gt;firecracker-maintainers@amazon.com&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When communicating within the Firecracker community, please mind our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/CODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gopher64/gopher64</title>
      <link>https://github.com/gopher64/gopher64</link>
      <description>&lt;p&gt;Highly compatible N64 emulator&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gopher64&lt;/h1&gt; 
&lt;h2&gt;download&lt;/h2&gt; 
&lt;p&gt;Windows: &lt;a href="https://github.com/gopher64/gopher64/releases/latest/download/gopher64-windows-x86_64.exe"&gt;https://github.com/gopher64/gopher64/releases/latest/download/gopher64-windows-x86_64.exe&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Linux: &lt;a href="https://flathub.org/apps/io.github.gopher64.gopher64"&gt;https://flathub.org/apps/io.github.gopher64.gopher64&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;wiki&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/gopher64/gopher64/wiki"&gt;https://github.com/gopher64/gopher64/wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;discord&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/9RGXq8W8JQ"&gt;https://discord.gg/9RGXq8W8JQ&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;controls&lt;/h2&gt; 
&lt;p&gt;Keys are mapped according to &lt;a href="https://github.com/gopher64/gopher64/wiki/Default-Keyboard-Setup"&gt;these defaults&lt;/a&gt;. Xbox-style controllers also have a &lt;a href="https://github.com/gopher64/gopher64/wiki/Default-Gamepad-Setup"&gt;default mapping applied&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;netplay&lt;/h2&gt; 
&lt;p&gt;Gopher64 supports netplay (online play with others) via cloud hosted servers. You can also run the server (&lt;a href="https://github.com/gopher64/gopher64-netplay-server"&gt;https://github.com/gopher64/gopher64-netplay-server&lt;/a&gt;) yourself on a LAN.&lt;/p&gt; 
&lt;h2&gt;portable mode&lt;/h2&gt; 
&lt;p&gt;If you would like to keep all the game data in the same folder as the executable, you just need to create a file called "portable.txt" in the same directory as the executable.&lt;/p&gt; 
&lt;h2&gt;flatpak&lt;/h2&gt; 
&lt;p&gt;If you want to run the flatpak from the command line, you need to add the &lt;code&gt;--filesystem=host:ro&lt;/code&gt; option, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;flatpak run --filesystem=host:ro io.github.gopher64.gopher64 /path/to/rom.z64
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;building and usage&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Linux only: install the SDL3 dependencies: &lt;a href="https://wiki.libsdl.org/SDL3/README-linux#build-dependencies"&gt;https://wiki.libsdl.org/SDL3/README-linux#build-dependencies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install rust: &lt;a href="https://www.rust-lang.org/tools/install"&gt;https://www.rust-lang.org/tools/install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;git clone --recursive https://github.com/gopher64/gopher64.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cd gopher64&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cargo build --release&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;./target/release/gopher64 /path/to/rom.z64&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;contributing&lt;/h2&gt; 
&lt;p&gt;I am very open to contributions! Please contact me via a GitHub issue or Discord (loganmc10) before doing substantial work on a PR.&lt;/p&gt; 
&lt;h2&gt;license&lt;/h2&gt; 
&lt;p&gt;Gopher64 is licensed under the GPLv3 license. Many portions of gopher64 have been adapted from mupen64plus and/or ares. The license for mupen64plus can be found here: &lt;a href="https://github.com/mupen64plus/mupen64plus-core/raw/master/LICENSES"&gt;https://github.com/mupen64plus/mupen64plus-core/blob/master/LICENSES&lt;/a&gt;. The license for ares can be found here: &lt;a href="https://github.com/ares-emulator/ares/raw/master/LICENSE"&gt;https://github.com/ares-emulator/ares/blob/master/LICENSE&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;privacy and code signing policy&lt;/h2&gt; 
&lt;p&gt;Free code signing for the Windows release is provided by &lt;a href="https://about.signpath.io"&gt;SignPath.io&lt;/a&gt;, certificate by &lt;a href="https://signpath.org"&gt;SignPath Foundation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;During online netplay sessions, the server logs your IP address and basic session information (game title and session name) for operational purposes. No additional personal data is collected or stored.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>moghtech/komodo</title>
      <link>https://github.com/moghtech/komodo</link>
      <description>&lt;p&gt;ü¶é a tool to build and deploy software on many servers ü¶é&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Komodo ü¶é&lt;/h1&gt; 
&lt;p&gt;A tool to build and deploy software across many servers.&lt;/p&gt; 
&lt;p&gt;ü¶é &lt;a href="https://komo.do"&gt;See the docs&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ü¶é &lt;a href="https://demo.komo.do"&gt;Try the Demo&lt;/a&gt; - Login: &lt;code&gt;demo&lt;/code&gt; : &lt;code&gt;demo&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;ü¶é &lt;a href="https://build.komo.do"&gt;See the Build Server&lt;/a&gt; - Login: &lt;code&gt;komodo&lt;/code&gt; : &lt;code&gt;komodo&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;ü¶é &lt;a href="https://discord.gg/DRqE8Fvg5c"&gt;Join the Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;The Komodo dragon is the largest living member of the &lt;a href="https://en.wikipedia.org/wiki/Monitor_lizard"&gt;&lt;em&gt;Monitor&lt;/em&gt; family of lizards&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There is no limit to the number of servers you can connect, and there will never be. There is no limit to what API you can use for automation, and there never will be. No "business edition" here.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;Warning. This is open source software (GPL-V3), and while we make a best effort to ensure releases are stable and bug-free, there are no warranties. Use at your own risk.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moghtech/komodo/raw/main/scripts/readme.md"&gt;periphery setup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moghtech/komodo/raw/main/roadmap.md"&gt;roadmap&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;h3&gt;Light Theme&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Light-Dashboard.png" alt="Dashboard" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Light-Stack.png" alt="Stack" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Light-Compose.png" alt="Compose" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Light-Env.png" alt="Env" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Light-Sync.png" alt="Sync" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Light-Update.png" alt="Update" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Light-Stats.png" alt="Stats" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Light-Export.png" alt="Export" /&gt;&lt;/p&gt; 
&lt;h3&gt;Dark Theme&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Dark-Dashboard.png" alt="Dashboard" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Dark-Stack.png" alt="Stack" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Dark-Compose.png" alt="Compose" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Dark-Env.png" alt="Env" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Dark-Sync.png" alt="Sync" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Dark-Update.png" alt="Update" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Dark-Stats.png" alt="Stats" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Dark-Export.png" alt="Export" /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dandavison/delta</title>
      <link>https://github.com/dandavison/delta</link>
      <description>&lt;p&gt;A syntax-highlighting pager for git, diff, grep, and blame output&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img width="400px" src="https://user-images.githubusercontent.com/52205/147996902-9829bd3f-cd33-466e-833e-49a6f3ebd623.png" alt="image" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/dandavison/delta/actions"&gt; &lt;img src="https://github.com/dandavison/delta/workflows/Continuous%20Integration/badge.svg?sanitize=true" alt="CI" /&gt; &lt;/a&gt; &lt;a href="https://coveralls.io/github/dandavison/delta?branch=main"&gt; &lt;img src="https://coveralls.io/repos/github/dandavison/delta/badge.svg?branch=main" alt="Coverage Status" /&gt; &lt;/a&gt; &lt;a href="https://gitter.im/dandavison-delta/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge"&gt; &lt;img src="https://badges.gitter.im/dandavison-delta/community.svg?sanitize=true" alt="Gitter" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://dandavison.github.io/delta/installation.html"&gt;Install it&lt;/a&gt; (the package is called "git-delta" in most package managers, but the executable is just &lt;code&gt;delta&lt;/code&gt;) and add this to your &lt;code&gt;~/.gitconfig&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-gitconfig"&gt;[core]
    pager = delta

[interactive]
    diffFilter = delta --color-only

[delta]
    navigate = true  # use n and N to move between diff sections
    dark = true      # or light = true, or omit for auto-detection

[merge]
    conflictStyle = zdiff3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git config --global core.pager delta
git config --global interactive.diffFilter 'delta --color-only'
git config --global delta.navigate true
git config --global merge.conflictStyle zdiff3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Delta has many features and is very customizable; please see &lt;code&gt;delta -h&lt;/code&gt; (short help) or &lt;code&gt;delta --help&lt;/code&gt; (full manual), or the &lt;a href="https://dandavison.github.io/delta/"&gt;online user manual&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Language syntax highlighting with the same syntax-highlighting themes as &lt;a href="https://github.com/sharkdp/bat#readme"&gt;bat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Word-level diff highlighting using a Levenshtein edit inference algorithm&lt;/li&gt; 
 &lt;li&gt;Side-by-side view with line-wrapping&lt;/li&gt; 
 &lt;li&gt;Line numbering&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;n&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; keybindings to move between files in large diffs, and between diffs in &lt;code&gt;log -p&lt;/code&gt; views (&lt;code&gt;--navigate&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Improved merge conflict display&lt;/li&gt; 
 &lt;li&gt;Improved &lt;code&gt;git blame&lt;/code&gt; display (syntax highlighting; &lt;code&gt;--hyperlinks&lt;/code&gt; formats commits as links to hosting provider etc. Supported hosting providers are: GitHub, GitLab, SourceHut, Codeberg)&lt;/li&gt; 
 &lt;li&gt;Syntax-highlights grep output from &lt;code&gt;rg&lt;/code&gt;, &lt;code&gt;git grep&lt;/code&gt;, &lt;code&gt;grep&lt;/code&gt;, etc&lt;/li&gt; 
 &lt;li&gt;Support for Git's &lt;code&gt;--color-moved&lt;/code&gt; feature.&lt;/li&gt; 
 &lt;li&gt;Code can be copied directly from the diff (&lt;code&gt;-/+&lt;/code&gt; markers are removed by default).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;diff-highlight&lt;/code&gt; and &lt;code&gt;diff-so-fancy&lt;/code&gt; emulation modes&lt;/li&gt; 
 &lt;li&gt;Commit hashes can be formatted as terminal &lt;a href="https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda"&gt;hyperlinks&lt;/a&gt; to the hosting provider page (&lt;code&gt;--hyperlinks&lt;/code&gt;). File paths can also be formatted as hyperlinks for opening in your OS.&lt;/li&gt; 
 &lt;li&gt;Stylable box/line decorations to draw attention to commit, file and hunk header sections.&lt;/li&gt; 
 &lt;li&gt;Style strings (foreground color, background color, font attributes) are supported for &amp;gt;20 stylable elements, using the same color/style language as git&lt;/li&gt; 
 &lt;li&gt;Handles traditional unified diff output in addition to git output&lt;/li&gt; 
 &lt;li&gt;Automatic detection of light/dark terminal background&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A syntax-highlighting pager for git, diff, and grep output&lt;/h2&gt; 
&lt;p&gt;Code evolves, and we all spend time studying diffs. Delta aims to make this both efficient and enjoyable: it allows you to make extensive changes to the layout and styling of diffs, as well as allowing you to stay arbitrarily close to the default git/diff output.&lt;/p&gt; 
&lt;table align="center"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;img width="400px" src="https://user-images.githubusercontent.com/52205/86275526-76792100-bba1-11ea-9e78-6be9baa80b29.png" alt="image" /&gt; &lt;br /&gt; &lt;p align="center"&gt;&lt;sub&gt;delta with &lt;code&gt;line-numbers&lt;/code&gt; activated&lt;/sub&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;table align="center"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;img width="800px" src="https://user-images.githubusercontent.com/52205/87230973-412eb900-c381-11ea-8aec-cc200290bd1b.png" alt="image" /&gt; &lt;br /&gt; &lt;p align="center"&gt;&lt;sub&gt;delta with &lt;code&gt;side-by-side&lt;/code&gt; and &lt;code&gt;line-numbers&lt;/code&gt; activated&lt;/sub&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;Here's what &lt;code&gt;git show&lt;/code&gt; can look like with git configured to use delta:&lt;/p&gt; 
&lt;br /&gt; 
&lt;table align="center"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;img width="500px" style="border: 1px solid black" src="https://user-images.githubusercontent.com/52205/81058545-a5725f80-8e9c-11ea-912e-d21954586a44.png" alt="image" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img width="500px" style="border: 1px solid black" src="https://user-images.githubusercontent.com/52205/81058911-6abcf700-8e9d-11ea-93be-e212824ec03d.png" alt="image" /&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; "Dracula" theme &lt;/td&gt; 
   &lt;td&gt; "GitHub" theme &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h3&gt;Syntax-highlighting themes&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;All the syntax-highlighting color themes that are available with &lt;a href="https://github.com/sharkdp/bat/"&gt;bat&lt;/a&gt; are available with delta:&lt;/strong&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;img width="400px" style="border: 1px solid black" src="https://user-images.githubusercontent.com/52205/149431273-e3ad049d-771e-4186-869d-0e57967958a6.png" alt="image" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img width="400px" style="border: 1px solid black" src="https://user-images.githubusercontent.com/52205/149431419-48836001-2afc-4fd0-97ad-561a69b71db7.png" alt="image" /&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;code&gt;delta --show-syntax-themes --dark&lt;/code&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;code&gt;delta --show-syntax-themes --light&lt;/code&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;br /&gt; 
&lt;h3&gt;Side-by-side view&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://dandavison.github.io/delta/side-by-side-view.html"&gt;User manual&lt;/a&gt;]&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-gitconfig"&gt;[delta]
    side-by-side = true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, side-by-side view has line-numbers activated, and has syntax highlighting in both the left and right panels: [&lt;a href="https://raw.githubusercontent.com/dandavison/delta/main/#side-by-side-view-1"&gt;config&lt;/a&gt;]&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;img width="800px" src="https://user-images.githubusercontent.com/52205/87230973-412eb900-c381-11ea-8aec-cc200290bd1b.png" alt="image" /&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;Side-by-side view wraps long lines automatically:&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;img width="600px" src="https://user-images.githubusercontent.com/52205/139064537-f8479504-16d3-429a-b4f6-d0122438adaa.png" alt="image" /&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Line numbers&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://dandavison.github.io/delta/line-numbers.html"&gt;User manual&lt;/a&gt;]&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-gitconfig"&gt;[delta]
    line-numbers = true
&lt;/code&gt;&lt;/pre&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;img width="400px" src="https://user-images.githubusercontent.com/52205/86275526-76792100-bba1-11ea-9e78-6be9baa80b29.png" alt="image" /&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Merge conflicts&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://dandavison.github.io/delta/merge-conflicts.html"&gt;User manual&lt;/a&gt;]&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;img width="500px" src="https://user-images.githubusercontent.com/52205/144783121-bb549100-69d8-41b8-ac62-1704f1f7b43e.png" alt="image" /&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Git blame&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://dandavison.github.io/delta/git-blame.html"&gt;User manual&lt;/a&gt;]&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;img width="600px" src="https://user-images.githubusercontent.com/52205/141891376-1fdb87dc-1d9c-4ad6-9d72-eeb19a8aeb0b.png" alt="image" /&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Ripgrep, git grep&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://dandavison.github.io/delta/grep.html"&gt;User manual&lt;/a&gt;]&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt; &lt;img width="600px" alt="image" src="https://github.com/dandavison/open-in-editor/assets/52205/d203d380-5acb-4296-aeb9-e38c73d6c27f" /&gt; &lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Installation and usage&lt;/h3&gt; 
&lt;p&gt;Please see the &lt;a href="https://dandavison.github.io/delta/"&gt;user manual&lt;/a&gt; and &lt;code&gt;delta --help&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Maintainers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dandavison"&gt;@dandavison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/th1000s"&gt;@th1000s&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>openai/codex</title>
      <link>https://github.com/openai/codex</link>
      <description>&lt;p&gt;Lightweight coding agent that runs in your terminal&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;OpenAI Codex CLI&lt;/h1&gt; 
&lt;p align="center"&gt;&lt;code&gt;npm i -g @openai/codex&lt;/code&gt;&lt;br /&gt;or &lt;code&gt;brew install codex&lt;/code&gt;&lt;/p&gt; 
&lt;p align="center"&gt;&lt;strong&gt;Codex CLI&lt;/strong&gt; is a coding agent from OpenAI that runs locally on your computer.&lt;br /&gt;If you are looking for the &lt;em&gt;cloud-based agent&lt;/em&gt; from OpenAI, &lt;strong&gt;Codex Web&lt;/strong&gt;, see &lt;a href="https://chatgpt.com/codex"&gt;chatgpt.com/codex&lt;/a&gt;.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/openai/codex/main/.github/codex-cli-splash.png" alt="Codex CLI splash" width="80%" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;h3&gt;Installing and running Codex CLI&lt;/h3&gt; 
&lt;p&gt;Install globally with your preferred package manager:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm install -g @openai/codex  # Alternatively: `brew install codex`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then simply run &lt;code&gt;codex&lt;/code&gt; to get started:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;codex
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;You can also go to the &lt;a href="https://github.com/openai/codex/releases/latest"&gt;latest GitHub Release&lt;/a&gt; and download the appropriate binary for your platform.&lt;/summary&gt; 
 &lt;p&gt;Each GitHub Release contains many executables, but in practice, you likely want one of these:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;macOS 
   &lt;ul&gt; 
    &lt;li&gt;Apple Silicon/arm64: &lt;code&gt;codex-aarch64-apple-darwin.tar.gz&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;x86_64 (older Mac hardware): &lt;code&gt;codex-x86_64-apple-darwin.tar.gz&lt;/code&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Linux 
   &lt;ul&gt; 
    &lt;li&gt;x86_64: &lt;code&gt;codex-x86_64-unknown-linux-musl.tar.gz&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;arm64: &lt;code&gt;codex-aarch64-unknown-linux-musl.tar.gz&lt;/code&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Each archive contains a single entry with the platform baked into the name (e.g., &lt;code&gt;codex-x86_64-unknown-linux-musl&lt;/code&gt;), so you likely want to rename it to &lt;code&gt;codex&lt;/code&gt; after extracting it.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Using Codex with your ChatGPT plan&lt;/h3&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/openai/codex/main/.github/codex-cli-login.png" alt="Codex CLI login" width="80%" /&gt; &lt;/p&gt; 
&lt;p&gt;Run &lt;code&gt;codex&lt;/code&gt; and select &lt;strong&gt;Sign in with ChatGPT&lt;/strong&gt;. We recommend signing into your ChatGPT account to use Codex as part of your Plus, Pro, Team, Edu, or Enterprise plan. &lt;a href="https://help.openai.com/en/articles/11369540-codex-in-chatgpt"&gt;Learn more about what's included in your ChatGPT plan&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also use Codex with an API key, but this requires &lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/authentication.md#usage-based-billing-alternative-use-an-openai-api-key"&gt;additional setup&lt;/a&gt;. If you previously used an API key for usage-based billing, see the &lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/authentication.md#migrating-from-usage-based-billing-api-key"&gt;migration steps&lt;/a&gt;. If you're having trouble with login, please comment on &lt;a href="https://github.com/openai/codex/issues/1243"&gt;this issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Model Context Protocol (MCP)&lt;/h3&gt; 
&lt;p&gt;Codex CLI supports &lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/advanced.md#model-context-protocol-mcp"&gt;MCP servers&lt;/a&gt;. Enable by adding an &lt;code&gt;mcp_servers&lt;/code&gt; section to your &lt;code&gt;~/.codex/config.toml&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;Codex CLI supports a rich set of configuration options, with preferences stored in &lt;code&gt;~/.codex/config.toml&lt;/code&gt;. For full configuration options, see &lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/config.md"&gt;Configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Docs &amp;amp; FAQ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/getting-started.md"&gt;&lt;strong&gt;Getting started&lt;/strong&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/getting-started.md#cli-usage"&gt;CLI usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/getting-started.md#running-with-a-prompt-as-input"&gt;Running with a prompt as input&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/getting-started.md#example-prompts"&gt;Example prompts&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/getting-started.md#memory--project-docs"&gt;Memory with AGENTS.md&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/config.md"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/sandbox.md"&gt;&lt;strong&gt;Sandbox &amp;amp; approvals&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/authentication.md"&gt;&lt;strong&gt;Authentication&lt;/strong&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/authentication.md#forcing-a-specific-auth-method-advanced"&gt;Auth methods&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/authentication.md#connecting-on-a-headless-machine"&gt;Login on a "Headless" machine&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/advanced.md"&gt;&lt;strong&gt;Advanced&lt;/strong&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/advanced.md#non-interactive--ci-mode"&gt;Non-interactive / CI mode&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/advanced.md#tracing--verbose-logging"&gt;Tracing / verbose logging&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/advanced.md#model-context-protocol-mcp"&gt;Model Context Protocol (MCP)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/zdr.md"&gt;&lt;strong&gt;Zero data retention (ZDR)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/contributing.md"&gt;&lt;strong&gt;Contributing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/install.md"&gt;&lt;strong&gt;Install &amp;amp; build&lt;/strong&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/install.md#system-requirements"&gt;System Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/install.md#dotslash"&gt;DotSlash&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/install.md#build-from-source"&gt;Build from source&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/faq.md"&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/docs/open-source-fund.md"&gt;&lt;strong&gt;Open source fund&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repository is licensed under the &lt;a href="https://raw.githubusercontent.com/openai/codex/main/LICENSE"&gt;Apache-2.0 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Universal-Debloater-Alliance/universal-android-debloater-next-generation</title>
      <link>https://github.com/Universal-Debloater-Alliance/universal-android-debloater-next-generation</link>
      <description>&lt;p&gt;Cross-platform GUI written in Rust using ADB to debloat non-rooted Android devices. Improve your privacy, the security and battery life of your device.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Universal Android Debloater Next Generation&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!warning] &lt;strong&gt;DISCLAIMER&lt;/strong&gt;: Use at your own risk. We're not responsible for anything that could happen to your devices.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;img src="https://raw.githubusercontent.com/Universal-Debloater-Alliance/universal-android-debloater-next-generation/main/resources/screenshots/v1.0.2.png" width="850" alt="uad_screenshot" /&gt; 
&lt;p&gt;&lt;strong&gt;Check out the issues, and &lt;a href="https://github.com/Universal-Debloater-Alliance/universal-android-debloater-next-generation/wiki/How-to-contribute"&gt;feel free to contribute!&lt;/a&gt;&lt;/strong&gt;. We're in &lt;strong&gt;HIGH NEED&lt;/strong&gt; of &lt;a href="https://www.rust-lang.org"&gt;Rust&lt;/a&gt; developers for fixing critical issues, see &lt;a href="https://github.com/Universal-Debloater-Alliance/universal-android-debloater-next-generation/discussions/731"&gt;this announcement&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;For real-time communication, consider joining our Discord server:&lt;/strong&gt;&lt;/p&gt; 
&lt;a href="https://discord.gg/CzwbMCPEZa"&gt; &lt;img src="https://raw.githubusercontent.com/Universal-Debloater-Alliance/universal-android-debloater-next-generation/main/resources/images/icon_clyde_blurple_RGB.png" alt="Icon" width="75" /&gt; &lt;/a&gt; 
&lt;p&gt;&lt;strong&gt;In case you prefer using Matrix (using a Matrix bridge to Discord):&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://matrix.to/#/#uad-ng:matrix.org"&gt;&lt;img src="https://matrix.org/images/matrix-logo.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Summary&lt;/h2&gt; 
&lt;p&gt;This is a detached fork of the &lt;a href="https://github.com/0x192/universal-android-debloater"&gt;UAD project&lt;/a&gt;, which aims to improve privacy and battery performance by removing unnecessary and obscure system apps. This can also contribute to improving security by reducing (but not eliminating) &lt;a href="https://en.wikipedia.org/wiki/Attack_surface"&gt;the attack surface&lt;/a&gt;. Read the &lt;a href="https://github.com/Universal-Debloater-Alliance/universal-android-debloater-next-generation/wiki"&gt;wiki&lt;/a&gt; for more details on getting started. Whilst UAD-ng can remove system apps, it cannot detect or remove potentially malicious system services or drivers baked into the firmware of your device by various vendors; some vendor-specific apps are only UI front-ends to vendor-provided system services, and as such disabling/uninstalling those apps will not stop a service from running. Additional information can be found in package descriptions inside the Universal Android Debloater Next Generation application.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For documentation regarding how to use UAD-ng, the FAQ, building from source and how to decompile/extract APKs, see &lt;a href="https://github.com/Universal-Debloater-Alliance/universal-android-debloater-next-generation/wiki"&gt;our Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Special thanks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/0x192"&gt;@0x192&lt;/a&gt; who created the original UAD project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mawilms"&gt;@mawilms&lt;/a&gt; for his LotRO plugin manager (&lt;a href="https://github.com/mawilms/lembas"&gt;Lembas&lt;/a&gt;) which helped a lot to understand how to use the &lt;a href="https://github.com/hecrj/iced"&gt;Iced&lt;/a&gt; GUI library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/casperstorm"&gt;@casperstorm&lt;/a&gt; for the UI/UX inspiration.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>meilisearch/meilisearch</title>
      <link>https://github.com/meilisearch/meilisearch</link>
      <description>&lt;p&gt;A lightning-fast search engine API bringing AI-powered hybrid search to your sites and applications.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://www.meilisearch.com/?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=logo#gh-light-mode-only" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/meilisearch/meilisearch/main/assets/meilisearch-logo-light.svg?sanitize=true#gh-light-mode-only" /&gt; &lt;/a&gt; &lt;a href="https://www.meilisearch.com/?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=logo#gh-dark-mode-only" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/meilisearch/meilisearch/main/assets/meilisearch-logo-dark.svg?sanitize=true#gh-dark-mode-only" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://www.meilisearch.com/?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=nav"&gt;Website&lt;/a&gt; | &lt;a href="https://roadmap.meilisearch.com/tabs/1-under-consideration"&gt;Roadmap&lt;/a&gt; | &lt;a href="https://www.meilisearch.com/pricing?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=nav"&gt;Meilisearch Cloud&lt;/a&gt; | &lt;a href="https://blog.meilisearch.com/?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=nav"&gt;Blog&lt;/a&gt; | &lt;a href="https://www.meilisearch.com/docs?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=nav"&gt;Documentation&lt;/a&gt; | &lt;a href="https://www.meilisearch.com/docs/faq?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=nav"&gt;FAQ&lt;/a&gt; | &lt;a href="https://discord.meilisearch.com/?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=nav"&gt;Discord&lt;/a&gt; &lt;/h4&gt; 
&lt;p align="center"&gt; &lt;a href="https://deps.rs/repo/github/meilisearch/meilisearch"&gt;&lt;img src="https://deps.rs/repo/github/meilisearch/meilisearch/status.svg?sanitize=true" alt="Dependency status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/meilisearch/meilisearch/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-informational" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://github.com/meilisearch/meilisearch/queue"&gt;&lt;img alt="Merge Queues enabled" src="https://img.shields.io/badge/Merge_Queues-enabled-%2357cf60?logo=github" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;‚ö° A lightning-fast search engine that fits effortlessly into your apps, websites, and workflow üîç&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.meilisearch.com?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=intro"&gt;Meilisearch&lt;/a&gt; helps you shape a delightful search experience in a snap, offering features that work out of the box to speed up your workflow.&lt;/p&gt; 
&lt;p align="center" name="demo"&gt; &lt;a href="https://where2watch.meilisearch.com/?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=demo-gif#gh-light-mode-only" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/meilisearch/meilisearch/main/assets/demo-light.gif#gh-light-mode-only" alt="A bright colored application for finding movies screening near the user" /&gt; &lt;/a&gt; &lt;a href="https://where2watch.meilisearch.com/?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=demo-gif#gh-dark-mode-only" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/meilisearch/meilisearch/main/assets/demo-dark.gif#gh-dark-mode-only" alt="A dark colored application for finding movies screening near the user" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;üñ• Examples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://where2watch.meilisearch.com/?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=organization"&gt;&lt;strong&gt;Movies&lt;/strong&gt;&lt;/a&gt; ‚Äî An application to help you find streaming platforms to watch movies using &lt;a href="https://www.meilisearch.com/solutions/hybrid-search?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=demos"&gt;hybrid search&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ecommerce.meilisearch.com/?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=demos"&gt;&lt;strong&gt;Ecommerce&lt;/strong&gt;&lt;/a&gt; ‚Äî Ecommerce website using disjunctive &lt;a href="https://www.meilisearch.com/docs/learn/fine_tuning_results/faceted_search?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=demos"&gt;facets&lt;/a&gt;, range and rating filtering, and pagination.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://music.meilisearch.com/?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=demos"&gt;&lt;strong&gt;Songs&lt;/strong&gt;&lt;/a&gt; ‚Äî Search through 47 million of songs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://saas.meilisearch.com/?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=demos"&gt;&lt;strong&gt;SaaS&lt;/strong&gt;&lt;/a&gt; ‚Äî Search for contacts, deals, and companies in this &lt;a href="https://www.meilisearch.com/docs/learn/security/multitenancy_tenant_tokens?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=demos"&gt;multi-tenant&lt;/a&gt; CRM application.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the list of all our example apps in our &lt;a href="https://github.com/meilisearch/demos"&gt;demos repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;‚ú® Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Hybrid search:&lt;/strong&gt; Combine the best of both &lt;a href="https://www.meilisearch.com/docs/learn/experimental/vector_search?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=features"&gt;semantic&lt;/a&gt; &amp;amp; full-text search to get the most relevant results&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Search-as-you-type:&lt;/strong&gt; Find &amp;amp; display results in less than 50 milliseconds to provide an intuitive experience&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.meilisearch.com/docs/learn/relevancy/typo_tolerance_settings?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=features"&gt;Typo tolerance&lt;/a&gt;:&lt;/strong&gt; get relevant matches even when queries contain typos and misspellings&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.meilisearch.com/docs/learn/fine_tuning_results/filtering?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=features"&gt;Filtering&lt;/a&gt; and &lt;a href="https://www.meilisearch.com/docs/learn/fine_tuning_results/faceted_search?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=features"&gt;faceted search&lt;/a&gt;:&lt;/strong&gt; enhance your users' search experience with custom filters and build a faceted search interface in a few lines of code&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.meilisearch.com/docs/learn/fine_tuning_results/sorting?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=features"&gt;Sorting&lt;/a&gt;:&lt;/strong&gt; sort results based on price, date, or pretty much anything else your users need&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.meilisearch.com/docs/learn/relevancy/synonyms?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=features"&gt;Synonym support&lt;/a&gt;:&lt;/strong&gt; configure synonyms to include more relevant content in your search results&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.meilisearch.com/docs/learn/fine_tuning_results/geosearch?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=features"&gt;Geosearch&lt;/a&gt;:&lt;/strong&gt; filter and sort documents based on geographic data&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.meilisearch.com/docs/learn/what_is_meilisearch/language?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=features"&gt;Extensive language support&lt;/a&gt;:&lt;/strong&gt; search datasets in any language, with optimized support for Chinese, Japanese, Hebrew, and languages using the Latin alphabet&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.meilisearch.com/docs/learn/security/master_api_keys?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=features"&gt;Security management&lt;/a&gt;:&lt;/strong&gt; control which users can access what data with API keys that allow fine-grained permissions handling&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.meilisearch.com/docs/learn/security/multitenancy_tenant_tokens?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=features"&gt;Multi-Tenancy&lt;/a&gt;:&lt;/strong&gt; personalize search results for any number of application tenants&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Highly Customizable:&lt;/strong&gt; customize Meilisearch to your specific needs or use our out-of-the-box and hassle-free presets&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.meilisearch.com/docs/reference/api/overview?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=features"&gt;RESTful API&lt;/a&gt;:&lt;/strong&gt; integrate Meilisearch in your technical stack with our plugins and SDKs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI-ready:&lt;/strong&gt; works out of the box with &lt;a href="https://www.meilisearch.com/with/langchain"&gt;langchain&lt;/a&gt; and the &lt;a href="https://github.com/meilisearch/meilisearch-mcp"&gt;model context protocol&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy to install, deploy, and maintain&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìñ Documentation&lt;/h2&gt; 
&lt;p&gt;You can consult Meilisearch's documentation at &lt;a href="https://www.meilisearch.com/docs/?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=docs"&gt;meilisearch.com/docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üöÄ Getting started&lt;/h2&gt; 
&lt;p&gt;For basic instructions on how to set up Meilisearch, add documents to an index, and search for documents, take a look at our &lt;a href="https://www.meilisearch.com/docs?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=get-started"&gt;documentation&lt;/a&gt; guide.&lt;/p&gt; 
&lt;h2&gt;üåç Supercharge your Meilisearch experience&lt;/h2&gt; 
&lt;p&gt;Say goodbye to server deployment and manual updates with &lt;a href="https://www.meilisearch.com/cloud?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch"&gt;Meilisearch Cloud&lt;/a&gt;. Additional features include analytics &amp;amp; monitoring in many regions around the world. No credit card is required.&lt;/p&gt; 
&lt;h2&gt;üß∞ SDKs &amp;amp; integration tools&lt;/h2&gt; 
&lt;p&gt;Install one of our SDKs in your project for seamless integration between Meilisearch and your favorite language or framework!&lt;/p&gt; 
&lt;p&gt;Take a look at the complete &lt;a href="https://www.meilisearch.com/docs/learn/what_is_meilisearch/sdks?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=sdks-link"&gt;Meilisearch integration list&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.meilisearch.com/docs/learn/what_is_meilisearch/sdks?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=sdks-logos"&gt;&lt;img src="https://raw.githubusercontent.com/meilisearch/meilisearch/main/assets/integrations.png" alt="Logos belonging to different languages and frameworks supported by Meilisearch, including React, Ruby on Rails, Go, Rust, and PHP" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;‚öôÔ∏è Advanced usage&lt;/h2&gt; 
&lt;p&gt;Experienced users will want to keep our &lt;a href="https://www.meilisearch.com/docs/reference/api/overview?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=advanced"&gt;API Reference&lt;/a&gt; close at hand.&lt;/p&gt; 
&lt;p&gt;We also offer a wide range of dedicated guides to all Meilisearch features, such as &lt;a href="https://www.meilisearch.com/docs/learn/fine_tuning_results/filtering?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=advanced"&gt;filtering&lt;/a&gt;, &lt;a href="https://www.meilisearch.com/docs/learn/fine_tuning_results/sorting?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=advanced"&gt;sorting&lt;/a&gt;, &lt;a href="https://www.meilisearch.com/docs/learn/fine_tuning_results/geosearch?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=advanced"&gt;geosearch&lt;/a&gt;, &lt;a href="https://www.meilisearch.com/docs/learn/security/master_api_keys?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=advanced"&gt;API keys&lt;/a&gt;, and &lt;a href="https://www.meilisearch.com/docs/learn/security/tenant_tokens?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=advanced"&gt;tenant tokens&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, for more in-depth information, refer to our articles explaining fundamental Meilisearch concepts such as &lt;a href="https://www.meilisearch.com/docs/learn/core_concepts/documents?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=advanced"&gt;documents&lt;/a&gt; and &lt;a href="https://www.meilisearch.com/docs/learn/core_concepts/indexes?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=advanced"&gt;indexes&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üßæ Editions &amp;amp; Licensing&lt;/h2&gt; 
&lt;p&gt;Meilisearch is available in two editions:&lt;/p&gt; 
&lt;h3&gt;üß™ Community Edition (CE)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fully open source under the &lt;a href="https://raw.githubusercontent.com/meilisearch/meilisearch/main/LICENSE"&gt;MIT license&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Core search engine with fast and relevant full-text, semantic or hybrid search&lt;/li&gt; 
 &lt;li&gt;Free to use for anyone, including commercial usage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üè¢ Enterprise Edition (EE)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Includes advanced features such as: 
  &lt;ul&gt; 
   &lt;li&gt;Sharding&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Governed by a &lt;a href="https://raw.githubusercontent.com/meilisearch/meilisearch/main/LICENSE-EE"&gt;commercial license&lt;/a&gt; or the &lt;a href="https://mariadb.com/bsl11"&gt;Business Source License 1.1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Not allowed in production without a commercial agreement with Meilisearch. 
  &lt;ul&gt; 
   &lt;li&gt;You may use, modify, and distribute the Licensed Work for non-production purposes only, such as testing, development, or evaluation.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Want access to Enterprise features? ‚Üí Contact us at &lt;a href="maito:sales@meilisearch.com"&gt;sales@meilisearch.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üìä Telemetry&lt;/h2&gt; 
&lt;p&gt;Meilisearch collects &lt;strong&gt;anonymized&lt;/strong&gt; user data to help us improve our product. You can &lt;a href="https://www.meilisearch.com/docs/learn/what_is_meilisearch/telemetry?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=telemetry#how-to-disable-data-collection"&gt;deactivate this&lt;/a&gt; whenever you want.&lt;/p&gt; 
&lt;p&gt;To request deletion of collected data, please write to us at &lt;a href="mailto:privacy@meilisearch.com"&gt;privacy@meilisearch.com&lt;/a&gt;. Remember to include your &lt;code&gt;Instance UID&lt;/code&gt; in the message, as this helps us quickly find and delete your data.&lt;/p&gt; 
&lt;p&gt;If you want to know more about the kind of data we collect and what we use it for, check the &lt;a href="https://www.meilisearch.com/docs/learn/what_is_meilisearch/telemetry?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=telemetry#how-to-disable-data-collection"&gt;telemetry section&lt;/a&gt; of our documentation.&lt;/p&gt; 
&lt;h2&gt;üì´ Get in touch!&lt;/h2&gt; 
&lt;p&gt;Meilisearch is a search engine created by &lt;a href="https://www.meilisearch.com/careers"&gt;Meili&lt;/a&gt;, a software development company headquartered in France and with team members all over the world. Want to know more about us? &lt;a href="https://blog.meilisearch.com/?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=contact"&gt;Check out our blog!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;üóû &lt;a href="https://meilisearch.us2.list-manage.com/subscribe?u=27870f7b71c908a8b359599fb&amp;amp;id=79582d828e"&gt;Subscribe to our newsletter&lt;/a&gt; if you don't want to miss any updates! We promise we won't clutter your mailbox: we only send one edition every two months.&lt;/p&gt; 
&lt;p&gt;üíå Want to make a suggestion or give feedback? Here are some of the channels where you can reach us:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For feature requests, please visit our &lt;a href="https://github.com/meilisearch/product/discussions"&gt;product repository&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Found a bug? Open an &lt;a href="https://github.com/meilisearch/meilisearch/issues"&gt;issue&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Want to be part of our Discord community? &lt;a href="https://discord.meilisearch.com/?utm_campaign=oss&amp;amp;utm_source=github&amp;amp;utm_medium=meilisearch&amp;amp;utm_content=contact"&gt;Join us!&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thank you for your support!&lt;/p&gt; 
&lt;h2&gt;üë©‚Äçüíª Contributing&lt;/h2&gt; 
&lt;p&gt;Meilisearch is, and will always be, open-source! If you want to contribute to the project, please look at &lt;a href="https://raw.githubusercontent.com/meilisearch/meilisearch/main/CONTRIBUTING.md"&gt;our contribution guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üì¶ Versioning&lt;/h2&gt; 
&lt;p&gt;Meilisearch releases and their associated binaries are available on the project's &lt;a href="https://github.com/meilisearch/meilisearch/releases"&gt;releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The binaries are versioned following &lt;a href="https://semver.org/"&gt;SemVer conventions&lt;/a&gt;. To know more, read our &lt;a href="https://raw.githubusercontent.com/meilisearch/meilisearch/main/documentation/versioning-policy.md"&gt;versioning policy&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Differently from the binaries, crates in this repository are not currently available on &lt;a href="https://crates.io/"&gt;crates.io&lt;/a&gt; and do not follow &lt;a href="https://semver.org"&gt;SemVer conventions&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>0xPlaygrounds/rig</title>
      <link>https://github.com/0xPlaygrounds/rig</link>
      <description>&lt;p&gt;‚öôÔ∏èü¶Ä Build modular and scalable LLM Applications in Rust&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="img/rig-playgrounds-dark.svg" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="img/rig-playgrounds-light.svg" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/img/rig-playgrounds-light.svg?sanitize=true" style="width: 40%; height: 40%;" alt="Rig logo" /&gt; 
 &lt;/picture&gt; &lt;br /&gt; &lt;a href="https://docs.rig.rs"&gt;&lt;img src="https://img.shields.io/badge/üìñ docs-rig.rs-dca282.svg" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://docs.rs/rig-core/latest/rig/"&gt;&lt;img src="https://img.shields.io/badge/docs-API Reference-dca282.svg" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://crates.io/crates/rig-core"&gt;&lt;img src="https://img.shields.io/crates/v/rig-core.svg?color=dca282" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://crates.io/crates/rig-core"&gt;&lt;img src="https://img.shields.io/crates/d/rig-core.svg?color=dca282" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://discord.gg/playgrounds"&gt;&lt;img src="https://img.shields.io/discord/511303648119226382?color=%236d82cc&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/0xPlaygrounds/rig"&gt;&lt;img src="https://img.shields.io/github/stars/0xPlaygrounds/rig?style=social" alt="stars - rig" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href=""&gt;&lt;img src="https://img.shields.io/badge/built_with-Rust-dca282.svg?logo=rust" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://twitter.com/Playgrounds0x"&gt;&lt;img src="https://img.shields.io/twitter/follow/Playgrounds0x" /&gt;&lt;/a&gt; &amp;nbsp; &lt;br /&gt; &lt;/p&gt; &amp;nbsp; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://docs.rig.rs"&gt;üìë Docs&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href="https://rig.rs"&gt;üåê Website&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href="https://github.com/0xPlaygrounds/rig/issues/new"&gt;ü§ù Contribute&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href="https://docs.rig.rs/guides"&gt;‚úçüèΩ Blogs&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;‚ú® If you would like to help spread the word about Rig, please consider starring the repo!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Here be dragons! As we plan to ship a torrent of features in the following months, future updates &lt;strong&gt;will&lt;/strong&gt; contain &lt;strong&gt;breaking changes&lt;/strong&gt;. With Rig evolving, we'll annotate changes and highlight migration paths as we encounter them.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#table-of-contents"&gt;Table of contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#what-is-rig"&gt;What is Rig?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#high-level-features"&gt;High-level features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#who-is-using-rig-in-production"&gt;Who's using Rig in production?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#get-started"&gt;Get Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#simple-example"&gt;Simple example:&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/#integrations"&gt;Integrations&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What is Rig?&lt;/h2&gt; 
&lt;p&gt;Rig is a Rust library for building scalable, modular, and ergonomic &lt;strong&gt;LLM-powered&lt;/strong&gt; applications.&lt;/p&gt; 
&lt;p&gt;More information about this crate can be found in the &lt;a href="https://docs.rig.rs"&gt;official&lt;/a&gt; &amp;amp; &lt;a href="https://docs.rs/rig-core/latest/rig/"&gt;crate&lt;/a&gt; (API Reference) documentations.&lt;/p&gt; 
&lt;h2&gt;High-level features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Full support for LLM completion and embedding workflows&lt;/li&gt; 
 &lt;li&gt;Simple but powerful common abstractions over LLM providers (e.g. OpenAI, Cohere) and vector stores (e.g. MongoDB, SQlite, in-memory)&lt;/li&gt; 
 &lt;li&gt;Integrate LLMs in your app with minimal boilerplate&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Who is using Rig in production?&lt;/h2&gt; 
&lt;p&gt;Below is a non-exhaustive list of companies and people who are using Rig in production:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/firstbatchxyz/dkn-compute-node"&gt;Dria Compute Node&lt;/a&gt; - a node that serves computation results within the Dria Knowledge Network&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/modelcontextprotocol/rust-sdk"&gt;The MCP Rust SDK&lt;/a&gt; - the official Model Context Protocol Rust SDK. Has an example for usage with Rig.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/buger/probe"&gt;Probe&lt;/a&gt; - an AI-friendly, fully local semantic code search tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NethermindEth/nine"&gt;NINE&lt;/a&gt; - Neural Interconnected Nodes Engine, by &lt;a href="https://www.nethermind.io/"&gt;Nethermind.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/0xPlaygrounds/rig-onchain-kit"&gt;rig-onchain-kit&lt;/a&gt; - the Rig Onchain Kit. Intended to make interactions between Solana/EVM and Rig much easier to implement.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linera-io/linera-protocol"&gt;Linera Protocol&lt;/a&gt; - Decentralized blockchain infrastructure designed for highly scalable, secure, low-latency Web3 applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/piotrostr/listen"&gt;Listen&lt;/a&gt; - A framework aiming to become the go-to framework for AI portfolio management agents. Powers &lt;a href="https://app.listen-rs.com/"&gt;the Listen app.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Are you also using Rig in production? &lt;a href="https://www.github.com/0xPlaygrounds/rig/issues"&gt;Open an issue&lt;/a&gt; to have your name added!&lt;/p&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cargo add rig-core
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Simple example:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;use rig::{completion::Prompt, providers::openai};

#[tokio::main]
async fn main() {
    // Create OpenAI client and model
    // This requires the `OPENAI_API_KEY` environment variable to be set.
    let openai_client = openai::Client::from_env();

    let gpt4 = openai_client.agent("gpt-4").build();

    // Prompt the model and print its response
    let response = gpt4
        .prompt("Who are you?")
        .await
        .expect("Failed to prompt GPT-4");

    println!("GPT-4: {response}");
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note using &lt;code&gt;#[tokio::main]&lt;/code&gt; requires you enable tokio's &lt;code&gt;macros&lt;/code&gt; and &lt;code&gt;rt-multi-thread&lt;/code&gt; features or just &lt;code&gt;full&lt;/code&gt; to enable all features (&lt;code&gt;cargo add tokio --features macros,rt-multi-thread&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;You can find more examples each crate's &lt;code&gt;examples&lt;/code&gt; (ie. &lt;a href="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/rig-core/examples"&gt;&lt;code&gt;rig-core/examples&lt;/code&gt;&lt;/a&gt;) directory. More detailed use cases walkthroughs are regularly published on our &lt;a href="https://dev.to/0thtachi"&gt;Dev.to Blog&lt;/a&gt; and added to Rig's official documentation &lt;a href="http://docs.rig.rs"&gt;(docs.rig.rs)&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported Integrations&lt;/h2&gt; 
&lt;p&gt;Vector stores are available as separate companion-crates:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MongoDB: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-mongodb"&gt;&lt;code&gt;rig-mongodb&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;LanceDB: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-lancedb"&gt;&lt;code&gt;rig-lancedb&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Neo4j: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-neo4j"&gt;&lt;code&gt;rig-neo4j&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Qdrant: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-qdrant"&gt;&lt;code&gt;rig-qdrant&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SQLite: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-sqlite"&gt;&lt;code&gt;rig-sqlite&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SurrealDB: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-surrealdb"&gt;&lt;code&gt;rig-surrealdb&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Milvus: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-milvus"&gt;&lt;code&gt;rig-milvus&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ScyllaDB: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-scylladb"&gt;&lt;code&gt;rig-scylladb&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;AWS S3Vectors: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-s3vectors"&gt;&lt;code&gt;rig-s3vectors&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following providers are available as separate companion-crates:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fastembed: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-fastembed"&gt;&lt;code&gt;rig-fastembed&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Eternal AI: &lt;a href="https://github.com/0xPlaygrounds/rig/tree/main/rig-eternalai"&gt;&lt;code&gt;rig-eternalai&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;br /&gt; &lt;br /&gt; &lt;img src="https://raw.githubusercontent.com/0xPlaygrounds/rig/main/img/built-by-playgrounds.svg?sanitize=true" alt="Build by Playgrounds" width="30%" /&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sxyazi/yazi</title>
      <link>https://github.com/sxyazi/yazi</link>
      <description>&lt;p&gt;üí• Blazing fast terminal file manager written in Rust, based on async I/O.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://go.warp.dev/yazi" target="_blank"&gt; &lt;sup&gt;Special thanks to:&lt;/sup&gt; &lt;br /&gt; &lt;img alt="Warp sponsorship" width="400" src="https://github.com/warpdotdev/brand-assets/raw/main/Github/Sponsor/Warp-Github-LG-02.png" /&gt; &lt;br /&gt; 
  &lt;h&gt;
   Warp, built for coding with multiple AI agents 
   &lt;br /&gt; 
   &lt;sup&gt;Available for macOS, Linux and Windows&lt;/sup&gt; 
  &lt;/h&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;Yazi - ‚ö°Ô∏è Blazing Fast Terminal File Manager&lt;/h2&gt; 
&lt;p&gt;Yazi (means "duck") is a terminal file manager written in Rust, based on non-blocking async I/O. It aims to provide an efficient, user-friendly, and customizable file management experience.&lt;/p&gt; 
&lt;p&gt;üí° A new article explaining its internal workings: &lt;a href="https://yazi-rs.github.io/blog/why-is-yazi-fast"&gt;Why is Yazi Fast?&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üöÄ &lt;strong&gt;Full Asynchronous Support&lt;/strong&gt;: All I/O operations are asynchronous, CPU tasks are spread across multiple threads, making the most of available resources.&lt;/li&gt; 
 &lt;li&gt;üí™ &lt;strong&gt;Powerful Async Task Scheduling and Management&lt;/strong&gt;: Provides real-time progress updates, task cancellation, and internal task priority assignment.&lt;/li&gt; 
 &lt;li&gt;üñºÔ∏è &lt;strong&gt;Built-in Support for Multiple Image Protocols&lt;/strong&gt;: Also integrated with √úberzug++ and Chafa, covering almost all terminals.&lt;/li&gt; 
 &lt;li&gt;üåü &lt;strong&gt;Built-in Code Highlighting and Image Decoding&lt;/strong&gt;: Combined with the pre-loading mechanism, greatly accelerates image and normal file loading.&lt;/li&gt; 
 &lt;li&gt;üîå &lt;strong&gt;Concurrent Plugin System&lt;/strong&gt;: UI plugins (rewriting most of the UI), functional plugins, custom previewer/preloader/spotter/fetcher; Just some pieces of Lua.&lt;/li&gt; 
 &lt;li&gt;üì° &lt;strong&gt;Data Distribution Service&lt;/strong&gt;: Built on a client-server architecture (no additional server process required), integrated with a Lua-based publish-subscribe model, achieving cross-instance communication and state persistence.&lt;/li&gt; 
 &lt;li&gt;üì¶ &lt;strong&gt;Package Manager&lt;/strong&gt;: Install plugins and themes with one command, keeping them up-to-date, or pin them to a specific version.&lt;/li&gt; 
 &lt;li&gt;üß∞ Integration with ripgrep, fd, fzf, zoxide&lt;/li&gt; 
 &lt;li&gt;üí´ Vim-like input/pick/confirm/which/notify component, auto-completion for cd paths&lt;/li&gt; 
 &lt;li&gt;üè∑Ô∏è Multi-Tab Support, Cross-directory selection, Scrollable Preview (for videos, PDFs, archives, code, directories, etc.)&lt;/li&gt; 
 &lt;li&gt;üîÑ Bulk Renaming, Archive Extraction, Visual Mode, File Chooser, &lt;a href="https://github.com/yazi-rs/plugins/tree/main/git.yazi"&gt;Git Integration&lt;/a&gt;, &lt;a href="https://github.com/yazi-rs/plugins/tree/main/mount.yazi"&gt;Mount Manager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé® Theme System, Mouse Support, Trash Bin, Custom Layouts, Virtual Filesystem, CSI u, OSC 52&lt;/li&gt; 
 &lt;li&gt;... and more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/sxyazi/yazi/assets/17523360/92ff23fa-0cd5-4f04-b387-894c12265cc7"&gt;https://github.com/sxyazi/yazi/assets/17523360/92ff23fa-0cd5-4f04-b387-894c12265cc7&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Project status&lt;/h2&gt; 
&lt;p&gt;Public beta, can be used as a daily driver.&lt;/p&gt; 
&lt;p&gt;Yazi is currently in heavy development, expect breaking changes.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Usage: &lt;a href="https://yazi-rs.github.io/docs/installation"&gt;https://yazi-rs.github.io/docs/installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Features: &lt;a href="https://yazi-rs.github.io/features"&gt;https://yazi-rs.github.io/features&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Discussion&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discord Server (English mainly): &lt;a href="https://discord.gg/qfADduSdJu"&gt;https://discord.gg/qfADduSdJu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Telegram Group (Chinese mainly): &lt;a href="https://t.me/yazi_rs"&gt;https://t.me/yazi_rs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Image Preview&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Protocol&lt;/th&gt; 
   &lt;th&gt;Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/kovidgoyal/kitty"&gt;kitty&lt;/a&gt; (&amp;gt;= 0.28.0)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://sw.kovidgoyal.net/kitty/graphics-protocol/#unicode-placeholders"&gt;Kitty unicode placeholders&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com"&gt;iTerm2&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;Inline images protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/wez/wezterm"&gt;WezTerm&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;Inline images protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://invent.kde.org/utilities/konsole"&gt;Konsole&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/sxyazi/yazi/raw/main/yazi-adapter/src/drivers/kgp_old.rs"&gt;Kitty old protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://codeberg.org/dnkl/foot"&gt;foot&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.vt100.net/docs/vt3xx-gp/chapter14.html"&gt;Sixel graphics format&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ghostty-org/ghostty"&gt;Ghostty&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://sw.kovidgoyal.net/kitty/graphics-protocol/#unicode-placeholders"&gt;Kitty unicode placeholders&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/microsoft/terminal"&gt;Windows Terminal&lt;/a&gt; (&amp;gt;= v1.22.10352.0)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.vt100.net/docs/vt3xx-gp/chapter14.html"&gt;Sixel graphics format&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/bakkeby/st-flexipatch"&gt;st with Sixel patch&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.vt100.net/docs/vt3xx-gp/chapter14.html"&gt;Sixel graphics format&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.warp.dev"&gt;Warp&lt;/a&gt; (macOS/Linux only)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;Inline images protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Eugeny/tabby"&gt;Tabby&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;Inline images protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/microsoft/vscode"&gt;VSCode&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;Inline images protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/raphamorim/rio"&gt;Rio&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;Inline images protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://gitlab.gnome.org/raggesilver/blackbox"&gt;Black Box&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.vt100.net/docs/vt3xx-gp/chapter14.html"&gt;Sixel graphics format&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vercel/hyper"&gt;Hyper&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;Inline images protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ismail-yilmaz/Bobcat"&gt;Bobcat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;Inline images protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;X11 / Wayland&lt;/td&gt; 
   &lt;td&gt;Window system protocol&lt;/td&gt; 
   &lt;td&gt;‚òëÔ∏è &lt;a href="https://github.com/jstkdng/ueberzugpp"&gt;√úberzug++&lt;/a&gt; required&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Fallback&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://en.wikipedia.org/wiki/ASCII_art"&gt;ASCII art (Unicode block)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚òëÔ∏è &lt;a href="https://hpjansson.org/chafa/"&gt;Chafa&lt;/a&gt; required&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;See &lt;a href="https://yazi-rs.github.io/docs/image-preview"&gt;https://yazi-rs.github.io/docs/image-preview&lt;/a&gt; for details.&lt;/p&gt; 
&lt;!-- Protocols --&gt; 
&lt;!-- Dependencies --&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Yazi is MIT-licensed. For more information check the &lt;a href="https://raw.githubusercontent.com/sxyazi/yazi/main/LICENSE"&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jj-vcs/jj</title>
      <link>https://github.com/jj-vcs/jj</link>
      <description>&lt;p&gt;A Git-compatible VCS that is both simple and powerful&lt;/p&gt;&lt;hr&gt;&lt;div class="title-block" style="text-align: center;" align="center"&gt; 
 &lt;h1&gt;Jujutsu‚Äîa version control system&lt;/h1&gt; 
 &lt;p&gt;&lt;img title="jj logo" src="https://raw.githubusercontent.com/jj-vcs/jj/main/docs/images/jj-logo.svg?sanitize=true" width="320" height="320" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/jj-vcs/jj/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/martinvonz/jj" alt="Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jj-vcs/jj/releases"&gt;&lt;img src="https://img.shields.io/github/release-date/martinvonz/jj" alt="Release date" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://github.com/jj-vcs/jj/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/martinvonz/jj" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/dkmfj3aGQN"&gt;&lt;img src="https://img.shields.io/discord/968932220549103686.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://web.libera.chat/?channel=#jujutsu"&gt;&lt;img src="https://img.shields.io/badge/irc-%23jujutsu-blue.svg?sanitize=true" alt="IRC" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://jj-vcs.github.io/jj"&gt;Homepage&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://jj-vcs.github.io/jj/latest/install-and-setup"&gt;Installation&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://jj-vcs.github.io/jj/latest/tutorial"&gt;Getting Started&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://jj-vcs.github.io/jj/latest/roadmap"&gt;Development Roadmap&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/jj-vcs/jj/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Jujutsu is a powerful &lt;a href="https://en.wikipedia.org/wiki/Version_control"&gt;version control system&lt;/a&gt; for software projects. You use it to get a copy of your code, track changes to the code, and finally publish those changes for others to see and use. It is designed from the ground up to be easy to use‚Äîwhether you're new or experienced, working on brand new projects alone, or large scale software projects with large histories and teams.&lt;/p&gt; 
&lt;p&gt;Jujutsu is unlike most other systems, because internally it abstracts the user interface and version control algorithms from the &lt;em&gt;storage systems&lt;/em&gt; used to serve your content. This allows it to serve as a VCS with many possible physical backends, that may have their own data or networking models‚Äîlike &lt;a href="https://www.mercurial-scm.org/"&gt;Mercurial&lt;/a&gt; or &lt;a href="https://www.breezy-vcs.org/"&gt;Breezy&lt;/a&gt;, or hybrid systems like Google's cloud-based design, &lt;a href="https://youtu.be/W71BTkUbdqE?t=645"&gt;Piper/CitC&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Today, we use Git repositories as a storage layer to serve and track content, making it &lt;strong&gt;compatible with many of your favorite Git-based tools, right now!&lt;/strong&gt; All core developers use Jujutsu to develop Jujutsu, right here on GitHub. But it should hopefully work with your favorite Git forges, too.&lt;/p&gt; 
&lt;p&gt;We combine many distinct design choices and concepts from other version control systems into a single tool. Some of those sources of inspiration include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt;: We make an effort to &lt;a href="https://github.com/jj-vcs/jj/discussions/49"&gt;be fast&lt;/a&gt;‚Äîwith a snappy UX, efficient algorithms, correct data structures, and good-old-fashioned attention to detail. The default storage backend uses Git repositories for "physical storage", for wide interoperability and ease of onboarding.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Mercurial &amp;amp; Sapling&lt;/strong&gt;: There are many Mercurial-inspired features, such as the &lt;a href="https://jj-vcs.github.io/jj/latest/revsets/"&gt;revset&lt;/a&gt; language to select commits. There is &lt;a href="https://jj-vcs.github.io/jj/latest/git-comparison/#the-index"&gt;no explicit index&lt;/a&gt; or staging area. Branches are "anonymous" like Mercurial, so you don't need to make up a name for each small change. Primitives for rewriting history are powerful and simple. Formatting output is done with a robust template language that can be configured by the user.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Darcs&lt;/strong&gt;: Jujutsu keeps track of conflicts as &lt;a href="https://jj-vcs.github.io/jj/latest/conflicts/"&gt;first-class objects&lt;/a&gt; in its model; they are first-class in the same way commits are, while alternatives like Git simply think of conflicts as textual diffs. While not as rigorous as systems like Darcs (which is based on a formalized theory of patches, as opposed to snapshots), the effect is that many forms of conflict resolution can be performed and propagated automatically.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And it adds several innovative, useful features of its own:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Working-copy-as-a-commit&lt;/strong&gt;: Changes to files are &lt;a href="https://jj-vcs.github.io/jj/latest/working-copy/"&gt;recorded automatically&lt;/a&gt; as normal commits, and amended on every subsequent change. This "snapshot" design simplifies the user-facing data model (commits are the only visible object), simplifies internal algorithms, and completely subsumes features like Git's stashes or the index/staging-area.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Operation log &amp;amp; undo&lt;/strong&gt;: Jujutsu records every operation that is performed on the repository, from commits, to pulls, to pushes. This makes debugging problems like "what just happened?" or "how did I end up here?" easier, &lt;em&gt;especially&lt;/em&gt; when you're helping your coworker answer those questions about their repository! And because everything is recorded, you can undo that mistake you just made with ease. Version control has finally entered &lt;a href="https://en.wikipedia.org/wiki/Undo#History"&gt;the 1960s&lt;/a&gt;!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Automatic rebase and conflict resolution&lt;/strong&gt;: When you modify a commit, every descendent is automatically rebased on top of the freshly-modified one. This makes "patch-based" workflows a breeze. If you resolve a conflict in a commit, the &lt;em&gt;resolution&lt;/em&gt; of that conflict is also propagated through descendants as well. In effect, this is a completely transparent version of &lt;code&gt;git rebase --update-refs&lt;/code&gt; combined with &lt;code&gt;git rerere&lt;/code&gt;, supported by design.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] The following features are available for use, but experimental; they may have bugs, backwards incompatible storage changes, and user-interface changes!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Safe, concurrent replication&lt;/strong&gt;: Have you ever wanted to store your version controlled repositories inside a Dropbox folder? Or continuously backup repositories to S3? No? Well, now you can!&lt;/p&gt; &lt;p&gt;The fundamental problem with using filesystems like Dropbox and backup tools like &lt;code&gt;rsync&lt;/code&gt; on your typical Git/Mercurial repositories is that they rely on &lt;em&gt;local filesystem operations&lt;/em&gt; being atomic, serialized, and non-concurrent with respect to other reads and writes‚Äîwhich is &lt;em&gt;not&lt;/em&gt; true when operating on distributed file systems, or when operations like concurrent file copies (for backup) happen while lock files are being held.&lt;/p&gt; &lt;p&gt;Jujutsu is instead designed to be &lt;a href="https://jj-vcs.github.io/jj/latest/technical/concurrency/"&gt;safe under concurrent scenarios&lt;/a&gt;; simply using rsync or Dropbox and then using that resulting repository should never result in a repository in a &lt;em&gt;corrupt state&lt;/em&gt;. The worst that &lt;em&gt;should&lt;/em&gt; happen is that it will expose conflicts between the local and remote state, leaving you to resolve them.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The command-line tool is called &lt;code&gt;jj&lt;/code&gt; for now because it's easy to type and easy to replace (rare in English). The project is called "Jujutsu" because it matches "jj".&lt;/p&gt; 
&lt;p&gt;Jujutsu is relatively young, with lots of work to still be done. If you have any questions, or want to talk about future plans, please join us on Discord &lt;a href="https://discord.gg/dkmfj3aGQN"&gt;&lt;img src="https://img.shields.io/discord/968932220549103686.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2" alt="Discord" /&gt;&lt;/a&gt;, start a &lt;a href="https://github.com/jj-vcs/jj/discussions"&gt;GitHub Discussion&lt;/a&gt;, or send an IRC message to &lt;a href="https://web.libera.chat/?channel=#jujutsu"&gt;&lt;code&gt;#jujutsu&lt;/code&gt; on Libera Chat&lt;/a&gt;. The developers monitor all of these channels[^bridge].&lt;/p&gt; 
&lt;p&gt;[^bridge]: To be more precise, the &lt;code&gt;#jujutsu&lt;/code&gt; Libera IRC channel is bridged to one of the channels on jj's Discord. Some of the developers stay on Discord and use the bridge to follow IRC.&lt;/p&gt; 
&lt;h3&gt;News and Updates üì£&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;December 2024&lt;/strong&gt;: The &lt;code&gt;jj&lt;/code&gt; Repository has moved to the &lt;code&gt;jj-vcs&lt;/code&gt; GitHub organisation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;November 2024&lt;/strong&gt;: Version 0.24 is released which adds &lt;code&gt;jj file annotate&lt;/code&gt;, which is equivalent to &lt;code&gt;git blame&lt;/code&gt; or &lt;code&gt;hg annotate&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;September 2024&lt;/strong&gt;: Martin gave a &lt;a href="https://www.youtube.com/watch?v=LV0JzI8IcCY"&gt;presentation about Jujutsu&lt;/a&gt; at Git Merge 2024.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Feb 2024&lt;/strong&gt;: Version 0.14 is released, which deprecates &lt;a href="https://raw.githubusercontent.com/jj-vcs/jj/main/CHANGELOG.md#0140---2024-02-07"&gt;"jj checkout" and "jj merge"&lt;/a&gt;, as well as &lt;code&gt;jj init --git&lt;/code&gt;, which is now just called &lt;code&gt;jj git init&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Oct 2023&lt;/strong&gt;: Version 0.10.0 is released! Now includes a bundled merge and diff editor for all platforms, "immutable revsets" to avoid accidentally &lt;code&gt;edit&lt;/code&gt;-ing the wrong revisions, and lots of polish.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jan 2023&lt;/strong&gt;: Martin gave a presentation about Google's plans for Jujutsu at Git Merge 2022! See the &lt;a href="https://docs.google.com/presentation/d/1F8j9_UOOSGUN9MvHxPZX_L4bQ9NMcYOp1isn17kTC_M/view"&gt;slides&lt;/a&gt; or the &lt;a href="https://www.youtube.com/watch?v=bx_LGilOuE4"&gt;recording&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Related Media&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Mar 2024&lt;/strong&gt;: Chris Krycho started &lt;a href="https://www.youtube.com/playlist?list=PLelyiwKWHHAq01Pvmpf6x7J0y-yQpmtxp"&gt;a YouTube series about Jujutsu&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Feb 2024&lt;/strong&gt;: Chris Krycho published an article about Jujutsu called &lt;a href="https://v5.chriskrycho.com/essays/jj-init/"&gt;jj init&lt;/a&gt; and Steve Klabnik followed up with the &lt;a href="https://steveklabnik.github.io/jujutsu-tutorial/"&gt;Jujutsu Tutorial&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jan 2024&lt;/strong&gt;: Jujutsu was featured in an LWN.net article called &lt;a href="https://lwn.net/Articles/958468/"&gt;Jujutsu: a new, Git-compatible version control system&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jan 2023&lt;/strong&gt;: Martin's Talk about Jujutsu at Git Merge 2022, &lt;a href="https://www.youtube.com/watch?v=bx_LGilOuE4"&gt;video&lt;/a&gt; and the associated &lt;a href="https://docs.google.com/presentation/d/1F8j9_UOOSGUN9MvHxPZX_L4bQ9NMcYOp1isn17kTC_M/view"&gt;slides&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The wiki also contains a more extensive list of &lt;a href="https://github.com/jj-vcs/jj/wiki/Media"&gt;media references&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Jujutsu is an &lt;strong&gt;experimental version control system&lt;/strong&gt;. While Git compatibility is stable, and most developers use it daily for all their needs, there may still be work-in-progress features, suboptimal UX, and workflow gaps that make it unusable for your particular use.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Follow the &lt;a href="https://jj-vcs.github.io/jj/latest/install-and-setup"&gt;installation instructions&lt;/a&gt; to obtain and configure &lt;code&gt;jj&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The best way to get started is probably to go through &lt;a href="https://jj-vcs.github.io/jj/latest/tutorial"&gt;the tutorial&lt;/a&gt;. Also see the &lt;a href="https://jj-vcs.github.io/jj/latest/git-comparison"&gt;Git comparison&lt;/a&gt;, which includes a table of &lt;code&gt;jj&lt;/code&gt; vs. &lt;code&gt;git&lt;/code&gt; commands.&lt;/p&gt; 
&lt;p&gt;As you become more familiar with Jujutsu, the following resources may be helpful:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href="https://jj-vcs.github.io/jj/latest/FAQ"&gt;FAQ&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://jj-vcs.github.io/jj/latest/glossary"&gt;Glossary&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;jj help&lt;/code&gt; command (e.g. &lt;code&gt;jj help rebase&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;jj help -k &amp;lt;keyword&amp;gt;&lt;/code&gt; command (e.g. &lt;code&gt;jj help -k config&lt;/code&gt;). Use &lt;code&gt;jj help --help&lt;/code&gt; to see what keywords are available.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are using a &lt;strong&gt;prerelease&lt;/strong&gt; version of &lt;code&gt;jj&lt;/code&gt;, you would want to consult &lt;a href="https://jj-vcs.github.io/jj/prerelease/"&gt;the docs for the prerelease (main branch) version&lt;/a&gt;. You can also get there from the docs for the latest release by using the website's version switcher. The version switcher is visible in the header of the website when you scroll to the top of any page.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Compatible with Git&lt;/h3&gt; 
&lt;p&gt;Jujutsu is designed so that the underlying data and storage model is abstract. Today, only the Git backend is production-ready. The Git backend uses the &lt;a href="https://github.com/Byron/gitoxide"&gt;gitoxide&lt;/a&gt; Rust library.&lt;/p&gt; 
&lt;p&gt;The Git backend is fully featured and maintained, and allows you to use Jujutsu with any Git remote. The commits you create will look like regular Git commits. You can fetch branches from a regular Git remote and push branches to the remote. You can always switch back to Git.&lt;/p&gt; 
&lt;p&gt;Here is how you can explore a GitHub repository with &lt;code&gt;jj&lt;/code&gt;.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/jj-vcs/jj/main/demos/git_compat.png" /&gt; 
&lt;p&gt;You can even have a &lt;a href="https://jj-vcs.github.io/jj/latest/git-compatibility#co-located-jujutsugit-repos"&gt;"co-located" local repository&lt;/a&gt; where you can use both &lt;code&gt;jj&lt;/code&gt; and &lt;code&gt;git&lt;/code&gt; commands interchangeably.&lt;/p&gt; 
&lt;h3&gt;The working copy is automatically committed&lt;/h3&gt; 
&lt;p&gt;Jujutsu uses a real commit to represent the working copy. Checking out a commit results a new working-copy commit on top of the target commit. Almost all commands automatically amend the working-copy commit.&lt;/p&gt; 
&lt;p&gt;The working-copy being a commit means that commands never fail because the working copy is dirty (no "error: Your local changes to the following files..."), and there is no need for &lt;code&gt;git stash&lt;/code&gt;. Also, because the working copy is a commit, commands work the same way on the working-copy commit as on any other commit, so you can set the commit message before you're done with the changes.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/jj-vcs/jj/main/demos/working_copy.png" /&gt; 
&lt;h3&gt;The repo is the source of truth&lt;/h3&gt; 
&lt;p&gt;With Jujutsu, the working copy plays a smaller role than with Git. Commands snapshot the working copy before they start, then they update the repo, and then the working copy is updated (if the working-copy commit was modified). Almost all commands (even checkout!) operate on the commits in the repo, leaving the common functionality of snapshotting and updating of the working copy to centralized code. For example, &lt;code&gt;jj restore&lt;/code&gt; (similar to &lt;code&gt;git restore&lt;/code&gt;) can restore from any commit and into any commit, and &lt;code&gt;jj describe&lt;/code&gt; can set the commit message of any commit (defaults to the working-copy commit).&lt;/p&gt; 
&lt;h3&gt;Entire repo is under version control&lt;/h3&gt; 
&lt;p&gt;All operations you perform in the repo are recorded, along with a snapshot of the repo state after the operation. This means that you can easily restore to an earlier repo state, simply undo your operations one-by-one or even &lt;em&gt;revert&lt;/em&gt; a particular operation which does not have to be the most recent one.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/jj-vcs/jj/main/demos/operation_log.png" /&gt; 
&lt;h3&gt;Conflicts can be recorded in commits&lt;/h3&gt; 
&lt;p&gt;If an operation results in &lt;a href="https://jj-vcs.github.io/jj/latest/glossary#conflict"&gt;conflicts&lt;/a&gt;, information about those conflicts will be recorded in the commit(s). The operation will succeed. You can then resolve the conflicts later. One consequence of this design is that there's no need to continue interrupted operations. Instead, you get a single workflow for resolving conflicts, regardless of which command caused them. This design also lets Jujutsu rebase merge commits correctly (unlike both Git and Mercurial).&lt;/p&gt; 
&lt;p&gt;Basic conflict resolution:&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/jj-vcs/jj/main/demos/resolve_conflicts.png" /&gt; 
&lt;p&gt;Juggling conflicts:&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/jj-vcs/jj/main/demos/juggle_conflicts.png" /&gt; 
&lt;h3&gt;Automatic rebase&lt;/h3&gt; 
&lt;p&gt;Whenever you modify a commit, any descendants of the old commit will be rebased onto the new commit. Thanks to the conflict design described above, that can be done even if there are conflicts. Bookmarks pointing to rebased commits will be updated. So will the working copy if it points to a rebased commit.&lt;/p&gt; 
&lt;h3&gt;Comprehensive support for rewriting history&lt;/h3&gt; 
&lt;p&gt;Besides the usual rebase command, there's &lt;code&gt;jj describe&lt;/code&gt; for editing the description (commit message) of an arbitrary commit. There's also &lt;code&gt;jj diffedit&lt;/code&gt;, which lets you edit the changes in a commit without checking it out. To split a commit into two, use &lt;code&gt;jj split&lt;/code&gt;. You can even move part of the changes in a commit to any other commit using &lt;code&gt;jj squash -i --from X --into Y&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;p&gt;The tool is fairly feature-complete, but some important features like support for Git submodules are not yet completed. There are also several performance bugs. It's likely that workflows and setups different from what the core developers use are not well supported, e.g. there is no native support for email-based workflows.&lt;/p&gt; 
&lt;p&gt;Today, all core developers use &lt;code&gt;jj&lt;/code&gt; to work on &lt;code&gt;jj&lt;/code&gt;. I (Martin von Zweigbergk) have almost exclusively used &lt;code&gt;jj&lt;/code&gt; to develop the project itself since early January 2021. I haven't had to re-clone from source (I don't think I've even had to restore from backup).&lt;/p&gt; 
&lt;p&gt;There &lt;em&gt;will&lt;/em&gt; be changes to workflows and backward-incompatible changes to the on-disk formats before version 1.0.0. For any format changes, we'll try to implement transparent upgrades (as we've done with recent changes), or provide upgrade commands or scripts if requested.&lt;/p&gt; 
&lt;h2&gt;Related work&lt;/h2&gt; 
&lt;p&gt;There are several tools trying to solve similar problems as Jujutsu. See &lt;a href="https://jj-vcs.github.io/jj/latest/related-work"&gt;related work&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome outside contributions, and there's plenty of things to do, so don't be shy. Please ask if you want a pointer on something you can help with, and hopefully we can all figure something out.&lt;/p&gt; 
&lt;p&gt;We do have &lt;a href="https://jj-vcs.github.io/jj/prerelease/contributing/"&gt;a few policies and suggestions&lt;/a&gt; for contributors. The broad TL;DR:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bug reports are very welcome!&lt;/li&gt; 
 &lt;li&gt;Every commit that lands in the &lt;code&gt;main&lt;/code&gt; branch is code reviewed.&lt;/li&gt; 
 &lt;li&gt;Please behave yourself, and obey the Community Guidelines.&lt;/li&gt; 
 &lt;li&gt;There &lt;strong&gt;is&lt;/strong&gt; a mandatory CLA you must agree to. Importantly, it &lt;strong&gt;does not&lt;/strong&gt; transfer copyright ownership to Google or anyone else; it simply gives us the right to safely redistribute and use your changes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mandatory Google Disclaimer&lt;/h3&gt; 
&lt;p&gt;I (Martin von Zweigbergk, &lt;a href="mailto:martinvonz@google.com"&gt;martinvonz@google.com&lt;/a&gt;) started Jujutsu as a hobby project in late 2019, and it has evolved into my full-time project at Google, with several other Googlers (now) assisting development in various capacities. That said, &lt;strong&gt;this is not a Google product&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Jujutsu is available as Open Source Software, under the Apache 2.0 license. See &lt;a href="https://raw.githubusercontent.com/jj-vcs/jj/main/LICENSE"&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; for details about copyright and redistribution.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;jj&lt;/code&gt; logo was contributed by J. Jennings and is licensed under a Creative Commons License, see &lt;a href="https://raw.githubusercontent.com/jj-vcs/jj/main/docs/images/LICENSE"&gt;&lt;code&gt;docs/images/LICENSE&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DioxusLabs/dioxus</title>
      <link>https://github.com/DioxusLabs/dioxus</link>
      <description>&lt;p&gt;Fullstack app framework for web, desktop, and mobile.&lt;/p&gt;&lt;hr&gt;&lt;p&gt; &lt;/p&gt;
&lt;p align="center"&gt; 
 &lt;!-- &lt;img src="./notes/header-light-updated.svg#gh-light-mode-only" &gt;
      &lt;img src="./notes/header-dark-updated.svg#gh-dark-mode-only" &gt; --&gt; 
 &lt;!-- &lt;a href="https://dioxuslabs.com"&gt;
          &lt;img src="./notes/flat-splash.avif"&gt;
      &lt;/a&gt; --&gt; &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/splash-header-darkmode.svg#gh-dark-mode-only" style="width: 80%; height: auto;" /&gt; &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/splash-header.svg#gh-light-mode-only" style="width: 80%; height: auto;" /&gt; &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/image-splash.avif" /&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;!-- Crates version --&gt; 
 &lt;a href="https://crates.io/crates/dioxus"&gt; &lt;img src="https://img.shields.io/crates/v/dioxus.svg?style=flat-square" alt="Crates.io version" /&gt; &lt;/a&gt; 
 &lt;!-- Downloads --&gt; 
 &lt;a href="https://crates.io/crates/dioxus"&gt; &lt;img src="https://img.shields.io/crates/d/dioxus.svg?style=flat-square" alt="Download" /&gt; &lt;/a&gt; 
 &lt;!-- docs --&gt; 
 &lt;a href="https://docs.rs/dioxus"&gt; &lt;img src="https://img.shields.io/badge/docs-latest-blue.svg?style=flat-square" alt="docs.rs docs" /&gt; &lt;/a&gt; 
 &lt;!-- CI --&gt; 
 &lt;a href="https://github.com/jkelleyrtp/dioxus/actions"&gt; &lt;img src="https://github.com/dioxuslabs/dioxus/actions/workflows/main.yml/badge.svg?sanitize=true" alt="CI status" /&gt; &lt;/a&gt; 
 &lt;!--Awesome --&gt; 
 &lt;a href="https://dioxuslabs.com/awesome"&gt; &lt;img src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true" alt="Awesome Page" /&gt; &lt;/a&gt; 
 &lt;!-- Discord --&gt; 
 &lt;a href="https://discord.gg/XgGxMSkvUM"&gt; &lt;img src="https://img.shields.io/discord/899851952891002890.svg?logo=discord&amp;amp;style=flat-square" alt="Discord Link" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt; &lt;a href="https://dioxuslabs.com"&gt; Website &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href="https://github.com/DioxusLabs/dioxus/tree/main/examples"&gt; Examples &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href="https://dioxuslabs.com/learn/0.6/guide"&gt; Guide &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href="https://github.com/DioxusLabs/dioxus/raw/main/translations/zh-cn/README.md"&gt; ‰∏≠Êñá &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href="https://github.com/DioxusLabs/dioxus/raw/main/translations/pt-br/README.md"&gt; PT-BR &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href="https://github.com/DioxusLabs/dioxus/raw/main/translations/ja-jp/README.md"&gt; Êó•Êú¨Ë™û &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href="https://github.com/DioxusLabs/dioxus/raw/main/translations/tr-tr"&gt; T√ºrk√ße &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href="https://github.com/DioxusLabs/dioxus/raw/main/translations/ko-kr"&gt; ÌïúÍµ≠Ïñ¥ &lt;/a&gt; &lt;/h3&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/DioxusLabs/dioxus/releases/tag/v0.7.0-alpha.0"&gt;‚ú® Dioxus 0.7 is in alpha - test it out! ‚ú®&lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;Build for web, desktop, and mobile, and more with a single codebase. Zero-config setup, integrated hot-reloading, and signals-based state management. Add backend functionality with Server Functions and bundle with our CLI.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;fn app() -&amp;gt; Element {
    let mut count = use_signal(|| 0);

    rsx! {
        h1 { "High-Five counter: {count}" }
        button { onclick: move |_| count += 1, "Up high!" }
        button { onclick: move |_| count -= 1, "Down low!" }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;‚≠êÔ∏è Unique features:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Cross-platform apps in three lines of code (web, desktop, mobile, server, and more)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dioxuslabs.com/blog/release-050"&gt;Ergonomic state management&lt;/a&gt; combines the best of React, Solid, and Svelte&lt;/li&gt; 
 &lt;li&gt;Built-in featureful, type-safe, fullstack web framework&lt;/li&gt; 
 &lt;li&gt;Integrated bundler for deploying to the web, macOS, Linux, and Windows&lt;/li&gt; 
 &lt;li&gt;Subsecond Rust hot-patching and asset hot-reloading&lt;/li&gt; 
 &lt;li&gt;And more! &lt;a href="https://dioxuslabs.com/learn/0.6/"&gt;Take a tour of Dioxus&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Instant hot-reloading&lt;/h2&gt; 
&lt;p&gt;With one command, &lt;code&gt;dx serve&lt;/code&gt; and your app is running. Edit your markup, styles, and see changes in milliseconds. Use our experimental &lt;code&gt;dx serve --hotpatch&lt;/code&gt; to update Rust code in real time.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/screenshots/refs/heads/main/blitz/hotreload-video.webp" /&gt; 
 &lt;!-- &lt;video src="https://private-user-images.githubusercontent.com/10237910/386919031-6da371d5-3340-46da-84ff-628216851ba6.mov" width="500"&gt;&lt;/video&gt; --&gt; 
 &lt;!-- &lt;video src="https://private-user-images.githubusercontent.com/10237910/386919031-6da371d5-3340-46da-84ff-628216851ba6.mov" width="500"&gt;&lt;/video&gt; --&gt; 
&lt;/div&gt; 
&lt;h2&gt;Build Beautiful Apps&lt;/h2&gt; 
&lt;p&gt;Dioxus apps are styled with HTML and CSS. Use the built-in TailwindCSS support or load your favorite CSS library. Easily call into native code (objective-c, JNI, Web-Sys) for a perfect native touch.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/ebou2.avif" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Experimental Native Renderer&lt;/h2&gt; 
&lt;p&gt;Render using web-sys, webview, server-side-rendering, liveview, or even with our experimental WGPU-based renderer. Embed Dioxus in Bevy, WGPU, or even run on embedded Linux!&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/screenshots/refs/heads/main/blitz/native-blitz-wgpu.webp" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;First-party primitive components&lt;/h2&gt; 
&lt;p&gt;Get started quickly with a complete set of primitives modeled after shadcn/ui and Radix-Primitives.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/primitive-components.avif" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;First-class Android and iOS support&lt;/h2&gt; 
&lt;p&gt;Dioxus is the fastest way to build native mobile apps with Rust. Simply run &lt;code&gt;dx serve --platform android&lt;/code&gt; and your app is running in an emulator or on device in seconds. Call directly into JNI and Native APIs.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/android_and_ios2.avif" width="500" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Productive, typesafe, fullstack web framework&lt;/h2&gt; 
&lt;p&gt;Directly call your backend from your frontend with our built-in type-safe RPC using &lt;a href="http://crates.io/crates/server_fn"&gt;&lt;code&gt;server_fn&lt;/code&gt;&lt;/a&gt;. Supports streaming, suspense, bundle splitting, websockets, and more.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;fn app() -&amp;gt; Element {
  let mut fortune = use_signal(|| "Fetch a fortune!");
  rsx! {
    h1 { "{fortune}" }
    button {
      onclick: move |_| async move {
        fortune.set(fetch_fortune().await.unwrap());
      }
    }
  }
}

#[server]
async fn fetch_fortune() -&amp;gt; ServerFnResult&amp;lt;String&amp;gt; {
  "Dioxus is super productive!".to_string()
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Bundle for web, desktop, and mobile&lt;/h2&gt; 
&lt;p&gt;Simply run &lt;code&gt;dx bundle&lt;/code&gt; and your app will be built and bundled with maximization optimizations. On the web, take advantage of &lt;a href="https://dioxuslabs.com/learn/0.6/guides/assets"&gt;&lt;code&gt;.avif&lt;/code&gt; generation, &lt;code&gt;.wasm&lt;/code&gt; compression, minification&lt;/a&gt;, and more. Build WebApps weighing &lt;a href="https://github.com/ealmloff/tiny-dioxus/"&gt;less than 50kb&lt;/a&gt; and desktop/mobile apps less than 5mb.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/bundle.gif" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Fantastic documentation&lt;/h2&gt; 
&lt;p&gt;We've put a ton of effort into building clean, readable, and comprehensive documentation. All html elements and listeners are documented with MDN docs, and our Docs runs continuous integration with Dioxus itself to ensure that the docs are always up to date. Check out the &lt;a href="https://dioxuslabs.com/learn/0.6/"&gt;Dioxus website&lt;/a&gt; for guides, references, recipes, and more. Fun fact: we use the Dioxus website as a testbed for new Dioxus features - &lt;a href="https://github.com/dioxusLabs/docsite"&gt;check it out!&lt;/a&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/docs.avif" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Modular and Customizable&lt;/h2&gt; 
&lt;p&gt;Build your own renderer, or use a community renderer like &lt;a href="http://freyaui.dev"&gt;Freya&lt;/a&gt;. Use our modular components like RSX, VirtualDom, Blitz, Taffy, and Subsecond.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/screenshots/refs/heads/main/blitz/freya-todo-example.webp" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Dioxus is a community-driven project, with a very active &lt;a href="https://discord.gg/XgGxMSkvUM"&gt;Discord&lt;/a&gt; and &lt;a href="https://github.com/DioxusLabs/dioxus/issues"&gt;GitHub&lt;/a&gt; community. We're always looking for help, and we're happy to answer questions and help you get started. &lt;a href="https://github.com/DioxusLabs/dioxus-std"&gt;Our SDK&lt;/a&gt; is community-run and we even have a &lt;a href="https://github.com/dioxus-community/"&gt;GitHub organization&lt;/a&gt; for the best Dioxus crates that receive free upgrades and support.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/dioxus-community.avif" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Full-time core team&lt;/h2&gt; 
&lt;p&gt;Dioxus has grown from a side project to a small team of fulltime engineers. Thanks to the generous support of FutureWei, Satellite.im, the GitHub Accelerator program, we're able to work on Dioxus full-time. Our long term goal is for Dioxus to become self-sustaining by providing paid high-quality enterprise tools. If your company is interested in adopting Dioxus and would like to work with us, please reach out!&lt;/p&gt; 
&lt;h2&gt;Supported Platforms&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;table style="width:100%"&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td&gt; &lt;b&gt;Web&lt;/b&gt; &lt;/td&gt; 
    &lt;td&gt; 
     &lt;ul&gt; 
      &lt;li&gt;Render directly to the DOM using WebAssembly&lt;/li&gt; 
      &lt;li&gt;Pre-render with SSR and rehydrate on the client&lt;/li&gt; 
      &lt;li&gt;Simple "hello world" at about 50kb, comparable to React&lt;/li&gt; 
      &lt;li&gt;Built-in dev server and hot reloading for quick iteration&lt;/li&gt; 
     &lt;/ul&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt; &lt;b&gt;Desktop&lt;/b&gt; &lt;/td&gt; 
    &lt;td&gt; 
     &lt;ul&gt; 
      &lt;li&gt;Render using Webview or - experimentally - with WGPU or &lt;a href="https://freyaui.dev"&gt;Freya&lt;/a&gt; (Skia) &lt;/li&gt; 
      &lt;li&gt;Zero-config setup. Simply `cargo run` or `dx serve` to build your app &lt;/li&gt; 
      &lt;li&gt;Full support for native system access without IPC &lt;/li&gt; 
      &lt;li&gt;Supports macOS, Linux, and Windows. Portable &amp;lt;3mb binaries &lt;/li&gt; 
     &lt;/ul&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt; &lt;b&gt;Mobile&lt;/b&gt; &lt;/td&gt; 
    &lt;td&gt; 
     &lt;ul&gt; 
      &lt;li&gt;Render using Webview or - experimentally - with WGPU or Skia &lt;/li&gt; 
      &lt;li&gt;Build .ipa and .apk files for iOS and Android &lt;/li&gt; 
      &lt;li&gt;Call directly into Java and Objective-C with minimal overhead&lt;/li&gt; 
      &lt;li&gt;From "hello world" to running on device in seconds&lt;/li&gt; 
     &lt;/ul&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt; &lt;b&gt;Server-side Rendering&lt;/b&gt; &lt;/td&gt; 
    &lt;td&gt; 
     &lt;ul&gt; 
      &lt;li&gt;Suspense, hydration, and server-side rendering&lt;/li&gt; 
      &lt;li&gt;Quickly drop in backend functionality with server functions&lt;/li&gt; 
      &lt;li&gt;Extractors, middleware, and routing integrations&lt;/li&gt; 
      &lt;li&gt;Static-site generation and incremental regeneration&lt;/li&gt; 
     &lt;/ul&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;h2&gt;Running the examples&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The examples in the main branch of this repository target the git version of dioxus and the CLI. If you are looking for examples that work with the latest stable release of dioxus, check out the &lt;a href="https://github.com/DioxusLabs/dioxus/tree/v0.6/examples"&gt;0.6 branch&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The examples in the top level of this repository can be run with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cargo run --example &amp;lt;example&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, we encourage you to download the dioxus-cli to test out features like hot-reloading. To install the most recent binary CLI, you can use cargo binstall.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cargo binstall dioxus-cli@0.7.0-rc.0 --force
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If this CLI is out-of-date, you can install it directly from git&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cargo install --git https://github.com/DioxusLabs/dioxus dioxus-cli --locked
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the CLI, you can also run examples with the web platform. You will need to disable the default desktop feature and enable the web feature with this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;dx serve --example &amp;lt;example&amp;gt; --platform web -- --no-default-features
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check out the website &lt;a href="https://dioxuslabs.com/learn/0.6/contributing"&gt;section on contributing&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Report issues on our &lt;a href="https://github.com/dioxuslabs/dioxus/issues"&gt;issue tracker&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/XgGxMSkvUM"&gt;Join&lt;/a&gt; the discord and ask questions!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;a href="https://github.com/dioxuslabs/dioxus/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=dioxuslabs/dioxus&amp;amp;max=30&amp;amp;columns=10" /&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under either the &lt;a href="https://github.com/DioxusLabs/dioxus/raw/master/LICENSE-MIT"&gt;MIT license&lt;/a&gt; or the &lt;a href="https://github.com/DioxusLabs/dioxus/raw/master/LICENSE-APACHE"&gt;Apache-2 License&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in Dioxus by you, shall be licensed as MIT or Apache-2, without any additional terms or conditions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Priler/jarvis</title>
      <link>https://github.com/Priler/jarvis</link>
      <description>&lt;p&gt;Voice assistant made as an experiment using neural networks for things like STT/TTS/Wake Word/NLU etc.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JARVIS Voice Assistant&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Priler/jarvis/master/poster.jpg" alt="We are NOT limited by the technology of our time!" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Jarvis&lt;/code&gt; - is a voice assistant made as an experiment using neural networks for things like &lt;strong&gt;STT/TTS/Wake Word/NLU&lt;/strong&gt; etc.&lt;/p&gt; 
&lt;p&gt;The main project challenges we try to achieve is:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;100% offline &lt;em&gt;(no cloud)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Open source &lt;em&gt;(full transparency)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;No data collection &lt;em&gt;(we respect your privacy)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Our backend stack is ü¶Ä &lt;strong&gt;&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt;&lt;/strong&gt; with ‚ù§Ô∏è &lt;strong&gt;&lt;a href="https://tauri.app/"&gt;Tauri&lt;/a&gt;&lt;/strong&gt;.&lt;br /&gt; For the frontend we use ‚ö°Ô∏è &lt;strong&gt;&lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt;&lt;/strong&gt; + üõ†Ô∏è &lt;strong&gt;&lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Other libraries, tools and packages can be found in source code.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Neural Networks&lt;/h2&gt; 
&lt;p&gt;This are the neural networks we are currently using:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Speech-To-Text 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/alphacep/vosk-api"&gt;Vosk Speech Recognition Toolkit&lt;/a&gt; via &lt;a href="https://github.com/Bear-03/vosk-rs"&gt;Vosk-rs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Text-To-Speech 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/snakers4/silero-models"&gt;&lt;del&gt;Silero TTS&lt;/del&gt;&lt;/a&gt; &lt;em&gt;(currently not used)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coqui-ai/TTS"&gt;&lt;del&gt;Coqui TTS&lt;/del&gt;&lt;/a&gt; &lt;em&gt;(currently not used)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ndarilek/tts-rs"&gt;&lt;del&gt;WinRT&lt;/del&gt;&lt;/a&gt; &lt;em&gt;(currently not used)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/nightlyistaken/tts_rust"&gt;&lt;del&gt;gTTS&lt;/del&gt;&lt;/a&gt; &lt;em&gt;(currently not used)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/s-macke/SAM"&gt;&lt;del&gt;SAM&lt;/del&gt;&lt;/a&gt; &lt;em&gt;(currently not used)&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Wake Word 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GiviMAD/rustpotter"&gt;Rustpotter&lt;/a&gt; &lt;em&gt;(Partially implemented, still WIP)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Picovoice/porcupine"&gt;Picovoice Porcupine&lt;/a&gt; via &lt;a href="https://github.com/Picovoice/porcupine#rust"&gt;official SDK&lt;/a&gt; &lt;em&gt;(requires API key)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/alphacep/vosk-api"&gt;Vosk Speech Recognition Toolkit&lt;/a&gt; via &lt;a href="https://github.com/Bear-03/vosk-rs"&gt;Vosk-rs&lt;/a&gt; &lt;em&gt;(very slow)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;[&lt;del&gt;Snowboy&lt;/del&gt;] &lt;em&gt;(currently not used)&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;NLU 
  &lt;ul&gt; 
   &lt;li&gt;Nothing yet.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Chat 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://chat.openai.com/"&gt;&lt;del&gt;ChatGPT&lt;/del&gt;&lt;/a&gt; (coming soon)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Languages&lt;/h2&gt; 
&lt;p&gt;Currently, only Russian language is supported.&lt;br /&gt; But soon, Ukranian and English will be added for the interface, wake-word detection and speech recognition.&lt;/p&gt; 
&lt;h2&gt;How to build?&lt;/h2&gt; 
&lt;p&gt;Nothing special was used to build this project.&lt;br /&gt; You need only Rust and NodeJS installed on your system.&lt;br /&gt; Other than that, all you need is to install all the dependencies and then compile the code with &lt;code&gt;cargo tauri build&lt;/code&gt; command.&lt;br /&gt; Or run dev with &lt;code&gt;cargo tauri dev&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt; &lt;em&gt;Thought you might need some of the platform specific libraries for &lt;a href="https://github.com/Picovoice/pvrecorder"&gt;PvRecorder&lt;/a&gt; and &lt;a href="https://github.com/alphacep/vosk-api"&gt;Vosk&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;Abraham Tugalov&lt;/p&gt; 
&lt;h2&gt;Python version?&lt;/h2&gt; 
&lt;p&gt;Old version of Jarvis was built with Python.&lt;br /&gt; The last Python version commit can be found &lt;a href="https://github.com/Priler/jarvis/tree/943efbfbdb8aeb5889fa5e2dc7348ca4ea0b81df"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;Attribution-NonCommercial-ShareAlike 4.0 International&lt;/a&gt;&lt;br /&gt; See LICENSE.txt file for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sharkdp/fd</title>
      <link>https://github.com/sharkdp/fd</link>
      <description>&lt;p&gt;A simple, fast and user-friendly alternative to 'find'&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fd&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/sharkdp/fd/actions/workflows/CICD.yml"&gt;&lt;img src="https://github.com/sharkdp/fd/actions/workflows/CICD.yml/badge.svg?sanitize=true" alt="CICD" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/fd-find"&gt;&lt;img src="https://img.shields.io/crates/v/fd-find.svg?sanitize=true" alt="Version info" /&gt;&lt;/a&gt; [&lt;a href="https://github.com/cha0ran/fd-zh"&gt;‰∏≠Êñá&lt;/a&gt;] [&lt;a href="https://github.com/spearkkk/fd-kor"&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;fd&lt;/code&gt; is a program to find entries in your filesystem. It is a simple, fast and user-friendly alternative to &lt;a href="https://www.gnu.org/software/findutils/"&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt;. While it does not aim to support all of &lt;code&gt;find&lt;/code&gt;'s powerful functionality, it provides sensible (opinionated) defaults for a majority of use cases.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/sharkdp/fd/master/#installation"&gt;Installation&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/sharkdp/fd/master/#how-to-use"&gt;How to use&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/sharkdp/fd/master/#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Intuitive syntax: &lt;code&gt;fd PATTERN&lt;/code&gt; instead of &lt;code&gt;find -iname '*PATTERN*'&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Regular expression (default) and glob-based patterns.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sharkdp/fd/master/#benchmark"&gt;Very fast&lt;/a&gt; due to parallelized directory traversal.&lt;/li&gt; 
 &lt;li&gt;Uses colors to highlight different file types (same as &lt;code&gt;ls&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Supports &lt;a href="https://raw.githubusercontent.com/sharkdp/fd/master/#command-execution"&gt;parallel command execution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Smart case: the search is case-insensitive by default. It switches to case-sensitive if the pattern contains an uppercase character&lt;a href="http://vimdoc.sourceforge.net/htmldoc/options.html#'smartcase'"&gt;*&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Ignores hidden directories and files, by default.&lt;/li&gt; 
 &lt;li&gt;Ignores patterns from your &lt;code&gt;.gitignore&lt;/code&gt;, by default.&lt;/li&gt; 
 &lt;li&gt;The command name is &lt;em&gt;50%&lt;/em&gt; shorter&lt;a href="https://github.com/ggreer/the_silver_searcher"&gt;*&lt;/a&gt; than &lt;code&gt;find&lt;/code&gt; :-).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/sharkdp/fd/master/doc/screencast.svg?sanitize=true" alt="Demo" /&gt;&lt;/p&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;p&gt;First, to get an overview of all available command line options, you can either run &lt;a href="https://raw.githubusercontent.com/sharkdp/fd/master/#command-line-options"&gt;&lt;code&gt;fd -h&lt;/code&gt;&lt;/a&gt; for a concise help message or &lt;code&gt;fd --help&lt;/code&gt; for a more detailed version.&lt;/p&gt; 
&lt;h3&gt;Simple search&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;fd&lt;/em&gt; is designed to find entries in your filesystem. The most basic search you can perform is to run &lt;em&gt;fd&lt;/em&gt; with a single argument: the search pattern. For example, assume that you want to find an old script of yours (the name included &lt;code&gt;netflix&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; fd netfl
Software/python/imdb-ratings/netflix-details.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If called with just a single argument like this, &lt;em&gt;fd&lt;/em&gt; searches the current directory recursively for any entries that &lt;em&gt;contain&lt;/em&gt; the pattern &lt;code&gt;netfl&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Regular expression search&lt;/h3&gt; 
&lt;p&gt;The search pattern is treated as a regular expression. Here, we search for entries that start with &lt;code&gt;x&lt;/code&gt; and end with &lt;code&gt;rc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; cd /etc
&amp;gt; fd '^x.*rc$'
X11/xinit/xinitrc
X11/xinit/xserverrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The regular expression syntax used by &lt;code&gt;fd&lt;/code&gt; is &lt;a href="https://docs.rs/regex/latest/regex/#syntax"&gt;documented here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Specifying the root directory&lt;/h3&gt; 
&lt;p&gt;If we want to search a specific directory, it can be given as a second argument to &lt;em&gt;fd&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; fd passwd /etc
/etc/default/passwd
/etc/pam.d/passwd
/etc/passwd
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;List all files, recursively&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;fd&lt;/em&gt; can be called with no arguments. This is very useful to get a quick overview of all entries in the current directory, recursively (similar to &lt;code&gt;ls -R&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; cd fd/tests
&amp;gt; fd
testenv
testenv/mod.rs
tests.rs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to use this functionality to list all files in a given directory, you have to use a catch-all pattern such as &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;^&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; fd . fd/tests/
testenv
testenv/mod.rs
tests.rs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Searching for a particular file extension&lt;/h3&gt; 
&lt;p&gt;Often, we are interested in all files of a particular type. This can be done with the &lt;code&gt;-e&lt;/code&gt; (or &lt;code&gt;--extension&lt;/code&gt;) option. Here, we search for all Markdown files in the fd repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; cd fd
&amp;gt; fd -e md
CONTRIBUTING.md
README.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;-e&lt;/code&gt; option can be used in combination with a search pattern:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; fd -e rs mod
src/fshelper/mod.rs
src/lscolors/mod.rs
tests/testenv/mod.rs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Searching for a particular file name&lt;/h3&gt; 
&lt;p&gt;To find files with exactly the provided search pattern, use the &lt;code&gt;-g&lt;/code&gt; (or &lt;code&gt;--glob&lt;/code&gt;) option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; fd -g libc.so /usr
/usr/lib32/libc.so
/usr/lib/libc.so
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hidden and ignored files&lt;/h3&gt; 
&lt;p&gt;By default, &lt;em&gt;fd&lt;/em&gt; does not search hidden directories and does not show hidden files in the search results. To disable this behavior, we can use the &lt;code&gt;-H&lt;/code&gt; (or &lt;code&gt;--hidden&lt;/code&gt;) option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; fd pre-commit
&amp;gt; fd -H pre-commit
.git/hooks/pre-commit.sample
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If we work in a directory that is a Git repository (or includes Git repositories), &lt;em&gt;fd&lt;/em&gt; does not search folders (and does not show files) that match one of the &lt;code&gt;.gitignore&lt;/code&gt; patterns. To disable this behavior, we can use the &lt;code&gt;-I&lt;/code&gt; (or &lt;code&gt;--no-ignore&lt;/code&gt;) option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; fd num_cpu
&amp;gt; fd -I num_cpu
target/debug/deps/libnum_cpus-f5ce7ef99006aa05.rlib
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To really search &lt;em&gt;all&lt;/em&gt; files and directories, simply combine the hidden and ignore features to show everything (&lt;code&gt;-HI&lt;/code&gt;) or use &lt;code&gt;-u&lt;/code&gt;/&lt;code&gt;--unrestricted&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Matching the full path&lt;/h3&gt; 
&lt;p&gt;By default, &lt;em&gt;fd&lt;/em&gt; only matches the filename of each file. However, using the &lt;code&gt;--full-path&lt;/code&gt; or &lt;code&gt;-p&lt;/code&gt; option, you can match against the full path.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; fd -p -g '**/.git/config'
&amp;gt; fd -p '.*/lesson-\d+/[a-z]+.(jpg|png)'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Command execution&lt;/h3&gt; 
&lt;p&gt;Instead of just showing the search results, you often want to &lt;em&gt;do something&lt;/em&gt; with them. &lt;code&gt;fd&lt;/code&gt; provides two ways to execute external commands for each of your search results:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;-x&lt;/code&gt;/&lt;code&gt;--exec&lt;/code&gt; option runs an external command &lt;em&gt;for each of the search results&lt;/em&gt; (in parallel).&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;-X&lt;/code&gt;/&lt;code&gt;--exec-batch&lt;/code&gt; option launches the external command once, with &lt;em&gt;all search results as arguments&lt;/em&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Examples&lt;/h4&gt; 
&lt;p&gt;Recursively find all zip archives and unpack them:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fd -e zip -x unzip
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If there are two such files, &lt;code&gt;file1.zip&lt;/code&gt; and &lt;code&gt;backup/file2.zip&lt;/code&gt;, this would execute &lt;code&gt;unzip file1.zip&lt;/code&gt; and &lt;code&gt;unzip backup/file2.zip&lt;/code&gt;. The two &lt;code&gt;unzip&lt;/code&gt; processes run in parallel (if the files are found fast enough).&lt;/p&gt; 
&lt;p&gt;Find all &lt;code&gt;*.h&lt;/code&gt; and &lt;code&gt;*.cpp&lt;/code&gt; files and auto-format them inplace with &lt;code&gt;clang-format -i&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fd -e h -e cpp -x clang-format -i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note how the &lt;code&gt;-i&lt;/code&gt; option to &lt;code&gt;clang-format&lt;/code&gt; can be passed as a separate argument. This is why we put the &lt;code&gt;-x&lt;/code&gt; option last.&lt;/p&gt; 
&lt;p&gt;Find all &lt;code&gt;test_*.py&lt;/code&gt; files and open them in your favorite editor:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fd -g 'test_*.py' -X vim
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that we use capital &lt;code&gt;-X&lt;/code&gt; here to open a single &lt;code&gt;vim&lt;/code&gt; instance. If there are two such files, &lt;code&gt;test_basic.py&lt;/code&gt; and &lt;code&gt;lib/test_advanced.py&lt;/code&gt;, this will run &lt;code&gt;vim test_basic.py lib/test_advanced.py&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To see details like file permissions, owners, file sizes etc., you can tell &lt;code&gt;fd&lt;/code&gt; to show them by running &lt;code&gt;ls&lt;/code&gt; for each result:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fd ‚Ä¶ -X ls -lhd --color=always
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This pattern is so useful that &lt;code&gt;fd&lt;/code&gt; provides a shortcut. You can use the &lt;code&gt;-l&lt;/code&gt;/&lt;code&gt;--list-details&lt;/code&gt; option to execute &lt;code&gt;ls&lt;/code&gt; in this way: &lt;code&gt;fd ‚Ä¶ -l&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;-X&lt;/code&gt; option is also useful when combining &lt;code&gt;fd&lt;/code&gt; with &lt;a href="https://github.com/BurntSushi/ripgrep/"&gt;ripgrep&lt;/a&gt; (&lt;code&gt;rg&lt;/code&gt;) in order to search within a certain class of files, like all C++ source files:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fd -e cpp -e cxx -e h -e hpp -X rg 'std::cout'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Convert all &lt;code&gt;*.jpg&lt;/code&gt; files to &lt;code&gt;*.png&lt;/code&gt; files:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fd -e jpg -x convert {} {.}.png
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here, &lt;code&gt;{}&lt;/code&gt; is a placeholder for the search result. &lt;code&gt;{.}&lt;/code&gt; is the same, without the file extension. See below for more details on the placeholder syntax.&lt;/p&gt; 
&lt;p&gt;The terminal output of commands run from parallel threads using &lt;code&gt;-x&lt;/code&gt; will not be interlaced or garbled, so &lt;code&gt;fd -x&lt;/code&gt; can be used to rudimentarily parallelize a task run over many files. An example of this is calculating the checksum of each individual file within a directory.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;fd -tf -x md5sum &amp;gt; file_checksums.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Placeholder syntax&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;-x&lt;/code&gt; and &lt;code&gt;-X&lt;/code&gt; options take a &lt;em&gt;command template&lt;/em&gt; as a series of arguments (instead of a single string). If you want to add additional options to &lt;code&gt;fd&lt;/code&gt; after the command template, you can terminate it with a &lt;code&gt;\;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The syntax for generating commands is similar to that of &lt;a href="https://www.gnu.org/software/parallel/"&gt;GNU Parallel&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{}&lt;/code&gt;: A placeholder token that will be replaced with the path of the search result (&lt;code&gt;documents/images/party.jpg&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{.}&lt;/code&gt;: Like &lt;code&gt;{}&lt;/code&gt;, but without the file extension (&lt;code&gt;documents/images/party&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{/}&lt;/code&gt;: A placeholder that will be replaced by the basename of the search result (&lt;code&gt;party.jpg&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{//}&lt;/code&gt;: The parent of the discovered path (&lt;code&gt;documents/images&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{/.}&lt;/code&gt;: The basename, with the extension removed (&lt;code&gt;party&lt;/code&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you do not include a placeholder, &lt;em&gt;fd&lt;/em&gt; automatically adds a &lt;code&gt;{}&lt;/code&gt; at the end.&lt;/p&gt; 
&lt;h4&gt;Parallel vs. serial execution&lt;/h4&gt; 
&lt;p&gt;For &lt;code&gt;-x&lt;/code&gt;/&lt;code&gt;--exec&lt;/code&gt;, you can control the number of parallel jobs by using the &lt;code&gt;-j&lt;/code&gt;/&lt;code&gt;--threads&lt;/code&gt; option. Use &lt;code&gt;--threads=1&lt;/code&gt; for serial execution.&lt;/p&gt; 
&lt;h3&gt;Excluding specific files or directories&lt;/h3&gt; 
&lt;p&gt;Sometimes we want to ignore search results from a specific subdirectory. For example, we might want to search all hidden files and directories (&lt;code&gt;-H&lt;/code&gt;) but exclude all matches from &lt;code&gt;.git&lt;/code&gt; directories. We can use the &lt;code&gt;-E&lt;/code&gt; (or &lt;code&gt;--exclude&lt;/code&gt;) option for this. It takes an arbitrary glob pattern as an argument:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; fd -H -E .git ‚Ä¶
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can also use this to skip mounted directories:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; fd -E /mnt/external-drive ‚Ä¶
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;.. or to skip certain file types:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; fd -E '*.bak' ‚Ä¶
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To make exclude-patterns like these permanent, you can create a &lt;code&gt;.fdignore&lt;/code&gt; file. They work like &lt;code&gt;.gitignore&lt;/code&gt; files, but are specific to &lt;code&gt;fd&lt;/code&gt;. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; cat ~/.fdignore
/mnt/external-drive
*.bak
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] &lt;code&gt;fd&lt;/code&gt; also supports &lt;code&gt;.ignore&lt;/code&gt; files that are used by other programs such as &lt;code&gt;rg&lt;/code&gt; or &lt;code&gt;ag&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want &lt;code&gt;fd&lt;/code&gt; to ignore these patterns globally, you can put them in &lt;code&gt;fd&lt;/code&gt;'s global ignore file. This is usually located in &lt;code&gt;~/.config/fd/ignore&lt;/code&gt; in macOS or Linux, and &lt;code&gt;%APPDATA%\fd\ignore&lt;/code&gt; in Windows.&lt;/p&gt; 
&lt;p&gt;You may wish to include &lt;code&gt;.git/&lt;/code&gt; in your &lt;code&gt;fd/ignore&lt;/code&gt; file so that &lt;code&gt;.git&lt;/code&gt; directories, and their contents are not included in output if you use the &lt;code&gt;--hidden&lt;/code&gt; option.&lt;/p&gt; 
&lt;h3&gt;Deleting files&lt;/h3&gt; 
&lt;p&gt;You can use &lt;code&gt;fd&lt;/code&gt; to remove all files and directories that are matched by your search pattern. If you only want to remove files, you can use the &lt;code&gt;--exec-batch&lt;/code&gt;/&lt;code&gt;-X&lt;/code&gt; option to call &lt;code&gt;rm&lt;/code&gt;. For example, to recursively remove all &lt;code&gt;.DS_Store&lt;/code&gt; files, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; fd -H '^\.DS_Store$' -tf -X rm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are unsure, always call &lt;code&gt;fd&lt;/code&gt; without &lt;code&gt;-X rm&lt;/code&gt; first. Alternatively, use &lt;code&gt;rm&lt;/code&gt;s "interactive" option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; fd -H '^\.DS_Store$' -tf -X rm -i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you also want to remove a certain class of directories, you can use the same technique. You will have to use &lt;code&gt;rm&lt;/code&gt;s &lt;code&gt;--recursive&lt;/code&gt;/&lt;code&gt;-r&lt;/code&gt; flag to remove directories.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] There are scenarios where using &lt;code&gt;fd ‚Ä¶ -X rm -r&lt;/code&gt; can cause race conditions: if you have a path like &lt;code&gt;‚Ä¶/foo/bar/foo/‚Ä¶&lt;/code&gt; and want to remove all directories named &lt;code&gt;foo&lt;/code&gt;, you can end up in a situation where the outer &lt;code&gt;foo&lt;/code&gt; directory is removed first, leading to (harmless) &lt;em&gt;"'foo/bar/foo': No such file or directory"&lt;/em&gt; errors in the &lt;code&gt;rm&lt;/code&gt; call.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Command-line options&lt;/h3&gt; 
&lt;p&gt;This is the output of &lt;code&gt;fd -h&lt;/code&gt;. To see the full set of command-line options, use &lt;code&gt;fd --help&lt;/code&gt; which also includes a much more detailed help text.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Usage: fd [OPTIONS] [pattern [path...]]

Arguments:
  [pattern]  the search pattern (a regular expression, unless '--glob' is used; optional)
  [path]...  the root directories for the filesystem search (optional)

Options:
  -H, --hidden                     Search hidden files and directories
  -I, --no-ignore                  Do not respect .(git|fd)ignore files
  -s, --case-sensitive             Case-sensitive search (default: smart case)
  -i, --ignore-case                Case-insensitive search (default: smart case)
  -g, --glob                       Glob-based search (default: regular expression)
  -a, --absolute-path              Show absolute instead of relative paths
  -l, --list-details               Use a long listing format with file metadata
  -L, --follow                     Follow symbolic links
  -p, --full-path                  Search full abs. path (default: filename only)
  -d, --max-depth &amp;lt;depth&amp;gt;          Set maximum search depth (default: none)
  -E, --exclude &amp;lt;pattern&amp;gt;          Exclude entries that match the given glob pattern
  -t, --type &amp;lt;filetype&amp;gt;            Filter by type: file (f), directory (d/dir), symlink (l),
                                   executable (x), empty (e), socket (s), pipe (p), char-device
                                   (c), block-device (b)
  -e, --extension &amp;lt;ext&amp;gt;            Filter by file extension
  -S, --size &amp;lt;size&amp;gt;                Limit results based on the size of files
      --changed-within &amp;lt;date|dur&amp;gt;  Filter by file modification time (newer than)
      --changed-before &amp;lt;date|dur&amp;gt;  Filter by file modification time (older than)
  -o, --owner &amp;lt;user:group&amp;gt;         Filter by owning user and/or group
      --format &amp;lt;fmt&amp;gt;               Print results according to template
  -x, --exec &amp;lt;cmd&amp;gt;...              Execute a command for each search result
  -X, --exec-batch &amp;lt;cmd&amp;gt;...        Execute a command with all search results at once
  -c, --color &amp;lt;when&amp;gt;               When to use colors [default: auto] [possible values: auto,
                                   always, never]
      --hyperlink[=&amp;lt;when&amp;gt;]         Add hyperlinks to output paths [default: never] [possible
                                   values: auto, always, never]
  -h, --help                       Print help (see more with '--help')
  -V, --version                    Print version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that options can be given after the pattern and/or path as well.&lt;/p&gt; 
&lt;h2&gt;Benchmark&lt;/h2&gt; 
&lt;p&gt;Let's search my home folder for files that end in &lt;code&gt;[0-9].jpg&lt;/code&gt;. It contains ~750.000 subdirectories and about a 4 million files. For averaging and statistical analysis, I'm using &lt;a href="https://github.com/sharkdp/hyperfine"&gt;hyperfine&lt;/a&gt;. The following benchmarks are performed with a "warm"/pre-filled disk-cache (results for a "cold" disk-cache show the same trends).&lt;/p&gt; 
&lt;p&gt;Let's start with &lt;code&gt;find&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Benchmark 1: find ~ -iregex '.*[0-9]\.jpg$'
  Time (mean ¬± œÉ):     19.922 s ¬±  0.109 s
  Range (min ‚Ä¶ max):   19.765 s ‚Ä¶ 20.065 s
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;find&lt;/code&gt; is much faster if it does not need to perform a regular-expression search:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Benchmark 2: find ~ -iname '*[0-9].jpg'
  Time (mean ¬± œÉ):     11.226 s ¬±  0.104 s
  Range (min ‚Ä¶ max):   11.119 s ‚Ä¶ 11.466 s
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now let's try the same for &lt;code&gt;fd&lt;/code&gt;. Note that &lt;code&gt;fd&lt;/code&gt; performs a regular expression search by default. The options &lt;code&gt;-u&lt;/code&gt;/&lt;code&gt;--unrestricted&lt;/code&gt; option is needed here for a fair comparison. Otherwise &lt;code&gt;fd&lt;/code&gt; does not have to traverse hidden folders and ignored paths (see below):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Benchmark 3: fd -u '[0-9]\.jpg$' ~
  Time (mean ¬± œÉ):     854.8 ms ¬±  10.0 ms
  Range (min ‚Ä¶ max):   839.2 ms ‚Ä¶ 868.9 ms
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For this particular example, &lt;code&gt;fd&lt;/code&gt; is approximately &lt;strong&gt;23 times faster&lt;/strong&gt; than &lt;code&gt;find -iregex&lt;/code&gt; and about &lt;strong&gt;13 times faster&lt;/strong&gt; than &lt;code&gt;find -iname&lt;/code&gt;. By the way, both tools found the exact same 546 files &lt;span&gt;üòÑ&lt;/span&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is &lt;em&gt;one particular&lt;/em&gt; benchmark on &lt;em&gt;one particular&lt;/em&gt; machine. While we have performed a lot of different tests (and found consistent results), things might be different for you! We encourage everyone to try it out on their own. See &lt;a href="https://github.com/sharkdp/fd-benchmarks"&gt;this repository&lt;/a&gt; for all necessary scripts.&lt;/p&gt; 
&lt;p&gt;Concerning &lt;em&gt;fd&lt;/em&gt;'s speed, a lot of credit goes to the &lt;code&gt;regex&lt;/code&gt; and &lt;code&gt;ignore&lt;/code&gt; crates that are also used in &lt;a href="https://github.com/BurntSushi/ripgrep"&gt;ripgrep&lt;/a&gt; (check it out!).&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;h3&gt;&lt;code&gt;fd&lt;/code&gt; does not find my file!&lt;/h3&gt; 
&lt;p&gt;Remember that &lt;code&gt;fd&lt;/code&gt; ignores hidden directories and files by default. It also ignores patterns from &lt;code&gt;.gitignore&lt;/code&gt; files. If you want to make sure to find absolutely every possible file, always use the options &lt;code&gt;-u&lt;/code&gt;/&lt;code&gt;--unrestricted&lt;/code&gt; option (or &lt;code&gt;-HI&lt;/code&gt; to enable hidden and ignored files):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; fd -u ‚Ä¶
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also remember that by default, &lt;code&gt;fd&lt;/code&gt; only searches based on the filename and doesn't compare the pattern to the full path. If you want to search based on the full path (similar to the &lt;code&gt;-path&lt;/code&gt; option of &lt;code&gt;find&lt;/code&gt;) you need to use the &lt;code&gt;--full-path&lt;/code&gt; (or &lt;code&gt;-p&lt;/code&gt;) option.&lt;/p&gt; 
&lt;h3&gt;Colorized output&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;fd&lt;/code&gt; can colorize files by extension, just like &lt;code&gt;ls&lt;/code&gt;. In order for this to work, the environment variable &lt;a href="https://linux.die.net/man/5/dir_colors"&gt;&lt;code&gt;LS_COLORS&lt;/code&gt;&lt;/a&gt; has to be set. Typically, the value of this variable is set by the &lt;code&gt;dircolors&lt;/code&gt; command which provides a convenient configuration format to define colors for different file formats. On most distributions, &lt;code&gt;LS_COLORS&lt;/code&gt; should be set already. If you are on Windows or if you are looking for alternative, more complete (or more colorful) variants, see &lt;a href="https://github.com/sharkdp/vivid"&gt;here&lt;/a&gt;, &lt;a href="https://github.com/seebi/dircolors-solarized"&gt;here&lt;/a&gt; or &lt;a href="https://github.com/trapd00r/LS_COLORS"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;fd&lt;/code&gt; also honors the &lt;a href="https://no-color.org/"&gt;&lt;code&gt;NO_COLOR&lt;/code&gt;&lt;/a&gt; environment variable.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;fd&lt;/code&gt; doesn't seem to interpret my regex pattern correctly&lt;/h3&gt; 
&lt;p&gt;A lot of special regex characters (like &lt;code&gt;[]&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt;, ..) are also special characters in your shell. If in doubt, always make sure to put single quotes around the regex pattern:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; fd '^[A-Z][0-9]+$'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your pattern starts with a dash, you have to add &lt;code&gt;--&lt;/code&gt; to signal the end of command line options. Otherwise, the pattern will be interpreted as a command-line option. Alternatively, use a character class with a single hyphen character:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; fd -- '-pattern'
&amp;gt; fd '[-]pattern'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;"Command not found" for &lt;code&gt;alias&lt;/code&gt;es or shell functions&lt;/h3&gt; 
&lt;p&gt;Shell &lt;code&gt;alias&lt;/code&gt;es and shell functions can not be used for command execution via &lt;code&gt;fd -x&lt;/code&gt; or &lt;code&gt;fd -X&lt;/code&gt;. In &lt;code&gt;zsh&lt;/code&gt;, you can make the alias global via &lt;code&gt;alias -g myalias="‚Ä¶"&lt;/code&gt;. In &lt;code&gt;bash&lt;/code&gt;, you can use &lt;code&gt;export -f my_function&lt;/code&gt; to make available to child processes. You would still need to call &lt;code&gt;fd -x bash -c 'my_function "$1"' bash&lt;/code&gt;. For other use cases or shells, use a (temporary) shell script.&lt;/p&gt; 
&lt;h2&gt;Integration with other programs&lt;/h2&gt; 
&lt;h3&gt;Using fd with &lt;code&gt;fzf&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;You can use &lt;em&gt;fd&lt;/em&gt; to generate input for the command-line fuzzy finder &lt;a href="https://github.com/junegunn/fzf"&gt;fzf&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export FZF_DEFAULT_COMMAND='fd --type file'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, you can type &lt;code&gt;vim &amp;lt;Ctrl-T&amp;gt;&lt;/code&gt; on your terminal to open fzf and search through the fd-results.&lt;/p&gt; 
&lt;p&gt;Alternatively, you might like to follow symbolic links and include hidden files (but exclude &lt;code&gt;.git&lt;/code&gt; folders):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export FZF_DEFAULT_COMMAND='fd --type file --follow --hidden --exclude .git'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can even use fd's colored output inside fzf by setting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export FZF_DEFAULT_COMMAND="fd --type file --color=always"
export FZF_DEFAULT_OPTS="--ansi"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details, see the &lt;a href="https://github.com/junegunn/fzf#tips"&gt;Tips section&lt;/a&gt; of the fzf README.&lt;/p&gt; 
&lt;h3&gt;Using fd with &lt;code&gt;rofi&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/davatorium/rofi"&gt;&lt;em&gt;rofi&lt;/em&gt;&lt;/a&gt; is a graphical launch menu application that is able to create menus by reading from &lt;em&gt;stdin&lt;/em&gt;. Piping &lt;code&gt;fd&lt;/code&gt; output into &lt;code&gt;rofi&lt;/code&gt;s &lt;code&gt;-dmenu&lt;/code&gt; mode creates fuzzy-searchable lists of files and directories.&lt;/p&gt; 
&lt;h4&gt;Example&lt;/h4&gt; 
&lt;p&gt;Create a case-insensitive searchable multi-select list of &lt;em&gt;PDF&lt;/em&gt; files under your &lt;code&gt;$HOME&lt;/code&gt; directory and open the selection with your configured PDF viewer. To list all file types, drop the &lt;code&gt;-e pdf&lt;/code&gt; argument.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fd --type f -e pdf . $HOME | rofi -keep-right -dmenu -i -p FILES -multi-select | xargs -I {} xdg-open {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To modify the list that is presented by rofi, add arguments to the &lt;code&gt;fd&lt;/code&gt; command. To modify the search behaviour of rofi, add arguments to the &lt;code&gt;rofi&lt;/code&gt; command.&lt;/p&gt; 
&lt;h3&gt;Using fd with &lt;code&gt;emacs&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;The emacs package &lt;a href="https://github.com/technomancy/find-file-in-project"&gt;find-file-in-project&lt;/a&gt; can use &lt;em&gt;fd&lt;/em&gt; to find files.&lt;/p&gt; 
&lt;p&gt;After installing &lt;code&gt;find-file-in-project&lt;/code&gt;, add the line &lt;code&gt;(setq ffip-use-rust-fd t)&lt;/code&gt; to your &lt;code&gt;~/.emacs&lt;/code&gt; or &lt;code&gt;~/.emacs.d/init.el&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;In emacs, run &lt;code&gt;M-x find-file-in-project-by-selected&lt;/code&gt; to find matching files. Alternatively, run &lt;code&gt;M-x find-file-in-project&lt;/code&gt; to list all available files in the project.&lt;/p&gt; 
&lt;h3&gt;Printing the output as a tree&lt;/h3&gt; 
&lt;p&gt;To format the output of &lt;code&gt;fd&lt;/code&gt; as a file-tree you can use the &lt;code&gt;tree&lt;/code&gt; command with &lt;code&gt;--fromfile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;‚ùØ fd | tree --fromfile
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This can be more useful than running &lt;code&gt;tree&lt;/code&gt; by itself because &lt;code&gt;tree&lt;/code&gt; does not ignore any files by default, nor does it support as rich a set of options as &lt;code&gt;fd&lt;/code&gt; does to control what to print:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;‚ùØ fd --extension rs | tree --fromfile
.
‚îú‚îÄ‚îÄ build.rs
‚îî‚îÄ‚îÄ src
    ‚îú‚îÄ‚îÄ app.rs
    ‚îî‚îÄ‚îÄ error.rs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On bash and similar you can simply create an alias:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;‚ùØ alias as-tree='tree --fromfile'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using fd with &lt;code&gt;xargs&lt;/code&gt; or &lt;code&gt;parallel&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Note that &lt;code&gt;fd&lt;/code&gt; has a builtin feature for &lt;a href="https://raw.githubusercontent.com/sharkdp/fd/master/#command-execution"&gt;command execution&lt;/a&gt; with its &lt;code&gt;-x&lt;/code&gt;/&lt;code&gt;--exec&lt;/code&gt; and &lt;code&gt;-X&lt;/code&gt;/&lt;code&gt;--exec-batch&lt;/code&gt; options. If you prefer, you can still use it in combination with &lt;code&gt;xargs&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; fd -0 -e rs | xargs -0 wc -l
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here, the &lt;code&gt;-0&lt;/code&gt; option tells &lt;em&gt;fd&lt;/em&gt; to separate search results by the NULL character (instead of newlines). In the same way, the &lt;code&gt;-0&lt;/code&gt; option of &lt;code&gt;xargs&lt;/code&gt; tells it to read the input in this way.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/fd-find/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/fd-find.svg?sanitize=true" alt="Packaging status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;On Ubuntu&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;... and other Debian-based Linux distributions.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;If you run Ubuntu 19.04 (Disco Dingo) or newer, you can install the &lt;a href="https://packages.ubuntu.com/fd-find"&gt;officially maintained package&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;apt install fd-find
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the binary is called &lt;code&gt;fdfind&lt;/code&gt; as the binary name &lt;code&gt;fd&lt;/code&gt; is already used by another package. It is recommended that after installation, you add a link to &lt;code&gt;fd&lt;/code&gt; by executing command &lt;code&gt;ln -s $(which fdfind) ~/.local/bin/fd&lt;/code&gt;, in order to use &lt;code&gt;fd&lt;/code&gt; in the same way as in this documentation. Make sure that &lt;code&gt;$HOME/.local/bin&lt;/code&gt; is in your &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you use an older version of Ubuntu, you can download the latest &lt;code&gt;.deb&lt;/code&gt; package from the &lt;a href="https://github.com/sharkdp/fd/releases"&gt;release page&lt;/a&gt; and install it via:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dpkg -i fd_9.0.0_amd64.deb # adapt version number and architecture
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the .deb packages on the release page for this project still name the executable &lt;code&gt;fd&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;On Debian&lt;/h3&gt; 
&lt;p&gt;If you run Debian Buster or newer, you can install the &lt;a href="https://tracker.debian.org/pkg/rust-fd-find"&gt;officially maintained Debian package&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;apt-get install fd-find
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the binary is called &lt;code&gt;fdfind&lt;/code&gt; as the binary name &lt;code&gt;fd&lt;/code&gt; is already used by another package. It is recommended that after installation, you add a link to &lt;code&gt;fd&lt;/code&gt; by executing command &lt;code&gt;ln -s $(which fdfind) ~/.local/bin/fd&lt;/code&gt;, in order to use &lt;code&gt;fd&lt;/code&gt; in the same way as in this documentation. Make sure that &lt;code&gt;$HOME/.local/bin&lt;/code&gt; is in your &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Note that the .deb packages on the release page for this project still name the executable &lt;code&gt;fd&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;On Fedora&lt;/h3&gt; 
&lt;p&gt;Starting with Fedora 28, you can install &lt;code&gt;fd&lt;/code&gt; from the official package sources:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dnf install fd-find
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Alpine Linux&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://pkgs.alpinelinux.org/packages?name=fd"&gt;the fd package&lt;/a&gt; from the official sources, provided you have the appropriate repository enabled:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;apk add fd
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Arch Linux&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://www.archlinux.org/packages/extra/x86_64/fd/"&gt;the fd package&lt;/a&gt; from the official repos:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;pacman -S fd
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also install fd &lt;a href="https://aur.archlinux.org/packages/fd-git"&gt;from the AUR&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;On Gentoo Linux&lt;/h3&gt; 
&lt;p&gt;You can use &lt;a href="https://packages.gentoo.org/packages/sys-apps/fd"&gt;the fd ebuild&lt;/a&gt; from the official repo:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;emerge -av fd
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On openSUSE Linux&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://software.opensuse.org/package/fd"&gt;the fd package&lt;/a&gt; from the official repo:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;zypper in fd
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Void Linux&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;fd&lt;/code&gt; via xbps-install:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;xbps-install -S fd
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On ALT Linux&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://packages.altlinux.org/en/sisyphus/srpms/fd/"&gt;the fd package&lt;/a&gt; from the official repo:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;apt-get install fd
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Solus&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://github.com/getsolus/packages/tree/main/packages/f/fd"&gt;the fd package&lt;/a&gt; from the official repo:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;eopkg install fd
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On RedHat Enterprise Linux (RHEL) 8/9/10, Almalinux 8/9/10, EuroLinux 8/9 or Rocky Linux 8/9/10&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://copr.fedorainfracloud.org/coprs/tkbcopr/fd/"&gt;the &lt;code&gt;fd&lt;/code&gt; package&lt;/a&gt; from Fedora Copr.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dnf copr enable tkbcopr/fd
dnf install fd
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A different version using the &lt;a href="https://github.com/sharkdp/fd/pull/481#issuecomment-534494592"&gt;slower&lt;/a&gt; malloc &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=2216193#c1"&gt;instead of jemalloc&lt;/a&gt; is also available from the EPEL8/9 repo as the package &lt;code&gt;fd-find&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;On macOS&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;fd&lt;/code&gt; with &lt;a href="https://formulae.brew.sh/formula/fd"&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;brew install fd
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;‚Ä¶ or with MacPorts:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;port install fd
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Windows&lt;/h3&gt; 
&lt;p&gt;You can download pre-built binaries from the &lt;a href="https://github.com/sharkdp/fd/releases"&gt;release page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Alternatively, you can install &lt;code&gt;fd&lt;/code&gt; via &lt;a href="http://scoop.sh"&gt;Scoop&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;scoop install fd
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or via &lt;a href="https://chocolatey.org"&gt;Chocolatey&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;choco install fd
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or via &lt;a href="https://learn.microsoft.com/en-us/windows/package-manager/"&gt;Winget&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;winget install sharkdp.fd
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On GuixOS&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://guix.gnu.org/en/packages/fd-8.1.1/"&gt;the fd package&lt;/a&gt; from the official repo:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;guix install fd
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On NixOS / via Nix&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;a href="https://nixos.org/nix/"&gt;Nix package manager&lt;/a&gt; to install &lt;code&gt;fd&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;nix-env -i fd
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Via Flox&lt;/h3&gt; 
&lt;p&gt;You can use &lt;a href="https://flox.dev"&gt;Flox&lt;/a&gt; to install &lt;code&gt;fd&lt;/code&gt; into a Flox environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;flox install fd
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On FreeBSD&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://www.freshports.org/sysutils/fd"&gt;the fd-find package&lt;/a&gt; from the official repo:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;pkg install fd-find
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;From npm&lt;/h3&gt; 
&lt;p&gt;On Linux and macOS, you can install the &lt;a href="https://npm.im/fd-find"&gt;fd-find&lt;/a&gt; package:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install -g fd-find
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;From source&lt;/h3&gt; 
&lt;p&gt;With Rust's package manager &lt;a href="https://github.com/rust-lang/cargo"&gt;cargo&lt;/a&gt;, you can install &lt;em&gt;fd&lt;/em&gt; via:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cargo install fd-find
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that rust version &lt;em&gt;1.77.2&lt;/em&gt; or later is required.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;make&lt;/code&gt; is also needed for the build.&lt;/p&gt; 
&lt;h3&gt;From binaries&lt;/h3&gt; 
&lt;p&gt;The &lt;a href="https://github.com/sharkdp/fd/releases"&gt;release page&lt;/a&gt; includes precompiled binaries for Linux, macOS and Windows. Statically-linked binaries are also available: look for archives with &lt;code&gt;musl&lt;/code&gt; in the file name.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/sharkdp/fd

# Build
cd fd
cargo build

# Run unit tests and integration tests
cargo test

# Install
cargo install --path .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sharkdp"&gt;sharkdp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tmccombs"&gt;tmccombs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tavianator"&gt;tavianator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;fd&lt;/code&gt; is distributed under the terms of both the MIT License and the Apache License 2.0.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/sharkdp/fd/master/LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/sharkdp/fd/master/LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt; files for license details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gitbutlerapp/gitbutler</title>
      <link>https://github.com/gitbutlerapp/gitbutler</link>
      <description>&lt;p&gt;The GitButler version control client, backed by Git, powered by Tauri/Rust/Svelte&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img align="center" width="128px" src="https://raw.githubusercontent.com/gitbutlerapp/gitbutler/master/crates/gitbutler-tauri/icons/128x128@2x.png" /&gt; 
 &lt;h1 align="center"&gt;&lt;b&gt;GitButler&lt;/b&gt;&lt;/h1&gt; 
 &lt;p align="center"&gt; Git branch management tool, built from the ground up for modern workflows &lt;br /&gt; &lt;a href="https://gitbutler.com"&gt;&lt;strong&gt;gitbutler.com ¬ª&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;b&gt;Download for &lt;/b&gt; macOS (&lt;a href="https://app.gitbutler.com/downloads/release/darwin/aarch64/dmg"&gt;Apple Silicon&lt;/a&gt; | &lt;a href="https://app.gitbutler.com/downloads/release/darwin/x86_64/dmg"&gt;Intel&lt;/a&gt;) ¬∑ Linux (&lt;a href="https://app.gitbutler.com/downloads/release/linux/x86_64/gz"&gt;AppImage&lt;/a&gt; | &lt;a href="https://app.gitbutler.com/downloads/release/linux/x86_64/deb"&gt;deb&lt;/a&gt;) ¬∑ Windows (&lt;a href="https://app.gitbutler.com/downloads/release/windows/x86_64/msi"&gt;msi&lt;/a&gt;) &lt;br /&gt; &lt;br /&gt; (Unstable Nightly releases can be found &lt;a href="https://app.gitbutler.com/downloads"&gt;here&lt;/a&gt;) &lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/bf9bdb33-a979-47a0-b2b2-8fff5ea53afb" alt="gitbutler_client" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/gitbutlerapp/gitbutler/actions/workflows/push.yaml"&gt;&lt;img src="https://github.com/gitbutlerapp/gitbutler/actions/workflows/push.yaml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://gitbutler.com/"&gt;&lt;img src="https://img.shields.io/badge/GitButler-%23B9F4F2?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB3aWR0aD0iMzkiIGhlaWdodD0iMjgiIHZpZXdCb3g9IjAgMCAzOSAyOCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZD0iTTI1LjIxNDUgMTIuMTk5N0wyLjg3MTA3IDEuMzg5MTJDMS41NDI5NSAwLjc0NjUzMiAwIDEuNzE0MDYgMCAzLjE4OTQ3VjI0LjgxMDVDMCAyNi4yODU5IDEuNTQyOTUgMjcuMjUzNSAyLjg3MTA3IDI2LjYxMDlMMjUuMjE0NSAxNS44MDAzQzI2LjcxOTcgMTUuMDcyMSAyNi43MTk3IDEyLjkyNzkgMjUuMjE0NSAxMi4xOTk3WiIgZmlsbD0iYmxhY2siLz4KPHBhdGggZD0iTTEzLjc4NTUgMTIuMTk5N0wzNi4xMjg5IDEuMzg5MTJDMzcuNDU3MSAwLjc0NjUzMiAzOSAxLjcxNDA2IDM5IDMuMTg5NDdWMjQuODEwNUMzOSAyNi4yODU5IDM3LjQ1NzEgMjcuMjUzNSAzNi4xMjg5IDI2LjYxMDlMMTMuNzg1NSAxNS44MDAzQzEyLjI4MDMgMTUuMDcyMSAxMi4yODAzIDEyLjkyNzkgMTMuNzg1NSAxMi4xOTk3WiIgZmlsbD0idXJsKCNwYWludDBfcmFkaWFsXzMxMF8xMjkpIi8%2BCjxkZWZzPgo8cmFkaWFsR3JhZGllbnQgaWQ9InBhaW50MF9yYWRpYWxfMzEwXzEyOSIgY3g9IjAiIGN5PSIwIiByPSIxIiBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIgZ3JhZGllbnRUcmFuc2Zvcm09InRyYW5zbGF0ZSgxNi41NzAxIDE0KSBzY2FsZSgxOS44NjQxIDE5LjgzODMpIj4KPHN0b3Agb2Zmc2V0PSIwLjMwMTA1NiIgc3RvcC1vcGFjaXR5PSIwIi8%2BCjxzdG9wIG9mZnNldD0iMSIvPgo8L3JhZGlhbEdyYWRpZW50Pgo8L2RlZnM%2BCjwvc3ZnPgo%3D" alt="BADGE" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=gitbutler"&gt;&lt;img src="https://img.shields.io/badge/Twitter-black?logo=x&amp;amp;logoColor=white" alt="TWEET" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/MmFkmaJ42D"&gt;&lt;img src="https://img.shields.io/discord/1060193121130000425?label=Discord&amp;amp;color=5865F2" alt="DISCORD" /&gt;&lt;/a&gt; &lt;a href="https://www.instagram.com/gitbutler/"&gt;&lt;img src="https://img.shields.io/badge/Instagram-E4405F?logo=instagram&amp;amp;logoColor=white" alt="INSTA" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/@gitbutlerapp"&gt;&lt;img src="https://img.shields.io/youtube/channel/subscribers/UCEwkZIHGqsTGYvX8wgD0LoQ" alt="YOUTUBE" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/gitbutlerapp/gitbutler"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="DEEPWIKI" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/fb23382bcf57c609832661874d3019a43555d6ae.svg?sanitize=true" alt="Alt" title="Repobeats analytics for GitButler" /&gt;&lt;/p&gt; 
&lt;p&gt;GitButler is a git client that lets you work on multiple branches at the same time. It allows you to quickly organize file changes into separate branches while still having them applied to your working directory. You can then push branches individually to your remote, or directly create pull requests.&lt;/p&gt; 
&lt;p&gt;In a nutshell, it's a more flexible version of &lt;code&gt;git add -p&lt;/code&gt; and &lt;code&gt;git rebase -i&lt;/code&gt;, allowing you to efficiently multitask across branches.&lt;/p&gt; 
&lt;h2&gt;How Does It Work?&lt;/h2&gt; 
&lt;p&gt;GitButler keeps track of uncommitted changes in a layer on top of Git. Changes to files or parts of files can be grouped into what we call virtual branches. Whenever you are happy with the contents of a virtual branch, you can push it to a remote. GitButler makes sure that the state of other virtual branches is kept separate.&lt;/p&gt; 
&lt;h2&gt;How Do GB's Virtual Branches Differ From Git Branches?&lt;/h2&gt; 
&lt;p&gt;The branches that we know and love in Git are separate universes, and switching between them is a full context switch. GitButler allows you to work with multiple branches in parallel in the same working directory. This effectively means having the content of multiple branches available at the same time.&lt;/p&gt; 
&lt;p&gt;GitButler is aware of changes before they are committed. This allows it to keep a record of which virtual branch each individual diff belongs to. Effectively, this means that you can separate out individual branches with their content at any time to push them to a remote or to unapply them from your working directory.&lt;/p&gt; 
&lt;p&gt;And finally, while in Git it is preferable that you create your desired branch ahead of time, using GitButler you can move changes between virtual branches at any point during development.&lt;/p&gt; 
&lt;h2&gt;Why GitButler?&lt;/h2&gt; 
&lt;p&gt;We love Git. Our own &lt;a href="https://github.com/schacon"&gt;@schacon&lt;/a&gt; has even published the &lt;a href="https://git-scm.com/book/en/v2"&gt;Pro Git&lt;/a&gt; book. At the same time, Git's user interface hasn't been fundamentally changed for 15 years. While it was written for Linux kernel devs sending patches to each other over mailing lists, most developers today have different workflows and needs.&lt;/p&gt; 
&lt;p&gt;Instead of trying to fit the semantics of the Git CLI into a graphical interface, we are starting with the developer workflow and mapping it back to Git.&lt;/p&gt; 
&lt;h2&gt;Tech&lt;/h2&gt; 
&lt;p&gt;GitButler is a &lt;a href="https://tauri.app/"&gt;Tauri&lt;/a&gt;-based application. Its UI is written in &lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt; using &lt;a href="https://www.typescriptlang.org"&gt;TypeScript&lt;/a&gt; and its backend is written in &lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Main Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Virtual Branches&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Organize work on multiple branches simultaneously, rather than constantly switching branches&lt;/li&gt; 
   &lt;li&gt;Automatically create new branches when needed&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy Commit Management&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Undo, Amend and Squash commits by dragging and dropping&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Undo Timeline&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Logs all operations and changes and allows you to easily undo or revert any operation&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Integration&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Authenticate to GitHub to open Pull Requests, list branches and statuses and more&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy SSH Key Management&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;GitButler can generate an SSH key to upload to GitHub automatically&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI Tooling&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Automatically write commit messages based on your work in progress&lt;/li&gt; 
   &lt;li&gt;Automatically create descriptive branch names&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Commit Signing&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Easy commit signing with GPG or SSH&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example Uses&lt;/h2&gt; 
&lt;h3&gt;Fixing a Bug While Working on a Feature&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Say that while developing a feature, you encounter a bug that you wish to fix. It's often desirable that you ship the fix as a separate contribution (Pull request).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Using Git you can stash your changes and switch to another branch, where you can commit, and push your fix.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;With GitButler&lt;/em&gt; you simply assign your fix to a separate virtual branch, which you can individually push (or directly create a PR). An additional benefit is that you can retain the fix in your working directory while waiting for CI and/or code review.&lt;/p&gt; 
&lt;h3&gt;Trying Someone Else's Branch Together With My Work in Progress&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Say you want to test a branch from someone else for the purpose of code review.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Using Git trying out someone else's branch is a full context switch away from your own work. &lt;em&gt;With GitButler&lt;/em&gt; you can apply and unapply (add / remove) any remote branch directly into your working directory.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find our end user documentation at: &lt;a href="https://docs.gitbutler.com"&gt;https://docs.gitbutler.com&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Bugs and Feature Requests&lt;/h2&gt; 
&lt;p&gt;If you have a bug or feature request, feel free to open an &lt;a href="https://github.com/gitbutlerapp/gitbutler/issues/new"&gt;issue&lt;/a&gt;, or &lt;a href="https://discord.gg/MmFkmaJ42D"&gt;join our Discord server&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;AI Commit Message Generation&lt;/h2&gt; 
&lt;p&gt;Commit message generation is an opt-in feature. You can enable it while adding your repository for the first time or later in the project settings.&lt;/p&gt; 
&lt;p&gt;Currently, GitButler uses OpenAI's API for diff summarization, which means that if enabled, code diffs would be sent to OpenAI's servers.&lt;/p&gt; 
&lt;p&gt;Our goal is to make this feature more modular such that in the future you can modify the prompt as well as plug a different LLM endpoints (including local ones).&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;So you want to help out? Please check out the &lt;a href="https://raw.githubusercontent.com/gitbutlerapp/gitbutler/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; document.&lt;/p&gt; 
&lt;p&gt;If you want to skip right to getting the code to actually compile, take a look at the &lt;a href="https://raw.githubusercontent.com/gitbutlerapp/gitbutler/master/DEVELOPMENT.md"&gt;DEVELOPMENT.md&lt;/a&gt; file.&lt;/p&gt; 
&lt;p&gt;Want to show your support? Add a GitButler badge to your project's README:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![GitButler](https://img.shields.io/badge/GitButler-%23B9F4F2?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB3aWR0aD0iMzkiIGhlaWdodD0iMjgiIHZpZXdCb3g9IjAgMCAzOSAyOCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZD0iTTI1LjIxNDUgMTIuMTk5N0wyLjg3MTA3IDEuMzg5MTJDMS41NDI5NSAwLjc0NjUzMiAwIDEuNzE0MDYgMCAzLjE4OTQ3VjI0LjgxMDVDMCAyNi4yODU5IDEuNTQyOTUgMjcuMjUzNSAyLjg3MTA3IDI2LjYxMDlMMjUuMjE0NSAxNS44MDAzQzI2LjcxOTcgMTUuMDcyMSAyNi43MTk3IDEyLjkyNzkgMjUuMjE0NSAxMi4xOTk3WiIgZmlsbD0iYmxhY2siLz4KPHBhdGggZD0iTTEzLjc4NTUgMTIuMTk5N0wzNi4xMjg5IDEuMzg5MTJDMzcuNDU3MSAwLjc0NjUzMiAzOSAxLjcxNDA2IDM5IDMuMTg5NDdWMjQuODEwNUMzOSAyNi4yODU5IDM3LjQ1NzEgMjcuMjUzNSAzNi4xMjg5IDI2LjYxMDlMMTMuNzg1NSAxNS44MDAzQzEyLjI4MDMgMTUuMDcyMSAxMi4yODAzIDEyLjkyNzkgMTMuNzg1NSAxMi4xOTk3WiIgZmlsbD0idXJsKCNwYWludDBfcmFkaWFsXzMxMF8xMjkpIi8%2BCjxkZWZzPgo8cmFkaWFsR3JhZGllbnQgaWQ9InBhaW50MF9yYWRpYWxfMzEwXzEyOSIgY3g9IjAiIGN5PSIwIiByPSIxIiBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIgZ3JhZGllbnRUcmFuc2Zvcm09InRyYW5zbGF0ZSgxNi41NzAxIDE0KSBzY2FsZSgxOS44NjQxIDE5LjgzODMpIj4KPHN0b3Agb2Zmc2V0PSIwLjMwMTA1NiIgc3RvcC1vcGFjaXR5PSIwIi8%2BCjxzdG9wIG9mZnNldD0iMSIvPgo8L3JhZGlhbEdyYWRpZW50Pgo8L2RlZnM%2BCjwvc3ZnPgo%3D)](https://gitbutler.com/)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://gitbutler.com/"&gt;&lt;img src="https://img.shields.io/badge/GitButler-%23B9F4F2?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB3aWR0aD0iMzkiIGhlaWdodD0iMjgiIHZpZXdCb3g9IjAgMCAzOSAyOCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZD0iTTI1LjIxNDUgMTIuMTk5N0wyLjg3MTA3IDEuMzg5MTJDMS41NDI5NSAwLjc0NjUzMiAwIDEuNzE0MDYgMCAzLjE4OTQ3VjI0LjgxMDVDMCAyNi4yODU5IDEuNTQyOTUgMjcuMjUzNSAyLjg3MTA3IDI2LjYxMDlMMjUuMjE0NSAxNS44MDAzQzI2LjcxOTcgMTUuMDcyMSAyNi43MTk3IDEyLjkyNzkgMjUuMjE0NSAxMi4xOTk3WiIgZmlsbD0iYmxhY2siLz4KPHBhdGggZD0iTTEzLjc4NTUgMTIuMTk5N0wzNi4xMjg5IDEuMzg5MTJDMzcuNDU3MSAwLjc0NjUzMiAzOSAxLjcxNDA2IDM5IDMuMTg5NDdWMjQuODEwNUMzOSAyNi4yODU5IDM3LjQ1NzEgMjcuMjUzNSAzNi4xMjg5IDI2LjYxMDlMMTMuNzg1NSAxNS44MDAzQzEyLjI4MDMgMTUuMDcyMSAxMi4yODAzIDEyLjkyNzkgMTMuNzg1NSAxMi4xOTk3WiIgZmlsbD0idXJsKCNwYWludDBfcmFkaWFsXzMxMF8xMjkpIi8%2BCjxkZWZzPgo8cmFkaWFsR3JhZGllbnQgaWQ9InBhaW50MF9yYWRpYWxfMzEwXzEyOSIgY3g9IjAiIGN5PSIwIiByPSIxIiBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIgZ3JhZGllbnRUcmFuc2Zvcm09InRyYW5zbGF0ZSgxNi41NzAxIDE0KSBzY2FsZSgxOS44NjQxIDE5LjgzODMpIj4KPHN0b3Agb2Zmc2V0PSIwLjMwMTA1NiIgc3RvcC1vcGFjaXR5PSIwIi8%2BCjxzdG9wIG9mZnNldD0iMSIvPgo8L3JhZGlhbEdyYWRpZW50Pgo8L2RlZnM%2BCjwvc3ZnPgo%3D" alt="BADGE" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>zed-industries/zed</title>
      <link>https://github.com/zed-industries/zed</link>
      <description>&lt;p&gt;Code at the speed of thought ‚Äì Zed is a high-performance, multiplayer code editor from the creators of Atom and Tree-sitter.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zed&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://zed.dev"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/zed-industries/zed/main/assets/badge/v0.json" alt="Zed" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zed-industries/zed/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/zed-industries/zed/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Welcome to Zed, a high-performance, multiplayer code editor from the creators of &lt;a href="https://github.com/atom/atom"&gt;Atom&lt;/a&gt; and &lt;a href="https://github.com/tree-sitter/tree-sitter"&gt;Tree-sitter&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;On macOS and Linux you can &lt;a href="https://zed.dev/download"&gt;download Zed directly&lt;/a&gt; or &lt;a href="https://zed.dev/docs/linux#installing-via-a-package-manager"&gt;install Zed via your local package manager&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Other platforms are not yet available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows (&lt;a href="https://github.com/zed-industries/zed/issues/5394"&gt;tracking issue&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Web (&lt;a href="https://github.com/zed-industries/zed/issues/5396"&gt;tracking issue&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Developing Zed&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/development/macos.md"&gt;Building Zed for macOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/development/linux.md"&gt;Building Zed for Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/development/windows.md"&gt;Building Zed for Windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/development/local-collaboration.md"&gt;Running Collaboration Locally&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/zed-industries/zed/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for ways you can contribute to Zed.&lt;/p&gt; 
&lt;p&gt;Also... we're hiring! Check out our &lt;a href="https://zed.dev/jobs"&gt;jobs&lt;/a&gt; page for open roles.&lt;/p&gt; 
&lt;h3&gt;Licensing&lt;/h3&gt; 
&lt;p&gt;License information for third party dependencies must be correctly provided for CI to pass.&lt;/p&gt; 
&lt;p&gt;We use &lt;a href="https://github.com/EmbarkStudios/cargo-about"&gt;&lt;code&gt;cargo-about&lt;/code&gt;&lt;/a&gt; to automatically comply with open source licenses. If CI is failing, check the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Is it showing a &lt;code&gt;no license specified&lt;/code&gt; error for a crate you've created? If so, add &lt;code&gt;publish = false&lt;/code&gt; under &lt;code&gt;[package]&lt;/code&gt; in your crate's Cargo.toml.&lt;/li&gt; 
 &lt;li&gt;Is the error &lt;code&gt;failed to satisfy license requirements&lt;/code&gt; for a dependency? If so, first determine what license the project has and whether this system is sufficient to comply with this license's requirements. If you're unsure, ask a lawyer. Once you've verified that this system is acceptable add the license's SPDX identifier to the &lt;code&gt;accepted&lt;/code&gt; array in &lt;code&gt;script/licenses/zed-licenses.toml&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Is &lt;code&gt;cargo-about&lt;/code&gt; unable to find the license for a dependency? If so, add a clarification field at the end of &lt;code&gt;script/licenses/zed-licenses.toml&lt;/code&gt;, as specified in the &lt;a href="https://embarkstudios.github.io/cargo-about/cli/generate/config.html#crate-configuration"&gt;cargo-about book&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>actix/actix-web</title>
      <link>https://github.com/actix/actix-web</link>
      <description>&lt;p&gt;Actix Web is a powerful, pragmatic, and extremely fast web framework for Rust.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt;Actix Web&lt;/h1&gt; 
 &lt;p&gt; &lt;strong&gt;Actix Web is a powerful, pragmatic, and extremely fast web framework for Rust&lt;/strong&gt; &lt;/p&gt; 
 &lt;p&gt; 
  &lt;!-- prettier-ignore-start --&gt; &lt;/p&gt;
 &lt;p&gt;&lt;a href="https://crates.io/crates/actix-web"&gt;&lt;img src="https://img.shields.io/crates/v/actix-web?label=latest" alt="crates.io" /&gt;&lt;/a&gt; &lt;a href="https://docs.rs/actix-web/4.11.0"&gt;&lt;img src="https://docs.rs/actix-web/badge.svg?version=4.11.0" alt="Documentation" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/rustc-1.72+-ab6000.svg?sanitize=true" alt="MSRV" /&gt; &lt;img src="https://img.shields.io/crates/l/actix-web.svg?sanitize=true" alt="MIT or Apache 2.0 licensed" /&gt; &lt;a href="https://deps.rs/crate/actix-web/4.11.0"&gt;&lt;img src="https://deps.rs/crate/actix-web/4.11.0/status.svg?sanitize=true" alt="Dependency Status" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://github.com/actix/actix-web/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/actix/actix-web/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/actix/actix-web"&gt;&lt;img src="https://codecov.io/gh/actix/actix-web/graph/badge.svg?token=dSwOnp9QCv" alt="codecov" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/crates/d/actix-web.svg?sanitize=true" alt="downloads" /&gt; &lt;a href="https://discord.gg/NWpN5mmg3x"&gt;&lt;img src="https://img.shields.io/discord/771444961383153695?label=chat&amp;amp;logo=discord" alt="Chat on Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;!-- prettier-ignore-end --&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports &lt;em&gt;HTTP/1.x&lt;/em&gt; and &lt;em&gt;HTTP/2&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Streaming and pipelining&lt;/li&gt; 
 &lt;li&gt;Powerful &lt;a href="https://actix.rs/docs/url-dispatch/"&gt;request routing&lt;/a&gt; with optional macros&lt;/li&gt; 
 &lt;li&gt;Full &lt;a href="https://tokio.rs"&gt;Tokio&lt;/a&gt; compatibility&lt;/li&gt; 
 &lt;li&gt;Keep-alive and slow requests handling&lt;/li&gt; 
 &lt;li&gt;Client/server &lt;a href="https://actix.rs/docs/websockets/"&gt;WebSockets&lt;/a&gt; support&lt;/li&gt; 
 &lt;li&gt;Transparent content compression/decompression (br, gzip, deflate, zstd)&lt;/li&gt; 
 &lt;li&gt;Multipart streams&lt;/li&gt; 
 &lt;li&gt;Static assets&lt;/li&gt; 
 &lt;li&gt;SSL support using OpenSSL or Rustls&lt;/li&gt; 
 &lt;li&gt;Middlewares (&lt;a href="https://actix.rs/docs/middleware/"&gt;Logger, Session, CORS, etc&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Integrates with the &lt;a href="https://docs.rs/awc/"&gt;&lt;code&gt;awc&lt;/code&gt; HTTP client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Runs on stable Rust 1.72+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://actix.rs"&gt;Website &amp;amp; User Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actix/examples"&gt;Examples Repository&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.rs/actix-web"&gt;API Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://actix.rs/actix-web/actix_web"&gt;API Documentation (master branch)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;p&gt;Dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[dependencies]
actix-web = "4"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;use actix_web::{get, web, App, HttpServer, Responder};

#[get("/hello/{name}")]
async fn greet(name: web::Path&amp;lt;String&amp;gt;) -&amp;gt; impl Responder {
    format!("Hello {name}!")
}

#[actix_web::main] // or #[tokio::main]
async fn main() -&amp;gt; std::io::Result&amp;lt;()&amp;gt; {
    HttpServer::new(|| {
        App::new().service(greet)
    })
    .bind(("127.0.0.1", 8080))?
    .run()
    .await
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;More Examples&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/basics/hello-world"&gt;Hello World&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/basics/basics"&gt;Basic Setup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/basics/state"&gt;Application State&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/json/json"&gt;JSON Handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/forms/multipart"&gt;Multipart Streams&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/databases/mongodb"&gt;MongoDB Integration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/databases/diesel"&gt;Diesel Integration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/databases/sqlite"&gt;SQLite Integration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/databases/postgres"&gt;Postgres Integration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/templating/tera"&gt;Tera Templates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/templating/askama"&gt;Askama Templates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/https-tls/rustls"&gt;HTTPS using Rustls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/https-tls/openssl"&gt;HTTPS using OpenSSL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/websockets"&gt;Simple WebSocket&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actix/examples/tree/master/websockets/chat"&gt;WebSocket Chat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You may consider checking out &lt;a href="https://github.com/actix/examples/tree/master"&gt;this directory&lt;/a&gt; for more examples.&lt;/p&gt; 
&lt;h2&gt;Benchmarks&lt;/h2&gt; 
&lt;p&gt;One of the fastest web frameworks available according to the &lt;a href="https://www.techempower.com/benchmarks/#section=data-r21&amp;amp;test=composite"&gt;TechEmpower Framework Benchmark&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under either of the following licenses, at your option:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Apache License, Version 2.0, (&lt;a href="https://raw.githubusercontent.com/actix/actix-web/master/LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt; or [http://www.apache.org/licenses/LICENSE-2.0])&lt;/li&gt; 
 &lt;li&gt;MIT license (&lt;a href="https://raw.githubusercontent.com/actix/actix-web/master/LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt; or [http://opensource.org/licenses/MIT])&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;Contribution to the &lt;code&gt;actix/actix-web&lt;/code&gt; repo is organized under the terms of the Contributor Covenant. The Actix team promises to intervene to uphold that code of conduct.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iced-rs/iced</title>
      <link>https://github.com/iced-rs/iced</link>
      <description>&lt;p&gt;A cross-platform GUI library for Rust, inspired by Elm&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/iced-rs/iced/master/docs/logo.svg?sanitize=true" width="140px" /&gt; 
 &lt;h1&gt;Iced&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://docs.rs/iced/"&gt;&lt;img src="https://docs.rs/iced/badge.svg?sanitize=true" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/iced"&gt;&lt;img src="https://img.shields.io/crates/v/iced.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://github.com/iced-rs/iced/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/crates/l/iced.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/iced"&gt;&lt;img src="https://img.shields.io/crates/d/iced.svg?sanitize=true" alt="Downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/iced-rs/iced/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/iced-rs/iced/test.yml?branch=master&amp;amp;event=push&amp;amp;label=test" alt="Test Status" /&gt;&lt;/a&gt; &lt;a href="https://discourse.iced.rs/"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscourse.iced.rs%2Fsite%2Fstatistics.json&amp;amp;query=%24.users_count&amp;amp;suffix=%20users&amp;amp;label=discourse&amp;amp;color=5e7ce2" alt="Discourse" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/3xZJ65GAhd"&gt;&lt;img src="https://img.shields.io/discord/628993209984614400?label=&amp;amp;labelColor=6A7EC2&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8" alt="Discord Server" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;A cross-platform GUI library for Rust focused on simplicity and type-safety. Inspired by &lt;a href="https://elm-lang.org/"&gt;Elm&lt;/a&gt;.&lt;/p&gt; 
 &lt;a href="https://github.com/squidowl/halloy"&gt; &lt;img src="https://iced.rs/showcase/halloy.gif" width="460px" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/hecrj/icebreaker"&gt; &lt;img src="https://iced.rs/showcase/icebreaker.gif" width="360px" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simple, easy-to-use, batteries-included API&lt;/li&gt; 
 &lt;li&gt;Type-safe, reactive programming model&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/docs/images/todos_desktop.jpg"&gt;Cross-platform support&lt;/a&gt; (Windows, macOS, Linux, and the Web)&lt;/li&gt; 
 &lt;li&gt;Responsive layout&lt;/li&gt; 
 &lt;li&gt;Built-in widgets (including &lt;a href="https://iced.rs/examples/text_input.mp4"&gt;text inputs&lt;/a&gt;, &lt;a href="https://iced.rs/examples/scrollable.mp4"&gt;scrollables&lt;/a&gt;, and more!)&lt;/li&gt; 
 &lt;li&gt;Custom widget support (create your own!)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://iced.rs/examples/debug.mp4"&gt;Debug overlay with performance metrics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;First-class support for async actions (use futures!)&lt;/li&gt; 
 &lt;li&gt;Modular ecosystem split into reusable parts: 
  &lt;ul&gt; 
   &lt;li&gt;A &lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/runtime/"&gt;renderer-agnostic native runtime&lt;/a&gt; enabling integration with existing systems&lt;/li&gt; 
   &lt;li&gt;Two built-in renderers leveraging &lt;a href="https://github.com/gfx-rs/wgpu"&gt;&lt;code&gt;wgpu&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/RazrFalcon/tiny-skia"&gt;&lt;code&gt;tiny-skia&lt;/code&gt;&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/wgpu/"&gt;&lt;code&gt;iced_wgpu&lt;/code&gt;&lt;/a&gt; supporting Vulkan, Metal and DX12&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/tiny_skia/"&gt;&lt;code&gt;iced_tiny_skia&lt;/code&gt;&lt;/a&gt; offering a software alternative as a fallback&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;A &lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/winit/"&gt;windowing shell&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Iced is currently experimental software.&lt;/strong&gt; &lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/ROADMAP.md"&gt;Take a look at the roadmap&lt;/a&gt; and &lt;a href="https://github.com/iced-rs/iced/issues"&gt;check out the issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Inspired by &lt;a href="https://guide.elm-lang.org/architecture/"&gt;The Elm Architecture&lt;/a&gt;, Iced expects you to split user interfaces into four different concepts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;State&lt;/strong&gt; ‚Äî the state of your application&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Messages&lt;/strong&gt; ‚Äî user interactions or meaningful events that you care about&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;View logic&lt;/strong&gt; ‚Äî a way to display your &lt;strong&gt;state&lt;/strong&gt; as widgets that may produce &lt;strong&gt;messages&lt;/strong&gt; on user interaction&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Update logic&lt;/strong&gt; ‚Äî a way to react to &lt;strong&gt;messages&lt;/strong&gt; and update your &lt;strong&gt;state&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We can build something to see how this works! Let's say we want a simple counter that can be incremented and decremented using two buttons.&lt;/p&gt; 
&lt;p&gt;We start by modelling the &lt;strong&gt;state&lt;/strong&gt; of our application:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;#[derive(Default)]
struct Counter {
    value: i32,
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, we need to define the possible user interactions of our counter: the button presses. These interactions are our &lt;strong&gt;messages&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;#[derive(Debug, Clone, Copy)]
pub enum Message {
    Increment,
    Decrement,
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, let's show the actual counter by putting it all together in our &lt;strong&gt;view logic&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;use iced::widget::{button, column, text, Column};

impl Counter {
    pub fn view(&amp;amp;self) -&amp;gt; Column&amp;lt;Message&amp;gt; {
        // We use a column: a simple vertical layout
        column![
            // The increment button. We tell it to produce an
            // `Increment` message when pressed
            button("+").on_press(Message::Increment),

            // We show the value of the counter here
            text(self.value).size(50),

            // The decrement button. We tell it to produce a
            // `Decrement` message when pressed
            button("-").on_press(Message::Decrement),
        ]
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, we need to be able to react to any produced &lt;strong&gt;messages&lt;/strong&gt; and change our &lt;strong&gt;state&lt;/strong&gt; accordingly in our &lt;strong&gt;update logic&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;impl Counter {
    // ...

    pub fn update(&amp;amp;mut self, message: Message) {
        match message {
            Message::Increment =&amp;gt; {
                self.value += 1;
            }
            Message::Decrement =&amp;gt; {
                self.value -= 1;
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And that's everything! We just wrote a whole user interface. Let's run it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;fn main() -&amp;gt; iced::Result {
    iced::run("A cool counter", Counter::update, Counter::view)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Iced will automatically:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Take the result of our &lt;strong&gt;view logic&lt;/strong&gt; and layout its widgets.&lt;/li&gt; 
 &lt;li&gt;Process events from our system and produce &lt;strong&gt;messages&lt;/strong&gt; for our &lt;strong&gt;update logic&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Draw the resulting user interface.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Read the &lt;a href="https://book.iced.rs/"&gt;book&lt;/a&gt;, the &lt;a href="https://docs.rs/iced/"&gt;documentation&lt;/a&gt;, and the &lt;a href="https://github.com/iced-rs/iced/tree/master/examples#examples"&gt;examples&lt;/a&gt; to learn more!&lt;/p&gt; 
&lt;h2&gt;Implementation details&lt;/h2&gt; 
&lt;p&gt;Iced was originally born as an attempt at bringing the simplicity of &lt;a href="https://elm-lang.org/"&gt;Elm&lt;/a&gt; and &lt;a href="https://guide.elm-lang.org/architecture/"&gt;The Elm Architecture&lt;/a&gt; into &lt;a href="https://github.com/hecrj/coffee"&gt;Coffee&lt;/a&gt;, a 2D game library I am working on.&lt;/p&gt; 
&lt;p&gt;The core of the library was implemented during May 2019 in &lt;a href="https://github.com/hecrj/coffee/pull/35"&gt;this pull request&lt;/a&gt;. &lt;a href="https://github.com/iced-rs/iced/tree/0.1.0-alpha"&gt;The first alpha version&lt;/a&gt; was eventually released as &lt;a href="https://www.reddit.com/r/rust/comments/czzjnv/iced_a_rendereragnostic_gui_library_focused_on/"&gt;a renderer-agnostic GUI library&lt;/a&gt;. The library did not provide a renderer and implemented the current &lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/examples/README.md#tour"&gt;tour example&lt;/a&gt; on top of &lt;a href="https://github.com/ggez/ggez"&gt;&lt;code&gt;ggez&lt;/code&gt;&lt;/a&gt;, a game library.&lt;/p&gt; 
&lt;p&gt;Since then, the focus has shifted towards providing a batteries-included, end-user-oriented GUI library, while keeping the ecosystem modular.&lt;/p&gt; 
&lt;h2&gt;Contributing / Feedback&lt;/h2&gt; 
&lt;p&gt;If you want to contribute, please read our &lt;a href="https://github.com/iced-rs/iced/raw/master/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;Feedback is also welcome! You can create a new topic in &lt;a href="https://discourse.iced.rs/"&gt;our Discourse forum&lt;/a&gt; or come chat to &lt;a href="https://discord.gg/3xZJ65GAhd"&gt;our Discord server&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;The development of Iced is sponsored by the &lt;a href="https://cryptowat.ch/charts"&gt;Cryptowatch&lt;/a&gt; team at &lt;a href="https://kraken.com/"&gt;Kraken.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ai-dynamo/dynamo</title>
      <link>https://github.com/ai-dynamo/dynamo</link>
      <description>&lt;p&gt;A Datacenter Scale Distributed Inference Serving Framework&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/images/frontpage-banner.png" alt="Dynamo banner" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ai-dynamo/dynamo/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/ai-dynamo/dynamo" alt="GitHub Release" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/D92uqZRjCZ"&gt;&lt;img src="https://dcbadge.limes.pink/api/server/D92uqZRjCZ?style=flat" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/ai-dynamo/dynamo"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;| &lt;strong&gt;&lt;a href="https://github.com/ai-dynamo/dynamo/issues/762"&gt;Roadmap&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://docs.nvidia.com/dynamo/latest/index.html"&gt;Documentation&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://github.com/ai-dynamo/dynamo/tree/main/examples"&gt;Examples&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://github.com/ai-dynamo/enhancements"&gt;Design Proposals&lt;/a&gt;&lt;/strong&gt; |&lt;/p&gt; 
&lt;h1&gt;NVIDIA Dynamo&lt;/h1&gt; 
&lt;p&gt;High-throughput, low-latency inference framework designed for serving generative AI and reasoning models in multi-node distributed environments.&lt;/p&gt; 
&lt;h2&gt;Latest News&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;[08/05] Deploy &lt;code&gt;openai/gpt-oss-120b&lt;/code&gt; with disaggregated serving on NVIDIA Blackwell GPUs using Dynamo &lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/components/backends/trtllm/gpt-oss.md"&gt;‚û°Ô∏è link&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The Era of Multi-GPU, Multi-Node&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/images/frontpage-gpu-vertical.png" alt="Multi Node Multi-GPU topology" width="600" /&gt; &lt;/p&gt; 
&lt;p&gt;Large language models are quickly outgrowing the memory and compute budget of any single GPU. Tensor-parallelism solves the capacity problem by spreading each layer across many GPUs‚Äîand sometimes many servers‚Äîbut it creates a new one: how do you coordinate those shards, route requests, and share KV cache fast enough to feel like one accelerator? This orchestration gap is exactly what NVIDIA Dynamo is built to close.&lt;/p&gt; 
&lt;p&gt;Dynamo is designed to be inference engine agnostic (supports TRT-LLM, vLLM, SGLang or others) and captures LLM-specific capabilities such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Disaggregated prefill &amp;amp; decode inference&lt;/strong&gt; ‚Äì Maximizes GPU throughput and facilitates trade off between throughput and latency.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic GPU scheduling&lt;/strong&gt; ‚Äì Optimizes performance based on fluctuating demand&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LLM-aware request routing&lt;/strong&gt; ‚Äì Eliminates unnecessary KV cache re-computation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Accelerated data transfer&lt;/strong&gt; ‚Äì Reduces inference response time using NIXL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;KV cache offloading&lt;/strong&gt; ‚Äì Leverages multiple memory hierarchies for higher system throughput&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/images/frontpage-architecture.png" alt="Dynamo architecture" width="600" /&gt; &lt;/p&gt; 
&lt;h2&gt;Framework Support Matrix&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;vLLM&lt;/th&gt; 
   &lt;th&gt;SGLang&lt;/th&gt; 
   &lt;th&gt;TensorRT-LLM&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/architecture/disagg_serving.md"&gt;&lt;strong&gt;Disaggregated Serving&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/architecture/disagg_serving.md#conditional-disaggregation"&gt;&lt;strong&gt;Conditional Disaggregation&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/architecture/kv_cache_routing.md"&gt;&lt;strong&gt;KV-Aware Routing&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/architecture/load_planner.md"&gt;&lt;strong&gt;Load Based Planner&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/architecture/sla_planner.md"&gt;&lt;strong&gt;SLA-Based Planner&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/architecture/kvbm_architecture.md"&gt;&lt;strong&gt;KVBM&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
   &lt;td&gt;üöß&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;To learn more about each framework and their capabilities, check out each framework's README!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/components/backends/vllm/README.md"&gt;vLLM&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/components/backends/sglang/README.md"&gt;SGLang&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/components/backends/trtllm/README.md"&gt;TensorRT-LLM&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Built in Rust for performance and in Python for extensibility, Dynamo is fully open-source and driven by a transparent, OSS (Open Source Software) first development approach.&lt;/p&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;The following examples require a few system level packages. Recommended to use Ubuntu 24.04 with a x86_64 CPU. See &lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/support_matrix.md"&gt;docs/support_matrix.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;1. Initial setup&lt;/h2&gt; 
&lt;p&gt;The Dynamo team recommends the &lt;code&gt;uv&lt;/code&gt; Python package manager, although any way works. Install uv:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;curl -LsSf https://astral.sh/uv/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install etcd and NATS (required)&lt;/h3&gt; 
&lt;p&gt;To coordinate across a data center, Dynamo relies on etcd and NATS. To run Dynamo locally, these need to be available.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://etcd.io/"&gt;etcd&lt;/a&gt; can be run directly as &lt;code&gt;./etcd&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nats.io/"&gt;nats&lt;/a&gt; needs jetstream enabled: &lt;code&gt;nats-server -js&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To quickly setup etcd &amp;amp; NATS, you can also run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# At the root of the repository:
docker compose -f deploy/docker-compose.yml up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;2. Select an engine&lt;/h2&gt; 
&lt;p&gt;We publish Python wheels specialized for each of our supported engines: vllm, sglang, trtllm, and llama.cpp. The examples that follow use SGLang; continue reading for other engines.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;uv venv venv
source venv/bin/activate
uv pip install pip

# Choose one
uv pip install "ai-dynamo[sglang]"  #replace with [vllm], [trtllm], etc.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;3. Run Dynamo&lt;/h2&gt; 
&lt;h3&gt;Running an LLM API server&lt;/h3&gt; 
&lt;p&gt;Dynamo provides a simple way to spin up a local set of inference components including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;OpenAI Compatible Frontend&lt;/strong&gt; ‚Äì High performance OpenAI compatible http api server written in Rust.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Basic and Kv Aware Router&lt;/strong&gt; ‚Äì Route and load balance traffic to a set of workers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workers&lt;/strong&gt; ‚Äì Set of pre-configured LLM serving engines.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;# Start an OpenAI compatible HTTP server, a pre-processor (prompt templating and tokenization) and a router.
# Pass the TLS certificate and key paths to use HTTPS instead of HTTP.
python -m dynamo.frontend --http-port 8080 [--tls-cert-path cert.pem] [--tls-key-path key.pem]

# Start the SGLang engine, connecting to NATS and etcd to receive requests. You can run several of these,
# both for the same model and for multiple models. The frontend node will discover them.
python -m dynamo.sglang.worker --model deepseek-ai/DeepSeek-R1-Distill-Llama-8B --skip-tokenizer-init
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Send a Request&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl localhost:8080/v1/chat/completions   -H "Content-Type: application/json"   -d '{
    "model": "deepseek-ai/DeepSeek-R1-Distill-Llama-8B",
    "messages": [
    {
        "role": "user",
        "content": "Hello, how are you?"
    }
    ],
    "stream":false,
    "max_tokens": 300
  }' | jq
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Rerun with &lt;code&gt;curl -N&lt;/code&gt; and change &lt;code&gt;stream&lt;/code&gt; in the request to &lt;code&gt;true&lt;/code&gt; to get the responses as soon as the engine issues them.&lt;/p&gt; 
&lt;h3&gt;Deploying Dynamo&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow the &lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/docs/guides/dynamo_deploy/README.md"&gt;Quickstart Guide&lt;/a&gt; to deploy on Kubernetes.&lt;/li&gt; 
 &lt;li&gt;Check out &lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/components/backends"&gt;Backends&lt;/a&gt; to deploy various workflow configurations (e.g. SGLang with router, vLLM with disaggregated serving, etc.)&lt;/li&gt; 
 &lt;li&gt;Run some &lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/examples"&gt;Examples&lt;/a&gt; to learn about building components in Dynamo and exploring various integrations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Engines&lt;/h1&gt; 
&lt;p&gt;Dynamo is designed to be inference engine agnostic. To use any engine with Dynamo, NATS and etcd need to be installed, along with a Dynamo frontend (&lt;code&gt;python -m dynamo.frontend [--interactive]&lt;/code&gt;).&lt;/p&gt; 
&lt;h2&gt;vLLM&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;uv pip install ai-dynamo[vllm]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the backend/worker like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;python -m dynamo.vllm --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;vLLM attempts to allocate enough KV cache for the full context length at startup. If that does not fit in your available memory pass &lt;code&gt;--context-length &amp;lt;value&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To specify which GPUs to use set environment variable &lt;code&gt;CUDA_VISIBLE_DEVICES&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;SGLang&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;# Install libnuma
apt install -y libnuma-dev

uv pip install ai-dynamo[sglang]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the backend/worker like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;python -m dynamo.sglang.worker --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can pass any sglang flags directly to this worker, see &lt;a href="https://docs.sglang.ai/advanced_features/server_arguments.html"&gt;https://docs.sglang.ai/advanced_features/server_arguments.html&lt;/a&gt; . See there to use multiple GPUs.&lt;/p&gt; 
&lt;h2&gt;TensorRT-LLM&lt;/h2&gt; 
&lt;p&gt;It is recommended to use &lt;a href="https://catalog.ngc.nvidia.com/orgs/nvidia/containers/pytorch"&gt;NGC PyTorch Container&lt;/a&gt; for running the TensorRT-LLM engine.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Note] Ensure that you select a PyTorch container image version that matches the version of TensorRT-LLM you are using. For example, if you are using &lt;code&gt;tensorrt-llm==1.0.0rc6&lt;/code&gt;, use the PyTorch container image version &lt;code&gt;25.06&lt;/code&gt;. To find the correct PyTorch container version for your desired &lt;code&gt;tensorrt-llm&lt;/code&gt; release, visit the &lt;a href="https://github.com/NVIDIA/TensorRT-LLM/raw/main/docker/Dockerfile.multi"&gt;TensorRT-LLM Dockerfile.multi&lt;/a&gt; on GitHub. Switch to the branch that matches your &lt;code&gt;tensorrt-llm&lt;/code&gt; version, and look for the &lt;code&gt;BASE_TAG&lt;/code&gt; line to identify the recommended PyTorch container tag.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Important] Launch container with the following additional settings &lt;code&gt;--shm-size=1g --ulimit memlock=-1&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Install prerequisites&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;# Optional step: Only required for Blackwell and Grace Hopper
uv pip install torch==2.7.1 torchvision torchaudio --index-url https://download.pytorch.org/whl/cu128

# Required until the trtllm version is bumped to include this pinned dependency itself
uv pip install "cuda-python&amp;gt;=12,&amp;lt;13"

sudo apt-get -y install libopenmpi-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Tip] You can learn more about these prequisites and known issues with TensorRT-LLM pip based installation &lt;a href="https://nvidia.github.io/TensorRT-LLM/installation/linux.html"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;After installing the pre-requisites above, install Dynamo&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;uv pip install ai-dynamo[trtllm]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the backend/worker like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;python -m dynamo.trtllm --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To specify which GPUs to use set environment variable &lt;code&gt;CUDA_VISIBLE_DEVICES&lt;/code&gt;.&lt;/p&gt; 
&lt;h1&gt;Developing Locally&lt;/h1&gt; 
&lt;h2&gt;1. Install libraries&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Ubuntu:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt install -y build-essential libhwloc-dev libudev-dev pkg-config libclang-dev protobuf-compiler python3-dev cmake
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;macOS:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;# if brew is not installed on your system, install it
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.apple.com/xcode/"&gt;Xcode&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;brew install cmake protobuf

## Check that Metal is accessible
xcrun -sdk macosx metal
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If Metal is accessible, you should see an error like &lt;code&gt;metal: error: no input files&lt;/code&gt;, which confirms it is installed correctly.&lt;/p&gt; 
&lt;h2&gt;2. Install Rust&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
source $HOME/.cargo/env
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;3. Create a Python virtual env:&lt;/h2&gt; 
&lt;p&gt;Follow the instructions in &lt;a href="https://docs.astral.sh/uv/#installation"&gt;uv installation&lt;/a&gt; guide to install uv if you don't have &lt;code&gt;uv&lt;/code&gt; installed. Once uv is installed, create a virtual environment and activate it.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install uv&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -LsSf https://astral.sh/uv/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a virtual environment&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uv venv dynamo
source dynamo/bin/activate
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;4. Install build tools&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;uv pip install pip maturin
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://github.com/PyO3/maturin"&gt;Maturin&lt;/a&gt; is the Rust&amp;lt;-&amp;gt;Python bindings build tool.&lt;/p&gt; 
&lt;h2&gt;5. Build the Rust bindings&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;cd lib/bindings/python
maturin develop --uv
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;6. Install the wheel&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;cd $PROJECT_ROOT
uv pip install .
# For development, use
export PYTHONPATH="${PYTHONPATH}:$(pwd)/components/frontend/src:$(pwd)/components/planner/src:$(pwd)/components/backends/vllm/src:$(pwd)/components/backends/sglang/src:$(pwd)/components/backends/trtllm/src:$(pwd)/components/backends/llama_cpp/src:$(pwd)/components/backends/mocker/src"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Note] Editable (&lt;code&gt;-e&lt;/code&gt;) does not work because the &lt;code&gt;dynamo&lt;/code&gt; package is split over multiple directories, one per backend.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You should now be able to run &lt;code&gt;python -m dynamo.frontend&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Remember that nats and etcd must be running (see earlier).&lt;/p&gt; 
&lt;p&gt;Set the environment variable &lt;code&gt;DYN_LOG&lt;/code&gt; to adjust the logging level; for example, &lt;code&gt;export DYN_LOG=debug&lt;/code&gt;. It has the same syntax as &lt;code&gt;RUST_LOG&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you use vscode or cursor, we have a .devcontainer folder built on &lt;a href="https://code.visualstudio.com/docs/devcontainers/containers"&gt;Microsofts Extension&lt;/a&gt;. For instructions see the &lt;a href="https://raw.githubusercontent.com/ai-dynamo/dynamo/main/.devcontainer/README.md"&gt;ReadMe&lt;/a&gt; for more details.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>