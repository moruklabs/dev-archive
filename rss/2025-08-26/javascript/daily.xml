<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Mon, 25 Aug 2025 01:35:17 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>ryanmcdermott/clean-code-javascript</title>
      <link>https://github.com/ryanmcdermott/clean-code-javascript</link>
      <description>&lt;p&gt;Clean Code concepts adapted for JavaScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;clean-code-javascript&lt;/h1&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#variables"&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#functions"&gt;Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#objects-and-data-structures"&gt;Objects and Data Structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#classes"&gt;Classes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#solid"&gt;SOLID&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#testing"&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#concurrency"&gt;Concurrency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#error-handling"&gt;Error Handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#formatting"&gt;Formatting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#comments"&gt;Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#translation"&gt;Translation&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://www.osnews.com/images/comics/wtfm.jpg" alt="Humorous image of software quality estimation as a count of how many expletives you shout when reading code" /&gt;&lt;/p&gt; 
&lt;p&gt;Software engineering principles, from Robert C. Martin's book &lt;a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882"&gt;&lt;em&gt;Clean Code&lt;/em&gt;&lt;/a&gt;, adapted for JavaScript. This is not a style guide. It's a guide to producing &lt;a href="https://github.com/ryanmcdermott/3rs-of-software-architecture"&gt;readable, reusable, and refactorable&lt;/a&gt; software in JavaScript.&lt;/p&gt; 
&lt;p&gt;Not every principle herein has to be strictly followed, and even fewer will be universally agreed upon. These are guidelines and nothing more, but they are ones codified over many years of collective experience by the authors of &lt;em&gt;Clean Code&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;Our craft of software engineering is just a bit over 50 years old, and we are still learning a lot. When software architecture is as old as architecture itself, maybe then we will have harder rules to follow. For now, let these guidelines serve as a touchstone by which to assess the quality of the JavaScript code that you and your team produce.&lt;/p&gt; 
&lt;p&gt;One more thing: knowing these won't immediately make you a better software developer, and working with them for many years doesn't mean you won't make mistakes. Every piece of code starts as a first draft, like wet clay getting shaped into its final form. Finally, we chisel away the imperfections when we review it with our peers. Don't beat yourself up for first drafts that need improvement. Beat up the code instead!&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Variables&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use meaningful and pronounceable variable names&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const yyyymmdstr = moment().format("YYYY/MM/DD");
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const currentDate = moment().format("YYYY/MM/DD");
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use the same vocabulary for the same type of variable&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;getUserInfo();
getClientData();
getCustomerRecord();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;getUser();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use searchable names&lt;/h3&gt; 
&lt;p&gt;We will read more code than we will ever write. It's important that the code we do write is readable and searchable. By &lt;em&gt;not&lt;/em&gt; naming variables that end up being meaningful for understanding our program, we hurt our readers. Make your names searchable. Tools like &lt;a href="https://github.com/danielstjules/buddy.js"&gt;buddy.js&lt;/a&gt; and &lt;a href="https://github.com/eslint/eslint/raw/660e0918933e6e7fede26bc675a0763a6b357c94/docs/rules/no-magic-numbers.md"&gt;ESLint&lt;/a&gt; can help identify unnamed constants.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// What the heck is 86400000 for?
setTimeout(blastOff, 86400000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Declare them as capitalized named constants.
const MILLISECONDS_PER_DAY = 60 * 60 * 24 * 1000; //86400000;

setTimeout(blastOff, MILLISECONDS_PER_DAY);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use explanatory variables&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const address = "One Infinite Loop, Cupertino 95014";
const cityZipCodeRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
saveCityZipCode(
  address.match(cityZipCodeRegex)[1],
  address.match(cityZipCodeRegex)[2]
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const address = "One Infinite Loop, Cupertino 95014";
const cityZipCodeRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
const [_, city, zipCode] = address.match(cityZipCodeRegex) || [];
saveCityZipCode(city, zipCode);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Mental Mapping&lt;/h3&gt; 
&lt;p&gt;Explicit is better than implicit.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const locations = ["Austin", "New York", "San Francisco"];
locations.forEach(l =&amp;gt; {
  doStuff();
  doSomeOtherStuff();
  // ...
  // ...
  // ...
  // Wait, what is `l` for again?
  dispatch(l);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const locations = ["Austin", "New York", "San Francisco"];
locations.forEach(location =&amp;gt; {
  doStuff();
  doSomeOtherStuff();
  // ...
  // ...
  // ...
  dispatch(location);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don't add unneeded context&lt;/h3&gt; 
&lt;p&gt;If your class/object name tells you something, don't repeat that in your variable name.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const Car = {
  carMake: "Honda",
  carModel: "Accord",
  carColor: "Blue"
};

function paintCar(car, color) {
  car.carColor = color;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const Car = {
  make: "Honda",
  model: "Accord",
  color: "Blue"
};

function paintCar(car, color) {
  car.color = color;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use default parameters instead of short circuiting or conditionals&lt;/h3&gt; 
&lt;p&gt;Default parameters are often cleaner than short circuiting. Be aware that if you use them, your function will only provide default values for &lt;code&gt;undefined&lt;/code&gt; arguments. Other "falsy" values such as &lt;code&gt;''&lt;/code&gt;, &lt;code&gt;""&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;NaN&lt;/code&gt;, will not be replaced by a default value.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function createMicrobrewery(name) {
  const breweryName = name || "Hipster Brew Co.";
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function createMicrobrewery(name = "Hipster Brew Co.") {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Function arguments (2 or fewer ideally)&lt;/h3&gt; 
&lt;p&gt;Limiting the amount of function parameters is incredibly important because it makes testing your function easier. Having more than three leads to a combinatorial explosion where you have to test tons of different cases with each separate argument.&lt;/p&gt; 
&lt;p&gt;One or two arguments is the ideal case, and three should be avoided if possible. Anything more than that should be consolidated. Usually, if you have more than two arguments then your function is trying to do too much. In cases where it's not, most of the time a higher-level object will suffice as an argument.&lt;/p&gt; 
&lt;p&gt;Since JavaScript allows you to make objects on the fly, without a lot of class boilerplate, you can use an object if you are finding yourself needing a lot of arguments.&lt;/p&gt; 
&lt;p&gt;To make it obvious what properties the function expects, you can use the ES2015/ES6 destructuring syntax. This has a few advantages:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;When someone looks at the function signature, it's immediately clear what properties are being used.&lt;/li&gt; 
 &lt;li&gt;It can be used to simulate named parameters.&lt;/li&gt; 
 &lt;li&gt;Destructuring also clones the specified primitive values of the argument object passed into the function. This can help prevent side effects. Note: objects and arrays that are destructured from the argument object are NOT cloned.&lt;/li&gt; 
 &lt;li&gt;Linters can warn you about unused properties, which would be impossible without destructuring.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function createMenu(title, body, buttonText, cancellable) {
  // ...
}

createMenu("Foo", "Bar", "Baz", true);

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function createMenu({ title, body, buttonText, cancellable }) {
  // ...
}

createMenu({
  title: "Foo",
  body: "Bar",
  buttonText: "Baz",
  cancellable: true
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Functions should do one thing&lt;/h3&gt; 
&lt;p&gt;This is by far the most important rule in software engineering. When functions do more than one thing, they are harder to compose, test, and reason about. When you can isolate a function to just one action, it can be refactored easily and your code will read much cleaner. If you take nothing else away from this guide other than this, you'll be ahead of many developers.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function emailClients(clients) {
  clients.forEach(client =&amp;gt; {
    const clientRecord = database.lookup(client);
    if (clientRecord.isActive()) {
      email(client);
    }
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function emailActiveClients(clients) {
  clients.filter(isActiveClient).forEach(email);
}

function isActiveClient(client) {
  const clientRecord = database.lookup(client);
  return clientRecord.isActive();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Function names should say what they do&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function addToDate(date, month) {
  // ...
}

const date = new Date();

// It's hard to tell from the function name what is added
addToDate(date, 1);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function addMonthToDate(month, date) {
  // ...
}

const date = new Date();
addMonthToDate(1, date);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Functions should only be one level of abstraction&lt;/h3&gt; 
&lt;p&gt;When you have more than one level of abstraction your function is usually doing too much. Splitting up functions leads to reusability and easier testing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function parseBetterJSAlternative(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(" ");
  const tokens = [];
  REGEXES.forEach(REGEX =&amp;gt; {
    statements.forEach(statement =&amp;gt; {
      // ...
    });
  });

  const ast = [];
  tokens.forEach(token =&amp;gt; {
    // lex...
  });

  ast.forEach(node =&amp;gt; {
    // parse...
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function parseBetterJSAlternative(code) {
  const tokens = tokenize(code);
  const syntaxTree = parse(tokens);
  syntaxTree.forEach(node =&amp;gt; {
    // parse...
  });
}

function tokenize(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(" ");
  const tokens = [];
  REGEXES.forEach(REGEX =&amp;gt; {
    statements.forEach(statement =&amp;gt; {
      tokens.push(/* ... */);
    });
  });

  return tokens;
}

function parse(tokens) {
  const syntaxTree = [];
  tokens.forEach(token =&amp;gt; {
    syntaxTree.push(/* ... */);
  });

  return syntaxTree;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Remove duplicate code&lt;/h3&gt; 
&lt;p&gt;Do your absolute best to avoid duplicate code. Duplicate code is bad because it means that there's more than one place to alter something if you need to change some logic.&lt;/p&gt; 
&lt;p&gt;Imagine if you run a restaurant and you keep track of your inventory: all your tomatoes, onions, garlic, spices, etc. If you have multiple lists that you keep this on, then all have to be updated when you serve a dish with tomatoes in them. If you only have one list, there's only one place to update!&lt;/p&gt; 
&lt;p&gt;Oftentimes you have duplicate code because you have two or more slightly different things, that share a lot in common, but their differences force you to have two or more separate functions that do much of the same things. Removing duplicate code means creating an abstraction that can handle this set of different things with just one function/module/class.&lt;/p&gt; 
&lt;p&gt;Getting the abstraction right is critical, that's why you should follow the SOLID principles laid out in the &lt;em&gt;Classes&lt;/em&gt; section. Bad abstractions can be worse than duplicate code, so be careful! Having said this, if you can make a good abstraction, do it! Don't repeat yourself, otherwise you'll find yourself updating multiple places anytime you want to change one thing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function showDeveloperList(developers) {
  developers.forEach(developer =&amp;gt; {
    const expectedSalary = developer.calculateExpectedSalary();
    const experience = developer.getExperience();
    const githubLink = developer.getGithubLink();
    const data = {
      expectedSalary,
      experience,
      githubLink
    };

    render(data);
  });
}

function showManagerList(managers) {
  managers.forEach(manager =&amp;gt; {
    const expectedSalary = manager.calculateExpectedSalary();
    const experience = manager.getExperience();
    const portfolio = manager.getMBAProjects();
    const data = {
      expectedSalary,
      experience,
      portfolio
    };

    render(data);
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function showEmployeeList(employees) {
  employees.forEach(employee =&amp;gt; {
    const expectedSalary = employee.calculateExpectedSalary();
    const experience = employee.getExperience();

    const data = {
      expectedSalary,
      experience
    };

    switch (employee.type) {
      case "manager":
        data.portfolio = employee.getMBAProjects();
        break;
      case "developer":
        data.githubLink = employee.getGithubLink();
        break;
    }

    render(data);
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Set default objects with Object.assign&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const menuConfig = {
  title: null,
  body: "Bar",
  buttonText: null,
  cancellable: true
};

function createMenu(config) {
  config.title = config.title || "Foo";
  config.body = config.body || "Bar";
  config.buttonText = config.buttonText || "Baz";
  config.cancellable =
    config.cancellable !== undefined ? config.cancellable : true;
}

createMenu(menuConfig);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const menuConfig = {
  title: "Order",
  // User did not include 'body' key
  buttonText: "Send",
  cancellable: true
};

function createMenu(config) {
  let finalConfig = Object.assign(
    {
      title: "Foo",
      body: "Bar",
      buttonText: "Baz",
      cancellable: true
    },
    config
  );
  return finalConfig
  // config now equals: {title: "Order", body: "Bar", buttonText: "Send", cancellable: true}
  // ...
}

createMenu(menuConfig);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don't use flags as function parameters&lt;/h3&gt; 
&lt;p&gt;Flags tell your user that this function does more than one thing. Functions should do one thing. Split out your functions if they are following different code paths based on a boolean.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function createFile(name, temp) {
  if (temp) {
    fs.create(`./temp/${name}`);
  } else {
    fs.create(name);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function createFile(name) {
  fs.create(name);
}

function createTempFile(name) {
  createFile(`./temp/${name}`);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Side Effects (part 1)&lt;/h3&gt; 
&lt;p&gt;A function produces a side effect if it does anything other than take a value in and return another value or values. A side effect could be writing to a file, modifying some global variable, or accidentally wiring all your money to a stranger.&lt;/p&gt; 
&lt;p&gt;Now, you do need to have side effects in a program on occasion. Like the previous example, you might need to write to a file. What you want to do is to centralize where you are doing this. Don't have several functions and classes that write to a particular file. Have one service that does it. One and only one.&lt;/p&gt; 
&lt;p&gt;The main point is to avoid common pitfalls like sharing state between objects without any structure, using mutable data types that can be written to by anything, and not centralizing where your side effects occur. If you can do this, you will be happier than the vast majority of other programmers.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Global variable referenced by following function.
// If we had another function that used this name, now it'd be an array and it could break it.
let name = "Ryan McDermott";

function splitIntoFirstAndLastName() {
  name = name.split(" ");
}

splitIntoFirstAndLastName();

console.log(name); // ['Ryan', 'McDermott'];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function splitIntoFirstAndLastName(name) {
  return name.split(" ");
}

const name = "Ryan McDermott";
const newName = splitIntoFirstAndLastName(name);

console.log(name); // 'Ryan McDermott';
console.log(newName); // ['Ryan', 'McDermott'];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Side Effects (part 2)&lt;/h3&gt; 
&lt;p&gt;In JavaScript, some values are unchangeable (immutable) and some are changeable (mutable). Objects and arrays are two kinds of mutable values so it's important to handle them carefully when they're passed as parameters to a function. A JavaScript function can change an object's properties or alter the contents of an array which could easily cause bugs elsewhere.&lt;/p&gt; 
&lt;p&gt;Suppose there's a function that accepts an array parameter representing a shopping cart. If the function makes a change in that shopping cart array - by adding an item to purchase, for example - then any other function that uses that same &lt;code&gt;cart&lt;/code&gt; array will be affected by this addition. That may be great, however it could also be bad. Let's imagine a bad situation:&lt;/p&gt; 
&lt;p&gt;The user clicks the "Purchase" button which calls a &lt;code&gt;purchase&lt;/code&gt; function that spawns a network request and sends the &lt;code&gt;cart&lt;/code&gt; array to the server. Because of a bad network connection, the &lt;code&gt;purchase&lt;/code&gt; function has to keep retrying the request. Now, what if in the meantime the user accidentally clicks an "Add to Cart" button on an item they don't actually want before the network request begins? If that happens and the network request begins, then that purchase function will send the accidentally added item because the &lt;code&gt;cart&lt;/code&gt; array was modified.&lt;/p&gt; 
&lt;p&gt;A great solution would be for the &lt;code&gt;addItemToCart&lt;/code&gt; function to always clone the &lt;code&gt;cart&lt;/code&gt;, edit it, and return the clone. This would ensure that functions that are still using the old shopping cart wouldn't be affected by the changes.&lt;/p&gt; 
&lt;p&gt;Two caveats to mention to this approach:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;There might be cases where you actually want to modify the input object, but when you adopt this programming practice you will find that those cases are pretty rare. Most things can be refactored to have no side effects!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Cloning big objects can be very expensive in terms of performance. Luckily, this isn't a big issue in practice because there are &lt;a href="https://facebook.github.io/immutable-js/"&gt;great libraries&lt;/a&gt; that allow this kind of programming approach to be fast and not as memory intensive as it would be for you to manually clone objects and arrays.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const addItemToCart = (cart, item) =&amp;gt; {
  cart.push({ item, date: Date.now() });
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const addItemToCart = (cart, item) =&amp;gt; {
  return [...cart, { item, date: Date.now() }];
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don't write to global functions&lt;/h3&gt; 
&lt;p&gt;Polluting globals is a bad practice in JavaScript because you could clash with another library and the user of your API would be none-the-wiser until they get an exception in production. Let's think about an example: what if you wanted to extend JavaScript's native Array method to have a &lt;code&gt;diff&lt;/code&gt; method that could show the difference between two arrays? You could write your new function to the &lt;code&gt;Array.prototype&lt;/code&gt;, but it could clash with another library that tried to do the same thing. What if that other library was just using &lt;code&gt;diff&lt;/code&gt; to find the difference between the first and last elements of an array? This is why it would be much better to just use ES2015/ES6 classes and simply extend the &lt;code&gt;Array&lt;/code&gt; global.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;Array.prototype.diff = function diff(comparisonArray) {
  const hash = new Set(comparisonArray);
  return this.filter(elem =&amp;gt; !hash.has(elem));
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class SuperArray extends Array {
  diff(comparisonArray) {
    const hash = new Set(comparisonArray);
    return this.filter(elem =&amp;gt; !hash.has(elem));
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Favor functional programming over imperative programming&lt;/h3&gt; 
&lt;p&gt;JavaScript isn't a functional language in the way that Haskell is, but it has a functional flavor to it. Functional languages can be cleaner and easier to test. Favor this style of programming when you can.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const programmerOutput = [
  {
    name: "Uncle Bobby",
    linesOfCode: 500
  },
  {
    name: "Suzie Q",
    linesOfCode: 1500
  },
  {
    name: "Jimmy Gosling",
    linesOfCode: 150
  },
  {
    name: "Gracie Hopper",
    linesOfCode: 1000
  }
];

let totalOutput = 0;

for (let i = 0; i &amp;lt; programmerOutput.length; i++) {
  totalOutput += programmerOutput[i].linesOfCode;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const programmerOutput = [
  {
    name: "Uncle Bobby",
    linesOfCode: 500
  },
  {
    name: "Suzie Q",
    linesOfCode: 1500
  },
  {
    name: "Jimmy Gosling",
    linesOfCode: 150
  },
  {
    name: "Gracie Hopper",
    linesOfCode: 1000
  }
];

const totalOutput = programmerOutput.reduce(
  (totalLines, output) =&amp;gt; totalLines + output.linesOfCode,
  0
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Encapsulate conditionals&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;if (fsm.state === "fetching" &amp;amp;&amp;amp; isEmpty(listNode)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function shouldShowSpinner(fsm, listNode) {
  return fsm.state === "fetching" &amp;amp;&amp;amp; isEmpty(listNode);
}

if (shouldShowSpinner(fsmInstance, listNodeInstance)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid negative conditionals&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function isDOMNodeNotPresent(node) {
  // ...
}

if (!isDOMNodeNotPresent(node)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function isDOMNodePresent(node) {
  // ...
}

if (isDOMNodePresent(node)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid conditionals&lt;/h3&gt; 
&lt;p&gt;This seems like an impossible task. Upon first hearing this, most people say, "how am I supposed to do anything without an &lt;code&gt;if&lt;/code&gt; statement?" The answer is that you can use polymorphism to achieve the same task in many cases. The second question is usually, "well that's great but why would I want to do that?" The answer is a previous clean code concept we learned: a function should only do one thing. When you have classes and functions that have &lt;code&gt;if&lt;/code&gt; statements, you are telling your user that your function does more than one thing. Remember, just do one thing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class Airplane {
  // ...
  getCruisingAltitude() {
    switch (this.type) {
      case "777":
        return this.getMaxAltitude() - this.getPassengerCount();
      case "Air Force One":
        return this.getMaxAltitude();
      case "Cessna":
        return this.getMaxAltitude() - this.getFuelExpenditure();
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class Airplane {
  // ...
}

class Boeing777 extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude() - this.getPassengerCount();
  }
}

class AirForceOne extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude();
  }
}

class Cessna extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude() - this.getFuelExpenditure();
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid type-checking (part 1)&lt;/h3&gt; 
&lt;p&gt;JavaScript is untyped, which means your functions can take any type of argument. Sometimes you are bitten by this freedom and it becomes tempting to do type-checking in your functions. There are many ways to avoid having to do this. The first thing to consider is consistent APIs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function travelToTexas(vehicle) {
  if (vehicle instanceof Bicycle) {
    vehicle.pedal(this.currentLocation, new Location("texas"));
  } else if (vehicle instanceof Car) {
    vehicle.drive(this.currentLocation, new Location("texas"));
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function travelToTexas(vehicle) {
  vehicle.move(this.currentLocation, new Location("texas"));
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid type-checking (part 2)&lt;/h3&gt; 
&lt;p&gt;If you are working with basic primitive values like strings and integers, and you can't use polymorphism but you still feel the need to type-check, you should consider using TypeScript. It is an excellent alternative to normal JavaScript, as it provides you with static typing on top of standard JavaScript syntax. The problem with manually type-checking normal JavaScript is that doing it well requires so much extra verbiage that the faux "type-safety" you get doesn't make up for the lost readability. Keep your JavaScript clean, write good tests, and have good code reviews. Otherwise, do all of that but with TypeScript (which, like I said, is a great alternative!).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function combine(val1, val2) {
  if (
    (typeof val1 === "number" &amp;amp;&amp;amp; typeof val2 === "number") ||
    (typeof val1 === "string" &amp;amp;&amp;amp; typeof val2 === "string")
  ) {
    return val1 + val2;
  }

  throw new Error("Must be of type String or Number");
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function combine(val1, val2) {
  return val1 + val2;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don't over-optimize&lt;/h3&gt; 
&lt;p&gt;Modern browsers do a lot of optimization under-the-hood at runtime. A lot of times, if you are optimizing then you are just wasting your time. &lt;a href="https://github.com/petkaantonov/bluebird/wiki/Optimization-killers"&gt;There are good resources&lt;/a&gt; for seeing where optimization is lacking. Target those in the meantime, until they are fixed if they can be.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// On old browsers, each iteration with uncached `list.length` would be costly
// because of `list.length` recomputation. In modern browsers, this is optimized.
for (let i = 0, len = list.length; i &amp;lt; len; i++) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;for (let i = 0; i &amp;lt; list.length; i++) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Remove dead code&lt;/h3&gt; 
&lt;p&gt;Dead code is just as bad as duplicate code. There's no reason to keep it in your codebase. If it's not being called, get rid of it! It will still be safe in your version history if you still need it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function oldRequestModule(url) {
  // ...
}

function newRequestModule(url) {
  // ...
}

const req = newRequestModule;
inventoryTracker("apples", req, "www.inventory-awesome.io");
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function newRequestModule(url) {
  // ...
}

const req = newRequestModule;
inventoryTracker("apples", req, "www.inventory-awesome.io");
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Objects and Data Structures&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use getters and setters&lt;/h3&gt; 
&lt;p&gt;Using getters and setters to access data on objects could be better than simply looking for a property on an object. "Why?" you might ask. Well, here's an unorganized list of reasons why:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;When you want to do more beyond getting an object property, you don't have to look up and change every accessor in your codebase.&lt;/li&gt; 
 &lt;li&gt;Makes adding validation simple when doing a &lt;code&gt;set&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Encapsulates the internal representation.&lt;/li&gt; 
 &lt;li&gt;Easy to add logging and error handling when getting and setting.&lt;/li&gt; 
 &lt;li&gt;You can lazy load your object's properties, let's say getting it from a server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function makeBankAccount() {
  // ...

  return {
    balance: 0
    // ...
  };
}

const account = makeBankAccount();
account.balance = 100;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function makeBankAccount() {
  // this one is private
  let balance = 0;

  // a "getter", made public via the returned object below
  function getBalance() {
    return balance;
  }

  // a "setter", made public via the returned object below
  function setBalance(amount) {
    // ... validate before updating the balance
    balance = amount;
  }

  return {
    // ...
    getBalance,
    setBalance
  };
}

const account = makeBankAccount();
account.setBalance(100);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Make objects have private members&lt;/h3&gt; 
&lt;p&gt;This can be accomplished through closures (for ES5 and below).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const Employee = function(name) {
  this.name = name;
};

Employee.prototype.getName = function getName() {
  return this.name;
};

const employee = new Employee("John Doe");
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
delete employee.name;
console.log(`Employee name: ${employee.getName()}`); // Employee name: undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function makeEmployee(name) {
  return {
    getName() {
      return name;
    }
  };
}

const employee = makeEmployee("John Doe");
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
delete employee.name;
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Classes&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Prefer ES2015/ES6 classes over ES5 plain functions&lt;/h3&gt; 
&lt;p&gt;It's very difficult to get readable class inheritance, construction, and method definitions for classical ES5 classes. If you need inheritance (and be aware that you might not), then prefer ES2015/ES6 classes. However, prefer small functions over classes until you find yourself needing larger and more complex objects.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const Animal = function(age) {
  if (!(this instanceof Animal)) {
    throw new Error("Instantiate Animal with `new`");
  }

  this.age = age;
};

Animal.prototype.move = function move() {};

const Mammal = function(age, furColor) {
  if (!(this instanceof Mammal)) {
    throw new Error("Instantiate Mammal with `new`");
  }

  Animal.call(this, age);
  this.furColor = furColor;
};

Mammal.prototype = Object.create(Animal.prototype);
Mammal.prototype.constructor = Mammal;
Mammal.prototype.liveBirth = function liveBirth() {};

const Human = function(age, furColor, languageSpoken) {
  if (!(this instanceof Human)) {
    throw new Error("Instantiate Human with `new`");
  }

  Mammal.call(this, age, furColor);
  this.languageSpoken = languageSpoken;
};

Human.prototype = Object.create(Mammal.prototype);
Human.prototype.constructor = Human;
Human.prototype.speak = function speak() {};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class Animal {
  constructor(age) {
    this.age = age;
  }

  move() {
    /* ... */
  }
}

class Mammal extends Animal {
  constructor(age, furColor) {
    super(age);
    this.furColor = furColor;
  }

  liveBirth() {
    /* ... */
  }
}

class Human extends Mammal {
  constructor(age, furColor, languageSpoken) {
    super(age, furColor);
    this.languageSpoken = languageSpoken;
  }

  speak() {
    /* ... */
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use method chaining&lt;/h3&gt; 
&lt;p&gt;This pattern is very useful in JavaScript and you see it in many libraries such as jQuery and Lodash. It allows your code to be expressive, and less verbose. For that reason, I say, use method chaining and take a look at how clean your code will be. In your class functions, simply return &lt;code&gt;this&lt;/code&gt; at the end of every function, and you can chain further class methods onto it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class Car {
  constructor(make, model, color) {
    this.make = make;
    this.model = model;
    this.color = color;
  }

  setMake(make) {
    this.make = make;
  }

  setModel(model) {
    this.model = model;
  }

  setColor(color) {
    this.color = color;
  }

  save() {
    console.log(this.make, this.model, this.color);
  }
}

const car = new Car("Ford", "F-150", "red");
car.setColor("pink");
car.save();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class Car {
  constructor(make, model, color) {
    this.make = make;
    this.model = model;
    this.color = color;
  }

  setMake(make) {
    this.make = make;
    // NOTE: Returning this for chaining
    return this;
  }

  setModel(model) {
    this.model = model;
    // NOTE: Returning this for chaining
    return this;
  }

  setColor(color) {
    this.color = color;
    // NOTE: Returning this for chaining
    return this;
  }

  save() {
    console.log(this.make, this.model, this.color);
    // NOTE: Returning this for chaining
    return this;
  }
}

const car = new Car("Ford", "F-150", "red").setColor("pink").save();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Prefer composition over inheritance&lt;/h3&gt; 
&lt;p&gt;As stated famously in &lt;a href="https://en.wikipedia.org/wiki/Design_Patterns"&gt;&lt;em&gt;Design Patterns&lt;/em&gt;&lt;/a&gt; by the Gang of Four, you should prefer composition over inheritance where you can. There are lots of good reasons to use inheritance and lots of good reasons to use composition. The main point for this maxim is that if your mind instinctively goes for inheritance, try to think if composition could model your problem better. In some cases it can.&lt;/p&gt; 
&lt;p&gt;You might be wondering then, "when should I use inheritance?" It depends on your problem at hand, but this is a decent list of when inheritance makes more sense than composition:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Your inheritance represents an "is-a" relationship and not a "has-a" relationship (Human-&amp;gt;Animal vs. User-&amp;gt;UserDetails).&lt;/li&gt; 
 &lt;li&gt;You can reuse code from the base classes (Humans can move like all animals).&lt;/li&gt; 
 &lt;li&gt;You want to make global changes to derived classes by changing a base class. (Change the caloric expenditure of all animals when they move).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class Employee {
  constructor(name, email) {
    this.name = name;
    this.email = email;
  }

  // ...
}

// Bad because Employees "have" tax data. EmployeeTaxData is not a type of Employee
class EmployeeTaxData extends Employee {
  constructor(ssn, salary) {
    super();
    this.ssn = ssn;
    this.salary = salary;
  }

  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class EmployeeTaxData {
  constructor(ssn, salary) {
    this.ssn = ssn;
    this.salary = salary;
  }

  // ...
}

class Employee {
  constructor(name, email) {
    this.name = name;
    this.email = email;
  }

  setTaxData(ssn, salary) {
    this.taxData = new EmployeeTaxData(ssn, salary);
  }
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;SOLID&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Single Responsibility Principle (SRP)&lt;/h3&gt; 
&lt;p&gt;As stated in Clean Code, "There should never be more than one reason for a class to change". It's tempting to jam-pack a class with a lot of functionality, like when you can only take one suitcase on your flight. The issue with this is that your class won't be conceptually cohesive and it will give it many reasons to change. Minimizing the amount of times you need to change a class is important. It's important because if too much functionality is in one class and you modify a piece of it, it can be difficult to understand how that will affect other dependent modules in your codebase.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class UserSettings {
  constructor(user) {
    this.user = user;
  }

  changeSettings(settings) {
    if (this.verifyCredentials()) {
      // ...
    }
  }

  verifyCredentials() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class UserAuth {
  constructor(user) {
    this.user = user;
  }

  verifyCredentials() {
    // ...
  }
}

class UserSettings {
  constructor(user) {
    this.user = user;
    this.auth = new UserAuth(user);
  }

  changeSettings(settings) {
    if (this.auth.verifyCredentials()) {
      // ...
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Open/Closed Principle (OCP)&lt;/h3&gt; 
&lt;p&gt;As stated by Bertrand Meyer, "software entities (classes, modules, functions, etc.) should be open for extension, but closed for modification." What does that mean though? This principle basically states that you should allow users to add new functionalities without changing existing code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class AjaxAdapter extends Adapter {
  constructor() {
    super();
    this.name = "ajaxAdapter";
  }
}

class NodeAdapter extends Adapter {
  constructor() {
    super();
    this.name = "nodeAdapter";
  }
}

class HttpRequester {
  constructor(adapter) {
    this.adapter = adapter;
  }

  fetch(url) {
    if (this.adapter.name === "ajaxAdapter") {
      return makeAjaxCall(url).then(response =&amp;gt; {
        // transform response and return
      });
    } else if (this.adapter.name === "nodeAdapter") {
      return makeHttpCall(url).then(response =&amp;gt; {
        // transform response and return
      });
    }
  }
}

function makeAjaxCall(url) {
  // request and return promise
}

function makeHttpCall(url) {
  // request and return promise
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class AjaxAdapter extends Adapter {
  constructor() {
    super();
    this.name = "ajaxAdapter";
  }

  request(url) {
    // request and return promise
  }
}

class NodeAdapter extends Adapter {
  constructor() {
    super();
    this.name = "nodeAdapter";
  }

  request(url) {
    // request and return promise
  }
}

class HttpRequester {
  constructor(adapter) {
    this.adapter = adapter;
  }

  fetch(url) {
    return this.adapter.request(url).then(response =&amp;gt; {
      // transform response and return
    });
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Liskov Substitution Principle (LSP)&lt;/h3&gt; 
&lt;p&gt;This is a scary term for a very simple concept. It's formally defined as "If S is a subtype of T, then objects of type T may be replaced with objects of type S (i.e., objects of type S may substitute objects of type T) without altering any of the desirable properties of that program (correctness, task performed, etc.)." That's an even scarier definition.&lt;/p&gt; 
&lt;p&gt;The best explanation for this is if you have a parent class and a child class, then the base class and child class can be used interchangeably without getting incorrect results. This might still be confusing, so let's take a look at the classic Square-Rectangle example. Mathematically, a square is a rectangle, but if you model it using the "is-a" relationship via inheritance, you quickly get into trouble.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class Rectangle {
  constructor() {
    this.width = 0;
    this.height = 0;
  }

  setColor(color) {
    // ...
  }

  render(area) {
    // ...
  }

  setWidth(width) {
    this.width = width;
  }

  setHeight(height) {
    this.height = height;
  }

  getArea() {
    return this.width * this.height;
  }
}

class Square extends Rectangle {
  setWidth(width) {
    this.width = width;
    this.height = width;
  }

  setHeight(height) {
    this.width = height;
    this.height = height;
  }
}

function renderLargeRectangles(rectangles) {
  rectangles.forEach(rectangle =&amp;gt; {
    rectangle.setWidth(4);
    rectangle.setHeight(5);
    const area = rectangle.getArea(); // BAD: Returns 25 for Square. Should be 20.
    rectangle.render(area);
  });
}

const rectangles = [new Rectangle(), new Rectangle(), new Square()];
renderLargeRectangles(rectangles);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class Shape {
  setColor(color) {
    // ...
  }

  render(area) {
    // ...
  }
}

class Rectangle extends Shape {
  constructor(width, height) {
    super();
    this.width = width;
    this.height = height;
  }

  getArea() {
    return this.width * this.height;
  }
}

class Square extends Shape {
  constructor(length) {
    super();
    this.length = length;
  }

  getArea() {
    return this.length * this.length;
  }
}

function renderLargeShapes(shapes) {
  shapes.forEach(shape =&amp;gt; {
    const area = shape.getArea();
    shape.render(area);
  });
}

const shapes = [new Rectangle(4, 5), new Rectangle(4, 5), new Square(5)];
renderLargeShapes(shapes);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Interface Segregation Principle (ISP)&lt;/h3&gt; 
&lt;p&gt;JavaScript doesn't have interfaces so this principle doesn't apply as strictly as others. However, it's important and relevant even with JavaScript's lack of type system.&lt;/p&gt; 
&lt;p&gt;ISP states that "Clients should not be forced to depend upon interfaces that they do not use." Interfaces are implicit contracts in JavaScript because of duck typing.&lt;/p&gt; 
&lt;p&gt;A good example to look at that demonstrates this principle in JavaScript is for classes that require large settings objects. Not requiring clients to setup huge amounts of options is beneficial, because most of the time they won't need all of the settings. Making them optional helps prevent having a "fat interface".&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class DOMTraverser {
  constructor(settings) {
    this.settings = settings;
    this.setup();
  }

  setup() {
    this.rootNode = this.settings.rootNode;
    this.settings.animationModule.setup();
  }

  traverse() {
    // ...
  }
}

const $ = new DOMTraverser({
  rootNode: document.getElementsByTagName("body"),
  animationModule() {} // Most of the time, we won't need to animate when traversing.
  // ...
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class DOMTraverser {
  constructor(settings) {
    this.settings = settings;
    this.options = settings.options;
    this.setup();
  }

  setup() {
    this.rootNode = this.settings.rootNode;
    this.setupOptions();
  }

  setupOptions() {
    if (this.options.animationModule) {
      // ...
    }
  }

  traverse() {
    // ...
  }
}

const $ = new DOMTraverser({
  rootNode: document.getElementsByTagName("body"),
  options: {
    animationModule() {}
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Dependency Inversion Principle (DIP)&lt;/h3&gt; 
&lt;p&gt;This principle states two essential things:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;High-level modules should not depend on low-level modules. Both should depend on abstractions.&lt;/li&gt; 
 &lt;li&gt;Abstractions should not depend upon details. Details should depend on abstractions.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This can be hard to understand at first, but if you've worked with AngularJS, you've seen an implementation of this principle in the form of Dependency Injection (DI). While they are not identical concepts, DIP keeps high-level modules from knowing the details of its low-level modules and setting them up. It can accomplish this through DI. A huge benefit of this is that it reduces the coupling between modules. Coupling is a very bad development pattern because it makes your code hard to refactor.&lt;/p&gt; 
&lt;p&gt;As stated previously, JavaScript doesn't have interfaces so the abstractions that are depended upon are implicit contracts. That is to say, the methods and properties that an object/class exposes to another object/class. In the example below, the implicit contract is that any Request module for an &lt;code&gt;InventoryTracker&lt;/code&gt; will have a &lt;code&gt;requestItems&lt;/code&gt; method.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class InventoryRequester {
  constructor() {
    this.REQ_METHODS = ["HTTP"];
  }

  requestItem(item) {
    // ...
  }
}

class InventoryTracker {
  constructor(items) {
    this.items = items;

    // BAD: We have created a dependency on a specific request implementation.
    // We should just have requestItems depend on a request method: `request`
    this.requester = new InventoryRequester();
  }

  requestItems() {
    this.items.forEach(item =&amp;gt; {
      this.requester.requestItem(item);
    });
  }
}

const inventoryTracker = new InventoryTracker(["apples", "bananas"]);
inventoryTracker.requestItems();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class InventoryTracker {
  constructor(items, requester) {
    this.items = items;
    this.requester = requester;
  }

  requestItems() {
    this.items.forEach(item =&amp;gt; {
      this.requester.requestItem(item);
    });
  }
}

class InventoryRequesterV1 {
  constructor() {
    this.REQ_METHODS = ["HTTP"];
  }

  requestItem(item) {
    // ...
  }
}

class InventoryRequesterV2 {
  constructor() {
    this.REQ_METHODS = ["WS"];
  }

  requestItem(item) {
    // ...
  }
}

// By constructing our dependencies externally and injecting them, we can easily
// substitute our request module for a fancy new one that uses WebSockets.
const inventoryTracker = new InventoryTracker(
  ["apples", "bananas"],
  new InventoryRequesterV2()
);
inventoryTracker.requestItems();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Testing&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Testing is more important than shipping. If you have no tests or an inadequate amount, then every time you ship code you won't be sure that you didn't break anything. Deciding on what constitutes an adequate amount is up to your team, but having 100% coverage (all statements and branches) is how you achieve very high confidence and developer peace of mind. This means that in addition to having a great testing framework, you also need to use a &lt;a href="https://gotwarlost.github.io/istanbul/"&gt;good coverage tool&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There's no excuse to not write tests. There are &lt;a href="https://jstherightway.org/#testing-tools"&gt;plenty of good JS test frameworks&lt;/a&gt;, so find one that your team prefers. When you find one that works for your team, then aim to always write tests for every new feature/module you introduce. If your preferred method is Test Driven Development (TDD), that is great, but the main point is to just make sure you are reaching your coverage goals before launching any feature, or refactoring an existing one.&lt;/p&gt; 
&lt;h3&gt;Single concept per test&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import assert from "assert";

describe("MomentJS", () =&amp;gt; {
  it("handles date boundaries", () =&amp;gt; {
    let date;

    date = new MomentJS("1/1/2015");
    date.addDays(30);
    assert.equal("1/31/2015", date);

    date = new MomentJS("2/1/2016");
    date.addDays(28);
    assert.equal("02/29/2016", date);

    date = new MomentJS("2/1/2015");
    date.addDays(28);
    assert.equal("03/01/2015", date);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import assert from "assert";

describe("MomentJS", () =&amp;gt; {
  it("handles 30-day months", () =&amp;gt; {
    const date = new MomentJS("1/1/2015");
    date.addDays(30);
    assert.equal("1/31/2015", date);
  });

  it("handles leap year", () =&amp;gt; {
    const date = new MomentJS("2/1/2016");
    date.addDays(28);
    assert.equal("02/29/2016", date);
  });

  it("handles non-leap year", () =&amp;gt; {
    const date = new MomentJS("2/1/2015");
    date.addDays(28);
    assert.equal("03/01/2015", date);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Concurrency&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use Promises, not callbacks&lt;/h3&gt; 
&lt;p&gt;Callbacks aren't clean, and they cause excessive amounts of nesting. With ES2015/ES6, Promises are a built-in global type. Use them!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import { get } from "request";
import { writeFile } from "fs";

get(
  "https://en.wikipedia.org/wiki/Robert_Cecil_Martin",
  (requestErr, response, body) =&amp;gt; {
    if (requestErr) {
      console.error(requestErr);
    } else {
      writeFile("article.html", body, writeErr =&amp;gt; {
        if (writeErr) {
          console.error(writeErr);
        } else {
          console.log("File written");
        }
      });
    }
  }
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import { get } from "request-promise";
import { writeFile } from "fs-extra";

get("https://en.wikipedia.org/wiki/Robert_Cecil_Martin")
  .then(body =&amp;gt; {
    return writeFile("article.html", body);
  })
  .then(() =&amp;gt; {
    console.log("File written");
  })
  .catch(err =&amp;gt; {
    console.error(err);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Async/Await are even cleaner than Promises&lt;/h3&gt; 
&lt;p&gt;Promises are a very clean alternative to callbacks, but ES2017/ES8 brings async and await which offer an even cleaner solution. All you need is a function that is prefixed in an &lt;code&gt;async&lt;/code&gt; keyword, and then you can write your logic imperatively without a &lt;code&gt;then&lt;/code&gt; chain of functions. Use this if you can take advantage of ES2017/ES8 features today!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import { get } from "request-promise";
import { writeFile } from "fs-extra";

get("https://en.wikipedia.org/wiki/Robert_Cecil_Martin")
  .then(body =&amp;gt; {
    return writeFile("article.html", body);
  })
  .then(() =&amp;gt; {
    console.log("File written");
  })
  .catch(err =&amp;gt; {
    console.error(err);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import { get } from "request-promise";
import { writeFile } from "fs-extra";

async function getCleanCodeArticle() {
  try {
    const body = await get(
      "https://en.wikipedia.org/wiki/Robert_Cecil_Martin"
    );
    await writeFile("article.html", body);
    console.log("File written");
  } catch (err) {
    console.error(err);
  }
}

getCleanCodeArticle()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Error Handling&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Thrown errors are a good thing! They mean the runtime has successfully identified when something in your program has gone wrong and it's letting you know by stopping function execution on the current stack, killing the process (in Node), and notifying you in the console with a stack trace.&lt;/p&gt; 
&lt;h3&gt;Don't ignore caught errors&lt;/h3&gt; 
&lt;p&gt;Doing nothing with a caught error doesn't give you the ability to ever fix or react to said error. Logging the error to the console (&lt;code&gt;console.log&lt;/code&gt;) isn't much better as often times it can get lost in a sea of things printed to the console. If you wrap any bit of code in a &lt;code&gt;try/catch&lt;/code&gt; it means you think an error may occur there and therefore you should have a plan, or create a code path, for when it occurs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;try {
  functionThatMightThrow();
} catch (error) {
  console.log(error);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;try {
  functionThatMightThrow();
} catch (error) {
  // One option (more noisy than console.log):
  console.error(error);
  // Another option:
  notifyUserOfError(error);
  // Another option:
  reportErrorToService(error);
  // OR do all three!
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Don't ignore rejected promises&lt;/h3&gt; 
&lt;p&gt;For the same reason you shouldn't ignore caught errors from &lt;code&gt;try/catch&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;getdata()
  .then(data =&amp;gt; {
    functionThatMightThrow(data);
  })
  .catch(error =&amp;gt; {
    console.log(error);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;getdata()
  .then(data =&amp;gt; {
    functionThatMightThrow(data);
  })
  .catch(error =&amp;gt; {
    // One option (more noisy than console.log):
    console.error(error);
    // Another option:
    notifyUserOfError(error);
    // Another option:
    reportErrorToService(error);
    // OR do all three!
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Formatting&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Formatting is subjective. Like many rules herein, there is no hard and fast rule that you must follow. The main point is DO NOT ARGUE over formatting. There are &lt;a href="https://standardjs.com/rules.html"&gt;tons of tools&lt;/a&gt; to automate this. Use one! It's a waste of time and money for engineers to argue over formatting.&lt;/p&gt; 
&lt;p&gt;For things that don't fall under the purview of automatic formatting (indentation, tabs vs. spaces, double vs. single quotes, etc.) look here for some guidance.&lt;/p&gt; 
&lt;h3&gt;Use consistent capitalization&lt;/h3&gt; 
&lt;p&gt;JavaScript is untyped, so capitalization tells you a lot about your variables, functions, etc. These rules are subjective, so your team can choose whatever they want. The point is, no matter what you all choose, just be consistent.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const DAYS_IN_WEEK = 7;
const daysInMonth = 30;

const songs = ["Back In Black", "Stairway to Heaven", "Hey Jude"];
const Artists = ["ACDC", "Led Zeppelin", "The Beatles"];

function eraseDatabase() {}
function restore_database() {}

class animal {}
class Alpaca {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const DAYS_IN_WEEK = 7;
const DAYS_IN_MONTH = 30;

const SONGS = ["Back In Black", "Stairway to Heaven", "Hey Jude"];
const ARTISTS = ["ACDC", "Led Zeppelin", "The Beatles"];

function eraseDatabase() {}
function restoreDatabase() {}

class Animal {}
class Alpaca {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Function callers and callees should be close&lt;/h3&gt; 
&lt;p&gt;If a function calls another, keep those functions vertically close in the source file. Ideally, keep the caller right above the callee. We tend to read code from top-to-bottom, like a newspaper. Because of this, make your code read that way.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class PerformanceReview {
  constructor(employee) {
    this.employee = employee;
  }

  lookupPeers() {
    return db.lookup(this.employee, "peers");
  }

  lookupManager() {
    return db.lookup(this.employee, "manager");
  }

  getPeerReviews() {
    const peers = this.lookupPeers();
    // ...
  }

  perfReview() {
    this.getPeerReviews();
    this.getManagerReview();
    this.getSelfReview();
  }

  getManagerReview() {
    const manager = this.lookupManager();
  }

  getSelfReview() {
    // ...
  }
}

const review = new PerformanceReview(employee);
review.perfReview();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class PerformanceReview {
  constructor(employee) {
    this.employee = employee;
  }

  perfReview() {
    this.getPeerReviews();
    this.getManagerReview();
    this.getSelfReview();
  }

  getPeerReviews() {
    const peers = this.lookupPeers();
    // ...
  }

  lookupPeers() {
    return db.lookup(this.employee, "peers");
  }

  getManagerReview() {
    const manager = this.lookupManager();
  }

  lookupManager() {
    return db.lookup(this.employee, "manager");
  }

  getSelfReview() {
    // ...
  }
}

const review = new PerformanceReview(employee);
review.perfReview();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Comments&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Only comment things that have business logic complexity.&lt;/h3&gt; 
&lt;p&gt;Comments are an apology, not a requirement. Good code &lt;em&gt;mostly&lt;/em&gt; documents itself.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function hashIt(data) {
  // The hash
  let hash = 0;

  // Length of string
  const length = data.length;

  // Loop through every character in data
  for (let i = 0; i &amp;lt; length; i++) {
    // Get character code.
    const char = data.charCodeAt(i);
    // Make the hash
    hash = (hash &amp;lt;&amp;lt; 5) - hash + char;
    // Convert to 32-bit integer
    hash &amp;amp;= hash;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function hashIt(data) {
  let hash = 0;
  const length = data.length;

  for (let i = 0; i &amp;lt; length; i++) {
    const char = data.charCodeAt(i);
    hash = (hash &amp;lt;&amp;lt; 5) - hash + char;

    // Convert to 32-bit integer
    hash &amp;amp;= hash;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don't leave commented out code in your codebase&lt;/h3&gt; 
&lt;p&gt;Version control exists for a reason. Leave old code in your history.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;doStuff();
// doOtherStuff();
// doSomeMoreStuff();
// doSoMuchStuff();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;doStuff();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don't have journal comments&lt;/h3&gt; 
&lt;p&gt;Remember, use version control! There's no need for dead code, commented code, and especially journal comments. Use &lt;code&gt;git log&lt;/code&gt; to get history!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;/**
 * 2016-12-20: Removed monads, didn't understand them (RM)
 * 2016-10-01: Improved using special monads (JP)
 * 2016-02-03: Removed type-checking (LI)
 * 2015-03-14: Added combine with type-checking (JR)
 */
function combine(a, b) {
  return a + b;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function combine(a, b) {
  return a + b;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid positional markers&lt;/h3&gt; 
&lt;p&gt;They usually just add noise. Let the functions and variable names along with the proper indentation and formatting give the visual structure to your code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;////////////////////////////////////////////////////////////////////////////////
// Scope Model Instantiation
////////////////////////////////////////////////////////////////////////////////
$scope.model = {
  menu: "foo",
  nav: "bar"
};

////////////////////////////////////////////////////////////////////////////////
// Action setup
////////////////////////////////////////////////////////////////////////////////
const actions = function() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;$scope.model = {
  menu: "foo",
  nav: "bar"
};

const actions = function() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;This is also available in other languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Armenia.png" alt="am" /&gt; &lt;strong&gt;Armenian&lt;/strong&gt;: &lt;a href="https://github.com/hanumanum/clean-code-javascript"&gt;hanumanum/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bangladesh.png" alt="bd" /&gt; &lt;strong&gt;Bangla(বাংলা)&lt;/strong&gt;: &lt;a href="https://github.com/InsomniacSabbir/clean-code-javascript/"&gt;InsomniacSabbir/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png" alt="br" /&gt; &lt;strong&gt;Brazilian Portuguese&lt;/strong&gt;: &lt;a href="https://github.com/fesnt/clean-code-javascript"&gt;fesnt/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png" alt="cn" /&gt; &lt;strong&gt;Simplified Chinese&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/alivebao/clean-code-js"&gt;alivebao/clean-code-js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/beginor/clean-code-javascript"&gt;beginor/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png" alt="tw" /&gt; &lt;strong&gt;Traditional Chinese&lt;/strong&gt;: &lt;a href="https://github.com/AllJointTW/clean-code-javascript"&gt;AllJointTW/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png" alt="fr" /&gt; &lt;strong&gt;French&lt;/strong&gt;: &lt;a href="https://github.com/eugene-augier/clean-code-javascript-fr"&gt;eugene-augier/clean-code-javascript-fr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png" alt="de" /&gt; &lt;strong&gt;German&lt;/strong&gt;: &lt;a href="https://github.com/marcbruederlin/clean-code-javascript"&gt;marcbruederlin/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Indonesia.png" alt="id" /&gt; &lt;strong&gt;Indonesia&lt;/strong&gt;: &lt;a href="https://github.com/andirkh/clean-code-javascript/"&gt;andirkh/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png" alt="it" /&gt; &lt;strong&gt;Italian&lt;/strong&gt;: &lt;a href="https://github.com/frappacchio/clean-code-javascript/"&gt;frappacchio/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png" alt="ja" /&gt; &lt;strong&gt;Japanese&lt;/strong&gt;: &lt;a href="https://github.com/mitsuruog/clean-code-javascript/"&gt;mitsuruog/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png" alt="kr" /&gt; &lt;strong&gt;Korean&lt;/strong&gt;: &lt;a href="https://github.com/qkraudghgh/clean-code-javascript-ko"&gt;qkraudghgh/clean-code-javascript-ko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Poland.png" alt="pl" /&gt; &lt;strong&gt;Polish&lt;/strong&gt;: &lt;a href="https://github.com/greg-dev/clean-code-javascript-pl"&gt;greg-dev/clean-code-javascript-pl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png" alt="ru" /&gt; &lt;strong&gt;Russian&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/BoryaMogila/clean-code-javascript-ru/"&gt;BoryaMogila/clean-code-javascript-ru/&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/maksugr/clean-code-javascript"&gt;maksugr/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png" alt="es" /&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href="https://github.com/tureey/clean-code-javascript"&gt;tureey/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Uruguay.png" alt="es" /&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href="https://github.com/andersontr15/clean-code-javascript-es"&gt;andersontr15/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Serbia.png" alt="rs" /&gt; &lt;strong&gt;Serbian&lt;/strong&gt;: &lt;a href="https://github.com/doskovicmilos/clean-code-javascript"&gt;doskovicmilos/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png" alt="tr" /&gt; &lt;strong&gt;Turkish&lt;/strong&gt;: &lt;a href="https://github.com/bsonmez/clean-code-javascript/tree/turkish-translation"&gt;bsonmez/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png" alt="ua" /&gt; &lt;strong&gt;Ukrainian&lt;/strong&gt;: &lt;a href="https://github.com/mindfr1k/clean-code-javascript-ua"&gt;mindfr1k/clean-code-javascript-ua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png" alt="vi" /&gt; &lt;strong&gt;Vietnamese&lt;/strong&gt;: &lt;a href="https://github.com/hienvd/clean-code-javascript/"&gt;hienvd/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Iran.png" alt="ir" /&gt; &lt;strong&gt;Persian&lt;/strong&gt;: &lt;a href="https://github.com/hamettio/clean-code-javascript"&gt;hamettio/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jellyfin/jellyfin-web</title>
      <link>https://github.com/jellyfin/jellyfin-web</link>
      <description>&lt;p&gt;The Free Software Media System - Official Web Client&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;Jellyfin Web&lt;/h1&gt; 
&lt;h3 align="center"&gt;Part of the &lt;a href="https://jellyfin.org"&gt;Jellyfin Project&lt;/a&gt;&lt;/h3&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;img alt="Logo Banner" src="https://raw.githubusercontent.com/jellyfin/jellyfin-ux/master/branding/SVG/banner-logo-solid.svg?sanitize=true" /&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href="https://github.com/jellyfin/jellyfin-web"&gt; &lt;img alt="GPL 2.0 License" src="https://img.shields.io/github/license/jellyfin/jellyfin-web.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://github.com/jellyfin/jellyfin-web/releases"&gt; &lt;img alt="Current Release" src="https://img.shields.io/github/release/jellyfin/jellyfin-web.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://translate.jellyfin.org/projects/jellyfin/jellyfin-web/?utm_source=widget"&gt; &lt;img src="https://translate.jellyfin.org/widgets/jellyfin/-/jellyfin-web/svg-badge.svg?sanitize=true" alt="Translation Status" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://opencollective.com/jellyfin"&gt; &lt;img alt="Donate" src="https://img.shields.io/opencollective/all/jellyfin.svg?label=backers" /&gt; &lt;/a&gt; &lt;a href="https://features.jellyfin.org"&gt; &lt;img alt="Feature Requests" src="https://img.shields.io/badge/fider-vote%20on%20features-success.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://matrix.to/#/+jellyfin:matrix.org"&gt; &lt;img alt="Chat on Matrix" src="https://img.shields.io/matrix/jellyfin:matrix.org.svg?logo=matrix" /&gt; &lt;/a&gt; &lt;a href="https://www.reddit.com/r/jellyfin"&gt; &lt;img alt="Join our Subreddit" src="https://img.shields.io/badge/reddit-r%2Fjellyfin-%23FF5700.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Jellyfin Web is the frontend used for most of the clients available for end users, such as desktop browsers, Android, and iOS. We welcome all contributions and pull requests! If you have a larger feature in mind please open an issue so we can discuss the implementation before you start. Translations can be improved very easily from our &lt;a href="https://translate.jellyfin.org/projects/jellyfin/jellyfin-web"&gt;Weblate&lt;/a&gt; instance. Look through the following graphic to see if your native language could use some work!&lt;/p&gt; 
&lt;a href="https://translate.jellyfin.org/engage/jellyfin/?utm_source=widget"&gt; &lt;img src="https://translate.jellyfin.org/widgets/jellyfin/-/jellyfin-web/multi-auto.svg?sanitize=true" alt="Detailed Translation Status" /&gt; &lt;/a&gt; 
&lt;h2&gt;Build Process&lt;/h2&gt; 
&lt;h3&gt;Dependencies&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/en/download"&gt;Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;npm (included in Node.js)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Getting Started&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Clone or download this repository.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/jellyfin/jellyfin-web.git
cd jellyfin-web
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install build dependencies in the project directory.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the web client with webpack for local development.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;npm start
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Build the client with sourcemaps available.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;npm run build:development
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Directory Structure&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] We are in the process of refactoring to a &lt;a href="https://forum.jellyfin.org/t-proposed-update-to-the-structure-of-jellyfin-web"&gt;new structure&lt;/a&gt; based on &lt;a href="https://github.com/alan2207/bulletproof-react/raw/master/docs/project-structure.md"&gt;Bulletproof React&lt;/a&gt; architecture guidelines. Most new code should be organized under the appropriate app directory unless it is common/shared.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;.
└── src
    ├── apps
    │&amp;nbsp;&amp;nbsp; ├── dashboard           # Admin dashboard app
    │&amp;nbsp;&amp;nbsp; ├── experimental        # New experimental app
    │&amp;nbsp;&amp;nbsp; ├── stable              # Classic (stable) app
    │&amp;nbsp;&amp;nbsp; └── wizard              # Startup wizard app
    ├── assets                  # Static assets
    ├── components              # Higher order visual components and React components
    ├── constants               # Common constant values
    ├── controllers             # Legacy page views and controllers 🧹 ❌
    ├── elements                # Basic webcomponents and React equivalents 🧹
    ├── hooks                   # Custom React hooks
    ├── lib                     # Reusable libraries
    │&amp;nbsp;&amp;nbsp; ├── globalize           # Custom localization library
    │&amp;nbsp;&amp;nbsp; ├── jellyfin-apiclient  # Supporting code for the deprecated apiclient package
    │&amp;nbsp;&amp;nbsp; ├── legacy              # Polyfills for legacy browsers
    │&amp;nbsp;&amp;nbsp; ├── navdrawer           # Navigation drawer library for classic layout
    │&amp;nbsp;&amp;nbsp; └── scroller            # Content scrolling library
    ├── plugins                 # Client plugins (features dynamically loaded at runtime)
    ├── scripts                 # Random assortment of visual components and utilities 🐉 ❌
    ├── strings                 # Translation files (only commit changes to en-us.json)
    ├── styles                  # Common app Sass stylesheets
    ├── themes                  # Sass and MUI themes
    ├── types                   # Common TypeScript interfaces/types
    └── utils                   # Utility functions
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;❌ — Deprecated, do &lt;strong&gt;not&lt;/strong&gt; create new files here&lt;/li&gt; 
 &lt;li&gt;🧹 — Needs cleanup&lt;/li&gt; 
 &lt;li&gt;🐉 — Serious mess (Here be dragons)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>WordPress/gutenberg</title>
      <link>https://github.com/WordPress/gutenberg</link>
      <description>&lt;p&gt;The Block Editor project for WordPress and beyond. Plugin is available from the official repository.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gutenberg&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22End-to-End+Tests%22+branch%3Atrunk"&gt;&lt;img src="https://github.com/WordPress/gutenberg/workflows/End-to-End%20Tests/badge.svg?sanitize=true" alt="End-to-End Tests" /&gt;&lt;/a&gt; &lt;a href="https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Static+Analysis+%28Linting%2C+License%2C+Type+checks...%29%22+branch%3Atrunk"&gt;&lt;img src="https://github.com/WordPress/gutenberg/workflows/Static%20Analysis%20(Linting,%20License,%20Type%20checks...)/badge.svg?sanitize=true" alt="Static Analysis (Linting, License, Type checks...)" /&gt;&lt;/a&gt; &lt;a href="https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Unit+Tests%22+branch%3Atrunk"&gt;&lt;img src="https://github.com/WordPress/gutenberg/workflows/Unit%20Tests/badge.svg?sanitize=true" alt="Unit Tests" /&gt;&lt;/a&gt; &lt;a href="https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Create+Block%22+branch%3Atrunk"&gt;&lt;img src="https://github.com/WordPress/gutenberg/workflows/Create%20Block/badge.svg?sanitize=true" alt="Create Block" /&gt;&lt;/a&gt; &lt;a href="https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22React+Native+E2E+Tests+%28iOS%29%22+branch%3Atrunk"&gt;&lt;img src="https://github.com/WordPress/gutenberg/workflows/React%20Native%20E2E%20Tests%20(iOS)/badge.svg?sanitize=true" alt="React Native E2E Tests (iOS)" /&gt;&lt;/a&gt; &lt;a href="https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22React+Native+E2E+Tests+%28Android%29%22+branch%3Atrunk"&gt;&lt;img src="https://github.com/WordPress/gutenberg/workflows/React%20Native%20E2E%20Tests%20(Android)/badge.svg?sanitize=true" alt="React Native E2E Tests (Android)" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://wordpress.github.io/gutenberg/" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/storybooks/brand/master/badge/badge-storybook.svg?sanitize=true" alt="Storybook Badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://lerna.js.org"&gt;&lt;img src="https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg?sanitize=true" alt="lerna" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/1204802/100067796-fc3e8700-2e36-11eb-993b-6b80b4310b87.png" alt="Screenshot of the Gutenberg Editor, editing a post in WordPress" /&gt;&lt;/p&gt; 
&lt;p&gt;Welcome to the development hub for the WordPress Gutenberg project!&lt;/p&gt; 
&lt;p&gt;"Gutenberg" is a codename for a whole new paradigm in WordPress site building and publishing, that aims to revolutionize the entire publishing experience as much as Gutenberg did the printed word. Right now, the project is in the second phase of a four-phase process that will touch every piece of WordPress -- Editing, Customization, &lt;strong&gt;Collaboration&lt;/strong&gt; (which includes &lt;a href="https://make.wordpress.org/core/2023/07/03/real-time-collaboration/"&gt;Real-time collaboration&lt;/a&gt;, &lt;a href="https://make.wordpress.org/core/2023/07/04/workflows/"&gt;Asynchronous collaboration&lt;/a&gt;, &lt;a href="https://make.wordpress.org/core/2023/07/04/workflows/"&gt;Publishing flows&lt;/a&gt;, &lt;a href="https://make.wordpress.org/core/2023/07/05/revisions/"&gt;Post revisions interface&lt;/a&gt;, &lt;a href="https://make.wordpress.org/core/2023/07/12/admin-design/"&gt;Admin design&lt;/a&gt;, &lt;a href="https://make.wordpress.org/core/2023/07/10/block-library/"&gt;Library&lt;/a&gt;), and Multilingual -- and is focused on a new editing experience, the block editor.&lt;/p&gt; 
&lt;p&gt;The block editor introduces a modular approach to pages and posts: each piece of content in the editor, from a paragraph to an image gallery to a headline, is its own block. And just like physical blocks, WordPress blocks can be added, arranged, and rearranged, allowing WordPress users to create media-rich pages in a visually intuitive way -- and without work-arounds like shortcodes or custom HTML.&lt;/p&gt; 
&lt;p&gt;The block editor first became available in December 2018, and we're still hard at work refining the experience, creating more and better blocks, and laying the groundwork for the next three phases of work. The Gutenberg plugin gives you the latest version of the block editor, so you can join us in testing bleeding-edge features, start playing with blocks, and maybe get inspired to build your own.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href="https://make.wordpress.org/core/handbook/references/keeping-up-with-gutenberg-index/"&gt;Keeping up with Gutenberg Index&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Get hands-on: check out the &lt;a href="https://wordpress.org/gutenberg/"&gt;block editor live demo&lt;/a&gt; to play with a test instance of the editor.&lt;/p&gt; 
&lt;h3&gt;Using Gutenberg&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Download:&lt;/strong&gt; To use the latest release of the Gutenberg plugin on your WordPress site: install from the plugins page in wp-admin, or &lt;a href="https://wordpress.org/plugins/gutenberg/"&gt;download from the WordPress.org plugins repository&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;User Documentation:&lt;/strong&gt; See the &lt;a href="https://wordpress.org/documentation/article/wordpress-block-editor/"&gt;WordPress Editor documentation&lt;/a&gt; for detailed docs on using the editor as an author creating posts and pages.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;User Support:&lt;/strong&gt; If you have run into an issue, you should check the &lt;a href="https://wordpress.org/support/forums/"&gt;Support Forums first&lt;/a&gt;. The forums are a great place to get help. If you have a bug to report, please &lt;a href="https://github.com/wordpress/gutenberg/issues"&gt;submit it to the Gutenberg repository&lt;/a&gt;. Please search prior to creating a new bug to confirm it's not a duplicate.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Developing for Gutenberg&lt;/h3&gt; 
&lt;p&gt;Extending and customizing is at the heart of the WordPress platform, this is no different for the Gutenberg project. The editor and future products can be extended by third-party developers using plugins.&lt;/p&gt; 
&lt;p&gt;Review the &lt;a href="https://developer.wordpress.org/block-editor/getting-started/quick-start-guide/"&gt;Quick Start Guide&lt;/a&gt; for the fastest way to get started extending the block editor. See the &lt;a href="https://developer.wordpress.org/block-editor/"&gt;Block Editor Handbook&lt;/a&gt; for extensive tutorials, documentation, and API references. Also, check the &lt;a href="https://developer.wordpress.org/blog/"&gt;WordPress Developer Blog&lt;/a&gt; for great articles about block development, among other topics.&lt;/p&gt; 
&lt;h3&gt;Contribute to Gutenberg&lt;/h3&gt; 
&lt;p&gt;Gutenberg is an open-source project and welcomes all contributors from code to design, and from documentation to triage. The project is built by many contributors and volunteers, and we'd love your help building it.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://developer.wordpress.org/block-editor/contributors/"&gt;Contributors Handbook&lt;/a&gt; for all the details on how you can contribute.&lt;/p&gt; 
&lt;p&gt;To get up and running quickly with &lt;strong&gt;code contribution&lt;/strong&gt; see &lt;a href="https://raw.githubusercontent.com/WordPress/gutenberg/trunk/docs/contributors/code/getting-started-with-code-contribution.md"&gt;Getting Started With Code Contribution&lt;/a&gt;. Also check out the other resources available on the &lt;a href="https://raw.githubusercontent.com/WordPress/gutenberg/trunk/docs/contributors/code/README.md"&gt;Code Contributions&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;In whichever way you wish to contribute please be sure to read the &lt;a href="https://github.com/WordPress/gutenberg/raw/HEAD/CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt; first.&lt;/p&gt; 
&lt;p&gt;As with all WordPress projects, we want to ensure a welcoming environment for everyone. With that in mind, all contributors are expected to follow our &lt;a href="https://make.wordpress.org/handbook/community-code-of-conduct/"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Get Involved&lt;/h2&gt; 
&lt;p&gt;You can join us in the &lt;code&gt;#core-editor&lt;/code&gt; channel in Slack, see the &lt;a href="https://make.wordpress.org/chat/"&gt;WordPress Slack page&lt;/a&gt; for signup information; it is free to join.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;WordPress is free software, and is released under the terms of the GNU General Public License version 2 or (at your option) any later version. See &lt;a href="https://raw.githubusercontent.com/WordPress/gutenberg/trunk/LICENSE.md"&gt;LICENSE.md&lt;/a&gt; for complete license.&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p align="center"&gt;&lt;img src="https://s.w.org/style/images/codeispoetry.png?1" alt="Code is Poetry." /&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>parse-community/parse-server</title>
      <link>https://github.com/parse-community/parse-server</link>
      <description>&lt;p&gt;Parse Server for Node.js / Express&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/5673677/138278489-7d0cebc5-1e31-4d3c-8ffb-53efcda6f29d.png" alt="parse-repository-header-server" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://github.com/parse-community/parse-server/actions/workflows/ci.yml?query=workflow%3Aci+branch%3Aalpha"&gt;&lt;img src="https://github.com/parse-community/parse-server/actions/workflows/ci.yml/badge.svg?branch=alpha" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/parse-community/parse-server/actions/workflows/ci.yml?query=workflow%3Aci+branch%3Arelease"&gt;&lt;img src="https://github.com/parse-community/parse-server/actions/workflows/ci.yml/badge.svg?branch=release" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://snyk.io/test/github/parse-community/parse-server"&gt;&lt;img src="https://snyk.io/test/github/parse-community/parse-server/badge.svg?sanitize=true" alt="Snyk Badge" /&gt;&lt;/a&gt; &lt;a href="https://app.codecov.io/github/parse-community/parse-server/tree/alpha"&gt;&lt;img src="https://codecov.io/github/parse-community/parse-server/branch/alpha/graph/badge.svg?sanitize=true" alt="Coverage" /&gt;&lt;/a&gt; &lt;a href="https://github.com/parse-community/parse-dashboard/releases"&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%9A%80-auto--release-9e34eb.svg?sanitize=true" alt="auto-release" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://nodejs.org"&gt;&lt;img src="https://img.shields.io/badge/nodejs-18,_20,_22-green.svg?logo=node.js&amp;amp;style=flat" alt="Node Version" /&gt;&lt;/a&gt; &lt;a href="https://www.mongodb.com"&gt;&lt;img src="https://img.shields.io/badge/mongodb-6,_7,_8-green.svg?logo=mongodb&amp;amp;style=flat" alt="MongoDB Version" /&gt;&lt;/a&gt; &lt;a href="https://www.postgresql.org"&gt;&lt;img src="https://img.shields.io/badge/postgresql-13,_14,_15,_16,_17-green.svg?logo=postgresql&amp;amp;style=flat" alt="Postgres Version" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/parse-server"&gt;&lt;img src="https://img.shields.io/npm/v/parse-server/latest.svg?sanitize=true" alt="npm latest version" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/parse-server"&gt;&lt;img src="https://img.shields.io/npm/v/parse-server/alpha.svg?sanitize=true" alt="npm alpha version" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/parse-server"&gt;&lt;img src="https://opencollective.com/parse-server/backers/badge.svg?sanitize=true" alt="Backers on Open Collective" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server"&gt;&lt;img src="https://opencollective.com/parse-server/sponsors/badge.svg?sanitize=true" alt="Sponsors on Open Collective" /&gt;&lt;/a&gt; &lt;a href="https://community.parseplatform.org/c/parse-server"&gt;&lt;img src="https://img.shields.io/discourse/https/community.parseplatform.org/topics.svg?sanitize=true" alt="Forum" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=ParsePlatform"&gt;&lt;img src="https://img.shields.io/twitter/follow/ParsePlatform.svg?label=Follow&amp;amp;style=social" alt="Twitter" /&gt;&lt;/a&gt; &lt;a href="https://chat.parseplatform.org"&gt;&lt;img src="https://img.shields.io/badge/Chat-Join!-%23fff?style=social&amp;amp;logo=slack" alt="Chat" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js. Parse Server works with the Express web application framework. It can be added to existing web applications, or run by itself.&lt;/p&gt; 
&lt;p&gt;The full documentation for Parse Server is available in the &lt;a href="https://github.com/parse-community/parse-server/wiki"&gt;wiki&lt;/a&gt;. The &lt;a href="http://docs.parseplatform.org/parse-server/guide/"&gt;Parse Server guide&lt;/a&gt; is a good place to get started. An &lt;a href="http://parseplatform.org/parse-server/api/"&gt;API reference&lt;/a&gt; and &lt;a href="https://docs.parseplatform.org/cloudcode/guide/"&gt;Cloud Code guide&lt;/a&gt; are also available. If you're interested in developing for Parse Server, the &lt;a href="http://docs.parseplatform.org/parse-server/guide/#development-guide"&gt;Development guide&lt;/a&gt; will help you get set up.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;A big &lt;em&gt;thank you&lt;/em&gt; 🙏 to our &lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#sponsors"&gt;sponsors&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#backers"&gt;backers&lt;/a&gt; who support the development of Parse Platform!&lt;/p&gt; 
&lt;h4&gt;Bronze Sponsors&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/parse-server/contribute/bronze-sponsor-10559"&gt;&lt;img src="https://opencollective.com/parse-server/tiers/bronze-sponsor.svg?avatarHeight=36&amp;amp;button=false" alt="Bronze Sponsors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#flavors--branches"&gt;Flavors &amp;amp; Branches&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#long-term-support"&gt;Long Term Support&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#getting-started"&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#running-parse-server"&gt;Running Parse Server&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#compatibility"&gt;Compatibility&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#nodejs"&gt;Node.js&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#mongodb"&gt;MongoDB&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#postgresql"&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#locally"&gt;Locally&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#docker-container"&gt;Docker Container&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#saving-and-querying-objects"&gt;Saving and Querying Objects&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#connect-an-sdk"&gt;Connect an SDK&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#running-parse-server-elsewhere"&gt;Running Parse Server elsewhere&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#sample-application"&gt;Sample Application&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#parse-server--express"&gt;Parse Server + Express&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#parse-server-health"&gt;Parse Server Health&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#status-values"&gt;Status Values&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#configuration"&gt;Configuration&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#basic-options"&gt;Basic Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#client-key-options"&gt;Client Key Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#access-scopes"&gt;Access Scopes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#email-verification-and-password-reset"&gt;Email Verification and Password Reset&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#password-and-account-policy"&gt;Password and Account Policy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#custom-routes"&gt;Custom Routes&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#example"&gt;Example&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#reserved-paths"&gt;Reserved Paths&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#parameters"&gt;Parameters&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#custom-pages"&gt;Custom Pages&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#using-environment-variables"&gt;Using Environment Variables&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#available-adapters"&gt;Available Adapters&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#configuring-file-adapters"&gt;Configuring File Adapters&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#idempotency-enforcement"&gt;Idempotency Enforcement&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#localization"&gt;Localization&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#pages"&gt;Pages&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#localization-with-directory-structure"&gt;Localization with Directory Structure&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#localization-with-json-resource"&gt;Localization with JSON Resource&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#dynamic-placeholders"&gt;Dynamic placeholders&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#reserved-keys"&gt;Reserved Keys&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#parameters-1"&gt;Parameters&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#logging"&gt;Logging&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#deprecations"&gt;Deprecations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#live-query"&gt;Live Query&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#graphql"&gt;GraphQL&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#running"&gt;Running&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#using-the-cli"&gt;Using the CLI&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#using-docker"&gt;Using Docker&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#using-expressjs"&gt;Using Express.js&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#checking-the-api-health"&gt;Checking the API health&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#creating-your-first-class"&gt;Creating your first class&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#using-automatically-generated-operations"&gt;Using automatically generated operations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#customizing-your-graphql-schema"&gt;Customizing your GraphQL Schema&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#learning-more"&gt;Learning more&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#sponsors"&gt;Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#backers"&gt;Backers&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Flavors &amp;amp; Branches&lt;/h1&gt; 
&lt;p&gt;Parse Server is available in different flavors on different branches:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The main branches are &lt;a href="https://github.com/parse-community/parse-server/raw/release/changelogs/CHANGELOG_release.md"&gt;release&lt;/a&gt; and &lt;a href="https://github.com/parse-community/parse-server/raw/alpha/changelogs/CHANGELOG_alpha.md"&gt;alpha&lt;/a&gt;. See the &lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/CHANGELOG.md"&gt;changelog overview&lt;/a&gt; for details.&lt;/li&gt; 
 &lt;li&gt;The long-term-support (LTS) branches are named &lt;code&gt;release-&amp;lt;version&amp;gt;.x.x&lt;/code&gt;, for example &lt;code&gt;release-5.x.x&lt;/code&gt;. LTS branches do not have pre-release branches.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Long Term Support&lt;/h2&gt; 
&lt;p&gt;Long-Term-Support (LTS) is provided for the previous Parse Server major version. For example, Parse Server 5.x will receive security updates until Parse Server 6.x is superseded by Parse Server 7.x and becomes the new LTS version. While the current major version is published on branch &lt;code&gt;release&lt;/code&gt;, a LTS version is published on branch &lt;code&gt;release-#.x.x&lt;/code&gt;, for example &lt;code&gt;release-5.x.x&lt;/code&gt; for the Parse Server 5.x LTS branch.&lt;/p&gt; 
&lt;p&gt;⚠️ LTS versions are provided to help you transition as soon as possible to the current major version. While we aim to fix security vulnerabilities in the LTS version, our main focus is on developing the current major version and preparing the next major release. Therefore we may leave certain vulnerabilities up to the community to fix. Search for &lt;a href="https://github.com/parse-community/parse-server/pulls?q=is%3Aopen+is%3Apr+base%3Arelease-5.x.x"&gt;pull requests with the specific LTS base branch&lt;/a&gt; to see the current open vulnerabilities for that LTS branch.&lt;/p&gt; 
&lt;h1&gt;Getting Started&lt;/h1&gt; 
&lt;p&gt;The fastest and easiest way to get started is to run MongoDB and Parse Server locally.&lt;/p&gt; 
&lt;h2&gt;Running Parse Server&lt;/h2&gt; 
&lt;p&gt;Before you start make sure you have installed:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/"&gt;NodeJS&lt;/a&gt; that includes &lt;code&gt;npm&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.mongodb.com/"&gt;MongoDB&lt;/a&gt; or &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt;(with &lt;a href="https://postgis.net"&gt;PostGIS&lt;/a&gt; 2.2.0 or higher)&lt;/li&gt; 
 &lt;li&gt;Optionally &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Compatibility&lt;/h3&gt; 
&lt;h4&gt;Node.js&lt;/h4&gt; 
&lt;p&gt;Parse Server is continuously tested with the most recent releases of Node.js to ensure compatibility. We follow the &lt;a href="https://github.com/nodejs/Release"&gt;Node.js Long Term Support plan&lt;/a&gt; and only test against versions that are officially supported and have not reached their end-of-life date.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
   &lt;th&gt;Minimum Version&lt;/th&gt; 
   &lt;th&gt;End-of-Life&lt;/th&gt; 
   &lt;th&gt;Parse Server Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Node.js 18&lt;/td&gt; 
   &lt;td&gt;18.20.4&lt;/td&gt; 
   &lt;td&gt;April 2025&lt;/td&gt; 
   &lt;td&gt;&amp;lt;= 8.x (2025)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Node.js 20&lt;/td&gt; 
   &lt;td&gt;20.18.0&lt;/td&gt; 
   &lt;td&gt;April 2026&lt;/td&gt; 
   &lt;td&gt;&amp;lt;= 9.x (2026)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Node.js 22&lt;/td&gt; 
   &lt;td&gt;22.12.0&lt;/td&gt; 
   &lt;td&gt;April 2027&lt;/td&gt; 
   &lt;td&gt;&amp;lt;= 10.x (2027)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;MongoDB&lt;/h4&gt; 
&lt;p&gt;Parse Server is continuously tested with the most recent releases of MongoDB to ensure compatibility. We follow the &lt;a href="https://www.mongodb.com/support-policy"&gt;MongoDB support schedule&lt;/a&gt; and &lt;a href="https://www.mongodb.com/support-policy/lifecycles"&gt;MongoDB lifecycle schedule&lt;/a&gt; and only test against versions that are officially supported and have not reached their end-of-life date. MongoDB "rapid releases" are ignored as these are considered pre-releases of the next major version.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
   &lt;th&gt;Minimum Version&lt;/th&gt; 
   &lt;th&gt;End-of-Life&lt;/th&gt; 
   &lt;th&gt;Parse Server Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MongoDB 6&lt;/td&gt; 
   &lt;td&gt;6.0.19&lt;/td&gt; 
   &lt;td&gt;July 2025&lt;/td&gt; 
   &lt;td&gt;&amp;lt;= 8.x (2025)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MongoDB 7&lt;/td&gt; 
   &lt;td&gt;7.0.16&lt;/td&gt; 
   &lt;td&gt;August 2026&lt;/td&gt; 
   &lt;td&gt;&amp;lt;= 9.x (2026)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MongoDB 8&lt;/td&gt; 
   &lt;td&gt;8.0.4&lt;/td&gt; 
   &lt;td&gt;TDB&lt;/td&gt; 
   &lt;td&gt;&amp;lt;= 10.x (2027)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;PostgreSQL&lt;/h4&gt; 
&lt;p&gt;Parse Server is continuously tested with the most recent releases of PostgreSQL and PostGIS to ensure compatibility, using &lt;a href="https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;ordering=last_updated"&gt;PostGIS docker images&lt;/a&gt;. We follow the &lt;a href="https://www.postgresql.org/support/versioning"&gt;PostgreSQL support schedule&lt;/a&gt; and &lt;a href="https://www.postgis.net/eol_policy/"&gt;PostGIS support schedule&lt;/a&gt; and only test against versions that are officially supported and have not reached their end-of-life date. Due to the extensive PostgreSQL support duration of 5 years, Parse Server drops support about 2 years before the official end-of-life date.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
   &lt;th&gt;PostGIS Version&lt;/th&gt; 
   &lt;th&gt;End-of-Life&lt;/th&gt; 
   &lt;th&gt;Parse Server Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Postgres 13&lt;/td&gt; 
   &lt;td&gt;3.1, 3.2, 3.3, 3.4, 3.5&lt;/td&gt; 
   &lt;td&gt;November 2025&lt;/td&gt; 
   &lt;td&gt;&amp;lt;= 6.x (2023)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Postgres 14&lt;/td&gt; 
   &lt;td&gt;3.5&lt;/td&gt; 
   &lt;td&gt;November 2026&lt;/td&gt; 
   &lt;td&gt;&amp;lt;= 7.x (2024)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Postgres 15&lt;/td&gt; 
   &lt;td&gt;3.3, 3.4, 3.5&lt;/td&gt; 
   &lt;td&gt;November 2027&lt;/td&gt; 
   &lt;td&gt;&amp;lt;= 8.x (2025)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Postgres 16&lt;/td&gt; 
   &lt;td&gt;3.5&lt;/td&gt; 
   &lt;td&gt;November 2028&lt;/td&gt; 
   &lt;td&gt;&amp;lt;= 9.x (2026)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Postgres 17&lt;/td&gt; 
   &lt;td&gt;3.5&lt;/td&gt; 
   &lt;td&gt;November 2029&lt;/td&gt; 
   &lt;td&gt;&amp;lt;= 10.x (2027)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Locally&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ npm install -g parse-server mongodb-runner
$ mongodb-runner start
$ parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb://localhost/test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;If installation with&lt;/em&gt; &lt;code&gt;-g&lt;/code&gt; &lt;em&gt;fails due to permission problems&lt;/em&gt; (&lt;code&gt;npm ERR! code 'EACCES'&lt;/code&gt;), &lt;em&gt;please refer to &lt;a href="https://docs.npmjs.com/getting-started/fixing-npm-permissions"&gt;this link&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Docker Container&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ git clone https://github.com/parse-community/parse-server
$ cd parse-server
$ docker build --tag parse-server .
$ docker run --name my-mongo -d mongo
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Running the Parse Server Image 
 &lt;!-- omit in toc --&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ docker run --name my-parse-server -v config-vol:/parse-server/config -p 1337:1337 --link my-mongo:mongo -d parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb://mongo/test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;If you want to use &lt;a href="https://docs.parseplatform.org/cloudcode/guide/"&gt;Cloud Code&lt;/a&gt;, add &lt;code&gt;-v cloud-code-vol:/parse-server/cloud --cloud /parse-server/cloud/main.js&lt;/code&gt; to the command above. Make sure &lt;code&gt;main.js&lt;/code&gt; is in the &lt;code&gt;cloud-code-vol&lt;/code&gt; directory before starting Parse Server.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;You can use any arbitrary string as your application id and master key. These will be used by your clients to authenticate with the Parse Server.&lt;/p&gt; 
&lt;p&gt;That's it! You are now running a standalone version of Parse Server on your machine.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Using a remote MongoDB?&lt;/strong&gt; Pass the &lt;code&gt;--databaseURI DATABASE_URI&lt;/code&gt; parameter when starting &lt;code&gt;parse-server&lt;/code&gt;. Learn more about configuring Parse Server &lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#configuration"&gt;here&lt;/a&gt;. For a full list of available options, run &lt;code&gt;parse-server --help&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Saving and Querying Objects&lt;/h3&gt; 
&lt;p&gt;Now that you're running Parse Server, it is time to save your first object. The easiest way is to use the &lt;a href="http://docs.parseplatform.org/rest/guide"&gt;REST API&lt;/a&gt;, but you can easily do the same using any of the &lt;a href="http://parseplatform.org/#sdks"&gt;Parse SDKs&lt;/a&gt;. To learn more check out the &lt;a href="http://docs.parseplatform.org"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Connect an SDK&lt;/h3&gt; 
&lt;p&gt;Parse provides SDKs for all the major platforms. Refer to the Parse Server guide to &lt;a href="https://docs.parseplatform.org/parse-server/guide/#using-parse-sdks-with-parse-server"&gt;learn how to connect your app to Parse Server&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Running Parse Server elsewhere&lt;/h2&gt; 
&lt;p&gt;Once you have a better understanding of how the project works, please refer to the &lt;a href="https://github.com/parse-community/parse-server/wiki"&gt;Parse Server wiki&lt;/a&gt; for in-depth guides to deploy Parse Server to major infrastructure providers. Read on to learn more about additional ways of running Parse Server.&lt;/p&gt; 
&lt;h3&gt;Sample Application&lt;/h3&gt; 
&lt;p&gt;We have provided a basic &lt;a href="https://github.com/parse-community/parse-server-example"&gt;Node.js application&lt;/a&gt; that uses the Parse Server module on Express and can be easily deployed to various infrastructure providers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/deploying-a-parse-server-to-heroku"&gt;Heroku and mLab&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://mobile.awsblog.com/post/TxCD57GZLM2JR/How-to-set-up-Parse-Server-on-AWS-using-AWS-Elastic-Beanstalk"&gt;AWS and Elastic Beanstalk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@justinbeckwith/deploying-parse-server-to-google-app-engine-6bc0b7451d50"&gt;Google App Engine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://azure.microsoft.com/en-us/blog/azure-welcomes-parse-developers/"&gt;Microsoft Azure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.sashido.io/tag/migration/"&gt;SashiDo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-run-parse-server-on-ubuntu-14-04"&gt;Digital Ocean&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cf-platform-eng/pws-parse-server"&gt;Pivotal Web Services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.back4app.com/docs/get-started/welcome"&gt;Back4app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://glitch.com/edit/#!/parse-server"&gt;Glitch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flynn.io/blog/parse-apps-on-flynn"&gt;Flynn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://elest.io/open-source/parse"&gt;Elestio&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Parse Server + Express&lt;/h3&gt; 
&lt;p&gt;You can also create an instance of Parse Server, and mount it on a new or existing Express website:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const express = require('express');
const ParseServer = require('parse-server').ParseServer;
const app = express();

const server = new ParseServer({
  databaseURI: 'mongodb://localhost:27017/dev', // Connection string for your MongoDB database
  cloud: './cloud/main.js', // Path to your Cloud Code
  appId: 'myAppId',
  masterKey: 'myMasterKey', // Keep this key secret!
  fileKey: 'optionalFileKey',
  serverURL: 'http://localhost:1337/parse' // Don't forget to change to https if needed
});

// Start server
await server.start();

// Serve the Parse API on the /parse URL prefix
app.use('/parse', server.app);

app.listen(1337, function() {
  console.log('parse-server-example running on port 1337.');
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For a full list of available options, run &lt;code&gt;parse-server --help&lt;/code&gt; or take a look at [Parse Server Configurations][server-options].&lt;/p&gt; 
&lt;h2&gt;Parse Server Health&lt;/h2&gt; 
&lt;p&gt;Check the Parse Server health by sending a request to the &lt;code&gt;/parse/health&lt;/code&gt; endpoint.&lt;/p&gt; 
&lt;p&gt;The response looks like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "status": "ok"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Status Values&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Value&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;initialized&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The server has been created but the &lt;code&gt;start&lt;/code&gt; method has not been called yet.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;starting&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The server is starting up.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ok&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The server started and is running.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;error&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;There was a startup error, see the logs for details.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;Configuration&lt;/h1&gt; 
&lt;p&gt;Parse Server can be configured using the following options. You may pass these as parameters when running a standalone &lt;code&gt;parse-server&lt;/code&gt;, or by loading a configuration file in JSON format using &lt;code&gt;parse-server path/to/configuration.json&lt;/code&gt;. If you're using Parse Server on Express, you may also pass these to the &lt;code&gt;ParseServer&lt;/code&gt; object as options.&lt;/p&gt; 
&lt;p&gt;For the full list of available options, run &lt;code&gt;parse-server --help&lt;/code&gt; or take a look at [Parse Server Configurations][server-options].&lt;/p&gt; 
&lt;h2&gt;Basic Options&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;appId&lt;/code&gt; &lt;strong&gt;(required)&lt;/strong&gt; - The application id to host with this server instance. You can use any arbitrary string. For migrated apps, this should match your hosted Parse app.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;masterKey&lt;/code&gt; &lt;strong&gt;(required)&lt;/strong&gt; - The master key to use for overriding ACL security. You can use any arbitrary string. Keep it secret! For migrated apps, this should match your hosted Parse app.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;databaseURI&lt;/code&gt; &lt;strong&gt;(required)&lt;/strong&gt; - The connection string for your database, i.e. &lt;code&gt;mongodb://user:pass@host.com/dbname&lt;/code&gt;. Be sure to &lt;a href="https://app.zencoder.com/docs/guides/getting-started/special-characters-in-usernames-and-passwords"&gt;URL encode your password&lt;/a&gt; if your password has special characters.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;port&lt;/code&gt; - The default port is 1337, specify this parameter to use a different port.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;serverURL&lt;/code&gt; - URL to your Parse Server (don't forget to specify http:// or https://). This URL will be used when making requests to Parse Server from Cloud Code.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cloud&lt;/code&gt; - The absolute path to your cloud code &lt;code&gt;main.js&lt;/code&gt; file.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;push&lt;/code&gt; - Configuration options for APNS and GCM push. See the &lt;a href="https://docs.parseplatform.org/parse-server/guide/#push-notifications-quick-start"&gt;Push Notifications quick start&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Client Key Options&lt;/h2&gt; 
&lt;p&gt;The client keys used with Parse are no longer necessary with Parse Server. If you wish to still require them, perhaps to be able to refuse access to older clients, you can set the keys at initialization time. Setting any of these keys will require all requests to provide one of the configured keys.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;clientKey&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;javascriptKey&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;restAPIKey&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;dotNetKey&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Access Scopes&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Scope&lt;/th&gt; 
   &lt;th&gt;Internal data&lt;/th&gt; 
   &lt;th&gt;Read-only data &lt;sub&gt;(1)&lt;/sub&gt;&lt;/th&gt; 
   &lt;th&gt;Custom data&lt;/th&gt; 
   &lt;th&gt;Restricted by CLP, ACL&lt;/th&gt; 
   &lt;th&gt;Key&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Internal&lt;/td&gt; 
   &lt;td&gt;r/w&lt;/td&gt; 
   &lt;td&gt;r/w&lt;/td&gt; 
   &lt;td&gt;r/w&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;maintenanceKey&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Master&lt;/td&gt; 
   &lt;td&gt;-/-&lt;/td&gt; 
   &lt;td&gt;r/-&lt;/td&gt; 
   &lt;td&gt;r/w&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;masterKey&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ReadOnlyMaster&lt;/td&gt; 
   &lt;td&gt;-/-&lt;/td&gt; 
   &lt;td&gt;r/-&lt;/td&gt; 
   &lt;td&gt;r/-&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;readOnlyMasterKey&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Session&lt;/td&gt; 
   &lt;td&gt;-/-&lt;/td&gt; 
   &lt;td&gt;r/-&lt;/td&gt; 
   &lt;td&gt;r/w&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;sessionToken&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;sub&gt;(1) &lt;code&gt;Parse.Object.createdAt&lt;/code&gt;, &lt;code&gt;Parse.Object.updatedAt&lt;/code&gt;.&lt;/sub&gt;&lt;/p&gt; 
&lt;h2&gt;Email Verification and Password Reset&lt;/h2&gt; 
&lt;p&gt;Verifying user email addresses and enabling password reset via email requires an email adapter. There are many email adapters provided and maintained by the community. The following is an example configuration with an example email adapter. See the [Parse Server Options][server-options] for more details and a full list of available options.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const server = ParseServer({
  ...otherOptions,

  // Enable email verification
  verifyUserEmails: true,

  // Set email verification token validity to 2 hours
  emailVerifyTokenValidityDuration: 2 * 60 * 60,

  // Set email adapter
  emailAdapter: {
    module: 'example-mail-adapter',
    options: {
      // Additional adapter options
      ...mailAdapterOptions
    }
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Offical email adapters maintained by Parse Platform:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/parse-community/parse-server-api-mail-adapter"&gt;parse-server-api-mail-adapter&lt;/a&gt; (localization, templates, universally supports any email provider)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Email adapters contributed by the community:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/parse-smtp-template"&gt;parse-smtp-template&lt;/a&gt; (localization, templates)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/parse-server-postmark-adapter"&gt;parse-server-postmark-adapter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/parse-server-sendgrid-adapter"&gt;parse-server-sendgrid-adapter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/parse-server-mandrill-adapter"&gt;parse-server-mandrill-adapter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/parse-server-simple-ses-adapter"&gt;parse-server-simple-ses-adapter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/parse-server-mailgun-adapter-template"&gt;parse-server-mailgun-adapter-template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/parse-server-sendinblue-adapter"&gt;parse-server-sendinblue-adapter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/parse-server-mailjet-adapter"&gt;parse-server-mailjet-adapter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/simple-parse-smtp-adapter"&gt;simple-parse-smtp-adapter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/parse-server-generic-email-adapter"&gt;parse-server-generic-email-adapter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Password and Account Policy&lt;/h2&gt; 
&lt;p&gt;Set a password and account policy that meets your security requirements. The following is an example configuration. See the [Parse Server Options][server-options] for more details and a full list of available options.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const server = ParseServer({
  ...otherOptions,

  // The account lock policy
  accountLockout: {
    // Lock the account for 5 minutes.
    duration: 5,
    // Lock an account after 3 failed log-in attempts
    threshold: 3,
    // Unlock the account after a successful password reset
    unlockOnPasswordReset: true,
  },

  // The password policy
  passwordPolicy: {
    // Enforce a password of at least 8 characters which contain at least 1 lower case, 1 upper case and 1 digit
    validatorPattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,
    // Do not allow the username as part of the password
    doNotAllowUsername: true,
    // Do not allow to re-use the last 5 passwords when setting a new password
    maxPasswordHistory: 5,
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Custom Routes&lt;/h2&gt; 
&lt;p&gt;Custom routes allow to build user flows with webpages, similar to the existing password reset and email verification features. Custom routes are defined with the &lt;code&gt;pages&lt;/code&gt; option in the Parse Server configuration:&lt;/p&gt; 
&lt;h3&gt;Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const api = new ParseServer({
  ...otherOptions,

  pages: {
    enableRouter: true,
    customRoutes: [{
      method: 'GET',
      path: 'custom_route',
      handler: async request =&amp;gt; {
        // custom logic
        // ...
        // then, depending on the outcome, return a HTML file as response
        return { file: 'custom_page.html' };
      }
    }]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The above route can be invoked by sending a &lt;code&gt;GET&lt;/code&gt; request to: &lt;code&gt;https://[parseServerPublicUrl]/[parseMount]/[pagesEndpoint]/[appId]/[customRoute]&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;handler&lt;/code&gt; receives the &lt;code&gt;request&lt;/code&gt; and returns a &lt;code&gt;custom_page.html&lt;/code&gt; webpage from the &lt;code&gt;pages.pagesPath&lt;/code&gt; directory as response. The advantage of building a custom route this way is that it automatically makes use of Parse Server's built-in capabilities, such as &lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#pages"&gt;page localization&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/#dynamic-placeholders"&gt;dynamic placeholders&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Reserved Paths&lt;/h3&gt; 
&lt;p&gt;The following paths are already used by Parse Server's built-in features and are therefore not available for custom routes. Custom routes with an identical combination of &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;method&lt;/code&gt; are ignored.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Path&lt;/th&gt; 
   &lt;th&gt;HTTP Method&lt;/th&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;verify_email&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;email verification&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;resend_verification_email&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;email verification&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;choose_password&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;password reset&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;request_password_reset&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;password reset&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;request_password_reset&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;password reset&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Parameters&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Parameter&lt;/th&gt; 
   &lt;th&gt;Optional&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
   &lt;th&gt;Example values&lt;/th&gt; 
   &lt;th&gt;Environment variable&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The options for pages such as password reset and email verification.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.enableRouter&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_ENABLE_ROUTER&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Is &lt;code&gt;true&lt;/code&gt; if the pages router should be enabled; this is required for any of the pages options to take effect.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.customRoutes&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_ROUTES&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The custom routes. The routes are added in the order they are defined here, which has to be considered since requests traverse routes in an ordered manner. Custom routes are traversed after build-in routes such as password reset and email verification.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.customRoutes.method&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;The HTTP method of the custom route.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.customRoutes.path&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;custom_page&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;The path of the custom route. Note that the same path can used if the &lt;code&gt;method&lt;/code&gt; is different, for example a path &lt;code&gt;custom_page&lt;/code&gt; can have two routes, a &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt; route, which will be invoked depending on the HTTP request method.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.customRoutes.handler&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AsyncFunction&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;async () =&amp;gt; { ... }&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;The route handler that is invoked when the route matches the HTTP request. If the handler does not return a page, the request is answered with a 404 &lt;code&gt;Not found.&lt;/code&gt; response.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Custom Pages&lt;/h2&gt; 
&lt;p&gt;It’s possible to change the default pages of the app and redirect the user to another path or domain.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const server = ParseServer({
  ...otherOptions,

  customPages: {
    passwordResetSuccess: "http://yourapp.com/passwordResetSuccess",
    verifyEmailSuccess: "http://yourapp.com/verifyEmailSuccess",
    parseFrameURL: "http://yourapp.com/parseFrameURL",
    linkSendSuccess: "http://yourapp.com/linkSendSuccess",
    linkSendFail: "http://yourapp.com/linkSendFail",
    invalidLink: "http://yourapp.com/invalidLink",
    invalidVerificationLink: "http://yourapp.com/invalidVerificationLink",
    choosePassword: "http://yourapp.com/choosePassword"
  }
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using Environment Variables&lt;/h2&gt; 
&lt;p&gt;You may configure the Parse Server using environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;PORT
PARSE_SERVER_APPLICATION_ID
PARSE_SERVER_MASTER_KEY
PARSE_SERVER_DATABASE_URI
PARSE_SERVER_URL
PARSE_SERVER_CLOUD
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The default port is 1337, to use a different port set the PORT environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ PORT=8080 parse-server --appId APPLICATION_ID --masterKey MASTER_KEY
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the full list of configurable environment variables, run &lt;code&gt;parse-server --help&lt;/code&gt; or take a look at &lt;a href="https://github.com/parse-community/parse-server/raw/master/src/Options/Definitions.js"&gt;Parse Server Configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Available Adapters&lt;/h2&gt; 
&lt;p&gt;All official adapters are distributed as scoped packages on &lt;a href="https://www.npmjs.com/search?q=scope%3Aparse"&gt;npm (@parse)&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Some well maintained adapters are also available on the &lt;a href="https://github.com/parse-server-modules"&gt;Parse Server Modules&lt;/a&gt; organization.&lt;/p&gt; 
&lt;p&gt;You can also find more adapters maintained by the community by searching on &lt;a href="https://www.npmjs.com/search?q=parse-server%20adapter&amp;amp;page=1&amp;amp;ranking=optimal"&gt;npm&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Configuring File Adapters&lt;/h2&gt; 
&lt;p&gt;Parse Server allows developers to choose from several options when hosting files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GridFSBucketAdapter&lt;/code&gt; - which is backed by MongoDB&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;S3Adapter&lt;/code&gt; - which is backed by &lt;a href="https://aws.amazon.com/s3/"&gt;Amazon S3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GCSAdapter&lt;/code&gt; - which is backed by &lt;a href="https://cloud.google.com/storage/"&gt;Google Cloud Storage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;FSAdapter&lt;/code&gt; - local file storage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;GridFSBucketAdapter&lt;/code&gt; is used by default and requires no setup, but if you're interested in using Amazon S3, Google Cloud Storage, or local file storage, additional configuration information is available in the &lt;a href="http://docs.parseplatform.org/parse-server/guide/#configuring-file-adapters"&gt;Parse Server guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Idempotency Enforcement&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Caution, this is an experimental feature that may not be appropriate for production.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This feature deduplicates identical requests that are received by Parse Server multiple times, typically due to network issues or network adapter access restrictions on mobile operating systems.&lt;/p&gt; 
&lt;p&gt;Identical requests are identified by their request header &lt;code&gt;X-Parse-Request-Id&lt;/code&gt;. Therefore a client request has to include this header for deduplication to be applied. Requests that do not contain this header cannot be deduplicated and are processed normally by Parse Server. This means rolling out this feature to clients is seamless as Parse Server still processes requests without this header when this feature is enabled.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This feature needs to be enabled on the client side to send the header and on the server to process the header. Refer to the specific Parse SDK docs to see whether the feature is supported yet.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Deduplication is only done for object creation and update (&lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;PUT&lt;/code&gt; requests). Deduplication is not done for object finding and deletion (&lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;DELETE&lt;/code&gt; requests), as these operations are already idempotent by definition.&lt;/p&gt; 
&lt;h3&gt;Configuration example 
 &lt;!-- omit in toc --&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;let api = new ParseServer({
    idempotencyOptions: {
        paths: [".*"],       // enforce for all requests
        ttl: 120             // keep request IDs for 120s
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Parameters 
 &lt;!-- omit in toc --&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Parameter&lt;/th&gt; 
   &lt;th&gt;Optional&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
   &lt;th&gt;Example values&lt;/th&gt; 
   &lt;th&gt;Environment variable&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;idempotencyOptions&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;PARSE_SERVER_EXPERIMENTAL_IDEMPOTENCY_OPTIONS&lt;/td&gt; 
   &lt;td&gt;Setting this enables idempotency enforcement for the specified paths.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;idempotencyOptions.paths&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Array&amp;lt;String&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.*&lt;/code&gt; (all paths, includes the examples below), &lt;br /&gt;&lt;code&gt;functions/.*&lt;/code&gt; (all functions), &lt;br /&gt;&lt;code&gt;jobs/.*&lt;/code&gt; (all jobs), &lt;br /&gt;&lt;code&gt;classes/.*&lt;/code&gt; (all classes), &lt;br /&gt;&lt;code&gt;functions/.*&lt;/code&gt; (all functions), &lt;br /&gt;&lt;code&gt;users&lt;/code&gt; (user creation / update), &lt;br /&gt;&lt;code&gt;installations&lt;/code&gt; (installation creation / update)&lt;/td&gt; 
   &lt;td&gt;PARSE_SERVER_EXPERIMENTAL_IDEMPOTENCY_PATHS&lt;/td&gt; 
   &lt;td&gt;An array of path patterns that have to match the request path for request deduplication to be enabled. The mount path must not be included, for example to match the request path &lt;code&gt;/parse/functions/myFunction&lt;/code&gt; specify the path pattern &lt;code&gt;functions/myFunction&lt;/code&gt;. A trailing slash of the request path is ignored, for example the path pattern &lt;code&gt;functions/myFunction&lt;/code&gt; matches both &lt;code&gt;/parse/functions/myFunction&lt;/code&gt; and &lt;code&gt;/parse/functions/myFunction/&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;idempotencyOptions.ttl&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;300&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;60&lt;/code&gt; (60 seconds)&lt;/td&gt; 
   &lt;td&gt;PARSE_SERVER_EXPERIMENTAL_IDEMPOTENCY_TTL&lt;/td&gt; 
   &lt;td&gt;The duration in seconds after which a request record is discarded from the database. Duplicate requests due to network issues can be expected to arrive within milliseconds up to several seconds. This value must be greater than &lt;code&gt;0&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Postgres 
 &lt;!-- omit in toc --&gt;&lt;/h3&gt; 
&lt;p&gt;To use this feature in Postgres, you will need to create a cron job using &lt;a href="https://www.pgadmin.org/docs/pgadmin4/development/pgagent_jobs.html"&gt;pgAdmin&lt;/a&gt; or similar to call the Postgres function &lt;code&gt;idempotency_delete_expired_records()&lt;/code&gt; that deletes expired idempotency records. You can find an example script below. Make sure the script has the same privileges to log into Postgres as Parse Server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;#!/bin/bash

set -e
psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" &amp;lt;&amp;lt;-EOSQL
    SELECT idempotency_delete_expired_records();
EOSQL

exec "$@"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Assuming the script above is named, &lt;code&gt;parse_idempotency_delete_expired_records.sh&lt;/code&gt;, a cron job that runs the script every 2 minutes may look like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;2 * * * * /root/parse_idempotency_delete_expired_records.sh &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Localization&lt;/h2&gt; 
&lt;h3&gt;Pages&lt;/h3&gt; 
&lt;p&gt;Custom pages as well as feature pages (e.g. password reset, email verification) can be localized with the &lt;code&gt;pages&lt;/code&gt; option in the Parse Server configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const api = new ParseServer({
  ...otherOptions,

  pages: {
    enableRouter: true,
    enableLocalization: true,
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Localization is achieved by matching a request-supplied &lt;code&gt;locale&lt;/code&gt; parameter with localized page content. The locale can be supplied in either the request query, body or header with the following keys:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;query: &lt;code&gt;locale&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;body: &lt;code&gt;locale&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;header: &lt;code&gt;x-parse-page-param-locale&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example, a password reset link with the locale parameter in the query could look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;http://example.com/parse/apps/[appId]/request_password_reset?token=[token]&amp;amp;username=[username]&amp;amp;locale=de-AT
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Localization is only available for pages in the pages directory as set with &lt;code&gt;pages.pagesPath&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Localization for feature pages (e.g. password reset, email verification) is disabled if &lt;code&gt;pages.customUrls&lt;/code&gt; are set, even if the custom URLs point to the pages within the pages path.&lt;/li&gt; 
 &lt;li&gt;Only &lt;code&gt;.html&lt;/code&gt; files are considered for localization when localizing custom pages.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Pages can be localized in two ways:&lt;/p&gt; 
&lt;h4&gt;Localization with Directory Structure&lt;/h4&gt; 
&lt;p&gt;Pages are localized by using the corresponding file in the directory structure where the files are placed in subdirectories named after the locale or language. The file in the base directory is the default file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example Directory Structure:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;root/
├── public/                  // pages base path
│   ├── example.html         // default file
│   └── de/                  // de language folder
│   │   └── example.html     // de localized file
│   └── de-AT/               // de-AT locale folder
│   │   └── example.html     // de-AT localized file
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Files are matched with the locale in the following order:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Locale match, e.g. locale &lt;code&gt;de-AT&lt;/code&gt; matches file in folder &lt;code&gt;de-AT&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Language match, e.g. locale &lt;code&gt;de-CH&lt;/code&gt; matches file in folder &lt;code&gt;de&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Default; file in base folder is returned.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Configuration Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const api = new ParseServer({
  ...otherOptions,

  pages: {
    enableRouter: true,
    enableLocalization: true,
    customUrls: {
      passwordReset: 'https://example.com/page.html'
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Pros:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All files are complete in their content and can be easily opened and previewed by viewing the file in a browser.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Cons:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In most cases, a localized page differs only slightly from the default page, which could cause a lot of duplicate code that is difficult to maintain.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Localization with JSON Resource&lt;/h4&gt; 
&lt;p&gt;Pages are localized by adding placeholders in the HTML files and providing a JSON resource that contains the translations to fill into the placeholders.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example Directory Structure:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;root/
├── public/                  // pages base path
│   ├── example.html         // the page containing placeholders
├── private/                 // folder outside of public scope
│   └── translations.json    // JSON resource file
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The JSON resource file loosely follows the &lt;a href="https://github.com/i18next/i18next"&gt;i18next&lt;/a&gt; syntax, which is a syntax that is often supported by translation platforms, making it easy to manage translations, exporting them for use in Parse Server, and even to automate this workflow.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example JSON Content:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "en": {               // resource for language `en` (English)
    "translation": {
      "greeting": "Hello!"
    }
  },
  "de": {               // resource for language `de` (German)
    "translation": {
      "greeting": "Hallo!"
    }
  }
  "de-AT": {            // resource for locale `de-AT` (Austrian German)
    "translation": {
      "greeting": "Servus!"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Configuration Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const api = new ParseServer({
  ...otherOptions,

  pages: {
    enableRouter: true,
    enableLocalization: true,
    localizationJsonPath: './private/localization.json',
    localizationFallbackLocale: 'en'
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Pros:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;There is only one HTML file to maintain that contains the placeholders that are filled with the translations according to the locale.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Cons:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Files cannot be easily previewed by viewing the file in a browser because the content contains only placeholders and even HTML or CSS changes may be dynamically applied, e.g. when a localization requires a Right-To-Left layout direction.&lt;/li&gt; 
 &lt;li&gt;Style and other fundamental layout changes may be more difficult to apply.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Dynamic placeholders&lt;/h4&gt; 
&lt;p&gt;In addition to feature related default parameters such as &lt;code&gt;appId&lt;/code&gt; and the translations provided via JSON resource, it is possible to define custom dynamic placeholders as part of the router configuration. This works independently of localization and, also if &lt;code&gt;enableLocalization&lt;/code&gt; is disabled.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Configuration Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const api = new ParseServer({
  ...otherOptions,

  pages: {
    enableRouter: true,
    placeholders: {
      exampleKey: 'exampleValue'
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The placeholders can also be provided as function or as async function, with the &lt;code&gt;locale&lt;/code&gt; and other feature related parameters passed through, to allow for dynamic placeholder values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const api = new ParseServer({
  ...otherOptions,

  pages: {
    enableRouter: true,
    placeholders: async (params) =&amp;gt; {
      const value = await doSomething(params.locale);
      return {
        exampleKey: value
      };
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Reserved Keys&lt;/h4&gt; 
&lt;p&gt;The following parameter and placeholder keys are reserved because they are used related to features such as password reset or email verification. They should not be used as translation keys in the JSON resource or as manually defined placeholder keys in the configuration: &lt;code&gt;appId&lt;/code&gt;, &lt;code&gt;appName&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;locale&lt;/code&gt;, &lt;code&gt;publicServerUrl&lt;/code&gt;, &lt;code&gt;token&lt;/code&gt;, &lt;code&gt;username&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Parameters&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Parameter&lt;/th&gt; 
   &lt;th&gt;Optional&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
   &lt;th&gt;Example values&lt;/th&gt; 
   &lt;th&gt;Environment variable&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The options for pages such as password reset and email verification.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.enableRouter&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_ENABLE_ROUTER&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Is &lt;code&gt;true&lt;/code&gt; if the pages router should be enabled; this is required for any of the pages options to take effect.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.enableLocalization&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_ENABLE_LOCALIZATION&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Is true if pages should be localized; this has no effect on custom page redirects.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.localizationJsonPath&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;./private/translations.json&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_LOCALIZATION_JSON_PATH&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The path to the JSON file for localization; the translations will be used to fill template placeholders according to the locale.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.localizationFallbackLocale&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;en&lt;/code&gt;, &lt;code&gt;en-GB&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_LOCALIZATION_FALLBACK_LOCALE&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The fallback locale for localization if no matching translation is provided for the given locale. This is only relevant when providing translation resources via JSON file.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.placeholders&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Object&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;AsyncFunction&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{ exampleKey: 'exampleValue' }&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_PLACEHOLDERS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The placeholder keys and values which will be filled in pages; this can be a simple object or a callback function.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.forceRedirect&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_FORCE_REDIRECT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Is &lt;code&gt;true&lt;/code&gt; if responses should always be redirects and never content, &lt;code&gt;false&lt;/code&gt; if the response type should depend on the request type (&lt;code&gt;GET&lt;/code&gt; request -&amp;gt; content response; &lt;code&gt;POST&lt;/code&gt; request -&amp;gt; redirect response).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.pagesPath&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;./public&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;./files/pages&lt;/code&gt;, &lt;code&gt;../../pages&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_PAGES_PATH&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The path to the pages directory; this also defines where the static endpoint &lt;code&gt;/apps&lt;/code&gt; points to.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.pagesEndpoint&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;apps&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_PAGES_ENDPOINT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The API endpoint for the pages.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.customUrls&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{ passwordReset: 'https://example.com/page.html' }&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URLS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The URLs to the custom pages&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.customUrls.passwordReset&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;password_reset.html&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_PASSWORD_RESET&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The URL to the custom page for password reset.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.customUrls.passwordResetSuccess&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;password_reset_success.html&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_PASSWORD_RESET_SUCCESS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The URL to the custom page for password reset -&amp;gt; success.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.customUrls.passwordResetLinkInvalid&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;password_reset_link_invalid.html&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_PASSWORD_RESET_LINK_INVALID&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The URL to the custom page for password reset -&amp;gt; link invalid.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.customUrls.emailVerificationSuccess&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;email_verification_success.html&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_SUCCESS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The URL to the custom page for email verification -&amp;gt; success.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.customUrls.emailVerificationSendFail&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;email_verification_send_fail.html&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_SEND_FAIL&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The URL to the custom page for email verification -&amp;gt; link send fail.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.customUrls.emailVerificationSendSuccess&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;email_verification_send_success.html&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_SEND_SUCCESS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The URL to the custom page for email verification -&amp;gt; resend link -&amp;gt; success.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.customUrls.emailVerificationLinkInvalid&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;email_verification_link_invalid.html&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_LINK_INVALID&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The URL to the custom page for email verification -&amp;gt; link invalid.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pages.customUrls.emailVerificationLinkExpired&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;yes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;email_verification_link_expired.html&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_LINK_EXPIRED&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The URL to the custom page for email verification -&amp;gt; link expired.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Notes 
 &lt;!-- omit in toc --&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;In combination with the &lt;a href="https://www.npmjs.com/package/parse-server-api-mail-adapter"&gt;Parse Server API Mail Adapter&lt;/a&gt; Parse Server provides a fully localized flow (emails -&amp;gt; pages) for the user. The email adapter sends a localized email and adds a locale parameter to the password reset or email verification link, which is then used to respond with localized pages.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Logging&lt;/h2&gt; 
&lt;p&gt;Parse Server will, by default, log:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;to the console&lt;/li&gt; 
 &lt;li&gt;daily rotating files as new line delimited JSON&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Logs are also viewable in Parse Dashboard.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Want to log each request and response?&lt;/strong&gt; Set the &lt;code&gt;VERBOSE&lt;/code&gt; environment variable when starting &lt;code&gt;parse-server&lt;/code&gt;. Usage :- &lt;code&gt;VERBOSE='1' parse-server --appId APPLICATION_ID --masterKey MASTER_KEY&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Want logs to be placed in a different folder?&lt;/strong&gt; Pass the &lt;code&gt;PARSE_SERVER_LOGS_FOLDER&lt;/code&gt; environment variable when starting &lt;code&gt;parse-server&lt;/code&gt;. Usage :- &lt;code&gt;PARSE_SERVER_LOGS_FOLDER='&amp;lt;path-to-logs-folder&amp;gt;' parse-server --appId APPLICATION_ID --masterKey MASTER_KEY&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Want to log specific levels?&lt;/strong&gt; Pass the &lt;code&gt;logLevel&lt;/code&gt; parameter when starting &lt;code&gt;parse-server&lt;/code&gt;. Usage :- &lt;code&gt;parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --logLevel LOG_LEVEL&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Want new line delimited JSON error logs (for consumption by CloudWatch, Google Cloud Logging, etc)?&lt;/strong&gt; Pass the &lt;code&gt;JSON_LOGS&lt;/code&gt; environment variable when starting &lt;code&gt;parse-server&lt;/code&gt;. Usage :- &lt;code&gt;JSON_LOGS='1' parse-server --appId APPLICATION_ID --masterKey MASTER_KEY&lt;/code&gt;&lt;/p&gt; 
&lt;h1&gt;Deprecations&lt;/h1&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/parse-community/parse-server/raw/master/DEPRECATIONS.md"&gt;Deprecation Plan&lt;/a&gt; for an overview of deprecations and planned breaking changes.&lt;/p&gt; 
&lt;h1&gt;Live Query&lt;/h1&gt; 
&lt;p&gt;Live queries are meant to be used in real-time reactive applications, where just using the traditional query paradigm could cause several problems, like increased response time and high network and server usage. Live queries should be used in cases where you need to continuously update a page with fresh data coming from the database, which often happens in (but is not limited to) online games, messaging clients and shared to-do lists.&lt;/p&gt; 
&lt;p&gt;Take a look at &lt;a href="https://docs.parseplatform.org/parse-server/guide/#live-queries"&gt;Live Query Guide&lt;/a&gt;, &lt;a href="https://docs.parseplatform.org/parse-server/guide/#scalability"&gt;Live Query Server Setup Guide&lt;/a&gt; and &lt;a href="https://github.com/parse-community/parse-server/wiki/Parse-LiveQuery-Protocol-Specification"&gt;Live Query Protocol Specification&lt;/a&gt;. You can setup a standalone server or multiple instances for scalability (recommended).&lt;/p&gt; 
&lt;h1&gt;GraphQL&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://graphql.org/"&gt;GraphQL&lt;/a&gt;, developed by Facebook, is an open-source data query and manipulation language for APIs. In addition to the traditional REST API, Parse Server automatically generates a GraphQL API based on your current application schema. Parse Server also allows you to define your custom GraphQL queries and mutations, whose resolvers can be bound to your cloud code functions.&lt;/p&gt; 
&lt;h2&gt;Running&lt;/h2&gt; 
&lt;h3&gt;Using the CLI&lt;/h3&gt; 
&lt;p&gt;The easiest way to run the Parse GraphQL API is through the CLI:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ npm install -g parse-server mongodb-runner
$ mongodb-runner start
$ parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb://localhost/test --publicServerURL http://localhost:1337/parse --mountGraphQL --mountPlayground
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After starting the server, you can visit &lt;a href="http://localhost:1337/playground"&gt;http://localhost:1337/playground&lt;/a&gt; in your browser to start playing with your GraphQL API.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; Do &lt;em&gt;&lt;strong&gt;NOT&lt;/strong&gt;&lt;/em&gt; use --mountPlayground option in production. &lt;a href="https://github.com/parse-community/parse-dashboard"&gt;Parse Dashboard&lt;/a&gt; has a built-in GraphQL Playground and it is the recommended option for production apps.&lt;/p&gt; 
&lt;h3&gt;Using Docker&lt;/h3&gt; 
&lt;p&gt;You can also run the Parse GraphQL API inside a Docker container:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ git clone https://github.com/parse-community/parse-server
$ cd parse-server
$ docker build --tag parse-server .
$ docker run --name my-mongo -d mongo
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Running the Parse Server Image 
 &lt;!-- omit in toc --&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ docker run --name my-parse-server --link my-mongo:mongo -v config-vol:/parse-server/config -p 1337:1337 -d parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb://mongo/test --publicServerURL http://localhost:1337/parse --mountGraphQL --mountPlayground
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;If you want to use &lt;a href="https://docs.parseplatform.org/cloudcode/guide/"&gt;Cloud Code&lt;/a&gt;, add &lt;code&gt;-v cloud-code-vol:/parse-server/cloud --cloud /parse-server/cloud/main.js&lt;/code&gt; to the command above. Make sure &lt;code&gt;main.js&lt;/code&gt; is in the &lt;code&gt;cloud-code-vol&lt;/code&gt; directory before starting Parse Server.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;After starting the server, you can visit &lt;a href="http://localhost:1337/playground"&gt;http://localhost:1337/playground&lt;/a&gt; in your browser to start playing with your GraphQL API.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; Do &lt;em&gt;&lt;strong&gt;NOT&lt;/strong&gt;&lt;/em&gt; use --mountPlayground option in production. &lt;a href="https://github.com/parse-community/parse-dashboard"&gt;Parse Dashboard&lt;/a&gt; has a built-in GraphQL Playground and it is the recommended option for production apps.&lt;/p&gt; 
&lt;h3&gt;Using Express.js&lt;/h3&gt; 
&lt;p&gt;You can also mount the GraphQL API in an Express.js application together with the REST API or solo. You first need to create a new project and install the required dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ mkdir my-app
$ cd my-app
$ npm install parse-server express --save
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, create an &lt;code&gt;index.js&lt;/code&gt; file with the following content:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const express = require('express');
const { ParseServer, ParseGraphQLServer } = require('parse-server');

const app = express();

const parseServer = new ParseServer({
  databaseURI: 'mongodb://localhost:27017/test',
  appId: 'APPLICATION_ID',
  masterKey: 'MASTER_KEY',
  serverURL: 'http://localhost:1337/parse',
  publicServerURL: 'http://localhost:1337/parse'
});

const parseGraphQLServer = new ParseGraphQLServer(
  parseServer,
  {
    graphQLPath: '/graphql',
    playgroundPath: '/playground'
  }
);

app.use('/parse', parseServer.app); // (Optional) Mounts the REST API
parseGraphQLServer.applyGraphQL(app); // Mounts the GraphQL API
parseGraphQLServer.applyPlayground(app); // (Optional) Mounts the GraphQL Playground - do NOT use in Production

await parseServer.start();
app.listen(1337, function() {
  console.log('REST API running on http://localhost:1337/parse');
  console.log('GraphQL API running on http://localhost:1337/graphql');
  console.log('GraphQL Playground running on http://localhost:1337/playground');
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And finally start your app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ npx mongodb-runner start
$ node index.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After starting the app, you can visit &lt;a href="http://localhost:1337/playground"&gt;http://localhost:1337/playground&lt;/a&gt; in your browser to start playing with your GraphQL API.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; Do &lt;em&gt;&lt;strong&gt;NOT&lt;/strong&gt;&lt;/em&gt; mount the GraphQL Playground in production. &lt;a href="https://github.com/parse-community/parse-dashboard"&gt;Parse Dashboard&lt;/a&gt; has a built-in GraphQL Playground and it is the recommended option for production apps.&lt;/p&gt; 
&lt;h2&gt;Checking the API health&lt;/h2&gt; 
&lt;p&gt;Run the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-graphql"&gt;query Health {
  health
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should receive the following response:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "data": {
    "health": true
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Creating your first class&lt;/h2&gt; 
&lt;p&gt;Since your application does not have any schema yet, you can use the &lt;code&gt;createClass&lt;/code&gt; mutation to create your first class. Run the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-graphql"&gt;mutation CreateClass {
  createClass(
    name: "GameScore"
    schemaFields: {
      addStrings: [{ name: "playerName" }]
      addNumbers: [{ name: "score" }]
      addBooleans: [{ name: "cheatMode" }]
    }
  ) {
    name
    schemaFields {
      name
      __typename
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should receive the following response:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "data": {
    "createClass": {
      "name": "GameScore",
      "schemaFields": [
        {
          "name": "objectId",
          "__typename": "SchemaStringField"
        },
        {
          "name": "updatedAt",
          "__typename": "SchemaDateField"
        },
        {
          "name": "createdAt",
          "__typename": "SchemaDateField"
        },
        {
          "name": "playerName",
          "__typename": "SchemaStringField"
        },
        {
          "name": "score",
          "__typename": "SchemaNumberField"
        },
        {
          "name": "cheatMode",
          "__typename": "SchemaBooleanField"
        },
        {
          "name": "ACL",
          "__typename": "SchemaACLField"
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using automatically generated operations&lt;/h2&gt; 
&lt;p&gt;Parse Server learned from the first class that you created and now you have the &lt;code&gt;GameScore&lt;/code&gt; class in your schema. You can now start using the automatically generated operations!&lt;/p&gt; 
&lt;p&gt;Run the following to create your first object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-graphql"&gt;mutation CreateGameScore {
  createGameScore(
    fields: {
      playerName: "Sean Plott"
      score: 1337
      cheatMode: false
    }
  ) {
    id
    updatedAt
    createdAt
    playerName
    score
    cheatMode
    ACL
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should receive a response similar to this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "data": {
    "createGameScore": {
      "id": "XN75D94OBD",
      "updatedAt": "2019-09-17T06:50:26.357Z",
      "createdAt": "2019-09-17T06:50:26.357Z",
      "playerName": "Sean Plott",
      "score": 1337,
      "cheatMode": false,
      "ACL": null
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also run a query to this new class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-graphql"&gt;query GameScores {
  gameScores {
    results {
      id
      updatedAt
      createdAt
      playerName
      score
      cheatMode
      ACL
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should receive a response similar to this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "data": {
    "gameScores": {
      "results": [
        {
          "id": "XN75D94OBD",
          "updatedAt": "2019-09-17T06:50:26.357Z",
          "createdAt": "2019-09-17T06:50:26.357Z",
          "playerName": "Sean Plott",
          "score": 1337,
          "cheatMode": false,
          "ACL": null
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Customizing your GraphQL Schema&lt;/h2&gt; 
&lt;p&gt;Parse GraphQL Server allows you to create a custom GraphQL schema with own queries and mutations to be merged with the auto-generated ones. You can resolve these operations using your regular cloud code functions.&lt;/p&gt; 
&lt;p&gt;To start creating your custom schema, you need to code a &lt;code&gt;schema.graphql&lt;/code&gt; file and initialize Parse Server with &lt;code&gt;--graphQLSchema&lt;/code&gt; and &lt;code&gt;--cloud&lt;/code&gt; options:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb://localhost/test --publicServerURL http://localhost:1337/parse --cloud ./cloud/main.js --graphQLSchema ./cloud/schema.graphql --mountGraphQL --mountPlayground
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Creating your first custom query 
 &lt;!-- omit in toc --&gt;&lt;/h3&gt; 
&lt;p&gt;Use the code below for your &lt;code&gt;schema.graphql&lt;/code&gt; and &lt;code&gt;main.js&lt;/code&gt; files. Then restart your Parse Server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-graphql"&gt;# schema.graphql
extend type Query {
  hello: String! @resolve
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// main.js
Parse.Cloud.define('hello', async () =&amp;gt; {
  return 'Hello world!';
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can now run your custom query using GraphQL Playground:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-graphql"&gt;query {
  hello
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should receive the response below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "data": {
    "hello": "Hello world!"
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Learning more&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="http://docs.parseplatform.org/graphql/guide/"&gt;Parse GraphQL Guide&lt;/a&gt; is a very good source for learning how to use the Parse GraphQL API.&lt;/p&gt; 
&lt;p&gt;You also have a very powerful tool inside your GraphQL Playground. Please look at the right side of your GraphQL Playground. You will see the &lt;code&gt;DOCS&lt;/code&gt; and &lt;code&gt;SCHEMA&lt;/code&gt; menus. They are automatically generated by analyzing your application schema. Please refer to them and learn more about everything that you can do with your Parse GraphQL API.&lt;/p&gt; 
&lt;p&gt;Additionally, the &lt;a href="https://graphql.org/learn/"&gt;GraphQL Learn Section&lt;/a&gt; is a very good source to learn more about the power of the GraphQL language.&lt;/p&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;Please see the &lt;a href="https://raw.githubusercontent.com/parse-community/parse-server/alpha/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Contributors&lt;/h1&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute... we'd love to see your face on this list!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/parse-community/graphs/contributors"&gt;&lt;img src="https://opencollective.com/parse-server/contributors.svg?width=890&amp;amp;button=false" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Sponsors&lt;/h1&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. &lt;a href="https://opencollective.com/parse-server#sponsor"&gt;Become a sponsor!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/parse-server/sponsor/0/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/0/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/1/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/1/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/2/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/2/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/3/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/3/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/4/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/4/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/5/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/5/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/6/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/6/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/7/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/7/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/8/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/8/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/9/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/9/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/10/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/10/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/11/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/11/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/12/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/12/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/13/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/13/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/14/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/14/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/15/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/15/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/16/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/16/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/17/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/17/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/18/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/18/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/19/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/19/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/20/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/20/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/21/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/21/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/22/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/22/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/23/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/23/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/24/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/24/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/25/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/25/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/26/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/26/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/27/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/27/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/28/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/28/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/parse-server/sponsor/29/website" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/sponsor/29/avatar.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Backers&lt;/h1&gt; 
&lt;p&gt;Support us with a monthly donation and help us continue our activities. &lt;a href="https://opencollective.com/parse-server#backer"&gt;Become a backer!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/parse-server#backers" target="_blank"&gt;&lt;img src="https://opencollective.com/parse-server/backers.svg?width=890" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[server-options] &lt;a href="http://parseplatform.org/parse-server/api/release/ParseServerOptions.html"&gt;http://parseplatform.org/parse-server/api/release/ParseServerOptions.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>qist/tvbox</title>
      <link>https://github.com/qist/tvbox</link>
      <description>&lt;p&gt;OK影视、tvbox配置文件，如果喜欢，请Fork自用。使用前请仔细阅读仓库说明，一旦使用将被视为你已了解。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;OK影视、TVBox、猫影视配置文件。所有资源均来自于各路大神无私分享，如有侵权，请联系删除。&lt;/p&gt; 
&lt;p&gt;所有以任何方式查看本仓库内容的人、或直接或间接使用本仓库内容的使用者都应仔细阅读此声明。本仓库管理者保留随时更改或补充此免责声明的权利。一旦使用、复制、修改了本仓库内容，则视为您已接受此免责声明。&lt;/p&gt; 
&lt;p&gt;本仓库管理者不能保证本仓库内容的合法性、准确性、完整性和有效性，请根据情况自行判断。本仓库内容，仅用于测试和学习研究，禁止用于商业用途，不得将其用于违反国家、地区、组织等的法律法规或相关规定的其他用途，禁止任何公众号、自媒体进行任何形式的转载、发布，请不要在中华人民共和国境内使用本仓库内容，否则后果自负。&lt;/p&gt; 
&lt;p&gt;本仓库内容中涉及的第三方硬件、软件等，与本仓库内容没有任何直接或间接的关系。本仓库内容仅对部署和使用过程进行客观描述，不代表支持使用任何第三方硬件、软件。使用任何第三方硬件、软件，所造成的一切后果由使用的个人或组织承担，与本仓库内容无关。&lt;/p&gt; 
&lt;p&gt;所有直接或间接使用本仓库内容的个人和组织，应 24 小时内完成学习和研究，并及时删除本仓库内容。如对本仓库内容的功能有需求，应自行开发相关功能。所有基于本仓库内容的源代码，进行的任何修改，为其他个人或组织的自发行为，与本仓库内容没有任何直接或间接的关系，所造成的一切后果亦与本仓库内容和本仓库管理者无关。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;tvbox配置：&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;（1）0707.json OK影视多线配置接口,仅适用于Fengmi影视；&lt;/p&gt; 
&lt;p&gt;（2）0821.json 大而全的配置，在饭太硬配置的基础上添加了若干优质点播源、直播线路和解析；&lt;/p&gt; 
&lt;p&gt;（3）0822.json 极简配置，OK大佬的jar，还包括几条路飞、俊于的源。&lt;/p&gt; 
&lt;p&gt;（4）0825.json 小而精的配置，jar包来源于Panda Groove的go包，其中泥巴、星星等，需要替换成自己的代理url；&lt;/p&gt; 
&lt;p&gt;（5）0826.json 完全来源于饭太硬的jar包和配置；&lt;/p&gt; 
&lt;p&gt;（6）0827.json jar包和配置来源于fongmi；&lt;/p&gt; 
&lt;p&gt;（7）0828.json jar包和配置来源于唐三；&lt;/p&gt; 
&lt;p&gt;（8）js.json jar包来源于Panda Groove的go包，资源来源于道长drpy(js)仓库 添加 YouTube 直播；&lt;/p&gt; 
&lt;p&gt;（9）XBPQ.json XBPQ源，jar包和配置来源于小米小爆脾气；&lt;/p&gt; 
&lt;p&gt;（10）XYQ.json XYQ源，jar包和配置来源于香雅情；&lt;/p&gt; 
&lt;p&gt;（11）cat.json cat源，资源来源于网络各路大佬。/cat/js配合猫影视可直接食用；&lt;/p&gt; 
&lt;p&gt;（12） jsm.json 来自js.json + 0826.json 合集 家庭电视可用 删除YouTube 直播，OK影视 可用 电视建议使用OK影视 &lt;a href="https://github.com/FongMi/Release"&gt;https://github.com/FongMi/Release&lt;/a&gt; 支持多直播选择。&lt;/p&gt; 
&lt;p&gt;猫影视使用github 配置&lt;/p&gt; 
&lt;p&gt;配置教程：&lt;a href="https://omii.top/1296.html"&gt;https://omii.top/1296.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;注意使用Gitee或Github导入，并设置为私有仓库，CatVodOpen仅支持私有仓库跟dav&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;V1.1.3版本以上&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;github://Token@github.com/xxxxx/tvbox/dist/index.js.md5&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;改动&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;quickjs改为nodejs，proxy设置修改&lt;/li&gt; 
 &lt;li&gt;在ios上无法使用local，使用db替换local所有方法&lt;/li&gt; 
 &lt;li&gt;nodejs 的优势在于更加灵活&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;V1.1.2版本以下&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;github://Token@gitee.com/xxxxx/tvbox/js/open_config.json&lt;/code&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;APP推荐:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;（1）OK影视版本 项目地址：&lt;a href="https://github.com/FongMi/TV"&gt;https://github.com/FongMi/TV&lt;/a&gt; 支持直播多线路、自动换源、直播倍速，手机投屏；&lt;/p&gt; 
&lt;p&gt;（2）q215613905版本 项目地址：&lt;a href="https://github.com/q215613905/TVBoxOS"&gt;https://github.com/q215613905/TVBoxOS&lt;/a&gt; 支持直播回放；&lt;/p&gt; 
&lt;p&gt;（3）takagen99版本 项目地址：&lt;a href="https://github.com/takagen99/Box"&gt;https://github.com/takagen99/Box&lt;/a&gt; 支持直播回放，界面美观；&lt;/p&gt; 
&lt;p&gt;（4）皮皮虾版本 发布频道：&lt;a href="https://t.me/pipixiawerun"&gt;https://t.me/pipixiawerun&lt;/a&gt; 支持直播回放，支持弹幕；&lt;/p&gt; 
&lt;p&gt;（5）新版猫影视 项目地址：&lt;a href="https://github.com/catvod/CatVodOpen"&gt;https://github.com/catvod/CatVodOpen&lt;/a&gt; 界面简洁，支持多平台。&lt;/p&gt; 
&lt;p&gt;（6）手机版本 项目地址：&lt;a href="https://github.com/XiaoRanLiu3119/TVBoxOS-Mobile"&gt;https://github.com/XiaoRanLiu3119/TVBoxOS-Mobile&lt;/a&gt; 竖屏&lt;/p&gt; 
&lt;p&gt;（7）q215613905 takagen99 编译apk 项目地址：&lt;a href="https://github.com/o0HalfLife0o/TVBoxOSC"&gt;https://github.com/o0HalfLife0o/TVBoxOSC&lt;/a&gt;&lt;/p&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;TVBox各路大佬配置（排名不分先后）：&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;（1）饭太硬：&lt;a href="http://www.%E9%A5%AD%E5%A4%AA%E7%A1%AC.top/tv/"&gt;http://www.饭太硬.top/tv/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（2）okjack：&lt;a href="https://jihulab.com/okcaptain/kko/raw/main/ok.txt"&gt;https://jihulab.com/okcaptain/kko/raw/main/ok.txt&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（3）王二小放牛娃：&lt;a href="http://tvbox.%E7%8E%8B%E4%BA%8C%E5%B0%8F%E6%94%BE%E7%89%9B%E5%A8%83.xyz"&gt;http://tvbox.王二小放牛娃.xyz&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（4）摸鱼儿：&lt;a href="http://%E6%88%91%E4%B8%8D%E6%98%AF.%E6%91%B8%E9%B1%BC%E5%84%BF.top"&gt;http://我不是.摸鱼儿.top&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（5）霜辉月明py：&lt;a href="https://999740.xyz/raw.githubusercontent.com/lm317379829/PyramidStore/pyramid/py.json"&gt;https://999740.xyz/raw.githubusercontent.com/lm317379829/PyramidStore/pyramid/py.json&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（6）小米小爆脾气：&lt;a href="http://xhww.fun/%E5%B0%8F%E7%B1%B3/DEMO.json"&gt;http://xhww.fun/小米/DEMO.json&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（7）南风：&lt;a href="https://agit.ai/Yoursmile7/TVBox/raw/branch/master/XC.json"&gt;https://agit.ai/Yoursmile7/TVBox/raw/branch/master/XC.json&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（8）神器：&lt;a href="https://%E7%A5%9E%E5%99%A8%E6%AF%8F%E6%97%A5%E6%8E%A8%E9%80%81.tk/pz.json"&gt;https://神器每日推送.tk/pz.json&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（9）巧技：&lt;a href="http://pandown.pro/tvbox/tvbox.json"&gt;http://pandown.pro/tvbox/tvbox.json&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（10）Ray：&lt;a href="https://100km.top/0"&gt;https://100km.top/0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（11）俊于：&lt;a href="http://home.jundie.top:81/top98.json"&gt;http://home.jundie.top:81/top98.json&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（12）橘子柚：&lt;a href="https://mirror.ghproxy.com/https://raw.githubusercontent.com/hackyjso/box/main/jzy.txt"&gt;https://mirror.ghproxy.com/https://raw.githubusercontent.com/hackyjso/box/main/jzy.txt&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（13）电视（自用）： &lt;a href="https://github.moeyy.xyz/raw.githubusercontent.com/qist/tvbox/master/jsm.json"&gt;https://github.moeyy.xyz/raw.githubusercontent.com/qist/tvbox/master/jsm.json&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（14）github代理地址： &lt;code&gt;https://github.moeyy.xyz https://mirror.ghproxy.com/ https://gh-proxy.com https://ghproxy.net&lt;/code&gt; 选择一个速度快使用&lt;/p&gt; 
&lt;p&gt;（15） 还可以使用域名: &lt;code&gt;https://qist.ugigc.dpdns.org/jsm.json&lt;/code&gt; cloudflare Pages 构建&lt;/p&gt; 
&lt;p&gt;（16） 添加潇洒 接口： &lt;a href="https://raw.githubusercontent.com/qist/tvbox/refs/heads/master/xiaosa/api.json"&gt;https://raw.githubusercontent.com/qist/tvbox/refs/heads/master/xiaosa/api.json&lt;/a&gt; 或者 &lt;a href="https://qist.ugigc.dpdns.org/xiaosa/api.json"&gt;https://qist.ugigc.dpdns.org/xiaosa/api.json&lt;/a&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;token.json格式说明：&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;模板文件json/tokentemplate.json&lt;/p&gt; 
&lt;p&gt;特别警告：据传阿里要求使用者不得使用多线程加速方式使用阿里云盘资源，若并发连接数超过10有可能导致被限制访问或封禁帐号的处理，所以下方线程限制设置超过10所需承担的风险请使用者自行斟酌。&lt;/p&gt; 
&lt;p&gt;特别警告2：迅雷云盘限制极为严格，不要尝试单token多用户异地使用，或多线程使用，随时可能封号。&lt;/p&gt; 
&lt;p&gt;可以透过配置中的“网盘及弹幕配置”的视频源来实现快捷方便的获取32位token及opentoken的功能。在“网盘及弹幕配置”中扫过任何一个OpenToken后，会自动激活“转存原画”功能&lt;/p&gt; 
&lt;p&gt;提示：如果遇到极速GO原画反复快速报错，不一定是被封号，可尝试杀掉播放器重启，或重启整个播放设备解决。&lt;/p&gt; 
&lt;p&gt;提示2：如果遇到“转存原画”速度被限制在2M左右，那麽请尝试在阿里云盘APP里退出登录，然后重新登录，然后删除播放设备SD卡的TV目&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
"token":"这里填写阿里云盘的32位token,也可以不填写,在播放阿里云盘属性时会弹出窗口,点击QrCode,用阿里云盘app扫码",
"open_token":"这里填写通过alist或其他openapi提供方申请的280位aliyun openapi token,也可以不写,会自动隐藏转存原画",
"thread_limit":32,//这里是阿里云盘的GO代理的并发协程数或java代理的并发线程数,若遇到账号被限制并发数,请将此数值改为10
"is_vip":true,//是否是阿里云盘的VIP用户,设置为true后,使用vip_thread_limit设置的数值来并发加速。如本设置项目不是true,则自动隐藏"转存原画"
"vip_thread_limit":10,//这里是阿里云盘的转存原画（OpenToken）并发线程数,若遇到账号被限制并发数,请将此数值改为10
"quark_thread_limit":32,//这里是夸克网盘GO代理的并发协程数或java代理的并发线程数,若遇到账号被限制并发数,请将此数值改为10
"quark_vip_thread_limit":16,//这里是夸克网盘设置quark_is_vip:true之后的并发线程数,若遇到账号被限制并发数,请将此数值改为10
"quark_is_vip":false,//是否是夸克网盘的VIP用户,设置为true后,线程数受quark_vip_thread_limit控制
"vod_flags":"4k|4kz|auto",//这里是播放阿里云的画质选项,4k代表不转存原画（GO原画）,4kz代表转存原画,其他都代表预览画质,可选的预览画质包括qhd,fhd,hd,sd,ld,
"quark_flags":"4kz|auto",//这里是播放夸克网盘的画质选项,4kz代表转存原画（GO原画）,其他都代表转码画质,可选的预览画质包括4k,2k,super,high,low,normal
"uc_thread_limit":0,
"uc_is_vip":false,
"uc_flags":"4kz|auto",
"uc_vip_thread_limit":0,
"thunder_thread_limit":0,
"thunder_is_vip":false,
"thunder_vip_thread_limit":0,
"thunder_flags":"4k|4kz|auto",
"aliproxy":"这里填写外部的加速代理,用于在盒子性能不够的情况下,使用外部的加速代理来加速播放,可以不填写",
"proxy":"这里填写用于科学上网的地址,连接openapi或某些资源站可能会需要用到,可以不填写",
"open_api_url":"https://api.xhofe.top/alist/ali_open/token",//这是alist的openapi接口地址,也可使用其他openapi提供商的地址。
"danmu":true,//是否全局开启阿里云盘所有csp的弹幕支持,聚合类CSP仍需单独设置,例如Wogg,Wobg
"quark_danmu":true,//是否全局开启夸克网盘的所有csp的弹幕支持,聚合类CSP仍需单独设置,例如Wogg,Wobg
"quark_cookie":"这里填写通过https://pan.quark.cn网站获取到的cookie,会很长,全数填入即可。"
"uc_cookie":"这里填写通过https://drive.uc.cn网站登录获取的cookie",
"thunder_username":"这里填入用户名或手机号,如果是手机号,记得是类似'+86 139123457'这样的格式,+86后有空格才对",
"thunder_password":"密码",
"thunder_captchatoken":"首次使用迅雷网盘时,需要使用app弹出的登陆地址去接码登录,并获取captchaToken,具体方法参考alist网站的文档:https://alist.nn.ci/zh/guide/drivers/thunder.html",
"pikpak_username":"PikPak网盘的用户名",
"pikpak_password":"PikPak网盘的密码",
"pikpak_flags":"4k|auto",
"pikpak_thread_limit":2,
"pikpak_vip_thread_limit":2,
"pikpak_proxy":"用于科学上网连接PikPak网盘的代理服务器地址"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;自用仓库，如果喜欢，请Fork自用，谢谢！&lt;/p&gt; 
&lt;p&gt;尽自己所能更新，不保证配置的有效性和时效性。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>is-a-dev/register</title>
      <link>https://github.com/is-a-dev/register</link>
      <description>&lt;p&gt;Grab your own sweet-looking '.is-a.dev' subdomain.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img alt="is-a.dev Banner" src="https://raw.githubusercontent.com/is-a-dev/register/main/media/banner.png" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img alt="Domains" src="https://img.shields.io/github/directory-file-count/is-a-dev/register/domains?color=5c46eb&amp;amp;label=domains&amp;amp;style=for-the-badge" /&gt; &lt;img alt="Open Pull Requests" src="https://img.shields.io/github/issues-raw/is-a-dev/register?color=5c46eb&amp;amp;label=issues&amp;amp;style=for-the-badge" /&gt; &lt;img alt="Open Issues" src="https://img.shields.io/github/issues-pr-raw/is-a-dev/register?color=5c46eb&amp;amp;label=pull%20requests&amp;amp;style=for-the-badge" /&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;is-a.dev&lt;/h1&gt; 
&lt;p align="center"&gt;&lt;strong&gt;is-a.dev&lt;/strong&gt; is a service that allows developers to get a sweet-looking &lt;code&gt;.is-a.dev&lt;/code&gt; subdomain for their personal websites.&lt;/p&gt; 
&lt;h2&gt;Announcements &amp;amp; Status Updates&lt;/h2&gt; 
&lt;p&gt;Please join our &lt;a href="https://discord.gg/is-a-dev-830872854677422150"&gt;Discord server&lt;/a&gt; for announcements, updates &amp;amp; upgrades, and downtime notifications regarding the service. Not all of these will be posted on GitHub[^1], however they will always be posted in our Discord server.&lt;/p&gt; 
&lt;p&gt;[^1]: We usually only post announcements on GitHub in the case of a serious incident. In that case, you'll likely see it at the top of this README file.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/is-a-dev-830872854677422150"&gt;&lt;img alt="Discord Server" src="https://invidget.wdh.app/is-a-dev-830872854677422150" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Register&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If you want a visual guide, check out &lt;a href="https://wdh.gg/tX3ghge"&gt;this blog post&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/is-a-dev/register/fork"&gt;Fork&lt;/a&gt; this repository.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.is-a.dev"&gt;Read the documentation&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;If you are applying for NS records please read &lt;a href="https://raw.githubusercontent.com/is-a-dev/register/main/#ns-records"&gt;this&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Your pull request will be reviewed and merged. &lt;em&gt;Keep an eye on it in case changes are needed!&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;After the pull request is merged, your DNS records should be published with-in a few minutes.&lt;/li&gt; 
 &lt;li&gt;Enjoy your new &lt;code&gt;.is-a.dev&lt;/code&gt; subdomain! Please consider leaving us a star ⭐️ to help support us!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;NS Records&lt;/h3&gt; 
&lt;p&gt;When applying for NS records, please be aware we already support a &lt;a href="https://docs.is-a.dev/faq/#which-dns-record-types-are-supported"&gt;wide range of DNS records&lt;/a&gt;, so you likely do not need them.&lt;/p&gt; 
&lt;p&gt;In your PR, please explain why you need NS records, including examples, to help mitigate potential abuse. Refer to the &lt;a href="https://docs.is-a.dev/faq/#who-can-use-ns-records"&gt;FAQ&lt;/a&gt; for guidelines on allowed usage.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Pull requests adding NS records without sufficient reasoning will be closed.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Also see: &lt;a href="https://docs.is-a.dev/faq/#why-are-ns-records-restricted"&gt;Why are NS records restricted?&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Report Abuse&lt;/h2&gt; 
&lt;p&gt;If you find any subdomains being used for abusive purposes, please report them by &lt;a href="https://github.com/is-a-dev/register/issues/new?assignees=&amp;amp;labels=report-abuse&amp;amp;projects=&amp;amp;template=report-abuse.md&amp;amp;title=Report+abuse"&gt;creating an issue&lt;/a&gt; with the relevant evidence.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;We are proud to announce that we are supported by Cloudflare's &lt;a href="https://www.cloudflare.com/lp/project-alexandria"&gt;Project Alexandria&lt;/a&gt; sponsorship program. We would not be able to operate without their help! 💖&lt;/p&gt; 
&lt;a href="https://www.cloudflare.com"&gt; &lt;img alt="Cloudflare Logo" src="https://raw.githubusercontent.com/is-a-dev/register/main/media/cloudflare.png" height="96" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>evershopcommerce/evershop</title>
      <link>https://github.com/evershopcommerce/evershop</link>
      <description>&lt;p&gt;🛍️ Typescript E-commerce Platform&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img width="60" height="68" alt="EverShop Logo" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/logo-green.png" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;EverShop&lt;/h1&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://evershop.io/docs/development/getting-started/introduction"&gt;Documentation&lt;/a&gt; | &lt;a href="https://demo.evershop.io/"&gt;Demo&lt;/a&gt; &lt;/h4&gt; 
&lt;p align="center"&gt; &lt;img src="https://github.com/evershopcommerce/evershop/actions/workflows/build_test.yml/badge.svg?sanitize=true" alt="Github Action" /&gt; &lt;a href="https://twitter.com/evershopjs"&gt; &lt;img alt="Twitter Follow" src="https://img.shields.io/twitter/follow/evershopjs?style=social" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/GSzt7dt7RM"&gt; &lt;img src="https://img.shields.io/discord/757179260417867879?label=discord" alt="Discord" /&gt; &lt;/a&gt; &lt;a href="https://opensource.org/licenses/GPL-3.0"&gt; &lt;img src="https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true" alt="License" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img alt="EverShop" width="950" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/banner.png" /&gt; &lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;EverShop is a modern, TypeScript-first eCommerce platform built with GraphQL and React. Designed for developers, it offers essential commerce features in a modular, fully customizable architecture—perfect for building tailored shopping experiences with confidence and speed.&lt;/p&gt; 
&lt;h2&gt;Installation Using Docker&lt;/h2&gt; 
&lt;p&gt;You can get started with EverShop in minutes by using the Docker image. The Docker image is a great way to get started with EverShop without having to worry about installing dependencies or configuring your environment.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSL https://raw.githubusercontent.com/evershopcommerce/evershop/main/docker-compose.yml &amp;gt; docker-compose.yml
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the full installation guide, please refer to our &lt;a href="https://evershop.io/docs/development/getting-started/installation-guide"&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/getting-started/installation-guide"&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/module/create-your-first-extension"&gt;Extension development&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/theme/theme-overview"&gt;Theme development&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;Explore our demo store.&lt;/p&gt; 
&lt;p align="left"&gt; &lt;a href="https://demo.evershop.io/admin" target="_blank"&gt; &lt;img alt="EverShop Admin Demo" height="35" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-back.png" /&gt; &lt;/a&gt; &lt;a href="https://demo.evershop.io/" target="_blank"&gt; &lt;img alt="EverShop Store Demo" height="35" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-front.png" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;b&gt;Demo user:&lt;/b&gt; 
&lt;p&gt;Email: &lt;a href="mailto:demo@evershop.io"&gt;demo@evershop.io&lt;/a&gt;&lt;br /&gt; Password: 123456&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you like my work, feel free to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;⭐ this repository. It helps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fevershopcommerce%2Fevershop&amp;amp;text=Awesome%20React%20Ecommerce%20Project&amp;amp;hashtags=react,ecommerce,expressjs,graphql"&gt;&lt;img src="https://img.shields.io/twitter/url/http/shields.io.svg?style=social" alt="Tweet" /&gt;&lt;/a&gt; about EverShop. Thank you!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;EverShop is an open-source project. We are committed to a fully transparent development process and appreciate highly any contributions. Whether you are helping us fix bugs, proposing new features, improving our documentation or spreading the word - we would love to have you as part of the EverShop community.&lt;/p&gt; 
&lt;h3&gt;Ask a question about EverShop&lt;/h3&gt; 
&lt;p&gt;You can ask questions, and participate in discussions about EverShop-related topics in the EverShop Discord channel.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/GSzt7dt7RM"&gt;&lt;img src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/discord_banner_github.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Create a bug report&lt;/h3&gt; 
&lt;p&gt;If you see an error message or run into an issue, please &lt;a href="https://github.com/evershopcommerce/evershop/issues/new"&gt;create bug report&lt;/a&gt;. This effort is valued and it will help all EverShop users.&lt;/p&gt; 
&lt;h3&gt;Submit a feature request&lt;/h3&gt; 
&lt;p&gt;If you have an idea, or you're missing a capability that would make development easier and more robust, please &lt;a href="https://github.com/evershopcommerce/evershop/issues/new"&gt;Submit feature request&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If a similar feature request already exists, don't forget to leave a "+1". If you add some more information such as your thoughts and vision about the feature, your comments will be embraced warmly :)&lt;/p&gt; 
&lt;p&gt;Please refer to our &lt;a href="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/evershopcommerce/evershop/raw/main/LICENSE"&gt;GPL-3.0 License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>prettier/prettier</title>
      <link>https://github.com/prettier/prettier</link>
      <description>&lt;p&gt;Prettier is an opinionated code formatter.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://prettier.io"&gt;&lt;img src="https://unpkg.com/prettier-logo@1.0.3/images/prettier-banner-light.svg?sanitize=true" alt="Prettier Banner" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2 align="center"&gt;Opinionated Code Formatter&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;em&gt; JavaScript · TypeScript · Flow · JSX · JSON &lt;/em&gt; &lt;br /&gt; &lt;em&gt; CSS · SCSS · Less &lt;/em&gt; &lt;br /&gt; &lt;em&gt; HTML · Vue · Angular &lt;/em&gt; &lt;br /&gt; &lt;em&gt; GraphQL · Markdown · YAML &lt;/em&gt; &lt;br /&gt; &lt;em&gt; &lt;a href="https://prettier.io/docs/plugins"&gt; Your favorite language? &lt;/a&gt; &lt;/em&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/prettier/prettier/actions?query=branch%3Amain"&gt; &lt;img alt="CI Status" src="https://img.shields.io/github/check-runs/prettier/prettier/main?style=flat-square&amp;amp;label=CI" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/prettier/prettier"&gt; &lt;img alt="Coverage Status" src="https://img.shields.io/codecov/c/github/prettier/prettier.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://x.com/acdlite/status/974390255393505280"&gt; &lt;img alt="Blazing Fast" src="https://img.shields.io/badge/speed-blazing%20%F0%9F%94%A5-brightgreen.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://www.npmjs.com/package/prettier"&gt; &lt;img alt="npm version" src="https://img.shields.io/npm/v/prettier.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/prettier"&gt; &lt;img alt="weekly downloads from npm" src="https://img.shields.io/npm/dw/prettier.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://github.com/prettier/prettier#badge"&gt; &lt;img alt="code style: prettier" src="https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://x.com/intent/follow?screen_name=PrettierCode"&gt; &lt;img alt="Follow Prettier on X" src="https://img.shields.io/badge/%40PrettierCode-9f9f9f?style=flat-square&amp;amp;logo=x&amp;amp;labelColor=555" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Intro&lt;/h2&gt; 
&lt;p&gt;Prettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary.&lt;/p&gt; 
&lt;h3&gt;Input&lt;/h3&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;foo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Output&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;foo(
  reallyLongArg(),
  omgSoManyParameters(),
  IShouldRefactorThis(),
  isThereSeriouslyAnotherOne(),
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Prettier can be run &lt;a href="https://prettier.io/docs/editors"&gt;in your editor&lt;/a&gt; on-save, in a &lt;a href="https://prettier.io/docs/precommit"&gt;pre-commit hook&lt;/a&gt;, or in &lt;a href="https://prettier.io/docs/cli#list-different"&gt;CI environments&lt;/a&gt; to ensure your codebase has a consistent style without devs ever having to post a nit-picky comment on a code review ever again!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://prettier.io/docs/"&gt;Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://prettier.io/docs/install"&gt;Install&lt;/a&gt; · &lt;a href="https://prettier.io/docs/options"&gt;Options&lt;/a&gt; · &lt;a href="https://prettier.io/docs/cli"&gt;CLI&lt;/a&gt; · &lt;a href="https://prettier.io/docs/api"&gt;API&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://prettier.io/playground/"&gt;Playground&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Badge&lt;/h2&gt; 
&lt;p&gt;Show the world you're using &lt;em&gt;Prettier&lt;/em&gt; → &lt;a href="https://github.com/prettier/prettier"&gt;&lt;img src="https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square" alt="code style: prettier" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/prettier/prettier/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SillyTavern/SillyTavern</title>
      <link>https://github.com/SillyTavern/SillyTavern</link>
      <description>&lt;p&gt;LLM Frontend for Power Users.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name="readme-top"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/01a6ae9a-16aa-45f2-8bff-32b5dc587e44" alt="" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-de_de.md"&gt;German&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-zh_cn.md"&gt;中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-zh_tw.md"&gt;繁體中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-ja_jp.md"&gt;日本語&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-ru_ru.md"&gt;Русский&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-ko_kr.md"&gt;한국어&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/SillyTavern/SillyTavern/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/SillyTavern/SillyTavern.svg?sanitize=true" alt="GitHub Stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SillyTavern/SillyTavern/forks"&gt;&lt;img src="https://img.shields.io/github/forks/SillyTavern/SillyTavern.svg?sanitize=true" alt="GitHub Forks" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SillyTavern/SillyTavern/issues"&gt;&lt;img src="https://img.shields.io/github/issues/SillyTavern/SillyTavern.svg?sanitize=true" alt="GitHub Issues" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SillyTavern/SillyTavern/pulls"&gt;&lt;img src="https://img.shields.io/github/issues-pr/SillyTavern/SillyTavern.svg?sanitize=true" alt="GitHub Pull Requests" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;SillyTavern provides a single unified interface for many LLM APIs (KoboldAI/CPP, Horde, NovelAI, Ooba, Tabby, OpenAI, OpenRouter, Claude, Mistral and more), a mobile-friendly layout, Visual Novel Mode, Automatic1111 &amp;amp; ComfyUI API image generation integration, TTS, WorldInfo (lorebooks), customizable UI, auto-translate, more prompt options than you'd ever want or need, and endless growth potential via third-party extensions.&lt;/p&gt; 
&lt;p&gt;We have a &lt;a href="https://docs.sillytavern.app/"&gt;Documentation website&lt;/a&gt; to answer most of your questions and help you get started.&lt;/p&gt; 
&lt;h2&gt;What is SillyTavern?&lt;/h2&gt; 
&lt;p&gt;SillyTavern (or ST for short) is a locally installed user interface that allows you to interact with text generation LLMs, image generation engines, and TTS voice models.&lt;/p&gt; 
&lt;p&gt;Beginning in February 2023 as a fork of TavernAI 1.2.8, SillyTavern now has over 200 contributors and 2 years of independent development under its belt, and continues to serve as a leading software for savvy AI hobbyists.&lt;/p&gt; 
&lt;h2&gt;Our Vision&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;We aim to empower users with as much utility and control over their LLM prompts as possible. The steep learning curve is part of the fun!&lt;/li&gt; 
 &lt;li&gt;We do not provide any online or hosted services, nor programmatically track any user data.&lt;/li&gt; 
 &lt;li&gt;SillyTavern is a passion project brought to you by a dedicated community of LLM enthusiasts, and will always be free and open sourced.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Do I need a powerful PC to run SillyTavern?&lt;/h2&gt; 
&lt;p&gt;The hardware requirements are minimal: it will run on anything that can run NodeJS 18 or higher. If you intend to do LLM inference on your local machine, we recommend a 3000-series NVIDIA graphics card with at least 6GB of VRAM, but actual requirements may vary depending on the model and backend you choose to use.&lt;/p&gt; 
&lt;h2&gt;Questions or suggestions?&lt;/h2&gt; 
&lt;h3&gt;Discord server&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;&lt;a href="https://discord.gg/sillytavern"&gt;&lt;img src="https://img.shields.io/discord/1100685673633153084?color=5865F2&amp;amp;label=discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=for-the-badge" alt="" /&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align="left"&gt;&lt;a href="https://discord.gg/sillytavern"&gt;Join our Discord community!&lt;/a&gt; Get support, share favorite characters and prompts.&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
&lt;/table&gt; 
&lt;p&gt;Or get in touch with the developers directly:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discord: cohee, rossascends, wolfsblvt&lt;/li&gt; 
 &lt;li&gt;Reddit: &lt;a href="https://www.reddit.com/user/RossAscends/"&gt;/u/RossAscends&lt;/a&gt;, &lt;a href="https://www.reddit.com/user/sillylossy/"&gt;/u/sillylossy&lt;/a&gt;, &lt;a href="https://www.reddit.com/user/Wolfsblvt/"&gt;u/Wolfsblvt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SillyTavern/SillyTavern/issues"&gt;Post a GitHub issue&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;I like your project! How do I contribute?&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Send pull requests. Learn how to contribute: &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Send feature suggestions and issue reports using the provided templates.&lt;/li&gt; 
 &lt;li&gt;Read this entire readme file and check the documentation website first, to avoid sending duplicate issues.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;img width="500" alt="image" src="https://github.com/user-attachments/assets/9b5f32f0-c3b3-4102-b3f5-0e9213c0f50f" /&gt; 
&lt;img width="500" alt="image" src="https://github.com/user-attachments/assets/913fdbaa-7d33-42f1-ae2c-89dca41c53d1" /&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;For detailed installation instructions, please visit our documentation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.sillytavern.app/installation/windows/"&gt;Windows Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.sillytavern.app/installation/linuxmacos/"&gt;MacOS/Linux Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.sillytavern.app/installation/android-(termux)/"&gt;Android (Termux) Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.sillytavern.app/installation/docker/"&gt;Docker Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License and credits&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TavernAI/TavernAI"&gt;TavernAI&lt;/a&gt; 1.2.8 by Humi: MIT License&lt;/li&gt; 
 &lt;li&gt;Portions of CncAnon's TavernAITurbo mod used with permission&lt;/li&gt; 
 &lt;li&gt;Visual Novel Mode inspired by the work of PepperTaco (&lt;a href="https://github.com/peppertaco/Tavern/"&gt;https://github.com/peppertaco/Tavern/&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Noto Sans font by Google (OFL license)&lt;/li&gt; 
 &lt;li&gt;Icon theme by Font Awesome &lt;a href="https://fontawesome.com"&gt;https://fontawesome.com&lt;/a&gt; (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)&lt;/li&gt; 
 &lt;li&gt;Default content by @OtisAlejandro (Seraphina character and lorebook) and @kallmeflocc (10K Discord Users Celebratory Background)&lt;/li&gt; 
 &lt;li&gt;Docker guide by &lt;a href="https://github.com/mrguymiah"&gt;@mrguymiah&lt;/a&gt; and &lt;a href="https://github.com/Bronya-Rand"&gt;@Bronya-Rand&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;kokoro-js library by &lt;a href="https://github.com/hexgrad"&gt;@hexgrad&lt;/a&gt; (Apache-2.0 License)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Top Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/SillyTavern/SillyTavern/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=SillyTavern/SillyTavern" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- LINK GROUP --&gt;</description>
    </item>
    
    <item>
      <title>asgeirtj/system_prompts_leaks</title>
      <link>https://github.com/asgeirtj/system_prompts_leaks</link>
      <description>&lt;p&gt;Collection of extracted System Prompts from popular chatbots like ChatGPT, Claude &amp; Gemini&lt;/p&gt;&lt;hr&gt;&lt;p&gt;NEW: 23 Aug 2025 &lt;a href="https://github.com/asgeirtj/system_prompts_leaks/raw/main/OpenAI/gpt-5-thinking.md"&gt;OpenAI/gpt-5-thinking.md &lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;System Prompts Leaks&lt;/h1&gt; 
&lt;p&gt;Collection of system message instructions for various publicly deployed chatbots.&lt;/p&gt; 
&lt;p&gt;Feel free to do PR's.&lt;/p&gt; 
&lt;p&gt;Please use discussions tabs for discussions not the Issues tab.&lt;/p&gt; 
&lt;p&gt;Discord username: asgeirtj&lt;br /&gt; X profile: &lt;a href="https://x.com/asgeirtj"&gt;https://x.com/asgeirtj&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#asgeirtj/system_prompts_leaks&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=asgeirtj/system_prompts_leaks&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PipedreamHQ/pipedream</title>
      <link>https://github.com/PipedreamHQ/pipedream</link>
      <description>&lt;p&gt;Connect APIs, remarkably fast. Free for developers.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://i.ibb.co/LPhXtH1/logo.png" alt="pipedream" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://pipedream.com/community"&gt;&lt;img src="https://img.shields.io/badge/discourse-forum-brightgreen.svg?style=flat-square&amp;amp;link=https%3A%2F%2Fpipedream.com%2Fcommunity)%5D(https://pipedream.com/community" /&gt;&lt;/a&gt; &lt;a href="https://pipedream.com/support"&gt;&lt;img src="https://img.shields.io/badge/-Join%20us%20on%20Slack-green?logo=slack&amp;amp;logoColor=34d28B&amp;amp;labelColor=150d11&amp;amp;color=34d28B&amp;amp;logoWidth=18&amp;amp;link=https%3A%2F%2Fpipedream.com%2Fsupport&amp;amp;link=https%3A%2F%2Fpipedream.com%2Fsupport)%5D(https://pipedream.com/support" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?original_referer=https%3A%2F%2Fpublish.twitter.com%2F%3FbuttonType%3DFollowButton%26query%3Dhttps%253A%252F%252Ftwitter.com%252Fpipedream%26widget%3DButton&amp;amp;ref_src=twsrc%5Etfw&amp;amp;region=follow_link&amp;amp;screen_name=pipedream&amp;amp;tw_p=followbutton"&gt;&lt;img src="https://img.shields.io/twitter/follow/pipedream?label=Follow%20%40pipedream&amp;amp;style=social" /&gt;&lt;/a&gt; &lt;a href="https://wellfound.com/company/pipedreamhq/jobs"&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%91%8B%F0%9F%8F%BC%20We're%20hiring!-Join%20us-brightgreen" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Pipedream is an integration platform for developers.&lt;/p&gt; 
&lt;p&gt;Pipedream provides a free, hosted platform for connecting apps and developing event-driven automations. The platform has over 1,000 fully-integrated applications, so you can use pre-built components to quickly send messages to Slack, add a new row to Google Sheets, and more. You can also run any Node.js, Python, Golang, or Bash code when you need custom logic. Pipedream has demonstrated SOC 2 compliance and can provide a SOC 2 Type 2 report upon request (please email &lt;a href="mailto:support@pipedream.com"&gt;support@pipedream.com&lt;/a&gt;).&lt;/p&gt; 
&lt;p align="center"&gt; &lt;br /&gt; &lt;img src="https://raw.githubusercontent.com/PipedreamHQ/pipedream/master/images/hero2.png" width="800px" alt="HTTP trigger + step selection menu" /&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;p&gt;This repo contains:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PipedreamHQ/pipedream/tree/master/components"&gt;The code for all pre-built integration components&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PipedreamHQ/pipedream/issues"&gt;The product roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PipedreamHQ/pipedream/tree/master/docs"&gt;The Pipedream docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;And other source code related to Pipedream.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This &lt;code&gt;README&lt;/code&gt; explains the key features of the platform and how to get started.&lt;/p&gt; 
&lt;p&gt;To get support, please visit &lt;a href="https://pipedream.com/support"&gt;https://pipedream.com/support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/PipedreamHQ/pipedream/master/#workflows"&gt;Workflows&lt;/a&gt; - Workflows run automations. Workflows are sequences of steps - pre-built actions or custom &lt;a href="https://pipedream.com/docs/code/nodejs/"&gt;Node.js&lt;/a&gt;, &lt;a href="https://pipedream.com/docs/code/python/"&gt;Python&lt;/a&gt;, &lt;a href="https://pipedream.com/docs/code/go/"&gt;Golang&lt;/a&gt;, or &lt;a href="https://pipedream.com/docs/code/bash/"&gt;Bash&lt;/a&gt; code - triggered by an event (HTTP request, timer, when a new row is added to a Google Sheets, and more).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/PipedreamHQ/pipedream/master/#event-sources"&gt;Event Sources&lt;/a&gt; - Sources trigger workflows. They emit events from services like GitHub, Slack, Airtable, RSS and &lt;a href="https://pipedream.com/apps"&gt;more&lt;/a&gt;. When you want to run a workflow when an event happens in any third-party app, you're using an event source.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/PipedreamHQ/pipedream/master/#actions"&gt;Actions&lt;/a&gt; - Actions are pre-built code steps that you can use in a workflow to perform common operations across Pipedream's 1,000+ API integrations. For example, you can use actions to send email, add a row to a Google Sheet, &lt;a href="https://pipedream.com/apps"&gt;and more&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/PipedreamHQ/pipedream/master/#code"&gt;Custom code&lt;/a&gt; - Most integrations require custom logic. Code is often the best way to express that logic, so Pipedream allows you to run any &lt;a href="https://pipedream.com/docs/code/nodejs/"&gt;Node.js&lt;/a&gt;, &lt;a href="https://pipedream.com/docs/code/python/"&gt;Python&lt;/a&gt;, &lt;a href="https://pipedream.com/docs/code/go/"&gt;Golang&lt;/a&gt;, or &lt;a href="https://pipedream.com/docs/code/bash/"&gt;Bash&lt;/a&gt; code. You can import any package from the languages' package managers, connect to any Pipedream connected app, and more. Pipedream is "low-code" in the best way: you can use pre-built components when you're performing common actions, but you can write custom code when you need to.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/PipedreamHQ/pipedream/master/#destinations"&gt;Destinations&lt;/a&gt; - Deliver events asynchronously to common destinations like Amazon S3, Snowflake, HTTP and email.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/PipedreamHQ/pipedream/master/#pricing"&gt;Free&lt;/a&gt; - No fees for individual developers (see &lt;a href="https://docs.pipedream.com/limits/"&gt;limits&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;Click the image below to watch a brief demo on YouTube.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;br /&gt; &lt;a href="https://bit.ly/3ytGgyR"&gt; &lt;img src="https://raw.githubusercontent.com/PipedreamHQ/pipedream/master/images/demo.png" width="800px" alt="Pipedream demo static image" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3&gt;Workflows&lt;/h3&gt; 
&lt;p&gt;Workflows are sequences of linear &lt;a href="https://pipedream.com/docs/workflows/steps"&gt;steps&lt;/a&gt; triggered by an event (like an HTTP request, or when a new row is added to a Google sheet). You can quickly develop complex automations using workflows and connect to any of our 1,000+ integrated apps.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pipedream.com/docs/quickstart/"&gt;See our workflow quickstart&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h3&gt;Event Sources&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://pipedream.com/docs/sources/"&gt;Event Sources&lt;/a&gt; watch for new data from services like GitHub, Slack, Airtable, RSS and &lt;a href="https://pipedream.com/apps"&gt;more&lt;/a&gt;. When a source finds a new event, it emits it, triggering any linked workflows.&lt;/p&gt; 
&lt;p&gt;You can also consume events emitted by sources using &lt;a href="https://pipedream.com/docs/api/rest/"&gt;Pipedream's REST API&lt;/a&gt; or a private, real-time &lt;a href="https://pipedream.com/docs/api/sse/"&gt;SSE stream&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When a pre-built source doesn't exist for your use case, &lt;a href="https://pipedream.com/docs/components/quickstart/nodejs/sources/"&gt;you can build your own&lt;/a&gt;. Here is the simplest event source: it exposes an HTTP endpoint you can send any request to, and prints the contents of the request when invoked:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;export default {
  name: "http",
  version: "0.0.1",
  props: {
    http: "$.interface.http",
  },
  run(event) {
    console.log(event); // event contains the method, payload, etc.
  },
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://pipedream.com/sources/new?app=http"&gt;&lt;img src="https://i.ibb.co/m0bBsSL/deploy-clean.png" height="35" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can find the code for all pre-built sources in &lt;a href="https://github.com/PipedreamHQ/pipedream/tree/master/components"&gt;the &lt;code&gt;components&lt;/code&gt; directory&lt;/a&gt;. If you find a bug or want to contribute a feature, &lt;a href="https://pipedream.com/docs/components/guidelines/#process"&gt;see our contribution guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Actions&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://pipedream.com/docs/components/actions/"&gt;Actions&lt;/a&gt; are pre-built code steps that you can use in a workflow to perform common operations across Pipedream's 500+ API integrations. For example, you can use actions to send email, add a row to a Google Sheet, &lt;a href="https://pipedream.com/apps"&gt;and more&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can &lt;a href="https://pipedream.com/docs/components/quickstart/nodejs/actions/"&gt;create your own actions&lt;/a&gt;, which you can re-use across workflows. You can also &lt;a href="https://pipedream.com/docs/components/guidelines/"&gt;publish actions to the entire Pipedream community&lt;/a&gt;, making them available for anyone to use.&lt;/p&gt; 
&lt;p&gt;Here's an action that accepts a &lt;code&gt;name&lt;/code&gt; as input and prints it to the workflow's logs:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;export default {
  name: "Action Demo",
  description: "This is a demo action",
  key: "action_demo",
  version: "0.0.1",
  type: "action",
  props: {
    name: {
      type: "string",
      label: "Name",
    },
  },
  async run() {
    return `hello ${this.name}!`;
  },
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can find the code for all pre-built actions in &lt;a href="https://github.com/PipedreamHQ/pipedream/tree/master/components"&gt;the &lt;code&gt;components&lt;/code&gt; directory&lt;/a&gt;. If you find a bug or want to contribute a feature, &lt;a href="https://pipedream.com/docs/components/guidelines/#process"&gt;see our contribution guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Custom code&lt;/h3&gt; 
&lt;p&gt;Most integrations require custom logic. Code is often the best way to express that logic, so Pipedream allows you to run custom code in a workflow using:&lt;/p&gt; 
&lt;table align="center"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="https://pipedream.com/docs/code/nodejs/"&gt; &lt;img alt="Node.js" src="https://res.cloudinary.com/pipedreamin/image/upload/v1646761316/docs/icons/icons8-nodejs_aax6wn.svg?sanitize=true" width="100" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://pipedream.com/docs/code/python/"&gt; &lt;img alt="Python" src="https://res.cloudinary.com/pipedreamin/image/upload/v1647356607/docs/icons/python-logo-generic_k3o5w2.svg?sanitize=true" width="100" /&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;  
  &lt;tr&gt;
   &lt;td&gt; &lt;a href="https://pipedream.com/docs/code/go/"&gt; &lt;img alt="Go" src="https://res.cloudinary.com/pipedreamin/image/upload/v1646763751/docs/icons/Go-Logo_Blue_zhkchv.svg?sanitize=true" width="100" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://pipedream.com/docs/code/bash/"&gt; &lt;img alt="Bash" src="https://res.cloudinary.com/pipedreamin/image/upload/v1647356698/docs/icons/full_colored_dark_1_-svg_vyfnv7.svg?sanitize=true" width="100" /&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;You can import any package from the languages' package managers by declaring the imports directly in code. Pipedream will parse and download the necessary dependencies.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Node.js
import axios from "axios";
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# Python
import pandas as pd
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-golang"&gt;// Go
import (
    "fmt"
    pd "github.com/PipedreamHQ/pipedream-go"
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also &lt;a href="https://pipedream.com/docs/code/nodejs/auth/"&gt;connect to any Pipedream connected app in custom code steps&lt;/a&gt;. For example, you can connect your Slack account and send a message to a channel:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import { WebClient } from "@slack/web-api";

export default defineComponent({
  props: {
    // This creates a connection called "slack" that connects a Slack account.
    slack: {
      type: "app",
      app: "slack",
    },
  },
  async run({ steps, $ }) {
    const web = new WebClient(this.slack.$auth.oauth_access_token);

    return await web.chat.postMessage({
      text: "Hello, world!",
      channel: "#general",
    });
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Destinations&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://pipedream.com/docs/destinations/"&gt;Destinations&lt;/a&gt;, like actions, abstract the connection, batching, and delivery logic required to send events to services like Amazon S3, or targets like HTTP and email.&lt;/p&gt; 
&lt;p&gt;For example, sending data to an Amazon S3 bucket is as simple as calling &lt;code&gt;$send.s3()&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;$send.s3({
  bucket: "your-bucket-here",
  prefix: "your-prefix/",
  payload: event.body,
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Pipedream supports the following destinations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.pipedream.com/destinations/s3/"&gt;Amazon S3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.pipedream.com/destinations/snowflake/"&gt;Snowflake&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.pipedream.com/destinations/http/"&gt;HTTP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.pipedream.com/destinations/email/"&gt;Email&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.pipedream.com/destinations/sse/"&gt;SSE&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thank you to everyone who has contributed to the Pipedream codebase. We appreciate you!&lt;/p&gt; 
&lt;a href="https://github.com/PipedreamHQ/pipedream/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=PipedreamHQ/pipedream" /&gt; &lt;/a&gt; 
&lt;h2&gt;Pricing&lt;/h2&gt; 
&lt;p&gt;Pipedream has a &lt;a href="https://pipedream.com/docs/pricing/#developer-tier"&gt;generous free tier&lt;/a&gt;. You can run sources and workflows for free within the limits of the free tier. If you hit these limits, you can upgrade to one of our &lt;a href="https://pipedream.com/docs/pricing/"&gt;paid tiers&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Limits&lt;/h2&gt; 
&lt;p&gt;The Pipedream platform imposes some runtime limits on sources and workflows. &lt;a href="https://pipedream.com/docs/limits/"&gt;Read more about those in our docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Found a Bug? Have a Feature to suggest?&lt;/h2&gt; 
&lt;p&gt;Before adding an issue, please search the &lt;a href="https://github.com/PipedreamHQ/pipedream/issues"&gt;existing issues&lt;/a&gt; or &lt;a href="https://pipedream.com/support/"&gt;reach out to our team&lt;/a&gt; to see if a similar request already exists.&lt;/p&gt; 
&lt;p&gt;If an issue exists, please &lt;a href="https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-conversations-on-github"&gt;add a reaction&lt;/a&gt; or add a comment detailing your specific use case.&lt;/p&gt; 
&lt;p&gt;If an issue &lt;em&gt;doesn't&lt;/em&gt; yet exist and you need to create one, please &lt;a href="https://github.com/PipedreamHQ/pipedream/issues/new/choose"&gt;use the issue templates&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;You can read about our platform security and privacy &lt;a href="https://pipedream.com/docs/privacy-and-security/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you'd like to report a suspected vulnerability or security issue, or have any questions about the security of the product, please contact our security team at &lt;strong&gt;&lt;a href="mailto:security@pipedream.com"&gt;security@pipedream.com&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>givanz/VvvebJs</title>
      <link>https://github.com/givanz/VvvebJs</link>
      <description>&lt;p&gt;Drag and drop page builder library written in vanilla javascript without dependencies or build tools.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VvvebJs&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="https://www.vvveb.com/admin/themes/default/img/biglogo.png" alt="Vvveb" /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Drag and drop page builder javascript library.&lt;/strong&gt; &lt;br /&gt; &lt;span&gt;Built with Vanilla Js with no dependencies or build tools and Bootstrap 5&lt;/span&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.vvveb.com"&gt;Website&lt;/a&gt; | &lt;a href="https://github.com/givanz/VvvebJs/wiki"&gt;Documentation&lt;/a&gt; | &lt;a href="https://github.com/givanz/VvvebJs/discussions"&gt;Forum&lt;/a&gt; | &lt;a href="https://twitter.com/vvvebcms"&gt;Twitter&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://www.vvveb.com/vvvebjs/editor.html"&gt;Live Demo&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;For a full featured Open Source CMS using VvvebJs page builder check &lt;a href="https://github.com/givanz/Vvveb"&gt;Vvveb CMS&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Using &lt;a href="https://github.com/givanz/landing"&gt;Vvveb landing page template&lt;/a&gt; for demo page and Bootstrap 5 sections and blocks.&lt;/p&gt; 
&lt;img src="https://www.vvveb.com/img/dark-theme.png" /&gt; 
&lt;img src="https://www.vvveb.com/img/light-theme.png" /&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Components and blocks/snippets drag and drop and in page insert.&lt;/li&gt; 
 &lt;li&gt;Undo/Redo operations.&lt;/li&gt; 
 &lt;li&gt;One or two panels interface.&lt;/li&gt; 
 &lt;li&gt;File manager and component hierarchy navigation.&lt;/li&gt; 
 &lt;li&gt;Add new page modal with template and folder options.&lt;/li&gt; 
 &lt;li&gt;Live code editor with codemirror plugin syntax highlighting.&lt;/li&gt; 
 &lt;li&gt;Image upload with example php script included.&lt;/li&gt; 
 &lt;li&gt;Page download or export html or save page on server with example php script included.&lt;/li&gt; 
 &lt;li&gt;Components/Sections/Blocks list search.&lt;/li&gt; 
 &lt;li&gt;Bootstrap 5 components.&lt;/li&gt; 
 &lt;li&gt;Media gallery with integrated CC0 image search and server upload support.&lt;/li&gt; 
 &lt;li&gt;Image, video and iframe elements resize handles.&lt;/li&gt; 
 &lt;li&gt;Elements breadcrumb for easier parent elements selection.&lt;/li&gt; 
 &lt;li&gt;Full Google fonts list support for font selection.&lt;/li&gt; 
 &lt;li&gt;Youtube, Google maps, Charts.js etc widgets.&lt;/li&gt; 
 &lt;li&gt;Optional CKEditor plugin to replace builtin text editor.&lt;/li&gt; 
 &lt;li&gt;Zip download plugin to download the page and all assets as zip file.&lt;/li&gt; 
 &lt;li&gt;SVG Icon component bundled with hundreds of free icons.&lt;/li&gt; 
 &lt;li&gt;Animate on scroll support for page elements.&lt;/li&gt; 
 &lt;li&gt;Theme global typography and color pallette editor.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;By default the editor comes with Bootstrap 5 and Widgets components and can be extended with any kind of components and inputs.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clone the repository&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;#git 2.13+ 
git clone --recurse-submodules https://github.com/givanz/VvvebJs

# older git versions 
git clone --recursive https://github.com/givanz/VvvebJs
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pull changes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git pull --recurse-submodules
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Clone the repository or download a release then open &lt;code&gt;editor.html&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Because of browser iframe security you need to use a webserver such as apache/xampp and open &lt;code&gt;http://localhost/editor.html&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;To use the image upload or page save feature you need to have php installed.&lt;/p&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;h3&gt;Local development&lt;/h3&gt; 
&lt;p&gt;From VvvebJs folder run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Image&lt;/h3&gt; 
&lt;p&gt;Or run image&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -p 8080:80 vvveb/vvvebjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open &lt;a href="http://localhost:8080/editor.php"&gt;http://localhost:8080/editor.php&lt;/a&gt; or &lt;a href="http://localhost:8080/editor.html"&gt;http://localhost:8080/editor.html&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Save page&lt;/h2&gt; 
&lt;p&gt;Save page function needs either php or node&lt;/p&gt; 
&lt;h3&gt;PHP&lt;/h3&gt; 
&lt;p&gt;If you use docker, xampp or a shared hosting account php should work without any change.&lt;/p&gt; 
&lt;p&gt;Saving is done using &lt;a href="https://raw.githubusercontent.com/givanz/VvvebJs/master/save.php"&gt;save.php&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Node&lt;/h3&gt; 
&lt;p&gt;For node go to VvvebJs folder and run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install express
node save.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open &lt;a href="http://localhost:8080/editor.html"&gt;http://localhost:8080/editor.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Saving is done using &lt;a href="https://raw.githubusercontent.com/givanz/VvvebJs/master/save.js"&gt;save.js&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://github.com/givanz/landing"&gt;Landing template&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;To make changes to template files or sections run the following commands from &lt;code&gt;demo/landing&lt;/code&gt; folder&lt;/p&gt; 
&lt;h3&gt;Install gulp&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generate html files&lt;/h3&gt; 
&lt;p&gt;Template html partials are located in &lt;code&gt;demo/landing/src&lt;/code&gt; folder.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run gulp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Watch for changes for development&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run gulp watch
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generate sections list for page builder&lt;/h3&gt; 
&lt;p&gt;Sections html files are located in &lt;code&gt;demo/landing/src/sections&lt;/code&gt; folder grouped in folders with the section group name.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run gulp sections
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generate blocks list&lt;/h3&gt; 
&lt;p&gt;Blocks html files are located in &lt;code&gt;demo/landing/src/blocks&lt;/code&gt; folder grouped in folders with the blocks group name.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run gulp blocks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generate screenshots for sections&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run gulp screenshots
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Initialize example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;&amp;lt;!-- bootstrap--&amp;gt;
&amp;lt;script src="js/popper.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src="js/bootstrap.min.js"&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;!-- builder code--&amp;gt;
&amp;lt;script src="libs/builder/builder.js"&amp;gt;&amp;lt;/script&amp;gt;	
&amp;lt;!-- undo manager--&amp;gt;
&amp;lt;script src="libs/builder/undo.js"&amp;gt;&amp;lt;/script&amp;gt;	
&amp;lt;!-- inputs--&amp;gt;
&amp;lt;script src="libs/builder/inputs.js"&amp;gt;&amp;lt;/script&amp;gt;	
&amp;lt;!-- components--&amp;gt;
&amp;lt;script src="libs/builder/components-bootstrap5.js"&amp;gt;&amp;lt;/script&amp;gt;	
&amp;lt;script src="libs/builder/components-widgets.js"&amp;gt;&amp;lt;/script&amp;gt;	

&amp;lt;script&amp;gt;
let pages = [
 {
	name:"narrow-jumbotron", 
	title:"Jumbotron", 
	url: "demo/narrow-jumbotron/index.html", 
	file: "demo/narrow-jumbotron/index.html"
  },
  {name:"landing-page", title:"Landing page", url: "demo/landing/index.html", file: "demo/landing/index.html"},
];
	

let firstPage = Object.keys(pages)[0];
Vvveb.Builder.init(pages[firstPage]["url"], function() {
	//load code after page is loaded here
});

Vvveb.Gui.init();
Vvveb.FileManager.init();
Vvveb.SectionList.init();
Vvveb.Breadcrumb.init();

Vvveb.FileManager.addPages(pages);
Vvveb.FileManager.loadPage(pages[firstPage]["name"]);
Vvveb.Gui.toggleRightColumn(false);
Vvveb.Breadcrumb.init();

&amp;lt;script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For editor html and components/input javascript templates edit &lt;a href="https://raw.githubusercontent.com/givanz/VvvebJs/master/editor.html"&gt;editor.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For css changes edit &lt;a href="https://raw.githubusercontent.com/givanz/VvvebJs/master/scss/editor.scss"&gt;scss/editor.scss&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/givanz/VvvebJs/master/scss/_builder.scss"&gt;scss/_builder.scss&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Scss&lt;/h3&gt; 
&lt;p&gt;To compile scss to css first install gulp&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then you can run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run gulp
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or use watch to compile on file change.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run gulp watch
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For documentation check the &lt;a href="https://github.com/givanz/VvvebJs/wiki"&gt;wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you like the project you can support it with a &lt;a href="https://paypal.me/zgivan"&gt;PayPal donation&lt;/a&gt; or become a backer/sponsor via &lt;a href="https://opencollective.com/vvvebjs"&gt;Open Collective&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/vvvebjs/sponsors/0/website"&gt;&lt;img src="https://opencollective.com/vvvebjs/sponsors/0/avatar" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/vvvebjs/backers/0/website"&gt;&lt;img src="https://opencollective.com/vvvebjs/backers/0/avatar" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Apache 2.0&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WhiskeySockets/Baileys</title>
      <link>https://github.com/WhiskeySockets/Baileys</link>
      <description>&lt;p&gt;Lightweight full-featured typescript/javascript WhatsApp Web API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img alt="Baileys logo" src="https://raw.githubusercontent.com/WhiskeySockets/Baileys/refs/heads/master/Media/logo.png" height="75" /&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/npm/dw/baileys?label=npm&amp;amp;color=%23CB3837" alt="NPM Downloads" /&gt; &lt;img src="https://img.shields.io/github/languages/code-size/whiskeysockets/baileys" alt="GitHub code size in bytes" /&gt; &lt;img src="https://img.shields.io/discord/725839806084546610?label=discord&amp;amp;color=%235865F2" alt="Discord" /&gt;&lt;/p&gt; 
&lt;p&gt;Baileys is a WebSockets-based TypeScript library for interacting with the WhatsApp Web API.&lt;/p&gt; 
&lt;p&gt;Join the WhiskeySockets community via the link: &lt;a href="https://whiskey.so/discord"&gt;https://whiskey.so/discord&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Usage &amp;amp; Guide&lt;/h1&gt; 
&lt;p&gt;A new guide has been posted at &lt;a href="https://baileys.wiki"&gt;https://baileys.wiki&lt;/a&gt; (NOTE: This guide is still a work in progress). The old guide can be accessed at the &lt;a href="https://github.com/WhiskeySockets/Baileys/tree/master/README.md"&gt;README.md&lt;/a&gt; file or the &lt;a href="https://npmjs.com/package/baileys"&gt;NPM homepage&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Sponsor&lt;/h1&gt; 
&lt;p&gt;If you'd like to financially support this project, you can do so by supporting the current maintainer &lt;a href="https://purpshell.dev/sponsor"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Disclaimer&lt;/h1&gt; 
&lt;p&gt;This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates. The official WhatsApp website can be found at whatsapp.com. "WhatsApp" as well as related names, marks, emblems and images are registered trademarks of their respective owners.&lt;/p&gt; 
&lt;p&gt;The maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used. Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Copyright (c) 2025 Rajeh Taher/WhiskeySockets&lt;/p&gt; 
&lt;p&gt;Licensed under the MIT License: Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
&lt;p&gt;Thus, the maintainers of the project can't be held liable for any potential misuse of this project.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ai-shifu/ChatALL</title>
      <link>https://github.com/ai-shifu/ChatALL</link>
      <description>&lt;p&gt;Concurrently chat with ChatGPT, Bing Chat, Bard, Alpaca, Vicuna, Claude, ChatGLM, MOSS, 讯飞星火, 文心一言 and more, discover the best answers&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/src/assets/logo-cover.png" width="256" /&gt; 
 &lt;p&gt;&lt;strong&gt;Chat with ALL AI Bots Concurrently, Discover the Best&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_DE-DE.md"&gt;Deutsch&lt;/a&gt; | English | &lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_ES-ES.md"&gt;Español&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_FR-FR.md"&gt;Français&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_IT-IT.md"&gt;Italian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_JA-JP.md"&gt;日本語&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_KO-KR.md"&gt;한국어&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_RU-RU.md"&gt;Русский&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_VI-VN.md"&gt;Tiếng Việt&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_ZH-CN.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://codespaces.new/ai-shifu/ChatALL"&gt;&lt;img src="https://github.com/codespaces/badge.svg?sanitize=true" alt="Open in GitHub Codespaces" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/screenshots/screenshot-1.png?raw=true" alt="Screenshot" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Large Language Models (LLMs) based AI bots are amazing. However, their behavior can be random and different bots excel at different tasks. If you want the best experience, don't try them one by one. ChatALL (Chinese name: 齐叨) can send prompt to several AI bots concurrently, help you to discover the best results. All you need to do is &lt;a href="https://github.com/ai-shifu/ChatALL/releases"&gt;download, install&lt;/a&gt; and ask.&lt;/p&gt; 
&lt;h3&gt;Is this you?&lt;/h3&gt; 
&lt;p&gt;Typical users of ChatALL are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🤠&lt;strong&gt;Gurus of LLMs&lt;/strong&gt;, who want to find the best answers or creations from LLMs.&lt;/li&gt; 
 &lt;li&gt;🤓&lt;strong&gt;Researchers of LLMs&lt;/strong&gt;, who want to intuitively compare the strengths and weaknesses of various LLMs in different fields.&lt;/li&gt; 
 &lt;li&gt;😎&lt;strong&gt;Developers of LLM applications&lt;/strong&gt;, who want to quickly debug prompts and find the best-performing foundation models.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Supported bots&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;AI Bots&lt;/th&gt; 
   &lt;th&gt;Web Access&lt;/th&gt; 
   &lt;th&gt;API&lt;/th&gt; 
   &lt;th&gt;Notes&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://ai.360.cn/"&gt;360 AI Brain&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://yiyan.baidu.com/"&gt;Baidu ERNIE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://character.ai/"&gt;Character.AI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://chatglm.cn/"&gt;ChatGLM2 6B &amp;amp; 130B&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;No Login required&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://chatgpt.com"&gt;ChatGPT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Web Browsing, Azure OpenAI service included&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.anthropic.com/claude"&gt;Claude&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://ai.meta.com/blog/code-llama-large-language-model-coding/"&gt;Code Llama&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://cohere.com/blog/aya23"&gt;Cohere Aya 23&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://cohere.com/command"&gt;Cohere Command R Models&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://copilot.microsoft.com/"&gt;Copilot&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://ai.dedao.cn/"&gt;Dedao Learning Assistant&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Coming soon&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://huggingface.co/tiiuae/falcon-180B-chat"&gt;Falcon 180B&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://gemini.google.com/"&gt;Gemini&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://blog.google/technology/developers/gemma-open-models/"&gt;Gemma 2B &amp;amp; 7B&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://gradio.app/"&gt;Gradio&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;For Hugging Face space/self-deployed models&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://console.groq.com/docs/models"&gt;Groq Cloud&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://huggingface.co/chat/"&gt;HuggingChat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://xinghuo.xfyun.cn/"&gt;iFLYTEK SPARK&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Coming soon&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://kimi.moonshot.cn/"&gt;Kimi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://ai.meta.com/llama/"&gt;Llama 2 13B &amp;amp; 70B&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://moss.fastnlp.top/"&gt;MOSS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.perplexity.ai/"&gt;Perplexity&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.phind.com/"&gt;Phind&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://pi.ai"&gt;Pi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://poe.com/"&gt;Poe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Coming soon&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://neice.tiangong.cn/"&gt;SkyWork&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Coming soon&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://tongyi.aliyun.com/"&gt;Tongyi Qianwen&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Coming soon&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://lmsys.org/blog/2023-03-30-vicuna/"&gt;Vicuna 13B &amp;amp; 33B&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;No Login required&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/nlpxucan/WizardLM"&gt;WizardLM 70B&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://x.ai"&gt;xAI Grok&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://you.com/"&gt;YouChat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://you.com/"&gt;You&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://huggingface.co/spaces/HuggingFaceH4/zephyr-chat"&gt;Zephyr&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;More is coming. Upvote your favorite bots in &lt;a href="https://github.com/ai-shifu/ChatALL/labels/more%20LLMs"&gt;these issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Note on Web-connected Bot Reliability&lt;/h3&gt; 
&lt;p&gt;Web-connected AI bots (those marked with "Web Access") are inherently less reliable and frequently face stability issues, as service providers regularly update their web interfaces and security measures. These web-based connections rely on reverse engineering and are difficult to maintain, often breaking unexpectedly. For a dependable experience, we strongly recommend using bots that offer API access whenever possible.&lt;/p&gt; 
&lt;h3&gt;Other features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Quick-prompt mode: send the next prompt without waiting for the previous request to complete&lt;/li&gt; 
 &lt;li&gt;Save chat history locally, protect your privacy&lt;/li&gt; 
 &lt;li&gt;Highlight the response you like, delete the bad&lt;/li&gt; 
 &lt;li&gt;Enable/disable any bots at any time&lt;/li&gt; 
 &lt;li&gt;Switch between one, two, or three-column view&lt;/li&gt; 
 &lt;li&gt;Auto update to the latest version&lt;/li&gt; 
 &lt;li&gt;Dark mode (contributed by @tanchekwei)&lt;/li&gt; 
 &lt;li&gt;Short keys. Press &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;/&lt;/kbd&gt; to know all of them (contributed by @tanchekwei)&lt;/li&gt; 
 &lt;li&gt;Multiple chats (contributed by @tanchekwei)&lt;/li&gt; 
 &lt;li&gt;Proxy setting (contributed by @msaong)&lt;/li&gt; 
 &lt;li&gt;Prompt management (contributed by @tanchekwei)&lt;/li&gt; 
 &lt;li&gt;Supports multiple languages (Chinese, English, German, French, Russian, Vietnamese, Korean, Japanese, Spanish, Italian)&lt;/li&gt; 
 &lt;li&gt;Supports Windows, macOS and Linux&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Planned features:&lt;/p&gt; 
&lt;p&gt;You are welcome to contribute to these features.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Deploy front-end to GitHub Pages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;p&gt;All chat history, settings and login data are saved locally on your computer.&lt;/p&gt; 
&lt;p&gt;ChatALL collects anonymous usage data to help us improve the product. Including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Which AI bots are prompted and how long the prompt is. Not including the prompt content.&lt;/li&gt; 
 &lt;li&gt;How long the response is, and which response is deleted/highlighted. Not including the response content.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;ChatALL is a client, not a proxy. Therefore, you must:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Have working accounts and/or API tokens for the bots.&lt;/li&gt; 
 &lt;li&gt;Have reliable network connections to the bots.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Download / Install&lt;/h2&gt; 
&lt;p&gt;Download from &lt;a href="https://github.com/ai-shifu/ChatALL/releases"&gt;https://github.com/ai-shifu/ChatALL/releases&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;On Windows&lt;/h3&gt; 
&lt;p&gt;Just download the *-win.exe file and proceed with the setup.&lt;/p&gt; 
&lt;h3&gt;On macOS&lt;/h3&gt; 
&lt;p&gt;For Apple Silicon Mac (M1, M2 CPU), download the *-mac-arm64.dmg file.&lt;/p&gt; 
&lt;p&gt;For other Macs, download *-mac-x64.dmg file.&lt;/p&gt; 
&lt;p&gt;If you are using &lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt;, you can also install it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install --cask chatall
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Linux&lt;/h3&gt; 
&lt;p&gt;Debian-based Distributions: Download the .deb file, double click it and install the software. Arch-based Distributions: You can clone ChatALL from the AUR &lt;a href="https://aur.archlinux.org/packages/chatall-bin"&gt;here&lt;/a&gt;. You can install it manually or using an AUR helper like yay or paru. Other Distributions: Download the .AppImage file, make it executable, and enjoy the click-to-run experience. You can also use &lt;a href="https://github.com/TheAssassin/AppImageLauncher"&gt;AppimageLauncher&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you encounter any problems while using ChatALL, you can try the following methods to resolve them:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Refresh&lt;/strong&gt; - press &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;R&lt;/kbd&gt; or &lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;R&lt;/kbd&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Restart&lt;/strong&gt; - exit ChatALL and run it again.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Re-login&lt;/strong&gt; - click the settings button in the upper right corner, then click the corresponding login/logout link to relogin the website.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create a new chat&lt;/strong&gt; - click the &lt;code&gt;New Chat&lt;/code&gt; button and send prompt again.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;If none of the above methods work, you can try &lt;strong&gt;resetting ChatALL&lt;/strong&gt;. Note that this will delete all your settings and message history.&lt;/p&gt; 
&lt;p&gt;You can reset ChatALL by deleting the following directories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows: &lt;code&gt;C:\Users\&amp;lt;user&amp;gt;\AppData\Roaming\chatall\&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Linux: &lt;code&gt;/home/&amp;lt;user&amp;gt;/.config/chatall/&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;macOS: &lt;code&gt;/Users/&amp;lt;user&amp;gt;/Library/Application Support/chatall/&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the problem persists, please &lt;a href="https://github.com/ai-shifu/ChatALL/issues"&gt;submit an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;For developers&lt;/h2&gt; 
&lt;h3&gt;Contribute a Bot&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/ai-shifu/ChatALL/wiki/%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84-AI-%E5%AF%B9%E8%AF%9D%E6%9C%BA%E5%99%A8%E4%BA%BA"&gt;The guide&lt;/a&gt; may help you.&lt;/p&gt; 
&lt;h3&gt;Run&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
npm run electron:serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build&lt;/h3&gt; 
&lt;p&gt;Build for your current platform:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run electron:build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build for all platforms:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run electron:build -- -wml --x64 --arm64
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;a href="https://github.com/ai-shifu/ChatALL/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=ai-shifu/ChatALL" /&gt; &lt;/a&gt; 
&lt;h3&gt;Others&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;GPT-4 contributed much of the code&lt;/li&gt; 
 &lt;li&gt;ChatGPT, Copilot and Google provide many solutions (ranked in order)&lt;/li&gt; 
 &lt;li&gt;Inspired by &lt;a href="https://github.com/chathub-dev/chathub"&gt;ChatHub&lt;/a&gt;. Respect!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Sponsor&lt;/h2&gt; 
&lt;p&gt;If you like this project, please consider:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://ko-fi.com/F1F8KZJGJ"&gt;&lt;img src="https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true" alt="ko-fi" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeCoupa/awesome-cheatsheets</title>
      <link>https://github.com/LeCoupa/awesome-cheatsheets</link>
      <description>&lt;p&gt;👩‍💻👨‍💻 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://lecoupa.github.io/awesome-cheatsheets/"&gt;&lt;img src="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/_design/cover_github@2x.png" alt="AWESOME CHEATSHEETS LOGO" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://awesome.re"&gt;&lt;img src="https://awesome.re/badge.svg?sanitize=true" alt="Awesome" /&gt;&lt;/a&gt; &lt;a href="https://github.com/LeCoupa/awesome-cheatsheets/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="GitHub license" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WEBSITE DIRECTORY&lt;/strong&gt;: &lt;a href="https://lecoupa.github.io/awesome-cheatsheets/"&gt;Available here&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🤔 Why Awesome-Cheatsheets?&lt;/h2&gt; 
&lt;p&gt;I usually make a cheat sheet when I want to improve my skills in a programming language, a framework or a development tool. &lt;a href="https://gist.github.com/LeCoupa"&gt;I started doing these kinds of things a long time ago on Gist&lt;/a&gt;. To better keep track of the history and to let people contribute, I re-organized all of them into this single repository. Most of the content is coming from official documentation and some books I have read.&lt;/p&gt; 
&lt;p&gt;Feel free to take a look. You might learn new things. They have been designed to provide a quick way to assess your knowledge and to save you time.&lt;/p&gt; 
&lt;h2&gt;📚 Table of Contents&lt;/h2&gt; 
&lt;h3&gt;📃 Languages&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Command line interface&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/bash.sh"&gt;Bash&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Imperative&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C.txt"&gt;C&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C%23.txt"&gt;C#&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/golang.md"&gt;Go&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/java.md"&gt;Java&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/php.php"&gt;PHP&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/python.md"&gt;Python&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Functional&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/javascript.js"&gt;JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;📦 Backend&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;PHP&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/laravel.php"&gt;Laravel&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Python&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/django.py"&gt;Django&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Javascript&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/adonis.js"&gt;Adonis.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/express.js"&gt;Express.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/feathers.js"&gt;Feathers.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/moleculer.js"&gt;Moleculer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/node.js"&gt;Node.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/sails.js"&gt;Sails.js&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🌐 Frontend&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Basics&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/html5.html"&gt;HTML5&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/css3.css"&gt;CSS3&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Frameworks&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/react.js"&gt;React.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/vue.js"&gt;Vue.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/tailwind.css"&gt;Tailwind.css&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/ember.js"&gt;Ember.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angular.js"&gt;Angular (2+)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angularjs.js"&gt;AngularJS&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🗃️ Databases&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;SQL&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/mysql.sh"&gt;MySQL&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;NoSQL&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/redis.sh"&gt;Redis&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🔧 Tools&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Development&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/curl.sh"&gt;cURL&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/drush.sh"&gt;Drush&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/elasticsearch.js"&gt;Elasticsearch&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/emmet.md"&gt;Emmet&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/git.sh"&gt;Git&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/puppeteer.js"&gt;Puppeteer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/sublime_text.md"&gt;Sublime Text&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vim.txt"&gt;VIM&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vscode.md"&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/xcode.txt"&gt;Xcode&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Infrastructure&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/aws.sh"&gt;AWS CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/docker.sh"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/heroku.sh"&gt;Heroku CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/kubernetes.md"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_boxfile.yml"&gt;Nanobox Boxfile&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_cli.sh"&gt;Nanobox CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nginx.sh"&gt;Nginx&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/pm2.sh"&gt;PM2&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/ubuntu.sh"&gt;Ubuntu&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/firebase_cli.md"&gt;Firebase CLI&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h2&gt;🙌🏼 How to Contribute?&lt;/h2&gt; 
&lt;p&gt;You are more than welcome to contribute and build your own cheat sheet for your favorite programming language, framework or development tool. Just submit changes via pull request and I will review them before merging.&lt;/p&gt; 
&lt;h2&gt;👩‍💻👨‍💻 Our valuable Contributors&lt;/h2&gt; 
&lt;p align="center"&gt;&lt;a href="https://github.com/LeCoupa/awesome-cheatsheets/graphs/contributors"&gt; &lt;img src="https://contributors-img.web.app/image?repo=LeCoupa/awesome-cheatsheets" /&gt; &lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PrismarineJS/mineflayer</title>
      <link>https://github.com/PrismarineJS/mineflayer</link>
      <description>&lt;p&gt;Create Minecraft bots with a powerful, stable, and high level JavaScript API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mineflayer&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/mineflayer"&gt;&lt;img src="https://img.shields.io/npm/v/mineflayer.svg?color=success&amp;amp;label=npm%20package&amp;amp;logo=npm" alt="NPM version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/PrismarineJS/mineflayer/actions?query=workflow%3A%22CI%22"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/PrismarineJS/mineflayer/ci.yml.svg?label=CI&amp;amp;logo=github&amp;amp;logoColor=lightgrey" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/PrismarineJS/mineflayer"&gt;&lt;img src="https://img.shields.io/static/v1.svg?label=try&amp;amp;message=on%20gitpod&amp;amp;color=brightgreen&amp;amp;logo=gitpod" alt="Try it on gitpod" /&gt;&lt;/a&gt; &lt;a href="https://colab.research.google.com/github/PrismarineJS/mineflayer/blob/master/docs/mineflayer.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1.svg?label=open&amp;amp;message=on%20colab&amp;amp;color=blue&amp;amp;logo=google-colab" alt="Open In Colab" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/PrismarineJS"&gt;&lt;img src="https://img.shields.io/github/sponsors/PrismarineJS" alt="GitHub Sponsors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/GsEFRM8"&gt;&lt;img src="https://img.shields.io/static/v1.svg?label=OFFICIAL&amp;amp;message=DISCORD&amp;amp;color=blue&amp;amp;logo=discord&amp;amp;style=for-the-badge" alt="Official Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;sub&gt;EN&lt;/sub&gt; &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/README.md"&gt;English&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;sub&gt;RU&lt;/sub&gt; &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/ru/README_RU.md"&gt;русский&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;sub&gt;ES&lt;/sub&gt; &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/es/README_ES.md"&gt;Español&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;sub&gt;FR&lt;/sub&gt; &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/fr/README_FR.md"&gt;Français&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;sub&gt;TR&lt;/sub&gt; &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/tr/README_TR.md"&gt;Türkçe&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;sub&gt;ZH&lt;/sub&gt; &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/zh/README_ZH_CN.md"&gt;中文&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;sub&gt;BR&lt;/sub&gt; &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/br/README_BR.md"&gt;Português&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
&lt;/table&gt; 
&lt;p&gt;Create Minecraft bots with a powerful, stable, and high level JavaScript &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/api.md"&gt;API&lt;/a&gt;, also usable from Python.&lt;/p&gt; 
&lt;p&gt;First time using Node.js? You may want to start with the &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/tutorial.md"&gt;tutorial&lt;/a&gt;. Know Python? Checkout some &lt;a href="https://github.com/PrismarineJS/mineflayer/tree/master/examples/python"&gt;Python examples&lt;/a&gt; and try out &lt;a href="https://colab.research.google.com/github/PrismarineJS/mineflayer/blob/master/docs/mineflayer.ipynb"&gt;Mineflayer on Google Colab&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports Minecraft 1.8 to 1.21 (1.8, 1.9, 1.10, 1.11, 1.12, 1.13, 1.14, 1.15, 1.16, 1.17, 1.18, 1.19, 1.20, and 1.21)&lt;/li&gt; 
 &lt;li&gt;Entity knowledge and tracking.&lt;/li&gt; 
 &lt;li&gt;Block knowledge. You can query the world around you. Milliseconds to find any block.&lt;/li&gt; 
 &lt;li&gt;Physics and movement - handle all bounding boxes&lt;/li&gt; 
 &lt;li&gt;Attacking entities and using vehicles.&lt;/li&gt; 
 &lt;li&gt;Inventory management.&lt;/li&gt; 
 &lt;li&gt;Crafting, chests, dispensers, enchantment tables.&lt;/li&gt; 
 &lt;li&gt;Digging and building.&lt;/li&gt; 
 &lt;li&gt;Miscellaneous stuff such as knowing your health and whether it is raining.&lt;/li&gt; 
 &lt;li&gt;Activating blocks and using items.&lt;/li&gt; 
 &lt;li&gt;Chat.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Roadmap&lt;/h3&gt; 
&lt;p&gt;Checkout &lt;a href="https://github.com/PrismarineJS/mineflayer/wiki/Big-Prismarine-projects"&gt;this page&lt;/a&gt; to see what our current projects are.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;First install Node.js &amp;gt;= 18 from &lt;a href="https://nodejs.org/"&gt;nodejs.org&lt;/a&gt; then:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install mineflayer
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To update mineflayer (or any Node.js) package and its dependencies, use&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm update
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;link&lt;/th&gt; 
   &lt;th&gt;description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/tutorial.md"&gt;tutorial&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Begin with Node.js and mineflayer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/FAQ.md"&gt;FAQ.md&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Got a question ? go there first&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/api.md"&gt;api.md&lt;/a&gt;&lt;/strong&gt; &lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/unstable_api.md"&gt;unstable_api.md&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The full API reference&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/history.md"&gt;history.md&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The changelog for mineflayer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/tree/master/examples"&gt;examples/&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Checkout all the mineflayer examples&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;Please read &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; and &lt;a href="https://github.com/PrismarineJS/prismarine-contribute"&gt;prismarine-contribute&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Videos&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A tutorial video explaining the basic set up process for a bot can be found &lt;a href="https://www.youtube.com/watch?v=ltWosy4Z0Kw"&gt;here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you want to learn more, more video tutorials are &lt;a href="https://www.youtube.com/playlist?list=PLh_alXmxHmzGy3FKbo95AkPp5D8849PEV"&gt;there,&lt;/a&gt; and the corresponding source codes for those bots is &lt;a href="https://github.com/TheDudeFromCI/Mineflayer-Youtube-Tutorials"&gt;there.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=ltWosy4Z0Kw"&gt;&lt;img src="https://img.youtube.com/vi/ltWosy4Z0Kw/0.jpg" alt="tutorial 1" width="200" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=UWGSf08wQSc"&gt;&lt;img src="https://img.youtube.com/vi/UWGSf08wQSc/0.jpg" alt="tutorial 2" width="200" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=ssWE0kXDGJE"&gt;&lt;img src="https://img.youtube.com/vi/ssWE0kXDGJE/0.jpg" alt="tutorial 3" width="200" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=walbRk20KYU"&gt;&lt;img src="https://img.youtube.com/vi/walbRk20KYU/0.jpg" alt="tutorial 4" width="200" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Without a version specified, the version of the server will be guessed automatically. Without auth specified, the mojang auth style will be guessed.&lt;/p&gt; 
&lt;h3&gt;Echo Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const mineflayer = require('mineflayer')

const bot = mineflayer.createBot({
  host: 'localhost', // minecraft server ip
  username: 'Bot', // username to join as if auth is `offline`, else a unique identifier for this account. Switch if you want to change accounts
  auth: 'microsoft' // for offline mode servers, you can set this to 'offline'
  // port: 25565,              // set if you need a port that isn't 25565
  // version: false,           // only set if you need a specific version or snapshot (ie: "1.8.9" or "1.16.5"), otherwise it's set automatically
  // password: '12345678'      // set if you want to use password-based auth (may be unreliable). If specified, the `username` must be an email
})

bot.on('chat', (username, message) =&amp;gt; {
  if (username === bot.username) return
  bot.chat(message)
})

// Log errors and kick reasons:
bot.on('kicked', console.log)
bot.on('error', console.log)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If &lt;code&gt;auth&lt;/code&gt; is set to &lt;code&gt;microsoft&lt;/code&gt;, you will be prompted to login to microsoft.com with a code in your browser. After signing in on your browser, the bot will automatically obtain and cache authentication tokens (under your specified username) so you don't have to sign-in again.&lt;/p&gt; 
&lt;p&gt;To switch the account, update the supplied &lt;code&gt;username&lt;/code&gt;. By default, cached tokens will be stored in your user's .minecraft folder, or if &lt;code&gt;profilesFolder&lt;/code&gt; is specified, they'll instead be stored there. For more information on bot options see node-minecraft-protocol's &lt;a href="https://github.com/PrismarineJS/node-minecraft-protocol/raw/master/docs/API.md#mccreateclientoptions"&gt;API doc&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Connecting to a Realm&lt;/h4&gt; 
&lt;p&gt;To join a Realm that your Minecraft account has been invited to, you can pass a &lt;code&gt;realms&lt;/code&gt; object with a selector function like below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const client = mineflayer.createBot({
  username: 'email@example.com', // minecraft username
  realms: {
    // This function is called with an array of Realms the account can join. It should return the one it wants to join.
    pickRealm: (realms) =&amp;gt; realms[0]
  },
  auth: 'microsoft'
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;See what your bot is doing&lt;/h3&gt; 
&lt;p&gt;Thanks to the &lt;a href="https://github.com/PrismarineJS/prismarine-viewer"&gt;prismarine-viewer&lt;/a&gt; project, it's possible to display in a browser window what your bot is doing. Just run &lt;code&gt;npm install prismarine-viewer&lt;/code&gt; and add this to your bot:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const { mineflayer: mineflayerViewer } = require('prismarine-viewer')
bot.once('spawn', () =&amp;gt; {
  mineflayerViewer(bot, { port: 3007, firstPerson: true }) // port is the minecraft server port, if first person is false, you get a bird's-eye view
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And you'll get a &lt;em&gt;live&lt;/em&gt; view looking like this:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://prismarinejs.github.io/prismarine-viewer/"&gt;&lt;img src="https://prismarinejs.github.io/prismarine-viewer/test_1.16.1.png" alt="viewer" width="500" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;More Examples&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;example&lt;/th&gt; 
   &lt;th&gt;description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/tree/master/examples/viewer"&gt;viewer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Display your bot world view in the browser&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/tree/master/examples/pathfinder"&gt;pathfinder&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Make your bot go to any location automatically&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/raw/master/examples/chest.js"&gt;chest&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Use chests, furnaces, dispensers, enchantment tables&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/raw/master/examples/digger.js"&gt;digger&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Learn how to create a simple bot that is capable of digging blocks&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/raw/master/examples/discord.js"&gt;discord&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Connect a discord bot with a mineflayer bot&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/raw/master/examples/jumper.js"&gt;jumper&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Learn how to move, jump, ride vehicles, attack nearby entities&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/raw/master/examples/ansi.js"&gt;ansi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Display your bot's chat with all of the chat colors shown in your terminal&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/raw/master/examples/guard.js"&gt;guard&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Make a bot guard a defined area from nearby mobs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/raw/master/examples/multiple_from_file.js"&gt;multiple-from-file&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add a text file with accounts and have them all login&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;And many more in the &lt;a href="https://github.com/PrismarineJS/mineflayer/tree/master/examples"&gt;examples&lt;/a&gt; folder.&lt;/p&gt; 
&lt;h3&gt;Modules&lt;/h3&gt; 
&lt;p&gt;A lot of the active development is happening inside of small npm packages which are used by mineflayer.&lt;/p&gt; 
&lt;h4&gt;The Node Way™&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"When applications are done well, they are just the really application-specific, brackish residue that can't be so easily abstracted away. All the nice, reusable components sublimate away onto github and npm where everybody can collaborate to advance the commons." — substack from &lt;a href="https://gist.github.com/substack/5075355"&gt;"how I write modules"&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Modules&lt;/h4&gt; 
&lt;p&gt;These are the main modules that make up mineflayer:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;module&lt;/th&gt; 
   &lt;th&gt;description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/node-minecraft-protocol"&gt;minecraft-protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Parse and serialize minecraft packets, plus authentication and encryption.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/minecraft-data"&gt;minecraft-data&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Language independent module providing minecraft data for minecraft clients, servers and libraries.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-physics"&gt;prismarine-physics&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Provide the physics engine for minecraft entities&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-chunk"&gt;prismarine-chunk&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A class to hold chunk data for Minecraft&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/node-vec3"&gt;node-vec3&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;3d vector math with robust unit tests&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-block"&gt;prismarine-block&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Represent a minecraft block with its associated data&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-chat"&gt;prismarine-chat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A parser for a minecraft chat message (extracted from mineflayer)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/node-yggdrasil"&gt;node-yggdrasil&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Node.js library to interact with Mojang's authentication system, known as Yggdrasil&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-world"&gt;prismarine-world&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The core implementation of worlds for prismarine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-windows"&gt;prismarine-windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Represent minecraft windows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-item"&gt;prismarine-item&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Represent a minecraft item with its associated data&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-nbt"&gt;prismarine-nbt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;An NBT parser for node-minecraft-protocol&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-recipe"&gt;prismarine-recipe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Represent minecraft recipes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-biome"&gt;prismarine-biome&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Represent a minecraft biome with its associated data&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-entity"&gt;prismarine-entity&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Represent a minecraft entity&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Debug&lt;/h3&gt; 
&lt;p&gt;You can enable some protocol debugging output using &lt;code&gt;DEBUG&lt;/code&gt; environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;DEBUG="minecraft-protocol" node [...]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On windows :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;set DEBUG=minecraft-protocol
node your_script.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Third Party Plugins&lt;/h2&gt; 
&lt;p&gt;Mineflayer is pluggable; anyone can create a plugin that adds an even higher level API on top of Mineflayer.&lt;/p&gt; 
&lt;p&gt;The most updated and useful are :&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuniko-software/minecraft-mcp-server"&gt;minecraft-mcp-server&lt;/a&gt; A MCP server for mineflayer, allowing using mineflayer from an LLM&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Karang/mineflayer-pathfinder"&gt;pathfinder&lt;/a&gt; - advanced A* pathfinding with a lot of configurable features&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-viewer"&gt;prismarine-viewer&lt;/a&gt; - simple web chunk viewer&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ImHarvol/mineflayer-web-inventory"&gt;web-inventory&lt;/a&gt; - web based inventory viewer&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer-statemachine"&gt;statemachine&lt;/a&gt; - A state machine API for more complex bot behaviors&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/G07cha/MineflayerArmorManager"&gt;Armor Manager&lt;/a&gt; - automatic armor management&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wvffle/mineflayer-dashboard"&gt;Dashboard&lt;/a&gt; - Frontend dashboard for mineflayer bot&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer-pvp"&gt;PVP&lt;/a&gt; - Easy API for basic PVP and PVE.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/link-discord/mineflayer-auto-eat"&gt;Auto Eat&lt;/a&gt; - Automatic eating of food.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/link-discord/mineflayer-autocrystal"&gt;Auto Crystal&lt;/a&gt; - Automatic placing &amp;amp; breaking of end crystals.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TheDudeFromCI/mineflayer-tool"&gt;Tool&lt;/a&gt; - A utility for automatic tool/weapon selection with a high level API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sefirosweb/minecraftHawkEye"&gt;Hawkeye&lt;/a&gt; - A utility for using auto-aim with bows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/firejoust/mineflayer-GUI"&gt;GUI&lt;/a&gt; - Interact with nested GUI windows using async/await&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/firejoust/mineflayer-projectile"&gt;Projectile&lt;/a&gt; - Get the required launch angle for projectiles&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/firejoust/mineflayer-movement"&gt;Movement&lt;/a&gt; - Smooth and realistic player movement, best suited for PvP&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer-collectblock"&gt;Collect Block&lt;/a&gt; - Quick and simple block collection API.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;But also check out :&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andrewrk/mineflayer-radar/"&gt;radar&lt;/a&gt; - web based radar interface using canvas and socket.io. &lt;a href="https://www.youtube.com/watch?v=FjDmAfcVulQ"&gt;YouTube Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/G07cha/MineflayerAutoAuth"&gt;auto-auth&lt;/a&gt; - chat-based bot authentication&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Nixes/mineflayer-bloodhound"&gt;Bloodhound&lt;/a&gt; - determine who and what is responsible for damage to another entity&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SiebeDW/mineflayer-tps"&gt;tps&lt;/a&gt; - get the current tps (processed tps)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/IceTank/mineflayer-panorama"&gt;panorama&lt;/a&gt; - take Panorama Images of your world&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tuanzisama/mineflayer-death-event"&gt;player-death-event&lt;/a&gt; - emit player death event in Mineflayer.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Projects Using Mineflayer&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MineDojo/Voyager"&gt;Voyager&lt;/a&gt; An Open-Ended Embodied Agent with Large Language Models&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kolbytn/mindcraft"&gt;mindcraft&lt;/a&gt; Lib for using mineflayer with LLMs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rom1504/rbot"&gt;rom1504/rbot&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=UM1ZV5200S0"&gt;YouTube - building a spiral staircase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0cQxg9uDnzA"&gt;YouTube - replicating a building&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Darthfett/Helperbot"&gt;Darthfett/Helperbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vogonistic/mineflayer-voxel"&gt;vogonistic/voxel&lt;/a&gt; - visualize what the bot is up to using voxel.js&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JonnyD/Skynet"&gt;JonnyD/Skynet&lt;/a&gt; - log player activity onto an online API&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rom1504/MinecraftChat"&gt;MinecraftChat&lt;/a&gt; (last open source version, built by AlexKvazos) - Minecraft web based chat client&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Minecheesecraft/Cheese-Bot"&gt;Cheese Bot&lt;/a&gt; - Plugin based bot with a clean GUI. Made with Node-Webkit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/schematical/chaoscraft"&gt;Chaoscraft&lt;/a&gt; - Minecraft bot using genetic algorithms, see &lt;a href="https://www.youtube.com/playlist?list=PLLkpLgU9B5xJ7Qy4kOyBJl5J6zsDIMceH"&gt;its youtube videos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hexatester/minetelegram"&gt;hexatester/minetelegram&lt;/a&gt; - Minecraft - Telegram bridge, build on top of mineflayer &amp;amp; telegraf.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer-builder"&gt;PrismarineJS/mineflayer-builder&lt;/a&gt; - Prints minecraft schematics in survival, keeping orientation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SilkePilon/OpenDeliveryBot"&gt;SilkePilon/OpenDeliveryBot&lt;/a&gt; - Minecraft bot in python to deliver items from place to place.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/network/dependents"&gt;and hundreds more&lt;/a&gt; - All the projects that github detected are using mineflayer&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;h3&gt;Testing everything&lt;/h3&gt; 
&lt;p&gt;Simply run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Testing specific version&lt;/h3&gt; 
&lt;p&gt;Run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run mocha_test -- -g &amp;lt;version&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;where &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; is a minecraft version like &lt;code&gt;1.12&lt;/code&gt;, &lt;code&gt;1.15.2&lt;/code&gt;...&lt;/p&gt; 
&lt;h3&gt;Testing specific test&lt;/h3&gt; 
&lt;p&gt;Run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run mocha_test -- -g &amp;lt;test_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;where &lt;code&gt;&amp;lt;test_name&amp;gt;&lt;/code&gt; is a name of the test like &lt;code&gt;bed&lt;/code&gt;, &lt;code&gt;useChests&lt;/code&gt;, &lt;code&gt;rayTrace&lt;/code&gt;...&lt;/p&gt; 
&lt;h3&gt;Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run mocha_test -- -g "1.18.1.*BlockFinder"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;to run the block finder test for 1.18.1&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nodejs/node</title>
      <link>https://github.com/nodejs/node</link>
      <description>&lt;p&gt;Node.js JavaScript runtime ✨🐢🚀✨&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node.js&lt;/h1&gt; 
&lt;p&gt;Node.js is an open-source, cross-platform JavaScript runtime environment.&lt;/p&gt; 
&lt;p&gt;For information on using Node.js, see the &lt;a href="https://nodejs.org/"&gt;Node.js website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Node.js project uses an &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/GOVERNANCE.md"&gt;open governance model&lt;/a&gt;. The &lt;a href="https://openjsf.org/"&gt;OpenJS Foundation&lt;/a&gt; provides support for the project.&lt;/p&gt; 
&lt;p&gt;Contributors are expected to act in a collaborative manner to move the project forward. We encourage the constructive exchange of contrary opinions and compromise. The &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/GOVERNANCE.md#technical-steering-committee"&gt;TSC&lt;/a&gt; reserves the right to limit or block contributors who repeatedly act in ways that discourage, exhaust, or otherwise negatively affect other participants.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This project has a &lt;a href="https://github.com/nodejs/admin/raw/HEAD/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#support"&gt;Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#release-types"&gt;Release types&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#download"&gt;Download&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#current-and-lts-releases"&gt;Current and LTS releases&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#nightly-releases"&gt;Nightly releases&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#api-documentation"&gt;API documentation&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#verifying-binaries"&gt;Verifying binaries&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#building-nodejs"&gt;Building Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#security"&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#contributing-to-nodejs"&gt;Contributing to Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#current-project-team-members"&gt;Current project team members&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#tsc-technical-steering-committee"&gt;TSC (Technical Steering Committee)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#collaborators"&gt;Collaborators&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#triagers"&gt;Triagers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#release-keys"&gt;Release keys&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Looking for help? Check out the &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/.github/SUPPORT.md"&gt;instructions for getting support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Release types&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Current&lt;/strong&gt;: Under active development. Code for the Current release is in the branch for its major version number (for example, &lt;a href="https://github.com/nodejs/node/tree/v22.x"&gt;v22.x&lt;/a&gt;). Node.js releases a new major version every 6 months, allowing for breaking changes. This happens in April and October every year. Releases appearing each October have a support life of 8 months. Releases appearing each April convert to LTS (see below) each October.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LTS&lt;/strong&gt;: Releases that receive Long Term Support, with a focus on stability and security. Every even-numbered major version will become an LTS release. LTS releases receive 12 months of &lt;em&gt;Active LTS&lt;/em&gt; support and a further 18 months of &lt;em&gt;Maintenance&lt;/em&gt;. LTS release lines have alphabetically-ordered code names, beginning with v4 Argon. There are no breaking changes or feature additions, except in some special circumstances.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nightly&lt;/strong&gt;: Code from the Current branch built every 24-hours when there are changes. Use with caution.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Current and LTS releases follow &lt;a href="https://semver.org"&gt;semantic versioning&lt;/a&gt;. A member of the Release Team &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#release-keys"&gt;signs&lt;/a&gt; each Current and LTS release. For more information, see the &lt;a href="https://github.com/nodejs/Release#readme"&gt;Release README&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Download&lt;/h3&gt; 
&lt;p&gt;Binaries, installers, and source tarballs are available at &lt;a href="https://nodejs.org/en/download/"&gt;https://nodejs.org/en/download/&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Current and LTS releases&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://nodejs.org/download/release/"&gt;https://nodejs.org/download/release/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://nodejs.org/download/release/latest/"&gt;latest&lt;/a&gt; directory is an alias for the latest Current release. The latest-&lt;em&gt;codename&lt;/em&gt; directory is an alias for the latest release from an LTS line. For example, the &lt;a href="https://nodejs.org/download/release/latest-hydrogen/"&gt;latest-hydrogen&lt;/a&gt; directory contains the latest Hydrogen (Node.js 18) release.&lt;/p&gt; 
&lt;h4&gt;Nightly releases&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://nodejs.org/download/nightly/"&gt;https://nodejs.org/download/nightly/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Each directory and filename includes the version (e.g., &lt;code&gt;v22.0.0&lt;/code&gt;), followed by the UTC date (e.g., &lt;code&gt;20240424&lt;/code&gt; for April 24, 2024), and the short commit SHA of the HEAD of the release (e.g., &lt;code&gt;ddd0a9e494&lt;/code&gt;). For instance, a full directory name might look like &lt;code&gt;v22.0.0-nightly20240424ddd0a9e494&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;API documentation&lt;/h4&gt; 
&lt;p&gt;Documentation for the latest Current release is at &lt;a href="https://nodejs.org/api/"&gt;https://nodejs.org/api/&lt;/a&gt;. Version-specific documentation is available in each release directory in the &lt;em&gt;docs&lt;/em&gt; subdirectory. Version-specific documentation is also at &lt;a href="https://nodejs.org/download/docs/"&gt;https://nodejs.org/download/docs/&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Verifying binaries&lt;/h3&gt; 
&lt;p&gt;Download directories contain a &lt;code&gt;SHASUMS256.txt.asc&lt;/code&gt; file with SHA checksums for the files and the releaser PGP signature.&lt;/p&gt; 
&lt;p&gt;You can get a trusted keyring from nodejs/release-keys, e.g. using &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsLo "/path/to/nodejs-keyring.kbx" "https://github.com/nodejs/release-keys/raw/HEAD/gpg/pubring.kbx"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can import the releaser keys in your default keyring, see &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#release-keys"&gt;Release keys&lt;/a&gt; for commands to how to do that.&lt;/p&gt; 
&lt;p&gt;Then, you can verify the files you've downloaded locally (if you're using your default keyring, pass &lt;code&gt;--keyring="${GNUPGHOME:-~/.gnupg}/pubring.kbx"&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsO "https://nodejs.org/dist/${VERSION}/SHASUMS256.txt.asc" \
&amp;amp;&amp;amp; gpgv --keyring="/path/to/nodejs-keyring.kbx" --output SHASUMS256.txt &amp;lt; SHASUMS256.txt.asc \
&amp;amp;&amp;amp; shasum --check SHASUMS256.txt --ignore-missing
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Building Node.js&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/BUILDING.md"&gt;BUILDING.md&lt;/a&gt; for instructions on how to build Node.js from source and a list of supported platforms.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;For information on reporting security vulnerabilities in Node.js, see &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/SECURITY.md"&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing to Node.js&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/CONTRIBUTING.md"&gt;Contributing to the project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nodejs/TSC/raw/HEAD/WORKING_GROUPS.md"&gt;Working Groups&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/strategic-initiatives.md"&gt;Strategic initiatives&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/technical-values.md"&gt;Technical values and prioritization&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Current project team members&lt;/h2&gt; 
&lt;p&gt;For information about the governance of the Node.js project, see &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/GOVERNANCE.md"&gt;GOVERNANCE.md&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- node-core-utils and find-inactive-tsc.mjs depend on the format of the TSC
     list. If the format changes, those utilities need to be tested and
     updated. --&gt; 
&lt;h3&gt;TSC (Technical Steering Committee)&lt;/h3&gt; 
&lt;h4&gt;TSC voting members&lt;/h4&gt; 
&lt;!--lint disable prohibited-strings--&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aduh95"&gt;aduh95&lt;/a&gt; - &lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:duhamelantoine1995@gmail.com"&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anonrig"&gt;anonrig&lt;/a&gt; - &lt;strong&gt;Yagiz Nizipli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yagiz@nizipli.com"&gt;yagiz@nizipli.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benjamingr"&gt;benjamingr&lt;/a&gt; - &lt;strong&gt;Benjamin Gruenbaum&lt;/strong&gt; &amp;lt;&lt;a href="mailto:benjamingr@gmail.com"&gt;benjamingr@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BridgeAR"&gt;BridgeAR&lt;/a&gt; - &lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruben@bridgewater.de"&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gireeshpunathil"&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gpunathi@in.ibm.com"&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jasnell"&gt;jasnell&lt;/a&gt; - &lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasnell@gmail.com"&gt;jasnell@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joyeecheung"&gt;joyeecheung&lt;/a&gt; - &lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:joyeec9h3@gmail.com"&gt;joyeec9h3@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/legendecas"&gt;legendecas&lt;/a&gt; - &lt;strong&gt;Chengzhong Wu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:legendecas@gmail.com"&gt;legendecas@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marco-ippolito"&gt;marco-ippolito&lt;/a&gt; - &lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href="mailto:marcoippolito54@gmail.com"&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mcollina"&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href="mailto:matteo.collina@gmail.com"&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mhdawson"&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:midawson@redhat.com"&gt;midawson@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/panva"&gt;panva&lt;/a&gt; - &lt;strong&gt;Filip Skokan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:panva.ip@gmail.com"&gt;panva.ip@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RafaelGSS"&gt;RafaelGSS&lt;/a&gt; - &lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rafael.nunu@hotmail.com"&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RaisinTen"&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:raisinten@gmail.com"&gt;raisinten@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/richardlau"&gt;richardlau&lt;/a&gt; - &lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:richard.lau@ibm.com"&gt;richard.lau@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ronag"&gt;ronag&lt;/a&gt; - &lt;strong&gt;Robert Nagy&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ronagy@icloud.com"&gt;ronagy@icloud.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ruyadorno"&gt;ruyadorno&lt;/a&gt; - &lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruy@vlt.sh"&gt;ruy@vlt.sh&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ShogunPanda"&gt;ShogunPanda&lt;/a&gt; - &lt;strong&gt;Paolo Insogna&lt;/strong&gt; &amp;lt;&lt;a href="mailto:paolo@cowtech.it"&gt;paolo@cowtech.it&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/targos"&gt;targos&lt;/a&gt; - &lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:targos@protonmail.com"&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tniessen"&gt;tniessen&lt;/a&gt; - &lt;strong&gt;Tobias Nießen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:tniessen@tnie.de"&gt;tniessen@tnie.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;TSC regular members&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BethGriggs"&gt;BethGriggs&lt;/a&gt; - &lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bethanyngriggs@gmail.com"&gt;bethanyngriggs@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bnoordhuis"&gt;bnoordhuis&lt;/a&gt; - &lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:info@bnoordhuis.nl"&gt;info@bnoordhuis.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cjihrig"&gt;cjihrig&lt;/a&gt; - &lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjihrig@gmail.com"&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codebytere"&gt;codebytere&lt;/a&gt; - &lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shelley.vohr@gmail.com"&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GeoffreyBooth"&gt;GeoffreyBooth&lt;/a&gt; - &lt;strong&gt;Geoffrey Booth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:webadmin@geoffreybooth.com"&gt;webadmin@geoffreybooth.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MoLow"&gt;MoLow&lt;/a&gt; - &lt;strong&gt;Moshe Atlow&lt;/strong&gt; &amp;lt;&lt;a href="mailto:moshe@atlow.co.il"&gt;moshe@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Trott"&gt;Trott&lt;/a&gt; - &lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rtrott@gmail.com"&gt;rtrott@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;TSC emeriti members&lt;/summary&gt; 
 &lt;h4&gt;TSC emeriti members&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/addaleax"&gt;addaleax&lt;/a&gt; - &lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anna@addaleax.net"&gt;anna@addaleax.net&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/apapirovski"&gt;apapirovski&lt;/a&gt; - &lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:apapirovski@mac.com"&gt;apapirovski@mac.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ChALkeR"&gt;ChALkeR&lt;/a&gt; - &lt;strong&gt;Сковорода Никита Андреевич&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chalkerx@gmail.com"&gt;chalkerx@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/chrisdickinson"&gt;chrisdickinson&lt;/a&gt; - &lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christopher.s.dickinson@gmail.com"&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/danbev"&gt;danbev&lt;/a&gt; - &lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daniel.bevenius@gmail.com"&gt;daniel.bevenius@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/danielleadams"&gt;danielleadams&lt;/a&gt; - &lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href="mailto:adamzdanielle@gmail.com"&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/evanlucas"&gt;evanlucas&lt;/a&gt; - &lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:evanlucas@me.com"&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/fhinkel"&gt;fhinkel&lt;/a&gt; - &lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;&lt;a href="mailto:franziska.hinkelmann@gmail.com"&gt;franziska.hinkelmann@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Fishrock123"&gt;Fishrock123&lt;/a&gt; - &lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fishrock123@rocketmail.com"&gt;fishrock123@rocketmail.com&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gabrielschulhof"&gt;gabrielschulhof&lt;/a&gt; - &lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gabrielschulhof@gmail.com"&gt;gabrielschulhof@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gibfahn"&gt;gibfahn&lt;/a&gt; - &lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gibfahn@gmail.com"&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/indutny"&gt;indutny&lt;/a&gt; - &lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fedor@indutny.com"&gt;fedor@indutny.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/isaacs"&gt;isaacs&lt;/a&gt; - &lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@izs.me"&gt;i@izs.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joshgav"&gt;joshgav&lt;/a&gt; - &lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;&lt;a href="mailto:josh.gavant@outlook.com"&gt;josh.gavant@outlook.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mmarchini"&gt;mmarchini&lt;/a&gt; - &lt;strong&gt;Mary Marchini&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oss@mmarchini.me"&gt;oss@mmarchini.me&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mscdex"&gt;mscdex&lt;/a&gt; - &lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mscdex@mscdex.net"&gt;mscdex@mscdex.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MylesBorins"&gt;MylesBorins&lt;/a&gt; - &lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href="mailto:myles.borins@gmail.com"&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/nebrius"&gt;nebrius&lt;/a&gt; - &lt;strong&gt;Bryan Hughes&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@nebri.us"&gt;bryan@nebri.us&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ofrobots"&gt;ofrobots&lt;/a&gt; - &lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ofrobots@google.com"&gt;ofrobots@google.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/orangemocha"&gt;orangemocha&lt;/a&gt; - &lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;&lt;a href="mailto:orangemocha@nodejs.org"&gt;orangemocha@nodejs.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/piscisaureus"&gt;piscisaureus&lt;/a&gt; - &lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bertbelder@gmail.com"&gt;bertbelder@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rvagg"&gt;rvagg&lt;/a&gt; - &lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href="mailto:r@va.gg"&gt;r@va.gg&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sam-github"&gt;sam-github&lt;/a&gt; - &lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vieuxtech@gmail.com"&gt;vieuxtech@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/shigeki"&gt;shigeki&lt;/a&gt; - &lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ohtsu@ohtsu.org"&gt;ohtsu@ohtsu.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/thefourtheye"&gt;thefourtheye&lt;/a&gt; - &lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;&lt;a href="mailto:thechargingvolcano@gmail.com"&gt;thechargingvolcano@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/TimothyGu"&gt;TimothyGu&lt;/a&gt; - &lt;strong&gt;Tiancheng "Timothy" Gu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:timothygu99@gmail.com"&gt;timothygu99@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/trevnorris"&gt;trevnorris&lt;/a&gt; - &lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;&lt;a href="mailto:trev.norris@gmail.com"&gt;trev.norris@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;!-- node-core-utils and find-inactive-collaborators.mjs depend on the format
     of the collaborator list. If the format changes, those utilities need to be
     tested and updated. --&gt; 
&lt;h3&gt;Collaborators&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abmusse"&gt;abmusse&lt;/a&gt; - &lt;strong&gt;Abdirahim Musse&lt;/strong&gt; &amp;lt;&lt;a href="mailto:abdirahim.musse@ibm.com"&gt;abdirahim.musse@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/addaleax"&gt;addaleax&lt;/a&gt; - &lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anna@addaleax.net"&gt;anna@addaleax.net&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aditi-1400"&gt;Aditi-1400&lt;/a&gt; - &lt;strong&gt;Aditi Singh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:aditisingh1400@gmail.com"&gt;aditisingh1400@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aduh95"&gt;aduh95&lt;/a&gt; - &lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:duhamelantoine1995@gmail.com"&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/aduh95"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anonrig"&gt;anonrig&lt;/a&gt; - &lt;strong&gt;Yagiz Nizipli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yagiz@nizipli.com"&gt;yagiz@nizipli.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/anonrig"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atlowChemi"&gt;atlowChemi&lt;/a&gt; - &lt;strong&gt;Chemi Atlow&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chemi@atlow.co.il"&gt;chemi@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ayase-252"&gt;Ayase-252&lt;/a&gt; - &lt;strong&gt;Qingyu Deng&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@ayase-lab.com"&gt;i@ayase-lab.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bengl"&gt;bengl&lt;/a&gt; - &lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@bryanenglish.com"&gt;bryan@bryanenglish.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benjamingr"&gt;benjamingr&lt;/a&gt; - &lt;strong&gt;Benjamin Gruenbaum&lt;/strong&gt; &amp;lt;&lt;a href="mailto:benjamingr@gmail.com"&gt;benjamingr@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BethGriggs"&gt;BethGriggs&lt;/a&gt; - &lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bethanyngriggs@gmail.com"&gt;bethanyngriggs@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bnb"&gt;bnb&lt;/a&gt; - &lt;strong&gt;Tierney Cyren&lt;/strong&gt; &amp;lt;&lt;a href="mailto:hello@bnb.im"&gt;hello@bnb.im&lt;/a&gt;&amp;gt; (they/them)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bnoordhuis"&gt;bnoordhuis&lt;/a&gt; - &lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:info@bnoordhuis.nl"&gt;info@bnoordhuis.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BridgeAR"&gt;BridgeAR&lt;/a&gt; - &lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruben@bridgewater.de"&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cclauss"&gt;cclauss&lt;/a&gt; - &lt;strong&gt;Christian Clauss&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cclauss@me.com"&gt;cclauss@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cjihrig"&gt;cjihrig&lt;/a&gt; - &lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjihrig@gmail.com"&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codebytere"&gt;codebytere&lt;/a&gt; - &lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shelley.vohr@gmail.com"&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cola119"&gt;cola119&lt;/a&gt; - &lt;strong&gt;Kohei Ueno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kohei.ueno119@gmail.com"&gt;kohei.ueno119@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daeyeon"&gt;daeyeon&lt;/a&gt; - &lt;strong&gt;Daeyeon Jeong&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daeyeon.dev@gmail.com"&gt;daeyeon.dev@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dario-piotrowicz"&gt;dario-piotrowicz&lt;/a&gt; - &lt;strong&gt;Dario Piotrowicz&lt;/strong&gt; &amp;lt;&lt;a href="mailto:dario.piotrowicz@gmail.com"&gt;dario.piotrowicz@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/debadree25"&gt;debadree25&lt;/a&gt; - &lt;strong&gt;Debadree Chatterjee&lt;/strong&gt; &amp;lt;&lt;a href="mailto:debadree333@gmail.com"&gt;debadree333@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deokjinkim"&gt;deokjinkim&lt;/a&gt; - &lt;strong&gt;Deokjin Kim&lt;/strong&gt; &amp;lt;&lt;a href="mailto:deokjin81.kim@gmail.com"&gt;deokjin81.kim@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/edsadr"&gt;edsadr&lt;/a&gt; - &lt;strong&gt;Adrian Estrada&lt;/strong&gt; &amp;lt;&lt;a href="mailto:edsadr@gmail.com"&gt;edsadr@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ErickWendel"&gt;ErickWendel&lt;/a&gt; - &lt;strong&gt;Erick Wendel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:erick.workspace@gmail.com"&gt;erick.workspace@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ethan-Arrowood"&gt;Ethan-Arrowood&lt;/a&gt; - &lt;strong&gt;Ethan Arrowood&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ethan@arrowood.dev"&gt;ethan@arrowood.dev&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/F3n67u"&gt;F3n67u&lt;/a&gt; - &lt;strong&gt;Feng Yu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:F3n67u@outlook.com"&gt;F3n67u@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fhinkel"&gt;fhinkel&lt;/a&gt; - &lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;&lt;a href="mailto:franziska.hinkelmann@gmail.com"&gt;franziska.hinkelmann@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Flarna"&gt;Flarna&lt;/a&gt; - &lt;strong&gt;Gerhard Stöbich&lt;/strong&gt; &amp;lt;&lt;a href="mailto:deb2001-github@yahoo.de"&gt;deb2001-github@yahoo.de&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gabrielschulhof"&gt;gabrielschulhof&lt;/a&gt; - &lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gabrielschulhof@gmail.com"&gt;gabrielschulhof@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/geeksilva97"&gt;geeksilva97&lt;/a&gt; - &lt;strong&gt;Edy Silva&lt;/strong&gt; &amp;lt;&lt;a href="mailto:edigleyssonsilva@gmail.com"&gt;edigleyssonsilva@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gengjiawen"&gt;gengjiawen&lt;/a&gt; - &lt;strong&gt;Jiawen Geng&lt;/strong&gt; &amp;lt;&lt;a href="mailto:technicalcute@gmail.com"&gt;technicalcute@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GeoffreyBooth"&gt;GeoffreyBooth&lt;/a&gt; - &lt;strong&gt;Geoffrey Booth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:webadmin@geoffreybooth.com"&gt;webadmin@geoffreybooth.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gireeshpunathil"&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gpunathi@in.ibm.com"&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/guybedford"&gt;guybedford&lt;/a&gt; - &lt;strong&gt;Guy Bedford&lt;/strong&gt; &amp;lt;&lt;a href="mailto:guybedford@gmail.com"&gt;guybedford@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/H4ad"&gt;H4ad&lt;/a&gt; - &lt;strong&gt;Vinícius Lourenço Claro Cardoso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:contact@viniciusl.com.br"&gt;contact@viniciusl.com.br&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HarshithaKP"&gt;HarshithaKP&lt;/a&gt; - &lt;strong&gt;Harshitha K P&lt;/strong&gt; &amp;lt;&lt;a href="mailto:harshitha014@gmail.com"&gt;harshitha014@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/himself65"&gt;himself65&lt;/a&gt; - &lt;strong&gt;Zeyu "Alex" Yang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:himself65@outlook.com"&gt;himself65@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/IlyasShabi"&gt;IlyasShabi&lt;/a&gt; - &lt;strong&gt;Ilyas Shabi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ilyasshabi94@gmail.com"&gt;ilyasshabi94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/islandryu"&gt;islandryu&lt;/a&gt; - &lt;strong&gt;Ryuhei Shima&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shimaryuhei@gmail.com"&gt;shimaryuhei@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jakecastelli"&gt;jakecastelli&lt;/a&gt; - &lt;strong&gt;Jake Yuesong Li&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jake.yuesong@gmail.com"&gt;jake.yuesong@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JakobJingleheimer"&gt;JakobJingleheimer&lt;/a&gt; - &lt;strong&gt;Jacob Smith&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jacob@frende.me"&gt;jacob@frende.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jasnell"&gt;jasnell&lt;/a&gt; - &lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasnell@gmail.com"&gt;jasnell@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jazelly"&gt;jazelly&lt;/a&gt; - &lt;strong&gt;Jason Zhang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:xzha4350@gmail.com"&gt;xzha4350@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jkrems"&gt;jkrems&lt;/a&gt; - &lt;strong&gt;Jan Martin&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jan.krems@gmail.com"&gt;jan.krems@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JonasBa"&gt;JonasBa&lt;/a&gt; - &lt;strong&gt;Jonas Badalic&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jonas.badalic@gmail.com"&gt;jonas.badalic@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joyeecheung"&gt;joyeecheung&lt;/a&gt; - &lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:joyeec9h3@gmail.com"&gt;joyeec9h3@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/juanarbol"&gt;juanarbol&lt;/a&gt; - &lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;&lt;a href="mailto:soyjuanarbol@gmail.com"&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JungMinu"&gt;JungMinu&lt;/a&gt; - &lt;strong&gt;Minwoo Jung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:nodecorelab@gmail.com"&gt;nodecorelab@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KhafraDev"&gt;KhafraDev&lt;/a&gt; - &lt;strong&gt;Matthew Aitken&lt;/strong&gt; &amp;lt;&lt;a href="mailto:maitken033380023@gmail.com"&gt;maitken033380023@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/legendecas"&gt;legendecas&lt;/a&gt; - &lt;strong&gt;Chengzhong Wu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:legendecas@gmail.com"&gt;legendecas@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lemire"&gt;lemire&lt;/a&gt; - &lt;strong&gt;Daniel Lemire&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daniel@lemire.me"&gt;daniel@lemire.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LiviaMedeiros"&gt;LiviaMedeiros&lt;/a&gt; - &lt;strong&gt;LiviaMedeiros&lt;/strong&gt; &amp;lt;&lt;a href="mailto:livia@cirno.name"&gt;livia@cirno.name&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ljharb"&gt;ljharb&lt;/a&gt; - &lt;strong&gt;Jordan Harband&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ljharb@gmail.com"&gt;ljharb@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lpinca"&gt;lpinca&lt;/a&gt; - &lt;strong&gt;Luigi Pinca&lt;/strong&gt; &amp;lt;&lt;a href="mailto:luigipinca@gmail.com"&gt;luigipinca@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lukekarrys"&gt;lukekarrys&lt;/a&gt; - &lt;strong&gt;Luke Karrys&lt;/strong&gt; &amp;lt;&lt;a href="mailto:luke@lukekarrys.com"&gt;luke@lukekarrys.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Lxxyx"&gt;Lxxyx&lt;/a&gt; - &lt;strong&gt;Zijian Liu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:lxxyxzj@gmail.com"&gt;lxxyxzj@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marco-ippolito"&gt;marco-ippolito&lt;/a&gt; - &lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href="mailto:marcoippolito54@gmail.com"&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/marco-ippolito"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marsonya"&gt;marsonya&lt;/a&gt; - &lt;strong&gt;Akhil Marsonya&lt;/strong&gt; &amp;lt;&lt;a href="mailto:akhil.marsonya27@gmail.com"&gt;akhil.marsonya27@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MattiasBuelens"&gt;MattiasBuelens&lt;/a&gt; - &lt;strong&gt;Mattias Buelens&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mattias@buelens.com"&gt;mattias@buelens.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mcollina"&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href="mailto:matteo.collina@gmail.com"&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/mcollina"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/meixg"&gt;meixg&lt;/a&gt; - &lt;strong&gt;Xuguang Mei&lt;/strong&gt; &amp;lt;&lt;a href="mailto:meixuguang@gmail.com"&gt;meixuguang@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mhdawson"&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:midawson@redhat.com"&gt;midawson@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MoLow"&gt;MoLow&lt;/a&gt; - &lt;strong&gt;Moshe Atlow&lt;/strong&gt; &amp;lt;&lt;a href="mailto:moshe@atlow.co.il"&gt;moshe@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MrJithil"&gt;MrJithil&lt;/a&gt; - &lt;strong&gt;Jithil P Ponnan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jithil@outlook.com"&gt;jithil@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ovflowd"&gt;ovflowd&lt;/a&gt; - &lt;strong&gt;Claudio Wunder&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cwunder@gnome.org"&gt;cwunder@gnome.org&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/panva"&gt;panva&lt;/a&gt; - &lt;strong&gt;Filip Skokan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:panva.ip@gmail.com"&gt;panva.ip@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/panva"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pimterry"&gt;pimterry&lt;/a&gt; - &lt;strong&gt;Tim Perry&lt;/strong&gt; &amp;lt;&lt;a href="mailto:pimterry@gmail.com"&gt;pimterry@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pmarchini"&gt;pmarchini&lt;/a&gt; - &lt;strong&gt;Pietro Marchini&lt;/strong&gt; &amp;lt;&lt;a href="mailto:pietro.marchini94@gmail.com"&gt;pietro.marchini94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/puskin"&gt;puskin&lt;/a&gt; - &lt;strong&gt;Giovanni Bucci&lt;/strong&gt; &amp;lt;&lt;a href="mailto:github@puskin.it"&gt;github@puskin.it&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Qard"&gt;Qard&lt;/a&gt; - &lt;strong&gt;Stephen Belanger&lt;/strong&gt; &amp;lt;&lt;a href="mailto:admin@stephenbelanger.com"&gt;admin@stephenbelanger.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RafaelGSS"&gt;RafaelGSS&lt;/a&gt; - &lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rafael.nunu@hotmail.com"&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/RafaelGSS"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RaisinTen"&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:raisinten@gmail.com"&gt;raisinten@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/RaisinTen"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/richardlau"&gt;richardlau&lt;/a&gt; - &lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:richard.lau@ibm.com"&gt;richard.lau@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rluvaton"&gt;rluvaton&lt;/a&gt; - &lt;strong&gt;Raz Luvaton&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rluvaton@gmail.com"&gt;rluvaton@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ronag"&gt;ronag&lt;/a&gt; - &lt;strong&gt;Robert Nagy&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ronagy@icloud.com"&gt;ronagy@icloud.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ruyadorno"&gt;ruyadorno&lt;/a&gt; - &lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruy@vlt.sh"&gt;ruy@vlt.sh&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/santigimeno"&gt;santigimeno&lt;/a&gt; - &lt;strong&gt;Santiago Gimeno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:santiago.gimeno@gmail.com"&gt;santiago.gimeno@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ShogunPanda"&gt;ShogunPanda&lt;/a&gt; - &lt;strong&gt;Paolo Insogna&lt;/strong&gt; &amp;lt;&lt;a href="mailto:paolo@cowtech.it"&gt;paolo@cowtech.it&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/srl295"&gt;srl295&lt;/a&gt; - &lt;strong&gt;Steven R Loomis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:srl295@gmail.com"&gt;srl295@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/StefanStojanovic"&gt;StefanStojanovic&lt;/a&gt; - &lt;strong&gt;Stefan Stojanovic&lt;/strong&gt; &amp;lt;&lt;a href="mailto:stefan.stojanovic@janeasystems.com"&gt;stefan.stojanovic@janeasystems.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sxa"&gt;sxa&lt;/a&gt; - &lt;strong&gt;Stewart X Addison&lt;/strong&gt; &amp;lt;&lt;a href="mailto:sxa@redhat.com"&gt;sxa@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/targos"&gt;targos&lt;/a&gt; - &lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:targos@protonmail.com"&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/theanarkh"&gt;theanarkh&lt;/a&gt; - &lt;strong&gt;theanarkh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:theratliter@gmail.com"&gt;theratliter@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tniessen"&gt;tniessen&lt;/a&gt; - &lt;strong&gt;Tobias Nießen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:tniessen@tnie.de"&gt;tniessen@tnie.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trivikr"&gt;trivikr&lt;/a&gt; - &lt;strong&gt;Trivikram Kamat&lt;/strong&gt; &amp;lt;&lt;a href="mailto:trivikr.dev@gmail.com"&gt;trivikr.dev@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Trott"&gt;Trott&lt;/a&gt; - &lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rtrott@gmail.com"&gt;rtrott@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/UlisesGascon"&gt;UlisesGascon&lt;/a&gt; - &lt;strong&gt;Ulises Gascón&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ulisesgascongonzalez@gmail.com"&gt;ulisesgascongonzalez@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vmoroz"&gt;vmoroz&lt;/a&gt; - &lt;strong&gt;Vladimir Morozov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vmorozov@microsoft.com"&gt;vmorozov@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VoltrexKeyva"&gt;VoltrexKeyva&lt;/a&gt; - &lt;strong&gt;Mohammed Keyvanzadeh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mohammadkeyvanzade94@gmail.com"&gt;mohammadkeyvanzade94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zcbenz"&gt;zcbenz&lt;/a&gt; - &lt;strong&gt;Cheng Zhao&lt;/strong&gt; &amp;lt;&lt;a href="mailto:zcbenz@gmail.com"&gt;zcbenz@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ZYSzys"&gt;ZYSzys&lt;/a&gt; - &lt;strong&gt;Yongsheng Zhang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:zyszys98@gmail.com"&gt;zyszys98@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Emeriti&lt;/summary&gt; 
 &lt;!-- find-inactive-collaborators.mjs depends on the format of the emeriti list.
     If the format changes, those utilities need to be tested and updated. --&gt; 
 &lt;h3&gt;Collaborator emeriti&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ak239"&gt;ak239&lt;/a&gt; - &lt;strong&gt;Aleksei Koziatinskii&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ak239spb@gmail.com"&gt;ak239spb@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/andrasq"&gt;andrasq&lt;/a&gt; - &lt;strong&gt;Andras&lt;/strong&gt; &amp;lt;&lt;a href="mailto:andras@kinvey.com"&gt;andras@kinvey.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AndreasMadsen"&gt;AndreasMadsen&lt;/a&gt; - &lt;strong&gt;Andreas Madsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:amwebdk@gmail.com"&gt;amwebdk@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AnnaMag"&gt;AnnaMag&lt;/a&gt; - &lt;strong&gt;Anna M. Kedzierska&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anna.m.kedzierska@gmail.com"&gt;anna.m.kedzierska@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/antsmartian"&gt;antsmartian&lt;/a&gt; - &lt;strong&gt;Anto Aravinth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anto.aravinth.cse@gmail.com"&gt;anto.aravinth.cse@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/apapirovski"&gt;apapirovski&lt;/a&gt; - &lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:apapirovski@mac.com"&gt;apapirovski@mac.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/aqrln"&gt;aqrln&lt;/a&gt; - &lt;strong&gt;Alexey Orlenko&lt;/strong&gt; &amp;lt;&lt;a href="mailto:eaglexrlnk@gmail.com"&gt;eaglexrlnk@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AshCripps"&gt;AshCripps&lt;/a&gt; - &lt;strong&gt;Ash Cripps&lt;/strong&gt; &amp;lt;&lt;a href="mailto:email@ashleycripps.co.uk"&gt;email@ashleycripps.co.uk&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bcoe"&gt;bcoe&lt;/a&gt; - &lt;strong&gt;Ben Coe&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bencoe@gmail.com"&gt;bencoe@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bmeck"&gt;bmeck&lt;/a&gt; - &lt;strong&gt;Bradley Farias&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bradley.meck@gmail.com"&gt;bradley.meck@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bmeurer"&gt;bmeurer&lt;/a&gt; - &lt;strong&gt;Benedikt Meurer&lt;/strong&gt; &amp;lt;&lt;a href="mailto:benedikt.meurer@gmail.com"&gt;benedikt.meurer@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/boneskull"&gt;boneskull&lt;/a&gt; - &lt;strong&gt;Christopher Hiller&lt;/strong&gt; &amp;lt;&lt;a href="mailto:boneskull@boneskull.com"&gt;boneskull@boneskull.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/brendanashworth"&gt;brendanashworth&lt;/a&gt; - &lt;strong&gt;Brendan Ashworth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:brendan.ashworth@me.com"&gt;brendan.ashworth@me.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bzoz"&gt;bzoz&lt;/a&gt; - &lt;strong&gt;Bartosz Sosnowski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bartosz@janeasystems.com"&gt;bartosz@janeasystems.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/calvinmetcalf"&gt;calvinmetcalf&lt;/a&gt; - &lt;strong&gt;Calvin Metcalf&lt;/strong&gt; &amp;lt;&lt;a href="mailto:calvin.metcalf@gmail.com"&gt;calvin.metcalf@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ChALkeR"&gt;ChALkeR&lt;/a&gt; - &lt;strong&gt;Сковорода Никита Андреевич&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chalkerx@gmail.com"&gt;chalkerx@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/chrisdickinson"&gt;chrisdickinson&lt;/a&gt; - &lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christopher.s.dickinson@gmail.com"&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/claudiorodriguez"&gt;claudiorodriguez&lt;/a&gt; - &lt;strong&gt;Claudio Rodriguez&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjrodr@yahoo.com"&gt;cjrodr@yahoo.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/danbev"&gt;danbev&lt;/a&gt; - &lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daniel.bevenius@gmail.com"&gt;daniel.bevenius@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/danielleadams"&gt;danielleadams&lt;/a&gt; - &lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href="mailto:adamzdanielle@gmail.com"&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/DavidCai1993"&gt;DavidCai1993&lt;/a&gt; - &lt;strong&gt;David Cai&lt;/strong&gt; &amp;lt;&lt;a href="mailto:davidcai1993@yahoo.com"&gt;davidcai1993@yahoo.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/davisjam"&gt;davisjam&lt;/a&gt; - &lt;strong&gt;Jamie Davis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:davisjam@vt.edu"&gt;davisjam@vt.edu&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/devnexen"&gt;devnexen&lt;/a&gt; - &lt;strong&gt;David Carlier&lt;/strong&gt; &amp;lt;&lt;a href="mailto:devnexen@gmail.com"&gt;devnexen@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/devsnek"&gt;devsnek&lt;/a&gt; - &lt;strong&gt;Gus Caplan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@gus.host"&gt;me@gus.host&lt;/a&gt;&amp;gt; (they/them)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/digitalinfinity"&gt;digitalinfinity&lt;/a&gt; - &lt;strong&gt;Hitesh Kanwathirtha&lt;/strong&gt; &amp;lt;&lt;a href="mailto:digitalinfinity@gmail.com"&gt;digitalinfinity@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dmabupt"&gt;dmabupt&lt;/a&gt; - &lt;strong&gt;Xu Meng&lt;/strong&gt; &amp;lt;&lt;a href="mailto:dmabupt@gmail.com"&gt;dmabupt@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dnlup"&gt;dnlup&lt;/a&gt; - &lt;strong&gt;dnlup&lt;/strong&gt; &amp;lt;&lt;a href="mailto:dnlup.dev@gmail.com"&gt;dnlup.dev@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/eljefedelrodeodeljefe"&gt;eljefedelrodeodeljefe&lt;/a&gt; - &lt;strong&gt;Robert Jefe Lindstaedt&lt;/strong&gt; &amp;lt;&lt;a href="mailto:robert.lindstaedt@gmail.com"&gt;robert.lindstaedt@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/estliberitas"&gt;estliberitas&lt;/a&gt; - &lt;strong&gt;Alexander Makarenko&lt;/strong&gt; &amp;lt;&lt;a href="mailto:estliberitas@gmail.com"&gt;estliberitas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/eugeneo"&gt;eugeneo&lt;/a&gt; - &lt;strong&gt;Eugene Ostroukhov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:eostroukhov@google.com"&gt;eostroukhov@google.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/evanlucas"&gt;evanlucas&lt;/a&gt; - &lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:evanlucas@me.com"&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/firedfox"&gt;firedfox&lt;/a&gt; - &lt;strong&gt;Daniel Wang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:wangyang0123@gmail.com"&gt;wangyang0123@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Fishrock123"&gt;Fishrock123&lt;/a&gt; - &lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fishrock123@rocketmail.com"&gt;fishrock123@rocketmail.com&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gdams"&gt;gdams&lt;/a&gt; - &lt;strong&gt;George Adams&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gadams@microsoft.com"&gt;gadams@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/geek"&gt;geek&lt;/a&gt; - &lt;strong&gt;Wyatt Preul&lt;/strong&gt; &amp;lt;&lt;a href="mailto:wpreul@gmail.com"&gt;wpreul@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gibfahn"&gt;gibfahn&lt;/a&gt; - &lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gibfahn@gmail.com"&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/glentiki"&gt;glentiki&lt;/a&gt; - &lt;strong&gt;Glen Keane&lt;/strong&gt; &amp;lt;&lt;a href="mailto:glenkeane.94@gmail.com"&gt;glenkeane.94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hashseed"&gt;hashseed&lt;/a&gt; - &lt;strong&gt;Yang Guo&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yangguo@chromium.org"&gt;yangguo@chromium.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hiroppy"&gt;hiroppy&lt;/a&gt; - &lt;strong&gt;Yuta Hiroto&lt;/strong&gt; &amp;lt;&lt;a href="mailto:hello@hiroppy.me"&gt;hello@hiroppy.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/iansu"&gt;iansu&lt;/a&gt; - &lt;strong&gt;Ian Sutherland&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ian@iansutherland.ca"&gt;ian@iansutherland.ca&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/iarna"&gt;iarna&lt;/a&gt; - &lt;strong&gt;Rebecca Turner&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@re-becca.org"&gt;me@re-becca.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/imran-iq"&gt;imran-iq&lt;/a&gt; - &lt;strong&gt;Imran Iqbal&lt;/strong&gt; &amp;lt;&lt;a href="mailto:imran@imraniqbal.org"&gt;imran@imraniqbal.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/imyller"&gt;imyller&lt;/a&gt; - &lt;strong&gt;Ilkka Myller&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ilkka.myller@nodefield.com"&gt;ilkka.myller@nodefield.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/indutny"&gt;indutny&lt;/a&gt; - &lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fedor@indutny.com"&gt;fedor@indutny.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/isaacs"&gt;isaacs&lt;/a&gt; - &lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@izs.me"&gt;i@izs.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/italoacasas"&gt;italoacasas&lt;/a&gt; - &lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@italoacasas.com"&gt;me@italoacasas.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/JacksonTian"&gt;JacksonTian&lt;/a&gt; - &lt;strong&gt;Jackson Tian&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shyvo1987@gmail.com"&gt;shyvo1987@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jasongin"&gt;jasongin&lt;/a&gt; - &lt;strong&gt;Jason Ginchereau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasongin@microsoft.com"&gt;jasongin@microsoft.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jbergstroem"&gt;jbergstroem&lt;/a&gt; - &lt;strong&gt;Johan Bergström&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bugs@bergstroem.nu"&gt;bugs@bergstroem.nu&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jdalton"&gt;jdalton&lt;/a&gt; - &lt;strong&gt;John-David Dalton&lt;/strong&gt; &amp;lt;&lt;a href="mailto:john.david.dalton@gmail.com"&gt;john.david.dalton@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jhamhader"&gt;jhamhader&lt;/a&gt; - &lt;strong&gt;Yuval Brik&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yuval@brik.org.il"&gt;yuval@brik.org.il&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joaocgreis"&gt;joaocgreis&lt;/a&gt; - &lt;strong&gt;João Reis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:reis@janeasystems.com"&gt;reis@janeasystems.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joesepi"&gt;joesepi&lt;/a&gt; - &lt;strong&gt;Joe Sepi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:sepi@joesepi.com"&gt;sepi@joesepi.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joshgav"&gt;joshgav&lt;/a&gt; - &lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;&lt;a href="mailto:josh.gavant@outlook.com"&gt;josh.gavant@outlook.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/julianduque"&gt;julianduque&lt;/a&gt; - &lt;strong&gt;Julian Duque&lt;/strong&gt; &amp;lt;&lt;a href="mailto:julianduquej@gmail.com"&gt;julianduquej@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kfarnung"&gt;kfarnung&lt;/a&gt; - &lt;strong&gt;Kyle Farnung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kfarnung@microsoft.com"&gt;kfarnung@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kunalspathak"&gt;kunalspathak&lt;/a&gt; - &lt;strong&gt;Kunal Pathak&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kunal.pathak@microsoft.com"&gt;kunal.pathak@microsoft.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kuriyosh"&gt;kuriyosh&lt;/a&gt; - &lt;strong&gt;Yoshiki Kurihara&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yosyos0306@gmail.com"&gt;yosyos0306@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kvakil"&gt;kvakil&lt;/a&gt; - &lt;strong&gt;Keyhan Vakil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kvakil@sylph.kvakil.me"&gt;kvakil@sylph.kvakil.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lance"&gt;lance&lt;/a&gt; - &lt;strong&gt;Lance Ball&lt;/strong&gt; &amp;lt;&lt;a href="mailto:lball@redhat.com"&gt;lball@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Leko"&gt;Leko&lt;/a&gt; - &lt;strong&gt;Shingo Inoue&lt;/strong&gt; &amp;lt;&lt;a href="mailto:leko.noor@gmail.com"&gt;leko.noor@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Linkgoron"&gt;Linkgoron&lt;/a&gt; - &lt;strong&gt;Nitzan Uziely&lt;/strong&gt; &amp;lt;&lt;a href="mailto:linkgoron@gmail.com"&gt;linkgoron@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lucamaraschi"&gt;lucamaraschi&lt;/a&gt; - &lt;strong&gt;Luca Maraschi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:luca.maraschi@gmail.com"&gt;luca.maraschi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lundibundi"&gt;lundibundi&lt;/a&gt; - &lt;strong&gt;Denys Otrishko&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shishugi@gmail.com"&gt;shishugi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lxe"&gt;lxe&lt;/a&gt; - &lt;strong&gt;Aleksey Smolenchuk&lt;/strong&gt; &amp;lt;&lt;a href="mailto:lxe@lxe.co"&gt;lxe@lxe.co&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/maclover7"&gt;maclover7&lt;/a&gt; - &lt;strong&gt;Jon Moss&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@jonathanmoss.me"&gt;me@jonathanmoss.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mafintosh"&gt;mafintosh&lt;/a&gt; - &lt;strong&gt;Mathias Buus&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mathiasbuus@gmail.com"&gt;mathiasbuus@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/matthewloring"&gt;matthewloring&lt;/a&gt; - &lt;strong&gt;Matthew Loring&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mattloring@google.com"&gt;mattloring@google.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Mesteery"&gt;Mesteery&lt;/a&gt; - &lt;strong&gt;Mestery&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mestery@protonmail.com"&gt;mestery@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/micnic"&gt;micnic&lt;/a&gt; - &lt;strong&gt;Nicu Micleușanu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:micnic90@gmail.com"&gt;micnic90@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mikeal"&gt;mikeal&lt;/a&gt; - &lt;strong&gt;Mikeal Rogers&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mikeal.rogers@gmail.com"&gt;mikeal.rogers@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/miladfarca"&gt;miladfarca&lt;/a&gt; - &lt;strong&gt;Milad Fa&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mfarazma@redhat.com"&gt;mfarazma@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mildsunrise"&gt;mildsunrise&lt;/a&gt; - &lt;strong&gt;Alba Mendez&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@alba.sh"&gt;me@alba.sh&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/misterdjules"&gt;misterdjules&lt;/a&gt; - &lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jgilli@netflix.com"&gt;jgilli@netflix.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mmarchini"&gt;mmarchini&lt;/a&gt; - &lt;strong&gt;Mary Marchini&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oss@mmarchini.me"&gt;oss@mmarchini.me&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/monsanto"&gt;monsanto&lt;/a&gt; - &lt;strong&gt;Christopher Monsanto&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chris@monsan.to"&gt;chris@monsan.to&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MoonBall"&gt;MoonBall&lt;/a&gt; - &lt;strong&gt;Chen Gang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gangc.cxy@foxmail.com"&gt;gangc.cxy@foxmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mscdex"&gt;mscdex&lt;/a&gt; - &lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mscdex@mscdex.net"&gt;mscdex@mscdex.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MylesBorins"&gt;MylesBorins&lt;/a&gt; - &lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href="mailto:myles.borins@gmail.com"&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/not-an-aardvark"&gt;not-an-aardvark&lt;/a&gt; - &lt;strong&gt;Teddy Katz&lt;/strong&gt; &amp;lt;&lt;a href="mailto:teddy.katz@gmail.com"&gt;teddy.katz@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ofrobots"&gt;ofrobots&lt;/a&gt; - &lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ofrobots@google.com"&gt;ofrobots@google.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Olegas"&gt;Olegas&lt;/a&gt; - &lt;strong&gt;Oleg Elifantiev&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oleg@elifantiev.ru"&gt;oleg@elifantiev.ru&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/orangemocha"&gt;orangemocha&lt;/a&gt; - &lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;&lt;a href="mailto:orangemocha@nodejs.org"&gt;orangemocha@nodejs.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/othiym23"&gt;othiym23&lt;/a&gt; - &lt;strong&gt;Forrest L Norvell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ogd@aoaioxxysz.net"&gt;ogd@aoaioxxysz.net&lt;/a&gt;&amp;gt; (they/them/themself)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/oyyd"&gt;oyyd&lt;/a&gt; - &lt;strong&gt;Ouyang Yadong&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oyydoibh@gmail.com"&gt;oyydoibh@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/petkaantonov"&gt;petkaantonov&lt;/a&gt; - &lt;strong&gt;Petka Antonov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:petka_antonov@hotmail.com"&gt;petka_antonov@hotmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/phillipj"&gt;phillipj&lt;/a&gt; - &lt;strong&gt;Phillip Johnsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:johphi@gmail.com"&gt;johphi@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/piscisaureus"&gt;piscisaureus&lt;/a&gt; - &lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bertbelder@gmail.com"&gt;bertbelder@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pmq20"&gt;pmq20&lt;/a&gt; - &lt;strong&gt;Minqi Pan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:pmq2001@gmail.com"&gt;pmq2001@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/PoojaDurgad"&gt;PoojaDurgad&lt;/a&gt; - &lt;strong&gt;Pooja D P&lt;/strong&gt; &amp;lt;&lt;a href="mailto:Pooja.D.P@ibm.com"&gt;Pooja.D.P@ibm.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/princejwesley"&gt;princejwesley&lt;/a&gt; - &lt;strong&gt;Prince John Wesley&lt;/strong&gt; &amp;lt;&lt;a href="mailto:princejohnwesley@gmail.com"&gt;princejohnwesley@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/psmarshall"&gt;psmarshall&lt;/a&gt; - &lt;strong&gt;Peter Marshall&lt;/strong&gt; &amp;lt;&lt;a href="mailto:petermarshall@chromium.org"&gt;petermarshall@chromium.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/puzpuzpuz"&gt;puzpuzpuz&lt;/a&gt; - &lt;strong&gt;Andrey Pechkurov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:apechkurov@gmail.com"&gt;apechkurov@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/refack"&gt;refack&lt;/a&gt; - &lt;strong&gt;Refael Ackermann (רפאל פלחי)&lt;/strong&gt; &amp;lt;&lt;a href="mailto:refack@gmail.com"&gt;refack@gmail.com&lt;/a&gt;&amp;gt; (he/him/הוא/אתה)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rexagod"&gt;rexagod&lt;/a&gt; - &lt;strong&gt;Pranshu Srivastava&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rexagod@gmail.com"&gt;rexagod@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rickyes"&gt;rickyes&lt;/a&gt; - &lt;strong&gt;Ricky Zhou&lt;/strong&gt; &amp;lt;&lt;a href="mailto:0x19951125@gmail.com"&gt;0x19951125@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rlidwka"&gt;rlidwka&lt;/a&gt; - &lt;strong&gt;Alex Kocharin&lt;/strong&gt; &amp;lt;&lt;a href="mailto:alex@kocharin.ru"&gt;alex@kocharin.ru&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rmg"&gt;rmg&lt;/a&gt; - &lt;strong&gt;Ryan Graham&lt;/strong&gt; &amp;lt;&lt;a href="mailto:r.m.graham@gmail.com"&gt;r.m.graham@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/robertkowalski"&gt;robertkowalski&lt;/a&gt; - &lt;strong&gt;Robert Kowalski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rok@kowalski.gd"&gt;rok@kowalski.gd&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/romankl"&gt;romankl&lt;/a&gt; - &lt;strong&gt;Roman Klauke&lt;/strong&gt; &amp;lt;&lt;a href="mailto:romaaan.git@gmail.com"&gt;romaaan.git@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ronkorving"&gt;ronkorving&lt;/a&gt; - &lt;strong&gt;Ron Korving&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ron@ronkorving.nl"&gt;ron@ronkorving.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/RReverser"&gt;RReverser&lt;/a&gt; - &lt;strong&gt;Ingvar Stepanyan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@rreverser.com"&gt;me@rreverser.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rubys"&gt;rubys&lt;/a&gt; - &lt;strong&gt;Sam Ruby&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rubys@intertwingly.net"&gt;rubys@intertwingly.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rvagg"&gt;rvagg&lt;/a&gt; - &lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rod@vagg.org"&gt;rod@vagg.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ryzokuken"&gt;ryzokuken&lt;/a&gt; - &lt;strong&gt;Ujjwal Sharma&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ryzokuken@disroot.org"&gt;ryzokuken@disroot.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/saghul"&gt;saghul&lt;/a&gt; - &lt;strong&gt;Saúl Ibarra Corretgé&lt;/strong&gt; &amp;lt;&lt;a href="mailto:s@saghul.net"&gt;s@saghul.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sam-github"&gt;sam-github&lt;/a&gt; - &lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vieuxtech@gmail.com"&gt;vieuxtech@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sebdeckers"&gt;sebdeckers&lt;/a&gt; - &lt;strong&gt;Sebastiaan Deckers&lt;/strong&gt; &amp;lt;&lt;a href="mailto:sebdeckers83@gmail.com"&gt;sebdeckers83@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/seishun"&gt;seishun&lt;/a&gt; - &lt;strong&gt;Nikolai Vavilov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vvnicholas@gmail.com"&gt;vvnicholas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/shigeki"&gt;shigeki&lt;/a&gt; - &lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ohtsu@ohtsu.org"&gt;ohtsu@ohtsu.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/shisama"&gt;shisama&lt;/a&gt; - &lt;strong&gt;Masashi Hirano&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shisama07@gmail.com"&gt;shisama07@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/silverwind"&gt;silverwind&lt;/a&gt; - &lt;strong&gt;Roman Reiss&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@silverwind.io"&gt;me@silverwind.io&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/starkwang"&gt;starkwang&lt;/a&gt; - &lt;strong&gt;Weijia Wang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:starkwang@126.com"&gt;starkwang@126.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/stefanmb"&gt;stefanmb&lt;/a&gt; - &lt;strong&gt;Stefan Budeanu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:stefan@budeanu.com"&gt;stefan@budeanu.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tellnes"&gt;tellnes&lt;/a&gt; - &lt;strong&gt;Christian Tellnes&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christian@tellnes.no"&gt;christian@tellnes.no&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/thefourtheye"&gt;thefourtheye&lt;/a&gt; - &lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;&lt;a href="mailto:thechargingvolcano@gmail.com"&gt;thechargingvolcano@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/thlorenz"&gt;thlorenz&lt;/a&gt; - &lt;strong&gt;Thorsten Lorenz&lt;/strong&gt; &amp;lt;&lt;a href="mailto:thlorenz@gmx.de"&gt;thlorenz@gmx.de&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/TimothyGu"&gt;TimothyGu&lt;/a&gt; - &lt;strong&gt;Tiancheng "Timothy" Gu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:timothygu99@gmail.com"&gt;timothygu99@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/trevnorris"&gt;trevnorris&lt;/a&gt; - &lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;&lt;a href="mailto:trev.norris@gmail.com"&gt;trev.norris@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tunniclm"&gt;tunniclm&lt;/a&gt; - &lt;strong&gt;Mike Tunnicliffe&lt;/strong&gt; &amp;lt;&lt;a href="mailto:m.j.tunnicliffe@gmail.com"&gt;m.j.tunnicliffe@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/vdeturckheim"&gt;vdeturckheim&lt;/a&gt; - &lt;strong&gt;Vladimir de Turckheim&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vlad2t@hotmail.com"&gt;vlad2t@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/vkurchatkin"&gt;vkurchatkin&lt;/a&gt; - &lt;strong&gt;Vladimir Kurchatkin&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vladimir.kurchatkin@gmail.com"&gt;vladimir.kurchatkin@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/vsemozhetbyt"&gt;vsemozhetbyt&lt;/a&gt; - &lt;strong&gt;Vse Mozhet Byt&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vsemozhetbyt@gmail.com"&gt;vsemozhetbyt@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/watilde"&gt;watilde&lt;/a&gt; - &lt;strong&gt;Daijiro Wachi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daijiro.wachi@gmail.com"&gt;daijiro.wachi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/watson"&gt;watson&lt;/a&gt; - &lt;strong&gt;Thomas Watson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:w@tson.dk"&gt;w@tson.dk&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/whitlockjc"&gt;whitlockjc&lt;/a&gt; - &lt;strong&gt;Jeremy Whitlock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jwhitlock@apache.org"&gt;jwhitlock@apache.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/XadillaX"&gt;XadillaX&lt;/a&gt; - &lt;strong&gt;Khaidi Chu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@2333.moe"&gt;i@2333.moe&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/yashLadha"&gt;yashLadha&lt;/a&gt; - &lt;strong&gt;Yash Ladha&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yash@yashladha.in"&gt;yash@yashladha.in&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/yhwang"&gt;yhwang&lt;/a&gt; - &lt;strong&gt;Yihong Wang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yh.wang@ibm.com"&gt;yh.wang@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/yorkie"&gt;yorkie&lt;/a&gt; - &lt;strong&gt;Yorkie Liu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yorkiefixer@gmail.com"&gt;yorkiefixer@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/yosuke-furukawa"&gt;yosuke-furukawa&lt;/a&gt; - &lt;strong&gt;Yosuke Furukawa&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yosuke.furukawa@gmail.com"&gt;yosuke.furukawa@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;!--lint enable prohibited-strings--&gt; 
&lt;p&gt;Collaborators follow the &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/collaborator-guide.md"&gt;Collaborator Guide&lt;/a&gt; in maintaining the Node.js project.&lt;/p&gt; 
&lt;h3&gt;Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1ilsang"&gt;1ilsang&lt;/a&gt; - &lt;strong&gt;Sangchul Lee&lt;/strong&gt; &amp;lt;&lt;a href="mailto:1ilsang.dev@gmail.com"&gt;1ilsang.dev@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atlowChemi"&gt;atlowChemi&lt;/a&gt; - &lt;strong&gt;Chemi Atlow&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chemi@atlow.co.il"&gt;chemi@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ayase-252"&gt;Ayase-252&lt;/a&gt; - &lt;strong&gt;Qingyu Deng&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@ayase-lab.com"&gt;i@ayase-lab.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bjohansebas"&gt;bjohansebas&lt;/a&gt; - &lt;strong&gt;Sebastian Beltran&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bjohansebas@gmail.com"&gt;bjohansebas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bmuenzenmeyer"&gt;bmuenzenmeyer&lt;/a&gt; - &lt;strong&gt;Brian Muenzenmeyer&lt;/strong&gt; &amp;lt;&lt;a href="mailto:brian.muenzenmeyer@gmail.com"&gt;brian.muenzenmeyer@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CanadaHonk"&gt;CanadaHonk&lt;/a&gt; - &lt;strong&gt;Oliver Medhurst&lt;/strong&gt; &amp;lt;&lt;a href="mailto:honk@goose.icu"&gt;honk@goose.icu&lt;/a&gt;&amp;gt; (they/them)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daeyeon"&gt;daeyeon&lt;/a&gt; - &lt;strong&gt;Daeyeon Jeong&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daeyeon.dev@gmail.com"&gt;daeyeon.dev@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/F3n67u"&gt;F3n67u&lt;/a&gt; - &lt;strong&gt;Feng Yu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:F3n67u@outlook.com"&gt;F3n67u@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gireeshpunathil"&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gpunathi@in.ibm.com"&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gurgunday"&gt;gurgunday&lt;/a&gt; - &lt;strong&gt;Gürgün Dayıoğlu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:hey@gurgun.day"&gt;hey@gurgun.day&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HBSPS"&gt;HBSPS&lt;/a&gt; - &lt;strong&gt;Wiyeong Seo&lt;/strong&gt; &amp;lt;&lt;a href="mailto:hbsps.dev@gmail.com"&gt;hbsps.dev@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iam-frankqiu"&gt;iam-frankqiu&lt;/a&gt; - &lt;strong&gt;Frank Qiu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:iam.frankqiu@gmail.com"&gt;iam.frankqiu@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KevinEady"&gt;KevinEady&lt;/a&gt; - &lt;strong&gt;Kevin Eady&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kevin.c.eady@gmail.com"&gt;kevin.c.eady@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marsonya"&gt;marsonya&lt;/a&gt; - &lt;strong&gt;Akhil Marsonya&lt;/strong&gt; &amp;lt;&lt;a href="mailto:akhil.marsonya27@gmail.com"&gt;akhil.marsonya27@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/meixg"&gt;meixg&lt;/a&gt; - &lt;strong&gt;Xuguang Mei&lt;/strong&gt; &amp;lt;&lt;a href="mailto:meixuguang@gmail.com"&gt;meixuguang@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/preveen-stack"&gt;preveen-stack&lt;/a&gt; - &lt;strong&gt;Preveen Padmanabhan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:wide4head@gmail.com"&gt;wide4head@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RaisinTen"&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:raisinten@gmail.com"&gt;raisinten@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VoltrexKeyva"&gt;VoltrexKeyva&lt;/a&gt; - &lt;strong&gt;Mohammed Keyvanzadeh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mohammadkeyvanzade94@gmail.com"&gt;mohammadkeyvanzade94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Triagers follow the &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/issues.md#triaging-a-bug-report"&gt;Triage Guide&lt;/a&gt; when responding to new issues.&lt;/p&gt; 
&lt;h3&gt;Release keys&lt;/h3&gt; 
&lt;p&gt;Primary GPG keys for Node.js Releasers (some Releasers sign with subkeys):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:duhamelantoine1995@gmail.com"&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;5BE8A3F6C8A5C01D106C0AD820B1A390B168D356&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;&lt;a href="mailto:soyjuanarbol@gmail.com"&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href="mailto:marcoippolito54@gmail.com"&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;CC68F5A3106FF448322E48ED27F5E38D5B0A215F&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:targos@protonmail.com"&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rafael.nunu@hotmail.com"&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:richard.lau@ibm.com"&gt;richard.lau@ibm.com&lt;/a&gt;&amp;gt; &lt;code&gt;C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruyadorno@hotmail.com"&gt;ruyadorno@hotmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;108F52B48DB57BB0CC439B2997B01419BD92F80A&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ulises Gascón&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ulisesgascongonzalez@gmail.com"&gt;ulisesgascongonzalez@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;A363A499291CBBC940DD62E41F10027AF002F8B0&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can use the keyring the project maintains at &lt;a href="https://github.com/nodejs/release-keys/raw/refs/heads/main/gpg-only-active-keys/pubring.kbx"&gt;https://github.com/nodejs/release-keys/raw/refs/heads/main/gpg-only-active-keys/pubring.kbx&lt;/a&gt;. Alternatively, you can import them from a public key server. Have in mind that the project cannot guarantee the availability of the server nor the keys on that server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gpg --keyserver hkps://keys.openpgp.org --recv-keys 5BE8A3F6C8A5C01D106C0AD820B1A390B168D356 # Antoine du Hamel
gpg --keyserver hkps://keys.openpgp.org --recv-keys DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7 # Juan José Arboleda
gpg --keyserver hkps://keys.openpgp.org --recv-keys CC68F5A3106FF448322E48ED27F5E38D5B0A215F # Marco Ippolito
gpg --keyserver hkps://keys.openpgp.org --recv-keys 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 # Michaël Zasso
gpg --keyserver hkps://keys.openpgp.org --recv-keys 890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4 # Rafael Gonzaga
gpg --keyserver hkps://keys.openpgp.org --recv-keys C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C # Richard Lau
gpg --keyserver hkps://keys.openpgp.org --recv-keys 108F52B48DB57BB0CC439B2997B01419BD92F80A # Ruy Adorno
gpg --keyserver hkps://keys.openpgp.org --recv-keys A363A499291CBBC940DD62E41F10027AF002F8B0 # Ulises Gascón
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#verifying-binaries"&gt;Verifying binaries&lt;/a&gt; for how to use these keys to verify a downloaded file.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Other keys used to sign some previous releases&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:duhamelantoine1995@gmail.com"&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;C0D6248439F1D5604AAFFB4021D900FFDB233756&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bethanyngriggs@gmail.com"&gt;bethanyngriggs@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;4ED778F539E3634C779C87C6D7062848A1AB005C&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@bryanenglish.com"&gt;bryan@bryanenglish.com&lt;/a&gt;&amp;gt; &lt;code&gt;141F07595B7B3FFE74309A937405533BE57C7D57&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christopher.s.dickinson@gmail.com"&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;9554F04D7259F04124DE6B476D5A82AC7E37093B&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjihrig@gmail.com"&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;94AE36675C464D64BAFA68DD7434390BDBE9B9C5&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href="mailto:adamzdanielle@gmail.com"&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;1C050899334244A8AF75E53792EF661D867B9DFA&lt;/code&gt; &lt;code&gt;74F12602B6F1C4E913FAA37AD3A89613643B6201&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:evanlucas@me.com"&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; &lt;code&gt;B9AE9905FFD7803F25714661B63B535A4C206CA9&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gibfahn@gmail.com"&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;77984A986EBC2AA786BC0F66B01FBB92821C587A&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@izs.me"&gt;i@izs.me&lt;/a&gt;&amp;gt; &lt;code&gt;93C7E9E91B49E432C2F75674B0A78B0A6C481CF6&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@italoacasas.com"&gt;me@italoacasas.com&lt;/a&gt;&amp;gt; &lt;code&gt;56730D5401028683275BD23C23EFEFE93C4CFFFE&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasnell@keybase.io"&gt;jasnell@keybase.io&lt;/a&gt;&amp;gt; &lt;code&gt;71DCFD284A79C3B38668286BC97EC7A07EDE3FC1&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fishrock@keybase.io"&gt;fishrock@keybase.io&lt;/a&gt;&amp;gt; &lt;code&gt;FD3A5288F042B6850C66B31F09FE44734EB7990E&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;&lt;a href="mailto:soyjuanarbol@gmail.com"&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;61FC681DFB92A079F1685E77973F295594EC4689&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jgilli@fastmail.fm"&gt;jgilli@fastmail.fm&lt;/a&gt;&amp;gt; &lt;code&gt;114F43EE0176B71C7BC219DD50A3051F888C628D&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href="mailto:myles.borins@gmail.com"&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rod@vagg.org"&gt;rod@vagg.org&lt;/a&gt;&amp;gt; &lt;code&gt;DD8F2338BAE7501E3DD5AC78C273792F7D83545D&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruben@bridgewater.de"&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; &lt;code&gt;A48C2BEE680E841632CD4E44F07496B3EB3C1762&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shelley.vohr@gmail.com"&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;B9E2F5981AA6E0CD28160D9FF13993A75599653C&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Timothy J Fontaine&lt;/strong&gt; &amp;lt;&lt;a href="mailto:tjfontaine@gmail.com"&gt;tjfontaine@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;7937DFD2AB06298B2293C3187D33FF9D0246406D&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;The project maintains a keyring able to verify all past releases of Node.js at &lt;a href="https://github.com/nodejs/release-keys/raw/refs/heads/main/gpg/pubring.kbx"&gt;https://github.com/nodejs/release-keys/raw/refs/heads/main/gpg/pubring.kbx&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Security release stewards&lt;/h3&gt; 
&lt;p&gt;When possible, the commitment to take slots in the security release steward rotation is made by companies in order to ensure individuals who act as security stewards have the support and recognition from their employer to be able to prioritize security releases. Security release stewards manage security releases on a rotation basis as outlined in the &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/security-release-process.md"&gt;security release process&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.datadoghq.com/"&gt;Datadog&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bengl"&gt;bengl&lt;/a&gt; - &lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@bryanenglish.com"&gt;bryan@bryanenglish.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.herodevs.com/"&gt;HeroDevs&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/marco-ippolito"&gt;marco-ippolito&lt;/a&gt; - &lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href="mailto:marcoippolito54@gmail.com"&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodesource.com/"&gt;NodeSource&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/juanarbol"&gt;juanarbol&lt;/a&gt; - &lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;&lt;a href="mailto:soyjuanarbol@gmail.com"&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/RafaelGSS"&gt;RafaelGSS&lt;/a&gt; - &lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rafael.nunu@hotmail.com"&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://platformatic.dev/"&gt;Platformatic&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mcollina"&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href="mailto:matteo.collina@gmail.com"&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://redhat.com"&gt;Red Hat&lt;/a&gt; / &lt;a href="https://ibm.com"&gt;IBM&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/joesepi"&gt;joesepi&lt;/a&gt; - &lt;strong&gt;Joe Sepi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:joesepi@ibm.com"&gt;joesepi@ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mhdawson"&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:midawson@redhat.com"&gt;midawson@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Node.js is available under the &lt;a href="https://opensource.org/licenses/MIT"&gt;MIT License&lt;/a&gt;. Node.js also includes external libraries that are available under a variety of licenses. See &lt;a href="https://github.com/nodejs/node/raw/HEAD/LICENSE"&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>anuraghazra/github-readme-stats</title>
      <link>https://github.com/anuraghazra/github-readme-stats</link>
      <description>&lt;p&gt;⚡ Dynamically generated stats for your github readmes&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img width="100px" src="https://res.cloudinary.com/anuraghazra/image/upload/v1594908242/logo_ccswme.svg?sanitize=true" align="center" alt="GitHub Readme Stats" /&gt; &lt;/p&gt;
&lt;h2 align="center"&gt;GitHub Readme Stats&lt;/h2&gt; 
&lt;p align="center"&gt;Get dynamically generated GitHub stats on your READMEs!&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/actions"&gt; &lt;img alt="Tests Passing" src="https://github.com/anuraghazra/github-readme-stats/workflows/Test/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/graphs/contributors"&gt; &lt;img alt="GitHub Contributors" src="https://img.shields.io/github/contributors/anuraghazra/github-readme-stats" /&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/anuraghazra/github-readme-stats"&gt; &lt;img alt="Tests Coverage" src="https://codecov.io/gh/anuraghazra/github-readme-stats/branch/master/graph/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues"&gt; &lt;img alt="Issues" src="https://img.shields.io/github/issues/anuraghazra/github-readme-stats?color=0088ff" /&gt; &lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/pulls"&gt; &lt;img alt="GitHub pull requests" src="https://img.shields.io/github/issues-pr/anuraghazra/github-readme-stats?color=0088ff" /&gt; &lt;/a&gt; &lt;a href="https://securityscorecards.dev/viewer/?uri=github.com/anuraghazra/github-readme-stats"&gt; &lt;img alt="OpenSSF Scorecard" src="https://api.securityscorecards.dev/projects/github.com/anuraghazra/github-readme-stats/badge" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href="https://vercel.com?utm\_source=github\_readme\_stats\_team\&amp;amp;utm\_campaign=oss"&gt; &lt;img src="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/powered-by-vercel.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#all-demos"&gt;View Demo&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/new?assignees=&amp;amp;labels=bug&amp;amp;projects=&amp;amp;template=bug_report.yml"&gt;Report Bug&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.yml"&gt;Request Feature&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/discussions/1770"&gt;FAQ&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/discussions/new?category=q-a"&gt;Ask Question&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt;Love the project? Please consider &lt;a href="https://www.paypal.me/anuraghazra"&gt;donating&lt;/a&gt; to help it improve!&lt;/p&gt; 
&lt;a href="https://indiafightscorona.giveindia.org"&gt; &lt;img src="https://cfstatic.give.do/logo.png" alt="Give india logo" width="200" /&gt; &lt;/a&gt; 
&lt;p&gt;Are you considering supporting the project by donating to me? Please DO NOT!!!&lt;/p&gt; 
&lt;img src="https://cfstatic.give.do/910ede2a-7892-43fe-8c8a-dea45e96d950.webp" alt="Picture of Coromandel Express train tragedy" width="35%" /&gt; 
&lt;p&gt;India has recently suffered one of the most devastating train accidents, and your help will be immensely valuable for the people who were affected by this tragedy.&lt;/p&gt; 
&lt;p&gt;Please visit &lt;a href="https://give.do/fundraisers/stand-beside-the-victims-of-the-coromandel-express-train-tragedy-in-odisha-donate-now"&gt;this link&lt;/a&gt; and make a small donation to help the people in need. A small donation goes a long way. &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h1&gt;Features 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-stats-card"&gt;GitHub Stats Card&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hiding-individual-stats"&gt;Hiding individual stats&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-additional-individual-stats"&gt;Showing additional individual stats&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-icons"&gt;Showing icons&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes"&gt;Themes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization"&gt;Customization&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-extra-pins"&gt;GitHub Extra Pins&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-gist-pins"&gt;GitHub Gist Pins&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage-1"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-1"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#top-languages-card"&gt;Top Languages Card&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage-2"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm"&gt;Language stats algorithm&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#exclude-individual-repositories"&gt;Exclude individual repositories&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-individual-languages"&gt;Hide individual languages&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#show-more-languages"&gt;Show more languages&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#compact-language-card-layout"&gt;Compact Language Card Layout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#donut-chart-language-card-layout"&gt;Donut Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#donut-vertical-chart-language-card-layout"&gt;Donut Vertical Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#pie-chart-language-card-layout"&gt;Pie Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-progress-bars"&gt;Hide Progress Bars&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-2"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#wakatime-stats-card"&gt;WakaTime Stats Card&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-3"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#all-demos"&gt;All Demos&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#quick-tip-align-the-cards"&gt;Quick Tip (Align The Cards)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;Deploy on your own&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#on-vercel"&gt;On Vercel&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#film_projector-check-out-step-by-step-video-tutorial-by-codestackr"&gt;&lt;span&gt;📽&lt;/span&gt; Check Out Step By Step Video Tutorial By @codeSTACKr&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#on-other-platforms"&gt;On other platforms&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#disable-rate-limit-protections"&gt;Disable rate limit protections&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#keep-your-fork-up-to-date"&gt;Keep your fork up to date&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#sparkling_heart-support-the-project"&gt;&lt;span&gt;💖&lt;/span&gt; Support the project&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Important Notices 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; Since the GitHub API only &lt;a href="https://docs.github.com/en/graphql/overview/resource-limitations"&gt;allows 5k requests per hour per user account&lt;/a&gt;, the public Vercel instance hosted on &lt;code&gt;https://github-readme-stats.vercel.app/api&lt;/code&gt; could possibly hit the rate limiter (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1471"&gt;#1471&lt;/a&gt;). We use caching to prevent this from happening (see &lt;a href="https://github.com/anuraghazra/github-readme-stats#common-options"&gt;https://github.com/anuraghazra/github-readme-stats#common-options&lt;/a&gt;). You can turn off these rate limit protections by deploying &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#disable-rate-limit-protections"&gt;your own Vercel instance&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;img alt="Uptime Badge" src="https://img.shields.io/endpoint?url=https%3A%2F%2Fgithub-readme-stats-git-monitoring-github-readme-stats-team.vercel.app%2Fapi%2Fstatus%2Fup%3Ftype%3Dshields" /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; We're a small team, and to prioritize, we rely on upvotes &lt;span&gt;👍&lt;/span&gt;. We use the Top Issues dashboard for tracking community demand (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1935"&gt;#1935&lt;/a&gt;). Do not hesitate to upvote the issues and pull requests you are interested in. We will work on the most upvoted first.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;GitHub Stats Card&lt;/h1&gt; 
&lt;p&gt;Copy and paste this into your markdown, and that's it. Simple!&lt;/p&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your GitHub username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; By default, the stats card only shows statistics like stars, commits, and pull requests from public repositories. To show private statistics on the stats card, you should &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;deploy your own instance&lt;/a&gt; using your own GitHub API token.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Available ranks are S (top 1%), A+ (12.5%), A (25%), A- (37.5%), B+ (50%), B (62.5%), B- (75%), C+ (87.5%) and C (everyone). This ranking scheme is based on the &lt;a href="https://wikipedia.org/wiki/Academic_grading_in_Japan"&gt;Japanese academic grading&lt;/a&gt; system. The global percentile is calculated as a weighted sum of percentiles for each statistic (number of commits, pull requests, reviews, issues, stars, and followers), based on the cumulative distribution function of the &lt;a href="https://wikipedia.org/wiki/exponential_distribution"&gt;exponential&lt;/a&gt; and the &lt;a href="https://wikipedia.org/wiki/Log-normal_distribution"&gt;log-normal&lt;/a&gt; distributions. The implementation can be investigated at &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/master/src/calculateRank.js"&gt;src/calculateRank.js&lt;/a&gt;. The circle around the rank shows 100 minus the global percentile.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Hiding individual stats&lt;/h3&gt; 
&lt;p&gt;You can pass a query parameter &lt;code&gt;&amp;amp;hide=&lt;/code&gt; to hide any specific stats with comma-separated values.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;hide=stars,commits,prs,issues,contribs&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,prs)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Showing additional individual stats&lt;/h3&gt; 
&lt;p&gt;You can pass a query parameter &lt;code&gt;&amp;amp;show=&lt;/code&gt; to show any specific additional stats with comma-separated values.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Showing icons&lt;/h3&gt; 
&lt;p&gt;To enable icons, you can pass &lt;code&gt;&amp;amp;show_icons=true&lt;/code&gt; in the query param, like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Themes&lt;/h3&gt; 
&lt;p&gt;With inbuilt themes, you can customize the look of the card without doing any &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization"&gt;manual customization&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;&amp;amp;theme=THEME_NAME&lt;/code&gt; parameter like so :&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;All inbuilt themes&lt;/h4&gt; 
&lt;p&gt;GitHub Readme Stats comes with several built-in themes (e.g. &lt;code&gt;dark&lt;/code&gt;, &lt;code&gt;radical&lt;/code&gt;, &lt;code&gt;merko&lt;/code&gt;, &lt;code&gt;gruvbox&lt;/code&gt;, &lt;code&gt;tokyonight&lt;/code&gt;, &lt;code&gt;onedark&lt;/code&gt;, &lt;code&gt;cobalt&lt;/code&gt;, &lt;code&gt;synthwave&lt;/code&gt;, &lt;code&gt;highcontrast&lt;/code&gt;, &lt;code&gt;dracula&lt;/code&gt;).&lt;/p&gt; 
&lt;img src="https://res.cloudinary.com/anuraghazra/image/upload/v1595174536/grs-themes_l4ynja.png" alt="GitHub Readme Stats Themes" width="600px" /&gt; 
&lt;p&gt;You can look at a preview for &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md"&gt;all available themes&lt;/a&gt; or checkout the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/index.js"&gt;theme config file&lt;/a&gt;. Please note that we paused the addition of new themes to decrease maintenance efforts; all pull requests related to new themes will be closed.&lt;/p&gt; 
&lt;h4&gt;Responsive Card Theme&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats#responsive-card-theme#gh-dark-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only" alt="Anurag's GitHub stats-Dark" /&gt;&lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats#responsive-card-theme#gh-light-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only" alt="Anurag's GitHub stats-Light" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Since GitHub will re-upload the cards and serve them from their &lt;a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/about-anonymized-urls"&gt;CDN&lt;/a&gt;, we can not infer the browser/GitHub theme on the server side. There are, however, four methods you can use to create dynamics themes on the client side.&lt;/p&gt; 
&lt;h5&gt;Use the transparent theme&lt;/h5&gt; 
&lt;p&gt;We have included a &lt;code&gt;transparent&lt;/code&gt; theme that has a transparent background. This theme is optimized to look good on GitHub's dark and light default themes. You can enable this theme using the &lt;code&gt;&amp;amp;theme=transparent&lt;/code&gt; parameter like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=transparent)
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=transparent" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h5&gt;Add transparent alpha channel to a themes bg_color&lt;/h5&gt; 
&lt;p&gt;You can use the &lt;code&gt;bg_color&lt;/code&gt; parameter to make any of &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md"&gt;the available themes&lt;/a&gt; transparent. This is done by setting the &lt;code&gt;bg_color&lt;/code&gt; to a color with a transparent alpha channel (i.e. &lt;code&gt;bg_color=00000000&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;bg_color=00000000)
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;bg_color=00000000" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h5&gt;Use GitHub's theme context tag&lt;/h5&gt; 
&lt;p&gt;You can use &lt;a href="https://github.blog/changelog/2021-11-24-specify-theme-context-for-images-in-markdown/"&gt;GitHub's theme context&lt;/a&gt; tags to switch the theme based on the user GitHub theme automatically. This is done by appending &lt;code&gt;#gh-dark-mode-only&lt;/code&gt; or &lt;code&gt;#gh-light-mode-only&lt;/code&gt; to the end of an image URL. This tag will define whether the image specified in the markdown is only shown to viewers using a light or a dark GitHub theme:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Anurag's GitHub stats-Dark](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-dark-mode-only)
[![Anurag's GitHub stats-Light](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-light-mode-only)
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats#gh-dark-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only" alt="Anurag's GitHub stats-Dark" /&gt;&lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats#gh-light-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only" alt="Anurag's GitHub stats-Light" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h5&gt;Use GitHub's new media feature&lt;/h5&gt; 
&lt;p&gt;You can use &lt;a href="https://github.blog/changelog/2022-05-19-specify-theme-context-for-images-in-markdown-beta/"&gt;GitHub's new media feature&lt;/a&gt; in HTML to specify whether to display images for light or dark themes. This is done using the HTML &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element in combination with the &lt;code&gt;prefers-color-scheme&lt;/code&gt; media feature.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;picture&amp;gt;
  &amp;lt;source
    srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark"
    media="(prefers-color-scheme: dark)"
  /&amp;gt;
  &amp;lt;source
    srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true"
    media="(prefers-color-scheme: light), (prefers-color-scheme: no-preference)"
  /&amp;gt;
  &amp;lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true" /&amp;gt;
&amp;lt;/picture&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;picture&gt; 
  &lt;source srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark" media="(prefers-color-scheme: dark)" /&gt; 
  &lt;source srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true" media="(prefers-color-scheme: light), (prefers-color-scheme: no-preference)" /&gt; 
  &lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true" /&gt; 
 &lt;/picture&gt; 
&lt;/details&gt; 
&lt;h3&gt;Customization&lt;/h3&gt; 
&lt;p&gt;You can customize the appearance of all your cards however you wish with URL parameters.&lt;/p&gt; 
&lt;h4&gt;Common Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;title_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Card's title color.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;2f80ed&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;text_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Body text color.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;434d58&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;icon_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Icons color if available.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;4c71f2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;border_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Card's border color. Does not apply when &lt;code&gt;hide_border&lt;/code&gt; is enabled.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;e4e2e2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;bg_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Card's background color.&lt;/td&gt; 
   &lt;td&gt;string (hex color or a gradient in the form of &lt;em&gt;angle,start,end&lt;/em&gt;)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;fffefe&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_border&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the card's border.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;theme&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Name of the theme, choose from &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md"&gt;all available themes&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;cache_seconds&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the cache header manually (min: 21600, max: 86400).&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;21600&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the language in the card, you can check full list of available locales &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#available-locales"&gt;here&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;border_radius&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Corner rounding on the card.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;4.5&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; We use caching to decrease the load on our servers (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1471#issuecomment-1271551425"&gt;https://github.com/anuraghazra/github-readme-stats/issues/1471#issuecomment-1271551425&lt;/a&gt;). Our cards have the following default cache hours: stats card - 24 hours, top languages card - 144 hours (6 days), pin card - 240 hours (10 days), gist card - 48 hours (2 days). If you want the data on your statistics card to be updated more often you can &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;deploy your own instance&lt;/a&gt; and set &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#disable-rate-limit-protections"&gt;environment variable&lt;/a&gt; &lt;code&gt;CACHE_SECONDS&lt;/code&gt; to a value of your choosing.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;Gradient in bg_color&lt;/h5&gt; 
&lt;p&gt;You can provide multiple comma-separated values in the bg_color option to render a gradient with the following format:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;amp;bg_color=DEG,COLOR1,COLOR2,COLOR3...COLOR10
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Available locales&lt;/h5&gt; 
&lt;p&gt;Here is a list of all available locales:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Code&lt;/th&gt; 
       &lt;th&gt;Locale&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;cn&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Chinese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;zh-tw&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Chinese (Taiwan)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ar&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Arabic&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;cs&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Czech&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;de&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;German&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;English&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;bn&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Bengali&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;es&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Spanish&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;fr&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;French&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;hu&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Hungarian&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/td&gt;
   &lt;td&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Code&lt;/th&gt; 
       &lt;th&gt;Locale&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;it&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Italian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ja&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Japanese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;kr&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Korean&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;nl&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Dutch&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;pt-pt&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Portuguese (Portugal)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;pt-br&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Portuguese (Brazil)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;np&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Nepali&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;el&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Greek&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ru&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Russian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;uk-ua&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Ukrainian&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/td&gt;
   &lt;td&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Code&lt;/th&gt; 
       &lt;th&gt;Locale&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Indonesian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ml&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Malayalam&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;my&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Burmese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;sk&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Slovak&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;tr&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Turkish&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;pl&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Polish&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;uz&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Uzbek&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;vi&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Vietnamese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;se&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Swedish&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/td&gt;
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;If we don't support your language, please consider contributing! You can find more information about how to do it in our &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/CONTRIBUTING.md#translations-contribution"&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Stats Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hiding-individual-stats"&gt;specified items&lt;/a&gt; from stats.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the title of your stats card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;card_width&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the card's width manually.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;500px (approx.)&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_rank&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the rank and automatically resizes the card width.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;rank_icon&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows alternative rank icon (i.e. &lt;code&gt;github&lt;/code&gt;, &lt;code&gt;percentile&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt;).&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show_icons&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows icons near all stats.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;include_all_commits&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Count total commits instead of just the current year commits.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;line_height&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the line height between text.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;25&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;exclude_repo&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Excludes specified repositories.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;username&amp;gt; GitHub Stats&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;text_bold&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Uses bold text.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ring_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color of the rank circle.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;2f80ed&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;number_format&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Switches between two available formats for displaying the card values &lt;code&gt;short&lt;/code&gt; (i.e. &lt;code&gt;6.6k&lt;/code&gt;) and &lt;code&gt;long&lt;/code&gt; (i.e. &lt;code&gt;6626&lt;/code&gt;).&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;short&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-additional-individual-stats"&gt;additional items&lt;/a&gt; on stats card (i.e. &lt;code&gt;reviews&lt;/code&gt;, &lt;code&gt;discussions_started&lt;/code&gt;, &lt;code&gt;discussions_answered&lt;/code&gt;, &lt;code&gt;prs_merged&lt;/code&gt; or &lt;code&gt;prs_merged_percentage&lt;/code&gt;).&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; When hide_rank=&lt;code&gt;true&lt;/code&gt;, the minimum card width is 270 px + the title length and padding.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Repo Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show_owner&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows the repo's owner name.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;description_lines_count&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Manually set the number of lines for the description. Specified value will be clamped between 1 and 3. If this parameter is not specified, the number of lines will be automatically adjusted according to the actual length of the description.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Gist Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show_owner&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows the gist's owner name.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Language Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-individual-languages"&gt;specified languages&lt;/a&gt; from card.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the title of your card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;layout&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Switches between five available layouts &lt;code&gt;normal&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt; &amp;amp; &lt;code&gt;donut&lt;/code&gt; &amp;amp; &lt;code&gt;donut-vertical&lt;/code&gt; &amp;amp; &lt;code&gt;pie&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;normal&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;card_width&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the card's width manually.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;300&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;langs_count&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows more languages on the card, between 1-20.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;5&lt;/code&gt; for &lt;code&gt;normal&lt;/code&gt; and &lt;code&gt;donut&lt;/code&gt;, &lt;code&gt;6&lt;/code&gt; for other layouts&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;exclude_repo&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Excludes specified repositories.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Most Used Languages&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_progress&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Uses the compact layout option, hides percentages, and removes the bars.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;size_weight&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Configures language stats algorithm (see &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm"&gt;Language stats algorithm&lt;/a&gt;).&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;count_weight&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Configures language stats algorithm (see &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm"&gt;Language stats algorithm&lt;/a&gt;).&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; Language names should be URI-escaped, as specified in &lt;a href="https://en.wikipedia.org/wiki/Percent-encoding"&gt;Percent Encoding&lt;/a&gt; (i.e: &lt;code&gt;c++&lt;/code&gt; should become &lt;code&gt;c%2B%2B&lt;/code&gt;, &lt;code&gt;jupyter notebook&lt;/code&gt; should become &lt;code&gt;jupyter%20notebook&lt;/code&gt;, etc.) You can use &lt;a href="https://www.urlencoder.org/"&gt;urlencoder.org&lt;/a&gt; to help you do this automatically.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;WakaTime Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the languages specified from the card.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the title of your card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;line_height&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the line height between text.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;25&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_progress&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the progress bar and percentage.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;WakaTime Stats&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;layout&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Switches between two available layouts &lt;code&gt;default&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;langs_count&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Limits the number of languages on the card, defaults to all reported languages.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;api_domain&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom API domain for the card, e.g. to use services like &lt;a href="https://github.com/mujx/hakatime"&gt;Hakatime&lt;/a&gt; or &lt;a href="https://github.com/muety/wakapi"&gt;Wakapi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;wakatime.com&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;display_format&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the WakaTime stats display format. Choose &lt;code&gt;time&lt;/code&gt; to display time-based stats or &lt;code&gt;percent&lt;/code&gt; to show percentages.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;time&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h1&gt;GitHub Extra Pins&lt;/h1&gt; 
&lt;p&gt;GitHub extra pins allow you to pin more than 6 repositories in your profile using a GitHub readme profile.&lt;/p&gt; 
&lt;p&gt;Yay! You are no longer limited to 6 pinned repositories.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Readme Card](https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats" alt="Readme Card" /&gt;&lt;/p&gt; 
&lt;p&gt;Use &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#repo-card-exclusive-options"&gt;show_owner&lt;/a&gt; query option to include the repo's owner username&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;show_owner=true" alt="Readme Card" /&gt;&lt;/p&gt; 
&lt;h1&gt;GitHub Gist Pins&lt;/h1&gt; 
&lt;p&gt;GitHub gist pins allow you to pin gists in your GitHub profile using a GitHub readme profile.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/gist?id=bbfce31e0217a3689c8d961a356cb10d&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Gist Card](https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d)](https://gist.github.com/Yizack/bbfce31e0217a3689c8d961a356cb10d/)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;p&gt;Use &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#gist-card-exclusive-options"&gt;show_owner&lt;/a&gt; query option to include the gist's owner username&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d&amp;amp;show_owner=true" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;h1&gt;Top Languages Card&lt;/h1&gt; 
&lt;p&gt;The top languages card shows a GitHub user's most frequently used languages.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; By default, the language card shows language results only from public repositories. To include languages used in private repositories, you should &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;deploy your own instance&lt;/a&gt; using your own GitHub API token.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Top Languages does not indicate the user's skill level or anything like that; it's a GitHub metric to determine which languages have the most code on GitHub. It is a new feature of github-readme-stats.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; This card shows language usage only inside your own non-forked repositories, not depending on who the author of the commits is. It does not include your contributions into another users/organizations repositories. Currently there are no way to get this data from GitHub API. If you want this behavior to be improved you can support &lt;a href="https://github.com/orgs/community/discussions/18230"&gt;this feature request&lt;/a&gt; created by &lt;a href="https://github.com/rickstaa"&gt;@rickstaa&lt;/a&gt; inside GitHub Community.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; Currently this card shows data only about first 100 repositories. This is because GitHub API limitations which cause downtimes of public instances (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1471"&gt;#1471&lt;/a&gt;). In future this behavior will be improved by releasing GitHub action or providing environment variables for user's own instances.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/top-langs?username=anuraghazra&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Language stats algorithm&lt;/h3&gt; 
&lt;p&gt;We use the following algorithm to calculate the languages percentages on the language card:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;ranking_index = (byte_count ^ size_weight) * (repo_count ^ count_weight)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, only the byte count is used for determining the languages percentages shown on the language card (i.e. &lt;code&gt;size_weight=1&lt;/code&gt; and &lt;code&gt;count_weight=0&lt;/code&gt;). You can, however, use the &lt;code&gt;&amp;amp;size_weight=&lt;/code&gt; and &lt;code&gt;&amp;amp;count_weight=&lt;/code&gt; options to weight the language usage calculation. The values must be positive real numbers. &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1600#issuecomment-1046056305"&gt;More details about the algorithm can be found here&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=1&amp;amp;count_weight=0&lt;/code&gt; - &lt;em&gt;(default)&lt;/em&gt; Orders by byte count.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=0.5&amp;amp;count_weight=0.5&lt;/code&gt; - &lt;em&gt;(recommended)&lt;/em&gt; Uses both byte and repo count for ranking&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=0&amp;amp;count_weight=1&lt;/code&gt; - Orders by repo count&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;size_weight=0.5&amp;amp;count_weight=0.5)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Exclude individual repositories&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;exclude_repo=repo1,repo2&lt;/code&gt; parameter to exclude individual repositories.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;exclude_repo=github-readme-stats,anuraghazra.github.io)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hide individual languages&lt;/h3&gt; 
&lt;p&gt;You can use &lt;code&gt;&amp;amp;hide=language1,language2&lt;/code&gt; parameter to hide individual languages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide=javascript,html)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Show more languages&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;langs_count=&lt;/code&gt; option to increase or decrease the number of languages shown on the card. Valid values are integers between 1 and 20 (inclusive). By default it was set to &lt;code&gt;5&lt;/code&gt; for &lt;code&gt;normal&lt;/code&gt; &amp;amp; &lt;code&gt;donut&lt;/code&gt; and &lt;code&gt;6&lt;/code&gt; for other layouts.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;langs_count=8)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Compact Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=compact&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Donut Chart Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=donut&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Donut Vertical Chart Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=donut-vertical&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut-vertical)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Pie Chart Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=pie&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=pie)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hide Progress Bars&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;hide_progress=true&lt;/code&gt; option to hide the percentages and the progress bars (layout will be automatically set to &lt;code&gt;compact&lt;/code&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide_progress=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Donut Chart layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut" alt="Top Langs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Donut Vertical Chart layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut-vertical" alt="Top Langs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pie Chart layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=pie" alt="Top Langs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hidden progress bars&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide_progress=true" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;h1&gt;WakaTime Stats Card&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; Please be aware that we currently only show data from WakaTime profiles that are public. You therefore have to make sure that &lt;strong&gt;BOTH&lt;/strong&gt; &lt;code&gt;Display code time publicly&lt;/code&gt; and &lt;code&gt;Display languages, editors, os, categories publicly&lt;/code&gt; are enabled.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your &lt;a href="https://wakatime.com"&gt;WakaTime&lt;/a&gt; username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Harlok's WakaTime stats](https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs&amp;amp;hide_progress=true" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs&amp;amp;layout=compact" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;All Demos&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Default&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hiding specific stats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,issues" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing additional stats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing icons&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=issues&amp;amp;show_icons=true" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Shows Github logo instead rank level&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;rank_icon=github" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Shows user rank percentile instead of rank level&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;rank_icon=percentile" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customize Border Color&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;border_color=2e4058" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Include All Commits&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;include_all_commits=true" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Themes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Choose from any of the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes"&gt;default themes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gradient&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;bg_color=30,e96443,904e95&amp;amp;title_color=fff&amp;amp;text_color=fff" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing stats card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;show_icons=true&amp;amp;title_color=fff&amp;amp;icon_color=79ff97&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Setting card locale&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;locale=es" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing repo card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;title_color=fff&amp;amp;icon_color=f9f9f9&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515" alt="Customized Card" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gist card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing gist card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d&amp;amp;theme=calm" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Top languages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;WakaTime card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quick Tip (Align The Cards)&lt;/h2&gt; 
&lt;p&gt;By default, GitHub does not lay out the cards side by side. To do that, you can use this approach:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;a href="https://github.com/anuraghazra/github-readme-stats"&amp;gt;
  &amp;lt;img height=200 align="center" src="https://github-readme-stats.vercel.app/api?username=anuraghazra" /&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;a href="https://github.com/anuraghazra/convoychat"&amp;gt;
  &amp;lt;img height=200 align="center" src="https://github-readme-stats.vercel.app/api/top-langs?username=anuraghazra&amp;amp;layout=compact&amp;amp;langs_count=8&amp;amp;card_width=320" /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;a href="https://github.com/anuraghazra/github-readme-stats"&amp;gt;
  &amp;lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats" /&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;a href="https://github.com/anuraghazra/convoychat"&amp;gt;
  &amp;lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=convoychat" /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt; &lt;img height="200" align="center" src="https://github-readme-stats.vercel.app/api?username=anuraghazra" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/anuraghazra/convoychat"&gt; &lt;img height="200" align="center" src="https://github-readme-stats.vercel.app/api/top-langs?username=anuraghazra&amp;amp;layout=compact&amp;amp;langs_count=8&amp;amp;card_width=320" /&gt; &lt;/a&gt; 
 &lt;hr /&gt; 
 &lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt; &lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/anuraghazra/convoychat"&gt; &lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=convoychat" /&gt; &lt;/a&gt; 
&lt;/details&gt; 
&lt;h1&gt;Deploy on your own&lt;/h1&gt; 
&lt;h2&gt;On Vercel&lt;/h2&gt; 
&lt;h3&gt;&lt;span&gt;📽&lt;/span&gt; &lt;a href="https://youtu.be/n6d4KHSKqGk?t=107"&gt;Check Out Step By Step Video Tutorial By @codeSTACKr&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Since the GitHub API only allows 5k requests per hour, my &lt;code&gt;https://github-readme-stats.vercel.app/api&lt;/code&gt; could possibly hit the rate limiter. If you host it on your own Vercel server, then you do not have to worry about anything. Click on the deploy button to get started!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Since &lt;a href="https://github.com/anuraghazra/github-readme-stats/pull/58"&gt;#58&lt;/a&gt;, we should be able to handle more than 5k requests and have fewer issues with downtime &lt;span&gt;😁&lt;/span&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; If you are on the &lt;a href="https://vercel.com/pricing"&gt;Pro (i.e. paid)&lt;/a&gt; Vercel plan, the &lt;a href="https://vercel.com/docs/concepts/projects/project-configuration#value-definition"&gt;maxDuration&lt;/a&gt; value found in the &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/master/vercel.json"&gt;vercel.json&lt;/a&gt; can be increased when your Vercel instance frequently times out during the card request. You are advised to keep this value lower than &lt;code&gt;30&lt;/code&gt; seconds to prevent high memory usage.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://vercel.com/import/project?template=https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://vercel.com/button" alt="Deploy to Vercel" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;span&gt;🛠&lt;/span&gt; Step-by-step guide on setting up your own Vercel instance&lt;/b&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to &lt;a href="https://vercel.com/"&gt;vercel.com&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;Click on &lt;code&gt;Log in&lt;/code&gt;. &lt;img src="https://files.catbox.moe/pcxk33.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Sign in with GitHub by pressing &lt;code&gt;Continue with GitHub&lt;/code&gt;. &lt;img src="https://files.catbox.moe/b9oxey.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Sign in to GitHub and allow access to all repositories if prompted.&lt;/li&gt; 
  &lt;li&gt;Fork this repo.&lt;/li&gt; 
  &lt;li&gt;Go back to your &lt;a href="https://vercel.com/dashboard"&gt;Vercel dashboard&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;To import a project, click the &lt;code&gt;Add New...&lt;/code&gt; button and select the &lt;code&gt;Project&lt;/code&gt; option. &lt;img src="https://files.catbox.moe/3n76fh.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Click the &lt;code&gt;Continue with GitHub&lt;/code&gt; button, search for the required Git Repository and import it by clicking the &lt;code&gt;Import&lt;/code&gt; button. Alternatively, you can import a Third-Party Git Repository using the &lt;code&gt;Import Third-Party Git Repository -&amp;gt;&lt;/code&gt; link at the bottom of the page. &lt;img src="https://files.catbox.moe/mg5p04.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Create a personal access token (PAT) &lt;a href="https://github.com/settings/tokens/new"&gt;here&lt;/a&gt; and enable the &lt;code&gt;repo&lt;/code&gt; and &lt;code&gt;user&lt;/code&gt; permissions (this allows access to see private repo and user stats).&lt;/li&gt; 
  &lt;li&gt;Add the PAT as an environment variable named &lt;code&gt;PAT_1&lt;/code&gt; (as shown). &lt;img src="https://files.catbox.moe/0yclio.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Click deploy, and you're good to go. See your domains to use the API!&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;On other platforms&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; This way of using GRS is not officially supported and was added to cater to some particular use cases where Vercel could not be used (e.g. &lt;a href="https://github.com/anuraghazra/github-readme-stats/discussions/2341"&gt;#2341&lt;/a&gt;). The support for this method, therefore, is limited.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;span&gt;🛠&lt;/span&gt; Step-by-step guide for deploying on other platforms&lt;/b&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Fork or clone this repo as per your needs&lt;/li&gt; 
  &lt;li&gt;Add &lt;code&gt;express&lt;/code&gt; to the dependencies section of &lt;code&gt;package.json&lt;/code&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L54-L61"&gt;https://github.com/anuraghazra/github-readme-stats/blob/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L54-L61&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Run &lt;code&gt;npm i&lt;/code&gt; if needed (initial setup)&lt;/li&gt; 
  &lt;li&gt;Run &lt;code&gt;node express.js&lt;/code&gt; to start the server, or set the entry point to &lt;code&gt;express.js&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt; if you're deploying on a managed service &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L11"&gt;https://github.com/anuraghazra/github-readme-stats/blob/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L11&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;You're done 🎉 &lt;/li&gt;
 &lt;/ol&gt;
&lt;/details&gt;   
&lt;h2&gt;Disable rate limit protections&lt;/h2&gt; 
&lt;p&gt;Github Readme Stats contains several Vercel environment variables that can be used to remove the rate limit protections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;CACHE_SECONDS&lt;/code&gt;: This environment variable takes precedence over our cache minimum and maximum values and can circumvent these values for self-hosted Vercel instances.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://vercel.com/docs/concepts/projects/environment-variables"&gt;the Vercel documentation&lt;/a&gt; on adding these environment variables to your Vercel instance.&lt;/p&gt; 
&lt;h2&gt;Keep your fork up to date&lt;/h2&gt; 
&lt;p&gt;You can keep your fork, and thus your private Vercel instance up to date with the upstream using GitHub's &lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork"&gt;Sync Fork button&lt;/a&gt;. You can also use the &lt;a href="https://github.com/wei/pull"&gt;pull&lt;/a&gt; package created by &lt;a href="https://github.com/wei"&gt;@wei&lt;/a&gt; to automate this process.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;💖&lt;/span&gt; Support the project&lt;/h1&gt; 
&lt;p&gt;I open-source almost everything I can and try to reply to everyone needing help using these projects. Obviously, this takes time. You can use this service for free.&lt;/p&gt; 
&lt;p&gt;However, if you are using this project and are happy with it or just want to encourage me to continue creating stuff, there are a few ways you can do it:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Giving proper credit when you use github-readme-stats on your readme, linking back to it. :D&lt;/li&gt; 
 &lt;li&gt;Starring and sharing the project. &lt;span&gt;🚀&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.paypal.me/anuraghazra"&gt;&lt;img src="https://ionicabizau.github.io/badges/paypal.svg?sanitize=true" alt="paypal.me/anuraghazra" /&gt;&lt;/a&gt; - You can make a one-time donations via PayPal. I'll probably buy a &lt;del&gt;coffee&lt;/del&gt; tea. &lt;span&gt;🍵&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thanks! &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss"&gt;&lt;img src="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/powered-by-vercel.svg?sanitize=true" alt="https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Contributions are welcome! &amp;lt;3&lt;/p&gt; 
&lt;p&gt;Made with &lt;span&gt;❤️&lt;/span&gt; and JavaScript.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>FreeTubeApp/FreeTube</title>
      <link>https://github.com/FreeTubeApp/FreeTube</link>
      <description>&lt;p&gt;An Open Source YouTube app for privacy&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img alt="" src="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/_icons/logoColor.svg?sanitize=true" width="500" align="center" /&gt; &lt;/p&gt; 
&lt;p&gt;FreeTube is an open source desktop YouTube player built with privacy in mind. Use YouTube without advertisements and prevent Google from tracking you with their cookies and JavaScript. Available for Windows (10 and later), Mac (macOS 11 and later) &amp;amp; Linux thanks to Electron.&lt;/p&gt; 
&lt;p align="center"&gt;&lt;a href="https://github.com/FreeTubeApp/FreeTube/releases"&gt;Download FreeTube&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/FreeTubeApp/FreeTube/actions/workflows/build.yml"&gt; &lt;img alt="Build status" src="https://github.com/FreeTubeApp/FreeTube/actions/workflows/build.yml/badge.svg?branch=development" /&gt; &lt;/a&gt; &lt;a href="https://hosted.weblate.org/engage/free-tube/"&gt; &lt;img src="https://hosted.weblate.org/widgets/free-tube/-/svg-badge.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt;&lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#screenshots"&gt;Screenshots&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#how-does-it-work"&gt;How does it work?&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#features"&gt;Features&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#download-links"&gt;Download Links&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#contributing"&gt;Contributing&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#localization"&gt;Localization&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#contact"&gt;Contact&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#donate"&gt;Donate&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#license"&gt;License&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt;&lt;a href="https://freetubeapp.io/"&gt;Website&lt;/a&gt; • &lt;a href="https://blog.freetubeapp.io/"&gt;Blog&lt;/a&gt; • &lt;a href="https://docs.freetubeapp.io/"&gt;Documentation&lt;/a&gt; • &lt;a href="https://docs.freetubeapp.io/faq/"&gt;FAQ&lt;/a&gt; • &lt;a href="https://github.com/FreeTubeApp/FreeTube/discussions"&gt;Discussions&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] FreeTube is currently in Beta. While it should work well for most users, there are still bugs and missing features that need to be addressed.&lt;/p&gt; 
 &lt;p&gt;If you have an idea or if you found a bug, please submit a &lt;a href="https://github.com/FreeTubeApp/FreeTube/issues/new/choose"&gt;GitHub issue&lt;/a&gt; so that we can track it. Please &lt;a href="https://github.com/FreeTubeApp/FreeTube/issues?q=is%3Aissue+sort%3Arelevance-desc"&gt;search the existing issues&lt;/a&gt; before submitting to prevent duplicates!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;The main FreeTube window&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/FreeTubeApp/FreeTubeApp.io/master/src/images/FreeTube1.png" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Watching a video&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/FreeTubeApp/FreeTubeApp.io/master/src/images/FreeTube2.png" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Settings&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/FreeTubeApp/FreeTubeApp.io/master/src/images/FreeTube3.png" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;How does it work?&lt;/h2&gt; 
&lt;p&gt;FreeTube uses a built in extractor to grab and serve data / videos. The &lt;a href="https://github.com/iv-org/invidious"&gt;Invidious API&lt;/a&gt; can also optionally be used. FreeTube does not use any official APIs to obtain data. While YouTube can still see your video requests, it can no longer track you using cookies or JavaScript. Your subscriptions, playlists and history are stored locally on your computer and never sent out.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; Using a VPN or Tor is highly recommended to hide your IP while using FreeTube.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Watch videos without ads&lt;/li&gt; 
 &lt;li&gt;Use YouTube without Google tracking you using cookies and JavaScript&lt;/li&gt; 
 &lt;li&gt;Two extractor APIs to choose from (Built in or Invidious)&lt;/li&gt; 
 &lt;li&gt;Subscribe to channels without an account&lt;/li&gt; 
 &lt;li&gt;Connect to an externally setup proxy such as Tor&lt;/li&gt; 
 &lt;li&gt;View and search your local subscriptions, playlists and history&lt;/li&gt; 
 &lt;li&gt;Organize your subscriptions into "Profiles" to create a more focused feed&lt;/li&gt; 
 &lt;li&gt;Export &amp;amp; import subscriptions&lt;/li&gt; 
 &lt;li&gt;Youtube Trending&lt;/li&gt; 
 &lt;li&gt;Youtube Chapters&lt;/li&gt; 
 &lt;li&gt;Most popular videos page based on the set Invidious instance&lt;/li&gt; 
 &lt;li&gt;SponsorBlock&lt;/li&gt; 
 &lt;li&gt;DeArrow&lt;/li&gt; 
 &lt;li&gt;Open videos from your browser directly into FreeTube (with extension)&lt;/li&gt; 
 &lt;li&gt;Watch videos using an external player&lt;/li&gt; 
 &lt;li&gt;Full Theme support&lt;/li&gt; 
 &lt;li&gt;Make a screenshot of a video&lt;/li&gt; 
 &lt;li&gt;Multiple windows&lt;/li&gt; 
 &lt;li&gt;Mini Player (Picture-in-Picture)&lt;/li&gt; 
 &lt;li&gt;Keyboard shortcuts&lt;/li&gt; 
 &lt;li&gt;Option to show only family friendly content&lt;/li&gt; 
 &lt;li&gt;Show/hide functionality or elements within the app using the distraction free settings&lt;/li&gt; 
 &lt;li&gt;View channel posts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Browser Extensions&lt;/h3&gt; 
&lt;p&gt;The following extensions open YouTube links directly in FreeTube:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://libredirect.github.io/"&gt;LibRedirect&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MStankiewiczOfficial/RedirectTube"&gt;RedirectTube&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;LibRedirect automatically redirect YouTube links to FreeTube.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] To ensure proper functionality, select FreeTube as Frontend in the Services settings of the extension.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;RedirectTube, doesn’t automatically open YouTube links in FreeTube. Instead, it adds buttons to the toolbar and context menu, which you can click to open videos in FreeTube manually.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Download LibRedirect from &lt;a href="https://addons.mozilla.org/firefox/addon/libredirect/"&gt;Mozilla Add-ons&lt;/a&gt; (for Firefox based-browsers) or &lt;a href="https://libredirect.github.io/download_chromium.html"&gt;developer's website&lt;/a&gt; (for Chrome and Chromium-based browsers).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Download RedirectTube from &lt;a href="https://addons.mozilla.org/firefox/addon/redirecttube/"&gt;Mozilla Add-ons&lt;/a&gt; (for Firefox based-browsers).&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] These extensions do not work on Linux portable builds!&lt;/p&gt; 
 &lt;p&gt;If you have issues with the extension working with FreeTube, please create an issue in this repository instead of the extension repository.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Download Links&lt;/h2&gt; 
&lt;h3&gt;Official Downloads&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] FreeTube is only supported on Windows 10 and later, macOS 11 and above, and various Linux distributions. Installing it on unsupported systems may result in unexpected issues.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/FreeTubeApp/FreeTube/releases"&gt;GitHub Releases&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://freetubeapp.io/#download"&gt;FreeTube Website&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Flatpak on Flathub: &lt;a href="https://flathub.org/apps/details/io.freetubeapp.FreeTube"&gt;Download&lt;/a&gt; and &lt;a href="https://github.com/flathub/io.freetubeapp.FreeTube"&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Automated Builds (Nightly / Weekly)&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Use these builds at your own risk. These are pre-release versions and are only intended for people that want to test changes early and are willing to accept that things could break from one build to another.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Builds are automatically created from changes to our development branch via &lt;a href="https://github.com/FreeTubeApp/FreeTube/actions?query=workflow%3ABuild"&gt;GitHub Actions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The first build with a green check mark is the latest build.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] You will need to have a GitHub account to download these builds.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Unofficial Downloads&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] These builds are maintained by the community. While they should be safe, download at your own risk. There may be issues with using these versus the official builds. Any issues specific with these builds should be sent to their respective maintainer. Make sure u always try an &lt;a href="https://github.com/freetubeapp/freetube/#official-downloads"&gt;official download&lt;/a&gt; before reporting your issue to us!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Arch User Repository (AUR): &lt;a href="https://aur.archlinux.org/packages/freetube-bin/"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Chocolatey: &lt;a href="https://chocolatey.org/packages/freetube/"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;FreeTubeAndroid (FreeTube port for Android and PWA): &lt;a href="https://github.com/MarmadileManteater/FreeTubeAndroid/releases"&gt;Download&lt;/a&gt; and &lt;a href="https://github.com/MarmadileManteater/FreeTubeAndroid"&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Homebrew Formulae (Mac only): &lt;a href="https://formulae.brew.sh/cask/freetube"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;makedeb Package Repository (MPR): &lt;a href="https://mpr.makedeb.org/packages/freetube-bin"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Nix Packages: &lt;a href="https://search.nixos.org/packages?query=freetube"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;PortableApps (Windows Only): &lt;a href="https://github.com/rddim/FreeTubePortable/releases"&gt;Download&lt;/a&gt; and &lt;a href="https://github.com/rddim/FreeTubePortable"&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Scoop (Windows Only): &lt;a href="https://github.com/ScoopInstaller/Scoop"&gt;Usage&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Snap: &lt;a href="https://snapcraft.io/freetube"&gt;Download&lt;/a&gt; and &lt;a href="https://git.launchpad.net/freetube"&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;WAPT: &lt;a href="https://wapt.tranquil.it/store/tis-freetube"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Windows Package Manager (winget): &lt;a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/"&gt;Usage&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Thank you very much to the &lt;a href="https://docs.freetubeapp.io/credits/"&gt;People and Projects&lt;/a&gt; that make FreeTube possible!&lt;/p&gt; 
&lt;p&gt;If you like to get your hands dirty and want to contribute, we would love to have your help. Send a pull request and someone will review your code.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Please follow the &lt;a href="https://github.com/FreeTubeApp/FreeTube/raw/development/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; before sending your pull request.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Localization&lt;/h2&gt; 
&lt;a href="https://hosted.weblate.org/engage/free-tube/"&gt; &lt;img src="https://hosted.weblate.org/widgets/free-tube/-/287x66-grey.png" alt="Translation status" /&gt; &lt;/a&gt; 
&lt;p&gt;We are actively looking for translations! We use &lt;a href="https://hosted.weblate.org/engage/free-tube/"&gt;Weblate&lt;/a&gt; to make it easy for translators to get involved. Click on the badge above to learn how to get involved.&lt;/p&gt; 
&lt;p&gt;For the Linux Flatpak, the desktop entry comment string can be translated at our &lt;a href="https://github.com/flathub/io.freetubeapp.FreeTube/raw/master/io.freetubeapp.FreeTube.desktop"&gt;Flatpak repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;If you ever have any questions, feel free to ask it on our &lt;a href="https://github.com/FreeTubeApp/FreeTube/discussions"&gt;Discussions&lt;/a&gt; page. Alternatively, you can email us at &lt;a href="mailto:FreeTubeApp@protonmail.com"&gt;FreeTubeApp@protonmail.com&lt;/a&gt; or you can join our &lt;a href="https://matrix.to/#/#freetube:matrix.org"&gt;Matrix Room&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Don't forget to check out the &lt;a href="https://docs.freetubeapp.io/community/matrix/"&gt;rules&lt;/a&gt; before joining.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;If you enjoy using FreeTube, you're welcome to leave a donation using the following method.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bitcoin Address: &lt;code&gt;1Lih7Ho5gnxb1CwPD4o59ss78pwo2T91eS&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;While your donations are much appreciated, only donate if you really want to. Donations are used for keeping the website up and running and eventual code signing costs.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] If you are using the Invidious API then we recommend that you donate to the instance that you use. You can also donate to the &lt;a href="https://invidious.io/donate/"&gt;Invidious team&lt;/a&gt; or the &lt;a href="https://github.com/sponsors/LuanRT"&gt;Local API developer&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.gnu.org/licenses/agpl-3.0.html"&gt;&lt;img src="https://www.gnu.org/graphics/agplv3-155x51.png" alt="GNU AGPLv3 Image" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;FreeTube is Free Software: You can use, study share and improve it at your will. Specifically you can redistribute and/or modify it under the terms of the &lt;a href="https://www.gnu.org/licenses/agpl-3.0.html"&gt;GNU Affero General Public License&lt;/a&gt; as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tw93/Pake</title>
      <link>https://github.com/tw93/Pake</link>
      <description>&lt;p&gt;🤱🏻 Turn any webpage into a desktop app with Rust. 🤱🏻 利用 Rust 轻松构建轻量级多端桌面应用&lt;/p&gt;&lt;hr&gt;&lt;h4 align="right"&gt;&lt;strong&gt;English&lt;/strong&gt; | &lt;a href="https://github.com/tw93/Pake/raw/main/README_CN.md"&gt;简体中文&lt;/a&gt; | &lt;a href="https://github.com/tw93/Pake/raw/main/README_JP.md"&gt;日本語&lt;/a&gt;&lt;/h4&gt; 
&lt;p align="center"&gt; &lt;img src="https://gw.alipayobjects.com/zos/k/fa/logo-modified.png" width="138/" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;Pake&lt;/h1&gt; 
&lt;p align="center"&gt;&lt;strong&gt;Turn any webpage into a desktop app with Rust &lt;em&gt;with ease&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://twitter.com/HiTw93" target="_blank"&gt; &lt;img alt="twitter" src="https://img.shields.io/badge/follow-Tw93-red?style=flat-square&amp;amp;logo=Twitter" /&gt;&lt;/a&gt; 
 &lt;a href="https://t.me/+GclQS9ZnxyI2ODQ1" target="_blank"&gt; &lt;img alt="telegram" src="https://img.shields.io/badge/chat-telegram-blueviolet?style=flat-square&amp;amp;logo=Telegram" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/tw93/Pake/releases" target="_blank"&gt; &lt;img alt="GitHub downloads" src="https://img.shields.io/github/downloads/tw93/Pake/total.svg?style=flat-square" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/tw93/Pake/commits" target="_blank"&gt; &lt;img alt="GitHub commit" src="https://img.shields.io/github/commit-activity/m/tw93/Pake?style=flat-square" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/tw93/Pake/issues?q=is%3Aissue+is%3Aclosed" target="_blank"&gt; &lt;img alt="GitHub closed issues" src="https://img.shields.io/github/issues-closed/tw93/Pake.svg?style=flat-square" /&gt;&lt;/a&gt; 
 &lt;a href="https://colab.research.google.com/drive/1bX345znvDZ30848xjRtpgtU8eypWwXrp?usp=sharing" target="_blank"&gt; &lt;img alt="Open in Colab" src="https://colab.research.google.com/assets/colab-badge.svg?sanitize=true" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="left"&gt;
 Pake supports Mac, Windows, and Linux. Check out README for 
 &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#popular-packages"&gt;Popular Packages&lt;/a&gt;, 
 &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#command-line-packaging"&gt;Command-Line Packaging&lt;/a&gt;, and 
 &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#development"&gt;Customized Development&lt;/a&gt; information. Feel free to share your suggestions in 
 &lt;a href="https://github.com/tw93/Pake/discussions"&gt;Discussions&lt;/a&gt;.
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎐 Nearly 20 times smaller than an Electron package (around 5M!)&lt;/li&gt; 
 &lt;li&gt;🚀 With Rust Tauri, Pake is much more lightweight and faster than JS-based frameworks.&lt;/li&gt; 
 &lt;li&gt;📦 Battery-included package — shortcut pass-through, immersive windows, and minimalist customization.&lt;/li&gt; 
 &lt;li&gt;👻 Pake is just a simple tool — replace the old bundle approach with Tauri (though PWA is good enough).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Popular Packages&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;WeRead &lt;a href="https://github.com/tw93/Pake/releases/latest/download/WeRead.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/WeRead_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/WeRead_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;Twitter &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Twitter.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Twitter_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Twitter_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/WeRead.jpg" width="600/" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/Twitter.jpg" width="600/" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Grok &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Grok.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Grok_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Grok_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;DeepSeek &lt;a href="https://github.com/tw93/Pake/releases/latest/download/DeepSeek.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/DeepSeek_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/DeepSeek_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/Grok.png" width="600/" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/DeepSeek.png" width="600/" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ChatGPT &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ChatGPT.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ChatGPT_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ChatGPT_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;Gemini &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Gemini.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Gemini_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Gemini_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/ChatGPT.png" width="600/" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/Gemini.png" width="600/" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;YouTube Music &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTubeMusic.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTubeMusic_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTubeMusic_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;YouTube &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTube.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTube_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTube_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/YouTubeMusic.png" width="600" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/YouTube.jpg" width="600" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LiZhi &lt;a href="https://github.com/tw93/Pake/releases/latest/download/LiZhi.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/LiZhi_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/LiZhi_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;ProgramMusic &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ProgramMusic.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ProgramMusic_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ProgramMusic_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/LiZhi.jpg" width="600/" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/ProgramMusic.jpg" width="600/" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Excalidraw &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Excalidraw.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Excalidraw_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Excalidraw_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;XiaoHongShu &lt;a href="https://github.com/tw93/Pake/releases/latest/download/XiaoHongShu.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/XiaoHongShu_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/XiaoHongShu_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/Excalidraw.png" width="600/" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/XiaoHongShu.png" width="600/" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;details&gt; 
 &lt;summary&gt;🏂 You can download more applications from &lt;a href="https://github.com/tw93/Pake/releases"&gt;Releases&lt;/a&gt;. &lt;b&gt;Click here to expand the shortcuts reference!&lt;/b&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Mac&lt;/th&gt; 
    &lt;th&gt;Windows/Linux&lt;/th&gt; 
    &lt;th&gt;Function&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;[&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;←&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Return to the previous page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;]&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Go to the next page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;↑&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;↑&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Auto scroll to top of page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;↓&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;↓&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Auto scroll to bottom of page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;r&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;r&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Refresh Page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;w&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;w&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Hide window, not quite&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;-&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;-&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Zoom out the page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;+&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;+&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Zoom in the page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;=&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;=&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Zoom in the Page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;0&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;0&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Reset the page zoom&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;In addition, double-click the title bar to switch to full-screen mode. For Mac users, you can also use the gesture to go to the previous or next page and drag the title bar to move the window.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Before starting&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;For beginners&lt;/strong&gt;: Play with Popular Packages to find out Pake's capabilities, or try to pack your application with &lt;a href="https://github.com/tw93/Pake/wiki/Online-Compilation-(used-by-ordinary-users)"&gt;GitHub Actions&lt;/a&gt;. Don't hesitate to reach for assistance at &lt;a href="https://github.com/tw93/Pake/discussions"&gt;Discussion&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;For developers&lt;/strong&gt;: “Command-Line Packaging” supports macOS fully. For Windows/Linux users, it requires some tinkering. &lt;a href="https://tauri.app/start/prerequisites/"&gt;Configure your environment&lt;/a&gt; before getting started.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;For hackers&lt;/strong&gt;: For people who are good at both front-end development and Rust, how about customizing your apps' function more with the following &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#development"&gt;Customized Development&lt;/a&gt;?&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Command-Line Packaging&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/pake.gif" alt="Pake" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Pake provides a command line tool, making the flow of package customization quicker and easier. See &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/bin/README.md"&gt;documentation&lt;/a&gt; for more information.&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install with npm
npm install -g pake-cli

# Command usage
pake url [OPTIONS]...

# Feel free to play with Pake! It might take a while to prepare the environment the first time you launch Pake.
pake https://weekly.tw93.fun --name Weekly --hide-title-bar
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are new to the command line, you can compile packages online with &lt;em&gt;GitHub Actions&lt;/em&gt;. See the &lt;a href="https://github.com/tw93/Pake/wiki/Online-Compilation-(used-by-ordinary-users)"&gt;Tutorial&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Prepare your environment before starting. Make sure you have Rust &lt;code&gt;&amp;gt;=1.89&lt;/code&gt; and Node &lt;code&gt;&amp;gt;=22&lt;/code&gt; (e.g., &lt;code&gt;22.11.0&lt;/code&gt;) installed on your computer. &lt;em&gt;Note: Older versions (Rust ≥1.78, Node ≥16) may also work but latest stable versions are recommended.&lt;/em&gt; For installation guidance, see &lt;a href="https://tauri.app/start/prerequisites/"&gt;Tauri documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you are unfamiliar with these, it is better to try out the above tool to pack with one click.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Install Dependencies
npm i

# Local development [Right-click to open debug mode.]
npm run dev

# Pack application
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Advanced Usage&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;You can refer to the &lt;a href="https://github.com/tw93/Pake/wiki/Description-of-Pake's-code-structure"&gt;codebase structure&lt;/a&gt; before working on Pake, which will help you much in development.&lt;/li&gt; 
 &lt;li&gt;Modify the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;productName&lt;/code&gt; fields in the &lt;code&gt;pake.json&lt;/code&gt; file under the src-tauri directory, the "domain" field in the &lt;code&gt;tauri.config.json&lt;/code&gt; file needs to be modified synchronously, as well as the &lt;code&gt;icon&lt;/code&gt; and &lt;code&gt;identifier&lt;/code&gt; fields in the &lt;code&gt;tauri.xxx.conf.json&lt;/code&gt; file. You can select an &lt;code&gt;icon&lt;/code&gt; from the &lt;code&gt;icons&lt;/code&gt; directory or download one from &lt;a href="https://macosicons.com/#/"&gt;macOSicons&lt;/a&gt; to match your product needs.&lt;/li&gt; 
 &lt;li&gt;For configurations on window properties, you can modify the &lt;code&gt;pake.json&lt;/code&gt; file to change the value of &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;fullscreen&lt;/code&gt; (or not), &lt;code&gt;resizable&lt;/code&gt; (or not), &lt;code&gt;hide_on_close&lt;/code&gt; (hide window on close instead of exiting) of the &lt;code&gt;windows&lt;/code&gt; property. To adapt to the immersive header on Mac, change &lt;code&gt;hideTitleBar&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, look for the &lt;code&gt;Header&lt;/code&gt; element, and add the &lt;code&gt;padding-top&lt;/code&gt; property.&lt;/li&gt; 
 &lt;li&gt;For advanced usages such as style rewriting, advertisement removal, JS injection, container message communication, and user-defined shortcut keys, see &lt;a href="https://github.com/tw93/Pake/wiki/Advanced-Usage-of-Pake"&gt;Advanced Usage of Pake&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Developers&lt;/h2&gt; 
&lt;p&gt;Pake's development can not be without these Hackers. They contributed a lot of capabilities for Pake. Also, welcome to follow them! ❤️&lt;/p&gt; 
&lt;!-- readme: contributors -start --&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/tw93"&gt; &lt;img src="https://avatars.githubusercontent.com/u/8736212?v=4" width="90;" alt="tw93" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Tw93&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Tlntin"&gt; &lt;img src="https://avatars.githubusercontent.com/u/28218658?v=4" width="90;" alt="Tlntin" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Tlntin&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/jeasonnow"&gt; &lt;img src="https://avatars.githubusercontent.com/u/16950207?v=4" width="90;" alt="jeasonnow" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Santree&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/pan93412"&gt; &lt;img src="https://avatars.githubusercontent.com/u/28441561?v=4" width="90;" alt="pan93412" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Pan93412&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/stone-w4tch3r"&gt; &lt;img src="https://avatars.githubusercontent.com/u/100294019?v=4" width="90;" alt="stone-w4tch3r" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Данил Бизимов&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/wanghanzhen"&gt; &lt;img src="https://avatars.githubusercontent.com/u/25301012?v=4" width="90;" alt="wanghanzhen" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Volare&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/liby"&gt; &lt;img src="https://avatars.githubusercontent.com/u/38807139?v=4" width="90;" alt="liby" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Bryan Lee&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/essesoul"&gt; &lt;img src="https://avatars.githubusercontent.com/u/58624474?v=4" width="90;" alt="essesoul" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Essesoul&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/YangguangZhou"&gt; &lt;img src="https://avatars.githubusercontent.com/u/61733195?v=4" width="90;" alt="YangguangZhou" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Jerry Zhou&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/AielloChan"&gt; &lt;img src="https://avatars.githubusercontent.com/u/7900765?v=4" width="90;" alt="AielloChan" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Aiello&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/m1911star"&gt; &lt;img src="https://avatars.githubusercontent.com/u/4948120?v=4" width="90;" alt="m1911star" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Horus&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Pake-Actions"&gt; &lt;img src="https://avatars.githubusercontent.com/u/126550811?v=4" width="90;" alt="Pake-Actions" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Pake Actions&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/GoodbyeNJN"&gt; &lt;img src="https://avatars.githubusercontent.com/u/6856639?v=4" width="90;" alt="GoodbyeNJN" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;GoodbyeNJN&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/kittizz"&gt; &lt;img src="https://avatars.githubusercontent.com/u/62899732?v=4" width="90;" alt="kittizz" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Kittizz&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/mattbajorek"&gt; &lt;img src="https://avatars.githubusercontent.com/u/17235301?v=4" width="90;" alt="mattbajorek" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Matt Bajorek&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/vaddisrinivas"&gt; &lt;img src="https://avatars.githubusercontent.com/u/38348871?v=4" width="90;" alt="vaddisrinivas" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Srinivas Vaddi&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/QingZ11"&gt; &lt;img src="https://avatars.githubusercontent.com/u/38887077?v=4" width="90;" alt="QingZ11" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Steam&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Tianj0o"&gt; &lt;img src="https://avatars.githubusercontent.com/u/68584284?v=4" width="90;" alt="Tianj0o" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Qitianjia&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/xinyii"&gt; &lt;img src="https://avatars.githubusercontent.com/u/17895104?v=4" width="90;" alt="xinyii" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Yi Xin&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/g1eny0ung"&gt; &lt;img src="https://avatars.githubusercontent.com/u/15034155?v=4" width="90;" alt="g1eny0ung" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Yue Yang&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/lkieryan"&gt; &lt;img src="https://avatars.githubusercontent.com/u/187804088?v=4" width="90;" alt="lkieryan" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Kieran&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/exposir"&gt; &lt;img src="https://avatars.githubusercontent.com/u/33340988?v=4" width="90;" alt="exposir" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;孟世博&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/2nthony"&gt; &lt;img src="https://avatars.githubusercontent.com/u/19513289?v=4" width="90;" alt="2nthony" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;2nthony&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/ACGNnsj"&gt; &lt;img src="https://avatars.githubusercontent.com/u/22112141?v=4" width="90;" alt="ACGNnsj" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Null&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/imabutahersiddik"&gt; &lt;img src="https://avatars.githubusercontent.com/u/138387257?v=4" width="90;" alt="imabutahersiddik" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Abu Taher Siddik&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/kidylee"&gt; &lt;img src="https://avatars.githubusercontent.com/u/841310?v=4" width="90;" alt="kidylee" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;An Li&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/nekomeowww"&gt; &lt;img src="https://avatars.githubusercontent.com/u/11081491?v=4" width="90;" alt="nekomeowww" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Ayaka Neko&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/turkyden"&gt; &lt;img src="https://avatars.githubusercontent.com/u/24560160?v=4" width="90;" alt="turkyden" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Dengju Deng&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/fvn-elmy"&gt; &lt;img src="https://avatars.githubusercontent.com/u/71275745?v=4" width="90;" alt="fvn-elmy" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Fabien&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Fechin"&gt; &lt;img src="https://avatars.githubusercontent.com/u/2541482?v=4" width="90;" alt="Fechin" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Fechin&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/ImgBotApp"&gt; &lt;img src="https://avatars.githubusercontent.com/u/31427850?v=4" width="90;" alt="ImgBotApp" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Imgbot&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/droid-Q"&gt; &lt;img src="https://avatars.githubusercontent.com/u/708277?v=4" width="90;" alt="droid-Q" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Jiaqi Gu&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Milo123459"&gt; &lt;img src="https://avatars.githubusercontent.com/u/50248166?v=4" width="90;" alt="Milo123459" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Milo&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/princemaple"&gt; &lt;img src="https://avatars.githubusercontent.com/u/1329716?v=4" width="90;" alt="princemaple" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Po Chen&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/beautifulrem"&gt; &lt;img src="https://avatars.githubusercontent.com/u/98527099?v=4" width="90;" alt="beautifulrem" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Xie Ruiqi&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/bocanhcam"&gt; &lt;img src="https://avatars.githubusercontent.com/u/35592955?v=4" width="90;" alt="bocanhcam" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Null&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/geekvest"&gt; &lt;img src="https://avatars.githubusercontent.com/u/126322776?v=4" width="90;" alt="geekvest" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Null&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/houhoz"&gt; &lt;img src="https://avatars.githubusercontent.com/u/19684376?v=4" width="90;" alt="houhoz" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Hyzhao&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/lakca"&gt; &lt;img src="https://avatars.githubusercontent.com/u/16255922?v=4" width="90;" alt="lakca" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Null&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/liudonghua123"&gt; &lt;img src="https://avatars.githubusercontent.com/u/2276718?v=4" width="90;" alt="liudonghua123" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Liudonghua&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/liusishan"&gt; &lt;img src="https://avatars.githubusercontent.com/u/33129823?v=4" width="90;" alt="liusishan" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Liusishan&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/piaoyidage"&gt; &lt;img src="https://avatars.githubusercontent.com/u/5135405?v=4" width="90;" alt="piaoyidage" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Ranger&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/hetz"&gt; &lt;img src="https://avatars.githubusercontent.com/u/820141?v=4" width="90;" alt="hetz" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;贺天卓&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
 &lt;tbody&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- readme: contributors -end --&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Right-clicking on an image element in the page to open the menu and select download image or other events does not work (common in MacOS systems). This issue is due to the MacOS built-in webview not supporting this feature.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;I have two cats, TangYuan and Coke. If you think Pake delights your life, you can feed them &lt;a href="https://miaoyan.app/cats.html?name=Pake" target="_blank"&gt;some canned food 🥩&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you like Pake, you can star it on GitHub. Also, welcome to &lt;a href="https://twitter.com/intent/tweet?url=https://github.com/tw93/Pake&amp;amp;text=%23Pake%20-%20A%20simple%20Rust%20packaged%20web%20pages%20to%20generate%20Mac%20App%20tool,%20compared%20to%20traditional%20Electron%20package,%20the%20size%20of%20nearly%2040%20times%20smaller,%20generally%20about%202M,%20the%20underlying%20use%20of%20Tauri,%20performance%20experience%20than%20the%20JS%20framework%20is%20much%20lighter~"&gt;recommend Pake&lt;/a&gt; to your friends.&lt;/li&gt; 
 &lt;li&gt;You can follow my &lt;a href="https://twitter.com/HiTw93"&gt;Twitter&lt;/a&gt; to get the latest news of Pake or join our &lt;a href="https://t.me/+GclQS9ZnxyI2ODQ1"&gt;Telegram&lt;/a&gt; chat group.&lt;/li&gt; 
 &lt;li&gt;I hope that you enjoy playing with it. Let us know if you find a website that would be great for a Mac App!&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
  </channel>
</rss>