<rss version="2.0">
  <channel>
    <title>GitHub Java Daily Trending</title>
    <description>Daily Trending of Java in GitHub</description>
    <pubDate>Mon, 25 Aug 2025 01:35:13 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>microg/GmsCore</title>
      <link>https://github.com/microg/GmsCore</link>
      <description>&lt;p&gt;Free implementation of Play Services&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;microG Services&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/microg/GmsCore/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/microg/GmsCore/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build status" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/microg/GmsCore/master/TRANSLATION.md"&gt; &lt;img src="https://hosted.weblate.org/widget/microg/svg-badge.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;microG Services is a FLOSS (Free/Libre Open Source Software) framework to allow applications designed for Google Play Services to run on systems, where Play Services is not available.&lt;/p&gt; 
&lt;h3&gt;Please refer to the &lt;a href="https://github.com/microg/GmsCore/wiki"&gt;wiki&lt;/a&gt; for downloads and instructions&lt;/h3&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;If you'd like to help translate microG, take a look at &lt;a href="https://raw.githubusercontent.com/microg/GmsCore/master/TRANSLATION.md"&gt;TRANSLATION&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright 2013-2024 microG Project Team

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>ashishps1/awesome-leetcode-resources</title>
      <link>https://github.com/ashishps1/awesome-leetcode-resources</link>
      <description>&lt;p&gt;Awesome LeetCode resources to learn Data Structures and Algorithms and prepare for Coding Interviews.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ashishps1/awesome-leetcode-resources/main/images/leetcode-repo-logo.png" width="350" height="200" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://blog.algomaster.io/"&gt;Join Free Newsletter&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;This repository contains awesome LeetCode resources to learn Data Structures and Algorithms (DSA) and prepare for Coding interviews.&lt;/p&gt; 
&lt;p&gt;üëâ If you want to master DSA patterns, checkout &lt;a href="https://algomaster.io"&gt;AlgoMaster.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üí° Tips&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms"&gt;How I Mastered DSA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/how-to-start-leetcode-in-2025"&gt;How to Start LeetCode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/15-leetcode-patterns"&gt;15 Leetcode Patterns&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìå Fundamental Concepts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/57bd4963-462f-4294-a972-4012691fc729"&gt;Algorithmic Complexity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bigocheatsheet.com/"&gt;Big-O Cheat Sheet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/c650df76-f978-46ee-a572-eb13c354905d"&gt;Bit Manipulation Techniques&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/jl-codes/understanding-sorting-algorithms-af6222995c8"&gt;Sorting Algorithms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/1800120/become-master-in-linked-list"&gt;Linked List&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/5d7a1368-7a0c-461a-93a9-732333ceb2a8"&gt;Dummy Node Technique&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/to-queue-or-not-to-queue-2653bcde5b04"&gt;Queues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/stacks-and-overflows-dbcf7854dc67"&gt;Stacks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/taking-hash-tables-off-the-shelf-139cbf4752f0"&gt;Hash Tables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/learning-to-love-heaps-cef2b273a238"&gt;Heaps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/1733447/become-master-in-recursion"&gt;Recursion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/algorithms-and-leetcode/backtracking-e001561b9f28"&gt;Backtracking&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/1820334/Become-Master-in-Tree"&gt;Trees&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/trying-to-understand-tries-3ec6bede0014"&gt;Tries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/786126/Python-Powerful-Ultimate-Binary-Search-Template.-Solved-many-problems"&gt;Binary Search&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/greedy-algorithms/"&gt;Greedy Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/less-repetition-more-dynamic-programming-43d29830a630"&gt;Dynamic Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/a-gentle-introduction-to-graph-theory-77969829ead8"&gt;Graph Theory&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/master-graph-algorithms-for-coding"&gt;Important Graph Algorithms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/deep-dive-through-a-graph-dfs-traversal-8177df5d0f13"&gt;DFS Traversal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/going-broad-in-a-graph-bfs-traversal-959bd1a09255"&gt;BFS Traversal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/general-discussion/1072418/Disjoint-Set-Union-(DSU)Union-Find-A-Complete-Guide"&gt;Union-Find&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/1059477/A-guide-to-Dijkstra's-Algorithm"&gt;Dijkstra Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.hackerearth.com/practice/algorithms/graphs/minimum-spanning-tree/tutorial/"&gt;Minimum Spanning Tree&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üöÄ Patterns&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/15-leetcode-patterns"&gt;15 Leetcode Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/20-patterns-to-master-dynamic-programming"&gt;20 DP Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QzZ7nmouLTI"&gt;Two Pointers Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/f4412a17-7a3a-4d0b-8e39-9ea8f429bf7c"&gt;Sliding Window Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yuws7YK0Yng"&gt;Prefix Sum Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=b139yf7Ik-E"&gt;Fast and Slow Pointers Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6_v6OoxvMOE"&gt;Top 'K' Elements Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=NUWAXbSlsws"&gt;Kadane's Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=y2d0VHdvfdc"&gt;Sliding Window Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=auoTGovuo9A"&gt;Linked List In-place Reversal Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DtJVwbbicjQ"&gt;Monotonic Stack Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/812e72f7-eced-4256-a4c1-00606ae50679"&gt;Overlapping Intervals Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/81d42ca2-600c-4252-aa33-a56462090048"&gt;Backtracking Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/d0d81b04-4c2a-4b45-a101-5137c3146686"&gt;Modified Binary Search Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/937307/Iterative-or-Recursive-or-DFS-and-BFS-Tree-Traversal-or-In-Pre-Post-and-LevelOrder-or-Views"&gt;Tree Patterns&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/leetcode-patterns/leetcode-pattern-0-iterative-traversals-on-trees-d373568eb0ec"&gt;Tree Iterative Traversal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/2879240/TREE-QUESTION-PATTERN-2023-oror-TREE-STUDY-GUIDE"&gt;Tree Question Pattern&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/655708/Graph-For-Beginners-Problems-or-Pattern-or-Sample-Solutions"&gt;Graph Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/leetcode-patterns/leetcode-pattern-1-bfs-dfs-25-of-the-problems-part-1-519450a84353"&gt;DFS + BFS Patterns (1)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/leetcode-patterns/leetcode-pattern-2-dfs-bfs-25-of-the-problems-part-2-a5b269597f52"&gt;DFS + BFS Patterns (2)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìù Must-Read Leetcode Articles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/problems/frequency-of-the-most-frequent-element/solutions/1175088/C++-Maximum-Sliding-Window-Cheatsheet-Template/"&gt;Sliding Window Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/1688903/Solved-all-two-pointers-problems-in-100-days"&gt;Two Pointers Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/2001789/Collections-of-Important-String-questions-Pattern"&gt;Collections of Important String Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/problems/minimum-window-substring/solutions/26808/Here-is-a-10-line-template-that-can-solve-most-'substring'-problems/"&gt;Substring Problem Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/786126/Python-Powerful-Ultimate-Binary-Search-Template.-Solved-many-problems"&gt;Binary Search Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/problems/permutations/solutions/18239/A-general-approach-to-backtracking-questions-in-Java-(Subsets-Permutations-Combination-Sum-Palindrome-Partioning)/"&gt;A General Approach to Backtracking Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/2347639/A-comprehensive-guide-and-template-for-monotonic-stack-based-problems"&gt;Monotonic Stack Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/general-discussion/1127238/master-heap-by-solving-23-questions-in-4-patterns-category"&gt;Heap Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/4282051/all-types-of-patterns-for-bits-manipulations-and-how-to-use-it"&gt;Bit Manipulation Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/458695/Dynamic-Programming-Patterns"&gt;Dynamic Programming Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/solutions/108870/most-consistent-ways-of-dealing-with-the-series-of-stock-problems/"&gt;Stock Series Patterns&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚úÖ Curated Problems&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://algomaster.io/practice/dsa-patterns"&gt;AlgoMaster 300&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/general-discussion/460599/blind-75-leetcode-questions"&gt;Blind 75&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/studyplan/top-100-liked/"&gt;Leetcode Top 100 Liked&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/studyplan/top-interview-150/"&gt;Leetcode Top Interview 150&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üì∫ YouTube Playlist&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLK63NuByH5o-tqaMUHRA4r8ObRW7PWz45"&gt;AlgoMaster LeetCode Pattern Playlist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLDN4rrl48XKpZkf03iYFl-O29szjTrs_O"&gt;Abdul Bari's Algorithms Playlist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLDV1Zeh2NRsB6SWUrDFW2RmDotAfPbeHu"&gt;William Fiset's Data Structure Playlist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLDV1Zeh2NRsDGO4--qE8yH72HFL1Km93P"&gt;William Fiset's Graphs Playlist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLrmLmBdmIlpsHaNTPP_jHHDx_os9ItYXr"&gt;Tushar Roy's Dynamic Programming Playlist&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìá Courses&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.coursera.org/learn/algorithms-part1"&gt;Coursera - Algorithms, Part I&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coursera.org/learn/algorithms-part2"&gt;Coursera - Algorithms, Part 2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìö Books&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.in/dp/B08CMLS7LZ"&gt;Data Structures And Algorithms Made Easy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.in/dp/0984782850"&gt;Cracking the Coding Interview&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üì© Newsletter&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/"&gt;AlgoMaster Newsletter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üîé Visualization&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://visualgo.net/en"&gt;VisuAlgo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jaroslaw-weber/algo-lens"&gt;Algo-lens: Visualize leetcode problems&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìé LeetCode Extensions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://chromewebstore.google.com/detail/leetcode-timer/gfkgelnlcnomnahkfmhemgpahgmibofd"&gt;LeetCode Timer&lt;/a&gt;: Easily time your leetcode practise sessions with automatic time setting based on difficulty.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chromewebstore.google.com/detail/leetcode-video-solutions/ilnmgkahgjdpkoliooildngldmilhelm"&gt;LeetCode Video Solutions&lt;/a&gt;: Watch free LeetCode video ‚ñ∂ solutions on the problem page itself.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chromewebstore.google.com/detail/leetcode-format/imogghebhifnnlgogigikjecilkicfpp"&gt;LeetCode Format&lt;/a&gt;: Adds Format code button on leetcode to format the code using Prettier code formatter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chromewebstore.google.com/detail/leethub-v2/mhanfgfagplhgemhjfeolkkdidbakocm?hl=en"&gt;LeetHub v2&lt;/a&gt;: Automatically integrate your Leetcode &amp;amp; GeeksforGeeks submissions to GitHub.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=LeetCode.vscode-leetcode"&gt;LeetCode VS Code Extension&lt;/a&gt;: Solve LeetCode problems in VS Code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Your contributions are most welcome!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;i&gt;If you find this resource helpful, please give it a star ‚≠êÔ∏è and share it with others!&lt;/i&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TheAlgorithms/Java</title>
      <link>https://github.com/TheAlgorithms/Java</link>
      <description>&lt;p&gt;All Algorithms implemented in Java&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Algorithms - Java&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/TheAlgorithms/Java/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/TheAlgorithms/Java/actions/workflows/build.yml/badge.svg?branch=master" alt="Build" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/TheAlgorithms/Java"&gt;&lt;img src="https://codecov.io/gh/TheAlgorithms/Java/graph/badge.svg?token=XAdPyqTIqR" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/c7MnfGFGa6"&gt;&lt;img src="https://img.shields.io/discord/808045925556682782.svg?logo=discord&amp;amp;colorB=7289DA&amp;amp;style=flat-square" alt="Discord chat" /&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/TheAlgorithms/Java"&gt;&lt;img src="https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod" alt="Gitpod ready-to-code" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can run and edit the algorithms, or contribute to them using Gitpod.io (a free online development environment) with a single click.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/TheAlgorithms/Java"&gt;&lt;img src="https://gitpod.io/button/open-in-gitpod.svg?sanitize=true" alt="Open in Gitpod" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;All algorithms are implemented in Java (for educational purposes)&lt;/h3&gt; 
&lt;p&gt;These implementations are intended for learning purposes. As such, they may be less efficient than the Java standard library.&lt;/p&gt; 
&lt;h2&gt;Contribution Guidelines&lt;/h2&gt; 
&lt;p&gt;Please read our &lt;a href="https://raw.githubusercontent.com/TheAlgorithms/Java/master/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; before you contribute to this project.&lt;/p&gt; 
&lt;h2&gt;Algorithms&lt;/h2&gt; 
&lt;p&gt;Our &lt;a href="https://raw.githubusercontent.com/TheAlgorithms/Java/master/DIRECTORY.md"&gt;directory&lt;/a&gt; has the full list of applications.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openjdk/jdk</title>
      <link>https://github.com/openjdk/jdk</link>
      <description>&lt;p&gt;JDK main-line development https://openjdk.org/projects/jdk&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to the JDK!&lt;/h1&gt; 
&lt;p&gt;For build instructions please see the &lt;a href="https://openjdk.org/groups/build/doc/building.html"&gt;online documentation&lt;/a&gt;, or either of these files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openjdk/jdk/master/doc/building.html"&gt;doc/building.html&lt;/a&gt; (html version)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openjdk/jdk/master/doc/building.md"&gt;doc/building.md&lt;/a&gt; (markdown version)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://openjdk.org/"&gt;https://openjdk.org/&lt;/a&gt; for more information about the OpenJDK Community and the JDK and see &lt;a href="https://bugs.openjdk.org"&gt;https://bugs.openjdk.org&lt;/a&gt; for JDK issue tracking.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>elastic/elasticsearch</title>
      <link>https://github.com/elastic/elasticsearch</link>
      <description>&lt;p&gt;Free and Open Source, Distributed, RESTful Search Engine&lt;/p&gt;&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>PaperMC/Paper</title>
      <link>https://github.com/PaperMC/Paper</link>
      <description>&lt;p&gt;The most widely used, high performance Minecraft server that aims to fix gameplay and mechanics inconsistencies&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Paper &lt;a href="https://github.com/PaperMC/Paper/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/PaperMC/Paper/build.yml?branch=main" alt="Paper Build Status" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/papermc"&gt;&lt;img src="https://img.shields.io/discord/289587909051416579.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/PaperMC"&gt;&lt;img src="https://img.shields.io/github/sponsors/papermc?label=GitHub%20Sponsors" alt="GitHub Sponsors" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/papermc"&gt;&lt;img src="https://img.shields.io/opencollective/all/papermc?label=OpenCollective%20Sponsors" alt="Open Collective" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;The most widely used, high-performance Minecraft server that aims to fix gameplay and mechanics inconsistencies.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Support and Project Discussion:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://forums.papermc.io/"&gt;Our forums&lt;/a&gt; or &lt;a href="https://discord.gg/papermc"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How To (Server Admins)&lt;/h2&gt; 
&lt;p&gt;Paperclip is a jar file that you can download and run just like a normal jar file.&lt;/p&gt; 
&lt;p&gt;Download Paper from our &lt;a href="https://papermc.io/downloads/paper"&gt;downloads page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Run the Paperclip jar directly from your server. Just like old times&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation on using Paper: &lt;a href="https://docs.papermc.io"&gt;docs.papermc.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;For a sneak peek at upcoming features, &lt;a href="https://github.com/PaperMC/Paper/projects"&gt;see here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How To (Plugin Developers)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;See our API &lt;a href="https://raw.githubusercontent.com/PaperMC/Paper/main/paper-api"&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See upcoming, pending, and recently added API &lt;a href="https://github.com/orgs/PaperMC/projects/2/views/4"&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Paper API javadocs here: &lt;a href="https://papermc.io/javadocs/"&gt;papermc.io/javadocs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Repository (for paper-api)&lt;/h4&gt; 
&lt;h5&gt;Maven&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;repository&amp;gt;
    &amp;lt;id&amp;gt;papermc&amp;lt;/id&amp;gt;
    &amp;lt;url&amp;gt;https://repo.papermc.io/repository/maven-public/&amp;lt;/url&amp;gt;
&amp;lt;/repository&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;io.papermc.paper&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;paper-api&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;1.21.8-R0.1-SNAPSHOT&amp;lt;/version&amp;gt;
    &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Gradle&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-kotlin"&gt;repositories {
    maven {
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.8-R0.1-SNAPSHOT")
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(21))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How To (Compiling Jar From Source)&lt;/h2&gt; 
&lt;p&gt;To compile Paper, you need JDK 21 and an internet connection.&lt;/p&gt; 
&lt;p&gt;Clone this repo, run &lt;code&gt;./gradlew applyPatches&lt;/code&gt;, then &lt;code&gt;./gradlew createMojmapBundlerJar&lt;/code&gt; from your terminal. You can find the compiled jar in the &lt;code&gt;paper-server/build/libs&lt;/code&gt; directory.&lt;/p&gt; 
&lt;p&gt;To get a full list of tasks, run &lt;code&gt;./gradlew tasks&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;How To (Pull Request)&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/PaperMC/Paper/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Old Versions (1.21.3 and below)&lt;/h2&gt; 
&lt;p&gt;For branches of versions 1.8-1.21.3, please see our &lt;a href="https://github.com/PaperMC/Paper-archive"&gt;archive repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support Us&lt;/h2&gt; 
&lt;p&gt;First of all, thank you for considering helping out, we really appreciate that!&lt;/p&gt; 
&lt;p&gt;PaperMC has various recurring expenses, mostly related to infrastructure. Paper uses &lt;a href="https://opencollective.com/"&gt;Open Collective&lt;/a&gt; via the &lt;a href="https://opencollective.com/opensource"&gt;Open Source Collective fiscal host&lt;/a&gt; to manage expenses. Open Collective allows us to be extremely transparent, so you can always see how your donations are used. You can read more about financially supporting PaperMC &lt;a href="https://papermc.io/sponsors"&gt;on our website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can find our collective &lt;a href="https://opencollective.com/papermc"&gt;here&lt;/a&gt;, or you can donate via GitHub Sponsors &lt;a href="https://github.com/sponsors/PaperMC"&gt;here&lt;/a&gt;, which will also go towards the collective.&lt;/p&gt; 
&lt;h2&gt;Special Thanks To:&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.yourkit.com/"&gt;&lt;img src="https://www.yourkit.com/images/yklogo.png" alt="YourKit-Logo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.yourkit.com/"&gt;YourKit&lt;/a&gt;, makers of the outstanding java profiler, support open source projects of all kinds with their full featured &lt;a href="https://www.yourkit.com/java/profiler"&gt;Java&lt;/a&gt; and &lt;a href="https://www.yourkit.com/.net/profiler"&gt;.NET&lt;/a&gt; application profilers. We thank them for granting Paper an OSS license so that we can make our software the best it can be.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.jetbrains.com"&gt;&lt;img src="https://user-images.githubusercontent.com/21148213/121807008-8ffc6700-cc52-11eb-96a7-2f6f260f8fda.png" alt="" width="150" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.jetbrains.com/"&gt;JetBrains&lt;/a&gt;, creators of the IntelliJ IDEA, supports Paper with one of their &lt;a href="https://www.jetbrains.com/opensource/"&gt;Open Source Licenses&lt;/a&gt;. IntelliJ IDEA is the recommended IDE for working with Paper, and most of the Paper team uses it.&lt;/p&gt; 
&lt;p&gt;All our sponsors!&lt;br /&gt; &lt;a href="https://papermc.io/sponsors"&gt;&lt;img src="https://raw.githubusercontent.com/PaperMC/papermc.io/data/sponsors.png" alt="Sponsor Image" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DrKLO/Telegram</title>
      <link>https://github.com/DrKLO/Telegram</link>
      <description>&lt;p&gt;Telegram for Android source&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Telegram messenger for Android&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://telegram.org"&gt;Telegram&lt;/a&gt; is a messaging app with a focus on speed and security. It‚Äôs superfast, simple and free. This repo contains the official source code for &lt;a href="https://play.google.com/store/apps/details?id=org.telegram.messenger"&gt;Telegram App for Android&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Creating your Telegram Application&lt;/h2&gt; 
&lt;p&gt;We welcome all developers to use our API and source code to create applications on our platform. There are several things we require from &lt;strong&gt;all developers&lt;/strong&gt; for the moment.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://core.telegram.org/api/obtaining_api_id"&gt;&lt;strong&gt;Obtain your own api_id&lt;/strong&gt;&lt;/a&gt; for your application.&lt;/li&gt; 
 &lt;li&gt;Please &lt;strong&gt;do not&lt;/strong&gt; use the name Telegram for your app ‚Äî or make sure your users understand that it is unofficial.&lt;/li&gt; 
 &lt;li&gt;Kindly &lt;strong&gt;do not&lt;/strong&gt; use our standard logo (white paper plane in a blue circle) as your app's logo.&lt;/li&gt; 
 &lt;li&gt;Please study our &lt;a href="https://core.telegram.org/mtproto/security_guidelines"&gt;&lt;strong&gt;security guidelines&lt;/strong&gt;&lt;/a&gt; and take good care of your users' data and privacy.&lt;/li&gt; 
 &lt;li&gt;Please remember to publish &lt;strong&gt;your&lt;/strong&gt; code too in order to comply with the licences.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;API, Protocol documentation&lt;/h3&gt; 
&lt;p&gt;Telegram API manuals: &lt;a href="https://core.telegram.org/api"&gt;https://core.telegram.org/api&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;MTproto protocol manuals: &lt;a href="https://core.telegram.org/mtproto"&gt;https://core.telegram.org/mtproto&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Compilation Guide&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: In order to support &lt;a href="https://core.telegram.org/reproducible-builds"&gt;reproducible builds&lt;/a&gt;, this repo contains dummy release.keystore, google-services.json and filled variables inside BuildVars.java. Before publishing your own APKs please make sure to replace all these files with your own.&lt;/p&gt; 
&lt;p&gt;You will require Android Studio 3.4, Android NDK rev. 20 and Android SDK 8.1&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the Telegram source code from &lt;a href="https://github.com/DrKLO/Telegram"&gt;https://github.com/DrKLO/Telegram&lt;/a&gt; ( git clone &lt;a href="https://github.com/DrKLO/Telegram.git"&gt;https://github.com/DrKLO/Telegram.git&lt;/a&gt; )&lt;/li&gt; 
 &lt;li&gt;Copy your release.keystore into TMessagesProj/config&lt;/li&gt; 
 &lt;li&gt;Fill out RELEASE_KEY_PASSWORD, RELEASE_KEY_ALIAS, RELEASE_STORE_PASSWORD in gradle.properties to access your release.keystore&lt;/li&gt; 
 &lt;li&gt;Go to &lt;a href="https://console.firebase.google.com/"&gt;https://console.firebase.google.com/&lt;/a&gt;, create two android apps with application IDs org.telegram.messenger and org.telegram.messenger.beta, turn on firebase messaging and download google-services.json, which should be copied to the same folder as TMessagesProj.&lt;/li&gt; 
 &lt;li&gt;Open the project in the Studio (note that it should be opened, NOT imported).&lt;/li&gt; 
 &lt;li&gt;Fill out values in TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java ‚Äì there‚Äôs a link for each of the variables showing where and which data to obtain.&lt;/li&gt; 
 &lt;li&gt;You are ready to compile Telegram.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Localization&lt;/h3&gt; 
&lt;p&gt;We moved all translations to &lt;a href="https://translations.telegram.org/en/android/"&gt;https://translations.telegram.org/en/android/&lt;/a&gt;. Please use it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AntennaPod/AntennaPod</title>
      <link>https://github.com/AntennaPod/AntennaPod</link>
      <description>&lt;p&gt;A podcast manager for Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AntennaPod&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/AntennaPod/AntennaPod/actions/workflows/checks.yml?query=branch%3Adevelop"&gt;&lt;img src="https://img.shields.io/github/check-runs/AntennaPod/AntennaPod/develop" alt="GitHub check runs" /&gt;&lt;/a&gt; &lt;a href="https://www.gnu.org/licenses/gpl-3.0"&gt;&lt;img src="https://img.shields.io/github/license/AntennaPod/AntennaPod" alt="License: GPL v3" /&gt;&lt;/a&gt; &lt;a href="https://github.com/AntennaPod/AntennaPod/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/AntennaPod/AntennaPod" alt="GitHub Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/AntennaPod/AntennaPod/commits/develop/"&gt;&lt;img src="https://img.shields.io/github/commits-since/AntennaPod/AntennaPod/latest/develop" alt="https://img.shields.io/github/commits-since/AntennaPod/AntennaPod/latest/develop" /&gt;&lt;/a&gt; &lt;a href="https://hosted.weblate.org/engage/antennapod/"&gt;&lt;img src="https://hosted.weblate.org/widget/antennapod/app/svg-badge.svg?native=1" alt="Translations on Weblate" /&gt;&lt;/a&gt; &lt;a href="https://github.com/AntennaPod/AntennaPod/labels/Good%20first%20issue"&gt;&lt;img src="https://img.shields.io/github/issues-search?query=repo%3AAntennaPod%2FAntennaPod%20is%3Aopen%20is%3Aissue%20label%3A%22Good%20first%20issue%22&amp;amp;label=Good%20first%20issue&amp;amp;labelColor=grey&amp;amp;color=%235F1984" alt="Good first issue" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This is the official repository of AntennaPod, the easy-to-use, flexible and open-source podcast manager for Android.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=de.danoeh.antennapod"&gt;&lt;img src="https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png" alt="Get it on Google Play" height="70" /&gt;&lt;/a&gt; &lt;a href="https://f-droid.org/app/de.danoeh.antennapod"&gt;&lt;img src="https://fdroid.gitlab.io/artwork/badge/get-it-on.png" alt="Get it on F-Droid" height="70" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/AntennaPod/StoreMetadata/main/listings/en-US/graphics/phone-screenshots/00.png" alt="Screenshot 0" height="200" /&gt; &lt;img src="https://raw.githubusercontent.com/AntennaPod/StoreMetadata/main/listings/en-US/graphics/phone-screenshots/01.png" alt="Screenshot 1" height="200" /&gt; &lt;img src="https://raw.githubusercontent.com/AntennaPod/StoreMetadata/main/listings/en-US/graphics/phone-screenshots/02.png" alt="Screenshot 2" height="200" /&gt; &lt;img src="https://raw.githubusercontent.com/AntennaPod/StoreMetadata/main/listings/en-US/graphics/phone-screenshots/03.png" alt="Screenshot 3" height="200" /&gt; &lt;img src="https://raw.githubusercontent.com/AntennaPod/StoreMetadata/main/listings/en-US/graphics/phone-screenshots/04.png" alt="Screenshot 4" height="200" /&gt; &lt;img src="https://raw.githubusercontent.com/AntennaPod/StoreMetadata/main/listings/en-US/graphics/phone-screenshots/05.png" alt="Screenshot 5" height="200" /&gt;&lt;/p&gt; 
&lt;h2&gt;Feedback&lt;/h2&gt; 
&lt;p&gt;You can use the &lt;a href="https://forum.antennapod.org/"&gt;AntennaPod Forum&lt;/a&gt; for discussions about the app or just podcasting in general.&lt;/p&gt; 
&lt;p&gt;Bug reports and feature requests can be submitted &lt;a href="https://github.com/AntennaPod/AntennaPod/issues"&gt;here&lt;/a&gt; (please read the &lt;a href="https://github.com/AntennaPod/AntennaPod/raw/develop/CONTRIBUTING.md"&gt;instructions&lt;/a&gt; on how to report a bug and how to submit a feature request first!).&lt;/p&gt; 
&lt;p&gt;We also hold regular community calls to discuss anything AntennaPod-related. &lt;a href="https://forum.antennapod.org/t/monthly-community-call/1869"&gt;Come join the next call&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Help to test AntennaPod&lt;/h2&gt; 
&lt;p&gt;AntennaPod has many users and we don't want them to run into trouble when we add a new feature. It's important that we have a significant group test our app, so that we know all possible combinations of phones, Android versions and use cases work as expected. Check out our wiki on how to join our &lt;a href="https://antennapod.org/documentation/general/beta"&gt;Beta testing program&lt;/a&gt;! If a bug is reported during the beta period, chances are high that it will be fixed before the stable version. If it is reported later, fixing might take another full beta cycle. So definitely let us know if something is not right.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;AntennaPod is licensed under the GNU General Public License (GPL-3.0). You can find the license text in the LICENSE file.&lt;/p&gt; 
&lt;h2&gt;Translating AntennaPod&lt;/h2&gt; 
&lt;p&gt;If you want to translate AntennaPod into another language, you can visit our &lt;a href="https://hosted.weblate.org/projects/antennapod/"&gt;Weblate page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building AntennaPod&lt;/h2&gt; 
&lt;p&gt;You can build AntennaPod just like any other Android project. Refer to the &lt;a href="https://github.com/AntennaPod/AntennaPod/raw/develop/CONTRIBUTING.md"&gt;instructions&lt;/a&gt; for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tencentmusic/supersonic</title>
      <link>https://github.com/tencentmusic/supersonic</link>
      <description>&lt;p&gt;SuperSonic is the next-generation AI+BI platform that unifies Chat BI (powered by LLM) and Headless BI (powered by semantic layer) paradigms.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/tencentmusic/supersonic/master/README_CN.md"&gt;‰∏≠ÊñáÁâà&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/tencentmusic/supersonic/master/README_JP.md"&gt;Êó•Êú¨Ë™ûÁâà&lt;/a&gt; | &lt;a href="https://supersonicbi.github.io/"&gt;Docs&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/tencentmusic/supersonic/workflows/supersonic%20CI/badge.svg?sanitize=true" alt="Java CI" /&gt;&lt;/p&gt; 
&lt;h1&gt;SuperSonic&lt;/h1&gt; 
&lt;p&gt;SuperSonic is the next-generation AI+BI platform that unifies &lt;strong&gt;Chat BI&lt;/strong&gt; (powered by LLM) and &lt;strong&gt;Headless BI&lt;/strong&gt; (powered by semantic layer) paradigms. This unification ensures that Chat BI has access to the same curated and governed semantic data models as traditional BI. Furthermore, the implementation of both paradigms benefit from each other:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chat BI's Text2SQL gets augmented with context-retrieval from semantic models.&lt;/li&gt; 
 &lt;li&gt;Headless BI's query interface gets extended with natural language API.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://github.com/supersonicbi/supersonic-website/raw/main/static/img/supersonic_ideas.png" height="75%" width="75%" /&gt; 
&lt;p&gt;SuperSonic provides a &lt;strong&gt;Chat BI interface&lt;/strong&gt; that empowers users to query data using natural language and visualize the results with suitable charts. To enable such experience, the only thing necessary is to build logical semantic models (definition of metric/dimension/tag, along with their meaning and relationships) through a &lt;strong&gt;Headless BI interface&lt;/strong&gt;. Meanwhile, SuperSonic is designed to be extensible and composable, allowing custom implementations to be added and configured with Java SPI.&lt;/p&gt; 
&lt;img src="https://github.com/supersonicbi/supersonic-website/raw/main/static/img/supersonic_demo.gif" height="100%" width="100%" /&gt; 
&lt;h2&gt;Motivation&lt;/h2&gt; 
&lt;p&gt;The emergence of Large Language Model (LLM) like ChatGPT is reshaping the way information is retrieved, leading to a new paradigm in the field of data analytics known as Chat BI. To implement Chat BI, both academia and industry are primarily focused on harnessing the power of LLMs to convert natural language into SQL, commonly referred to as Text2SQL or NL2SQL. While some approaches show promising results, their &lt;strong&gt;reliability&lt;/strong&gt; falls short for large-scale real-world applications.&lt;/p&gt; 
&lt;p&gt;Meanwhile, another emerging paradigm called Headless BI, which focuses on constructing unified semantic data models, has garnered significant attention. Headless BI is implemented through a universal semantic layer that exposes consistent data semantics via an open API.&lt;/p&gt; 
&lt;p&gt;From our perspective, the integration of Chat BI and Headless BI has the potential to enhance the Text2SQL generation in two dimensions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Incorporate data semantics (such as business terms, column values, etc.) into the prompt, enabling LLM to better understand the semantics and &lt;strong&gt;reduce hallucination&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Offload the generation of advanced SQL syntax (such as join, formula, etc.) from LLM to the semantic layer to &lt;strong&gt;reduce complexity&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;With these ideas in mind, we develop SuperSonic as a practical reference implementation and use it to power our real-world products. Additionally, to facilitate further development we decide to open source SuperSonic as an extensible framework.&lt;/p&gt; 
&lt;h2&gt;Out-of-the-box Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Built-in Chat BI interface for &lt;em&gt;business users&lt;/em&gt; to enter natural language queries&lt;/li&gt; 
 &lt;li&gt;Built-in Headless BI interface for &lt;em&gt;analytics engineers&lt;/em&gt; to build semantic data models&lt;/li&gt; 
 &lt;li&gt;Built-in rule-based semantic parser to improve efficiency in certain scenarios (e.g. demonstration, integration testing)&lt;/li&gt; 
 &lt;li&gt;Built-in support for input auto-completion, multi-turn conversation as well as post-query recommendation&lt;/li&gt; 
 &lt;li&gt;Built-in support for three-level data access control: dataset-level, column-level and row-level&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Extensible Components&lt;/h2&gt; 
&lt;p&gt;The high-level architecture and main process flow is as follows:&lt;/p&gt; 
&lt;img src="https://github.com/supersonicbi/supersonic-website/raw/main/static/img/supersonic_components.png" height="65%" width="65%" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Knowledge Base:&lt;/strong&gt; extracts schema information periodically from the semantic models and build dictionary and index to facilitate schema mapping.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Schema Mapper:&lt;/strong&gt; identifies references to schema elements(metrics/dimensions/entities/values) in user queries. It matches the query text against the knowledge base.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Semantic Parser:&lt;/strong&gt; understands user queries and generates semantic query statement. It consists of a combination of rule-based and LLM-based parsers, each of which deals with specific scenarios.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Semantic Corrector:&lt;/strong&gt; checks validity of semantic query statement and performs correction if necessary. It consists of a combination of rule-based and LLM-based correctors, each of which deals with specific scenarios.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Semantic Translator:&lt;/strong&gt; converts semantic query statement into SQL statement that can be executed against physical data models.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Chat Plugin:&lt;/strong&gt; extends functionality with third-party tools. Given a list of configured plugins with descriptions and sample questions, an LLM will be leveraged to select the most suitable one.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Chat Memory:&lt;/strong&gt; encapsulates a collection of historical query trajectories that can be recalled to facilitate few-shot prompting.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Demo&lt;/h2&gt; 
&lt;h3&gt;Online playground&lt;/h3&gt; 
&lt;p&gt;Visit &lt;a href="http://117.72.46.148:9080"&gt;http://117.72.46.148:9080&lt;/a&gt; to register and experience as a new user. Please do not modify system configurations. We will restart to reset configurations regularly every weekend.&lt;/p&gt; 
&lt;h3&gt;Docker Deployment&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install Docker and docker-compose.&lt;/li&gt; 
 &lt;li&gt;Download the docker-compose.yml file; Execute: wget &lt;a href="https://raw.githubusercontent.com/tencentmusic/supersonic/master/docker/docker-compose.yml"&gt;https://raw.githubusercontent.com/tencentmusic/supersonic/master/docker/docker-compose.yml&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Execute "docker-compose up -d".&lt;/li&gt; 
 &lt;li&gt;Open a browser and visit &lt;a href="http://localhost:9080"&gt;http://localhost:9080&lt;/a&gt; to start exploring.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Local build&lt;/h3&gt; 
&lt;p&gt;SuperSonic comes with sample semantic models as well as chat conversations that can be used as a starting point. Please follow the steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download the latest prebuilt binary from the &lt;a href="https://github.com/tencentmusic/supersonic/releases"&gt;release page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Run script "assembly/bin/supersonic-daemon.sh start" to start a standalone Java service&lt;/li&gt; 
 &lt;li&gt;Visit &lt;a href="http://localhost:9080"&gt;http://localhost:9080&lt;/a&gt; in the browser to start exploration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build and Development&lt;/h2&gt; 
&lt;p&gt;Please refer to project &lt;a href="https://supersonicbi.github.io/docs/%E7%B3%BB%E7%BB%9F%E9%83%A8%E7%BD%B2/%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E9%83%A8%E7%BD%B2/"&gt;Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;WeChat Contact&lt;/h2&gt; 
&lt;p&gt;Please follow SuperSonic wechat official account:&lt;/p&gt; 
&lt;img src="https://github.com/supersonicbi/supersonic-website/raw/main/static/img/supersonic_wechat_oa.png" height="50%" width="50%" /&gt;</description>
    </item>
    
    <item>
      <title>google/guava</title>
      <link>https://github.com/google/guava</link>
      <description>&lt;p&gt;Google core libraries for Java&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Guava: Google Core Libraries for Java&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/google/guava/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/google/guava" alt="GitHub Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/google/guava/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/google/guava/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://www.bestpractices.dev/projects/7197"&gt;&lt;img src="https://www.bestpractices.dev/projects/7197/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Guava is a set of core Java libraries from Google that includes new collection types (such as multimap and multiset), immutable collections, a graph library, and utilities for concurrency, I/O, hashing, primitives, strings, and more! It is widely used on most Java projects within Google, and widely used by many other companies as well.&lt;/p&gt; 
&lt;p&gt;Guava comes in two flavors:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The JRE flavor requires JDK 1.8 or higher.&lt;/li&gt; 
 &lt;li&gt;If you need support for Android, use &lt;a href="https://github.com/google/guava/wiki/Android"&gt;the Android flavor&lt;/a&gt;. You can find the Android Guava source in the &lt;a href="https://github.com/google/guava/tree/master/android"&gt;&lt;code&gt;android&lt;/code&gt; directory&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Adding Guava to your build&lt;/h2&gt; 
&lt;p&gt;Guava's Maven group ID is &lt;code&gt;com.google.guava&lt;/code&gt;, and its artifact ID is &lt;code&gt;guava&lt;/code&gt;. Guava provides two different "flavors": one for use on a (Java 8+) JRE and one for use on Android or by any library that wants to be compatible with Android. These flavors are specified in the Maven version field as either &lt;code&gt;33.4.8-jre&lt;/code&gt; or &lt;code&gt;33.4.8-android&lt;/code&gt;. For more about depending on Guava, see &lt;a href="https://github.com/google/guava/wiki/UseGuavaInYourBuild"&gt;using Guava in your build&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To add a dependency on Guava using Maven, use the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;com.google.guava&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;guava&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;33.4.8-jre&amp;lt;/version&amp;gt;
  &amp;lt;!-- or, for Android: --&amp;gt;
  &amp;lt;version&amp;gt;33.4.8-android&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To add a dependency using Gradle:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-gradle"&gt;dependencies {
  // Pick one:

  // 1. Use Guava in your implementation only:
  implementation("com.google.guava:guava:33.4.8-jre")

  // 2. Use Guava types in your public API:
  api("com.google.guava:guava:33.4.8-jre")

  // 3. Android - Use Guava in your implementation only:
  implementation("com.google.guava:guava:33.4.8-android")

  // 4. Android - Use Guava types in your public API:
  api("com.google.guava:guava:33.4.8-android")
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on when to use &lt;code&gt;api&lt;/code&gt; and when to use &lt;code&gt;implementation&lt;/code&gt;, consult the &lt;a href="https://docs.gradle.org/current/userguide/java_library_plugin.html#sec:java_library_separation"&gt;Gradle documentation on API and implementation separation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Snapshots and Documentation&lt;/h2&gt; 
&lt;p&gt;Snapshots of Guava built from the &lt;code&gt;master&lt;/code&gt; branch are available through Maven using version &lt;code&gt;999.0.0-HEAD-jre-SNAPSHOT&lt;/code&gt;, or &lt;code&gt;999.0.0-HEAD-android-SNAPSHOT&lt;/code&gt; for the Android flavor.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://guava.dev/releases/snapshot-jre/api/docs/"&gt;Snapshot API Javadoc&lt;/a&gt; as well as &lt;a href="https://guava.dev/releases/snapshot-jre/api/diffs/"&gt;Snapshot API Diffs&lt;/a&gt; are also available.&lt;/p&gt; 
&lt;p&gt;Another easy way to get to the Javadoc is to open &lt;a href="https://guava.dev/api"&gt;guava.dev/api&lt;/a&gt;. You can also jump right to a specific class by appending the class name to guava.dev. For example, &lt;a href="https://guava.dev/ImmutableList"&gt;guava.dev/ImmutableList&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Learn about Guava&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Our users' guide, &lt;a href="https://github.com/google/guava/wiki/Home"&gt;Guava Explained&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tfnico.com/presentations/google-guava"&gt;A nice collection&lt;/a&gt; of other helpful links&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/guava"&gt;GitHub project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/guava/issues/new"&gt;Issue tracker: Report a defect or feature request&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/ask?tags=guava+java"&gt;StackOverflow: Ask "how-to" and "why-didn't-it-work" questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://groups.google.com/group/guava-announce"&gt;guava-announce: Announcements of releases and upcoming significant changes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://groups.google.com/group/guava-discuss"&gt;guava-discuss: For open-ended questions and discussion&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;IMPORTANT WARNINGS&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;APIs marked with the &lt;code&gt;@Beta&lt;/code&gt; annotation at the class or method level are subject to change. They can be modified in any way, or even removed, at any time. If your code is a library itself (i.e., it is used on the CLASSPATH of users outside your own control), you should not use beta APIs unless you &lt;a href="https://github.com/google/guava/wiki/UseGuavaInYourBuild#what-if-i-want-to-use-beta-apis-from-a-library-that-people-use-as-a-dependency"&gt;repackage&lt;/a&gt; them. &lt;strong&gt;If your code is a library, we strongly recommend using the &lt;a href="https://github.com/google/guava-beta-checker"&gt;Guava Beta Checker&lt;/a&gt; to ensure that you do not use any &lt;code&gt;@Beta&lt;/code&gt; APIs!&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;APIs without &lt;code&gt;@Beta&lt;/code&gt; will remain binary-compatible for the indefinite future. (Previously, we sometimes removed such APIs after a deprecation period. The last release to remove non-&lt;code&gt;@Beta&lt;/code&gt; APIs was Guava 21.0.) Even &lt;code&gt;@Deprecated&lt;/code&gt; APIs will remain (again, unless they are &lt;code&gt;@Beta&lt;/code&gt;). We have no plans to start removing things again, but officially, we're leaving our options open in case of surprises (like, say, a serious security problem).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Guava has one dependency that is needed for linkage at runtime: &lt;code&gt;com.google.guava:failureaccess:1.0.3&lt;/code&gt;. It also has &lt;a href="https://github.com/google/guava/wiki/UseGuavaInYourBuild#what-about-guavas-own-dependencies"&gt;some annotation-only dependencies&lt;/a&gt;, which we discuss in more detail at that link.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Serialized forms of ALL objects are subject to change unless noted otherwise. Do not persist these and assume they can be read by a future version of the library.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Our classes are not designed to protect against a malicious caller. You should not use them for communication between trusted and untrusted code.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For the mainline flavor, we test the libraries using OpenJDK 8, 11, and 17 on Linux, with some additional testing on newer JDKs and on Windows. Some features, especially in &lt;code&gt;com.google.common.io&lt;/code&gt;, may not work correctly in non-Linux environments. For the Android flavor, our unit tests also run on API level 23 (Marshmallow).&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- References --&gt;</description>
    </item>
    
    <item>
      <title>spring-projects/spring-boot</title>
      <link>https://github.com/spring-projects/spring-boot</link>
      <description>&lt;p&gt;Spring Boot helps you to create Spring-powered, production-grade applications and services with absolute minimum fuss.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Spring Boot &lt;span class="image"&gt;&lt;a class="image" href="https://github.com/spring-projects/spring-boot/actions/workflows/build-and-deploy-snapshot.yml?query=branch%3Amain"&gt;&lt;img src="https://github.com/spring-projects/spring-boot/actions/workflows/build-and-deploy-snapshot.yml/badge.svg?branch=main" alt="Build Status" /&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="image"&gt;&lt;a class="image" href="https://ge.spring.io/scans?&amp;amp;search.rootProjectNames=Spring%20Boot%20Build&amp;amp;search.rootProjectNames=spring-boot-build"&gt;&lt;img src="https://img.shields.io/badge/Revved%20up%20by-Develocity-06A0CE?logo=Gradle&amp;amp;labelColor=02303A" alt="Revved up by Develocity" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;div id="preamble"&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;Spring Boot helps you to create Spring-powered, production-grade applications and services with absolute minimum fuss. It takes an opinionated view of the Spring platform so that new and existing users can quickly get to the bits they need.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;You can use Spring Boot to create stand-alone Java applications that can be started using &lt;code&gt;java -jar&lt;/code&gt; or more traditional WAR deployments. We also provide a command-line tool that runs Spring scripts.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;Our primary goals are:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="ulist"&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;Provide a radically faster and widely accessible getting started experience for all Spring development.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Be opinionated, but get out of the way quickly as requirements start to diverge from the defaults.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Provide a range of non-functional features common to large classes of projects (for example, embedded servers, security, metrics, health checks, externalized configuration).&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Absolutely no code generation and no requirement for XML configuration.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_installation_and_getting_started"&gt;Installation and Getting Started&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;The &lt;a href="https://docs.spring.io/spring-boot"&gt;reference documentation&lt;/a&gt; includes detailed &lt;a href="https://docs.spring.io/spring-boot/installing.html"&gt;installation instructions&lt;/a&gt; as well as a comprehensive &lt;a href="https://docs.spring.io/spring-boot/tutorial/first-application/index.html"&gt;&lt;code&gt;getting started&lt;/code&gt;&lt;/a&gt; guide.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;Here is a quick teaser of a complete Spring Boot application in Java:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="listingblock"&gt; 
   &lt;div class="content"&gt; 
    &lt;pre class="highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;import org.springframework.boot.*;
import org.springframework.boot.autoconfigure.*;
import org.springframework.web.bind.annotation.*;

@RestController
@SpringBootApplication
public class Example {

	@RequestMapping("/")
	String home() {
		return "Hello World!";
	}

	public static void main(String[] args) {
		SpringApplication.run(Example.class, args);
	}

}&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_getting_help"&gt;Getting Help&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;Are you having trouble with Spring Boot? We want to help!&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="ulist"&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;Check the &lt;a href="https://docs.spring.io/spring-boot/"&gt;reference documentation&lt;/a&gt;, especially the &lt;a href="https://docs.spring.io/spring-boot/how-to/index.html"&gt;How-to‚Äôs&lt;/a&gt;‚Äâ‚Äî‚Äâthey provide solutions to the most common questions.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Learn the Spring basics‚Äâ‚Äî‚ÄâSpring Boot builds on many other Spring projects; check the &lt;a href="https://spring.io"&gt;spring.io&lt;/a&gt; website for a wealth of reference documentation. If you are new to Spring, try one of the &lt;a href="https://spring.io/guides"&gt;guides&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;If you are upgrading, read the &lt;a href="https://github.com/spring-projects/spring-boot/wiki"&gt;release notes&lt;/a&gt; for upgrade instructions and "new and noteworthy" features.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Ask a question‚Äâ‚Äî‚Äâwe monitor &lt;a href="https://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; for questions tagged with &lt;a href="https://stackoverflow.com/tags/spring-boot"&gt;&lt;code&gt;spring-boot&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Report bugs with Spring Boot at &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;github.com/spring-projects/spring-boot/issues&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_contributing"&gt;Contributing&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;We welcome contributions of all kinds! Please read our &lt;a href="https://raw.githubusercontent.com/spring-projects/spring-boot/main/CONTRIBUTING.adoc"&gt;contribution guidelines&lt;/a&gt; before submitting a pull request.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_reporting_issues"&gt;Reporting Issues&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;Spring Boot uses GitHub‚Äôs integrated issue tracking system to record bugs and feature requests. If you want to raise an issue, please follow the recommendations below:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="ulist"&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;Before you log a bug, please search the &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;issue tracker&lt;/a&gt; to see if someone has already reported the problem.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;If the issue doesn‚Äôt already exist, &lt;a href="https://github.com/spring-projects/spring-boot/issues/new"&gt;create a new issue&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Please provide as much information as possible with the issue report. We like to know the Spring Boot version, operating system, and JVM version you‚Äôre using.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;If you need to paste code or include a stack trace, use Markdown. ``` escapes before and after your text.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;If possible, try to create a test case or project that replicates the problem and attach it to the issue.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_building_from_source"&gt;Building from Source&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;You don‚Äôt need to build from source to use Spring Boot (binaries in &lt;a href="https://repo.spring.io"&gt;repo.spring.io&lt;/a&gt;), but if you want to try out the latest and greatest, Spring Boot can be built and published to your local Maven cache using the &lt;a href="https://docs.gradle.org/current/userguide/gradle_wrapper.html"&gt;Gradle wrapper&lt;/a&gt;. You also need JDK 24.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="listingblock"&gt; 
   &lt;div class="content"&gt; 
    &lt;pre class="highlight"&gt;&lt;code class="language-shell" data-lang="shell"&gt;$ ./gradlew publishToMavenLocal&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;This will build all of the jars and documentation and publish them to your local Maven cache. It won‚Äôt run any of the tests. If you want to build everything, use the &lt;code&gt;build&lt;/code&gt; task:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="listingblock"&gt; 
   &lt;div class="content"&gt; 
    &lt;pre class="highlight"&gt;&lt;code class="language-shell" data-lang="shell"&gt;$ ./gradlew build&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_modules"&gt;Modules&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;There are several modules in Spring Boot. Here is a quick overview:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot"&gt;spring-boot&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;The main library providing features that support the other parts of Spring Boot. These include:&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class="ulist"&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;The &lt;code&gt;SpringApplication&lt;/code&gt; class, providing static convenience methods that can be used to write a stand-alone Spring Application. Its sole job is to create and refresh an appropriate Spring &lt;code&gt;ApplicationContext&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;Embedded web applications with a choice of container (Tomcat, Jetty).&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;First-class externalized configuration support.&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;Convenience &lt;code&gt;ApplicationContext&lt;/code&gt; initializers, including support for sensible logging defaults.&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot_autoconfigure"&gt;spring-boot-autoconfigure&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;Spring Boot can configure large parts of typical applications based on the content of their classpath. A single &lt;code&gt;@EnableAutoConfiguration&lt;/code&gt; annotation triggers auto-configuration of the Spring context.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;Auto-configuration attempts to deduce which beans a user might need. For example, if &lt;code&gt;HSQLDB&lt;/code&gt; is on the classpath, and the user has not configured any database connections, then they probably want an in-memory database to be defined. Auto-configuration will always back away as the user starts to define their own beans.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot_starters"&gt;spring-boot-starters&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;Starters are a set of convenient dependency descriptors that you can include in your application. You get a one-stop shop for all the Spring and related technology you need without having to hunt through sample code and copy-paste loads of dependency descriptors. For example, if you want to get started using Spring and JPA for database access, include the &lt;code&gt;spring-boot-starter-data-jpa&lt;/code&gt; dependency in your project, and you are good to go.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot_actuator"&gt;spring-boot-actuator&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;Actuator endpoints let you monitor and interact with your application. Spring Boot Actuator provides the infrastructure required for actuator endpoints. It contains annotation support for actuator endpoints. This module provides many endpoints, including the &lt;code&gt;HealthEndpoint&lt;/code&gt;, &lt;code&gt;EnvironmentEndpoint&lt;/code&gt;, &lt;code&gt;BeansEndpoint&lt;/code&gt;, and many more.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot_actuator_autoconfigure"&gt;spring-boot-actuator-autoconfigure&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;This provides auto-configuration for actuator endpoints based on the content of the classpath and a set of properties. For instance, if Micrometer is on the classpath, it will auto-configure the &lt;code&gt;MetricsEndpoint&lt;/code&gt;. It contains configuration to expose endpoints over HTTP or JMX. Just like Spring Boot AutoConfigure, this will back away as the user starts to define their own beans.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot_test"&gt;spring-boot-test&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;This module contains core items and annotations that can be helpful when testing your application.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot_test_autoconfigure"&gt;spring-boot-test-autoconfigure&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;Like other Spring Boot auto-configuration modules, spring-boot-test-autoconfigure provides auto-configuration for tests based on the classpath. It includes many annotations that can automatically configure a slice of your application that needs to be tested.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot_loader"&gt;spring-boot-loader&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;Spring Boot Loader provides the secret sauce that allows you to build a single jar file that can be launched using &lt;code&gt;java -jar&lt;/code&gt;. Generally, you will not need to use &lt;code&gt;spring-boot-loader&lt;/code&gt; directly but work with the &lt;a href="https://raw.githubusercontent.com/spring-projects/spring-boot/main/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin"&gt;Gradle&lt;/a&gt; or &lt;a href="https://raw.githubusercontent.com/spring-projects/spring-boot/main/spring-boot-project/spring-boot-tools/spring-boot-maven-plugin"&gt;Maven&lt;/a&gt; plugin instead.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot_devtools"&gt;spring-boot-devtools&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;The spring-boot-devtools module provides additional development-time features, such as automatic restarts, for a smoother application development experience. Developer tools are automatically disabled when running a fully packaged application.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_guides"&gt;Guides&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;The &lt;a href="https://spring.io/"&gt;spring.io&lt;/a&gt; site contains several guides that show how to use Spring Boot step-by-step:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="ulist"&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;&lt;a href="https://spring.io/guides/gs/spring-boot/"&gt;Building an Application with Spring Boot&lt;/a&gt; is an introductory guide that shows you how to create an application, run it, and add some management services.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;&lt;a href="https://spring.io/guides/gs/actuator-service/"&gt;Building a RESTful Web Service with Spring Boot Actuator&lt;/a&gt; is a guide to creating a REST web service and also shows how the server can be configured.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_license"&gt;License&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;Spring Boot is Open Source software released under the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0.html"&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>netty/netty</title>
      <link>https://github.com/netty/netty</link>
      <description>&lt;p&gt;Netty project - an event-driven asynchronous network application framework&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://github.com/netty/netty/workflows/Build%20project/badge.svg?sanitize=true" alt="Build project" /&gt;&lt;/p&gt; 
&lt;h1&gt;Netty Project&lt;/h1&gt; 
&lt;p&gt;Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp;amp; clients.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://netty.io/"&gt;Web Site&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://netty.io/downloads.html"&gt;Downloads&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://netty.io/wiki/"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/netty_project"&gt;@netty_project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/q4aQ2XjaCa"&gt;Official Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/netty/netty/4.2/testsuite-jpms/README.md"&gt;Modular Netty guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to build&lt;/h2&gt; 
&lt;p&gt;For the detailed information about building and developing Netty, please visit &lt;a href="https://netty.io/wiki/developer-guide.html"&gt;the developer guide&lt;/a&gt;. This page only gives very basic information.&lt;/p&gt; 
&lt;p&gt;You require the following to build Netty:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Latest stable &lt;a href="https://adoptium.net/"&gt;OpenJDK 8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Latest stable &lt;a href="https://maven.apache.org/"&gt;Apache Maven&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;If you are on Linux or MacOS, you need &lt;a href="https://netty.io/wiki/native-transports.html"&gt;additional development packages&lt;/a&gt; installed on your system, because you'll build the native transport.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that this is build-time requirement. JDK 5 (for 3.x) or 6 (for 4.0+ / 4.1+) is enough to run your Netty-based application.&lt;/p&gt; 
&lt;h2&gt;Branches to look&lt;/h2&gt; 
&lt;p&gt;Development of all versions takes place in each branch whose name is identical to &lt;code&gt;&amp;lt;majorVersion&amp;gt;.&amp;lt;minorVersion&amp;gt;&lt;/code&gt;. For example, the development of 3.9 and 4.1 resides in &lt;a href="https://github.com/netty/netty/tree/3.9"&gt;the branch '3.9'&lt;/a&gt; and &lt;a href="https://github.com/netty/netty/tree/4.1"&gt;the branch '4.1'&lt;/a&gt; respectively.&lt;/p&gt; 
&lt;h2&gt;Usage with JDK 9+&lt;/h2&gt; 
&lt;p&gt;You can read the &lt;a href="https://raw.githubusercontent.com/netty/netty/4.2/testsuite-jpms/README.md"&gt;Modular Netty guide&lt;/a&gt; to learn more about using Netty with the Java Platform Module System, the guide contains a user section and a developer section for Netty contributors.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>termux/termux-app</title>
      <link>https://github.com/termux/termux-app</link>
      <description>&lt;p&gt;Termux - a terminal emulator application for Android OS extendible by variety of packages.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Termux application&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/termux/termux-app/actions"&gt;&lt;img src="https://github.com/termux/termux-app/workflows/Build/badge.svg?sanitize=true" alt="Build status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/termux/termux-app/actions"&gt;&lt;img src="https://github.com/termux/termux-app/workflows/Unit%20tests/badge.svg?sanitize=true" alt="Testing status" /&gt;&lt;/a&gt; &lt;a href="https://gitter.im/termux/termux"&gt;&lt;img src="https://badges.gitter.im/termux/termux.svg?sanitize=true" alt="Join the chat at https://gitter.im/termux/termux" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/HXpF69X"&gt;&lt;img src="https://img.shields.io/discord/641256914684084234.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=5865F2" alt="Join the Termux discord server" /&gt;&lt;/a&gt; &lt;a href="https://jitpack.io/#termux/termux-app"&gt;&lt;img src="https://jitpack.io/v/termux/termux-app.svg?sanitize=true" alt="Termux library releases at Jitpack" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://termux.com"&gt;Termux&lt;/a&gt; is an Android terminal application and Linux environment.&lt;/p&gt; 
&lt;p&gt;Note that this repository is for the app itself (the user interface and the terminal emulation). For the packages installable inside the app, see &lt;a href="https://github.com/termux/termux-packages"&gt;termux/termux-packages&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Quick how-to about Termux package management is available at &lt;a href="https://github.com/termux/termux-packages/wiki/Package-Management"&gt;Package Management&lt;/a&gt;. It also has info on how to fix &lt;strong&gt;&lt;code&gt;repository is under maintenance or down&lt;/code&gt;&lt;/strong&gt; errors when running &lt;code&gt;apt&lt;/code&gt; or &lt;code&gt;pkg&lt;/code&gt; commands.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;We are looking for Termux Android application maintainers.&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;NOTICE: Termux may be unstable on Android 12+.&lt;/strong&gt; Android OS will kill any (phantom) processes greater than 32 (limit is for all apps combined) and also kill any processes using excessive CPU. You may get &lt;code&gt;[Process completed (signal 9) - press Enter]&lt;/code&gt; message in the terminal without actually exiting the shell process yourself. Check the related issue &lt;a href="https://github.com/termux/termux-app/issues/2366"&gt;#2366&lt;/a&gt;, &lt;a href="https://issuetracker.google.com/u/1/issues/205156966"&gt;issue tracker&lt;/a&gt;, &lt;a href="https://github.com/agnostic-apollo/Android-Docs/raw/master/en/docs/apps/processes/phantom-cached-and-empty-processes.md"&gt;phantom cached and empty processes docs&lt;/a&gt; and &lt;a href="https://github.com/termux/termux-app/issues/2366#issuecomment-1237468220"&gt;this TLDR comment&lt;/a&gt; on how to disable trimming of phantom and excessive cpu usage processes. A proper docs page will be added later. An option to disable the killing should be available in Android 12L or 13, so upgrade at your own risk if you are on Android 11, specially if you are not rooted.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#termux-app-and-plugins"&gt;Termux App and Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#uninstallation"&gt;Uninstallation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#important-links"&gt;Important Links&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#debugging"&gt;Debugging&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#for-maintainers-and-contributors"&gt;For Maintainers and Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#forking"&gt;Forking&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;Termux App and Plugins&lt;/h2&gt; 
&lt;p&gt;The core &lt;a href="https://github.com/termux/termux-app"&gt;Termux&lt;/a&gt; app comes with the following optional plugin apps.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-api"&gt;Termux:API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-boot"&gt;Termux:Boot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-float"&gt;Termux:Float&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-styling"&gt;Termux:Styling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-tasker"&gt;Termux:Tasker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-widget"&gt;Termux:Widget&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Latest version is &lt;code&gt;v0.118.3&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTICE: It is highly recommended that you update to &lt;code&gt;v0.118.0&lt;/code&gt; or higher ASAP for various bug fixes, including a critical world-readable vulnerability reported &lt;a href="https://termux.github.io/general/2022/02/15/termux-apps-vulnerability-disclosures.html"&gt;here&lt;/a&gt;. See &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#google-play-store-experimental-branch"&gt;below&lt;/a&gt; for information regarding Termux on Google Play.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Termux can be obtained through various sources listed below for &lt;strong&gt;only&lt;/strong&gt; Android &lt;code&gt;&amp;gt;= 7&lt;/code&gt; with full support for apps and packages.&lt;/p&gt; 
&lt;p&gt;Support for both app and packages was dropped for Android &lt;code&gt;5&lt;/code&gt; and &lt;code&gt;6&lt;/code&gt; on &lt;a href="https://www.reddit.com/r/termux/comments/dnzdbs/end_of_android56_support_on_20200101/"&gt;2020-01-01&lt;/a&gt; at &lt;code&gt;v0.83&lt;/code&gt;, however it was re-added just for the app &lt;em&gt;without any support for package updates&lt;/em&gt; on &lt;a href="https://github.com/termux/termux-app/pull/2740"&gt;2022-05-24&lt;/a&gt; via the &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#github"&gt;GitHub&lt;/a&gt; sources. Check &lt;a href="https://github.com/termux/termux-app/wiki/Termux-on-android-5-or-6"&gt;here&lt;/a&gt; for the details.&lt;/p&gt; 
&lt;p&gt;The APK files of different sources are signed with different signature keys. The &lt;code&gt;Termux&lt;/code&gt; app and all its plugins use the same &lt;a href="https://developer.android.com/guide/topics/manifest/manifest-element"&gt;&lt;code&gt;sharedUserId&lt;/code&gt;&lt;/a&gt; &lt;code&gt;com.termux&lt;/code&gt; and so all their APKs installed on a device must have been signed with the same signature key to work together and so they must all be installed from the same source. Do not attempt to mix them together, i.e do not try to install an app or plugin from &lt;code&gt;F-Droid&lt;/code&gt; and another one from a different source like &lt;code&gt;GitHub&lt;/code&gt;. Android Package Manager will also normally not allow installation of APKs with different signatures and you will get errors on installation like &lt;code&gt;App not installed&lt;/code&gt;, &lt;code&gt;Failed to install due to an unknown error&lt;/code&gt;, &lt;code&gt;INSTALL_FAILED_UPDATE_INCOMPATIBLE&lt;/code&gt;, &lt;code&gt;INSTALL_FAILED_SHARED_USER_INCOMPATIBLE&lt;/code&gt;, &lt;code&gt;signatures do not match previously installed version&lt;/code&gt;, etc. This restriction can be bypassed with root or with custom roms.&lt;/p&gt; 
&lt;p&gt;If you wish to install from a different source, then you must &lt;strong&gt;uninstall any and all existing Termux or its plugin app APKs&lt;/strong&gt; from your device first, then install all new APKs from the same new source. Check &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#uninstallation"&gt;Uninstallation&lt;/a&gt; section for details. You may also want to consider &lt;a href="https://wiki.termux.com/wiki/Backing_up_Termux"&gt;Backing up Termux&lt;/a&gt; before the uninstallation so that you can restore it after re-installing from Termux different source.&lt;/p&gt; 
&lt;p&gt;In the following paragraphs, &lt;em&gt;"bootstrap"&lt;/em&gt; refers to the minimal packages that are shipped with the &lt;code&gt;termux-app&lt;/code&gt; itself to start a working shell environment. Its zips are built and released &lt;a href="https://github.com/termux/termux-packages/releases"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;F-Droid&lt;/h3&gt; 
&lt;p&gt;Termux application can be obtained from &lt;code&gt;F-Droid&lt;/code&gt; from &lt;a href="https://f-droid.org/en/packages/com.termux/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You &lt;strong&gt;do not&lt;/strong&gt; need to download the &lt;code&gt;F-Droid&lt;/code&gt; app (via the &lt;code&gt;Download F-Droid&lt;/code&gt; link) to install Termux. You can download the Termux APK directly from the site by clicking the &lt;code&gt;Download APK&lt;/code&gt; link at the bottom of each version section.&lt;/p&gt; 
&lt;p&gt;It usually takes a few days (or even a week or more) for updates to be available on &lt;code&gt;F-Droid&lt;/code&gt; once an update has been released on &lt;code&gt;GitHub&lt;/code&gt;. The &lt;code&gt;F-Droid&lt;/code&gt; releases are built and published by &lt;code&gt;F-Droid&lt;/code&gt; once they &lt;a href="https://gitlab.com/fdroid/fdroiddata/-/blob/master/metadata/com.termux.yml"&gt;detect&lt;/a&gt; a new &lt;code&gt;GitHub&lt;/code&gt; release. The Termux maintainers &lt;strong&gt;do not&lt;/strong&gt; have any control over the building and publishing of the Termux apps on &lt;code&gt;F-Droid&lt;/code&gt;. Moreover, the Termux maintainers also do not have access to the APK signing keys of &lt;code&gt;F-Droid&lt;/code&gt; releases, so we cannot release an APK ourselves on &lt;code&gt;GitHub&lt;/code&gt; that would be compatible with &lt;code&gt;F-Droid&lt;/code&gt; releases.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;F-Droid&lt;/code&gt; app often may not notify you of updates and you will manually have to do a pull down swipe action in the &lt;code&gt;Updates&lt;/code&gt; tab of the app for it to check updates. Make sure battery optimizations are disabled for the app, check &lt;a href="https://dontkillmyapp.com/"&gt;https://dontkillmyapp.com/&lt;/a&gt; for details on how to do that.&lt;/p&gt; 
&lt;p&gt;Only a universal APK is released, which will work on all supported architectures. The APK and bootstrap installation size will be &lt;code&gt;~180MB&lt;/code&gt;. &lt;code&gt;F-Droid&lt;/code&gt; does &lt;a href="https://github.com/termux/termux-app/pull/1904"&gt;not support&lt;/a&gt; architecture specific APKs.&lt;/p&gt; 
&lt;h3&gt;GitHub&lt;/h3&gt; 
&lt;p&gt;Termux application can be obtained on &lt;code&gt;GitHub&lt;/code&gt; either from &lt;a href="https://github.com/termux/termux-app/releases"&gt;&lt;code&gt;GitHub Releases&lt;/code&gt;&lt;/a&gt; for version &lt;code&gt;&amp;gt;= 0.118.0&lt;/code&gt; or from &lt;a href="https://github.com/termux/termux-app/actions/workflows/debug_build.yml?query=branch%3Amaster+event%3Apush"&gt;&lt;code&gt;GitHub Build Action&lt;/code&gt;&lt;/a&gt; workflows. &lt;strong&gt;For android &lt;code&gt;&amp;gt;= 7&lt;/code&gt;, only install &lt;code&gt;apt-android-7&lt;/code&gt; variants. For android &lt;code&gt;5&lt;/code&gt; and &lt;code&gt;6&lt;/code&gt;, only install &lt;code&gt;apt-android-5&lt;/code&gt; variants.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The APKs for &lt;code&gt;GitHub Releases&lt;/code&gt; will be listed under &lt;code&gt;Assets&lt;/code&gt; drop-down of a release. These are automatically attached when a new version is released.&lt;/p&gt; 
&lt;p&gt;The APKs for &lt;code&gt;GitHub Build&lt;/code&gt; action workflows will be listed under &lt;code&gt;Artifacts&lt;/code&gt; section of a workflow run. These are created for each commit/push done to the repository and can be used by users who don't want to wait for releases and want to try out the latest features immediately or want to test their pull requests. Note that for action workflows, you need to be &lt;a href="https://github.com/login"&gt;&lt;strong&gt;logged into a &lt;code&gt;GitHub&lt;/code&gt; account&lt;/strong&gt;&lt;/a&gt; for the &lt;code&gt;Artifacts&lt;/code&gt; links to be enabled/clickable. If you are using the &lt;a href="https://github.com/mobile"&gt;&lt;code&gt;GitHub&lt;/code&gt; app&lt;/a&gt;, then make sure to open workflow link in a browser like Chrome or Firefox that has your GitHub account logged in since the in-app browser may not be logged in.&lt;/p&gt; 
&lt;p&gt;The APKs for both of these are &lt;a href="https://developer.android.com/studio/debug"&gt;&lt;code&gt;debuggable&lt;/code&gt;&lt;/a&gt; and are compatible with each other but they are not compatible with other sources.&lt;/p&gt; 
&lt;p&gt;Both universal and architecture specific APKs are released. The APK and bootstrap installation size will be &lt;code&gt;~180MB&lt;/code&gt; if using universal and &lt;code&gt;~120MB&lt;/code&gt; if using architecture specific. Check &lt;a href="https://github.com/termux/termux-app/issues/2153"&gt;here&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Security warning&lt;/strong&gt;: APK files on GitHub are signed with a test key that has been &lt;a href="https://github.com/termux/termux-app/raw/master/app/testkey_untrusted.jks"&gt;shared with community&lt;/a&gt;. This IS NOT an official developer key and everyone can use it to generate releases for own testing. Be very careful when using Termux GitHub builds obtained elsewhere except &lt;a href="https://github.com/termux/termux-app"&gt;https://github.com/termux/termux-app&lt;/a&gt;. Everyone is able to use it to forge a malicious Termux update installable over the GitHub build. Think twice about installing Termux builds distributed via Telegram or other social media. If your device get caught by malware, we will not be able to help you.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://github.com/termux/termux-app/raw/master/app/testkey_untrusted.jks"&gt;test key&lt;/a&gt; shall not be used to impersonate @termux and can't be used for this anyway. This key is not trusted by us and it is quite easy to detect its use in user generated content.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Keystore information&lt;/summary&gt; 
 &lt;pre&gt;&lt;code&gt;Alias name: alias
Creation date: Oct 4, 2019
Entry type: PrivateKeyEntry
Certificate chain length: 1
Certificate[1]:
Owner: CN=APK Signer, OU=Earth, O=Earth
Issuer: CN=APK Signer, OU=Earth, O=Earth
Serial number: 29be297b
Valid from: Wed Sep 04 02:03:24 EEST 2019 until: Tue Oct 26 02:03:24 EEST 2049
Certificate fingerprints:
         SHA1: 51:79:55:EA:BF:69:FC:05:7C:41:C7:D3:79:DB:BC:EF:20:AD:85:F2
         SHA256: B6:DA:01:48:0E:EF:D5:FB:F2:CD:37:71:B8:D1:02:1E:C7:91:30:4B:DD:6C:4B:F4:1D:3F:AA:BA:D4:8E:E5:E1
Signature algorithm name: SHA1withRSA (disabled)
Subject Public Key Algorithm: 2048-bit RSA key
Version: 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Google Play Store &lt;strong&gt;(Experimental branch)&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;There is currently a build of Termux available on Google Play for Android 11+ devices, with extensive adjustments in order to pass policy requirements there. This is under development and has missing functionality and bugs (see &lt;a href="https://github.com/termux-play-store/"&gt;here&lt;/a&gt; for status updates) compared to the stable F-Droid build, which is why most users who can should still use F-Droid or GitHub build as mentioned above.&lt;/p&gt; 
&lt;p&gt;Currently, Google Play will try to update installations away from F-Droid ones. Updating will still fail as &lt;a href="https://developer.android.com/guide/topics/manifest/manifest-element#uid"&gt;sharedUserId&lt;/a&gt; has been removed. A planned 0.118.1 F-Droid release will fix this by setting a higher version code than used for the PlayStore app. Meanwhile, to prevent Google Play from attempting to download and then fail to install the Google Play releases over existing installations, you can open the Termux apps pages on Google Play and then click on the 3 dots options button in the top right and then disable the Enable auto update toggle. However, the Termux apps updates will still show in the PlayStore app updates list.&lt;/p&gt; 
&lt;p&gt;If you want to help out with testing the Google Play build (or cannot install Termux from other sources), be aware that it's built from a separate repository (&lt;a href="https://github.com/termux-play-store/"&gt;https://github.com/termux-play-store/&lt;/a&gt;) - be sure to report issues &lt;a href="https://github.com/termux-play-store/termux-issues/issues/new/choose"&gt;there&lt;/a&gt;, as any issues encountered might very well be specific to that repository.&lt;/p&gt; 
&lt;h2&gt;Uninstallation&lt;/h2&gt; 
&lt;p&gt;Uninstallation may be required if a user doesn't want Termux installed in their device anymore or is switching to a different &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#installation"&gt;install source&lt;/a&gt;. You may also want to consider &lt;a href="https://wiki.termux.com/wiki/Backing_up_Termux"&gt;Backing up Termux&lt;/a&gt; before the uninstallation.&lt;/p&gt; 
&lt;p&gt;To uninstall Termux completely, you must uninstall &lt;strong&gt;any and all existing Termux or its plugin app APKs&lt;/strong&gt; listed in &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#termux-app-and-plugins"&gt;Termux App and Plugins&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Go to &lt;code&gt;Android Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Applications&lt;/code&gt; and then look for those apps. You can also use the search feature if it‚Äôs available on your device and search &lt;code&gt;termux&lt;/code&gt; in the applications list.&lt;/p&gt; 
&lt;p&gt;Even if you think you have not installed any of the plugins, it's strongly suggested to go through the application list in Android settings and double-check.&lt;/p&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;Important Links&lt;/h2&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;p&gt;All community links are available &lt;a href="https://wiki.termux.com/wiki/Community"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The main ones are the following.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://reddit.com/r/termux"&gt;Termux Reddit community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://matrix.to/#/#termux_termux:gitter.im"&gt;Termux User Matrix Channel&lt;/a&gt; (&lt;a href="https://gitter.im/termux/termux"&gt;Gitter&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://matrix.to/#/#termux_dev:gitter.im"&gt;Termux Dev Matrix Channel&lt;/a&gt; (&lt;a href="https://gitter.im/termux/dev"&gt;Gitter&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/termuxdevs"&gt;Termux X (Twitter)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="mailto:support@termux.dev"&gt;Termux Support Email&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Wikis&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/"&gt;Termux Wiki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-app/wiki"&gt;Termux App Wiki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-packages/wiki"&gt;Termux Packages Wiki&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Miscellaneous&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/FAQ"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-packages/wiki/Termux-file-system-layout"&gt;Termux File System Layout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Differences_from_Linux"&gt;Differences From Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Package_Management"&gt;Package Management&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Remote_Access"&gt;Remote Access&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Backing_up_Termux"&gt;Backing up Termux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Terminal_Settings"&gt;Terminal Settings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Touch_Keyboard"&gt;Touch Keyboard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Internal_and_external_storage"&gt;Android Storage and Sharing Data with Other Apps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Termux:API"&gt;Android APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-packages/issues/6348"&gt;Moved Termux Packages Hosting From Bintray to IPFS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-app/wiki/RUN_COMMAND-Intent"&gt;Running Commands in Termux From Other Apps via &lt;code&gt;RUN_COMMAND&lt;/code&gt; intent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-packages/wiki/Termux-and-Android-10"&gt;Termux and Android 10&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Terminal&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;/summary&gt; 
 &lt;h3&gt;Terminal resources&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://invisible-island.net/xterm/ctlseqs/ctlseqs.html"&gt;XTerm control sequences&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://vt100.net/"&gt;vt100.net&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://wiki.bash-hackers.org/scripting/terminalcodes"&gt;Terminal codes (ANSI and terminfo equivalents)&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Terminal emulators&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;VTE (libvte): Terminal emulator widget for GTK+, mainly used in gnome-terminal. &lt;a href="https://github.com/GNOME/vte"&gt;Source&lt;/a&gt;, &lt;a href="https://bugzilla.gnome.org/buglist.cgi?quicksearch=product%3A%22vte%22+"&gt;Open Issues&lt;/a&gt;, and &lt;a href="https://bugzilla.gnome.org/buglist.cgi?bug_status=RESOLVED&amp;amp;bug_status=VERIFIED&amp;amp;chfield=resolution&amp;amp;chfieldfrom=-2000d&amp;amp;chfieldvalue=FIXED&amp;amp;product=vte&amp;amp;resolution=FIXED"&gt;All (including closed) issues&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;iTerm 2: OS X terminal application. &lt;a href="https://github.com/gnachman/iTerm2"&gt;Source&lt;/a&gt;, &lt;a href="https://gitlab.com/gnachman/iterm2/issues"&gt;Issues&lt;/a&gt; and &lt;a href="https://iterm2.com/documentation.html"&gt;Documentation&lt;/a&gt; (which includes &lt;a href="https://iterm2.com/documentation-escape-codes.html"&gt;iTerm2 proprietary escape codes&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Konsole: KDE terminal application. &lt;a href="https://projects.kde.org/projects/kde/applications/konsole/repository"&gt;Source&lt;/a&gt;, in particular &lt;a href="https://projects.kde.org/projects/kde/applications/konsole/repository/revisions/master/show/tests"&gt;tests&lt;/a&gt;, &lt;a href="https://bugs.kde.org/buglist.cgi?bug_severity=critical&amp;amp;bug_severity=grave&amp;amp;bug_severity=major&amp;amp;bug_severity=crash&amp;amp;bug_severity=normal&amp;amp;bug_severity=minor&amp;amp;bug_status=UNCONFIRMED&amp;amp;bug_status=NEW&amp;amp;bug_status=ASSIGNED&amp;amp;bug_status=REOPENED&amp;amp;product=konsole"&gt;Bugs&lt;/a&gt; and &lt;a href="https://bugs.kde.org/buglist.cgi?bug_severity=wishlist&amp;amp;bug_status=UNCONFIRMED&amp;amp;bug_status=NEW&amp;amp;bug_status=ASSIGNED&amp;amp;bug_status=REOPENED&amp;amp;product=konsole"&gt;Wishes&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;hterm: JavaScript terminal implementation from Chromium. &lt;a href="https://github.com/chromium/hterm"&gt;Source&lt;/a&gt;, including &lt;a href="https://github.com/chromium/hterm/raw/master/js/hterm_vt_tests.js"&gt;tests&lt;/a&gt;, and &lt;a href="https://groups.google.com/a/chromium.org/forum/#!forum/chromium-hterm"&gt;Google group&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;xterm: The grandfather of terminal emulators. &lt;a href="https://invisible-island.net/datafiles/release/xterm.tar.gz"&gt;Source&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Connectbot: Android SSH client. &lt;a href="https://github.com/connectbot/connectbot"&gt;Source&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Android Terminal Emulator: Android terminal app which Termux terminal handling is based on. Inactive. &lt;a href="https://github.com/jackpal/Android-Terminal-Emulator"&gt;Source&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h3&gt;Debugging&lt;/h3&gt; 
&lt;p&gt;You can help debug problems of the &lt;code&gt;Termux&lt;/code&gt; app and its plugins by setting appropriate &lt;code&gt;logcat&lt;/code&gt; &lt;code&gt;Log Level&lt;/code&gt; in &lt;code&gt;Termux&lt;/code&gt; app settings -&amp;gt; &lt;code&gt;&amp;lt;APP_NAME&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;Debugging&lt;/code&gt; -&amp;gt; &lt;code&gt;Log Level&lt;/code&gt; (Requires &lt;code&gt;Termux&lt;/code&gt; app version &lt;code&gt;&amp;gt;= 0.118.0&lt;/code&gt;). The &lt;code&gt;Log Level&lt;/code&gt; defaults to &lt;code&gt;Normal&lt;/code&gt; and log level &lt;code&gt;Verbose&lt;/code&gt; currently logs additional information. Its best to revert log level to &lt;code&gt;Normal&lt;/code&gt; after you have finished debugging since private data may otherwise be passed to &lt;code&gt;logcat&lt;/code&gt; during normal operation and moreover, additional logging increases execution time.&lt;/p&gt; 
&lt;p&gt;The plugin apps &lt;strong&gt;do not execute the commands themselves&lt;/strong&gt; but send execution intents to &lt;code&gt;Termux&lt;/code&gt; app, which has its own log level which can be set in &lt;code&gt;Termux&lt;/code&gt; app settings -&amp;gt; &lt;code&gt;Termux&lt;/code&gt; -&amp;gt; &lt;code&gt;Debugging&lt;/code&gt; -&amp;gt; &lt;code&gt;Log Level&lt;/code&gt;. So you must set log level for both &lt;code&gt;Termux&lt;/code&gt; and the respective plugin app settings to get all the info.&lt;/p&gt; 
&lt;p&gt;Once log levels have been set, you can run the &lt;code&gt;logcat&lt;/code&gt; command in &lt;code&gt;Termux&lt;/code&gt; app terminal to view the logs in realtime (&lt;code&gt;Ctrl+c&lt;/code&gt; to stop) or use &lt;code&gt;logcat -d &amp;gt; logcat.txt&lt;/code&gt; to take a dump of the log. You can also view the logs from a PC over &lt;code&gt;ADB&lt;/code&gt;. For more information, check official android &lt;code&gt;logcat&lt;/code&gt; guide &lt;a href="https://developer.android.com/studio/command-line/logcat"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Moreover, users can generate termux files &lt;code&gt;stat&lt;/code&gt; info and &lt;code&gt;logcat&lt;/code&gt; dump automatically too with terminal's long hold options menu &lt;code&gt;More&lt;/code&gt; -&amp;gt; &lt;code&gt;Report Issue&lt;/code&gt; option and selecting &lt;code&gt;YES&lt;/code&gt; in the prompt shown to add debug info. This can be helpful for reporting and debugging other issues. If the report generated is too large, then &lt;code&gt;Save To File&lt;/code&gt; option in context menu (3 dots on top right) of &lt;code&gt;ReportActivity&lt;/code&gt; can be used and the file viewed/shared instead.&lt;/p&gt; 
&lt;p&gt;Users must post complete report (optionally without sensitive info) when reporting issues. Issues opened with &lt;strong&gt;(partial) screenshots of error reports&lt;/strong&gt; instead of text will likely be automatically closed/deleted.&lt;/p&gt; 
&lt;h5&gt;Log Levels&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Off&lt;/code&gt; - Log nothing.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Normal&lt;/code&gt; - Start logging error, warn and info messages and stacktraces.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Debug&lt;/code&gt; - Start logging debug messages.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Verbose&lt;/code&gt; - Start logging verbose messages.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;For Maintainers and Contributors&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/termux-shared"&gt;termux-shared&lt;/a&gt; library was added in &lt;a href="https://github.com/termux/termux-app/releases/tag/v0.109"&gt;&lt;code&gt;v0.109&lt;/code&gt;&lt;/a&gt;. It defines shared constants and utils of the Termux app and its plugins. It was created to allow for the removal of all hardcoded paths in the Termux app. Some of the termux plugins are using this as well and rest will in future. If you are contributing code that is using a constant or a util that may be shared, then define it in &lt;code&gt;termux-shared&lt;/code&gt; library if it currently doesn't exist and reference it from there. Update the relevant changelogs as well. Pull requests using hardcoded values &lt;strong&gt;will/should not&lt;/strong&gt; be accepted. Termux app and plugin specific classes must be added under &lt;code&gt;com.termux.shared.termux&lt;/code&gt; package and general classes outside it. The &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/termux-shared/LICENSE.md"&gt;&lt;code&gt;termux-shared&lt;/code&gt; &lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; must also be checked and updated if necessary when contributing code. The licenses of any external library or code must be honoured.&lt;/p&gt; 
&lt;p&gt;The main Termux constants are defined by &lt;a href="https://github.com/termux/termux-app/raw/master/termux-shared/src/main/java/com/termux/shared/termux/TermuxConstants.java"&gt;&lt;code&gt;TermuxConstants&lt;/code&gt;&lt;/a&gt; class. It also contains information on how to fork Termux or build it with your own package name. Changing the package name will require building the bootstrap zip packages and other packages with the new &lt;code&gt;$PREFIX&lt;/code&gt;, check &lt;a href="https://github.com/termux/termux-packages/wiki/Building-packages"&gt;Building Packages&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;p&gt;Check &lt;a href="https://github.com/termux/termux-app/wiki/Termux-Libraries"&gt;Termux Libraries&lt;/a&gt; for how to import termux libraries in plugin apps and &lt;a href="https://github.com/termux/termux-app/wiki/Termux-Libraries#forking-and-local-development"&gt;Forking and Local Development&lt;/a&gt; for how to update termux libraries for plugins.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;versionName&lt;/code&gt; in &lt;code&gt;build.gradle&lt;/code&gt; files of Termux and its plugin apps must follow the &lt;a href="https://semver.org/spec/v2.0.0.html"&gt;semantic version &lt;code&gt;2.0.0&lt;/code&gt; spec&lt;/a&gt; in the format &lt;code&gt;major.minor.patch(-prerelease)(+buildmetadata)&lt;/code&gt;. When bumping &lt;code&gt;versionName&lt;/code&gt; in &lt;code&gt;build.gradle&lt;/code&gt; files and when creating a tag for new releases on GitHub, make sure to include the patch number as well, like &lt;code&gt;v0.1.0&lt;/code&gt; instead of just &lt;code&gt;v0.1&lt;/code&gt;. The &lt;code&gt;build.gradle&lt;/code&gt; files and &lt;code&gt;attach_debug_apks_to_release&lt;/code&gt; workflow validates the version as well and the build/attachment will fail if &lt;code&gt;versionName&lt;/code&gt; does not follow the spec.&lt;/p&gt; 
&lt;h3&gt;Commit Messages Guidelines&lt;/h3&gt; 
&lt;p&gt;Commit messages &lt;strong&gt;must&lt;/strong&gt; use the &lt;a href="https://www.conventionalcommits.org"&gt;Conventional Commits&lt;/a&gt; spec so that chagelogs as per the &lt;a href="https://github.com/olivierlacan/keep-a-changelog"&gt;Keep a Changelog&lt;/a&gt; spec can automatically be generated by the &lt;a href="https://github.com/termux/create-conventional-changelog"&gt;&lt;code&gt;create-conventional-changelog&lt;/code&gt;&lt;/a&gt; script, check its repo for further details on the spec. &lt;strong&gt;The first letter for &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; must be capital and description should be in the present tense.&lt;/strong&gt; The space after the colon &lt;code&gt;:&lt;/code&gt; is necessary. For a breaking change, add an exclamation mark &lt;code&gt;!&lt;/code&gt; before the colon &lt;code&gt;:&lt;/code&gt;, so that it is highlighted in the chagelog automatically.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;type&amp;gt;[optional scope]: &amp;lt;description&amp;gt;

[optional body]

[optional footer(s)]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Only the &lt;code&gt;types&lt;/code&gt; listed below must be used exactly as they are used in the changelog headings.&lt;/strong&gt; For example, &lt;code&gt;Added: Add foo&lt;/code&gt;, &lt;code&gt;Added|Fixed: Add foo and fix bar&lt;/code&gt;, &lt;code&gt;Changed!: Change baz as a breaking change&lt;/code&gt;, etc. You can optionally add a scope as well, like &lt;code&gt;Fixed(terminal): Fix some bug&lt;/code&gt;. &lt;strong&gt;Do not use anything else as type, like &lt;code&gt;add&lt;/code&gt; instead of &lt;code&gt;Added&lt;/code&gt;, etc.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Added&lt;/strong&gt; for new features.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Changed&lt;/strong&gt; for changes in existing functionality.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Deprecated&lt;/strong&gt; for soon-to-be removed features.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Removed&lt;/strong&gt; for now removed features.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fixed&lt;/strong&gt; for any bug fixes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt; in case of vulnerabilities.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;Forking&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check &lt;a href="https://github.com/termux/termux-app/raw/master/termux-shared/src/main/java/com/termux/shared/termux/TermuxConstants.java"&gt;&lt;code&gt;TermuxConstants&lt;/code&gt;&lt;/a&gt; javadocs for instructions on what changes to make in the app to change package name.&lt;/li&gt; 
 &lt;li&gt;You also need to recompile bootstrap zip for the new package name. Check &lt;a href="https://github.com/termux/termux-packages/wiki/For-maintainers#build-bootstrap-archives"&gt;building bootstrap&lt;/a&gt;, &lt;a href="https://github.com/termux/termux-app/issues/1983"&gt;here&lt;/a&gt; and &lt;a href="https://github.com/termux/termux-app/issues/2081#issuecomment-865280111"&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Currently, not all plugins use &lt;code&gt;TermuxConstants&lt;/code&gt; from &lt;code&gt;termux-shared&lt;/code&gt; library and have hardcoded &lt;code&gt;com.termux&lt;/code&gt; values and will need to be manually patched.&lt;/li&gt; 
 &lt;li&gt;If forking termux plugins, check &lt;a href="https://github.com/termux/termux-app/wiki/Termux-Libraries#forking-and-local-development"&gt;Forking and Local Development&lt;/a&gt; for info on how to use termux libraries for plugins.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>RikkaApps/Sui</title>
      <link>https://github.com/RikkaApps/Sui</link>
      <description>&lt;p&gt;Modern super user interface implementation on Android.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sui&lt;/h1&gt; 
&lt;p&gt;Modern super user interface (SUI) implementation on Android. &lt;del&gt;The name, Sui, also comes from &lt;a href="https://www.pixiv.net/artworks/71435059"&gt;a character&lt;/a&gt;.&lt;/del&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Sui provides Java APIs, &lt;a href="https://github.com/RikkaApps/Shizuku-API"&gt;Shizuku API&lt;/a&gt;, for root apps. It mainly provides the ability to use Android APIs directly (almost in Java as the identity of the root, and start app's own AIDL-style Java service under root. This will make root app development much more comfortable.&lt;/p&gt; 
&lt;p&gt;Another advantage is that Sui does not add binaries to &lt;code&gt;PATH&lt;/code&gt; and does not install a manager app. This means we no longer need to spend a huge amount of time to fight with apps that detect them.&lt;/p&gt; 
&lt;p&gt;To be clear, the full implementation of "root" is far more than "su" itself, there is a lot of hard work to be done before. Sui is not a full root solution, it requires Magisk to run.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Why "su" is unfriendly for app development&lt;/summary&gt; 
 &lt;p&gt;The "su", a "shell" runs as root, is too far from the Android world.&lt;/p&gt; 
 &lt;p&gt;To explain this, we need to talk about how system API works. For example, we can use &lt;code&gt;PackageManager#getInstalledApplications&lt;/code&gt; to get the app list. This is actually an interprocess communication (IPC) process of the app process and system server process, just the Android framework did the inner works for us. Android uses &lt;code&gt;Binder&lt;/code&gt; to do this type of IPC. &lt;code&gt;Binder&lt;/code&gt; allows the server-side to learn the uid and pid of the client-side so that the system server can check if the app has the permission to do the operation.&lt;/p&gt; 
 &lt;p&gt;Back to "su", there are commands provided by the Android system. In the same example, to get the app list with "su", we have to use &lt;code&gt;pm list&lt;/code&gt;. This is too painful.&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Text-based, this means there is no structured data like &lt;code&gt;PackageInfo&lt;/code&gt; in Java. You have to parse the output text.&lt;/li&gt; 
  &lt;li&gt;It is much slower because run a command means at least one new process is started. And &lt;code&gt;PackageManager#getInstalledApplications&lt;/code&gt; is used inside &lt;code&gt;pm list&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;The possibility is limited to how the command can do. The command only covers a little amount of Android APIs.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;Although it is possible to use Java APIs as root with &lt;code&gt;app_process&lt;/code&gt; (there are libraries like libsu and librootjava), transfer binder between app process and root process is painful. If you want the root process to run as a daemon. When the app process restarts, it has no cheap way to get the binder of the root process.&lt;/p&gt; 
 &lt;p&gt;In fact, for Magisk and other root solutions, makes the "su" to work is not that easy as some people think (let "su" itself work and the communication between the "su" and the manager app have a lot of unhappy work behind).&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;User guide&lt;/h2&gt; 
&lt;p&gt;Note, the behavior of existing apps that only supports "su" will NOT change.&lt;/p&gt; 
&lt;h3&gt;Install&lt;/h3&gt; 
&lt;p&gt;You can download and install Sui from Magisk directly. Or, download the zip from &lt;a href="https://github.com/RikkaApps/Sui/releases/"&gt;release&lt;/a&gt; and use "Install from storage" in Magisk.&lt;/p&gt; 
&lt;h3&gt;Management UI&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;(Android 8.0+, Sui 12.1+) Long press system settings from the home app, you will find the shortcut of Sui&lt;/li&gt; 
 &lt;li&gt;(Android 8.0+, Sui 12+) Enter "Developer options" in system settings, the system will ask you to add the shortcut of Sui&lt;/li&gt; 
 &lt;li&gt;Enter &lt;code&gt;*#*#784784#*#*&lt;/code&gt; in the default dialer app&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note, the shortcut way requires your home app supports shortcut APIs that adds from Android 7.0 and 8.0. Unless you are using a old home app, you can the shortcut with no problem.&lt;/p&gt; 
&lt;h3&gt;Interactive shell&lt;/h3&gt; 
&lt;p&gt;Sui provides interactive shell.&lt;/p&gt; 
&lt;p&gt;Since Sui does not add files to &lt;code&gt;PATH&lt;/code&gt;, the files need to be copied manually. See &lt;code&gt;/data/adb/sui/post-install.example.sh&lt;/code&gt; to learn how to do this automatically.&lt;/p&gt; 
&lt;p&gt;After the files are correctly copied, use &lt;code&gt;rish&lt;/code&gt; as 'sh'.&lt;/p&gt; 
&lt;h2&gt;Application development guide&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/RikkaApps/Shizuku-API"&gt;https://github.com/RikkaApps/Shizuku-API&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Build&lt;/h2&gt; 
&lt;p&gt;Clone with &lt;code&gt;git clone --recurse-submodules&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Gradle tasks:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Flavor&lt;/code&gt; could be &lt;code&gt;Riru&lt;/code&gt; and &lt;code&gt;Zygisk&lt;/code&gt;, and &lt;code&gt;BuildType&lt;/code&gt; could be &lt;code&gt;Debug&lt;/code&gt; and &lt;code&gt;Release&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;:module:assemble&amp;lt;Flavor&amp;gt;&amp;lt;BuildType&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Generate Magisk module zip to &lt;code&gt;out&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;:module:push&amp;lt;Flavor&amp;gt;&amp;lt;BuildType&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Push the zip with adb to &lt;code&gt;/data/local/tmp&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;:module:flash&amp;lt;Flavor&amp;gt;&amp;lt;BuildType&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Install the zip with &lt;code&gt;adb shell su -c magisk --install-module&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;:module:flashAndReboot&amp;lt;Flavor&amp;gt;&amp;lt;BuildType&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Install the zip and reboot the device.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Internals&lt;/h2&gt; 
&lt;p&gt;Sui requires &lt;a href="https://github.com/topjohnwu/Magisk"&gt;Magisk&lt;/a&gt; (and &lt;a href="https://github.com/RikkaApps"&gt;Riru&lt;/a&gt; for non-Zygisk version). Magisk allows us to run processes as uid 0 and a "do anything" SELinux context. Riru or Zygisk allows us to inject into system server process and app processes.&lt;/p&gt; 
&lt;p&gt;In short, there are four parts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Root process&lt;/p&gt; &lt;p&gt;This is a root process started by Magisk. This process starts a Java server that implements Shizuku API and private APIs used by other parts.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;SystemServer inject&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Hooks &lt;code&gt;Binder#execTransact&lt;/code&gt; and finally allow us to handle an unused binder call&lt;/li&gt; 
   &lt;li&gt;Implements "get binder", "set binder" logic in that binder call, so that root process can send its binder to the system server, and the apps can acquire root process's binder&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;SystemUI inject&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Acquire the fd of our apk from the root server, create a &lt;code&gt;Resource&lt;/code&gt; instance from it&lt;/li&gt; 
   &lt;li&gt;Show confirmation window with our &lt;code&gt;Resource&lt;/code&gt; and &lt;code&gt;ClassLoader&lt;/code&gt; when recevied callback from the root server&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Settings inject&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Acquire the fd of our apk from the root server, create a &lt;code&gt;Resource&lt;/code&gt; instance from it&lt;/li&gt; 
   &lt;li&gt;Publish shortcut which targets an existing &lt;code&gt;Acitivty&lt;/code&gt; but with a special intent extra&lt;/li&gt; 
   &lt;li&gt;Replace &lt;code&gt;ActivityThread#mInstrumentation&lt;/code&gt; to intervene the &lt;code&gt;Acitivty&lt;/code&gt; instantiate process, if the intent has the speical extra, create our &lt;code&gt;Activity&lt;/code&gt; which uses our &lt;code&gt;Resource&lt;/code&gt; and &lt;code&gt;ClassLoader&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>CodePhiliaX/Chat2DB</title>
      <link>https://github.com/CodePhiliaX/Chat2DB</link>
      <description>&lt;p&gt;üî•üî•üî•AI-driven database tool and SQL client, The hottest GUI client, supporting MySQL, Oracle, PostgreSQL, DB2, SQL Server, DB2, SQLite, H2, ClickHouse, and more.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://trendshift.io/repositories/11808" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/11808" alt="CodePhiliaX%2FChat2DB | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt; &lt;/a&gt;
&lt;/div&gt;
&lt;a href="https://trendshift.io/repositories/11808" target="_blank"&gt; &lt;br /&gt; &lt;/a&gt;
&lt;div align="center"&gt;
 &lt;a href="https://trendshift.io/repositories/11808" target="_blank"&gt; &lt;p&gt;&lt;a href="https://readmex.com/CodePhiliaX/Chat2DB"&gt;&lt;img src="https://raw.githubusercontent.com/CodePhiliaX/resource-trusteeship/main/readmex.svg?sanitize=true" alt="ReadmeX" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/uNjb3n5JVN"&gt;&lt;img src="https://img.shields.io/badge/-Join%20us%20on%20Discord-%237289DA.svg?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/tweet?text=Chat2DB-An%20intelligent%20and%20versatile%20general-purpose%20SQL%20client%20and%20reporting%20tool%20for%20databases%20which%20integrates%20ChatGPT%20capabilities.&amp;amp;url=https://github.com/chat2db/Chat2DB&amp;amp;hashtags=ChatGPT,AGI,SQL%20Client,Reporting%20tool"&gt;&lt;img src="https://img.shields.io/twitter/follow/_Chat2DB?label=Chat2DB" alt="Twitter" /&gt;&lt;/a&gt; &lt;a href="https://t.me/share/url?text=Chat2DB-An%20intelligent%20and%20versatile%20general-purpose%20SQL%20client%20and%20reporting%20tool%20for%20databases%20which%20integrates%20ChatGPT%20capabilities.&amp;amp;url=https://github.com/chat2db/Chat2DB"&gt;&lt;img src="https://img.shields.io/twitter/url?label=Telegram&amp;amp;logo=Telegram&amp;amp;style=social&amp;amp;url=https://github.com/chat2db/Chat2DB" alt="Telegram" /&gt;&lt;/a&gt; &lt;a href="https://api.whatsapp.com/send?text=Chat2DB-An%20intelligent%20and%20versatile%20general-purpose%20SQL%20client%20and%20reporting%20tool%20for%20databases%20which%20integrates%20ChatGPT%20capabilities.%20https://github.com/chat2db/Chat2DB"&gt;&lt;img src="https://img.shields.io/twitter/url?label=whatsapp&amp;amp;logo=whatsapp&amp;amp;style=social&amp;amp;url=https://github.com/chat2db/Chat2DB" alt="Whatsapp" /&gt;&lt;/a&gt; &lt;a href="https://www.reddit.com/submit?url=https://github.com/chat2db/Chat2DB&amp;amp;title=Chat2DB-An%20intelligent%20and%20versatile%20general-purpose%20SQL%20client%20and%20reporting%20tool%20for%20databases%20which%20integrates%20ChatGPT%20capabilities."&gt;&lt;img src="https://img.shields.io/twitter/url?label=Reddit&amp;amp;logo=Reddit&amp;amp;style=social&amp;amp;url=https://github.com/chat2db/Chat2DB" alt="Reddit" /&gt;&lt;/a&gt; &lt;a href="mailto:?subject=Check%20this%20GitHub%20repository%20out.&amp;amp;body=Chat2DB-An%20intelligent%20and%20versatile%20general-purpose%20SQL%20client%20and%20reporting%20tool%20for%20databases%20which%20integrates%20ChatGPT%20capabilities.%3A%0Ahttps://github.com/chat2db/Chat2DB"&gt;&lt;img src="https://img.shields.io/twitter/url?label=Gmail&amp;amp;logo=Gmail&amp;amp;style=social&amp;amp;url=https://github.com/chat2db/Chat2DB" alt="Gmail" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://raw.githubusercontent.com/CodePhiliaX/Chat2DB/main/README.md"&gt;&lt;img alt="README in English" src="https://img.shields.io/badge/English-d9d9d9" /&gt;&lt;/a&gt; 
 &lt;a href="https://raw.githubusercontent.com/CodePhiliaX/Chat2DB/main/README_CN.md"&gt;&lt;img alt="ÁÆÄ‰Ωì‰∏≠ÊñáÁâàËá™Ëø∞Êñá‰ª∂" src="https://img.shields.io/badge/ÁÆÄ‰Ωì‰∏≠Êñá-d9d9d9" /&gt;&lt;/a&gt; 
 &lt;a href="https://raw.githubusercontent.com/CodePhiliaX/Chat2DB/main/README_JA.md"&gt;&lt;img alt="Êó•Êú¨Ë™û„ÅÆREADME" src="https://img.shields.io/badge/Êó•Êú¨Ë™û-d9d9d9" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/4ae824cf-7d14-4d5b-9ceb-66481bcefc19"&gt;https://github.com/user-attachments/assets/4ae824cf-7d14-4d5b-9ceb-66481bcefc19&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Chat2DB is an intelligent, universal SQL client and data reporting tool that integrates AI capabilities. Chat2DB helps you write SQL queries faster, manage databases, generate reports, explore data, and interact with multiple databases. Chat2DB is an open-source project, and we welcome your contributions.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. Intelligent SQL Generation&lt;/strong&gt;:&lt;br /&gt; Chat2DB Pro supports AI-driven intelligent SQL development to help you write SQL queries faster.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. Database Management&lt;/strong&gt;:&lt;br /&gt; Supports more than 10 databases, including MySQL, PostgreSQL, H2, Oracle, SQLServer, SQLite, MariaDB, ClickHouse, DM, Presto, DB2, OceanBase, Hive, KingBase, MongoDB, Redis, Snowflake, and more.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. Intelligent Report Generation&lt;/strong&gt;:&lt;br /&gt; Chat2DB Pro supports AI-driven intelligent data reporting to help you generate dashboards faster.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4. Data Structure Synchronization&lt;/strong&gt;:&lt;br /&gt; Chat2DB Pro supports database table structure synchronization to help you sync database table structures faster.&lt;/p&gt; 
&lt;h2&gt;Feature Comparison&lt;/h2&gt; 
&lt;table style="width: 100%;"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th align="center"&gt;Feature&lt;/th&gt; 
   &lt;th align="center"&gt;Community Open Source&lt;/th&gt; 
   &lt;th align="center"&gt;Local&lt;/th&gt; 
   &lt;th align="center"&gt;Pro &lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Database Types&lt;/td&gt; 
   &lt;td align="center"&gt;16+&lt;/td&gt; 
   &lt;td align="center"&gt;Target 100+&lt;/td&gt; 
   &lt;td align="center"&gt;Target 100+&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Supported AI&lt;/td&gt; 
   &lt;td align="center"&gt;Requires AI Configuration&lt;/td&gt; 
   &lt;td align="center"&gt;AI ready on installation&lt;/td&gt; 
   &lt;td align="center"&gt;AI ready on installation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;AI Capabilities&lt;/td&gt; 
   &lt;td align="center"&gt;Basic&lt;/td&gt; 
   &lt;td align="center"&gt;Varied&lt;/td&gt; 
   &lt;td align="center"&gt;Varied&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Visual Table Editor&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;SQL Console&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;SQL Formatting&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Save Query Records&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Theme Color Settings&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Data Structure Sync&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Database Grouping&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Database Structure Import/Export&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Data Import/Export&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Data Migration&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Copy/Clear Table&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Open and Run SQL Files&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;UML Diagram&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;In Development&lt;/td&gt; 
   &lt;td align="center"&gt;In Development&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Generate Code&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Copy Results as Insert/Update&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Modify Query Results&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Intelligent SQL Editor&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;AI Table Creation&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;AI Data Sets&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Chat2Excel&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Intelligent Dashboard&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Editor Settings&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Custom Shortcuts&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Cross-device Usage&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚ùå&lt;/td&gt; 
   &lt;td align="center"&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Download and Installation&lt;/h2&gt; 
&lt;p&gt;Chat2DB is a cross-platform application that supports Windows, MacOS, and Linux. You can download Chat2DB from the following links:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://chat2db.ai/download"&gt;Download Pro Version&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chat2db.ai/download"&gt;Download Local Version&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CodePhiliaX/Chat2DB/releases/tag/v0.3.6"&gt;Download Open Source Version&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community Edition Docker Installation&lt;/h2&gt; 
&lt;h3&gt;System Requirements&lt;/h3&gt; 
&lt;p&gt;Before installing Chat2DB, ensure your system meets the following requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker 19.03.0 or later&lt;/li&gt; 
 &lt;li&gt;Docker Compose 1.25.0 or later&lt;/li&gt; 
 &lt;li&gt;CPU &amp;gt;= 2 Cores&lt;/li&gt; 
 &lt;li&gt;RAM &amp;gt;= 4 GiB&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;  docker rm chat2db
  
  docker run --name=chat2db -ti -p 10824:10824 -v ~/.chat2db-docker:/root/.chat2db  chat2db/chat2db:latest

  docker start chat2db
  
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Code Debugging&lt;/h2&gt; 
&lt;h2&gt;Runtime Environment&lt;/h2&gt; 
&lt;p&gt;Note: If local debugging is needed:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Java runtime: &lt;a href="https://adoptopenjdk.net/" target="_blank"&gt;Open JDK 17&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Node.js runtime: Node 16 &lt;a href="https://nodejs.org/" target="_blank"&gt;Node.js&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Clone the repository locally&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ git clone git@github.com:chat2db/Chat2DB.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Frontend Debugging&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;Node version must be 16 or higher  
Use yarn only, npm is not supported
$ cd Chat2DB/chat2db-client
$ yarn
$ yarn run start:web
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Backend Debugging&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ cd ../chat2db-server
$ mvn clean install # Maven version 3.8 or higher is required
$ cd chat2db-server/chat2db-server-start/target/
$ java -jar -Dloader.path=./lib -Dchatgpt.apiKey=xxxxx chat2db-server-start.jar  # ÈúÄË¶ÅÂÆâË£Öjava 17‰ª•‰∏äÁâàÊú¨ÔºåÂêØÂä®Â∫îÁî® chatgpt.apiKey ÈúÄË¶ÅËæìÂÖ•ChatGPTÁöÑkey,Â¶ÇÊûú‰∏çËæìÂÖ•Êó†Ê≥ï‰ΩøÁî®AIGCÂäüËÉΩ
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Standalone Deployment&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# chat2db-client
$ npm run build:web:prod 
$ cp -r dist ../chat2db-server/chat2db-server-start/src/main/resources/static/front 
$ cp -r dist/index.html ../chat2db-server/chat2db-server-start/src/main/resources/thymeleaf
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contact Us&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Email: &lt;a href="mailto:Chat2DB@ch2db.com"&gt;Chat2DB@ch2db.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Discord: &lt;a href="https://discord.gg/JDkwB6JS8A"&gt;Join our Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href="https://x.com/Chat2DB_AI"&gt;@Chat2DB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;YouTube: &lt;a href="https://www.youtube.com/@chat2db.tutorial"&gt;Chat2DB Channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GitHub: &lt;a href="https://github.com/codePhiliaX/chat2db"&gt;Chat2DB GitHub&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;Thanks to everyone who has contributed to Chat2DB~~&lt;/p&gt; 
&lt;a href="https://github.com/chat2db/Chat2DB/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=chat2db/Chat2DB" /&gt; &lt;/a&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://star-history.com/#CodePhiliaX/chat2db&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=CodePhiliaX/chat2db&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=CodePhiliaX/chat2db&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=CodePhiliaX/chat2db&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The primary license used by this software is the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;Apache License 2.0&lt;/a&gt;, supplemented by the &lt;a href="https://raw.githubusercontent.com/CodePhiliaX/Chat2DB/main/Chat2DB_LICENSE"&gt;Chat2DB License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ashishps1/awesome-low-level-design</title>
      <link>https://github.com/ashishps1/awesome-low-level-design</link>
      <description>&lt;p&gt;Learn Low Level Design (LLD) and prepare for interviews using free resources.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/images/lld-repo-logo.png" width="350" height="200" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://blog.algomaster.io/"&gt;Join Free Newsletter&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;This repository contains resources to learn Low Level Design (LLD) / Object Oriented Design (OOD) and prepare for interviews.&lt;/p&gt; 
&lt;p&gt;üëâ For a better and more comprehensive experience, checkout the &lt;a href="https://algomaster.io/learn/lld"&gt;LLD page at AlgoMaster.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üìå Fundamental Concepts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/basic-oop-concepts-explained-with-code"&gt;Basics OOP Concepts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/backticks-tildes/the-s-o-l-i-d-principles-in-pictures-b34ce2f1e898"&gt;SOLID Principles with Pictures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/solid-principles-explained-with-code"&gt;SOLID Principles with Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/082450d8-0e7b-4447-a8dc-b7308e45f048"&gt;DRY Principle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/8c3c7da7-885b-4a9c-a6e4-70ee02de4772"&gt;YAGNI Principle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/21b57678-b351-4ed4-b390-3b6308af2f7d"&gt;KISS Principle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coursera.org/learn/object-oriented-design"&gt;Coursera - Object-Oriented Design&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚öôÔ∏è Design Patterns&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Creational Patterns&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Structural Patterns&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Behavioral Patterns&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/singleton"&gt;Singleton&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/adapter"&gt;Adapter&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/iterator"&gt;Iterator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/factory-method"&gt;Factory Method&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/bridge"&gt;Bridge&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/observer"&gt;Observer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/abstract-factory"&gt;Abstract Factory&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/composite"&gt;Composite&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/strategy"&gt;Strategy&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/builder"&gt;Builder&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/decorator"&gt;Decorator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/command"&gt;Command&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/prototype"&gt;Prototype&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/facade"&gt;Facade&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/state"&gt;State&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/flyweight"&gt;Flyweight&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/template-method"&gt;Template Method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/proxy"&gt;Proxy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/visitor"&gt;Visitor&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/mediator"&gt;Mediator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/memento"&gt;Memento&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/chain-of-responsibility"&gt;Chain of Responsibility&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;üóÇÔ∏è UML&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/uml-class-diagram-explained-with-examples"&gt;Class Diagram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/119449cd-b003-46da-9e4d-0eb356d216d8"&gt;Use Case Diagram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/4dd99bdc-5c35-4a80-bc53-1777cb57aa05"&gt;Sequence Diagram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.visual-paradigm.com/guide/uml-unified-modeling-language/what-is-activity-diagram/"&gt;Activity Diagram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.visual-paradigm.com/guide/uml-unified-modeling-language/what-is-state-machine-diagram/"&gt;State Machine Diagram&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚úÖ &lt;a href="https://blog.algomaster.io/p/how-to-answer-a-lld-interview-problem"&gt;How to Answer a LLD Interview Problem&lt;/a&gt;&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/images/interview-template.png" width="350" height="250" /&gt; 
&lt;h2&gt;üíª Low Level Design Interview Problems&lt;/h2&gt; 
&lt;h3&gt;Easy Problems&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/parking-lot.md"&gt;Design Parking Lot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/stack-overflow.md"&gt;Design Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/vending-machine.md"&gt;Design a Vending Machine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/logging-framework.md"&gt;Design Logging Framework&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/traffic-signal.md"&gt;Design Traffic Signal Control System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/coffee-vending-machine.md"&gt;Design Coffee Vending Machine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/task-management-system.md"&gt;Design a Task Management System&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Medium Problems&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/atm.md"&gt;Design ATM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/linkedin.md"&gt;Design LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/lru-cache.md"&gt;Design LRU Cache&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/tic-tac-toe.md"&gt;Design Tic Tac Toe Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/pub-sub-system.md"&gt;Design Pub Sub System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/elevator-system.md"&gt;Design an Elevator System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/car-rental-system.md"&gt;Design Car Rental System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/online-auction-system.md"&gt;Design an Online Auction System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/hotel-management-system.md"&gt;Design Hotel Management System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/digital-wallet-service.md"&gt;Design a Digital Wallet Service&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/airline-management-system.md"&gt;Design Airline Management System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/library-management-system.md"&gt;Design a Library Management System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/social-networking-service.md"&gt;Design a Social Network like Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/restaurant-management-system.md"&gt;Design Restaurant Management System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/concert-ticket-booking-system.md"&gt;Design a Concert Ticket Booking System&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hard Problems&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/cricinfo.md"&gt;Design CricInfo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/splitwise.md"&gt;Design Splitwise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/chess-game.md"&gt;Design Chess Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/snake-and-ladder.md"&gt;Design a Snake and Ladder game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/ride-sharing-service.md"&gt;Design Ride-Sharing Service like Uber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/course-registration-system.md"&gt;Design Course Registration System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/movie-ticket-booking-system.md"&gt;Design Movie Ticket Booking System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/online-shopping-service.md"&gt;Design Online Shopping System like Amazon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/online-stock-brokerage-system.md"&gt;Design Online Stock Brokerage System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/music-streaming-service.md"&gt;Design Music Streaming Service like Spotify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/food-delivery-service.md"&gt;Design Online Food Delivery Service like Swiggy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìá Courses&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://algomaster.io/learn/lld/what-is-lld"&gt;Master LLD Interviews - AlgoMaster.io&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìö Books&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.in/dp/9385889753"&gt;Head First Design Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.in/dp/B001GSTOAM"&gt;Clean Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.in/dp/0134757599"&gt;Refactoring: Improving the Design of Existing Code&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üì© Newsletter&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/"&gt;AlgoMaster Newsletter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Additional resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.coursera.org/learn/design-patterns"&gt;Coursera - Design Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DovAmir/awesome-design-patterns"&gt;Github - Awesome Design Patterns&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! If you'd like to add a new problem, improve existing content, or fix errors:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Create a feature branch: &lt;code&gt;git checkout -b feature/your-feature-name&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Commit your changes: &lt;code&gt;git commit -m 'Add some feature'&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Push to the branch: &lt;code&gt;git push origin feature/your-feature-name&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Submit a pull request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Please make sure to update Readme files and documentation as appropriate.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;i&gt;If you find this resource helpful, please give it a star and share it with others!&lt;/i&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>conductor-oss/conductor</title>
      <link>https://github.com/conductor-oss/conductor</link>
      <description>&lt;p&gt;Conductor is an event driven orchestration platform providing durable and highly resilient execution engine for your applications&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;!-- Dark mode logo --&gt; 
 &lt;source srcset="https://github.com/user-attachments/assets/104b3a67-6013-4622-8075-a45da3a9e726" media="(prefers-color-scheme: dark)" /&gt; 
 &lt;!-- Light mode logo --&gt; 
 &lt;img src="https://assets.conductor-oss.org/logo.png" alt="Logo" /&gt; 
&lt;/picture&gt; 
&lt;h1 align="center" style="border-bottom: none"&gt; Conductor - Scalable Workflow Orchestration &lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/conductor-oss/conductor/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/conductor-oss/conductor?style=social" alt="GitHub stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/conductor-oss/conductor/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/conductor-oss/conductor.svg?sanitize=true" alt="Github release" /&gt;&lt;/a&gt; &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/github/license/conductor-oss/conductor.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://join.slack.com/t/orkes-conductor/shared_invite/zt-2vdbx239s-Eacdyqya9giNLHfrCavfaA"&gt;&lt;img src="https://img.shields.io/badge/Slack-Join%20the%20Community-blueviolet?logo=slack" alt="Conductor Slack" /&gt;&lt;/a&gt; &lt;a href="https://conductor-oss.org"&gt;&lt;img src="https://img.shields.io/badge/Conductor%20OSS-Visit%20Site-blue" alt="Conductor OSS" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Conductor is an open-source orchestration engine built at Netflix to help developers manage microservices and event-driven workflows. Today, it‚Äôs actively maintained by the team at &lt;a href="https://orkes.io"&gt;Orkes&lt;/a&gt; and a growing &lt;a href="https://orkes-conductor.slack.com/join/shared_invite/zt-2vdbx239s-Eacdyqya9giNLHfrCavfaA#/shared-invite/email"&gt;community of contributors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/4azDdDlx27M"&gt;&lt;img src="https://github.com/user-attachments/assets/6153aa58-8ad1-4ec5-93d1-38ba1b83e3f4" alt="conductor_oss_getting_started" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#what-is-conductor"&gt;What is Conductor?&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#key-benefits"&gt;Key benefits&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#getting-started-with-conductor"&gt;Getting Started with Conductor&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#quick-start-guide"&gt;Quick Start guide&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#create-your-first-workflow"&gt;Create your first workflow&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#database-specifications"&gt;Database Specifications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#build-from-source"&gt;Build from source&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#community"&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#conductor-oss-roadmap"&gt;Conductor OSS Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;What is Conductor?&lt;/h1&gt; 
&lt;p&gt;Conductor (or &lt;a href="https://netflixtechblog.com/netflix-conductor-a-microservices-orchestrator-2e8d4771bf40"&gt;Netflix Conductor&lt;/a&gt;) is a microservices orchestration engine for distributed and asynchronous workflows. It empowers developers to create workflows that define interactions between services, databases, and other external systems.&lt;/p&gt; 
&lt;p&gt;Conductor is designed to enable flexible, resilient, and scalable workflows. It allows you to compose services into complex workflows without coupling them tightly, simplifying orchestration across cloud-native applications and enterprise systems alike.&lt;/p&gt; 
&lt;h2&gt;Key benefits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Resilience and Error Handling:&lt;/strong&gt; Conductor enables automatic retries and fallback mechanisms.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalability:&lt;/strong&gt; Built to scale with complex workflows in high-traffic environments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Observability:&lt;/strong&gt; Provides monitoring and debugging capabilities for workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ease of Integration:&lt;/strong&gt; Seamlessly integrates with microservices, external APIs, and legacy systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Workflow as code:&lt;/strong&gt; Define workflows in JSON and manage them with versioning.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rich task types:&lt;/strong&gt; Includes task types like HTTP, JSON, Lambda, Sub Workflow, and Event tasks, allowing for flexible workflow definitions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic workflow management:&lt;/strong&gt; Workflows can evolve independently of the underlying services.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Built-in UI:&lt;/strong&gt; A customizable UI is available to monitor and manage workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible persistence and queue options:&lt;/strong&gt; Use Redis, MySQL, Postgres, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Getting Started with Conductor&lt;/h1&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install Docker Desktop (&lt;a href="https://docs.docker.com/desktop/setup/install/mac-install/"&gt;Mac&lt;/a&gt;, &lt;a href="https://docs.docker.com/desktop/setup/install/windows-install/"&gt;Windows/PC&lt;/a&gt;, &lt;a href="https://docs.docker.com/desktop/setup/install/linux/"&gt;Linux&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Install Java (JDK) 17 or newer&lt;/li&gt; 
 &lt;li&gt;Node 14 for the UI to build 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Earlier versions may work, but are untested&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start guide&lt;/h2&gt; 
&lt;h3&gt;Clone the repo&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/conductor-oss/conductor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Change to new Conductor directory&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cd conductor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Start with Docker Compose (&lt;em&gt;recommended for local deployment&lt;/em&gt;)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker compose -f docker/docker-compose.yaml up
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Create your first workflow&lt;/h2&gt; 
&lt;h3&gt;With the UI:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://localhost:8127"&gt;http://localhost:8127&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Or the REST API with your preferred HTTP client:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;p&gt;Check-out the &lt;a href="https://github.com/conductor-oss/conductor/tree/main/docs"&gt;Conductor docs&lt;/a&gt; for additional details&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Database Specifications&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;The default persistence used is Redis&lt;/li&gt; 
 &lt;li&gt;The indexing backend is &lt;a href="https://www.elastic.co/"&gt;Elasticsearch&lt;/a&gt; (7.x)&lt;/li&gt; 
 &lt;li&gt;To use &lt;a href="https://opensearch.org/"&gt;Opensearch&lt;/a&gt; (2.x), comment out Elasticsearch import so lucene dependencies don't conflict &lt;a href="https://github.com/conductor-oss/conductor/raw/main/server/build.gradle#L44-L46"&gt;server/build.gradle&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Configuration for various database backends&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Backend&lt;/th&gt; 
   &lt;th&gt;Configuration&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Redis + ES7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/docker/server/config/config-redis.properties"&gt;config-redis.properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Postgres&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/docker/server/config/config-postgres.properties"&gt;config-postgres.properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Postgres + ES7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/docker/server/config/config-postgres-es7.properties"&gt;config-postgres-es7.properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MySQL + ES7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/docker/server/config/config-mysql.properties"&gt;config-mysql.properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;Build from source&lt;/h1&gt; 
&lt;p&gt;Build from source and deploy Conductor as a standalone Java application. Configure databases, queues, and environment settings as needed. Follow the &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/docs/devguide/running/source.md"&gt;Building Conductor From Source&lt;/a&gt;&lt;/strong&gt; guide included in this repo.&lt;/p&gt; 
&lt;h2&gt;Available SDKs&lt;/h2&gt; 
&lt;p&gt;Conductor provides several SDKs for interacting with the API and creating custom clients:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/conductor-oss/java-sdk"&gt;&lt;strong&gt;Java SDK:&lt;/strong&gt;&lt;/a&gt; Fully featured for building and executing workflows in Java.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/conductor-oss/python-sdk"&gt;&lt;strong&gt;Python SDK:&lt;/strong&gt;&lt;/a&gt; Python library for creating and managing workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/conductor-oss/javascript-sdk"&gt;&lt;strong&gt;Javascript SDK:&lt;/strong&gt;&lt;/a&gt; For integrating Conductor workflows with Javascript/Typescript-based services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/conductor-oss/go-sdk"&gt;&lt;strong&gt;Go SDK:&lt;/strong&gt;&lt;/a&gt; For integrating Conductor workflows with Go-based services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/conductor-oss/csharp-sdk"&gt;&lt;strong&gt;C# SDK:&lt;/strong&gt;&lt;/a&gt;The conductor-csharp repository provides the client SDKs to build task workers in C#&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each SDK is maintained as part of the Conductor project, providing examples and comprehensive API documentation.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;We welcome contributions from everyone!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Report Issues:&lt;/strong&gt; Found a bug or have a feature request? Open an &lt;a href="https://github.com/conductor-oss/conductor/issues"&gt;issue on GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contribute code:&lt;/strong&gt; Check out our &lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt;, and explore our &lt;a href="https://github.com/conductor-oss/conductor/labels/good%20first%20issue"&gt;Good first issues&lt;/a&gt; for beginner-friendly tasks to tackle first.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contribute to our Docs:&lt;/strong&gt; Contribute edits or updates to keep our &lt;a href="https://github.com/conductor-oss/conductor/tree/main/docs"&gt;documentation&lt;/a&gt; in great shape for the community.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Build a Conductor SDK:&lt;/strong&gt; Need an &lt;a href="https://github.com/conductor-sdk"&gt;SDK&lt;/a&gt; not available for Conductor today? Build your own using the &lt;a href="http://localhost:8080"&gt;Swagger API&lt;/a&gt; included with your local deployment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Community&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://join.slack.com/t/orkes-conductor/shared_invite/zt-2vdbx239s-Eacdyqya9giNLHfrCavfaA"&gt;Join the Conductor Slack&lt;/a&gt;&lt;/strong&gt; channel for community discussions and support.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/conductor-oss/conductor/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=conductor-oss/conductor" /&gt; &lt;/a&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Conductor OSS Roadmap&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/ROADMAP.md"&gt;See the roadmap for the Conductor&lt;/a&gt; If you would like to participate in the roadmap and development, &lt;a href="https://forms.gle/P2i1xHrxPQLrjzTB7"&gt;please reach out&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Conductor is licensed under the &lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/LICENSE"&gt;Apache 2.0 License ¬©&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LawnchairLauncher/lawnchair</title>
      <link>https://github.com/LawnchairLauncher/lawnchair</link>
      <description>&lt;p&gt;No clever tagline needed.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lawnchair 15&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/LawnchairLauncher/lawnchair/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/LawnchairLauncher/lawnchair/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Build debug APK" /&gt;&lt;/a&gt; &lt;a href="https://github.com/LawnchairLauncher/lawnchair/actions/workflows/release_update.yml"&gt;&lt;img src="https://github.com/LawnchairLauncher/lawnchair/actions/workflows/release_update.yml/badge.svg?sanitize=true" alt="Build release APK" /&gt;&lt;/a&gt; &lt;a href="https://lawnchair.crowdin.com/lawnchair"&gt;&lt;img src="https://badges.crowdin.net/e/188ba69d884418987f0b7f1dd55e3a4e/localized.svg?sanitize=true" alt="Crowdin" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/lawnchair"&gt;&lt;img src="https://img.shields.io/opencollective/all/lawnchair?label=financial%20contributors&amp;amp;logo=open-collective" alt="OpenCollective" /&gt;&lt;/a&gt; &lt;a href="https://t.me/lccommunity"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Ftg.sumanjay.workers.dev%2Flccommunity" alt="Telegram" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/3x8qNWxgGZ"&gt;&lt;img src="https://img.shields.io/discord/803299970169700402?label=server&amp;amp;logo=discord" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://github.com/LawnchairLauncher/lawnchair/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/LawnchairLauncher/lawnchair/total.svg?label=GitHub%20Downloads&amp;amp;logo=github" alt="GitHub Downloads" /&gt;&lt;/a&gt; &lt;a href="https://play.google.com/store/apps/details?id=app.lawnchair.play"&gt;&lt;img src="https://img.shields.io/endpoint?color=green&amp;amp;logo=googleplay&amp;amp;logoColor=green&amp;amp;url=https%3A%2F%2Fplay.cuzi.workers.dev%2Fplay%3Fi%3Dapp.lawnchair.play%26l%3DPlay%2520Store%2520Installs%26m%3D%24shortinstalls" alt="Play Store Installs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;picture&gt; 
 &lt;!-- Avoid image being clickable with slight workaround --&gt; 
 &lt;!-- ‚ù§Ô∏è Credit to Raine for the original mockup on the Lawnchair Discord --&gt; 
 &lt;!-- ‚ù§Ô∏è Credit to Lawrence Kayku for the current mockup on Unsplash 
            https://unsplash.com/photos/photography-of-green-leaves-ZVKr8wADhpc 
    --&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="docs/assets/device-frame.png" width="250px" /&gt; 
 &lt;img alt="Google Pixel running Lawnchair Launcher with green wallpaper" src="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/docs/assets/device-frame.png" width="250px" /&gt; 
&lt;/picture&gt; 
&lt;p&gt;Lawnchair is a free, open-source home app for Android. Taking Launcher3‚ÄîAndroid‚Äôs default home app‚Äîas a starting point, it ports Pixel Launcher features and introduces rich customization options.&lt;/p&gt; 
&lt;p&gt;This branch houses the codebase of Lawnchair 15, which is currently in beta and is based on Launcher3 from Android 15. For Lawnchair 9 to 14, see the branches with the &lt;code&gt;9-&lt;/code&gt; to &lt;code&gt;14-&lt;/code&gt; prefixes, respectively.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Material You Theming:&lt;/strong&gt; Adapts to your wallpaper and system theme.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;At a Glance Widget:&lt;/strong&gt; Displays information &lt;em&gt;at a glance&lt;/em&gt; with support for &lt;a href="https://github.com/KieronQuinn/Smartspacer"&gt;Smartspacer&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;QuickSwitch Support:&lt;/strong&gt; Integrates with Android Recents on Android 10 and newer. (requires root)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Global Search:&lt;/strong&gt; Allows quick access to apps, contacts, and web results from the home screen.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customization Options:&lt;/strong&gt; Provides options to tweak icons, fonts, and colors to your liking.&lt;/li&gt; 
 &lt;li&gt;And more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p align="left"&gt; &lt;a href="https://play.google.com/store/apps/details?id=app.lawnchair.play"&gt; 
  &lt;picture&gt; 
   &lt;!-- Avoid image being clickable with slight workaround --&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="docs/assets/badge-google-play.png" height="60" /&gt; 
   &lt;img alt="Get it on Google Play" src="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/docs/assets/badge-google-play.png" height="60" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://apt.izzysoft.de/fdroid/index/apk/app.lawnchair"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="docs/assets/badge-izzyondroid.png" height="60" /&gt; 
   &lt;img alt="Get it on IzzyOnDroid" src="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/docs/assets/badge-izzyondroid.png" height="60" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://apps.obtainium.imranr.dev/redirect?r=obtainium://add/https://github.com/LawnchairLauncher/lawnchair/"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="docs/assets/badge-obtainium.png" height="60" /&gt; 
   &lt;img alt="Get it on Obtainium" src="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/docs/assets/badge-obtainium.png" height="60" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://github.com/LawnchairLauncher/lawnchair/releases"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="docs/assets/badge-github.png" height="60" /&gt; 
   &lt;img alt="Get it on GitHub" src="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/docs/assets/badge-github.png" height="60" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Lawnchair on Play Store will install as a different app from other sources. Some features may be restricted to comply with Google Play's publishing rules.&lt;/p&gt; 
&lt;h3&gt;Development builds&lt;/h3&gt; 
&lt;p&gt;Interested in keeping yourself up-to-date with every Lawnchair development? Try our development builds!&lt;/p&gt; 
&lt;p&gt;These builds offer the latest features and bug fixes at a cost of being slower and introducing new bugs. Ensure that you make backups before installing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Download:&lt;/strong&gt; &lt;a href="https://apps.obtainium.imranr.dev/redirect?r=obtainium://app/%7B%22id%22%3A%22app.lawnchair.nightly%22%2C%22url%22%3A%22https%3A%2F%2Fgithub.com%2Flawnchairlauncher%2Flawnchair%22%2C%22author%22%3A%22Lawnchair%20Launcher%22%2C%22name%22%3A%22Lawnchair%20(Debug)%22%2C%22preferredApkIndex%22%3A0%2C%22additionalSettings%22%3A%22%7B%5C%22includePrereleases%5C%22%3Atrue%2C%5C%22fallbackToOlderReleases%5C%22%3Afalse%2C%5C%22filterReleaseTitlesByRegEx%5C%22%3A%5C%22Lawnchair%20Nightly%5C%22%2C%5C%22filterReleaseNotesByRegEx%5C%22%3A%5C%22%5C%22%2C%5C%22verifyLatestTag%5C%22%3Afalse%2C%5C%22dontSortReleasesList%5C%22%3Afalse%2C%5C%22useLatestAssetDateAsReleaseDate%5C%22%3Afalse%2C%5C%22trackOnly%5C%22%3Afalse%2C%5C%22versionExtractionRegEx%5C%22%3A%5C%22%5C%22%2C%5C%22matchGroupToUse%5C%22%3A%5C%22%5C%22%2C%5C%22versionDetection%5C%22%3Afalse%2C%5C%22releaseDateAsVersion%5C%22%3Atrue%2C%5C%22useVersionCodeAsOSVersion%5C%22%3Afalse%2C%5C%22apkFilterRegEx%5C%22%3A%5C%22%5C%22%2C%5C%22invertAPKFilter%5C%22%3Afalse%2C%5C%22autoApkFilterByArch%5C%22%3Atrue%2C%5C%22appName%5C%22%3A%5C%22%5C%22%2C%5C%22shizukuPretendToBeGooglePlay%5C%22%3Afalse%2C%5C%22exemptFromBackgroundUpdates%5C%22%3Afalse%2C%5C%22skipUpdateNotifications%5C%22%3Afalse%2C%5C%22about%5C%22%3A%5C%22Lawnchair%20is%20a%20free%2C%20open-source%20home%20app%20for%20Android.%20(NOTE%3A%20This%20is%20the%20debug%20version%20of%20Lawnchair%2C%20for%20the%20beta%2Fstable%20versions%20see%20%5C%5C%5C%22Lawnchair%5C%5C%5C%22)%5C%22%7D%22%7D"&gt;Obtainium&lt;/a&gt; ‚Ä¢ &lt;a href="https://github.com/LawnchairLauncher/lawnchair/releases/tag/nightly"&gt;GitHub&lt;/a&gt; ‚Ä¢ &lt;a href="https://nightly.link/LawnchairLauncher/lawnchair/workflows/ci/15-dev"&gt;nightly.link&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Verification&lt;/h3&gt; 
&lt;p&gt;Verify the integrity of your Lawnchair download using these SHA-256 hashes:&lt;/p&gt; 
&lt;h6&gt;Google Play&lt;/h6&gt; 
&lt;pre&gt;&lt;code&gt;47:AC:92:63:1C:60:35:13:CC:8D:26:DD:9C:FF:E0:71:9A:8B:36:55:44:DC:CE:C2:09:58:24:EC:25:61:20:A7
&lt;/code&gt;&lt;/pre&gt; 
&lt;h6&gt;Elsewhere&lt;/h6&gt; 
&lt;pre&gt;&lt;code&gt;74:7C:36:45:B3:57:25:8B:2E:23:E8:51:E5:3C:96:74:7F:E0:AD:D0:07:E5:BA:2C:D9:7E:8C:85:57:2E:4D:C5
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please visit the &lt;a href="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/CONTRIBUTING.md"&gt;Lawnchair Contributing Guidelines&lt;/a&gt; for information and tips on contributing to Lawnchair.&lt;/p&gt; 
&lt;h2&gt;Supporting Lawnchair&lt;/h2&gt; 
&lt;p&gt;If you love what we do, consider &lt;a href="https://opencollective.com/lawnchair"&gt;supporting us on Open Collective&lt;/a&gt;! Your contributions help keep Lawnchair independent and enable us to develop faster.&lt;/p&gt; 
&lt;p&gt;A huge thank you to our &lt;strong&gt;Core Backers ($5+)&lt;/strong&gt;: &lt;em&gt;(These backers directly fund our Project Velocity Fund)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/lawnchair"&gt;&lt;img src="https://opencollective.com/lawnchair/tiers/backer.svg?avatarHeight=64&amp;amp;width=890&amp;amp;button=false" alt="Core Backers" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/lawnchair"&gt;Become a supporter&lt;/a&gt; to help us cover our operational costs, or become a Core Backer to be featured here!&lt;/p&gt; 
&lt;h2&gt;Quick links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://lawnchair.app"&gt;Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://t.me/lawnchairci"&gt;News on Telegram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.com/invite/3x8qNWxgGZ"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/lawnchairapp"&gt;Lawnchair on X (formerly Twitter)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://xdaforums.com/t/lawnchair-customizable-pixel-launcher.3627137/"&gt;&lt;em&gt;XDA&lt;/em&gt; thread&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can view all our links in the &lt;a href="https://github.com/LawnchairLauncher/lawnchair/wiki"&gt;Lawnchair Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- Download link --&gt;</description>
    </item>
    
    <item>
      <title>ReactiveX/RxJava</title>
      <link>https://github.com/ReactiveX/RxJava</link>
      <description>&lt;p&gt;RxJava ‚Äì Reactive Extensions for the JVM ‚Äì a library for composing asynchronous and event-based programs using observable sequences for the Java VM.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RxJava: Reactive Extensions for the JVM&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/ReactiveX/RxJava/actions?query=workflow%3ASnapshot"&gt;&lt;img src="https://github.com/ReactiveX/RxJava/workflows/Snapshot/badge.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/ReactiveX/RxJava/branch/3.x"&gt;&lt;img src="http://codecov.io/github/ReactiveX/RxJava/coverage.svg?branch=3.x" alt="codecov.io" /&gt;&lt;/a&gt; &lt;a href="https://maven-badges.herokuapp.com/maven-central/io.reactivex.rxjava3/rxjava"&gt;&lt;img src="https://maven-badges.herokuapp.com/maven-central/io.reactivex.rxjava3/rxjava/badge.svg?sanitize=true" alt="Maven Central" /&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/ReactiveX/RxJava"&gt;&lt;img src="https://img.shields.io/badge/Contribute%20with-Gitpod-908a85?logo=gitpod" alt="Contribute with Gitpod" /&gt;&lt;/a&gt; &lt;a href="https://securityscorecards.dev/viewer/?uri=github.com/ReactiveX/RxJava"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/ReactiveX/RxJava/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;RxJava is a Java VM implementation of &lt;a href="http://reactivex.io"&gt;Reactive Extensions&lt;/a&gt;: a library for composing asynchronous and event-based programs by using observable sequences.&lt;/p&gt; 
&lt;p&gt;It extends the &lt;a href="http://en.wikipedia.org/wiki/Observer_pattern"&gt;observer pattern&lt;/a&gt; to support sequences of data/events and adds operators that allow you to compose sequences together declaratively while abstracting away concerns about things like low-level threading, synchronization, thread-safety and concurrent data structures.&lt;/p&gt; 
&lt;h4&gt;Version 3.x (&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/"&gt;Javadoc&lt;/a&gt;)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Single dependency: &lt;a href="https://github.com/reactive-streams/reactive-streams-jvm"&gt;Reactive-Streams&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Java 8+ or Android API 21+ required.&lt;/li&gt; 
 &lt;li&gt;Java 8 lambda-friendly API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ReactiveX/RxAndroid"&gt;Android&lt;/a&gt; desugar friendly.&lt;/li&gt; 
 &lt;li&gt;Fixed API mistakes and many limits of RxJava 2.&lt;/li&gt; 
 &lt;li&gt;Intended to be a replacement for RxJava 2 with relatively few binary incompatible changes.&lt;/li&gt; 
 &lt;li&gt;Non-opinionated about the source of concurrency (threads, pools, event loops, fibers, actors, etc.).&lt;/li&gt; 
 &lt;li&gt;Async or synchronous execution.&lt;/li&gt; 
 &lt;li&gt;Virtual time and schedulers for parameterized concurrency.&lt;/li&gt; 
 &lt;li&gt;Test and diagnostic support via test schedulers, test consumers and plugin hooks.&lt;/li&gt; 
 &lt;li&gt;Interop with newer JDK versions via 3rd party libraries, such as 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/akarnokd/RxJavaJdk9Interop#rxjavajdk9interop"&gt;Java 9 Flow API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/akarnokd/RxJavaFiberInterop#rxjavafiberinterop"&gt;Java 21 Virtual Threads&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn more about RxJava in general on the &lt;a href="https://github.com/ReactiveX/RxJava/wiki"&gt;Wiki Home&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;‚Ñπ&lt;/span&gt; Please read the &lt;a href="https://github.com/ReactiveX/RxJava/wiki/What's-different-in-3.0"&gt;What's different in 3.0&lt;/a&gt; for details on the changes and migration information when upgrading from 2.x.&lt;/p&gt; 
&lt;h4&gt;Version 2.x&lt;/h4&gt; 
&lt;p&gt;The &lt;a href="https://github.com/ReactiveX/RxJava/tree/2.x"&gt;2.x version&lt;/a&gt; is end-of-life as of &lt;strong&gt;February 28, 2021&lt;/strong&gt;. No further development, support, maintenance, PRs and updates will happen. The &lt;a href="https://raw.githubusercontent.com/ReactiveX/RxJava/3.x/%5BJavadoc%5D(http://reactivex.io/RxJava/2.x/javadoc/)"&gt;Javadoc&lt;/a&gt; of the very last version, &lt;strong&gt;2.2.21&lt;/strong&gt;, will remain accessible.&lt;/p&gt; 
&lt;h4&gt;Version 1.x&lt;/h4&gt; 
&lt;p&gt;The &lt;a href="https://github.com/ReactiveX/RxJava/tree/1.x"&gt;1.x version&lt;/a&gt; is end-of-life as of &lt;strong&gt;March 31, 2018&lt;/strong&gt;. No further development, support, maintenance, PRs and updates will happen. The &lt;a href="https://raw.githubusercontent.com/ReactiveX/RxJava/3.x/%5BJavadoc%5D(http://reactivex.io/RxJava/1.x/javadoc/)"&gt;Javadoc&lt;/a&gt; of the very last version, &lt;strong&gt;1.3.8&lt;/strong&gt;, will remain accessible.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Setting up the dependency&lt;/h3&gt; 
&lt;p&gt;The first step is to include RxJava 3 into your project, for example, as a Gradle compile dependency:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;implementation "io.reactivex.rxjava3:rxjava:3.x.y"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(Please replace &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; with the latest version numbers: &lt;a href="https://maven-badges.herokuapp.com/maven-central/io.reactivex.rxjava3/rxjava"&gt;&lt;img src="https://maven-badges.herokuapp.com/maven-central/io.reactivex.rxjava3/rxjava/badge.svg?sanitize=true" alt="Maven Central" /&gt;&lt;/a&gt; )&lt;/p&gt; 
&lt;h3&gt;Hello World&lt;/h3&gt; 
&lt;p&gt;The second is to write the &lt;strong&gt;Hello World&lt;/strong&gt; program:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;package rxjava.examples;

import io.reactivex.rxjava3.core.*;

public class HelloWorld {
    public static void main(String[] args) {
        Flowable.just("Hello world").subscribe(System.out::println);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that RxJava 3 components now live under &lt;code&gt;io.reactivex.rxjava3&lt;/code&gt; and the base classes and interfaces live under &lt;code&gt;io.reactivex.rxjava3.core&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Base classes&lt;/h3&gt; 
&lt;p&gt;RxJava 3 features several base classes you can discover operators on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Flowable.html"&gt;&lt;code&gt;io.reactivex.rxjava3.core.Flowable&lt;/code&gt;&lt;/a&gt;: 0..N flows, supporting Reactive-Streams and backpressure&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Observable.html"&gt;&lt;code&gt;io.reactivex.rxjava3.core.Observable&lt;/code&gt;&lt;/a&gt;: 0..N flows, no backpressure,&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Single.html"&gt;&lt;code&gt;io.reactivex.rxjava3.core.Single&lt;/code&gt;&lt;/a&gt;: a flow of exactly 1 item or an error,&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Completable.html"&gt;&lt;code&gt;io.reactivex.rxjava3.core.Completable&lt;/code&gt;&lt;/a&gt;: a flow without items but only a completion or error signal,&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Maybe.html"&gt;&lt;code&gt;io.reactivex.rxjava3.core.Maybe&lt;/code&gt;&lt;/a&gt;: a flow with no items, exactly one item or an error.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Some terminology&lt;/h3&gt; 
&lt;h4&gt;Upstream, downstream&lt;/h4&gt; 
&lt;p&gt;The dataflows in RxJava consist of a source, zero or more intermediate steps followed by a data consumer or combinator step (where the step is responsible to consume the dataflow by some means):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;source.operator1().operator2().operator3().subscribe(consumer);

source.flatMap(value -&amp;gt; source.operator1().operator2().operator3());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here, if we imagine ourselves on &lt;code&gt;operator2&lt;/code&gt;, looking to the left towards the source is called the &lt;strong&gt;upstream&lt;/strong&gt;. Looking to the right towards the subscriber/consumer is called the &lt;strong&gt;downstream&lt;/strong&gt;. This is often more apparent when each element is written on a separate line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;source
  .operator1()
  .operator2()
  .operator3()
  .subscribe(consumer)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Objects in motion&lt;/h4&gt; 
&lt;p&gt;In RxJava's documentation, &lt;strong&gt;emission&lt;/strong&gt;, &lt;strong&gt;emits&lt;/strong&gt;, &lt;strong&gt;item&lt;/strong&gt;, &lt;strong&gt;event&lt;/strong&gt;, &lt;strong&gt;signal&lt;/strong&gt;, &lt;strong&gt;data&lt;/strong&gt; and &lt;strong&gt;message&lt;/strong&gt; are considered synonyms and represent the object traveling along the dataflow.&lt;/p&gt; 
&lt;h4&gt;Backpressure&lt;/h4&gt; 
&lt;p&gt;When the dataflow runs through asynchronous steps, each step may perform different things with different speed. To avoid overwhelming such steps, which usually would manifest itself as increased memory usage due to temporary buffering or the need for skipping/dropping data, so-called backpressure is applied, which is a form of flow control where the steps can express how many items are they ready to process. This allows constraining the memory usage of the dataflows in situations where there is generally no way for a step to know how many items the upstream will send to it.&lt;/p&gt; 
&lt;p&gt;In RxJava, the dedicated &lt;code&gt;Flowable&lt;/code&gt; class is designated to support backpressure and &lt;code&gt;Observable&lt;/code&gt; is dedicated to the non-backpressured operations (short sequences, GUI interactions, etc.). The other types, &lt;code&gt;Single&lt;/code&gt;, &lt;code&gt;Maybe&lt;/code&gt; and &lt;code&gt;Completable&lt;/code&gt; don't support backpressure nor should they; there is always room to store one item temporarily.&lt;/p&gt; 
&lt;h4&gt;Assembly time&lt;/h4&gt; 
&lt;p&gt;The preparation of dataflows by applying various intermediate operators happens in the so-called &lt;strong&gt;assembly time&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;Integer&amp;gt; flow = Flowable.range(1, 5)
.map(v -&amp;gt; v * v)
.filter(v -&amp;gt; v % 3 == 0)
;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At this point, the data is not flowing yet and no side-effects are happening.&lt;/p&gt; 
&lt;h4&gt;Subscription time&lt;/h4&gt; 
&lt;p&gt;This is a temporary state when &lt;code&gt;subscribe()&lt;/code&gt; is called on a flow that establishes the chain of processing steps internally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;flow.subscribe(System.out::println)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is when the &lt;strong&gt;subscription side-effects&lt;/strong&gt; are triggered (see &lt;code&gt;doOnSubscribe&lt;/code&gt;). Some sources block or start emitting items right away in this state.&lt;/p&gt; 
&lt;h4&gt;Runtime&lt;/h4&gt; 
&lt;p&gt;This is the state when the flows are actively emitting items, errors or completion signals:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;
Observable.create(emitter -&amp;gt; {
     while (!emitter.isDisposed()) {
         long time = System.currentTimeMillis();
         emitter.onNext(time);
         if (time % 2 != 0) {
             emitter.onError(new IllegalStateException("Odd millisecond!"));
             break;
         }
     }
})
.subscribe(System.out::println, Throwable::printStackTrace);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Practically, this is when the body of the given example above executes.&lt;/p&gt; 
&lt;h3&gt;Simple background computation&lt;/h3&gt; 
&lt;p&gt;One of the common use cases for RxJava is to run some computation, network request on a background thread and show the results (or error) on the UI thread:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;import io.reactivex.rxjava3.schedulers.Schedulers;

Flowable.fromCallable(() -&amp;gt; {
    Thread.sleep(1000); //  imitate expensive computation
    return "Done";
})
  .subscribeOn(Schedulers.io())
  .observeOn(Schedulers.single())
  .subscribe(System.out::println, Throwable::printStackTrace);

Thread.sleep(2000); // &amp;lt;--- wait for the flow to finish
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This style of chaining methods is called a &lt;strong&gt;fluent API&lt;/strong&gt; which resembles the &lt;strong&gt;builder pattern&lt;/strong&gt;. However, RxJava's reactive types are immutable; each of the method calls returns a new &lt;code&gt;Flowable&lt;/code&gt; with added behavior. To illustrate, the example can be rewritten as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;String&amp;gt; source = Flowable.fromCallable(() -&amp;gt; {
    Thread.sleep(1000); //  imitate expensive computation
    return "Done";
});

Flowable&amp;lt;String&amp;gt; runBackground = source.subscribeOn(Schedulers.io());

Flowable&amp;lt;String&amp;gt; showForeground = runBackground.observeOn(Schedulers.single());

showForeground.subscribe(System.out::println, Throwable::printStackTrace);

Thread.sleep(2000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Typically, you can move computations or blocking IO to some other thread via &lt;code&gt;subscribeOn&lt;/code&gt;. Once the data is ready, you can make sure they get processed on the foreground or GUI thread via &lt;code&gt;observeOn&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Schedulers&lt;/h3&gt; 
&lt;p&gt;RxJava operators don't work with &lt;code&gt;Thread&lt;/code&gt;s or &lt;code&gt;ExecutorService&lt;/code&gt;s directly but with so-called &lt;code&gt;Scheduler&lt;/code&gt;s that abstract away sources of concurrency behind a uniform API. RxJava 3 features several standard schedulers accessible via &lt;code&gt;Schedulers&lt;/code&gt; utility class.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Schedulers.computation()&lt;/code&gt;: Run computation intensive work on a fixed number of dedicated threads in the background. Most asynchronous operators use this as their default &lt;code&gt;Scheduler&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Schedulers.io()&lt;/code&gt;: Run I/O-like or blocking operations on a dynamically changing set of threads.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Schedulers.single()&lt;/code&gt;: Run work on a single thread in a sequential and FIFO manner.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Schedulers.trampoline()&lt;/code&gt;: Run work in a sequential and FIFO manner in one of the participating threads, usually for testing purposes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These are available on all JVM platforms but some specific platforms, such as Android, have their own typical &lt;code&gt;Scheduler&lt;/code&gt;s defined: &lt;code&gt;AndroidSchedulers.mainThread()&lt;/code&gt;, &lt;code&gt;SwingScheduler.instance()&lt;/code&gt; or &lt;code&gt;JavaFXScheduler.platform()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In addition, there is an option to wrap an existing &lt;code&gt;Executor&lt;/code&gt; (and its subtypes such as &lt;code&gt;ExecutorService&lt;/code&gt;) into a &lt;code&gt;Scheduler&lt;/code&gt; via &lt;code&gt;Schedulers.from(Executor)&lt;/code&gt;. This can be used, for example, to have a larger but still fixed pool of threads (unlike &lt;code&gt;computation()&lt;/code&gt; and &lt;code&gt;io()&lt;/code&gt; respectively).&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;Thread.sleep(2000);&lt;/code&gt; at the end is no accident. In RxJava the default &lt;code&gt;Scheduler&lt;/code&gt;s run on daemon threads, which means once the Java main thread exits, they all get stopped and background computations may never happen. Sleeping for some time in this example situations lets you see the output of the flow on the console with time to spare.&lt;/p&gt; 
&lt;h3&gt;Concurrency within a flow&lt;/h3&gt; 
&lt;p&gt;Flows in RxJava are sequential in nature split into processing stages that may run &lt;strong&gt;concurrently&lt;/strong&gt; with each other:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable.range(1, 10)
  .observeOn(Schedulers.computation())
  .map(v -&amp;gt; v * v)
  .blockingSubscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example flow squares the numbers from 1 to 10 on the &lt;strong&gt;computation&lt;/strong&gt; &lt;code&gt;Scheduler&lt;/code&gt; and consumes the results on the "main" thread (more precisely, the caller thread of &lt;code&gt;blockingSubscribe&lt;/code&gt;). However, the lambda &lt;code&gt;v -&amp;gt; v * v&lt;/code&gt; doesn't run in parallel for this flow; it receives the values 1 to 10 on the same computation thread one after the other.&lt;/p&gt; 
&lt;h3&gt;Parallel processing&lt;/h3&gt; 
&lt;p&gt;Processing the numbers 1 to 10 in parallel is a bit more involved:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable.range(1, 10)
  .flatMap(v -&amp;gt;
      Flowable.just(v)
        .subscribeOn(Schedulers.computation())
        .map(w -&amp;gt; w * w)
  )
  .blockingSubscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Practically, parallelism in RxJava means running independent flows and merging their results back into a single flow. The operator &lt;code&gt;flatMap&lt;/code&gt; does this by first mapping each number from 1 to 10 into its own individual &lt;code&gt;Flowable&lt;/code&gt;, runs them and merges the computed squares.&lt;/p&gt; 
&lt;p&gt;Note, however, that &lt;code&gt;flatMap&lt;/code&gt; doesn't guarantee any order and the items from the inner flows may end up interleaved. There are alternative operators:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;concatMap&lt;/code&gt; that maps and runs one inner flow at a time and&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;concatMapEager&lt;/code&gt; which runs all inner flows "at once" but the output flow will be in the order those inner flows were created.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Alternatively, the &lt;code&gt;Flowable.parallel()&lt;/code&gt; operator and the &lt;code&gt;ParallelFlowable&lt;/code&gt; type help achieve the same parallel processing pattern:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable.range(1, 10)
  .parallel()
  .runOn(Schedulers.computation())
  .map(v -&amp;gt; v * v)
  .sequential()
  .blockingSubscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Dependent sub-flows&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;flatMap&lt;/code&gt; is a powerful operator and helps in a lot of situations. For example, given a service that returns a &lt;code&gt;Flowable&lt;/code&gt;, we'd like to call another service with values emitted by the first service:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;Inventory&amp;gt; inventorySource = warehouse.getInventoryAsync();

inventorySource
    .flatMap(inventoryItem -&amp;gt; erp.getDemandAsync(inventoryItem.getId())
            .map(demand -&amp;gt; "Item " + inventoryItem.getName() + " has demand " + demand))
    .subscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Continuations&lt;/h3&gt; 
&lt;p&gt;Sometimes, when an item has become available, one would like to perform some dependent computations on it. This is sometimes called &lt;strong&gt;continuations&lt;/strong&gt; and, depending on what should happen and what types are involved, may involve various operators to accomplish.&lt;/p&gt; 
&lt;h4&gt;Dependent&lt;/h4&gt; 
&lt;p&gt;The most typical scenario is to given a value, invoke another service, await and continue with its result:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;service.apiCall()
.flatMap(value -&amp;gt; service.anotherApiCall(value))
.flatMap(next -&amp;gt; service.finalCall(next))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is often the case also that later sequences would require values from earlier mappings. This can be achieved by moving the outer &lt;code&gt;flatMap&lt;/code&gt; into the inner parts of the previous &lt;code&gt;flatMap&lt;/code&gt; for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;service.apiCall()
.flatMap(value -&amp;gt;
    service.anotherApiCall(value)
    .flatMap(next -&amp;gt; service.finalCallBoth(value, next))
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here, the original &lt;code&gt;value&lt;/code&gt; will be available inside the inner &lt;code&gt;flatMap&lt;/code&gt;, courtesy of lambda variable capture.&lt;/p&gt; 
&lt;h4&gt;Non-dependent&lt;/h4&gt; 
&lt;p&gt;In other scenarios, the result(s) of the first source/dataflow is irrelevant and one would like to continue with a quasi independent another source. Here, &lt;code&gt;flatMap&lt;/code&gt; works as well:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Observable continued = sourceObservable.flatMapSingle(ignored -&amp;gt; someSingleSource)
continued.map(v -&amp;gt; v.toString())
  .subscribe(System.out::println, Throwable::printStackTrace);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;however, the continuation in this case stays &lt;code&gt;Observable&lt;/code&gt; instead of the likely more appropriate &lt;code&gt;Single&lt;/code&gt;. (This is understandable because from the perspective of &lt;code&gt;flatMapSingle&lt;/code&gt;, &lt;code&gt;sourceObservable&lt;/code&gt; is a multi-valued source and thus the mapping may result in multiple values as well).&lt;/p&gt; 
&lt;p&gt;Often though there is a way that is somewhat more expressive (and also lower overhead) by using &lt;code&gt;Completable&lt;/code&gt; as the mediator and its operator &lt;code&gt;andThen&lt;/code&gt; to resume with something else:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;sourceObservable
  .ignoreElements()           // returns Completable
  .andThen(someSingleSource)
  .map(v -&amp;gt; v.toString())
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The only dependency between the &lt;code&gt;sourceObservable&lt;/code&gt; and the &lt;code&gt;someSingleSource&lt;/code&gt; is that the former should complete normally in order for the latter to be consumed.&lt;/p&gt; 
&lt;h4&gt;Deferred-dependent&lt;/h4&gt; 
&lt;p&gt;Sometimes, there is an implicit data dependency between the previous sequence and the new sequence that, for some reason, was not flowing through the "regular channels". One would be inclined to write such continuations as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;AtomicInteger count = new AtomicInteger();

Observable.range(1, 10)
  .doOnNext(ignored -&amp;gt; count.incrementAndGet())
  .ignoreElements()
  .andThen(Single.just(count.get()))
  .subscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Unfortunately, this prints &lt;code&gt;0&lt;/code&gt; because &lt;code&gt;Single.just(count.get())&lt;/code&gt; is evaluated at &lt;strong&gt;assembly time&lt;/strong&gt; when the dataflow hasn't even run yet. We need something that defers the evaluation of this &lt;code&gt;Single&lt;/code&gt; source until &lt;strong&gt;runtime&lt;/strong&gt; when the main source completes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;AtomicInteger count = new AtomicInteger();

Observable.range(1, 10)
  .doOnNext(ignored -&amp;gt; count.incrementAndGet())
  .ignoreElements()
  .andThen(Single.defer(() -&amp;gt; Single.just(count.get())))
  .subscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;AtomicInteger count = new AtomicInteger();

Observable.range(1, 10)
  .doOnNext(ignored -&amp;gt; count.incrementAndGet())
  .ignoreElements()
  .andThen(Single.fromCallable(() -&amp;gt; count.get()))
  .subscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Type conversions&lt;/h3&gt; 
&lt;p&gt;Sometimes, a source or service returns a different type than the flow that is supposed to work with it. For example, in the inventory example above, &lt;code&gt;getDemandAsync&lt;/code&gt; could return a &lt;code&gt;Single&amp;lt;DemandRecord&amp;gt;&lt;/code&gt;. If the code example is left unchanged, this will result in a compile-time error (however, often with a misleading error message about lack of overload).&lt;/p&gt; 
&lt;p&gt;In such situations, there are usually two options to fix the transformation: 1) convert to the desired type or 2) find and use an overload of the specific operator supporting the different type.&lt;/p&gt; 
&lt;h4&gt;Converting to the desired type&lt;/h4&gt; 
&lt;p&gt;Each reactive base class features operators that can perform such conversions, including the protocol conversions, to match some other type. The following matrix shows the available conversion options:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Flowable&lt;/th&gt; 
   &lt;th&gt;Observable&lt;/th&gt; 
   &lt;th&gt;Single&lt;/th&gt; 
   &lt;th&gt;Maybe&lt;/th&gt; 
   &lt;th&gt;Completable&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Flowable&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toObservable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;first&lt;/code&gt;, &lt;code&gt;firstOrError&lt;/code&gt;, &lt;code&gt;single&lt;/code&gt;, &lt;code&gt;singleOrError&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;, &lt;code&gt;lastOrError&lt;/code&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;firstElement&lt;/code&gt;, &lt;code&gt;singleElement&lt;/code&gt;, &lt;code&gt;lastElement&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ignoreElements&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Observable&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toFlowable&lt;/code&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;first&lt;/code&gt;, &lt;code&gt;firstOrError&lt;/code&gt;, &lt;code&gt;single&lt;/code&gt;, &lt;code&gt;singleOrError&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;, &lt;code&gt;lastOrError&lt;/code&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;firstElement&lt;/code&gt;, &lt;code&gt;singleElement&lt;/code&gt;, &lt;code&gt;lastElement&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ignoreElements&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Single&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toFlowable&lt;/code&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toObservable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toMaybe&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ignoreElement&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Maybe&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toFlowable&lt;/code&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toObservable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toSingle&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ignoreElement&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Completable&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toFlowable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toObservable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toSingle&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toMaybe&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt;: When turning a multi-valued source into a single-valued source, one should decide which of the many source values should be considered as the result.&lt;/p&gt; 
&lt;p&gt;&lt;sup&gt;2&lt;/sup&gt;: Turning an &lt;code&gt;Observable&lt;/code&gt; into &lt;code&gt;Flowable&lt;/code&gt; requires an additional decision: what to do with the potential unconstrained flow of the source &lt;code&gt;Observable&lt;/code&gt;? There are several strategies available (such as buffering, dropping, keeping the latest) via the &lt;code&gt;BackpressureStrategy&lt;/code&gt; parameter or via standard &lt;code&gt;Flowable&lt;/code&gt; operators such as &lt;code&gt;onBackpressureBuffer&lt;/code&gt;, &lt;code&gt;onBackpressureDrop&lt;/code&gt;, &lt;code&gt;onBackpressureLatest&lt;/code&gt; which also allow further customization of the backpressure behavior.&lt;/p&gt; 
&lt;p&gt;&lt;sup&gt;3&lt;/sup&gt;: When there is only (at most) one source item, there is no problem with backpressure as it can be always stored until the downstream is ready to consume.&lt;/p&gt; 
&lt;h4&gt;Using an overload with the desired type&lt;/h4&gt; 
&lt;p&gt;Many frequently used operator has overloads that can deal with the other types. These are usually named with the suffix of the target type:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Operator&lt;/th&gt; 
   &lt;th&gt;Overloads&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;flatMap&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;flatMapSingle&lt;/code&gt;, &lt;code&gt;flatMapMaybe&lt;/code&gt;, &lt;code&gt;flatMapCompletable&lt;/code&gt;, &lt;code&gt;flatMapIterable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;concatMap&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;concatMapSingle&lt;/code&gt;, &lt;code&gt;concatMapMaybe&lt;/code&gt;, &lt;code&gt;concatMapCompletable&lt;/code&gt;, &lt;code&gt;concatMapIterable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;switchMap&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;switchMapSingle&lt;/code&gt;, &lt;code&gt;switchMapMaybe&lt;/code&gt;, &lt;code&gt;switchMapCompletable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The reason these operators have a suffix instead of simply having the same name with different signature is type erasure. Java doesn't consider signatures such as &lt;code&gt;operator(Function&amp;lt;T, Single&amp;lt;R&amp;gt;&amp;gt;)&lt;/code&gt; and &lt;code&gt;operator(Function&amp;lt;T, Maybe&amp;lt;R&amp;gt;&amp;gt;)&lt;/code&gt; different (unlike C#) and due to erasure, the two &lt;code&gt;operator&lt;/code&gt;s would end up as duplicate methods with the same signature.&lt;/p&gt; 
&lt;h3&gt;Operator naming conventions&lt;/h3&gt; 
&lt;p&gt;Naming in programming is one of the hardest things as names are expected to be not long, expressive, capturing and easily memorable. Unfortunately, the target language (and pre-existing conventions) may not give too much help in this regard (unusable keywords, type erasure, type ambiguities, etc.).&lt;/p&gt; 
&lt;h4&gt;Unusable keywords&lt;/h4&gt; 
&lt;p&gt;In the original Rx.NET, the operator that emits a single item and then completes is called &lt;code&gt;Return(T)&lt;/code&gt;. Since the Java convention is to have a lowercase letter start a method name, this would have been &lt;code&gt;return(T)&lt;/code&gt; which is a keyword in Java and thus not available. Therefore, RxJava chose to name this operator &lt;code&gt;just(T)&lt;/code&gt;. The same limitation exists for the operator &lt;code&gt;Switch&lt;/code&gt;, which had to be named &lt;code&gt;switchOnNext&lt;/code&gt;. Yet another example is &lt;code&gt;Catch&lt;/code&gt; which was named &lt;code&gt;onErrorResumeNext&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Type erasure&lt;/h4&gt; 
&lt;p&gt;Many operators that expect the user to provide some function returning a reactive type can't be overloaded because the type erasure around a &lt;code&gt;Function&amp;lt;T, X&amp;gt;&lt;/code&gt; turns such method signatures into duplicates. RxJava chose to name such operators by appending the type as suffix as well:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;R&amp;gt; flatMap(Function&amp;lt;? super T, ? extends Publisher&amp;lt;? extends R&amp;gt;&amp;gt; mapper)

Flowable&amp;lt;R&amp;gt; flatMapMaybe(Function&amp;lt;? super T, ? extends MaybeSource&amp;lt;? extends R&amp;gt;&amp;gt; mapper)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Type ambiguities&lt;/h4&gt; 
&lt;p&gt;Even though certain operators have no problems from type erasure, their signature may turn up being ambiguous, especially if one uses Java 8 and lambdas. For example, there are several overloads of &lt;code&gt;concatWith&lt;/code&gt; taking the various other reactive base types as arguments (for providing convenience and performance benefits in the underlying implementation):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;T&amp;gt; concatWith(Publisher&amp;lt;? extends T&amp;gt; other);

Flowable&amp;lt;T&amp;gt; concatWith(SingleSource&amp;lt;? extends T&amp;gt; other);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Both &lt;code&gt;Publisher&lt;/code&gt; and &lt;code&gt;SingleSource&lt;/code&gt; appear as functional interfaces (types with one abstract method) and may encourage users to try to provide a lambda expression:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;someSource.concatWith(s -&amp;gt; Single.just(2))
.subscribe(System.out::println, Throwable::printStackTrace);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Unfortunately, this approach doesn't work and the example does not print &lt;code&gt;2&lt;/code&gt; at all. In fact, since version 2.1.10, it doesn't even compile because at least 4 &lt;code&gt;concatWith&lt;/code&gt; overloads exist and the compiler finds the code above ambiguous.&lt;/p&gt; 
&lt;p&gt;The user in such situations probably wanted to defer some computation until the &lt;code&gt;someSource&lt;/code&gt; has completed, thus the correct unambiguous operator should have been &lt;code&gt;defer&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;someSource.concatWith(Single.defer(() -&amp;gt; Single.just(2)))
.subscribe(System.out::println, Throwable::printStackTrace);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Sometimes, a suffix is added to avoid logical ambiguities that may compile but produce the wrong type in a flow:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;T&amp;gt; merge(Publisher&amp;lt;? extends Publisher&amp;lt;? extends T&amp;gt;&amp;gt; sources);

Flowable&amp;lt;T&amp;gt; mergeArray(Publisher&amp;lt;? extends T&amp;gt;... sources);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This can get also ambiguous when functional interface types get involved as the type argument &lt;code&gt;T&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Error handling&lt;/h4&gt; 
&lt;p&gt;Dataflows can fail, at which point the error is emitted to the consumer(s). Sometimes though, multiple sources may fail at which point there is a choice whether or not wait for all of them to complete or fail. To indicate this opportunity, many operator names are suffixed with the &lt;code&gt;DelayError&lt;/code&gt; words (while others feature a &lt;code&gt;delayError&lt;/code&gt; or &lt;code&gt;delayErrors&lt;/code&gt; boolean flag in one of their overloads):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;T&amp;gt; concat(Publisher&amp;lt;? extends Publisher&amp;lt;? extends T&amp;gt;&amp;gt; sources);

Flowable&amp;lt;T&amp;gt; concatDelayError(Publisher&amp;lt;? extends Publisher&amp;lt;? extends T&amp;gt;&amp;gt; sources);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Of course, suffixes of various kinds may appear together:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;T&amp;gt; concatArrayEagerDelayError(Publisher&amp;lt;? extends T&amp;gt;... sources);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Base class vs base type&lt;/h4&gt; 
&lt;p&gt;The base classes can be considered heavy due to the sheer number of static and instance methods on them. RxJava 3's design was heavily influenced by the &lt;a href="https://github.com/reactive-streams/reactive-streams-jvm#reactive-streams"&gt;Reactive Streams&lt;/a&gt; specification, therefore, the library features a class and an interface per each reactive type:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Class&lt;/th&gt; 
   &lt;th&gt;Interface&lt;/th&gt; 
   &lt;th&gt;Consumer&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;0..N backpressured&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Flowable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Publisher&lt;/code&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Subscriber&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;0..N unbounded&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ObservableSource&lt;/code&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observer&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1 element or error&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Single&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;SingleSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;SingleObserver&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;0..1 element or error&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Maybe&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;MaybeSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;MaybeObserver&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;0 element or error&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Completable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CompletableSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CompletableObserver&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt;The &lt;code&gt;org.reactivestreams.Publisher&lt;/code&gt; is part of the external Reactive Streams library. It is the main type to interact with other reactive libraries through a standardized mechanism governed by the &lt;a href="https://github.com/reactive-streams/reactive-streams-jvm#specification"&gt;Reactive Streams specification&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;sup&gt;2&lt;/sup&gt;The naming convention of the interface was to append &lt;code&gt;Source&lt;/code&gt; to the semi-traditional class name. There is no &lt;code&gt;FlowableSource&lt;/code&gt; since &lt;code&gt;Publisher&lt;/code&gt; is provided by the Reactive Streams library (and subtyping it wouldn't have helped with interoperation either). These interfaces are, however, not standard in the sense of the Reactive Streams specification and are currently RxJava specific only.&lt;/p&gt; 
&lt;h3&gt;R8 and ProGuard settings&lt;/h3&gt; 
&lt;p&gt;By default, RxJava itself doesn't require any ProGuard/R8 settings and should work without problems. Unfortunately, the Reactive Streams dependency since version 1.0.3 has embedded Java 9 class files in its JAR that can cause warnings with the plain ProGuard:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Warning: org.reactivestreams.FlowAdapters$FlowPublisherFromReactive: can't find superclass or interface java.util.concurrent.Flow$Publisher
Warning: org.reactivestreams.FlowAdapters$FlowToReactiveProcessor: can't find superclass or interface java.util.concurrent.Flow$Processor
Warning: org.reactivestreams.FlowAdapters$FlowToReactiveSubscriber: can't find superclass or interface java.util.concurrent.Flow$Subscriber
Warning: org.reactivestreams.FlowAdapters$FlowToReactiveSubscription: can't find superclass or interface java.util.concurrent.Flow$Subscription
Warning: org.reactivestreams.FlowAdapters: can't find referenced class java.util.concurrent.Flow$Publisher
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is recommended one sets up the following &lt;code&gt;-dontwarn&lt;/code&gt; entry in the application's &lt;code&gt;proguard-ruleset&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;-dontwarn java.util.concurrent.Flow*
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For R8, the RxJava jar includes the &lt;code&gt;META-INF/proguard/rxjava3.pro&lt;/code&gt; with the same no-warning clause and should apply automatically.&lt;/p&gt; 
&lt;h3&gt;Further reading&lt;/h3&gt; 
&lt;p&gt;For further details, consult the &lt;a href="https://github.com/ReactiveX/RxJava/wiki"&gt;wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Communication&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Google Group: &lt;a href="http://groups.google.com/d/forum/rxjava"&gt;RxJava&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href="http://twitter.com/RxJava"&gt;@RxJava&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ReactiveX/RxJava/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;StackOverflow: &lt;a href="http://stackoverflow.com/questions/tagged/rx-java"&gt;rx-java&lt;/a&gt;, &lt;a href="http://stackoverflow.com/questions/tagged/rx-java2"&gt;rx-java2&lt;/a&gt; and &lt;a href="http://stackoverflow.com/questions/tagged/rx-java3"&gt;rx-java3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitter.im/ReactiveX/RxJava"&gt;Gitter.im&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;Version 3.x is in development. Bugfixes will be applied to both 2.x and 3.x branches, but new features will only be added to 3.x.&lt;/p&gt; 
&lt;p&gt;Minor 3.x increments (such as 3.1, 3.2, etc) will occur when non-trivial new functionality is added or significant enhancements or bug fixes occur that may have behavioral changes that may affect some edge cases (such as dependence on behavior resulting from a bug). An example of an enhancement that would classify as this is adding reactive pull backpressure support to an operator that previously did not support it. This should be backwards compatible but does behave differently.&lt;/p&gt; 
&lt;p&gt;Patch 3.x.y increments (such as 3.0.0 -&amp;gt; 3.0.1, 3.3.1 -&amp;gt; 3.3.2, etc) will occur for bug fixes and trivial functionality (like adding a method overload). New functionality marked with an &lt;a href="https://github.com/ReactiveX/RxJava/raw/3.x/src/main/java/io/reactivex/rxjava3/annotations/Beta.java"&gt;&lt;code&gt;@Beta&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://github.com/ReactiveX/RxJava/raw/3.x/src/main/java/io/reactivex/rxjava3/annotations/Experimental.java"&gt;&lt;code&gt;@Experimental&lt;/code&gt;&lt;/a&gt; annotation can also be added in the patch releases to allow rapid exploration and iteration of unstable new functionality.&lt;/p&gt; 
&lt;h4&gt;@Beta&lt;/h4&gt; 
&lt;p&gt;APIs marked with the &lt;a href="https://github.com/ReactiveX/RxJava/raw/3.x/src/main/java/io/reactivex/rxjava3/annotations/Beta.java"&gt;&lt;code&gt;@Beta&lt;/code&gt;&lt;/a&gt; annotation at the class or method level are subject to change. They can be modified in any way, or even removed, at any time. If your code is a library itself (i.e. it is used on the CLASSPATH of users outside your control), you should not use beta APIs, unless you repackage them (e.g. using ProGuard, shading, etc).&lt;/p&gt; 
&lt;h4&gt;@Experimental&lt;/h4&gt; 
&lt;p&gt;APIs marked with the &lt;a href="https://github.com/ReactiveX/RxJava/raw/3.x/src/main/java/io/reactivex/rxjava3/annotations/Experimental.java"&gt;&lt;code&gt;@Experimental&lt;/code&gt;&lt;/a&gt; annotation at the class or method level will almost certainly change. They can be modified in any way, or even removed, at any time. You should not use or rely on them in any production code. They are purely to allow broad testing and feedback.&lt;/p&gt; 
&lt;h4&gt;@Deprecated&lt;/h4&gt; 
&lt;p&gt;APIs marked with the &lt;code&gt;@Deprecated&lt;/code&gt; annotation at the class or method level will remain supported until the next major release, but it is recommended to stop using them.&lt;/p&gt; 
&lt;h4&gt;io.reactivex.rxjava3.internal.*&lt;/h4&gt; 
&lt;p&gt;All code inside the &lt;code&gt;io.reactivex.rxjava3.internal.*&lt;/code&gt; packages are considered private API and should not be relied upon at all. It can change at any time.&lt;/p&gt; 
&lt;h2&gt;Full Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ReactiveX/RxJava/wiki"&gt;Wiki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/"&gt;Javadoc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/snapshot/"&gt;Latest snaphot Javadoc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Javadoc of a specific &lt;a href="https://github.com/ReactiveX/RxJava/tags"&gt;release version&lt;/a&gt;: &lt;code&gt;http://reactivex.io/RxJava/3.x/javadoc/3.x.y/&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Binaries&lt;/h2&gt; 
&lt;p&gt;Binaries and dependency information for Maven, Ivy, Gradle and others can be found at &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cio.reactivex.rxjava3"&gt;http://search.maven.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Example for Gradle:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;implementation 'io.reactivex.rxjava3:rxjava:x.y.z'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and for Maven:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;io.reactivex.rxjava3&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;rxjava&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;x.y.z&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and for Ivy:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency org="io.reactivex.rxjava3" name="rxjava" rev="x.y.z" /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Snapshots&lt;/h3&gt; 
&lt;p&gt;Snapshots after May 19st, 2025 are available via &lt;a href="https://central.sonatype.com/repository/maven-snapshots/io/reactivex/rxjava3/rxjava/"&gt;https://central.sonatype.com/repository/maven-snapshots/io/reactivex/rxjava3/rxjava/&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;repositories {
  maven { url 'https://central.sonatype.com/repository/maven-snapshots' }
}

dependencies {
  implementation 'io.reactivex.rxjava3:rxjava:3.0.0-SNAPSHOT'
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;JavaDoc snapshots are available at &lt;a href="https://reactivex.io/RxJava/3.x/javadoc/snapshot"&gt;https://reactivex.io/RxJava/3.x/javadoc/snapshot&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Build&lt;/h2&gt; 
&lt;p&gt;To build:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ git clone git@github.com:ReactiveX/RxJava.git
$ cd RxJava/
$ ./gradlew build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Further details on building can be found on the &lt;a href="https://github.com/ReactiveX/RxJava/wiki/Getting-Started"&gt;Getting Started&lt;/a&gt; page of the wiki.&lt;/p&gt; 
&lt;h2&gt;Bugs and Feedback&lt;/h2&gt; 
&lt;p&gt;For bugs, questions and discussions please use the &lt;a href="https://github.com/ReactiveX/RxJava/issues"&gt;Github Issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;LICENSE&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright (c) 2016-present, RxJava Contributors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>apache/beam</title>
      <link>https://github.com/apache/beam</link>
      <description>&lt;p&gt;Apache Beam is a unified programming model for Batch and Streaming data processing.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Beam&lt;/h1&gt; 
&lt;p&gt;&lt;a href="http://beam.apache.org/"&gt;Apache Beam&lt;/a&gt; is a unified model for defining both batch and streaming data-parallel processing pipelines, as well as a set of language-specific SDKs for constructing pipelines and Runners for executing them on distributed processing backends, including &lt;a href="http://flink.apache.org/"&gt;Apache Flink&lt;/a&gt;, &lt;a href="http://spark.apache.org/"&gt;Apache Spark&lt;/a&gt;, &lt;a href="http://cloud.google.com/dataflow/"&gt;Google Cloud Dataflow&lt;/a&gt;, and &lt;a href="https://hazelcast.com/"&gt;Hazelcast Jet&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;p&gt;&lt;a href="http://search.maven.org/#search%7Cgav%7C1%7Cg:%22org.apache.beam%22"&gt;&lt;img src="https://maven-badges.herokuapp.com/maven-central/org.apache.beam/beam-sdks-java-core/badge.svg?sanitize=true" alt="Maven Version" /&gt;&lt;/a&gt; &lt;a href="https://badge.fury.io/py/apache-beam"&gt;&lt;img src="https://badge.fury.io/py/apache-beam.svg?sanitize=true" alt="PyPI version" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/apache/beam/sdks/v2/go"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/apache/beam/sdks/v2/go.svg?sanitize=true" alt="Go version" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/apache/beam"&gt;&lt;img src="https://codecov.io/gh/apache/beam/branch/master/graph/badge.svg?sanitize=true" alt="Python coverage" /&gt;&lt;/a&gt; &lt;a href="https://github.com/apache/beam/actions?query=workflow%3A%22Build+python+source+distribution+and+wheels%22+branch%3Amaster+event%3Aschedule"&gt;&lt;img src="https://github.com/apache/beam/actions/workflows/build_wheels.yml/badge.svg?event=schedule&amp;amp;&amp;amp;?branch=master" alt="Build python source distribution and wheels" /&gt;&lt;/a&gt; &lt;a href="https://github.com/apache/beam/actions?query=workflow%3A%22Python+Tests%22+branch%3Amaster+event%3Aschedule"&gt;&lt;img src="https://github.com/apache/beam/actions/workflows/python_tests.yml/badge.svg?event=schedule&amp;amp;&amp;amp;?branch=master" alt="Python tests" /&gt;&lt;/a&gt; &lt;a href="https://github.com/apache/beam/actions?query=workflow%3A%22Java+Tests%22+branch%3Amaster+event%3Aschedule"&gt;&lt;img src="https://github.com/apache/beam/actions/workflows/java_tests.yml/badge.svg?event=schedule&amp;amp;&amp;amp;?branch=master" alt="Java tests" /&gt;&lt;/a&gt; &lt;a href="https://github.com/apache/beam/actions?query=workflow%3A%22Go+Tests%22+branch%3Amaster+event%3Aschedule"&gt;&lt;img src="https://github.com/apache/beam/actions/workflows/go_tests.yml/badge.svg?event=schedule&amp;amp;&amp;amp;?branch=master" alt="Go tests" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Beam provides a general approach to expressing &lt;a href="https://en.wikipedia.org/wiki/Embarrassingly_parallel"&gt;embarrassingly parallel&lt;/a&gt; data processing pipelines and supports three categories of users, each of which have relatively disparate backgrounds and needs.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;em&gt;End Users&lt;/em&gt;: Writing pipelines with an existing SDK, running it on an existing runner. These users want to focus on writing their application logic and have everything else just work.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;SDK Writers&lt;/em&gt;: Developing a Beam SDK targeted at a specific user community (Java, Python, Scala, Go, R, graphical, etc). These users are language geeks and would prefer to be shielded from all the details of various runners and their implementations.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Runner Writers&lt;/em&gt;: Have an execution environment for distributed processing and would like to support programs written against the Beam Model. Would prefer to be shielded from details of multiple SDKs.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;The Beam Model&lt;/h3&gt; 
&lt;p&gt;The model behind Beam evolved from several internal Google data processing projects, including &lt;a href="http://research.google.com/archive/mapreduce.html"&gt;MapReduce&lt;/a&gt;, &lt;a href="http://research.google.com/pubs/pub35650.html"&gt;FlumeJava&lt;/a&gt;, and &lt;a href="http://research.google.com/pubs/pub41378.html"&gt;Millwheel&lt;/a&gt;. This model was originally known as the ‚Äú&lt;a href="http://www.vldb.org/pvldb/vol8/p1792-Akidau.pdf"&gt;Dataflow Model&lt;/a&gt;‚Äù.&lt;/p&gt; 
&lt;p&gt;To learn more about the Beam Model (though still under the original name of Dataflow), see the World Beyond Batch: &lt;a href="https://www.oreilly.com/ideas/the-world-beyond-batch-streaming-101"&gt;Streaming 101&lt;/a&gt; and &lt;a href="https://www.oreilly.com/ideas/the-world-beyond-batch-streaming-102"&gt;Streaming 102&lt;/a&gt; posts on O‚ÄôReilly‚Äôs Radar site, and the &lt;a href="http://www.vldb.org/pvldb/vol8/p1792-Akidau.pdf"&gt;VLDB 2015 paper&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The key concepts in the Beam programming model are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;PCollection&lt;/code&gt;: represents a collection of data, which could be bounded or unbounded in size.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PTransform&lt;/code&gt;: represents a computation that transforms input PCollections into output PCollections.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Pipeline&lt;/code&gt;: manages a directed acyclic graph of PTransforms and PCollections that is ready for execution.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PipelineRunner&lt;/code&gt;: specifies where and how the pipeline should execute.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;SDKs&lt;/h3&gt; 
&lt;p&gt;Beam supports multiple language-specific SDKs for writing pipelines against the Beam Model.&lt;/p&gt; 
&lt;p&gt;Currently, this repository contains SDKs for Java, Python and Go.&lt;/p&gt; 
&lt;p&gt;Have ideas for new SDKs or DSLs? See the &lt;a href="https://github.com/apache/beam/issues?q=is%3Aopen+is%3Aissue+label%3Asdk-ideas"&gt;sdk-ideas label&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Specific SDK Readmes&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/apache/beam/master/sdks/python/README.md"&gt;Python SDK readme&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Runners&lt;/h3&gt; 
&lt;p&gt;Beam supports executing programs on multiple distributed processing backends through PipelineRunners. Currently, the following PipelineRunners are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;DirectRunner&lt;/code&gt; runs the pipeline on your local machine.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;PrismRunner&lt;/code&gt; runs the pipeline on your local machine using Beam Portability.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;DataflowRunner&lt;/code&gt; submits the pipeline to the &lt;a href="http://cloud.google.com/dataflow/"&gt;Google Cloud Dataflow&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;FlinkRunner&lt;/code&gt; runs the pipeline on an Apache Flink cluster. The code has been donated from &lt;a href="https://github.com/dataArtisans/flink-dataflow"&gt;dataArtisans/flink-dataflow&lt;/a&gt; and is now part of Beam.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;SparkRunner&lt;/code&gt; runs the pipeline on an Apache Spark cluster.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;JetRunner&lt;/code&gt; runs the pipeline on a Hazelcast Jet cluster. The code has been donated from &lt;a href="https://github.com/hazelcast/hazelcast-jet"&gt;hazelcast/hazelcast-jet&lt;/a&gt; and is now part of Beam.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;Twister2Runner&lt;/code&gt; runs the pipeline on a Twister2 cluster. The code has been donated from &lt;a href="https://github.com/DSC-SPIDAL/twister2"&gt;DSC-SPIDAL/twister2&lt;/a&gt; and is now part of Beam.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Have ideas for new Runners? See the &lt;a href="https://github.com/apache/beam/issues?q=is%3Aopen+is%3Aissue+label%3Arunner-ideas"&gt;runner-ideas label&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Instructions for building and testing Beam itself are in the &lt;a href="https://raw.githubusercontent.com/apache/beam/master/CONTRIBUTING.md"&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üìö Learn More&lt;/h2&gt; 
&lt;p&gt;Here are some resources actively maintained by the Beam community to help you get started:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;b&gt;Details&lt;/b&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://beam.apache.org" target="_blank" rel="noopener noreferrer"&gt;Apache Beam Website&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Our website discussing the project, and it's specifics.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://beam.apache.org/get-started/quickstart-java" target="_blank" rel="noopener noreferrer"&gt;Java Quickstart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A guide to getting started with the Java SDK.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://beam.apache.org/get-started/quickstart-py" target="_blank" rel="noopener noreferrer"&gt;Python Quickstart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A guide to getting started with the Python SDK.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://beam.apache.org/get-started/quickstart-go" target="_blank" rel="noopener noreferrer"&gt;Go Quickstart &lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A guide to getting started with the Go SDK.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://tour.beam.apache.org/" target="_blank" rel="noopener noreferrer"&gt;Tour of Beam &lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A comprehensive, interactive learning experience covering Beam concepts in depth.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.cloudskillsboost.google/course_templates/724" target="_blank" rel="noopener noreferrer"&gt;Beam Quest &lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A certification granted by Google Cloud, certifying proficiency in Beam.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://metrics.beam.apache.org/" target="_blank" rel="noopener noreferrer"&gt;Community Metrics &lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Beam's Git Community Metrics.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Contact Us&lt;/h2&gt; 
&lt;p&gt;To get involved with Apache Beam:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://beam.apache.org/community/contact-us/#:~:text=Subscribe%20and%20Unsubscribe"&gt;Subscribe to&lt;/a&gt; or e-mail the &lt;a href="http://mail-archives.apache.org/mod_mbox/beam-user/"&gt;user@beam.apache.org&lt;/a&gt; list.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://beam.apache.org/community/contact-us/#:~:text=Subscribe%20and%20Unsubscribe"&gt;Subscribe to&lt;/a&gt; or e-mail the &lt;a href="http://mail-archives.apache.org/mod_mbox/beam-dev/"&gt;dev@beam.apache.org&lt;/a&gt; list.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://s.apache.org/slack-invite"&gt;Join ASF Slack&lt;/a&gt; on &lt;a href="https://s.apache.org/beam-slack-channel"&gt;#beam channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apache/beam/issues/new/choose"&gt;Report an issue&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>