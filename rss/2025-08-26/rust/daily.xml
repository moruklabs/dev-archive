<rss version="2.0">
  <channel>
    <title>GitHub Rust Daily Trending</title>
    <description>Daily Trending of Rust in GitHub</description>
    <pubDate>Mon, 25 Aug 2025 01:38:14 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>eythaann/Seelen-UI</title>
      <link>https://github.com/eythaann/Seelen-UI</link>
      <description>&lt;p&gt;The Fully Customizable Desktop Environment for Windows 10/11.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/logo.svg?sanitize=true" width="44" align="top" alt="Seelen UI Logo" /&gt; Seelen UI &lt;/h1&gt; 
&lt;h2 align="center"&gt; Fully Customizable Desktop Environment for Windows &lt;br /&gt; Available in 70+ Languages &lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/eythaann/seelen-ui/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/eythaann/seelen-ui.svg?sanitize=true" alt="Contributors" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eythaann/seelen-ui/commits/main"&gt;&lt;img src="https://img.shields.io/github/last-commit/eythaann/seelen-ui.svg?sanitize=true" alt="Last Commit" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eythaann/seelen-ui/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/eythaann/seelen-ui.svg?sanitize=true" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eythaann/seelen-ui/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/eythaann/seelen-ui/total.svg?sanitize=true" alt="Downloads" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/preview.png" width="100%" alt="Screenshot of Seelen UI desktop showing a customized desktop environment" /&gt; 
&lt;table align="center"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://apps.microsoft.com/detail/Seelen%20UI/9p67c2d4t9fb?mode=full" target="_blank" rel="noopener noreferrer" aria-label="Download Seelen UI from Microsoft Store"&gt; &lt;img src="https://get.microsoft.com/images/en-us%20dark.svg?sanitize=true" width="100%" alt="Download Seelen UI from Microsoft Store" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://discord.gg/ABfASx5ZAJ" target="_blank" rel="noopener noreferrer" aria-label="Join the Seelen UI Discord community"&gt; &lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/discord-alt.png" width="100%" alt="Join the Seelen UI Discord community" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://www.digitalocean.com/?refcode=955c7335abf5&amp;amp;utm_campaign=Referral_Invite&amp;amp;utm_medium=Referral_Program&amp;amp;utm_source=badge" target="_blank" rel="noopener noreferrer" aria-label="DigitalOcean Referral Badge"&gt; &lt;img src="https://web-platforms.sfo2.cdn.digitaloceanspaces.com/WWW/Badge%201.svg?sanitize=true" width="100%" alt="DigitalOcean Referral Badge" /&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://seelen.io/apps/seelen-ui"&gt;Seelen UI&lt;/a&gt; is a tool designed to enhance your Windows desktop experience with a focus on customization and productivity. It integrates smoothly into your system, providing a range of features that allow you to personalize your desktop and optimize your workflow.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Be Creative&lt;/strong&gt;: Seelen UI lets you tailor your desktop to fit your style and needs. You can adjust menus, widgets, icons, and other elements to create a personalized and visually appealing desktop environment.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/theme_preview.png" alt="Seelen UI Custom Theme" /&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enhance Your Productivity&lt;/strong&gt;: Seelen UI helps you organize your desktop efficiently. With a Tiling Windows Manager, windows automatically arrange themselves to support multitasking, making your work more streamlined.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/twm_preview.png" alt="Seelen UI Tiling Window Manager" /&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enjoy your music&lt;/strong&gt;: With an integrated media module that's compatible with most music players, Seelen UI allows you to enjoy your music seamlessly. You can pause, resume, and skip tracks at any time without the need to open additional windows.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/media_module_preview.png" alt="Seelen UI Media Module" /&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Be faster!&lt;/strong&gt;: With an app launcher inspired by Rofi, Seelen UI provides a simple and intuitive way to quickly access your applications and execute commands.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/app_launcher_preview.png" alt="Seelen UI App Launcher" /&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;User-Friendly Configuration&lt;/strong&gt;: Seelen UI offers an intuitive interface for easy customization. Adjust settings such as themes, taskbar layouts, icons, etc. With just a few clicks.&lt;/p&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/images/settings_preview.png" alt="Seelen UI Settings" /&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] Seelen UI requires the WebView runtime to be installed. On Windows 11, it comes pre-installed with the system. However, on Windows 10, the WebView runtime is included with the &lt;code&gt;setup.exe&lt;/code&gt; installer. Additionally, Microsoft Edge is necessary to function correctly. Some users may have modified their system and removed Edge, so please ensure both Edge and the WebView runtime are installed on your system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] On fresh installations of Windows, the app might show a white or dark screen. You only need to update your Windows through Windows Update and restart your PC.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can choose from different installation options based on your preference:&lt;/p&gt; 
&lt;h3&gt;Microsoft Store &lt;em&gt;(recommended)&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;Download the latest version from the &lt;a href="https://www.microsoft.com/store/productId/9P67C2D4T9FB?ocid=pdpshare"&gt;Store&lt;/a&gt; page. This is the recommended option because you will receive updates and a secure version of the program.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/em&gt;: It may take around 1 to 3 business days for changes to be reflected in the Microsoft Store, as updates are approved by real people in the store.&lt;/p&gt; 
&lt;h3&gt;Winget&lt;/h3&gt; 
&lt;p&gt;Install the latest version using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-pwsh"&gt;winget install --id Seelen.SeelenUI
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This option also uses the signed &lt;code&gt;.msix&lt;/code&gt; package and ensures you have the latest secure version. Similar to the Microsoft Store, it may take around 1 to 3 business days for changes to be reflected in Winget, as updates are approved by real people in the &lt;code&gt;winget-pkg&lt;/code&gt; project.&lt;/p&gt; 
&lt;h3&gt;.msix Installer&lt;/h3&gt; 
&lt;p&gt;Download the &lt;code&gt;.msix&lt;/code&gt; installer from the &lt;a href="https://github.com/eythaann/seelen-ui/releases"&gt;Releases&lt;/a&gt; page. This package is signed, ensuring a secure installation. This is the same option as the Microsoft Store but is a portable installer.&lt;/p&gt; 
&lt;h3&gt;.exe Installer&lt;/h3&gt; 
&lt;p&gt;Download the latest version from the &lt;a href="https://github.com/eythaann/seelen-ui/releases"&gt;Releases&lt;/a&gt; page and run the &lt;code&gt;setup.exe&lt;/code&gt; installer. This option is less recommended as the installer is not signed, which may cause it to be flagged as a potential threat by some antivirus programs. The &lt;code&gt;setup.exe&lt;/code&gt; is updated more quickly than the Microsoft Store or Winget versions and also it receives notifications updates on new release.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Once installed or extracted, simply open the program. The easy-to-use and intuitive GUI will guide you through the configuration process. Customize your desktop environment effortlessly.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For in-depth details on various aspects of Seelen UI, explore the following documents:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/languages.md"&gt;Languages&lt;/a&gt; - Information regarding translations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/toolbar.md"&gt;Toolbar&lt;/a&gt; - Details about customizing and using the toolbar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://seelen.io/blog/seelen-ui-theme-tutorial"&gt;Themes&lt;/a&gt; - Guidance on creating and applying themes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/window_manager.md"&gt;Window Manager&lt;/a&gt; - Instructions on configuring the window manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/project.md"&gt;Project&lt;/a&gt; - General information about the project and its structure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Upcoming Features&lt;/h2&gt; 
&lt;p&gt;I’m excited to share some upcoming features for Seelen UI! Here’s a glimpse of what’s planned for the future:&lt;/p&gt; 
&lt;h3&gt;&lt;del&gt;App Launcher&lt;/del&gt; ✅&lt;/h3&gt; 
&lt;p&gt;I’m planning to develop an app launcher inspired by &lt;a href="https://github.com/davatorium/rofi"&gt;Rofi&lt;/a&gt; on Linux. This feature will provide a sleek and highly customizable way to quickly access your applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/adi1090x/files/master/rofi/previews/colorful/main.gif" alt="App Launcher Preview" /&gt; &lt;em&gt;Image courtesy of &lt;a href="https://github.com/dctxmei/rofi-themes"&gt;rofi-themes&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Customizable Popup Widgets&lt;/h3&gt; 
&lt;p&gt;I aim to introduce a set of fully customizable popup widgets, similar to the features available in &lt;a href="https://github.com/elkowar/eww"&gt;EWW&lt;/a&gt;. These widgets will be highly configurable and adaptable to your needs, providing an enhanced and interactive way to manage your desktop environment.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/adi1090x/widgets/main/previews/dashboard.png" alt="Customizable Widgets Preview" /&gt; &lt;em&gt;Image courtesy of &lt;a href="https://github.com/adi1090x/widgets"&gt;adi1090x&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Custom Alt + Tab (Task Switching)&lt;/h3&gt; 
&lt;p&gt;An upgraded Alt + Tab system for task switching is on the horizon. This will offer a more visually appealing and functional experience, allowing for smoother transitions between open applications and windows.&lt;/p&gt; 
&lt;h3&gt;Custom Virtual Desktops Viewer and Animations&lt;/h3&gt; 
&lt;p&gt;I’m also working on a custom virtual desktops viewer and dynamic animations to improve navigation between different workspaces. This will provide a more intuitive and immersive multitasking experience.&lt;/p&gt; 
&lt;p&gt;Stay tuned for more updates as I develop these features. I appreciate your support and enthusiasm!&lt;/p&gt; 
&lt;p&gt;Happy customizing!&lt;/p&gt; 
&lt;p&gt;The Seelen UI Team&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Read the &lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/CONTRIBUTING"&gt;Contribution Guidelines&lt;/a&gt; to get started with terms.&lt;/li&gt; 
 &lt;li&gt;Read the &lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/documentation/project.md"&gt;Project Documentation&lt;/a&gt; to understand the project structure and how to use it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/eythaann/Seelen-UI/master/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;For inquiries and support, please contact me on &lt;a href="https://discord.gg/ABfASx5ZAJ"&gt;Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;See you later&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;                   .      .&amp;amp;     _,x&amp;amp;"``
                    &amp;amp; .   &amp;amp;'  ;.&amp;amp;&amp;amp;'
              &amp;amp;.  . &amp;amp;.&amp;amp;     .0&amp;amp;&amp;amp;&amp;amp;;&amp;amp;""`
         .    '&amp;amp;  &amp;amp;.&amp;amp;&amp;amp;&amp;amp;  .&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;'
       .&amp;amp;         ;&amp;amp;&amp;amp;&amp;amp; &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;'
      &amp;amp;&amp;amp;          &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;     &amp;amp;&amp;amp;&amp;amp;
     0&amp;amp;    .     &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;""
    &amp;amp;&amp;amp;   .0     &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;
   0&amp;amp;&amp;amp; .&amp;amp;'     &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;
  :&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;    . &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp; 
  0&amp;amp;&amp;amp;&amp;amp;&amp;amp;    &amp;amp; &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;
  &amp;amp;&amp;amp;&amp;amp;&amp;amp;'   &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;               .&amp;amp;&amp;amp;&amp;amp;x&amp;amp;
  &amp;amp;&amp;amp;&amp;amp;&amp;amp;   :&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0.&amp;amp;'        , .&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;;.
  &amp;amp;&amp;amp;&amp;amp;&amp;amp;.  &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;        .&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;'               .
  0&amp;amp;&amp;amp;&amp;amp;&amp;amp;  &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;       ,&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;                &amp;amp;
  :&amp;amp;&amp;amp;&amp;amp;&amp;amp;; &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0       ,;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;             ;  .0
   0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0     ,;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;             &amp;amp;  &amp;amp;;
    0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0   :',;".&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;".&amp;amp;             &amp;amp;&amp;amp; &amp;amp;0
     0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0  ',;',&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;" ,&amp;amp;'             &amp;amp;&amp;amp;&amp;amp;&amp;amp;0
      0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0 ,x&amp;amp;&amp;amp;&amp;amp;&amp;amp;" .&amp;amp;&amp;amp;&amp;amp;              &amp;amp;&amp;amp;&amp;amp;&amp;amp;0
        0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp; .&amp;amp;&amp;amp;&amp;amp;&amp;amp;"'''"&amp;amp;&amp;amp;"&amp;amp;&amp;amp;            &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
         0&amp;amp;&amp;amp; .&amp;amp;&amp;amp;;``       `&amp;amp;: :&amp;amp;         &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
            &amp;amp;"' &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;   &amp;amp;"&amp;amp; &amp;amp;"&amp;amp;   &amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
              0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
                 0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0         Seelen
                      0&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;0
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;p&gt;📌 &lt;strong&gt;Official Website&lt;/strong&gt;: &lt;a href="https://seelen.io"&gt;https://seelen.io&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Seelen Inc © 2025 - All rights reserved&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/edit</title>
      <link>https://github.com/microsoft/edit</link>
      <description>&lt;p&gt;We all edit.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/edit/main/assets/edit.svg?sanitize=true" alt="Application Icon for Edit" /&gt; Edit&lt;/h1&gt; 
&lt;p&gt;A simple editor for simple needs.&lt;/p&gt; 
&lt;p&gt;This editor pays homage to the classic &lt;a href="https://en.wikipedia.org/wiki/MS-DOS_Editor"&gt;MS-DOS Editor&lt;/a&gt;, but with a modern interface and input controls similar to VS Code. The goal is to provide an accessible editor that even users largely unfamiliar with terminals can easily use.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/edit/main/assets/edit_hero_image.png" alt="Screenshot of Edit with the About dialog in the foreground" /&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/microsoft-edit/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/microsoft-edit.svg?exclude_unsupported=1" alt="Packaging status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can also download binaries from &lt;a href="https://github.com/microsoft/edit/releases/latest"&gt;our Releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;You can install the latest version with WinGet:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;winget install Microsoft.Edit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build Instructions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.rust-lang.org/tools/install"&gt;Install Rust&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install the nightly toolchain: &lt;code&gt;rustup install nightly&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Alternatively, set the environment variable &lt;code&gt;RUSTC_BOOTSTRAP=1&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Clone the repository&lt;/li&gt; 
 &lt;li&gt;For a release build, run: &lt;code&gt;cargo build --config .cargo/release.toml --release&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Build Configuration&lt;/h3&gt; 
&lt;p&gt;During compilation you can set various environment variables to configure the build. The following table lists the available configuration options:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Environment variable&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;EDIT_CFG_ICU*&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;See &lt;a href="https://raw.githubusercontent.com/microsoft/edit/main/#icu-library-name-soname"&gt;ICU library name (SONAME)&lt;/a&gt; for details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;EDIT_CFG_LANGUAGES&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;A comma-separated list of languages to include in the build. See &lt;a href="https://raw.githubusercontent.com/microsoft/edit/main/i18n/edit.toml"&gt;i18n/edit.toml&lt;/a&gt; for available languages.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Notes to Package Maintainers&lt;/h2&gt; 
&lt;h3&gt;Package Naming&lt;/h3&gt; 
&lt;p&gt;The canonical executable name is "edit" and the alternative name is "msedit". We're aware of the potential conflict of "edit" with existing commands and recommend alternatively naming packages and executables "msedit". Names such as "ms-edit" should be avoided. Assigning an "edit" alias is recommended, if possible.&lt;/p&gt; 
&lt;h3&gt;ICU library name (SONAME)&lt;/h3&gt; 
&lt;p&gt;This project &lt;em&gt;optionally&lt;/em&gt; depends on the ICU library for its Search and Replace functionality. By default, the project will look for a SONAME without version suffix:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows: &lt;code&gt;icuuc.dll&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;macOS: &lt;code&gt;libicuuc.dylib&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;UNIX, and other OS: &lt;code&gt;libicuuc.so&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If your installation uses a different SONAME, please set the following environment variable at build time:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;EDIT_CFG_ICUUC_SONAME&lt;/code&gt;: For instance, &lt;code&gt;libicuuc.so.76&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;EDIT_CFG_ICUI18N_SONAME&lt;/code&gt;: For instance, &lt;code&gt;libicui18n.so.76&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Additionally, this project assumes that the ICU exports are exported without &lt;code&gt;_&lt;/code&gt; prefix and without version suffix, such as &lt;code&gt;u_errorName&lt;/code&gt;. If your installation uses versioned exports, please set:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;EDIT_CFG_ICU_CPP_EXPORTS&lt;/code&gt;: If set to &lt;code&gt;true&lt;/code&gt;, it'll look for C++ symbols such as &lt;code&gt;_u_errorName&lt;/code&gt;. Enabled by default on macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;EDIT_CFG_ICU_RENAMING_VERSION&lt;/code&gt;: If set to a version number, such as &lt;code&gt;76&lt;/code&gt;, it'll look for symbols such as &lt;code&gt;u_errorName_76&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Finally, you can set the following environment variables:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;EDIT_CFG_ICU_RENAMING_AUTO_DETECT&lt;/code&gt;: If set to &lt;code&gt;true&lt;/code&gt;, the executable will try to detect the &lt;code&gt;EDIT_CFG_ICU_RENAMING_VERSION&lt;/code&gt; value at runtime. The way it does this is not officially supported by ICU and as such is not recommended to be relied upon. Enabled by default on UNIX (excluding macOS) if no other options are set.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To test your settings, run &lt;code&gt;cargo test&lt;/code&gt; again but with the &lt;code&gt;--ignored&lt;/code&gt; flag. For instance:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cargo test -- --ignored
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Priler/jarvis</title>
      <link>https://github.com/Priler/jarvis</link>
      <description>&lt;p&gt;Voice assistant made as an experiment using neural networks for things like STT/TTS/Wake Word/NLU etc.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JARVIS Voice Assistant&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Priler/jarvis/master/poster.jpg" alt="We are NOT limited by the technology of our time!" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Jarvis&lt;/code&gt; - is a voice assistant made as an experiment using neural networks for things like &lt;strong&gt;STT/TTS/Wake Word/NLU&lt;/strong&gt; etc.&lt;/p&gt; 
&lt;p&gt;The main project challenges we try to achieve is:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;100% offline &lt;em&gt;(no cloud)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Open source &lt;em&gt;(full transparency)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;No data collection &lt;em&gt;(we respect your privacy)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Our backend stack is 🦀 &lt;strong&gt;&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt;&lt;/strong&gt; with ❤️ &lt;strong&gt;&lt;a href="https://tauri.app/"&gt;Tauri&lt;/a&gt;&lt;/strong&gt;.&lt;br /&gt; For the frontend we use ⚡️ &lt;strong&gt;&lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt;&lt;/strong&gt; + 🛠️ &lt;strong&gt;&lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Other libraries, tools and packages can be found in source code.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Neural Networks&lt;/h2&gt; 
&lt;p&gt;This are the neural networks we are currently using:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Speech-To-Text 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/alphacep/vosk-api"&gt;Vosk Speech Recognition Toolkit&lt;/a&gt; via &lt;a href="https://github.com/Bear-03/vosk-rs"&gt;Vosk-rs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Text-To-Speech 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/snakers4/silero-models"&gt;&lt;del&gt;Silero TTS&lt;/del&gt;&lt;/a&gt; &lt;em&gt;(currently not used)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coqui-ai/TTS"&gt;&lt;del&gt;Coqui TTS&lt;/del&gt;&lt;/a&gt; &lt;em&gt;(currently not used)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ndarilek/tts-rs"&gt;&lt;del&gt;WinRT&lt;/del&gt;&lt;/a&gt; &lt;em&gt;(currently not used)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/nightlyistaken/tts_rust"&gt;&lt;del&gt;gTTS&lt;/del&gt;&lt;/a&gt; &lt;em&gt;(currently not used)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/s-macke/SAM"&gt;&lt;del&gt;SAM&lt;/del&gt;&lt;/a&gt; &lt;em&gt;(currently not used)&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Wake Word 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GiviMAD/rustpotter"&gt;Rustpotter&lt;/a&gt; &lt;em&gt;(Partially implemented, still WIP)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Picovoice/porcupine"&gt;Picovoice Porcupine&lt;/a&gt; via &lt;a href="https://github.com/Picovoice/porcupine#rust"&gt;official SDK&lt;/a&gt; &lt;em&gt;(requires API key)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/alphacep/vosk-api"&gt;Vosk Speech Recognition Toolkit&lt;/a&gt; via &lt;a href="https://github.com/Bear-03/vosk-rs"&gt;Vosk-rs&lt;/a&gt; &lt;em&gt;(very slow)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;[&lt;del&gt;Snowboy&lt;/del&gt;] &lt;em&gt;(currently not used)&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;NLU 
  &lt;ul&gt; 
   &lt;li&gt;Nothing yet.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Chat 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://chat.openai.com/"&gt;&lt;del&gt;ChatGPT&lt;/del&gt;&lt;/a&gt; (coming soon)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Languages&lt;/h2&gt; 
&lt;p&gt;Currently, only Russian language is supported.&lt;br /&gt; But soon, Ukranian and English will be added for the interface, wake-word detection and speech recognition.&lt;/p&gt; 
&lt;h2&gt;How to build?&lt;/h2&gt; 
&lt;p&gt;Nothing special was used to build this project.&lt;br /&gt; You need only Rust and NodeJS installed on your system.&lt;br /&gt; Other than that, all you need is to install all the dependencies and then compile the code with &lt;code&gt;cargo tauri build&lt;/code&gt; command.&lt;br /&gt; Or run dev with &lt;code&gt;cargo tauri dev&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt; &lt;em&gt;Thought you might need some of the platform specific libraries for &lt;a href="https://github.com/Picovoice/pvrecorder"&gt;PvRecorder&lt;/a&gt; and &lt;a href="https://github.com/alphacep/vosk-api"&gt;Vosk&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;Abraham Tugalov&lt;/p&gt; 
&lt;h2&gt;Python version?&lt;/h2&gt; 
&lt;p&gt;Old version of Jarvis was built with Python.&lt;br /&gt; The last Python version commit can be found &lt;a href="https://github.com/Priler/jarvis/tree/943efbfbdb8aeb5889fa5e2dc7348ca4ea0b81df"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;Attribution-NonCommercial-ShareAlike 4.0 International&lt;/a&gt;&lt;br /&gt; See LICENSE.txt file for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>a2x/cs2-dumper</title>
      <link>https://github.com/a2x/cs2-dumper</link>
      <description>&lt;p&gt;Counter-Strike: 2 Offset Dumper&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cs2-dumper&lt;/h1&gt; 
&lt;p&gt;An external offset/interface dumper for Counter-Strike 2, with support for both Windows &amp;amp; Linux. Powered by &lt;a href="https://github.com/memflow/memflow"&gt;memflow&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The native Linux version is available in the &lt;a href="https://github.com/a2x/cs2-dumper/tree/linux"&gt;linux&lt;/a&gt; branch (currently outdated).&lt;/p&gt; 
&lt;p&gt;For a work-in-progress offline version, check out the &lt;a href="https://github.com/a2x/cs2-analyzer"&gt;cs2-analyzer&lt;/a&gt; repository or view its included web demo &lt;a href="https://a2x.github.io/cs2-analyzer"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;You can download the latest release from &lt;a href="https://github.com/a2x/cs2-dumper/releases"&gt;Releases&lt;/a&gt; or compile it yourself. Note that compiling it yourself requires your Rust compiler version to be at least 1.74.0 or newer.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Ensure the game is running (Being in the main menu should suffice).&lt;/li&gt; 
 &lt;li&gt;Run the &lt;code&gt;cs2-dumper&lt;/code&gt; executable.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; If you run the executable without specifying an optional memflow connector name, it will automatically use the &lt;a href="https://github.com/memflow/memflow-native"&gt;memflow-native&lt;/a&gt; OS layer to read the memory of the game process. If you wish to use an existing memflow connector instead, such as &lt;strong&gt;pcileech&lt;/strong&gt; or &lt;strong&gt;kvm&lt;/strong&gt;, you can pass the &lt;code&gt;connector&lt;/code&gt; and optional &lt;code&gt;connector-args&lt;/code&gt; arguments to the program. These connectors can be installed and managed using the &lt;a href="https://github.com/memflow/memflowup"&gt;memflowup&lt;/a&gt; tool.&lt;/p&gt; 
&lt;p&gt;E.g (for pcileech). &lt;code&gt;cs2-dumper -c pcileech -a :device=FPGA -vv&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Certain connectors, such as the &lt;a href="https://github.com/memflow/memflow-kvm"&gt;kvm&lt;/a&gt; connector on Linux or the &lt;a href="https://github.com/memflow/memflow-pcileech"&gt;pcileech&lt;/a&gt; / &lt;a href="https://github.com/a2x/memflow-winio"&gt;winio&lt;/a&gt; connectors on Windows, require elevated privileges to work. So either run the &lt;code&gt;cs2-dumper&lt;/code&gt; executable with &lt;code&gt;sudo&lt;/code&gt; on Linux or as an administrator on Windows.&lt;/p&gt; 
&lt;h3&gt;Available Arguments&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-c, --connector &amp;lt;connector&amp;gt;&lt;/code&gt;: The name of the memflow connector to use.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-a, --connector-args &amp;lt;connector-args&amp;gt;&lt;/code&gt;: Additional arguments to pass to the memflow connector.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-f, --file-types &amp;lt;file-types&amp;gt;&lt;/code&gt;: The types of files to generate. Default: &lt;code&gt;cs&lt;/code&gt;, &lt;code&gt;hpp&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;rs&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-i, --indent-size &amp;lt;indent-size&amp;gt;&lt;/code&gt;: The number of spaces to use per indentation level. Default: &lt;code&gt;4&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-o, --output &amp;lt;output&amp;gt;&lt;/code&gt;: The output directory to write the generated files to. Default: &lt;code&gt;output&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-p, --process-name &amp;lt;process-name&amp;gt;&lt;/code&gt;: The name of the game process. Default: &lt;code&gt;cs2.exe&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-v...&lt;/code&gt;: Increase logging verbosity. Can be specified multiple times.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-h, --help&lt;/code&gt;: Print help.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-V, --version&lt;/code&gt;: Print version.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running Tests&lt;/h2&gt; 
&lt;p&gt;To run the few basic provided tests, use the following command: &lt;code&gt;cargo test -- --nocapture&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under the MIT license (&lt;a href="https://raw.githubusercontent.com/a2x/cs2-dumper/main/LICENSE"&gt;LICENSE&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>0x192/universal-android-debloater</title>
      <link>https://github.com/0x192/universal-android-debloater</link>
      <description>&lt;p&gt;Cross-platform GUI written in Rust using ADB to debloat non-rooted android devices. Improve your privacy, the security and battery life of your device.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Universal Android Debloater GUI&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: Use at your own risk. I am not responsible for anything that could happen to your phone.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/0x192/universal-android-debloater/main/resources/screenshots/v0.5.0.png" width="850" alt="uad_screenshot" /&gt; 
&lt;p&gt;&lt;strong&gt;This software is still in an early stage of development. Check out the issues, and feel free to contribute!&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Summary&lt;/h2&gt; 
&lt;p&gt;This is a complete rewrite in Rust of the &lt;a href="https://gitlab.com/W1nst0n/universal-android-debloater"&gt;UAD project&lt;/a&gt;, which aims to improve privacy and battery performance by removing unnecessary and obscure system apps. This can also contribute to improve security by reducing &lt;a href="https://en.wikipedia.org/wiki/Attack_surface"&gt;the attack surface&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Packages are as well documented as possible in order to provide a better understanding of what you can delete or not. The worst issue that could happen is removing an essential system package needed during boot causing then an unfortunate bootloop. After about 5 failed system boots, the phone will automatically reboot in recovery mode, and you'll have to perform a FACTORY RESET. Make a backup first!&lt;/p&gt; 
&lt;p&gt;In any case, you &lt;strong&gt;CANNOT&lt;/strong&gt; brick your device with this software! That's the main point, right?&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Uninstall/Disable and Restore/Enable system packages&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Multi-user support (e.g. apps in work profiles)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Export/Import your selection in &lt;code&gt;uad_exported_selection.txt&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Multi-device support: you can connect multiple phones at the same time&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; All your actions are logged, so you never forget what you've done&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;NB : System apps cannot truly be uninstalled without root (see the &lt;a href="https://github.com/0x192/universal-android-debloater/wiki/FAQ"&gt;FAQ&lt;/a&gt;)&lt;/p&gt; 
&lt;h2&gt;Universal Debloat Lists&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; GFAM (Google/Facebook/Amazon/Microsoft)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; AOSP&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Manufacturers (OEM)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Mobile carriers&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Qualcomm / Mediatek / Miscellaneous&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Manufacturers debloat lists&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Archos&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Asus&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Blackberry&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Gionee&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; LG&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Google&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; iQOO&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Fairphone&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; HTC&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Huawei&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Motorola&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Nokia&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; OnePlus&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Oppo&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Realme&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Samsung&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Sony&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Tecno&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; TCL&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Unihertz&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Vivo/iQOO&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Wiko&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Xiaomi&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; ZTE&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Mobile carriers debloat lists&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Country&lt;/th&gt; 
   &lt;th&gt;Carriers&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;France&lt;/td&gt; 
   &lt;td&gt;Orange, SFR, Free, Bouygues&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;USA&lt;/td&gt; 
   &lt;td&gt;T-Mobile, Verizon, Sprint, AT&amp;amp;T&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Germany&lt;/td&gt; 
   &lt;td&gt;Telekom&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;UK&lt;/td&gt; 
   &lt;td&gt;EE&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;How to use it&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Read the &lt;a href="https://github.com/0x192/universal-android-debloater/wiki/FAQ"&gt;FAQ&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Do a proper backup of your data! You can never be too careful!&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enable &lt;em&gt;Developer Options&lt;/em&gt; on your smartphone.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Turn on &lt;em&gt;USB Debugging&lt;/em&gt; from the developer panel.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;From the settings, disconnect from any OEM accounts (when you delete an OEM account package it could lock you on the lockscreen because the phone can't associate your identity anymore)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install ADB (see the intructions by clicking on your OS below):&lt;/p&gt; &lt;p&gt; &lt;/p&gt;
  &lt;details&gt; 
   &lt;summary&gt;LINUX&lt;/summary&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Install &lt;em&gt;Android platform tools&lt;/em&gt; on your PC :&lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;p&gt;Debian Base:&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt install android-sdk-platform-tools
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;Arch-Linux Base:&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;sudo pacman -S android-tools
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;Red Hat Base:&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;sudo yum install android-tools
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;OpenSUSE Base:&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;sudo zypper install android-tools
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt; &lt;/p&gt;
  &lt;details&gt; 
   &lt;summary&gt;MAC OS&lt;/summary&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;em&gt;Android platform tools&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;brew install android-platform-tools
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt;
   &lt;/ul&gt;
  &lt;/details&gt; &lt;p&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt; &lt;/p&gt;
&lt;details&gt; 
 &lt;summary&gt;WINDOWS&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;Download &lt;a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip"&gt;android platform tools&lt;/a&gt; and unzip it somewhere.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;a href="https://www.architectryan.com/2018/03/17/add-to-the-path-on-windows-10/"&gt;Add the android platform tools to your PATH&lt;/a&gt; &lt;strong&gt;OR&lt;/strong&gt; make sure to launch UAD from the same directory.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;a href="https://developer.android.com/studio/run/oem-usb#Drivers"&gt;Install USB drivers for your device&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Check your device is detected:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt; adb devices
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt; 
&lt;p&gt;&lt;/p&gt;    
&lt;li&gt; &lt;p&gt;Download the latest release of UAD GUI for your Operating System &lt;a href="https://github.com/0x192/universal-android-debloater/releases"&gt;here&lt;/a&gt;. Take the &lt;code&gt;opengl&lt;/code&gt; version only if the default version (with a Vulkan backend) doesn't launch.&lt;/p&gt; &lt;/li&gt;  
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Chinese phones users may need to use the AOSP list for removing some stock apps because those Chinese manufacturers (especially Xiaomi and Huawei) have been using the name of AOSP packages for their own (modified &amp;amp; closed-source) apps.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT NOTE:&lt;/strong&gt; You will have to run this software whenever your OEM pushes an update to your phone as some &lt;em&gt;uninstalled&lt;/em&gt; system apps could be reinstalled.&lt;/p&gt; 
&lt;h2&gt;How to contribute&lt;/h2&gt; 
&lt;p&gt;Hey-hey-hey! Don't go away so fast! This is a community project. That means I need you! I'm sure you want to make this project better anyway.&lt;/p&gt; 
&lt;p&gt;==&amp;gt; &lt;a href="https://github.com/0x192/universal-android-debloater/wiki"&gt;How to contribute&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Special thanks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mawilms"&gt;@mawilms&lt;/a&gt; for his LotRO plugin manager (&lt;a href="https://github.com/mawilms/lembas"&gt;Lembas&lt;/a&gt;) which helped me a lot to understand how to use the &lt;a href="https://github.com/hecrj/iced"&gt;Iced&lt;/a&gt; GUI library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/casperstorm"&gt;@casperstorm&lt;/a&gt; for the UI/UX inspiration.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>moghtech/komodo</title>
      <link>https://github.com/moghtech/komodo</link>
      <description>&lt;p&gt;🦎 a tool to build and deploy software on many servers 🦎&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Komodo 🦎&lt;/h1&gt; 
&lt;p&gt;A tool to build and deploy software across many servers.&lt;/p&gt; 
&lt;p&gt;🦎 &lt;a href="https://komo.do"&gt;See the docs&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;🦎 &lt;a href="https://demo.komo.do"&gt;Try the Demo&lt;/a&gt; - Login: &lt;code&gt;demo&lt;/code&gt; : &lt;code&gt;demo&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;🦎 &lt;a href="https://build.komo.do"&gt;See the Build Server&lt;/a&gt; - Login: &lt;code&gt;komodo&lt;/code&gt; : &lt;code&gt;komodo&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;🦎 &lt;a href="https://discord.gg/DRqE8Fvg5c"&gt;Join the Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;The Komodo dragon is the largest living member of the &lt;a href="https://en.wikipedia.org/wiki/Monitor_lizard"&gt;&lt;em&gt;Monitor&lt;/em&gt; family of lizards&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There is no limit to the number of servers you can connect, and there will never be. There is no limit to what API you can use for automation, and there never will be. No "business edition" here.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;Warning. This is open source software (GPL-V3), and while we make a best effort to ensure releases are stable and bug-free, there are no warranties. Use at your own risk.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moghtech/komodo/raw/main/scripts/readme.md"&gt;periphery setup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moghtech/komodo/raw/main/roadmap.md"&gt;roadmap&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;h3&gt;Light Theme&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Light-Dashboard.png" alt="Dashboard" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Light-Stack.png" alt="Stack" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Light-Compose.png" alt="Compose" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Light-Env.png" alt="Env" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Light-Sync.png" alt="Sync" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Light-Update.png" alt="Update" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Light-Stats.png" alt="Stats" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Light-Export.png" alt="Export" /&gt;&lt;/p&gt; 
&lt;h3&gt;Dark Theme&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Dark-Dashboard.png" alt="Dashboard" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Dark-Stack.png" alt="Stack" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Dark-Compose.png" alt="Compose" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Dark-Env.png" alt="Env" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Dark-Sync.png" alt="Sync" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Dark-Update.png" alt="Update" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Dark-Stats.png" alt="Stats" /&gt; &lt;img src="https://raw.githubusercontent.com/moghtech/komodo/main/screenshots/Dark-Export.png" alt="Export" /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sxyazi/yazi</title>
      <link>https://github.com/sxyazi/yazi</link>
      <description>&lt;p&gt;💥 Blazing fast terminal file manager written in Rust, based on async I/O.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
 &lt;br /&gt;
 &lt;br /&gt; 
 &lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=yazi" target="_blank"&gt; &lt;img alt="Warp sponsorship" width="300" src="https://github.com/user-attachments/assets/c7f141e7-9751-407d-bb0e-d6f2c487b34f" /&gt; &lt;br /&gt; &lt;b&gt;Warp, the intelligent terminal&lt;/b&gt; &lt;br /&gt; &lt;sup&gt;Yazi's AI-powered terminal of choice!&lt;br /&gt;Available for macOS, Linux and Windows&lt;/sup&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;Yazi - ⚡️ Blazing Fast Terminal File Manager&lt;/h2&gt; 
&lt;p&gt;Yazi (means "duck") is a terminal file manager written in Rust, based on non-blocking async I/O. It aims to provide an efficient, user-friendly, and customizable file management experience.&lt;/p&gt; 
&lt;p&gt;💡 A new article explaining its internal workings: &lt;a href="https://yazi-rs.github.io/blog/why-is-yazi-fast"&gt;Why is Yazi Fast?&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀 &lt;strong&gt;Full Asynchronous Support&lt;/strong&gt;: All I/O operations are asynchronous, CPU tasks are spread across multiple threads, making the most of available resources.&lt;/li&gt; 
 &lt;li&gt;💪 &lt;strong&gt;Powerful Async Task Scheduling and Management&lt;/strong&gt;: Provides real-time progress updates, task cancellation, and internal task priority assignment.&lt;/li&gt; 
 &lt;li&gt;🖼️ &lt;strong&gt;Built-in Support for Multiple Image Protocols&lt;/strong&gt;: Also integrated with Überzug++ and Chafa, covering almost all terminals.&lt;/li&gt; 
 &lt;li&gt;🌟 &lt;strong&gt;Built-in Code Highlighting and Image Decoding&lt;/strong&gt;: Combined with the pre-loading mechanism, greatly accelerates image and normal file loading.&lt;/li&gt; 
 &lt;li&gt;🔌 &lt;strong&gt;Concurrent Plugin System&lt;/strong&gt;: UI plugins (rewriting most of the UI), functional plugins, custom previewer/preloader/spotter/fetcher; Just some pieces of Lua.&lt;/li&gt; 
 &lt;li&gt;📡 &lt;strong&gt;Data Distribution Service&lt;/strong&gt;: Built on a client-server architecture (no additional server process required), integrated with a Lua-based publish-subscribe model, achieving cross-instance communication and state persistence.&lt;/li&gt; 
 &lt;li&gt;📦 &lt;strong&gt;Package Manager&lt;/strong&gt;: Install plugins and themes with one command, keeping them up-to-date, or pin them to a specific version.&lt;/li&gt; 
 &lt;li&gt;🧰 Integration with ripgrep, fd, fzf, zoxide&lt;/li&gt; 
 &lt;li&gt;💫 Vim-like input/pick/confirm/which/notify component, auto-completion for cd paths&lt;/li&gt; 
 &lt;li&gt;🏷️ Multi-Tab Support, Cross-directory selection, Scrollable Preview (for videos, PDFs, archives, code, directories, etc.)&lt;/li&gt; 
 &lt;li&gt;🔄 Bulk Renaming, Archive Extraction, Visual Mode, File Chooser, &lt;a href="https://github.com/yazi-rs/plugins/tree/main/git.yazi"&gt;Git Integration&lt;/a&gt;, &lt;a href="https://github.com/yazi-rs/plugins/tree/main/mount.yazi"&gt;Mount Manager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎨 Theme System, Mouse Support, Trash Bin, Custom Layouts, Virtual Filesystem, CSI u, OSC 52&lt;/li&gt; 
 &lt;li&gt;... and more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/sxyazi/yazi/assets/17523360/92ff23fa-0cd5-4f04-b387-894c12265cc7"&gt;https://github.com/sxyazi/yazi/assets/17523360/92ff23fa-0cd5-4f04-b387-894c12265cc7&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Project status&lt;/h2&gt; 
&lt;p&gt;Public beta, can be used as a daily driver.&lt;/p&gt; 
&lt;p&gt;Yazi is currently in heavy development, expect breaking changes.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Usage: &lt;a href="https://yazi-rs.github.io/docs/installation"&gt;https://yazi-rs.github.io/docs/installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Features: &lt;a href="https://yazi-rs.github.io/features"&gt;https://yazi-rs.github.io/features&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Discussion&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discord Server (English mainly): &lt;a href="https://discord.gg/qfADduSdJu"&gt;https://discord.gg/qfADduSdJu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Telegram Group (Chinese mainly): &lt;a href="https://t.me/yazi_rs"&gt;https://t.me/yazi_rs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Image Preview&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Protocol&lt;/th&gt; 
   &lt;th&gt;Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/kovidgoyal/kitty"&gt;kitty&lt;/a&gt; (&amp;gt;= 0.28.0)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://sw.kovidgoyal.net/kitty/graphics-protocol/#unicode-placeholders"&gt;Kitty unicode placeholders&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com"&gt;iTerm2&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;Inline images protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/wez/wezterm"&gt;WezTerm&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;Inline images protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://invent.kde.org/utilities/konsole"&gt;Konsole&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/sxyazi/yazi/raw/main/yazi-adapter/src/drivers/kgp_old.rs"&gt;Kitty old protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://codeberg.org/dnkl/foot"&gt;foot&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.vt100.net/docs/vt3xx-gp/chapter14.html"&gt;Sixel graphics format&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ghostty-org/ghostty"&gt;Ghostty&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://sw.kovidgoyal.net/kitty/graphics-protocol/#unicode-placeholders"&gt;Kitty unicode placeholders&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/microsoft/terminal"&gt;Windows Terminal&lt;/a&gt; (&amp;gt;= v1.22.10352.0)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.vt100.net/docs/vt3xx-gp/chapter14.html"&gt;Sixel graphics format&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/bakkeby/st-flexipatch"&gt;st with Sixel patch&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.vt100.net/docs/vt3xx-gp/chapter14.html"&gt;Sixel graphics format&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.warp.dev"&gt;Warp&lt;/a&gt; (macOS/Linux only)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;Inline images protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Eugeny/tabby"&gt;Tabby&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;Inline images protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/microsoft/vscode"&gt;VSCode&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;Inline images protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/raphamorim/rio"&gt;Rio&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;Inline images protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://gitlab.gnome.org/raggesilver/blackbox"&gt;Black Box&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.vt100.net/docs/vt3xx-gp/chapter14.html"&gt;Sixel graphics format&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vercel/hyper"&gt;Hyper&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;Inline images protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ismail-yilmaz/Bobcat"&gt;Bobcat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;Inline images protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Built-in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;X11 / Wayland&lt;/td&gt; 
   &lt;td&gt;Window system protocol&lt;/td&gt; 
   &lt;td&gt;☑️ &lt;a href="https://github.com/jstkdng/ueberzugpp"&gt;Überzug++&lt;/a&gt; required&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Fallback&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://en.wikipedia.org/wiki/ASCII_art"&gt;ASCII art (Unicode block)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☑️ &lt;a href="https://hpjansson.org/chafa/"&gt;Chafa&lt;/a&gt; required&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;See &lt;a href="https://yazi-rs.github.io/docs/image-preview"&gt;https://yazi-rs.github.io/docs/image-preview&lt;/a&gt; for details.&lt;/p&gt; 
&lt;!-- Protocols --&gt; 
&lt;!-- Dependencies --&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Yazi is MIT-licensed. For more information check the &lt;a href="https://raw.githubusercontent.com/sxyazi/yazi/main/LICENSE"&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linebender/vello</title>
      <link>https://github.com/linebender/vello</link>
      <description>&lt;p&gt;A GPU compute-centric 2D renderer.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt;Vello&lt;/h1&gt; 
 &lt;p&gt;&lt;strong&gt;A GPU compute-centric 2D renderer&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://xi.zulipchat.com/#narrow/channel/197075-vello"&gt;&lt;img src="https://img.shields.io/badge/Linebender-%23vello-blue?logo=Zulip" alt="Linebender Zulip" /&gt;&lt;/a&gt; &lt;a href="https://deps.rs/repo/github/linebender/vello"&gt;&lt;img src="https://deps.rs/repo/github/linebender/vello/status.svg?sanitize=true" alt="dependency status" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/linebender/vello/main/#license"&gt;&lt;img src="https://img.shields.io/badge/license-Apache--2.0_OR_MIT-blue.svg?sanitize=true" alt="Apache 2.0 or MIT license." /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/wgpu"&gt;&lt;img src="https://img.shields.io/badge/wgpu-v24.0.1-orange.svg?sanitize=true" alt="wgpu version" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://crates.io/crates/vello"&gt;&lt;img src="https://img.shields.io/crates/v/vello.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://docs.rs/vello"&gt;&lt;img src="https://docs.rs/vello/badge.svg?sanitize=true" alt="Docs" /&gt;&lt;/a&gt; &lt;a href="https://github.com/linebender/vello/actions"&gt;&lt;img src="https://github.com/linebender/vello/workflows/CI/badge.svg?sanitize=true" alt="Build status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Vello is a 2D graphics rendering engine written in Rust, with a focus on GPU compute. It can draw large 2D scenes with interactive or near-interactive performance, using &lt;a href="https://wgpu.rs/"&gt;&lt;code&gt;wgpu&lt;/code&gt;&lt;/a&gt; for GPU access.&lt;/p&gt; 
&lt;p&gt;Quickstart to run an example program:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cargo run -p with_winit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://github.com/linebender/vello/assets/8573618/cc2b742e-2135-4b70-8051-c49aeddb5d19" alt="image" /&gt;&lt;/p&gt; 
&lt;p&gt;It is used as the rendering backend for &lt;a href="https://github.com/linebender/xilem/"&gt;Xilem&lt;/a&gt;, a Rust GUI toolkit.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Vello can currently be considered in an alpha state. In particular, we're still working on the following:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/linebender/vello/issues/476"&gt;Implementing blur and filter effects&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/linebender/vello/issues/49"&gt;Conflations artifacts&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/linebender/vello/issues/366"&gt;GPU memory allocation strategy&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/linebender/vello/issues/204"&gt;Glyph caching&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Significant changes are documented in &lt;a href="https://github.com/linebender/vello/tree/main/CHANGELOG.md"&gt;the changelog&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Motivation&lt;/h2&gt; 
&lt;p&gt;Vello is meant to fill the same place in the graphics stack as other vector graphics renderers like &lt;a href="https://skia.org/"&gt;Skia&lt;/a&gt;, &lt;a href="https://www.cairographics.org/"&gt;Cairo&lt;/a&gt;, and its predecessor project &lt;a href="https://github.com/linebender/piet"&gt;Piet&lt;/a&gt;. On a basic level, that means it provides tools to render shapes, images, gradients, text, etc, using a PostScript-inspired API, the same that powers SVG files and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D"&gt;the browser &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Vello's selling point is that it gets better performance than other renderers by better leveraging the GPU. In traditional PostScript-style renderers, some steps of the render process like sorting and clipping either need to be handled in the CPU or done through the use of intermediary textures. Vello avoids this by using prefix-sum algorithms to parallelize work that usually needs to happen in sequence, so that work can be offloaded to the GPU with minimal use of temporary buffers.&lt;/p&gt; 
&lt;p&gt;This means that Vello needs a GPU with support for compute shaders to run.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Vello is meant to be integrated deep in UI render stacks. While drawing in a Vello scene is easy, actually rendering that scene to a surface requires setting up a wgpu context, which is a non-trivial task.&lt;/p&gt; 
&lt;p&gt;To use Vello as the renderer for your PDF reader / GUI toolkit / etc, your code will have to look roughly like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;use vello::{
    kurbo::{Affine, Circle},
    peniko::{Color, Fill},
    *,
};

// Initialize wgpu and get handles
let (width, height) = ...;
let device: wgpu::Device = ...;
let queue: wgpu::Queue = ...;
let mut renderer = Renderer::new(
   &amp;amp;device,
   RendererOptions::default()
).expect("Failed to create renderer");
// Create scene and draw stuff in it
let mut scene = vello::Scene::new();
scene.fill(
   vello::peniko::Fill::NonZero,
   vello::Affine::IDENTITY,
   vello::Color::from_rgb8(242, 140, 168),
   None,
   &amp;amp;vello::Circle::new((420.0, 200.0), 120.0),
);
// Draw more stuff
scene.push_layer(...);
scene.fill(...);
scene.stroke(...);
scene.pop_layer(...);
let texture = device.create_texture(&amp;amp;...);

// Render to a wgpu Texture
renderer
   .render_to_texture(
      &amp;amp;device,
      &amp;amp;queue,
      &amp;amp;scene,
      &amp;amp;texture,
      &amp;amp;vello::RenderParams {
         base_color: palette::css::BLACK, // Background color
         width,
         height,
         antialiasing_method: AaConfig::Msaa16,
      },
   )
   .expect("Failed to render to a texture");
// Do things with `texture`, such as blitting it to the Surface using
// wgpu::util::TextureBlitter
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/linebender/vello/tree/main/examples"&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt; directory for code that integrates with frameworks like winit.&lt;/p&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;p&gt;We've observed 177 fps for the paris-30k test scene on an M1 Max, at a resolution of 1600 pixels square, which is excellent performance and represents something of a best case for the engine.&lt;/p&gt; 
&lt;p&gt;More formal benchmarks are on their way.&lt;/p&gt; 
&lt;h2&gt;Integrations&lt;/h2&gt; 
&lt;h3&gt;SVG&lt;/h3&gt; 
&lt;p&gt;A separate Linebender integration for rendering SVG files is available through &lt;a href="https://github.com/linebender/vello_svg"&gt;&lt;code&gt;vello_svg&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Lottie&lt;/h3&gt; 
&lt;p&gt;A separate Linebender integration for playing Lottie animations is available through &lt;a href="https://github.com/linebender/velato"&gt;&lt;code&gt;velato&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Bevy&lt;/h3&gt; 
&lt;p&gt;A separate Linebender integration for rendering raw scenes or Lottie and SVG files in &lt;a href="https://bevyengine.org/"&gt;Bevy&lt;/a&gt; through &lt;a href="https://github.com/linebender/bevy_vello"&gt;&lt;code&gt;bevy_vello&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Our examples are provided in separate packages in the &lt;a href="https://github.com/linebender/vello/tree/main/examples"&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt; directory. This allows them to have independent dependencies and faster builds. Examples must be selected using the &lt;code&gt;--package&lt;/code&gt; (or &lt;code&gt;-p&lt;/code&gt;) Cargo flag.&lt;/p&gt; 
&lt;h3&gt;Winit&lt;/h3&gt; 
&lt;p&gt;Our &lt;a href="https://github.com/rust-windowing/winit"&gt;winit&lt;/a&gt; example (&lt;a href="https://github.com/linebender/vello/tree/main/examples/with_winit"&gt;examples/with_winit&lt;/a&gt;) demonstrates rendering to a &lt;a href="https://github.com/rust-windowing/winit"&gt;winit&lt;/a&gt; window. By default, this renders the &lt;a href="https://commons.wikimedia.org/wiki/File:Ghostscript_Tiger.svg"&gt;GhostScript Tiger&lt;/a&gt; as well as all SVG files you add in the &lt;a href="https://github.com/linebender/vello/tree/main/examples/assets/downloads"&gt;examples/assets/downloads&lt;/a&gt; directory. A custom list of SVG file paths (and directories to render all SVG files from) can be provided as arguments instead. It also includes a collection of test scenes showing the capabilities of &lt;code&gt;vello&lt;/code&gt;, which can be shown with &lt;code&gt;--test-scenes&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cargo run -p with_winit
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- ### Headless --&gt; 
&lt;h2&gt;Platforms&lt;/h2&gt; 
&lt;p&gt;We aim to target all environments which can support WebGPU with the &lt;a href="https://www.w3.org/TR/webgpu/#limits"&gt;default limits&lt;/a&gt;. We defer to &lt;a href="https://wgpu.rs/"&gt;&lt;code&gt;wgpu&lt;/code&gt;&lt;/a&gt; for this support. Other platforms are more tricky, and may require special building/running procedures.&lt;/p&gt; 
&lt;h3&gt;Web&lt;/h3&gt; 
&lt;p&gt;Because Vello relies heavily on compute shaders, we rely on the emerging WebGPU standard to run on the web. Browser support for WebGPU is still evolving. Vello has been tested using production versions of Chrome, but WebGPU support in Firefox and Safari is still experimental. It may be necessary to use development browsers and explicitly enable WebGPU.&lt;/p&gt; 
&lt;p&gt;The following command builds and runs a web version of the &lt;a href="https://raw.githubusercontent.com/linebender/vello/main/#winit"&gt;winit demo&lt;/a&gt;. This uses &lt;a href="https://github.com/rukai/cargo-run-wasm"&gt;&lt;code&gt;cargo-run-wasm&lt;/code&gt;&lt;/a&gt; to build the example for web, and host a local server for it&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# Make sure the Rust toolchain supports the wasm32 target
rustup target add wasm32-unknown-unknown

# The binary name must also be explicitly provided as it differs from the package name
cargo run_wasm -p with_winit --bin with_winit_bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There is also a web demo &lt;a href="https://linebender.github.io/vello"&gt;available here&lt;/a&gt; on supporting web browsers.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] The web is not currently a primary target for Vello, and WebGPU implementations are incomplete, so you might run into issues running this example.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Android&lt;/h3&gt; 
&lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/linebender/vello/main/#winit"&gt;&lt;code&gt;with_winit&lt;/code&gt;&lt;/a&gt; example supports running on Android, using &lt;a href="https://crates.io/crates/cargo-apk"&gt;cargo apk&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cargo apk run -p with_winit --lib
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] cargo apk doesn't support running in release mode without configuration. See &lt;a href="https://crates.io/crates/cargo-apk"&gt;their crates page docs&lt;/a&gt; (around &lt;code&gt;package.metadata.android.signing.&amp;lt;profile&amp;gt;&lt;/code&gt;).&lt;/p&gt; 
 &lt;p&gt;See also &lt;a href="https://github.com/rust-mobile/cargo-apk/issues/16"&gt;cargo-apk#16&lt;/a&gt;. To run in release mode, you must add the following to &lt;code&gt;examples/with_winit/Cargo.toml&lt;/code&gt; (changing &lt;code&gt;$HOME&lt;/code&gt; to your home directory):&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[package.metadata.android.signing.release]
path = "$HOME/.android/debug.keystore"
keystore_password = "android"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] As &lt;code&gt;cargo apk&lt;/code&gt; does not allow passing command line arguments or environment variables to the app when ran, these can be embedded into the program at compile time (currently for Android only) &lt;code&gt;with_winit&lt;/code&gt; currently supports the environment variables:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;VELLO_STATIC_LOG&lt;/code&gt;, which is equivalent to &lt;code&gt;RUST_LOG&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;VELLO_STATIC_ARGS&lt;/code&gt;, which is equivalent to passing in command line arguments&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For example (with unix shell environment variable syntax):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;VELLO_STATIC_LOG="vello=trace" VELLO_STATIC_ARGS="--test-scenes" cargo apk run -p with_winit --lib
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Minimum supported Rust Version (MSRV)&lt;/h2&gt; 
&lt;p&gt;This version of Vello has been verified to compile with &lt;strong&gt;Rust 1.85&lt;/strong&gt; and later.&lt;/p&gt; 
&lt;p&gt;Future versions of Vello might increase the Rust version requirement. It will not be treated as a breaking change and as such can even happen with small patch releases.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click here if compiling fails.&lt;/summary&gt; 
 &lt;p&gt;As time has passed, some of Vello's dependencies could have released versions with a higher Rust requirement. If you encounter a compilation issue due to a dependency and don't want to upgrade your Rust toolchain, then you could downgrade the dependency.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;# Use the problematic dependency's name and version
cargo update -p package_name --precise 0.1.1
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Discussion of Vello development happens in the &lt;a href="https://xi.zulipchat.com/"&gt;Linebender Zulip&lt;/a&gt;, specifically the &lt;a href="https://xi.zulipchat.com/#narrow/channel/197075-vello"&gt;#vello channel&lt;/a&gt;. All public content can be read without logging in.&lt;/p&gt; 
&lt;p&gt;Contributions are welcome by pull request. The &lt;a href="https://www.rust-lang.org/policies/code-of-conduct"&gt;Rust code of conduct&lt;/a&gt; applies.&lt;/p&gt; 
&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache 2.0 license, shall be licensed as noted in the &lt;a href="https://raw.githubusercontent.com/linebender/vello/main/#license"&gt;License&lt;/a&gt; section, without any additional terms or conditions.&lt;/p&gt; 
&lt;h2&gt;History&lt;/h2&gt; 
&lt;p&gt;Vello was previously known as &lt;code&gt;piet-gpu&lt;/code&gt;. This prior incarnation used a custom cross-API hardware abstraction layer, called &lt;code&gt;piet-gpu-hal&lt;/code&gt;, instead of &lt;a href="https://wgpu.rs/"&gt;&lt;code&gt;wgpu&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;An archive of this version can be found in the branches &lt;a href="https://github.com/linebender/piet-gpu/tree/custom-hal-archive-with-shaders"&gt;&lt;code&gt;custom-hal-archive-with-shaders&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/linebender/piet-gpu/tree/custom-hal-archive"&gt;&lt;code&gt;custom-hal-archive&lt;/code&gt;&lt;/a&gt;. This succeeded the previous prototype, &lt;a href="https://github.com/linebender/piet-metal"&gt;piet-metal&lt;/a&gt;, and included work adapted from &lt;a href="https://github.com/bzm3r/piet-dx12"&gt;piet-dx12&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The decision to lay down &lt;code&gt;piet-gpu-hal&lt;/code&gt; in favor of WebGPU is discussed in detail in the blog post &lt;a href="https://raphlinus.github.io/rust/gpu/2023/01/07/requiem-piet-gpu-hal.html"&gt;Requiem for piet-gpu-hal&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;a href="https://github.com/linebender/vello/tree/main/doc/vision.md"&gt;vision&lt;/a&gt; document dated December 2020 explained the longer-term goals of the project, and how we might get there. Many of these items are out-of-date or completed, but it still may provide some useful background.&lt;/p&gt; 
&lt;h2&gt;Related projects&lt;/h2&gt; 
&lt;p&gt;Vello takes inspiration from many other rendering projects, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/servo/pathfinder"&gt;Pathfinder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fuchsia.googlesource.com/fuchsia/+/refs/heads/master/src/graphics/lib/compute/spinel/"&gt;Spinel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/forma"&gt;Forma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://w3.impa.br/~diego/projects/GanEtAl14/"&gt;Massively Parallel Vector Graphics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hhoppe.com/proj/ravg/"&gt;Random-access rendering of general vector graphics&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under either of&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Apache License, Version 2.0 (&lt;a href="https://raw.githubusercontent.com/linebender/vello/main/LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;MIT license (&lt;a href="https://raw.githubusercontent.com/linebender/vello/main/LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href="http://opensource.org/licenses/MIT"&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;at your option.&lt;/p&gt; 
&lt;p&gt;In addition, all files in the &lt;a href="https://github.com/linebender/vello/tree/main/vello_shaders/shader"&gt;&lt;code&gt;vello_shaders/shader&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/linebender/vello/tree/main/vello_shaders/src/cpu"&gt;&lt;code&gt;vello_shaders/src/cpu&lt;/code&gt;&lt;/a&gt; directories and subdirectories thereof are alternatively licensed under the Unlicense (&lt;a href="https://github.com/linebender/vello/tree/main/vello_shaders/shader/UNLICENSE"&gt;vello_shaders/shader/UNLICENSE&lt;/a&gt; or &lt;a href="http://unlicense.org/"&gt;http://unlicense.org/&lt;/a&gt;). For clarity, these files are also licensed under either of the above licenses. The intent is for this research to be used in as broad a context as possible.&lt;/p&gt; 
&lt;p&gt;The files in subdirectories of the &lt;a href="https://github.com/linebender/vello/tree/main/examples/assets"&gt;&lt;code&gt;examples/assets&lt;/code&gt;&lt;/a&gt; directory are licensed solely under their respective licenses, available in the &lt;code&gt;LICENSE&lt;/code&gt; file in their directories.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alacritty/alacritty</title>
      <link>https://github.com/alacritty/alacritty</link>
      <description>&lt;p&gt;A cross-platform, OpenGL terminal emulator.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img width="200" alt="Alacritty Logo" src="https://raw.githubusercontent.com/alacritty/alacritty/master/extra/logo/compat/alacritty-term%2Bscanlines.png" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;Alacritty - A fast, cross-platform, OpenGL terminal emulator&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img alt="Alacritty - A fast, cross-platform, OpenGL terminal emulator" src="https://raw.githubusercontent.com/alacritty/alacritty/master/extra/promo/alacritty-readme.png" /&gt; &lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;Alacritty is a modern terminal emulator that comes with sensible defaults, but allows for extensive &lt;a href="https://raw.githubusercontent.com/alacritty/alacritty/master/#configuration"&gt;configuration&lt;/a&gt;. By integrating with other applications, rather than reimplementing their functionality, it manages to provide a flexible set of &lt;a href="https://raw.githubusercontent.com/alacritty/alacritty/master/docs/features.md"&gt;features&lt;/a&gt; with high performance. The supported platforms currently consist of BSD, Linux, macOS and Windows.&lt;/p&gt; 
&lt;p&gt;The software is considered to be at a &lt;strong&gt;beta&lt;/strong&gt; level of readiness; there are a few missing features and bugs to be fixed, but it is already used by many as a daily driver.&lt;/p&gt; 
&lt;p&gt;Precompiled binaries are available from the &lt;a href="https://github.com/alacritty/alacritty/releases"&gt;GitHub releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Join &lt;a href="https://web.libera.chat/gamja/?channels=#alacritty"&gt;&lt;code&gt;#alacritty&lt;/code&gt;&lt;/a&gt; on libera.chat if you have questions or looking for a quick help.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;You can find an overview over the features available in Alacritty &lt;a href="https://raw.githubusercontent.com/alacritty/alacritty/master/docs/features.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Further information&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://jwilm.io/blog/announcing-alacritty/"&gt;Announcing Alacritty, a GPU-Accelerated Terminal Emulator&lt;/a&gt; January 6, 2017&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qHOdYO3WUTk"&gt;A talk about Alacritty at the Rust Meetup January 2017&lt;/a&gt; January 19, 2017&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jwilm.io/blog/alacritty-lands-scrollback/"&gt;Alacritty Lands Scrollback, Publishes Benchmarks&lt;/a&gt; September 17, 2018&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Alacritty can be installed by using various package managers on Linux, BSD, macOS and Windows.&lt;/p&gt; 
&lt;p&gt;Prebuilt binaries for macOS and Windows can also be downloaded from the &lt;a href="https://github.com/alacritty/alacritty/releases"&gt;GitHub releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For everyone else, the detailed instructions to install Alacritty can be found &lt;a href="https://raw.githubusercontent.com/alacritty/alacritty/master/INSTALL.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;At least OpenGL ES 2.0&lt;/li&gt; 
 &lt;li&gt;[Windows] ConPTY support (Windows 10 version 1809 or higher)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;You can find the documentation for Alacritty's configuration in &lt;code&gt;man 5 alacritty&lt;/code&gt;, or by looking at &lt;a href="https://alacritty.org/config-alacritty.html"&gt;the website&lt;/a&gt; if you do not have the manpages installed.&lt;/p&gt; 
&lt;p&gt;Alacritty doesn't create the config file for you, but it looks for one in the following locations:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/alacritty/alacritty.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/alacritty.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$HOME/.config/alacritty/alacritty.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$HOME/.alacritty.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/etc/alacritty/alacritty.toml&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;On Windows, the config file will be looked for in:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;%APPDATA%\alacritty\alacritty.toml&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;A guideline about contributing to Alacritty can be found in the &lt;a href="https://raw.githubusercontent.com/alacritty/alacritty/master/CONTRIBUTING.md"&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Is it really the fastest terminal emulator?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Benchmarking terminal emulators is complicated. Alacritty uses &lt;a href="https://github.com/alacritty/vtebench"&gt;vtebench&lt;/a&gt; to quantify terminal emulator throughput and manages to consistently score better than the competition using it. If you have found an example where this is not the case, please report a bug.&lt;/p&gt; 
&lt;p&gt;Other aspects like latency or framerate and frame consistency are more difficult to quantify. Some terminal emulators also intentionally slow down to save resources, which might be preferred by some users.&lt;/p&gt; 
&lt;p&gt;If you have doubts about Alacritty's performance or usability, the best way to quantify terminal emulators is always to test them with &lt;strong&gt;your&lt;/strong&gt; specific usecases.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Why isn't feature X implemented?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Alacritty has many great features, but not every feature from every other terminal. This could be for a number of reasons, but sometimes it's just not a good fit for Alacritty. This means you won't find things like tabs or splits (which are best left to a window manager or &lt;a href="https://github.com/tmux/tmux"&gt;terminal multiplexer&lt;/a&gt;) nor niceties like a GUI config editor.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Alacritty is released under the &lt;a href="https://github.com/alacritty/alacritty/raw/master/LICENSE-APACHE"&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iced-rs/iced</title>
      <link>https://github.com/iced-rs/iced</link>
      <description>&lt;p&gt;A cross-platform GUI library for Rust, inspired by Elm&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/iced-rs/iced/master/docs/logo.svg?sanitize=true" width="140px" /&gt; 
 &lt;h1&gt;Iced&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://docs.rs/iced/"&gt;&lt;img src="https://docs.rs/iced/badge.svg?sanitize=true" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/iced"&gt;&lt;img src="https://img.shields.io/crates/v/iced.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://github.com/iced-rs/iced/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/crates/l/iced.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/iced"&gt;&lt;img src="https://img.shields.io/crates/d/iced.svg?sanitize=true" alt="Downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/iced-rs/iced/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/iced-rs/iced/test.yml?branch=master&amp;amp;event=push&amp;amp;label=test" alt="Test Status" /&gt;&lt;/a&gt; &lt;a href="https://discourse.iced.rs/"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscourse.iced.rs%2Fsite%2Fstatistics.json&amp;amp;query=%24.users_count&amp;amp;suffix=%20users&amp;amp;label=discourse&amp;amp;color=5e7ce2" alt="Discourse" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/3xZJ65GAhd"&gt;&lt;img src="https://img.shields.io/discord/628993209984614400?label=&amp;amp;labelColor=6A7EC2&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8" alt="Discord Server" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;A cross-platform GUI library for Rust focused on simplicity and type-safety. Inspired by &lt;a href="https://elm-lang.org/"&gt;Elm&lt;/a&gt;.&lt;/p&gt; 
 &lt;a href="https://github.com/squidowl/halloy"&gt; &lt;img src="https://iced.rs/showcase/halloy.gif" width="460px" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/hecrj/icebreaker"&gt; &lt;img src="https://iced.rs/showcase/icebreaker.gif" width="360px" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simple, easy-to-use, batteries-included API&lt;/li&gt; 
 &lt;li&gt;Type-safe, reactive programming model&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/docs/images/todos_desktop.jpg"&gt;Cross-platform support&lt;/a&gt; (Windows, macOS, Linux, and the Web)&lt;/li&gt; 
 &lt;li&gt;Responsive layout&lt;/li&gt; 
 &lt;li&gt;Built-in widgets (including &lt;a href="https://iced.rs/examples/text_input.mp4"&gt;text inputs&lt;/a&gt;, &lt;a href="https://iced.rs/examples/scrollable.mp4"&gt;scrollables&lt;/a&gt;, and more!)&lt;/li&gt; 
 &lt;li&gt;Custom widget support (create your own!)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://iced.rs/examples/debug.mp4"&gt;Debug overlay with performance metrics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;First-class support for async actions (use futures!)&lt;/li&gt; 
 &lt;li&gt;Modular ecosystem split into reusable parts: 
  &lt;ul&gt; 
   &lt;li&gt;A &lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/runtime/"&gt;renderer-agnostic native runtime&lt;/a&gt; enabling integration with existing systems&lt;/li&gt; 
   &lt;li&gt;Two built-in renderers leveraging &lt;a href="https://github.com/gfx-rs/wgpu"&gt;&lt;code&gt;wgpu&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/RazrFalcon/tiny-skia"&gt;&lt;code&gt;tiny-skia&lt;/code&gt;&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/wgpu/"&gt;&lt;code&gt;iced_wgpu&lt;/code&gt;&lt;/a&gt; supporting Vulkan, Metal and DX12&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/tiny_skia/"&gt;&lt;code&gt;iced_tiny_skia&lt;/code&gt;&lt;/a&gt; offering a software alternative as a fallback&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;A &lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/winit/"&gt;windowing shell&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Iced is currently experimental software.&lt;/strong&gt; &lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/ROADMAP.md"&gt;Take a look at the roadmap&lt;/a&gt; and &lt;a href="https://github.com/iced-rs/iced/issues"&gt;check out the issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Inspired by &lt;a href="https://guide.elm-lang.org/architecture/"&gt;The Elm Architecture&lt;/a&gt;, Iced expects you to split user interfaces into four different concepts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;State&lt;/strong&gt; — the state of your application&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Messages&lt;/strong&gt; — user interactions or meaningful events that you care about&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;View logic&lt;/strong&gt; — a way to display your &lt;strong&gt;state&lt;/strong&gt; as widgets that may produce &lt;strong&gt;messages&lt;/strong&gt; on user interaction&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Update logic&lt;/strong&gt; — a way to react to &lt;strong&gt;messages&lt;/strong&gt; and update your &lt;strong&gt;state&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We can build something to see how this works! Let's say we want a simple counter that can be incremented and decremented using two buttons.&lt;/p&gt; 
&lt;p&gt;We start by modelling the &lt;strong&gt;state&lt;/strong&gt; of our application:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;#[derive(Default)]
struct Counter {
    value: i32,
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, we need to define the possible user interactions of our counter: the button presses. These interactions are our &lt;strong&gt;messages&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;#[derive(Debug, Clone, Copy)]
pub enum Message {
    Increment,
    Decrement,
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, let's show the actual counter by putting it all together in our &lt;strong&gt;view logic&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;use iced::widget::{button, column, text, Column};

impl Counter {
    pub fn view(&amp;amp;self) -&amp;gt; Column&amp;lt;Message&amp;gt; {
        // We use a column: a simple vertical layout
        column![
            // The increment button. We tell it to produce an
            // `Increment` message when pressed
            button("+").on_press(Message::Increment),

            // We show the value of the counter here
            text(self.value).size(50),

            // The decrement button. We tell it to produce a
            // `Decrement` message when pressed
            button("-").on_press(Message::Decrement),
        ]
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, we need to be able to react to any produced &lt;strong&gt;messages&lt;/strong&gt; and change our &lt;strong&gt;state&lt;/strong&gt; accordingly in our &lt;strong&gt;update logic&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;impl Counter {
    // ...

    pub fn update(&amp;amp;mut self, message: Message) {
        match message {
            Message::Increment =&amp;gt; {
                self.value += 1;
            }
            Message::Decrement =&amp;gt; {
                self.value -= 1;
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And that's everything! We just wrote a whole user interface. Let's run it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;fn main() -&amp;gt; iced::Result {
    iced::run("A cool counter", Counter::update, Counter::view)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Iced will automatically:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Take the result of our &lt;strong&gt;view logic&lt;/strong&gt; and layout its widgets.&lt;/li&gt; 
 &lt;li&gt;Process events from our system and produce &lt;strong&gt;messages&lt;/strong&gt; for our &lt;strong&gt;update logic&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Draw the resulting user interface.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Read the &lt;a href="https://book.iced.rs/"&gt;book&lt;/a&gt;, the &lt;a href="https://docs.rs/iced/"&gt;documentation&lt;/a&gt;, and the &lt;a href="https://github.com/iced-rs/iced/tree/master/examples#examples"&gt;examples&lt;/a&gt; to learn more!&lt;/p&gt; 
&lt;h2&gt;Implementation details&lt;/h2&gt; 
&lt;p&gt;Iced was originally born as an attempt at bringing the simplicity of &lt;a href="https://elm-lang.org/"&gt;Elm&lt;/a&gt; and &lt;a href="https://guide.elm-lang.org/architecture/"&gt;The Elm Architecture&lt;/a&gt; into &lt;a href="https://github.com/hecrj/coffee"&gt;Coffee&lt;/a&gt;, a 2D game library I am working on.&lt;/p&gt; 
&lt;p&gt;The core of the library was implemented during May 2019 in &lt;a href="https://github.com/hecrj/coffee/pull/35"&gt;this pull request&lt;/a&gt;. &lt;a href="https://github.com/iced-rs/iced/tree/0.1.0-alpha"&gt;The first alpha version&lt;/a&gt; was eventually released as &lt;a href="https://www.reddit.com/r/rust/comments/czzjnv/iced_a_rendereragnostic_gui_library_focused_on/"&gt;a renderer-agnostic GUI library&lt;/a&gt;. The library did not provide a renderer and implemented the current &lt;a href="https://raw.githubusercontent.com/iced-rs/iced/master/examples/README.md#tour"&gt;tour example&lt;/a&gt; on top of &lt;a href="https://github.com/ggez/ggez"&gt;&lt;code&gt;ggez&lt;/code&gt;&lt;/a&gt;, a game library.&lt;/p&gt; 
&lt;p&gt;Since then, the focus has shifted towards providing a batteries-included, end-user-oriented GUI library, while keeping the ecosystem modular.&lt;/p&gt; 
&lt;h2&gt;Contributing / Feedback&lt;/h2&gt; 
&lt;p&gt;If you want to contribute, please read our &lt;a href="https://github.com/iced-rs/iced/raw/master/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;Feedback is also welcome! You can create a new topic in &lt;a href="https://discourse.iced.rs/"&gt;our Discourse forum&lt;/a&gt; or come chat to &lt;a href="https://discord.gg/3xZJ65GAhd"&gt;our Discord server&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;The development of Iced is sponsored by the &lt;a href="https://cryptowat.ch/charts"&gt;Cryptowatch&lt;/a&gt; team at &lt;a href="https://kraken.com/"&gt;Kraken.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rust-unofficial/awesome-rust</title>
      <link>https://github.com/rust-unofficial/awesome-rust</link>
      <description>&lt;p&gt;A curated list of Rust code and resources.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome Rust &lt;a href="https://github.com/rust-unofficial/awesome-rust/actions/workflows/lint.yml"&gt;&lt;img src="https://github.com/rust-unofficial/awesome-rust/actions/workflows/lint.yml/badge.svg?sanitize=true" alt="lint badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/rust-unofficial/awesome-rust/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/rust-unofficial/awesome-rust/actions/workflows/rust.yml/badge.svg?branch=main" alt="build badge" /&gt;&lt;/a&gt; &lt;a href="https://www.trackawesomelist.com/rust-unofficial/awesome-rust/"&gt;&lt;img src="https://www.trackawesomelist.com/badge.svg?sanitize=true" alt="Track Awesome List" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;A curated list of Rust code and resources.&lt;/p&gt; 
&lt;p&gt;If you want to contribute, please read &lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/CONTRIBUTING.md"&gt;this&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;!-- toc --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#applications"&gt;Applications&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#audio-and-music"&gt;Audio and Music&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#blockchain"&gt;Blockchain&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#database"&gt;Database&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#embedded"&gt;Embedded&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#emulators"&gt;Emulators&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#file-manager"&gt;File manager&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#finance"&gt;Finance&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#games"&gt;Games&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#graphics"&gt;Graphics&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#image-processing"&gt;Image processing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#industrial-automation"&gt;Industrial automation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#message-queue"&gt;Message Queue&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#mlops"&gt;MLOps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#observability"&gt;Observability&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#operating-systems"&gt;Operating systems&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#package-managers"&gt;Package Managers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#payments"&gt;Payments&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#productivity"&gt;Productivity&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#routing-protocols"&gt;Routing protocols&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#security-tools"&gt;Security tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#social-networks"&gt;Social networks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#system-tools"&gt;System tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#task-scheduling"&gt;Task scheduling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#text-editors"&gt;Text editors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#text-processing"&gt;Text processing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#utilities"&gt;Utilities&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#video"&gt;Video&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#virtualization"&gt;Virtualization&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#web"&gt;Web&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#web-servers"&gt;Web Servers&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#development-tools"&gt;Development tools&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#build-system"&gt;Build system&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#debugging"&gt;Debugging&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#deployment"&gt;Deployment&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#embedded-1"&gt;Embedded&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#ffi"&gt;FFI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#formatters"&gt;Formatters&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#ides"&gt;IDEs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#profiling"&gt;Profiling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#services"&gt;Services&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#static-analysis"&gt;Static analysis&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#testing"&gt;Testing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#transpiling"&gt;Transpiling&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#libraries"&gt;Libraries&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#artificial-intelligence"&gt;Artificial Intelligence&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#genetic-algorithms"&gt;Genetic algorithms&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#machine-learning"&gt;Machine learning&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#openai"&gt;OpenAI&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#tooling"&gt;Tooling&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#astronomy"&gt;Astronomy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#asynchronous"&gt;Asynchronous&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#audio-and-music-1"&gt;Audio and Music&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#authentication"&gt;Authentication&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#automotive"&gt;Automotive&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#bioinformatics"&gt;Bioinformatics&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#caching"&gt;Caching&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#cloud"&gt;Cloud&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#command-line"&gt;Command-line&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#compression"&gt;Compression&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#computation"&gt;Computation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#concurrency"&gt;Concurrency&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#cryptography"&gt;Cryptography&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#data-processing"&gt;Data processing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#data-streaming"&gt;Data streaming&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#data-structures"&gt;Data structures&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#data-visualization"&gt;Data visualization&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#database-1"&gt;Database&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#date-and-time"&gt;Date and time&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#distributed-systems"&gt;Distributed systems&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#domain-driven-design"&gt;Domain driven design&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#ebpf"&gt;eBPF&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#email"&gt;Email&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#encoding"&gt;Encoding&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#filesystem"&gt;Filesystem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#finance-1"&gt;Finance&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#functional-programming"&gt;Functional Programming&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#game-development"&gt;Game development&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#geospatial"&gt;Geospatial&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#graph-algorithms"&gt;Graph algorithms&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#graphics-1"&gt;Graphics&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#gui"&gt;GUI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#image-processing-1"&gt;Image processing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#language-specification"&gt;Language specification&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#licensing"&gt;Licensing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#logging"&gt;Logging&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#macro"&gt;Macro&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#markup-language"&gt;Markup language&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#mobile"&gt;Mobile&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#network-programming"&gt;Network programming&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#parsing"&gt;Parsing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#peripherals"&gt;Peripherals&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#platform-specific"&gt;Platform specific&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#reverse-engineering"&gt;Reverse engineering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#scripting"&gt;Scripting&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#simulation"&gt;Simulation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#social-networks-1"&gt;Social networks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#system"&gt;System&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#task-scheduling-1"&gt;Task scheduling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#template-engine"&gt;Template engine&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#text-processing-1"&gt;Text processing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#text-search"&gt;Text search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#unsafe"&gt;Unsafe&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#video-1"&gt;Video&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#virtualization-1"&gt;Virtualization&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#web-programming"&gt;Web programming&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#registries"&gt;Registries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#resources"&gt;Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- tocstop --&gt; 
&lt;h2&gt;Applications&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alacritty/alacritty"&gt;alacritty&lt;/a&gt; - A cross-platform, GPU enhanced terminal emulator&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.torproject.org/tpo/core/arti"&gt;Arti&lt;/a&gt; - An implementation of Tor. (So far, it's a not-very-complete client. But watch this space!) &lt;a href="https://crates.io/crates/arti"&gt;&lt;img src="https://img.shields.io/crates/v/arti.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cch123/asm-cli-rust"&gt;asm-cli-rust&lt;/a&gt; - An interactive assembly shell.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/clash-verge-rev/clash-verge-rev"&gt;clash-verge-rev/clash-verge-rev&lt;/a&gt; - A cross-platform, modern Clash GUI based on tauri &amp;amp; rust, supporting Windows, macOS, and Linux.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudflare/boringtun"&gt;cloudflare/boringtun&lt;/a&gt; - A Userspace WireGuard VPN Implementation &lt;a href="https://crates.io/crates/boringtun"&gt;&lt;img src="https://img.shields.io/crates/v/boringtun.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/defguard/defguard"&gt;defguard&lt;/a&gt; - Enterprise Open Source SSO &amp;amp; WireGuard VPN with real 2FA/MFA&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/denoland/deno"&gt;denoland/deno&lt;/a&gt; - A secure JavaScript/TypeScript runtime built with V8 and Tokio &lt;a href="https://github.com/denoland/deno/actions"&gt;&lt;img src="https://github.com/denoland/deno/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/doprz/dipc"&gt;doprz/dipc&lt;/a&gt; - Convert your favorite images and wallpapers with your favorite color palettes/themes &lt;a href="https://crates.io/crates/dipc"&gt;&lt;img src="https://img.shields.io/crates/v/dipc" alt="crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/EasyTier/EasyTier"&gt;EasyTier&lt;/a&gt; - A simple, full-featured and decentralized mesh VPN with WireGuard support. &lt;a href="https://crates.io/crates/easytier"&gt;&lt;img src="https://img.shields.io/crates/v/easytier" alt="crates.io" /&gt;&lt;/a&gt; &lt;a href="https://github.com/EasyTier/EasyTier/actions/"&gt;&lt;img src="https://github.com/EasyTier/EasyTier/actions/workflows/core.yml/badge.svg?sanitize=true" alt="GitHub actions" /&gt;&lt;/a&gt;&lt;a href="https://github.com/EasyTier/EasyTier/actions/"&gt;&lt;img src="https://github.com/EasyTier/EasyTier/actions/workflows/gui.yml/badge.svg?sanitize=true" alt="GitHub actions" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/edit"&gt;Edit&lt;/a&gt; - A simple editor for simple needs. &lt;a href="https://github.com/microsoft/edit/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/microsoft/edit/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fcsonline/drill"&gt;fcsonline/drill&lt;/a&gt; - A HTTP load testing application inspired by Ansible syntax&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/printfn/fend"&gt;fend&lt;/a&gt; - Arbitrary-precision unit-aware calculator &lt;a href="https://github.com/printfn/fend/actions/workflows/actions.yml"&gt;&lt;img src="https://github.com/printfn/fend/workflows/build/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fractalide/fractalide"&gt;Fractalide&lt;/a&gt; - Simple microservices&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/habitat-sh/habitat"&gt;habitat&lt;/a&gt; - A tool created by Chef to build, deploy, and manage applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/imjacobclark/Herd"&gt;Herd&lt;/a&gt; - an experimental HTTP load testing application&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/hickory-dns"&gt;hickory-dns&lt;/a&gt; - A DNS-server &lt;a href="https://github.com/hickory-dns/hickory-dns/actions?query=workflow%3Atest"&gt;&lt;img src="https://github.com/hickory-dns/hickory-dns/actions/workflows/test.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tonarino/innernet"&gt;innernet&lt;/a&gt; - An overlay or private mesh network that uses Wireguard under the hood&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/awslabs/flowgger"&gt;jedisct1/flowgger&lt;/a&gt; - A fast, simple and lightweight data collector&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PaddiM8/kalker"&gt;kalker&lt;/a&gt; - A scientific calculator that supports math-like syntax with user-defined variables, functions, derivation, integration, and complex numbers. Cross-platform + WASM support &lt;a href="https://github.com/PaddiM8/kalker/actions"&gt;&lt;img src="https://github.com/PaddiM8/kalker/workflows/Release/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hcavarsan/kftray"&gt;kftray&lt;/a&gt; - A cross-platform system tray app for managing and sharing multiple kubectl port-forward configurations. &lt;a href="https://github.com/hcavarsan/kftray/actions"&gt;&lt;img src="https://github.com/hcavarsan/kftray/workflows/Release/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/changlan/kytan"&gt;kytan&lt;/a&gt; - High Performance Peer-to-Peer VPN&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linkerd/linkerd2-proxy"&gt;linkerd/linkerd2-proxy&lt;/a&gt; - Ultralight service mesh for Kubernetes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maidsafe"&gt;MaidSafe&lt;/a&gt; - A decentralized platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-lang/mdBook"&gt;mdBook&lt;/a&gt; - A command line utility to create books from markdown files &lt;a href="https://github.com/rust-lang/mdBook/actions"&gt;&lt;img src="https://github.com/rust-lang/mdBook/actions/workflows/main.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/web3infra-foundation/mega"&gt;Mega&lt;/a&gt; - A monorepo &amp;amp; monolithic codebase management system that supports Git, also is an unofficial open source implementation of Google Piper.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/metalbear-co/mirrord"&gt;mirrord&lt;/a&gt; - Connect your local process and your cloud environment, and run local code in cloud conditions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nicohman/eidolon"&gt;nicohman/eidolon&lt;/a&gt; - A steam and drm-free game registry and launcher for linux and macosx&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pijul.org"&gt;Pijul&lt;/a&gt; - A patch-based distributed version control system&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sebadob/rauthy"&gt;Rauthy&lt;/a&gt; - OpenID Connect Single Sign-On Identity &amp;amp; Access Management&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/raphamorim/rio"&gt;Rio&lt;/a&gt; - A hardware-accelerated GPU terminal emulator powered by WebGPU, focusing to run in desktops and browsers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iot-ecology/rust-iot-platform"&gt;Rust Iot Platform&lt;/a&gt; - A high-performance IoT development platform built with Rust, designed for multi-protocol support and real-time data processing. This platform supports MQTT, WebSockets (WS), TCP, and CoAP protocols, making it highly flexible for diverse IoT applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudhead/rx"&gt;rx&lt;/a&gt; - Vi inspired Modern Pixel Art Editor&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ignisda/ryot"&gt;Ryot&lt;/a&gt; - A self hosted application to track media consumption, fitness, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sopaco/saga-reader"&gt;Saga Reader&lt;/a&gt; - A Blazing-Fast and Extremely-Lightweight Internet Reader driven by AI.Supports fetching of search engine information and RSS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/servo/servo"&gt;Servo&lt;/a&gt; - A prototype web browser engine&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cfal/shoes"&gt;shoes&lt;/a&gt; - A multi-protocol proxy server&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shuttle-hq/shuttle"&gt;shuttle&lt;/a&gt; - A serverless platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GyulyVGC/sniffnet"&gt;Sniffnet&lt;/a&gt; - Cross-platform application to monitor your network traffic with ease &lt;a href="https://github.com/GyulyVGC/sniffnet/raw/main/.github/workflows/rust.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/gyulyvgc/sniffnet/rust.yml?logo=github" alt="build badge" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/sniffnet"&gt;&lt;img src="https://img.shields.io/crates/v/sniffnet?logo=rust" alt="crate" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/swc-project/swc"&gt;SWC&lt;/a&gt; - super-fast TypeScript / JavaScript compiler&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osa1/tiny"&gt;tiny&lt;/a&gt; - A terminal IRC client&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/upvpn/upvpn-app"&gt;UpVPN&lt;/a&gt; - WireGuard VPN client for macOS, Linux, and Windows built on Tauri.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/0x676e67/vproxy"&gt;vproxy&lt;/a&gt; - A high-performance HTTP/HTTPS/SOCKS5 proxy server &lt;a href="https://crates.io/crates/vproxy"&gt;&lt;img src="https://img.shields.io/crates/v/vproxy.svg?sanitize=true" alt="crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wasmerio/wasmer"&gt;wasmer&lt;/a&gt; - A safe and fast WebAssembly runtime supporting WASI and Emscripten &lt;a href="https://github.com/wasmerio/wasmer/actions"&gt;&lt;img src="https://github.com/wasmerio/wasmer/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/serayuzgur/weld"&gt;Weld&lt;/a&gt; - Full fake REST API generator&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wezterm/wezterm"&gt;wezterm&lt;/a&gt; - A GPU-accelerated cross-platform terminal emulator and multiplexer&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wasmerio/winterjs"&gt;WinterJS&lt;/a&gt; - A secure JavaScript runtime built with SpiderMonkey and Axum&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zellij-org/zellij"&gt;zellij&lt;/a&gt; - A terminal multiplexer (workspace) with batteries included&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Audio and Music&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kimono-koans/dano"&gt;dano&lt;/a&gt; - A hashdeep/md5tree (but much more) for media files&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DasEtwas/enginesound"&gt;enginesound&lt;/a&gt; - A GUI and command line application used to procedurally generate semi-realistic engine sounds. Featuring in-depth configuration, variable sample rate and a frequency analysis window.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hinto-janai/festival"&gt;Festival&lt;/a&gt; - A local music player/server/client &lt;a href="https://github.com/hinto-janai/festival/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/hinto-janai/festival/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build-badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/figsoda/mmtc"&gt;figsoda/mmtc&lt;/a&gt; [&lt;a href="https://crates.io/crates/mmtc"&gt;mmtc&lt;/a&gt;] - Minimal mpd terminal client that aims to be simple yet highly configurable &lt;a href="https://github.com/figsoda/mmtc/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/figsoda/mmtc/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build-badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chaosprint/glicol"&gt;Glicol&lt;/a&gt; - Graph-oriented live coding language, for collaborative musicking in browsers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hrkfdn/ncspot"&gt;ncspot&lt;/a&gt; - Cross-platform ncurses Spotify client, inspired by ncmpc and the likes. &lt;a href="https://github.com/hrkfdn/ncspot/actions?query=workflow%3ABuild"&gt;&lt;img src="https://github.com/hrkfdn/ncspot/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/madeofpendletonwool/PinePods"&gt;Pinepods&lt;/a&gt; - A rust based podcast management system with multi-user support. Pinepods utilizes a central database so aspects like listen time and themes follow from device to device. With clients built using Tauri, it's a full cross-platform listening solution! &lt;a href="https://github.com/madeofpendletonwool/PinePods/actions/workflows/docker-publish.yml"&gt;&lt;img src="https://github.com/madeofpendletonwool/PinePods/actions/workflows/docker-publish.yml/badge.svg?sanitize=true" alt="Docker Container Build" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agersant/polaris"&gt;Polaris&lt;/a&gt; - A music streaming application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aome510/spotify-player"&gt;Spotify Player&lt;/a&gt; - A Spotify player in the terminal with full feature parity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Spotifyd/spotifyd"&gt;Spotifyd&lt;/a&gt; - An open source Spotify client running as a UNIX daemon. &lt;a href="https://github.com/Spotifyd/spotifyd/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/Spotifyd/spotifyd/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Continuous Integration" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tramhao/termusic"&gt;termusic&lt;/a&gt; - Music Player TUI written&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sergree/whatbpm"&gt;WhatBPM&lt;/a&gt; - A daily statically generated information resource for electronic dance music producers. Provides daily analytics on the most frequently used values for each EDM genre: tempos, keys, root notes, and so on, using publicly available data such as Beatport and Spotify.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Blockchain&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/solana-foundation/anchor"&gt;Anchor&lt;/a&gt; - Anchor is the leading development framework for building secure Solana programs (smart contracts).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paradigmxyz/artemis"&gt;artemis&lt;/a&gt; - A simple, modular, and fast framework for writing MEV bots.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eigerco/beerus"&gt;beerus&lt;/a&gt; - Beerus is a trustless StarkNet Light Client, ⚡blazing fast ⚡ &lt;a href="https://github.com/eigerco/beerus/actions/workflows/check.yml"&gt;&lt;img src="https://github.com/eigerco/beerus/actions/workflows/check.yml/badge.svg?sanitize=true" alt="GitHub Workflow Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brentongunning/rust-sv"&gt;Bitcoin Satoshi's Vision&lt;/a&gt; [&lt;a href="https://crates.io/crates/sv"&gt;sv&lt;/a&gt;] - A library for working with Bitcoin SV.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/starkware-libs/cairo"&gt;cairo&lt;/a&gt; - Cairo is the first Turing-complete language for creating provable programs for general computation. This is also the native language of &lt;a href="https://www.starknet.io"&gt;StarkNet&lt;/a&gt;, a ZK-Rollup using STARK proofs &lt;img src="https://img.shields.io/github/workflow/status/starkware-libs/cairo/CI?style=flat-square&amp;amp;logo=github" alt="GitHub Workflow Status" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lambdaclass/cairo-vm"&gt;cairo-vm&lt;/a&gt; - Implementation of the Cairo VM &lt;a href="https://github.com/lambdaclass/cairo-vm/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/lambdaclass/cairo-vm/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="rust" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chainx-org/ChainX"&gt;ChainX&lt;/a&gt; - Fully Decentralized Interchain Crypto Asset Management on Polkadot.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/citahub/cita"&gt;CITA&lt;/a&gt; - A high performance blockchain kernel for enterprise users.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/inv2004/coinbase-pro-rs"&gt;coinbase-pro-rs&lt;/a&gt; - Coinbase pro client, supports sync/async/websocket&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/diem/diem"&gt;Diem&lt;/a&gt; - Diem’s mission is to enable a simple global currency and financial infrastructure that empowers billions of people.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dusk-network/rusk"&gt;dusk-network/rusk&lt;/a&gt; - Reference implementation of Dusk, a privacy-focused, scalable FMI for real-world assets (RWA) and compliant financial applications. &lt;a href="https://github.com/dusk-network/rusk/actions/workflows/rusk_ci.yml"&gt;&lt;img src="https://github.com/dusk-network/rusk/actions/workflows/rusk_ci.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/romanz/electrs"&gt;electrumrs&lt;/a&gt; - An efficient re-implementation of Electrum Server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-ethereum/ethabi"&gt;ethabi&lt;/a&gt; - Encode and decode smart contract invocations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Limeth/ethaddrgen"&gt;ethaddrgen&lt;/a&gt; - Custom Ethereum vanity address generator&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/quilt/etk"&gt;etk&lt;/a&gt; - etk is a collection of tools for writing, reading, and analyzing EVM bytecode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChainSafe/forest"&gt;Forest&lt;/a&gt; - Filecoin implementation &lt;a href="https://app.circleci.com/pipelines/github/ChainSafe/forest?branch=main"&gt;&lt;img src="https://img.shields.io/circleci/build/gh/ChainSafe/forest/main?branch=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/foundry-rs/foundry"&gt;Foundry&lt;/a&gt; - Foundry is a blazing fast, portable and modular toolkit for Ethereum application development. &lt;img src="https://img.shields.io/github/workflow/status/foundry-rs/foundry/test?style=flat-square" alt="Build Status" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mimblewimble/grin/"&gt;Grin&lt;/a&gt; - Evolution of the MimbleWimble protocol&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jjyr/hdwallet"&gt;hdwallet&lt;/a&gt; [&lt;a href="https://crates.io/crates/hdwallet"&gt;hdwallet&lt;/a&gt;] - BIP-32 HD wallet related key derivation utilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/holochain/holochain"&gt;Holochain&lt;/a&gt; - Scalable P2P alternative to blockchain for all those distributed apps you always wanted to build. &lt;a href="https://github.com/holochain/holochain/actions/"&gt;&lt;img src="https://github.com/holochain/holochain/actions/workflows/autorebase.yml/badge.svg?sanitize=true" alt="detect critical check failures" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hyperlane-xyz/hyperlane-monorepo"&gt;Hyperlane&lt;/a&gt; - Framework for permissionless, modular interoperability. The offchain clients are written in Rust, as well as the smart contracts for Solana VM and CosmWasm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/informalsystems/hermes"&gt;ibc-rs&lt;/a&gt; - Implementation of the &lt;a href="https://ibc.cosmos.network/"&gt;Interblockchain Communication&lt;/a&gt; protocol&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/infincia/bip39-rs"&gt;infincia/bip39-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/bip39"&gt;bip39&lt;/a&gt;] - Implementation of BIP39.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/interlay/interbtc"&gt;interBTC&lt;/a&gt; - Trustless and fully decentralized Bitcoin bridge to Polkadot and Kusama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Joystream/joystream"&gt;Joystream&lt;/a&gt; - A user governed video platform&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kaspanet/rusty-kaspa"&gt;Kaspa&lt;/a&gt; - The fastest, open-source, decentralized &amp;amp; fully scalable Layer-1 in the world.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sigp/lighthouse"&gt;Lighthouse&lt;/a&gt; - Ethereum Consensus Layer (CL) Client &lt;a href="https://github.com/sigp/lighthouse/actions"&gt;&lt;img src="https://github.com/sigp/lighthouse/actions/workflows/test-suite.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/near/nearcore"&gt;near/nearcore&lt;/a&gt; - decentralized smart-contract platform for low-end mobile devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nervosnetwork/ckb"&gt;Nervos CKB&lt;/a&gt; - Nervos CKB is a public permissionless blockchain, the common knowledge layer of Nervos network.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gakonst/opensea-rs"&gt;opensea-rs&lt;/a&gt; - Bindings &amp;amp; CLI to the Opensea API and Contracts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paritytech/parity-bitcoin"&gt;Parity-Bitcoin&lt;/a&gt; - The Parity Bitcoin client&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Phala-Network/phala-blockchain"&gt;Phala-Network/phala-blockchain&lt;/a&gt; - Confidential smart contract blockchain based on Intel SGX and Substrate&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paritytech/polkadot-sdk"&gt;polkadot-sdk&lt;/a&gt; - The Parity Polkadot Blockchain SDK&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paradigmxyz/reth"&gt;reth&lt;/a&gt; - Modular, contributor-friendly and blazing-fast implementation of the Ethereum protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bluealloy/revm"&gt;revm&lt;/a&gt; - Revolutionary Machine (revm) is a fast Ethereum virtual machine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-bitcoin/rust-bitcoin"&gt;rust-bitcoin&lt;/a&gt; - Library with support for de/serialization, parsing and executing on data structures and network messages related to Bitcoin.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lightningdevkit/rust-lightning"&gt;rust-lightning&lt;/a&gt; &lt;a href="https://crates.io/crates/lightning"&gt;&lt;img src="https://img.shields.io/crates/v/lightning.svg?logo=rust" alt="Crate" /&gt;&lt;/a&gt; - Bitcoin Lightning library. The main crate,&lt;code&gt;lightning&lt;/code&gt;, does not handle networking, persistence, or any other I/O. Thus,it is runtime-agnostic, but users must implement basic networking logic, chain interactions, and disk storage.po on linking crate.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ergoplatform/sigma-rust"&gt;sigma-rust&lt;/a&gt; - ErgoTree interpreter and wallet-related features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/autonomys/subspace"&gt;Subspace&lt;/a&gt; - The first layer-one blockchain that can fully resolve the blockchain trilemma by simultaneously achieving scalability, security, and decentralization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MystenLabs/sui"&gt;Sui&lt;/a&gt; - A next-generation smart contract platform with high throughput, low latency, and an asset-oriented programming model powered by the Move programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alloy-rs/svm-rs"&gt;svm-rs&lt;/a&gt; - Solidity-Compiler Version Manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cometbft/tendermint-rs"&gt;tendermint-rs&lt;/a&gt; - Tendermint blockchain data structures and clients&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/howardwu/wagyu"&gt;wagyu&lt;/a&gt; [&lt;a href="https://crates.io/crates/wagyu"&gt;wagyu&lt;/a&gt;] - Library for generating cryptocurrency wallets&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zcash/zcash"&gt;zcash&lt;/a&gt; - Zcash is an implementation of the "Zerocash" protocol.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Database&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apecloud/ape-dts"&gt;apecloud/ape-dts&lt;/a&gt; - Data Transfer Suite. Provides data replication between MySQL, PostgreSQL, Redis, MongoDB, Kafka, ClickHouse, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atomicdata-dev/atomic-server/"&gt;Atomic-Server&lt;/a&gt; [&lt;a href="https://crates.io/crates/atomic_server"&gt;atomic-server&lt;/a&gt;] - NoSQL graph database with realtime updates, dynamic indexing and easy-to-use GUI for CMS purposes. &lt;a href="https://github.com/atomicdata-dev/atomic-server/actions"&gt;&lt;img src="https://github.com/atomicdata-dev/atomic-server/actions/workflows/release_please.yml/badge.svg?sanitize=true" alt="Release" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cozodb/cozo"&gt;CozoDB&lt;/a&gt; - A transactional, relational database that uses Datalog and focuses on graph data and algorithms. Time-travel-capable, and fast! &lt;a href="https://github.com/cozodb/cozo/actions/workflows/build.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/cozodb/cozo/build.yml?branch=main" alt="GitHub Workflow Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Rustixir/darkbird"&gt;darkbird&lt;/a&gt; [&lt;a href="https://crates.io/crates/darkbird"&gt;darkbird&lt;/a&gt;] - HighConcurrency, RealTime, InMemory storage inspired by erlang mnesia&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/databendlabs/databend"&gt;Databend&lt;/a&gt; - A Modern Real-Time Data Processing &amp;amp; Analytics DBMS with Cloud-Native Architecture &lt;a href="https://github.com/databendlabs/databend/actions"&gt;&lt;img src="https://github.com/databendlabs/databend/actions/workflows/release.yml/badge.svg?sanitize=true" alt="Release" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dbpunk-labs/db3"&gt;DB3 Network&lt;/a&gt; - DB3 is a community-driven blockchain layer2 decentralized database network &lt;a href="https://github.com/dbpunk-labs/db3/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/dbpunk-labs/db3/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="GitHub Workflow Status (with event)" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/erikgrinaker/toydb"&gt;erikgrinaker/toydb&lt;/a&gt; - Distributed SQL database, written as a learning project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deuxfleurs-org/garage"&gt;Garage&lt;/a&gt; [&lt;a href="https://crates.io/crates/garage"&gt;garage&lt;/a&gt;] - S3-compatible distributed object storage service designed for self-hosting at a small-to-medium scale. &lt;a href="https://woodpecker.deuxfleurs.fr/repos/1"&gt;&lt;img src="https://woodpecker.deuxfleurs.fr/api/badges/1/status.svg?sanitize=true" alt="status-badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gluesql/gluesql"&gt;GlueSQL&lt;/a&gt; - Rust library for SQL databases that includes a parser (sqlparser-rs), an execution layer, and a variety of storage options, both persistent and non-persistent, all in one package. &lt;a href="https://crates.io/crates/gluesql"&gt;&lt;img src="https://img.shields.io/crates/v/gluesql.svg?sanitize=true" alt="crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/grepTimeTeam/greptimedb/"&gt;GreptimeDB&lt;/a&gt; - An open-source, cloud-native, distributed time-series database with PromQL/SQL/Python supported.&lt;a href="https://github.com/greptimeTeam/greptimedb/actions/workflows/develop.yml"&gt;&lt;img src="https://github.com/greptimeTeam/greptimedb/actions/workflows/develop.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HelixDB/helix-db"&gt;HelixDB&lt;/a&gt; - A powerful, graph-vector database for intelligent data storage for RAG and AI&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sebadob/hiqlite"&gt;Hiqlite&lt;/a&gt; - highly-available, embeddable, raft-based SQLite + cache&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/indradb"&gt;indradb&lt;/a&gt; - Graph database&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KipData/KiteSQL"&gt;KiteSQL&lt;/a&gt; - SQL as a Function for Rust&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lancedb/lancedb"&gt;lancedb&lt;/a&gt; [&lt;a href="https://crates.io/crates/vectordb"&gt;vectordb&lt;/a&gt;] - A serverless, low-latency vector database for AI applications&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lucid-kv/lucid"&gt;Lucid&lt;/a&gt; - High performance and distributed KV store accessible through a HTTP API. &lt;a href="https://github.com/lucid-kv/lucid/actions?workflow=Lucid"&gt;&lt;img src="https://github.com/lucid-kv/lucid/workflows/Lucid/badge.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MaterializeInc/materialize"&gt;Materialize&lt;/a&gt; - Streaming SQL database powered by Timely Dataflow &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vincent-herlemont/native_db"&gt;native_db&lt;/a&gt; [&lt;a href="https://crates.io/crates/native_db"&gt;native_db&lt;/a&gt;] - Drop-in, embedded database for multi-platform apps (server, desktop, mobile). Sync Rust types effortlessly&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neondatabase/neon"&gt;Neon&lt;/a&gt; - Serverless Postgres. We separated storage and compute to offer autoscaling, branching, and bottomless storage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mit-pdos/noria"&gt;noria&lt;/a&gt; [&lt;a href="https://crates.io/crates/noria"&gt;noria&lt;/a&gt;] - Dynamically changing, partially-stateful data-flow for web application backends&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oxigraph/oxigraph"&gt;oxigraph/oxigraph&lt;/a&gt; [&lt;a href="https://crates.io/crates/oxigraph"&gt;oxigraph&lt;/a&gt;] - graph database implementing the &lt;a href="https://www.w3.org/TR/sparql11-overview/"&gt;SPARQL&lt;/a&gt; standard &lt;img src="https://img.shields.io/crates/v/oxigraph?logo=Rust" alt="Crates.io Version" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paradedb/paradedb/"&gt;ParadeDB&lt;/a&gt; - ParadeDB is an Elasticsearch alternative built on Postgres, designed for real-time search and analytics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paritytech/parity-db"&gt;ParityDB&lt;/a&gt; - Fast and reliable database, optimised for read operation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PumpkinDB/PumpkinDB"&gt;PumpkinDB&lt;/a&gt; - an event sourcing database engine&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qdrant/qdrant"&gt;Qdrant&lt;/a&gt; - An open source vector similarity search engine with extended filtering support &lt;a href="https://github.com/qdrant/qdrant/actions"&gt;&lt;img src="https://github.com/qdrant/qdrant/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="Tests" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Qrlew/qrlew"&gt;Qrlew/qrlew&lt;/a&gt; [&lt;a href="https://crates.io/crates/qrlew"&gt;qrlew&lt;/a&gt;] - The SQL-to-SQL Differential Privacy layer &lt;a href="https://github.com/Qrlew/qrlew/actions"&gt;&lt;img src="https://github.com/Qrlew/qrlew/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Qrlew" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/crates/v/qrlew?logo=Rust" alt="Crates.io Version" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RisingWaveLabs/risingwave"&gt;RisingWaveLabs/RisingWave&lt;/a&gt; - the next-generation streaming database in the cloud &lt;a href="https://github.com/risingwavelabs/risingwave/actions"&gt;&lt;img src="https://github.com/risingwavelabs/risingwave/actions/workflows/labeler.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seppo0010/rsedis"&gt;seppo0010/rsedis&lt;/a&gt; - A Redis reimplementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skytable/skytable"&gt;Skytable&lt;/a&gt; - A multi-model NoSQL database &lt;img src="https://img.shields.io/github/workflow/status/skytable/skytable/Tests?style=flat-square" alt="GitHub Workflow Status" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/sled"&gt;sled&lt;/a&gt; - A (beta) modern embedded database &lt;a href="https://github.com/spacejam/sled/actions?workflow=Rust"&gt;&lt;img src="https://github.com/spacejam/sled/actions/workflows/test.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orbitinghail/sqlsync"&gt;SQLSync&lt;/a&gt; - Multiplayer offline-first SQLite &lt;a href="https://github.com/orbitinghail/sqlsync/actions?query=branch%3Amain"&gt;&lt;img src="https://github.com/orbitinghail/sqlsync/actions/workflows/actions.yaml/badge.svg?branch=main" alt="GitHub Workflow Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/surrealdb/surrealdb"&gt;SurrealDB&lt;/a&gt; - A scalable, distributed, document-graph database &lt;a href="https://github.com/surrealdb/surrealdb/actions"&gt;&lt;img src="https://img.shields.io/github/workflow/status/surrealdb/surrealdb/Continuous%20integration/main" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/terminusdb/terminusdb-store"&gt;TerminusDB&lt;/a&gt; - open source graph database and document store &lt;a href="https://github.com/terminusdb/terminusdb-store/actions"&gt;&lt;img src="https://github.com/terminusdb/terminusdb-store/actions/workflows/test.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tikv/tikv"&gt;tikv&lt;/a&gt; - A distributed KV database in Rust &lt;a href="https://ci.pingcap.net/job/tikv_ghpr_test/"&gt;&lt;img src="https://ci.pingcap.net/job/tikv_ghpr_test/badge/icon" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tonbo-io/tonbo"&gt;Tonbo&lt;/a&gt; - Tonbo is an embedded persistent database built on Apache Arrow &amp;amp; Parquet &lt;a href="https://crates.io/crates/tonbo"&gt;&lt;img src="https://img.shields.io/crates/v/tonbo.svg?sanitize=true" alt="crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trailbaseio/trailbase"&gt;TrailBase&lt;/a&gt; - A fast, lightweight, single-file FireBase alternative with type-safe APIs, built-in V8 JS/ES6/TS engine, auth and admin dashboard &lt;a href="https://github.com/trailbaseio/trailbase/actions?workflow=test"&gt;&lt;img src="https://github.com/trailbaseio/trailbase/workflows/test/badge.svg?sanitize=true" alt="GitHub Workflow Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tursodatabase/turso"&gt;Turso&lt;/a&gt; - Turso Database is an in-process SQL database, compatible with SQLite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unum-cloud/usearch"&gt;USearch&lt;/a&gt; - Similarity Search Engine for Vectors and Strings &lt;a href="https://crates.io/crates/usearch"&gt;&lt;img src="https://img.shields.io/crates/v/usearch.svg?sanitize=true" alt="crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kn0sys/valentinus"&gt;valentinus&lt;/a&gt; - Next generation vector database built with LMDB bindings &lt;a href="https://crates.io/crates/valentinus"&gt;&lt;img src="https://img.shields.io/crates/v/valentinus" alt="Crates.io Version" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vorot93/libmdbx-rs"&gt;vorot93/libmdbx-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/mdbx-sys"&gt;mdbx-sys&lt;/a&gt;] - Bindings for MDBX, a "fast, compact, powerful, embedded, transactional key-value database, with permissive license". This is a fork of mozilla/lmdb-rs with patches to make it work with libmdbx.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/naomijub/wooridb"&gt;WooriDB&lt;/a&gt; - General purpose time serial database inspired by Crux and Datomic.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Embedded&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/haobogu/rmk"&gt;rmk&lt;/a&gt; - A feature-rich keyboard firmware.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-osdev/uefi-rs"&gt;uefi-rs&lt;/a&gt; - Rusty wrapper for the Unified Extensible Firmware Interface. This crate makes it easy to develop Rust software that leverages safe, convenient, and performant abstractions for UEFI functionality.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Emulators&lt;/h3&gt; 
&lt;p&gt;See also &lt;a href="https://crates.io/keywords/emulator"&gt;crates matching keyword 'emulator'&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;CHIP-8 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ColinEberhardt/wasm-rust-chip8"&gt;ColinEberhardt/wasm-rust-chip8&lt;/a&gt; - A WebAssembly CHIP-8 emulator.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/starrhorne/chip8-rust"&gt;starrhorne/chip8-rust&lt;/a&gt; - chip8 emulator&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Commodore 64 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/kondrak/rust64"&gt;kondrak/rust64&lt;/a&gt; - Commodore 64 emulator&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Flash Player 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ruffle-rs/ruffle"&gt;Ruffle&lt;/a&gt; - Ruffle is an Adobe Flash Player emulator. Ruffle targets both the desktop and the web using WebAssembly. &lt;a href="https://github.com/ruffle-rs/ruffle/actions/workflows/test_rust.yml"&gt;&lt;img src="https://github.com/ruffle-rs/ruffle/actions/workflows/test_rust.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ruffle-rs/ruffle/actions/workflows/test_web.yml"&gt;&lt;img src="https://github.com/ruffle-rs/ruffle/actions/workflows/test_web.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Gameboy 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Gekkio/mooneye-gb"&gt;Gekkio/mooneye-gb&lt;/a&gt; - A Game Boy research project and emulator&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/joamag/boytacean"&gt;joamag/boytacean&lt;/a&gt; - GameBoy Color emulator that runs on the Web using WebAssembly.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mohanson/gameboy"&gt;mohanson/gameboy&lt;/a&gt; - Full featured Cross-platform GameBoy emulator. Forever boys!.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mvdnes/rboy"&gt;mvdnes/rboy&lt;/a&gt; - A Gameboy Emulator&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Gameboy Advance 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/michelhe/rustboyadvance-ng"&gt;michelhe/rustboyadvance-ng&lt;/a&gt; - RustboyAdvance-ng is a Gameboy Advance emulator with desktop, android and &lt;a href="https://michelhe.github.io/rustboyadvance-ng/"&gt;WebAssembly&lt;/a&gt; support. &lt;a href="https://github.com/michelhe/rustboyadvance-ng/actions?query=workflow%3ADeploy"&gt;&lt;img src="https://github.com/michelhe/rustboyadvance-ng/actions/workflows/deploy.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;GameMaker 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/OpenGMK/OpenGMK"&gt;OpenGMK&lt;/a&gt; - OpenGMK is a modern rewrite of the proprietary GameMaker Classic engines, providing a full sourceport of the runner, a decompiler, a TASing framework, and libraries for working with gamedata yourself.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;IBM PC 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/dbalsom/martypc"&gt;MartyPC&lt;/a&gt; - An IBM PC/XT emulator written in Rust.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Intel 8080 CPU 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mohanson/i8080"&gt;mohanson/i8080&lt;/a&gt; - Intel 8080 CPU emulator&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;iOS 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/touchHLE/touchHLE"&gt;touchHLE&lt;/a&gt; - High-level emulator for iPhone OS apps&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;iPod 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/daniel5151/clicky"&gt;clicky&lt;/a&gt; - A clickwheel iPod emulator (WIP)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;NES 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/koute/pinky"&gt;koute/pinky&lt;/a&gt; - A NES emulator&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/pcwalton/sprocketnes"&gt;pcwalton/sprocketnes&lt;/a&gt; - A NES emulator&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Nintendo 64 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/gopher64/gopher64"&gt;gopher64&lt;/a&gt; - N64 emulator written in Rust&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Nintendo DS 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/kelpsyberry/dust"&gt;dust&lt;/a&gt; - A Nintendo DS emulator&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;PlayStation 4 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/obhq/obliteration"&gt;Obliteration&lt;/a&gt; - Experimental PS4 emulator for Windows, macOS and Linux &lt;a href="https://github.com/obhq/obliteration/actions/workflows/main.yml"&gt;&lt;img src="https://github.com/obhq/obliteration/actions/workflows/main.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Shockwave Player 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/igorlira/dirplayer-rs"&gt;DirPlayer&lt;/a&gt; - A web-compatible Shockwave Player emulator written in Rust&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ZX Spectrum 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rustzx/rustzx"&gt;rustzx/rustzx&lt;/a&gt; - &lt;a href="https://github.com/rustzx/rustzx/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/rustzx/rustzx/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="RustZX CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;File manager&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Canop/broot"&gt;broot&lt;/a&gt; - A new way to see and navigate directory trees (get an overview of a directory, even a big one; find a directory then &lt;code&gt;cd&lt;/code&gt; to it; never lose track of file hierarchy while you search; manipulate your files, ...), further reading &lt;a href="https://dystroy.org/broot/"&gt;dystroy.org/broot&lt;/a&gt; &lt;a href="https://crates.io/crates/broot"&gt;&lt;img src="https://img.shields.io/crates/v/broot.svg?sanitize=true" alt="Latest Version" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kamiyaa/joshuto"&gt;joshuto&lt;/a&gt; - ranger-like terminal file manager&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sayanarijit/xplr"&gt;xplr&lt;/a&gt; - A hackable, minimal, fast TUI file explorer&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sxyazi/yazi"&gt;yazi&lt;/a&gt; - Blazing fast terminal file manager, based on async I/O.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Finance&lt;/h3&gt; 
&lt;p&gt;See also &lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/#payments"&gt;Payments&lt;/a&gt; applications.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Sajjon/klirr"&gt;klirr&lt;/a&gt; [&lt;a href="https://crates.io/crates/klirr"&gt;klirr&lt;/a&gt;] - Zero-maintenance and smart FOSS generating beautiful invoices for services and expenses.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tackler-ng/tackler"&gt;tackler&lt;/a&gt; [&lt;a href="https://crates.io/crates/tackler"&gt;tackler&lt;/a&gt;] - Fast, reliable bookkeeping engine with native GIT SCM support for plain text accounting &lt;a href="https://github.com/tackler-ng/tackler/raw/main/.github/workflows/ci.yml"&gt;&lt;img src="https://github.com/tackler-ng/tackler/actions/workflows/ci.yml/badge.svg?branch=main" alt="CI Badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tarkah/tickrs"&gt;tarkah/tickrs&lt;/a&gt; - Realtime ticker data in your terminal&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Games&lt;/h3&gt; 
&lt;p&gt;See also &lt;a href="https://github.com/PistonDevelopers/piston/wiki/Games-Made-With-Piston"&gt;Games Made With Piston&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/buxx/OpenCombat"&gt;buxx/OpenCombat&lt;/a&gt; - A realtime 2nd world war tactical game&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thomas-mauran/chess-tui"&gt;chess-tui&lt;/a&gt; - A Chess TUI implementation ♟️&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/citybound/citybound"&gt;citybound&lt;/a&gt; - The city sim you deserve&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cristicbz/rust-doom"&gt;cristicbz/rust-doom&lt;/a&gt; - A renderer for Doom, may progress to being a playable game&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/doukutsu-rs/doukutsu-rs"&gt;doukutsu-rs&lt;/a&gt; - Reimplementation of Cave Story engine with some enhancements.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/garkimasera/rusted-ruins"&gt;garkimasera/rusted-ruins&lt;/a&gt; - Extensible open world rogue like game with pixel art&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gorilla-devs/ferium"&gt;gorilla-devs/ferium&lt;/a&gt; - Ferium is a fast and feature rich CLI program for downloading and updating Minecraft mods from Modrinth, CurseForge, and GitHub Releases, and modpacks from Modrinth and CurseForge &lt;img src="https://github.com/gorilla-devs/ferium/actions/workflows/build.yml/badge.svg?branch=main" alt="ferium build" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HactarCE/Hyperspeedcube"&gt;HactarCE/Hyperspeedcube&lt;/a&gt; - A modern, beginner-friendly 3D and 4D Rubik's cube simulator with customizable mouse and keyboard controls and advanced features for speedsolving&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lifthrasiir/angolmois-rust"&gt;lifthrasiir/angolmois-rust&lt;/a&gt; - A minimalistic music video game which supports the BMS format&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maras-archive/rsnake"&gt;maras-archive/rsnake&lt;/a&gt; - Snake.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mcthesw/game-save-manager"&gt;mcthesw/game-save-manager&lt;/a&gt; - A user-friendly tool for managing game saves &lt;a href="https://github.com/mcthesw/game-save-manager/actions/workflows/tauri.yml"&gt;&lt;img src="https://github.com/mcthesw/game-save-manager/actions/workflows/tauri.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mtkennerly/ludusavi"&gt;mtkennerly/ludusavi&lt;/a&gt; - Backup tool for PC game saves &lt;a href="https://github.com/mtkennerly/ludusavi/actions/workflows/main.yaml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/mtkennerly/ludusavi/main.yaml?logo=github" alt="build badge" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/ludusavi"&gt;&lt;img src="https://img.shields.io/crates/v/ludusavi?logo=rust" alt="crate" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ozkriff/zemeroth"&gt;ozkriff/zemeroth&lt;/a&gt; - A small 2D turn-based hexagonal strategy game&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dpc/rhex"&gt;rhex&lt;/a&gt; - hexagonal ascii roguelike&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rsaarelm/magog"&gt;rsaarelm/magog&lt;/a&gt; - A roguelike game.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SoftbearStudios/mk48"&gt;SoftbearStudios/mk48&lt;/a&gt; - Mk48.io is an online multiplayer naval combat game&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/swatteau/sokoban-rs"&gt;swatteau/sokoban-rs&lt;/a&gt; - A Sokoban implementation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thetawavegame/thetawave-legacy"&gt;thetawavegame/thetawave-legacy&lt;/a&gt; - A space shooter game that strives to be an entry point for new game developers to make their first contributions. &lt;img src="https://github.com/thetawavegame/thetawave-legacy/actions/workflows/ci.yml/badge.svg?branch=master" alt="build badge" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Thinkofname/rust-quake"&gt;Thinkofname/rust-quake&lt;/a&gt; - Quake map renderer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/topheman/snake-pipe-rust"&gt;topheman/snake-pipe-rust&lt;/a&gt; - A snake game in the terminal based on stdin/stdout (+tcp and unix domain sockets) &lt;a href="https://crates.io/crates/snakepipe"&gt;&lt;img src="https://img.shields.io/crates/v/snakepipe.svg?sanitize=true" alt="crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/ttyperacer/terminal-typeracer"&gt;ttyperacer/terminal-typeracer&lt;/a&gt; - Single player typing test game written for the terminal&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/veloren/veloren"&gt;Veloren&lt;/a&gt; - An open world, open source multiplayer voxel RPG game currently in alpha development &lt;a href="https://gitlab.com/veloren/veloren/-/pipelines"&gt;&lt;img src="https://gitlab.com/veloren/veloren/badges/master/pipeline.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zipxing/rust_pixel"&gt;zipxing/rust_pixel&lt;/a&gt; [&lt;a href="https://crates.io/crates/rust_pixel"&gt;rust_pixel&lt;/a&gt;] - A 2D pixel art game engine &amp;amp; rapid prototyping tools, supporting both text and graphical rendering modes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ozkriff/zoc"&gt;Zone of Control&lt;/a&gt; - A turn-based hexagonal strategy game&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Graphics&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dps/rust-raytracer"&gt;dps/rust-raytracer&lt;/a&gt; - An implementation of a very simple raytracer based on Ray Tracing in One Weekend by Peter Shirley.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/flxzt/rnote"&gt;flxzt/rnote&lt;/a&gt; - Sketch and take handwritten notes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ivanceras/svgbob"&gt;ivanceras/svgbob&lt;/a&gt; - converts ASCII diagrams into SVG graphics&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KaminariOS/rustracer"&gt;KaminariOS/rustracer&lt;/a&gt; - A PBR glTF 2.0 renderer based on Vulkan ray-tracing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Limeth/euclider"&gt;Limeth/euclider&lt;/a&gt; - A real-time 4D CPU ray tracer&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linebender/resvg"&gt;linebender/resvg&lt;/a&gt; - An SVG rendering library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rodrigorc/papercraft"&gt;rodrigorc/papercraft&lt;/a&gt; - A tool to unwrap 3D models and create them in paper with scissors and glue.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rustq/vue-skia"&gt;rustq/vue-skia&lt;/a&gt; - Skia based 2d graphics vue rendering library. It is based on Rust to implement software rasterization to perform rendering.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/valora"&gt;turnage/valora&lt;/a&gt; - A library for generative fine art&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Twinklebear/tray_rust"&gt;Twinklebear/tray_rust&lt;/a&gt; - A ray tracer&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wahn/rs_pbrt"&gt;wahn/rs_pbrt&lt;/a&gt; - Implements a counterpart to the PBRT book's (3rd edition) C++ code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Image processing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/imager-io/imager"&gt;Imager&lt;/a&gt; - Automated image optimization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oxipng/oxipng"&gt;oxipng&lt;/a&gt; [&lt;a href="https://crates.io/crates/oxipng"&gt;oxipng&lt;/a&gt;] - Multithreaded PNG optimizer written in Rust. &lt;a href="https://github.com/oxipng/oxipng/actions?query=branch%3Amaster"&gt;&lt;img src="https://github.com/oxipng/oxipng/workflows/oxipng/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/oxipng"&gt;&lt;img src="https://img.shields.io/crates/v/oxipng.svg?sanitize=true" alt="Version" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Industrial automation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/locka99/opcua"&gt;locka99/opcua&lt;/a&gt; - A &lt;a href="https://opcfoundation.org/about/opc-technologies/opc-ua/"&gt;OPC UA&lt;/a&gt; library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/slowtec/tokio-modbus"&gt;slowtec/tokio-modbus&lt;/a&gt; - A &lt;a href="https://tokio.rs"&gt;tokio&lt;/a&gt;-based &lt;a href="https://modbus.org"&gt;modbus&lt;/a&gt; library.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Message Queue&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/robustmq/robustmq"&gt;RobustMQ&lt;/a&gt; - Next generation cloud-native converged message queue.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mxsm/rocketmq-rust"&gt;Rocketmq-Rust&lt;/a&gt; - 🚀Apache RocketMQ build in Rust🦀. Faster, safer, and with lower memory usage.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;MLOps&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tensorzero/tensorzero"&gt;TensorZero&lt;/a&gt; - data &amp;amp; learning flywheel for LLMs that unifies inference, observability, optimization, and experimentation &lt;img src="https://img.shields.io/github/check-runs/tensorzero/tensorzero/main" alt="TensorZero Build Status" /&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Observability&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/avito-tech/bioyino"&gt;avito-tech/bioyino&lt;/a&gt; - A high-performance scalable StatsD compatible server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MegaAntiCheat/client-backend"&gt;MegaAntiCheat/client-backend&lt;/a&gt; - The client app for &lt;a href="https://github.com/MegaAntiCheat"&gt;MAC&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openobserve/openobserve"&gt;openobserve&lt;/a&gt; - 10x easier, 140x lower storage cost, high performance, petabyte scale - Elasticsearch/Splunk/Datadog alternative.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/opentelemetry"&gt;OpenTelemetry&lt;/a&gt; - OpenTelemetry provides a single set of APIs, libraries, agents, and collector services to capture distributed traces and metrics from your application. You can analyze them using Prometheus, Jaeger, and other observability tools. &lt;a href="https://github.com/open-telemetry/opentelemetry-rust/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/open-telemetry/opentelemetry-rust/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="GitHub Actions CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/quickwit-oss/quickwit"&gt;Quickwit-oss/quickwit&lt;/a&gt; - Cloud-native and highly cost-efficient search engine for log management. &lt;a href="https://github.com/quickwit-oss/quickwit/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/quickwit-oss/quickwit/actions/workflows/ci.yml/badge.svg?branch=main" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hubblo-org/scaphandre"&gt;Scaphandre&lt;/a&gt; - A power consumption monitoring agent, to track host and each service power consumption and enable designing systems and applications for more sustainability. Designed to fit any monitoring toolchain (already supports prometheus, warp10, riemann...).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vectordotdev/vector"&gt;vectordotdev/vector&lt;/a&gt; - A High-Performance, Logs, Metrics, &amp;amp; Events Router.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Operating systems&lt;/h3&gt; 
&lt;p&gt;See also &lt;a href="https://github.com/flosse/rust-os-comparison"&gt;A comparison of operating systems written in Rust&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/0x59616e/SteinsOS"&gt;0x59616e/SteinsOS&lt;/a&gt; - An OS for armv8-a architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adamperkowski/highlightos"&gt;adamperkowski/highlightos&lt;/a&gt; - x86_64 OS kernel written in Rust &amp;amp; Assembly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Andy-Python-Programmer/aero"&gt;Andy-Python-Programmer/aero&lt;/a&gt; - A modern, unix-like operating system following the monolithic kernel design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asterinas/asterinas"&gt;asterinas/asterinas&lt;/a&gt; - A secure, fast, and general-purpose OS kernel that provides Linux-compatible ABI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DragonOS-Community/DragonOS"&gt;DragonOS-Community/DragonOS&lt;/a&gt; - An operating system with a self-developed kernel from scratch and Linux compatibility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.redox-os.org/redox-os/redox"&gt;redox-os/redox&lt;/a&gt; - A Unix-like general-purpose microkernel-based operating system with a focus on security, stability, performance, correctness, simplicity and pragmatism that aims to be a complete alternative for Linux and BSD.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thepowersgang/rust_os"&gt;thepowersgang/rust_os&lt;/a&gt; - An OS kernel written in rust. Non POSIX&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/theseus-os/Theseus"&gt;theseus-os/Theseus&lt;/a&gt; - A safe-language, single address space and single privilege level OS written from scratch - &lt;a href="https://www.theseus-os.com/Theseus/book/index.html"&gt;&lt;img src="https://img.shields.io/github/workflow/status/theseus-os/Theseus/Documentation?label=docs%20build" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tock/tock"&gt;tock/tock&lt;/a&gt; - A secure embedded operating system for Cortex-M based microcontrollers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vinc/moros"&gt;vinc/moros&lt;/a&gt; - A text-based hobby operating system targeting computers with a x86-64 architecture and a BIOS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Package Managers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/helsing-ai/buffrs"&gt;helsing-ai/buffrs&lt;/a&gt; [&lt;a href="https://crates.io/crates/buffrs"&gt;buffrs&lt;/a&gt;] - A modern package manager for protocol buffers and gRPC architectures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/rebos"&gt;rebos&lt;/a&gt; - A declarative way to automate package management on any linux distro &lt;a href="https://crates.io/crates/rebos"&gt;&lt;img src="https://img.shields.io/crates/v/rebos?logo=rust" alt="crate" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Payments&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/juspay/hyperswitch"&gt;hyperswitch&lt;/a&gt; - An open source payments orchestrator that lets you connect with multiple payment processors and route payment traffic effortlessly, all with a single API integration &lt;img src="https://img.shields.io/github/last-commit/juspay/hyperswitch?style=flat-square" alt="GitHub last commit" /&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Productivity&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/0xdea/jiggy"&gt;0xdea/jiggy&lt;/a&gt; [&lt;a href="https://crates.io/crates/jiggy"&gt;jiggy&lt;/a&gt;] - Minimalistic cross-platform mouse jiggler written in Rust &lt;a href="https://github.com/0xdea/oneiromancer/jiggy/workflows/build.yml"&gt;&lt;img src="https://github.com/0xdea/jiggy/actions/workflows/build.yml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sigoden/aichat"&gt;aichat&lt;/a&gt; - All-in-one LLM CLI tool featuring Shell Assistant, Chat-REPL, RAG, AI Tools &amp;amp; Agents, with access to OpenAI, Claude, Gemini, Ollama, Groq, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ast-grep/ast-grep"&gt;ast-grep&lt;/a&gt; - A CLI tool for code structural search, lint and rewriting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolassv/bartib"&gt;Bartib&lt;/a&gt; [&lt;a href="https://crates.io/crates/bartib"&gt;Bartib&lt;/a&gt;] - A simple timetracker for the command line &lt;a href="https://github.com/nikolassv/bartib/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/nikolassv/bartib/actions/workflows/test.yml/badge.svg?branch=master" alt="Tests" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/espanso/espanso"&gt;espanso&lt;/a&gt; - A cross-platform Text Expander. &lt;a href="https://github.com/espanso/espanso/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/espanso/espanso/actions/workflows/ci.yml/badge.svg?branch=dev&amp;amp;event=push" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/eureka"&gt;eureka&lt;/a&gt; - A CLI tool to input and store your ideas without leaving the terminal&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unobserved-io/Furtherance"&gt;Furtherance&lt;/a&gt; - Time tracking app built with GTK4&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/illacloud/illa"&gt;illacloud/illa&lt;/a&gt; - Low-code internal tool builder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kruseio/hygg"&gt;kruseio/hygg&lt;/a&gt; [&lt;a href="https://crates.io/crates/hygg"&gt;hygg&lt;/a&gt;] - 📚 Simplifying the way you read. Minimalistic Vim-like TUI document reader.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lldap/lldap"&gt;LLDAP&lt;/a&gt; - Simplified LDAP interface for authentication.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pier-cli/pier"&gt;pier-cli/pier&lt;/a&gt; - A central repository to manage (add, search metadata, etc.) all your one-liners, scripts, tools, and CLIs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ShadoySV/work-break"&gt;ShadoySV/work-break&lt;/a&gt; [&lt;a href="https://crates.io/crates/work-break"&gt;work-break&lt;/a&gt;] - Work and rest time balancer taking into account your current and today strain &lt;a href="https://github.com/ShadoySV/work-break/actions/workflows/release.yml"&gt;&lt;img src="https://github.com/ShadoySV/work-break/actions/workflows/release.yml/badge.svg?sanitize=true" alt="Build" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yashs662/rust_kanban"&gt;yashs662/rust_kanban&lt;/a&gt; [&lt;a href="https://crates.io/crates/rust-kanban"&gt;rust-kanban&lt;/a&gt;] &lt;a href="https://github.com/yashs662/rust_kanban/releases"&gt;&lt;img src="https://github.com/yashs662/rust_kanban/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build" /&gt;&lt;/a&gt; - A Kanban App for the terminal&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Routing protocols&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/holo-routing/holo"&gt;Holo&lt;/a&gt; - Holo is a suite of routing protocols designed to support high-scale and automation-driven networks&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osrg/rustybgp"&gt;RustyBGP&lt;/a&gt; - BGP&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Security tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/0xdea/augur"&gt;0xdea/augur&lt;/a&gt; [&lt;a href="https://crates.io/crates/augur"&gt;augur&lt;/a&gt;] - Reverse engineering assistant that extracts strings and related pseudo-code from a binary file &lt;a href="https://github.com/0xdea/augur/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/0xdea/augur/actions/workflows/build.yml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/0xdea/haruspex"&gt;0xdea/haruspex&lt;/a&gt; [&lt;a href="https://crates.io/crates/haruspex"&gt;haruspex&lt;/a&gt;] - Vulnerability research assistant that extracts pseudo-code from the IDA Hex-Rays decompiler &lt;a href="https://github.com/0xdea/haruspex/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/0xdea/haruspex/actions/workflows/build.yml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/0xdea/oneiromancer"&gt;0xdea/oneiromancer&lt;/a&gt; [&lt;a href="https://crates.io/crates/oneiromancer"&gt;oneiromancer&lt;/a&gt;] - Reverse engineering assistant that uses a locally running LLM to aid with source code analysis &lt;a href="https://github.com/0xdea/oneiromancer/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/0xdea/oneiromancer/actions/workflows/build.yml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/0xdea/rhabdomancer"&gt;0xdea/rhabdomancer&lt;/a&gt; [&lt;a href="https://crates.io/crates/rhabdomancer"&gt;rhabdomancer&lt;/a&gt;] - Vulnerability research assistant that locates all calls to potentially insecure API functions in a binary file &lt;a href="https://github.com/0xdea/rhabdomancer/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/0xdea/rhabdomancer/actions/workflows/build.yml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Lissy93/AdGuardian-Term"&gt;AdGuardian-Term&lt;/a&gt; [&lt;a href="https://crates.io/crates/adguardian"&gt;adguardian&lt;/a&gt;] - Terminal-based, real-time traffic monitoring and statistics for your AdGuard Home instance&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AFLplusplus/LibAFL"&gt;AFLplusplus/LibAFL&lt;/a&gt; - Advanced Fuzzing Library - Slot your Fuzzer together in Rust! Scales across cores and machines. For Windows, Android, MacOS, Linux, no_std, etc. &lt;a href="https://github.com/AFLplusplus/LibAFL/actions/workflows/build_and_test.yml"&gt;&lt;img src="https://github.com/AFLplusplus/LibAFL/actions/workflows/build_and_test.yml/badge.svg?sanitize=true" alt="build and test" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kongbytes/arp-scan-rs"&gt;arp-scan-rs&lt;/a&gt; - A minimalistic ARP scan tool for fast local network scans&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-audit"&gt;cargo-audit&lt;/a&gt; - Audit Cargo.lock for crates with security vulnerabilities&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-auditable"&gt;cargo-auditable&lt;/a&gt; - Make production Rust binaries auditable&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-crev"&gt;cargo-crev&lt;/a&gt; - A cryptographically verifiable code review system for the cargo package manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-deny"&gt;cargo-deny&lt;/a&gt; - Cargo plugin to help you manage large dependency graphs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blst-security/cherrybomb"&gt;Cherrybomb&lt;/a&gt; - Stop half-done API specifications with a CLI tool that helps you avoid undefined user behaviour by validating your API specifications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/replydev/cotp"&gt;cotp&lt;/a&gt; - Trustworthy, encrypted, command-line TOTP/HOTP authenticator app with import functionality.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/entropic-security/xgadget"&gt;entropic-security/xgadget&lt;/a&gt; [&lt;a href="https://crates.io/crates/xgadget"&gt;xgadget&lt;/a&gt;] - Fast, parallel, cross-variant ROP/JOP gadget search &lt;a href="https://github.com/entropic-security/xgadget/actions"&gt;&lt;img src="https://github.com/entropic-security/xgadget/workflows/test/badge.svg?sanitize=true" alt="GitHub Actions" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/epi052/feroxbuster"&gt;epi052/feroxbuster&lt;/a&gt; - A simple, fast, recursive content discovery tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/inspektor-dev/inspektor"&gt;Inspektor&lt;/a&gt; - A database protocol-aware proxy that is used to enforce access policies 👮&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kpcyrd/authoscope"&gt;kpcyrd/authoscope&lt;/a&gt; - A scriptable network authentication cracker&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kpcyrd/rshijack"&gt;kpcyrd/rshijack&lt;/a&gt; - A TCP connection hijacker; rewrite of shijack&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kpcyrd/sn0int"&gt;kpcyrd/sn0int&lt;/a&gt; - A semi-automatic OSINT framework and package manager&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kpcyrd/sniffglue"&gt;kpcyrd/sniffglue&lt;/a&gt; - A secure multithreaded packet sniffer&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emo-crab/observer_ward"&gt;observer_ward&lt;/a&gt; - Web application and service fingerprint identification tool&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Raspirus/Raspirus"&gt;Raspirus&lt;/a&gt; - User- and resources-friendly rules-based malware scanner &lt;a href="https://github.com/Raspirus/Raspirus/actions/workflows/testproject.yml"&gt;&lt;img src="https://github.com/Raspirus/Raspirus/actions/workflows/testproject.yml/badge.svg?sanitize=true" alt="status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cortex/ripasso/"&gt;ripasso&lt;/a&gt; - A password manager, filesystem compatible with pass&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bee-san/RustScan"&gt;rustscan&lt;/a&gt; - Make Nmap faster with this port scanning tool &lt;a href="https://github.com/bee-san/RustScan/actions"&gt;&lt;img src="https://github.com/bee-san/RustScan/actions/workflows/test.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Social networks&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Mastodon 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rustodon/rustodon"&gt;Rustodon&lt;/a&gt; - A Mastodon-compatible, ActivityPub-speaking server.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Telegram 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/FedericoBruzzone/tgt"&gt;tgt&lt;/a&gt; - A crossplatform TUI for Telegram &lt;a href="https://github.com/FedericoBruzzone/tgt/actions/workflows/ci-linux.yml"&gt;&lt;img src="https://github.com/FedericoBruzzone/tgt/actions/workflows/ci-linux.yml/badge.svg?sanitize=true" alt="ci-linux" /&gt;&lt;/a&gt; &lt;a href="https://github.com/FedericoBruzzone/tgt/actions/workflows/ci-macos.yml"&gt;&lt;img src="https://github.com/FedericoBruzzone/tgt/actions/workflows/ci-macos.yml/badge.svg?sanitize=true" alt="ci-macos" /&gt;&lt;/a&gt; &lt;a href="https://github.com/FedericoBruzzone/tgt/actions/workflows/ci-windows.yml"&gt;&lt;img src="https://github.com/FedericoBruzzone/tgt/actions/workflows/ci-windows.yml/badge.svg?sanitize=true" alt="ci-windows" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;System tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ajeetdsouza/zoxide/"&gt;ajeetdsouza/zoxide&lt;/a&gt; - A fast alternative to &lt;code&gt;cd&lt;/code&gt; that learns your habits &lt;a href="https://github.com/ajeetdsouza/zoxide/actions"&gt;&lt;img src="https://github.com/ajeetdsouza/zoxide/actions/workflows/release.yml/badge.svg?sanitize=true" alt="release" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nohajc/anylinuxfs"&gt;anylinuxfs&lt;/a&gt; - CLI tool for mounting any linux-supported filesystem on a Mac - using NFS with a microVM&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atuinsh/atuin"&gt;atuin&lt;/a&gt; [&lt;a href="https://crates.io/crates/atuin"&gt;atuin&lt;/a&gt;] - Atuin replaces your existing shell history with a SQLite database, and records additional context for your commands. Additionally, it provides optional and fully encrypted synchronisation of your history between machines, via an Atuin server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/imsnif/bandwhich"&gt;bandwhich&lt;/a&gt; - Terminal bandwidth utilization tool&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ClementTsang/bottom"&gt;bottom&lt;/a&gt; - Yet another cross-platform graphical process/system monitor. &lt;a href="https://github.com/ClementTsang/bottom/actions?query=branch%3Amaster"&gt;&lt;img src="https://img.shields.io/github/workflow/status/ClementTsang/bottom/ci/master" alt="GitHub Workflow Status (branch)" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brocode/fblog"&gt;brocode/fblog&lt;/a&gt; - Small command-line JSON Log viewer&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reubeno/brush"&gt;brush-shell&lt;/a&gt; - bash/POSIX-compatible shell &lt;a href="https://github.com/reubeno/brush/actions/workflows/ci.yaml"&gt;&lt;img src="https://github.com/reubeno/brush/actions/workflows/ci.yaml/badge.svg?sanitize=true" alt="CICD" /&gt;&lt;/a&gt;&lt;a href="https://crates.io/crates/brush-shell"&gt;&lt;img src="https://img.shields.io/crates/v/brush-shell.svg?logo=rust" alt="Crate" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vrmiguel/bustd"&gt;bustd&lt;/a&gt; - Lightweight process killer daemon to handle out-of-memory scenarios on Linux. &lt;a href="https://github.com/vrmiguel/bustd/actions?query=branch%3Amaster"&gt;&lt;img src="https://img.shields.io/github/workflow/status/vrmiguel/bustd/build-and-test" alt="GitHub Workflow Status (branch)" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/buster/rrun"&gt;buster/rrun&lt;/a&gt; - A command launcher for Linux, similar to gmrun&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cantino/mcfly"&gt;cantino/mcfly&lt;/a&gt; - Fly through your shell history. Great Scott!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChurchTao/clipboard-rs"&gt;ChurchTao/clipboard-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/clipboard-rs"&gt;clipboard-rs&lt;/a&gt;] - Cross-platform library written in Rust for getting and setting and monitoring changes the system-level clipboard content.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sstadick/crabz"&gt;crabz&lt;/a&gt; - Multi-threaded compression and decompression CLI tool &lt;a href="https://github.com/sstadick/crabz/actions?query=workflow%3ACheck"&gt;&lt;img src="https://github.com/sstadick/crabz/workflows/Check/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cristianoliveira/funzzy"&gt;cristianoliveira/funzzy&lt;/a&gt; - A configurable filesystem watcher inspired by &lt;a href="http://eradman.com/entrproject/"&gt;entr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dalance/procs"&gt;dalance/procs&lt;/a&gt; - A modern replacement for 'ps' &lt;a href="https://github.com/dalance/procs/actions/workflows/regression.yml"&gt;&lt;img src="https://github.com/dalance/procs/actions/workflows/regression.yml/badge.svg?sanitize=true" alt="Regression" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/darakian/ddh"&gt;ddh&lt;/a&gt; - Fast duplicate file finder&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/imsnif/diskonaut"&gt;diskonaut&lt;/a&gt; - Terminal visual disk space navigator&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bootandy/dust"&gt;dust&lt;/a&gt; - A more intuitive version of du&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eza-community/eza"&gt;eza-community/eza&lt;/a&gt; - A replacement for 'ls'&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fish-shell/fish-shell"&gt;fish-shell/fish-shell&lt;/a&gt; - The user-friendly command line shell&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/fselect"&gt;fselect&lt;/a&gt; - Find files with SQL-like queries&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gitui-org/gitui"&gt;gitui&lt;/a&gt; - Blazing fast terminal client for git. &lt;a href="https://github.com/gitui-org/gitui/actions"&gt;&lt;img src="https://github.com/gitui-org/gitui/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amrdeveloper/gql"&gt;GQL&lt;/a&gt; - A SQL like query language to run on .git files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kimono-koans/httm"&gt;httm&lt;/a&gt; - Interactive, file-level Time Machine-like tool for ZFS/btrfs/nilfs2 (and even actual Time Machine backups!)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/j0ru/kickoff"&gt;j0ru/kickoff&lt;/a&gt; - Fast and snappy wayland program launcher &lt;a href="https://github.com/j0ru/kickoff/actions"&gt;&lt;img src="https://github.com/j0ru/kickoff/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jacek-kurlit/pik"&gt;jacek-kurlit/pik&lt;/a&gt; [&lt;a href="https://crates.io/crates/pik"&gt;pik&lt;/a&gt;] - A TUI command line tool that helps to find and kill processes&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tbillington/kondo"&gt;Kondo&lt;/a&gt; - CLI &amp;amp; GUI tool for deleting software project artifacts and reclaiming disk space&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ilya-zlobintsev/LACT"&gt;LACT&lt;/a&gt; - Linux AMDGPU Controller&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lodosgroup/lpm"&gt;lodosgroup/lpm&lt;/a&gt; - An experimental system package manager&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lotabout/rargs"&gt;lotabout/rargs&lt;/a&gt; [&lt;a href="https://crates.io/crates/rargs"&gt;rargs&lt;/a&gt;] - xargs + awk with pattern matching support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lsd-rs/lsd"&gt;lsd&lt;/a&gt; - An ls with a lot of pretty colors and awesome icons &lt;a href="https://github.com/lsd-rs/lsd/actions"&gt;&lt;img src="https://github.com/lsd-rs/lsd/actions/workflows/CICD.yml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Luminarys/synapse"&gt;Luminarys/synapse&lt;/a&gt; - Flexible and fast BitTorrent daemon.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/m4b/bingrep"&gt;m4b/bingrep&lt;/a&gt; - Greps through binaries from various OSs and architectures, and colors them.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/matheus-git/systemd-manager-tui"&gt;matheus-git/systemd-manager-tui&lt;/a&gt; [&lt;a href="https://crates.io/crates/systemd-manager-tui"&gt;systemd-manager-tui&lt;/a&gt;] - A program for managing systemd services through a TUI (Terminal User Interfaces).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mdgaziur/findex"&gt;mdgaziur/findex&lt;/a&gt; - Findex is a highly customizable application finder using GTK3&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mitnk/cicada"&gt;mitnk/cicada&lt;/a&gt; - A bash-like Unix shell&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mmstick/concurr"&gt;mmstick/concurr&lt;/a&gt; - Alternative to GNU Parallel w/ a client-server architecture&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mmstick/fontfinder"&gt;mmstick/fontfinder&lt;/a&gt; - GTK3 application for previewing and installing Google's fonts&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mmstick/tv-renamer"&gt;mmstick/tv-renamer&lt;/a&gt; - A tv series renaming application with an optional GTK3 frontend.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mxseev/logram"&gt;mxseev/logram&lt;/a&gt; - Push log files' updates to Telegram&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Chleba/netscanner"&gt;netscanner&lt;/a&gt; - TUI Network Scanner&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nickgerace/gfold"&gt;nickgerace/gfold&lt;/a&gt; [&lt;a href="https://crates.io/crates/gfold"&gt;gfold&lt;/a&gt;] - CLI tool to help keep track of multiple Git repositories &lt;a href="https://github.com/nickgerace/gfold/actions?query=workflow%3Amerge+branch%3Amain"&gt;&lt;img src="https://img.shields.io/github/workflow/status/nickgerace/gfold/merge/main" alt="build" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nivekuil/rip"&gt;nivekuil/rip&lt;/a&gt; - A safe and ergonomic alternative to &lt;code&gt;rm&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nushell/nushell"&gt;nushell/nushell&lt;/a&gt; - A new type of shell&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nwiizo/tfmcp"&gt;nwiizo/tfmcp&lt;/a&gt; - Terraform MCP Tool - CLI for AI assistants to manage Terraform environments via Model Context Protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nwiizo/tfocus"&gt;nwiizo/tfocus&lt;/a&gt; - Interactive tool for selecting and executing Terraform plan/apply operations&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orhun/kmon"&gt;orhun/kmon&lt;/a&gt; - Linux Kernel Manager and Activity Monitor &lt;img src="https://img.shields.io/github/actions/workflow/status/orhun/kmon/ci.yml?branch=master&amp;amp;label=build" alt="https://github.com/orhun/kmon/actions" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orhun/systeroid"&gt;orhun/systeroid&lt;/a&gt; - A more powerful alternative to sysctl(8) with a terminal user interface &lt;img src="https://img.shields.io/github/actions/workflow/status/orhun/systeroid/ci.yml?branch=main&amp;amp;label=build" alt="https://github.com/orhun/systeroid/actions" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ouch-org/ouch"&gt;ouch&lt;/a&gt; - Painless compression and decompression on the command-line &lt;a href="https://github.com/ouch-org/ouch/actions?query=branch%3Amaster"&gt;&lt;img src="https://img.shields.io/github/workflow/status/ouch-org/ouch/build-and-test" alt="GitHub Workflow Status (branch)" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pkolaczk/fclones"&gt;pkolaczk/fclones&lt;/a&gt; - Efficient duplicate file finder and remover&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pop-os/popsicle"&gt;pop-os/popsicle&lt;/a&gt; - GTK3 &amp;amp; CLI utility for flashing multiple USB devices in parallel&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pop-os/system76-power/"&gt;pop-os/system76-power&lt;/a&gt; - Linux power management daemon (DBus-interface) with CLI tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nukesor/pueue"&gt;pueue&lt;/a&gt; - Manage your long running shell commands. &lt;a href="https://github.com/nukesor/pueue/actions"&gt;&lt;img src="https://github.com/Nukesor/pueue/actions/workflows/test.yml/badge.svg?sanitize=true" alt="GitHub Actions Workflow" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qarmin/czkawka"&gt;qarmin/czkawka&lt;/a&gt; - Multi-functional app to find duplicates, empty folders, similar images, etc. &lt;a href="https://github.com/qarmin/czkawka/actions"&gt;&lt;img src="https://github.com/qarmin/czkawka/actions/workflows/pages/pages-build-deployment/badge.svg?branch=master" alt="GitHub Actions Workflow" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/redox-os/ion"&gt;redox-os/ion&lt;/a&gt; - Next-generation system shell&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sharkdp/bat"&gt;sharkdp/bat&lt;/a&gt; - A cat(1) clone with wings. &lt;a href="https://github.com/sharkdp/bat/actions/workflows/CICD.yml"&gt;&lt;img src="https://github.com/sharkdp/bat/actions/workflows/CICD.yml/badge.svg?branch=master" alt="CICD" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sharkdp/fd"&gt;sharkdp/fd&lt;/a&gt; - A simple, fast and user-friendly alternative to find. &lt;a href="https://github.com/sharkdp/fd/actions/workflows/CICD.yml"&gt;&lt;img src="https://github.com/sharkdp/fd/actions/workflows/CICD.yml/badge.svg?sanitize=true" alt="CICD" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sitkevij/hex"&gt;sitkevij/hex&lt;/a&gt; - A colorized hexdump terminal utility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skim-rs/skim"&gt;skim&lt;/a&gt; - A fuzzy finder&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supercilex/fuc"&gt;supercilex/fuc&lt;/a&gt; - Fast &lt;code&gt;cp&lt;/code&gt; and &lt;code&gt;rm&lt;/code&gt; commands&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fujiapple852/trippy"&gt;trippy&lt;/a&gt; - A network diagnostic tool &lt;a href="https://github.com/fujiapple852/trippy/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/fujiapple852/trippy/workflows/CI/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uutils/coreutils"&gt;uutils/coreutils&lt;/a&gt; - A cross-platform rewrite of the GNU coreutils &lt;a href="https://github.com/uutils/coreutils/actions/workflows/CICD.yml"&gt;&lt;img src="https://github.com/uutils/coreutils/actions/workflows/CICD.yml/badge.svg?sanitize=true" alt="CICD" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/watchexec/watchexec"&gt;watchexec&lt;/a&gt; - Executes commands in response to file modifications&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/XAMPPRocky/tokei"&gt;XAMPPRocky/tokei&lt;/a&gt; - counts the lines of code&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ynqa/jnv"&gt;ynqa/jnv&lt;/a&gt; - Interactive JSON filter using jq &lt;a href="https://github.com/ynqa/jnv/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/ynqa/jnv/actions/workflows/ci.yml/badge.svg?branch=main" alt="ci" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ynqa/logu"&gt;ynqa/logu&lt;/a&gt; - Extract patterns from (streaming) unstructured log messages &lt;a href="https://github.com/ynqa/logu/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/ynqa/logu/actions/workflows/ci.yml/badge.svg?branch=main" alt="ci" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ynqa/sig"&gt;ynqa/sig&lt;/a&gt; - Interactive grep (for streaming) &lt;a href="https://github.com/ynqa/sig/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/ynqa/sig/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="ci" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Task scheduling&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stav121/tasklet"&gt;tasklet&lt;/a&gt; [&lt;a href="https://crates.io/crates/tasklet"&gt;tasklet&lt;/a&gt;] - A task scheduling library written in Rust &lt;img src="https://img.shields.io/github/actions/workflow/status/stav121/tasklet/rust.yml" alt="Build Status" /&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Text editors&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://amp.rs"&gt;amp&lt;/a&gt; - Inspired by Vi/Vim.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emacs-ng/emacs-ng"&gt;emacs-ng&lt;/a&gt; - Complementing the C codebase with rust code to introduce new features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gchp/iota"&gt;gchp/iota&lt;/a&gt; - A simple text editor&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/helix-editor/helix"&gt;helix&lt;/a&gt; - A post-modern modal text editor inspired by Neovim/Kakoune. &lt;a href="https://github.com/helix-editor/helix/actions"&gt;&lt;img src="https://github.com/helix-editor/helix/actions/workflows/build.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ilai-deutel/kibi"&gt;ilai-deutel/kibi&lt;/a&gt; - A tiny (≤1024 LOC) text editor with syntax highlighting, incremental search and more. &lt;a href="https://github.com/ilai-deutel/kibi/actions?query=branch%3Amaster"&gt;&lt;img src="https://github.com/ilai-deutel/kibi/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lapce/lapce"&gt;Lapce&lt;/a&gt; - A modern editor with a backend. Taking inspiration from the discontinued &lt;a href="https://github.com/xi-editor/xi-editor"&gt;xi-editor&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mathall/rim"&gt;mathall/rim&lt;/a&gt; - Vim-like text editor.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/curlpipe/ox"&gt;ox&lt;/a&gt; - An independent Rust text editor that runs in your terminal!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://git.sr.ht/~lessa/pepper"&gt;vamolessa/pepper&lt;/a&gt; [&lt;a href="https://crates.io/crates/pepper"&gt;pepper&lt;/a&gt;] - An opinionated modal editor to simplify code editing from the terminal&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zed-industries/zed"&gt;zed&lt;/a&gt; - A high-performance, multiplayer code editor from the creators of Atom and Tree-sitter.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Text processing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ashvardanian/StringZilla"&gt;ashvardanian/stringzilla&lt;/a&gt; - SIMD-accelerated string search, sort, edit distances, alignments, and generators for x86 AVX2 &amp;amp; AVX-512, and Arm NEON &lt;a href="https://crates.io/crates/stringzilla"&gt;&lt;img src="https://img.shields.io/crates/v/stringzilla.svg?sanitize=true" alt="crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cchexcode/complate"&gt;cchexcode/complate&lt;/a&gt; - An in-terminal text templating tool designed for standardizing messages (like for GIT commits). &lt;a href="https://crates.io/crates/complate"&gt;&lt;img src="https://img.shields.io/crates/v/complate.svg?sanitize=true" alt="crates.io" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/complate"&gt;&lt;img src="https://img.shields.io/crates/d/complate?label=crates.io%20downloads" alt="crates.io" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cchexcode/complate/actions"&gt;&lt;img src="https://github.com/cchexcode/complate/actions/workflows/release.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dathere/qsv"&gt;dathere/qsv&lt;/a&gt; [&lt;a href="https://crates.io/crates/qsv"&gt;qsv&lt;/a&gt;] - A high performance CSV data-wrangling toolkit. Forked from xsv, with 34+ additional commands &amp;amp; more. &lt;a href="https://github.com/dathere/qsv/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/dathere/qsv/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="Linux build status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dathere/qsv/actions/workflows/rust-windows.yml"&gt;&lt;img src="https://github.com/dathere/qsv/actions/workflows/rust-windows.yml/badge.svg?sanitize=true" alt="Windows build status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dathere/qsv/actions/workflows/rust-macos.yml"&gt;&lt;img src="https://github.com/dathere/qsv/actions/workflows/rust-macos.yml/badge.svg?sanitize=true" alt="macOS build status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dominikwilkowski/cfonts"&gt;dominikwilkowski/cfonts&lt;/a&gt; [&lt;a href="https://crates.io/crates/cfonts"&gt;cfonts&lt;/a&gt;] - Sexy ANSI fonts for the console &lt;img src="https://github.com/dominikwilkowski/cfonts/actions/workflows/testing.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pemistahl/grex"&gt;grex&lt;/a&gt; - A command-line tool and library for generating regular expressions from user-provided test cases&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Lisprez/so_stupid_search"&gt;Lisprez/so_stupid_search&lt;/a&gt; - A simple and fast string search tool for human beings&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/roquess/loki_text"&gt;loki_text&lt;/a&gt; [&lt;a href="https://crates.io/crates/loki_text"&gt;loki_text&lt;/a&gt;] - String manipulation library with pattern searching, text transformation, and multiple string search algorithms (KMP, Boyer-Moore, Aho-Corasick, etc.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yoav-lavi/melody"&gt;Melody&lt;/a&gt; - A language that compiles to regular expressions and aims to be more easily readable and maintainable &lt;a href="https://github.com/yoav-lavi/melody/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/yoav-lavi/melody/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/melody_compiler"&gt;&lt;img src="https://img.shields.io/crates/v/melody_compiler?label=compiler" alt="crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/phiresky/ripgrep-all"&gt;phiresky/ripgrep-all&lt;/a&gt; - ripgrep, but also search in PDFs, E-Books, Office documents, zip, tar.gz, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/ripgrep"&gt;ripgrep&lt;/a&gt; - combines the usability of The Silver Searcher with the raw speed of grep&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/your-tools/ruplacer"&gt;ruplacer&lt;/a&gt; - Find and replace text in source files &lt;a href="https://github.com/your-tools/ruplacer/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/your-tools/ruplacer/actions/workflows/test.yml/badge.svg?branch=master" alt="Run tests" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thomasschafer/scooter"&gt;scooter&lt;/a&gt; - Interactive find and replace in the terminal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/sd"&gt;sd&lt;/a&gt; - Intuitive find &amp;amp; replace CLI&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sstadick/hck"&gt;sstadick/hck&lt;/a&gt; - A faster and more featureful drop in replacement for &lt;code&gt;cut&lt;/code&gt; &lt;a href="https://github.com/sstadick/hck"&gt;&lt;img src="https://github.com/sstadick/hck/workflows/Check/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vishaltelangre/ff"&gt;vishaltelangre/ff&lt;/a&gt; - Find files (ff) by name!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/whitfin/bytelines"&gt;whitfin/bytelines&lt;/a&gt; [&lt;a href="https://crates.io/crates/bytelines"&gt;bytelines&lt;/a&gt;] - Read input lines as byte slices for high efficiency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/whitfin/runiq"&gt;whitfin/runiq&lt;/a&gt; - an efficient way to filter duplicate lines from unsorted input.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/xsv"&gt;xsv&lt;/a&gt; - A fast CSV command line tool (slicing, indexing, selecting, searching, sampling, etc.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Utilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1History/1History"&gt;1History&lt;/a&gt; - Command line interface to backup Firefox/Chrome/Safari history to one SQLite file &lt;a href="https://github.com/1History/1History/actions/workflows/CI.yml"&gt;&lt;img src="https://github.com/1History/1History/actions/workflows/CI.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bloznelis/kbt"&gt;bloznelis/kbt&lt;/a&gt; [&lt;a href="https://crates.io/crates/kbt"&gt;kbt&lt;/a&gt;] - A simple TUI tool for keyboard testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brycx/checkpwn"&gt;brycx/checkpwn&lt;/a&gt; - A Have I Been Pwned (HIBP) command-line utility tool that lets you easily check for compromised accounts and passwords.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dcapal/dcapal"&gt;dcapal&lt;/a&gt; - DcaPal is a free, no registration, online tool to help you keep your portfolio balanced with dollar cost averaging investments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Eoin-McMahon/Blindfold"&gt;Eoin-McMahon/Blindfold&lt;/a&gt; [&lt;a href="https://crates.io/crates/blindfold"&gt;Blindfold&lt;/a&gt;] - A simple CLI tool for generating &lt;code&gt;.gitignore&lt;/code&gt; files quickly and easily. &lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/%5Bhttps://github.com/nix-community/nurl/actions/workflows/ci.yml%5D(https://github.com/Eoin-McMahon/blindfold/actions/workflows/rust.yml)"&gt;&lt;img src="https://github.com/Eoin-McMahon/blindfold/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="build-badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AchetaGames/Epic-Asset-Manager"&gt;Epic Asset Manager&lt;/a&gt; - An unofficial client to install Unreal Engine, download and manage purchased assets, projects, plugins and games from the Epic Games Store.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/evansmurithi/cloak"&gt;evansmurithi/cloak&lt;/a&gt; - A Command Line OTP (One Time Password) Authenticator application. &lt;img src="https://github.com/evansmurithi/cloak/workflows/CI/badge.svg?sanitize=true" alt="CI" /&gt; &lt;a href="https://ci.appveyor.com/project/evansmurithi/cloak"&gt;&lt;img src="https://ci.appveyor.com/api/projects/status/9mlfpfru3ng4c689/branch/master?svg=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fcsonline/tmux-thumbs"&gt;fcsonline/tmux-thumbs&lt;/a&gt; - A lightning fast version of tmux-fingers, copy/pasting tmux like vimium/vimperator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/guoxbin/dtool"&gt;guoxbin/dtool&lt;/a&gt; - A useful command-line tool collection to assist development including conversion, codec, hashing, encryption, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Linus-Mussmaecher/rucola"&gt;Linus-Mussmaecher/rucola&lt;/a&gt; - Terminal-based markdown note manager. &lt;a href="https://crates.io/crates/rucola-notes"&gt;&lt;img src="https://img.shields.io/crates/v/rucola-notes.svg?logo=rust" alt="Crate" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Linus-Mussmaecher/rucola/actions/workflows/continuous-testing.yml"&gt;&lt;img src="https://github.com/Linus-Mussmaecher/rucola/actions/workflows/continuous-testing.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thewh1teagle/mobslide"&gt;Mobslide&lt;/a&gt; - Desktop application that turns your smartphone into presentation remote controller.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pvolok/mprocs"&gt;mprocs&lt;/a&gt; - TUI for running multiple processes&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mrjackwills/oxker"&gt;mrjackwills/oxker&lt;/a&gt; [&lt;a href="https://crates.io/crates/oxker"&gt;oxker&lt;/a&gt;] - A simple tui to view &amp;amp; control docker containers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nix-community/nix-init"&gt;nix-community/nix-init&lt;/a&gt; - Generate Nix packages from URLs with hash prefetching, dependency inference, license detection, and more &lt;a href="https://github.com/nix-community/nix-init/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/nix-community/nix-init/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build-badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nix-community/nix-melt"&gt;nix-community/nix-melt&lt;/a&gt; - A ranger-like flake.lock viewer &lt;a href="https://github.com/nix-community/nix-melt/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/nix-community/nix-melt/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build-badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nix-community/nurl"&gt;nix-community/nurl&lt;/a&gt; [&lt;a href="https://crates.io/crates/nurl"&gt;nurl&lt;/a&gt;] - Generate Nix fetcher calls from repository URLs &lt;a href="https://github.com/nix-community/nurl/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/nix-community/nurl/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build-badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yaa110/nomino"&gt;nomino&lt;/a&gt; - Batch rename utility for developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/raftario/licensor"&gt;raftario/licensor&lt;/a&gt; - write licenses to stdout &lt;a href="https://github.com/raftario/licensor/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/raftario/licensor/actions/workflows/build.yml/badge.svg?branch=master" alt="GitHub Actions" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/restsend/rustpbx"&gt;restsend/rustpbx&lt;/a&gt; - Software-Defined SIP Proxy including register, presence, b2bua. alternative to Freeswitch/FreePBX.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aaronriekenberg/rust-parallel"&gt;rust-parallel&lt;/a&gt; - Fast command line app using Tokio to execute commands in parallel. Similar interface to GNU Parallel or xargs. &lt;a href="https://crates.io/crates/rust-parallel"&gt;&lt;img src="https://img.shields.io/crates/v/rust-parallel.svg?logo=rust" alt="Crate" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aaronriekenberg/rust-parallel/actions/workflows/CI.yml"&gt;&lt;img src="https://github.com/aaronriekenberg/rust-parallel/actions/workflows/CI.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rustdesk/rustdesk"&gt;rustdesk/rustdesk&lt;/a&gt; - A remote desktop software, great alternative to TeamViewer and AnyDesk.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rustic-rs/rustic"&gt;rustic-rs/rustic&lt;/a&gt; [&lt;a href="https://crates.io/crates/rustic-rs"&gt;rustic-rs&lt;/a&gt;] - Fast, encrypted, deduplicated backups powered by Rust. &lt;a href="https://crates.io/crates/rustic-rs"&gt;&lt;img src="https://img.shields.io/crates/v/rustic-rs.svg?sanitize=true" alt="Version" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sorairolake/qrtool"&gt;sorairolake/qrtool&lt;/a&gt; [&lt;a href="https://crates.io/crates/qrtool"&gt;qrtool&lt;/a&gt;] - A utility for encoding and decoding QR code images. &lt;a href="https://github.com/sorairolake/qrtool/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/sorairolake/qrtool/workflows/CI/badge.svg?branch=develop" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/str4d/rage"&gt;str4d/rage&lt;/a&gt; [&lt;a href="https://crates.io/crates/rage"&gt;rage&lt;/a&gt;] - Rust implementation of &lt;a href="https://github.com/FiloSottile/age"&gt;age&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Skallwar/suckit"&gt;suckit&lt;/a&gt; - Recursively visit and download a website's content to your disk. &lt;a href="https://crates.io/crates/suckit"&gt;&lt;img src="https://img.shields.io/crates/v/suckit.svg?logo=rust" alt="Crate" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Skallwar/suckit/raw/master/.github/workflows/build_and_test.yml"&gt;&lt;img src="https://github.com/Skallwar/suckit/workflows/Build%20and%20test/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shshemi/tabiew"&gt;Tabiew&lt;/a&gt; - A lightweight TUI app to view and query CSV files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/davidmoreno/tailtales"&gt;Tail Tales&lt;/a&gt; - A TUI log viewer with logfmt support. &lt;a href="https://crates.io/crates/tailtales"&gt;&lt;img src="https://img.shields.io/crates/v/tailtales.svg?logo=rust" alt="Crate" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexpasmantier/television"&gt;television&lt;/a&gt; - A blazing fast general purpose fuzzy finder TUI &lt;img src="https://img.shields.io/github/check-runs/alexpasmantier/television/main" alt="GitHub branch check runs" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tversteeg/emplace"&gt;tversteeg/emplace&lt;/a&gt; - Synchronize installed packages on multiple machines&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vamolessa/verco"&gt;vamolessa/verco&lt;/a&gt; [&lt;a href="https://crates.io/crates/verco"&gt;verco&lt;/a&gt;] - A simple Git/Hg tui client focused on keyboard shortcuts&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dani-garcia/vaultwarden#readme"&gt;vaultwarden&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/dani-garcia/vaultwarden/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build" /&gt;&lt;/a&gt; - Alternative implementation of the Bitwarden server API written in Rust&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thewh1teagle/vibe"&gt;Vibe&lt;/a&gt; - Transcribe audio or video in every language on every platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/warpdotdev/Warp"&gt;warpdotdev/Warp&lt;/a&gt; - &lt;span&gt;💲&lt;/span&gt; Warp is a blazingly-fast modern GPU-accelerated terminal built to make you and your team more productive.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alvaro17f/wrestic"&gt;wrestic&lt;/a&gt; - A wrapper around restic.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ttytm/wthrr-the-weathercrab"&gt;wthrr&lt;/a&gt; - Weather companion for the terminal. &lt;a href="https://crates.io/crates/wthrr"&gt;&lt;img src="https://img.shields.io/crates/v/wthrr?logo=rust" alt="crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Video&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dertuxmalwieder/yaydl"&gt;dertuxmalwieder/yaydl&lt;/a&gt; [&lt;a href="https://crates.io/crates/yaydl"&gt;yaydl&lt;/a&gt;] - A simple video downloader&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gyroflow/gyroflow"&gt;gyroflow/gyroflow&lt;/a&gt; - Video stabilization application using gyroscope data&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/harlanc/xiu"&gt;harlanc/xiu&lt;/a&gt; - A powerful and secure live server (rtmp/httpflv/hls/relay). &lt;a href="https://crates.io/crates/xiu"&gt;&lt;img src="https://img.shields.io/crates/v/xiu.svg?sanitize=true" alt="crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TGotwig/vidmerger"&gt;vidmerger&lt;/a&gt; - Merge video &amp;amp; audio files via CLI&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xiph/rav1e"&gt;xiph/rav1e&lt;/a&gt; - The fastest and safest AV1 encoder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Virtualization&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/firecracker-microvm/firecracker"&gt;firecracker-microvm/firecracker&lt;/a&gt; - A lightweight virtual machine for container workload &lt;a href="https://firecracker-microvm.github.io/"&gt;Firecracker Microvm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kata-containers/kata-containers"&gt;kata-containers/kata-containers&lt;/a&gt; - A implementation of lightweight Virtual Machines (VMs) that feel and perform like containers, but provide the workload isolation and security advantages of VMs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tailhook/vagga"&gt;tailhook/vagga&lt;/a&gt; - A containerization tool without daemons&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/youki-dev/youki"&gt;youki-dev/youki&lt;/a&gt; - A container runtime &lt;a href="https://github.com/youki-dev/youki/actions"&gt;&lt;img src="https://github.com/youki-dev/youki/actions/workflows/basic.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Web&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cfal/tobaru"&gt;cfal/tobaru&lt;/a&gt; - Port forwarder with allowlists, IP and TLS SNI/ALPN rule-based routing, iptables support, round-robin forwarding (load balancing), and hot reloading.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/importantimport/hatsu"&gt;importantimport/hatsu&lt;/a&gt; - 🩵 Self-hosted and fully-automated ActivityPub bridge for static sites. &lt;a href="https://github.com/importantimport/hatsu/actions/workflows/release.yml"&gt;&lt;img src="https://github.com/importantimport/hatsu/actions/workflows/release.yml/badge.svg?sanitize=true" alt="release" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LemmyNet/lemmy"&gt;LemmyNet/lemmy&lt;/a&gt; - A link aggregator / reddit clone for the fediverse &lt;a href="https://cloud.drone.io/LemmyNet/lemmy"&gt;&lt;img src="https://cloud.drone.io/api/badges/LemmyNet/lemmy/status.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MASQ-Project/Node"&gt;MASQ-Project/Node&lt;/a&gt; - MASQ Node software provides a decentralized mesh-network of nodes for global users to access normal internet content - next evolution of tech beyond Tor &amp;amp; VPN &lt;a href="https://github.com/MASQ-Project/Node/actions"&gt;&lt;img src="https://github.com/MASQ-Project/Node/actions/workflows/ci-matrix.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Plume-org/Plume"&gt;Plume-org/Plume&lt;/a&gt; - ActivityPub federating blogging application&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/redlib-org/redlib"&gt;Redlib&lt;/a&gt; - An alternative private front-end to Reddit, with its origins in &lt;a href="https://github.com/libreddit/libreddit"&gt;Libreddit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/revoltchat/backend"&gt;Revolt/backend&lt;/a&gt; - User-first chat platform built with modern web technologies.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Web Servers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudflare/pingora"&gt;cloudflare/pingora&lt;/a&gt; - A library for building fast, reliable and evolvable network services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emanuele-em/proxelar"&gt;emanuele-em/proxelar&lt;/a&gt; - A MITM Proxy 🦀! Toolkit for HTTP/1, HTTP/2, and WebSockets with SSL/TLS Capabilities &lt;a href="https://github.com/emanuele-em/proxelar/actions"&gt;&lt;img src="https://github.com/emanuele-em/proxelar/actions/workflows/autofix.yml/badge.svg?sanitize=true" alt="Rust" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bytedance/g3"&gt;g3proxy&lt;/a&gt; - Forward proxy server, support Proxy Chaining, Protocol Inspection, MITM Interception, ICAP Adaptation, Transparent Proxy &lt;a href="https://github.com/bytedance/g3/actions"&gt;&lt;img src="https://github.com/bytedance/g3/actions/workflows/codecov.yml/badge.svg?sanitize=true" alt="CodeCoverage" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marcodpt/minirps"&gt;Mini RPS&lt;/a&gt; - Mini reverse proxy server, HTTPS, CORS, static file hosting and template engine (minijinja) &lt;a href="https://crates.io/crates/minirps"&gt;crates.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mu-arch/skyfolder"&gt;mu-arch/skyfolder&lt;/a&gt; - 🪂 Beautiful HTTP/Bittorrent server without the hassle. Secure - GUI - Pretty - Fast&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mufeedvh/binserve"&gt;mufeedvh/binserve&lt;/a&gt; - A blazingly fast static web server with routing, templating, and security in a single binary you can set up with zero code &lt;a href="https://github.com/mufeedvh/binserve/actions"&gt;&lt;img src="https://github.com/mufeedvh/binserve/actions/workflows/build.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orhun/rustypaste"&gt;orhun/rustypaste&lt;/a&gt; - A minimal file upload/pastebin service &lt;img src="https://img.shields.io/github/actions/workflow/status/orhun/rustypaste/ci.yml?branch=master&amp;amp;label=build" alt="https://github.com/orhun/rustypaste/actions" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/plabayo/rama"&gt;plabayo/rama&lt;/a&gt; - A modular service framework to move and transform your network packets, used to build web clients, servers and — above all — proxies&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ronanyeah/rust-hasura"&gt;ronanyeah/rust-hasura&lt;/a&gt; - A demonstration of how a GraphQL server can be used as a remote schema with &lt;a href="https://hasura.io/"&gt;Hasura&lt;/a&gt; &lt;img src="https://github.com/ronanyeah/rust-hasura/workflows/Rust/badge.svg?branch=master" alt="Rust" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/static-web-server/static-web-server"&gt;static-web-server&lt;/a&gt; - A blazing fast and asynchronous web server for static files-serving. ⚡ &lt;a href="https://github.com/static-web-server/static-web-server/actions/workflows/devel.yml?query=branch%3Amaster"&gt;&lt;img src="https://github.com/static-web-server/static-web-server/actions/workflows/devel.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/svenstaro/miniserve"&gt;svenstaro/miniserve&lt;/a&gt; - A small, self-contained cross-platform CLI tool that allows you to just grab the binary and serve some file(s) via HTTP &lt;a href="https://github.com/svenstaro/miniserve/actions"&gt;&lt;img src="https://github.com/svenstaro/miniserve/workflows/CI/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thecoshman/http"&gt;thecoshman/http&lt;/a&gt; - Host These Things Please - A basic http server for hosting a folder fast and simply&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TheWaWaR/simple-http-server"&gt;TheWaWaR/simple-http-server&lt;/a&gt; - simple static http server&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/0x676e67/vproxy"&gt;vproxy/0x676e67&lt;/a&gt; - An fast asynchronous Rust HTTP/Socks5 Proxy&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development tools&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Julien-cpsn/ATAC"&gt;ATAC&lt;/a&gt; - A feature-full TUI API client made in Rust. ATAC is free, open-source, offline and account-less.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Canop/bacon"&gt;bacon&lt;/a&gt; - background rust code checker, similar to cargo-watch&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/clippy"&gt;clippy&lt;/a&gt; - Rust lints&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/clog-tool/clog-cli"&gt;clog-tool/clog-cli&lt;/a&gt; - generates a changelog from git metadata (&lt;a href="https://blog.thoughtram.io/announcements/tools/2014/09/18/announcing-clog-a-conventional-changelog-generator-for-the-rest-of-us.html"&gt;conventional changelog&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudflare/foundations"&gt;cloudflare/foundations&lt;/a&gt; - Foundations is a modular Rust library, designed to help scale programs for distributed, production-grade systems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/comtrya/comtrya"&gt;comtrya&lt;/a&gt; - A configuration management tool for localhost / dotfiles &lt;a href="https://github.com/comtrya/comtrya/actions"&gt;&lt;img src="https://github.com/comtrya/comtrya/actions/workflows/main.yaml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Wulf/create-rust-app"&gt;create-rust-app&lt;/a&gt; - Set up a modern rust+react web app by running one command. &lt;a href="https://crates.io/crates/create-rust-app"&gt;&lt;img src="https://img.shields.io/crates/v/create-rust-app.svg?sanitize=true" alt="crate" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dan-t/rusty-tags"&gt;dan-t/rusty-tags&lt;/a&gt; - create ctags/etags for a cargo project and all of its dependencies&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/datanymizer/datanymizer"&gt;datanymizer/datanymizer&lt;/a&gt; - Powerful database anonymizer with flexible rules &lt;a href="https://github.com/datanymizer/datanymizer/actions?query=workflow%3ACI+branch%3Amain"&gt;&lt;img src="https://github.com/datanymizer/datanymizer/workflows/CI/badge.svg?branch=main" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/git-delta"&gt;delta&lt;/a&gt; - A syntax-highlighter for git and diff output&lt;a href="https://github.com/dandavison/delta//actions"&gt;&lt;img src="https://github.com/dandavison/delta/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dotenv-linter/dotenv-linter"&gt;dotenv-linter&lt;/a&gt; - Linter for &lt;code&gt;.env&lt;/code&gt; files &lt;a href="https://github.com/dotenv-linter/dotenv-linter/actions?query=workflow%3ACI+branch%3Amaster"&gt;&lt;img src="https://github.com/dotenv-linter/dotenv-linter/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/envio-cli/envio"&gt;envio-cli/envio&lt;/a&gt; - A Modern And Secure CLI Tool For Managing Environment Variables &lt;a href="https://github.com/envio-cli/envio/actions/workflows/CICD.yml"&gt;&lt;img src="https://github.com/envio-cli/envio/actions/workflows/CICD.yml/badge.svg?branch=main" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/flox/flox"&gt;Flox&lt;/a&gt; - Flox is a virtual environment and package manager all in one.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antinomyhq/forge"&gt;Forge&lt;/a&gt; - A terminal-based AI pair programmer for code generation and editing. &lt;a href="https://forgecode.dev/"&gt;&lt;img src="https://img.shields.io/badge/website-forgecode.dev-blue" alt="Website" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/frolicflow/Frolic"&gt;frolic&lt;/a&gt; - An API layer to build customer facing dashboards 10x faster&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brocode/fw"&gt;fw&lt;/a&gt; - workspace productivity booster &lt;a href="https://github.com/brocode/fw/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/brocode/fw/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="Rust" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kyu08/fzf-make"&gt;fzf-make&lt;/a&gt; [&lt;a href="https://crates.io/crates/fzf-make"&gt;fzf-make&lt;/a&gt;] - A command line tool that executes make target using fuzzy finder with preview window. &lt;a href="https://crates.io/crates/fzf-make"&gt;&lt;img src="https://img.shields.io/crates/v/fzf-make?style=flatflat-square" alt="crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/geiger-rs/cargo-geiger"&gt;geiger&lt;/a&gt; - A program that list statistics related to usage of unsafe code in a crate and all its dependencies &lt;a href="https://dev.azure.com/cargo-geiger/cargo-geiger/_build/latest?definitionId=1&amp;amp;branchName=master"&gt;&lt;img src="https://dev.azure.com/cargo-geiger/cargo-geiger/_apis/build/status/geiger-rs.cargo-geiger?branchName=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orhun/git-cliff"&gt;git-cliff&lt;/a&gt; - A highly customizable Changelog Generator that follows Conventional Commit specifications &lt;img src="https://img.shields.io/github/actions/workflow/status/orhun/git-cliff/ci.yml?branch=main&amp;amp;label=build" alt="https://github.com/orhun/git-cliff/actions" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/saschagrunert/git-journal/"&gt;git-journal&lt;/a&gt; - The Git Commit Message and Changelog Generation Framework&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rksm/hot-lib-reloader-rs"&gt;hot-lib-reloader&lt;/a&gt; - Hot reload Rust code &lt;a href="https://github.com/rksm/hot-lib-reloader-rs/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/rksm/hot-lib-reloader-rs/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lasantosr/intelli-shell"&gt;intelli-shell&lt;/a&gt; - Bookmark commands with placeholders and search or autocomplete at any time &lt;a href="https://crates.io/crates/intelli-shell"&gt;&lt;img src="https://img.shields.io/crates/v/intelli-shell.svg?sanitize=true" alt="crate" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lasantosr/intelli-shell/actions/workflows/release.yml"&gt;&lt;img src="https://github.com/lasantosr/intelli-shell/actions/workflows/release.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/casey/just"&gt;just&lt;/a&gt; - A handy command runner for project-specific tasks&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jacobdeichert/mask"&gt;mask&lt;/a&gt; - A CLI task runner defined by a simple markdown file &lt;a href="https://github.com/jacobdeichert/mask/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/jacobdeichert/mask/workflows/CI/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fiatjaf/module-linker"&gt;Module Linker&lt;/a&gt; - Extension that adds &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; links to references in &lt;code&gt;mod&lt;/code&gt;, &lt;code&gt;use&lt;/code&gt; and &lt;code&gt;extern crate&lt;/code&gt; statements at GitHub.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dalance/ptags"&gt;ptags&lt;/a&gt; - A parallel universal-ctags wrapper for git repository&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/racer-rust/racer"&gt;Racer&lt;/a&gt; - code completion for Rust&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huhu/rust-search-extension"&gt;Rust Search Extension&lt;/a&gt; - A handy browser extension to search crates and docs in address bar (omnibox). &lt;a href="https://github.com/huhu/rust-search-extension/actions"&gt;&lt;img src="https://github.com/huhu/rust-search-extension/workflows/build/badge.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-lang/rustup"&gt;Rustup&lt;/a&gt; - the Rust toolchain installer &lt;a href="https://github.com/rust-lang/rustup/actions"&gt;&lt;img src="https://github.com/rust-lang/rustup/actions/workflows/ci.yaml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/igor-petruk/scriptisto"&gt;scriptisto&lt;/a&gt; - A language-agnostic "shebang interpreter" that enables you to write one file scripts in compiled languages. &lt;a href="https://cloud.drone.io/igor-petruk/scriptisto"&gt;&lt;img src="https://cloud.drone.io/api/badges/igor-petruk/scriptisto/status.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/crate-ci/typos"&gt;typos&lt;/a&gt; [&lt;a href="https://crates.io/crates/typos-cli"&gt;typos-cli&lt;/a&gt;] - Source code spell checker&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Build system&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/"&gt;Cargo&lt;/a&gt; - the Rust package manager 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/frewsxcv/cargo-all-features"&gt;cargo-all-features&lt;/a&gt; - A configurable subcommand to simplify testing, building and much more for all combinations of features &lt;a href="https://github.com/frewsxcv/cargo-all-features/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/frewsxcv/cargo-all-features/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-benchcmp"&gt;cargo-benchcmp&lt;/a&gt; - A utility to compare micro-benchmarks&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-bitbake"&gt;cargo-bitbake&lt;/a&gt; - A cargo extension that can generate BitBake recipes utilizing the classes from meta-rust&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-cache"&gt;cargo-cache&lt;/a&gt; - inspect/manage/clean your cargo cache (&lt;code&gt;~/.cargo/&lt;/code&gt;/&lt;code&gt;${CARGO_HOME}&lt;/code&gt;), print sizes etc &lt;a href="https://github.com/matthiaskrgr/cargo-cache/actions"&gt;&lt;img src="https://github.com/matthiaskrgr/cargo-cache/workflows/ci/badge.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-check"&gt;cargo-check&lt;/a&gt; - A wrapper around &lt;code&gt;cargo rustc -- -Zno-trans&lt;/code&gt; which can be helpful for running a faster compile if you only need correctness checks&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-commander"&gt;cargo-commander&lt;/a&gt; - A subcommand for &lt;code&gt;cargo&lt;/code&gt; to run CLI commands similar to how the scripts section in &lt;code&gt;package.json&lt;/code&gt; works &lt;a href="https://github.com/simonhyll/cargo-commander/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/simonhyll/cargo-commander/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build and test" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-count"&gt;cargo-count&lt;/a&gt; - lists source code counts and details about cargo projects, including unsafe statistics&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-deb"&gt;cargo-deb&lt;/a&gt; - Generates binary Debian packages&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-depgraph"&gt;cargo-depgraph&lt;/a&gt; - Creates dependency graphs for cargo projects using cargo metadata and graphviz&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-do"&gt;cargo-do&lt;/a&gt; - run multiple cargo commands in a row&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-ebuild"&gt;cargo-ebuild&lt;/a&gt; - cargo extension that can generate ebuilds using the in-tree eclasses&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-edit"&gt;cargo-edit&lt;/a&gt; - allows you to add and list dependencies by reading/writing to your Cargo.toml file from the command line&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/cargo-generate/cargo-generate"&gt;cargo-generate&lt;/a&gt; - A generator of a rust project by leveraging a pre-existing git repository as a template.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-info"&gt;cargo-info&lt;/a&gt; - queries crates.io for crates details from command line&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-license"&gt;cargo-license&lt;/a&gt; - A cargo subcommand to quickly view the licenses of all dependencies.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-limit"&gt;cargo-limit&lt;/a&gt; - Cargo with less noise: warnings are skipped until errors are fixed, Neovim integration, etc. &lt;a href="https://github.com/cargo-limit/cargo-limit/actions"&gt;&lt;img src="https://github.com/cargo-limit/cargo-limit/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-make"&gt;cargo-make&lt;/a&gt; - Task runner and build tool. &lt;a href="https://github.com/sagiegurari/cargo-make/actions"&gt;&lt;img src="https://github.com/sagiegurari/cargo-make/workflows/CI/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-modules"&gt;cargo-modules&lt;/a&gt; - A cargo plugin for showing a tree-like overview of a crate's modules.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-multi"&gt;cargo-multi&lt;/a&gt; - runs specified cargo command on multiple crates&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-outdated"&gt;cargo-outdated&lt;/a&gt; - displays when newer versions of Rust dependencies are available, or out of date&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/orium/cargo-rdme"&gt;cargo-rdme&lt;/a&gt; [&lt;a href="https://crates.io/crates/cargo-rdme"&gt;cargo-rdme&lt;/a&gt;] - Cargo subcommand to create your README from your crate’s documentation. &lt;a href="https://github.com/orium/cargo-rdme/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/orium/cargo-rdme/workflows/CI/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-release"&gt;cargo-release&lt;/a&gt; - tool for releasing git-managed cargo project, build, tag, publish, doc and push &lt;a href="https://github.com/crate-ci/cargo-release/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/crate-ci/cargo-release/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Rust" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-script"&gt;cargo-script&lt;/a&gt; - lets people quickly and easily run Rust "scripts" which can make use of Cargo's package ecosystem&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/est31/cargo-udeps"&gt;cargo-udeps&lt;/a&gt; [&lt;a href="https://crates.io/crates/cargo-udeps"&gt;cargo-udeps&lt;/a&gt;] - find unused dependencies&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-update"&gt;cargo-update&lt;/a&gt; - cargo subcommand for checking and applying updates to installed executables&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-watch"&gt;cargo-watch&lt;/a&gt; - utility for cargo to compile projects when sources change&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/dtolnay/cargo-expand"&gt;dtolnay/cargo-expand&lt;/a&gt; - Expand macros in your source code&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;CMake 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Devolutions/CMakeRust"&gt;Devolutions/CMakeRust&lt;/a&gt; - useful for integrating a Rust library into a CMake project&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SiegeLord/RustCMake"&gt;SiegeLord/RustCMake&lt;/a&gt; - an example project showing usage of CMake with Rust&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/facebook/buck2"&gt;facebook/buck2&lt;/a&gt; - &lt;a href="https://buck2.build/"&gt;Buck2&lt;/a&gt; is a large-scale build tool built in Rust&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/suptejas/fleet"&gt;Fleet&lt;/a&gt; [&lt;a href="https://crates.io/crates/fleet-rs"&gt;fleet-rs&lt;/a&gt;] - The blazing fast build tool for Rust.&lt;/li&gt; 
 &lt;li&gt;GitHub actions 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/icepuma/rust-action"&gt;icepuma/rust-action&lt;/a&gt; - rust github action&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/peaceiris/actions-mdbook"&gt;peaceiris/actions-mdbook&lt;/a&gt; - GitHub Actions for mdBook&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nixos.org/"&gt;Nix&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/nix-community/fenix"&gt;nix-community/fenix&lt;/a&gt; - Rust toolchains and rust analyzer nightly for nix &lt;a href="https://github.com/nix-community/fenix/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/nix-community/fenix/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build-badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pantsbuild/pants"&gt;pantsbuild/pants&lt;/a&gt; - &lt;a href="https://www.pantsbuild.org/"&gt;Pants&lt;/a&gt; is a fast, scalable, user-friendly build system for codebases of all sizes built in Rust.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TraceMachina/nativelink"&gt;tracemachina/nativelink&lt;/a&gt; - &lt;a href="https://www.nativelink.com"&gt;NativeLink&lt;/a&gt; is a Backend Remote Execution platform written in rust for client build systems such as &lt;a href="https://buck2.build/"&gt;Buck2&lt;/a&gt;, &lt;a href="https://bazel.build/"&gt;Bazel&lt;/a&gt;, &lt;a href="https://www.pantsbuild.org/"&gt;Pants&lt;/a&gt;, etc.. &lt;a href="https://securityscorecards.dev/viewer/?uri=github.com/TraceMachina/nativelink"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/TraceMachina/nativelink/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://www.bestpractices.dev/projects/8050"&gt;&lt;img src="https://www.bestpractices.dev/projects/8050/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://nativelink.slack.com/join/shared_invite/zt-281qk1ho0-krT7HfTUIYfQMdwflRuq7A#/shared-invite/email"&gt;&lt;img src="https://img.shields.io/badge/slack--channel-blue?logo=slack" alt="Slack" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Debugging&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;GDB 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/cs01/gdbgui"&gt;gdbgui&lt;/a&gt; - Browser based frontend for gdb to debug C, C++, Rust, and go.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/godzie44/BugStalker"&gt;godzie44/BugStalker&lt;/a&gt; - Modern debugger for Linux x86-64. Written in Rust for Rust programs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kxxt/tracexec"&gt;kxxt/tracexec&lt;/a&gt; [&lt;a href="https://crates.io/crates/tracexec"&gt;tracexec&lt;/a&gt;] - Tracer for execve{,at} and pre-exec behavior, launcher for debuggers.&lt;/li&gt; 
 &lt;li&gt;LLDB 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb"&gt;CodeLLDB&lt;/a&gt; - A LLDB extension for &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Deployment&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/emk/rust-musl-builder"&gt;emk/rust-musl-builder&lt;/a&gt; - Docker images for compiling static Rust binaries using musl-libc and musl-gcc, with static versions of useful C libraries&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/kpcyrd/mini-docker-rust"&gt;kpcyrd/mini-docker-rust&lt;/a&gt; - An example project for very small rust docker images&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/liuchong/docker-rustup"&gt;liuchong/docker-rustup&lt;/a&gt; - A multiple version (with musl tools) Rust Docker image&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LukeMathWalker/cargo-chef"&gt;LukeMathWalker/cargo-chef&lt;/a&gt; - A tool and pre-built images for caching compiling remote dependencies between Docker builds.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rust-cross/rust-musl-cross"&gt;rust-cross/rust-musl-cross&lt;/a&gt; - Docker images for compiling static Rust binaries using musl-cross &lt;a href="https://github.com/rust-cross/rust-musl-cross/actions?query=workflow%3ABuild"&gt;&lt;img src="https://github.com/rust-cross/rust-musl-cross/workflows/Build/badge.svg?sanitize=true" alt="Build" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rust-lang/docker-rust"&gt;rust-lang-nursery/docker-rust&lt;/a&gt; - the official Rust Docker image&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Stavrospanakakis/is_ready"&gt;Stavrospanakakis/is_ready&lt;/a&gt; - Wait for multiple services to become available &lt;img src="https://github.com/Stavrospanakakis/is_ready/actions/workflows/release.yml/badge.svg?sanitize=true" alt="Build" /&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Heroku 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/emk/heroku-buildpack-rust"&gt;emk/heroku-buildpack-rust&lt;/a&gt; - A buildpack for Rust applications on Heroku&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/release-plz/release-plz"&gt;release-plz&lt;/a&gt; [&lt;a href="https://crates.io/crates/release-plz"&gt;release-plz&lt;/a&gt;] - Release crates from CI, with changelog generation and semver check. &lt;a href="https://github.com/release-plz/release-plz/actions"&gt;&lt;img src="https://github.com/release-plz/release-plz/workflows/CI/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Embedded&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://rust-embedded.org/"&gt;Rust Embedded&lt;/a&gt; focuses on improving the end-to-end experience of using Rust in resource-constrained environments and non-traditional platforms. See &lt;a href="https://github.com/rust-embedded/awesome-embedded-rust"&gt;awesome-embedded-rust&lt;/a&gt; for a curated, and more extended list of embedded Rust resources.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Arduino 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/avr-rust/ruduino"&gt;avr-rust/ruduino&lt;/a&gt; - Reusable components for the Arduino Uno.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Cross compiling 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/japaric/rust-cross"&gt;japaric/rust-cross&lt;/a&gt; - everything you need to know about cross compiling Rust programs&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/japaric/xargo"&gt;japaric/xargo&lt;/a&gt; - effortless cross compilation of Rust programs to custom bare-metal targets like ARM Cortex-M&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Espressif 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/esp-rs"&gt;esp-rs&lt;/a&gt; - home to a number of community projects enabling the use of the Rust programming language on various SoCs and modules produced by Espressif Systems.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Firmware 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/oreboot/oreboot"&gt;oreboot/oreboot&lt;/a&gt; - oreboot is a fork of coreboot, with C removed, written in Rust&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;nRF 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/nrf-rs/nrf-hal"&gt;nrf-rs/nrf-hal&lt;/a&gt; - A Rust HAL for the nRF family of devices&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;FFI&lt;/h3&gt; 
&lt;p&gt;See also &lt;a href="https://doc.rust-lang.org/book/first-edition/ffi.html"&gt;Foreign Function Interface&lt;/a&gt;, &lt;a href="http://jakegoulding.com/rust-ffi-omnibus/"&gt;The Rust FFI Omnibus&lt;/a&gt; (a collection of examples of using code written in Rust from other languages) and &lt;a href="https://github.com/alexcrichton/rust-ffi-examples"&gt;FFI examples written in Rust&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;C 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mozilla/cbindgen"&gt;mozilla/cbindgen&lt;/a&gt; - generates C header files from Rust source files. Used in Gecko for WebRender&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Sean1708/rusty-cheddar"&gt;Sean1708/rusty-cheddar&lt;/a&gt; - generates C header files from Rust source files&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;C# 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Cysharp/csbindgen"&gt;csbindgen&lt;/a&gt; - generates C# bindings for Rust source files&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;C++ 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/dtolnay/cxx"&gt;dtolnay/cxx&lt;/a&gt; - Safe interop between Rust and C++ &lt;a href="https://github.com/dtolnay/cxx"&gt;&lt;img src="https://img.shields.io/badge/github-dtolnay/cxx-8da0cb?style=for-the-badge&amp;amp;labelColor=555555&amp;amp;logo=github" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cpp"&gt;rust-cpp&lt;/a&gt; - Embed C++ code directly in Rust. &lt;a href="https://ci.appveyor.com/project/mystor/rust-cpp/branch/master"&gt;&lt;img src="https://ci.appveyor.com/api/projects/status/uu76vmcrwnjqra0u/branch/master?svg=true" alt="Build status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-bindgen"&gt;rust-lang/rust-bindgen&lt;/a&gt; - A Rust bindings generator&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Erlang 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rusterlium/rustler"&gt;rusterlium/rustler&lt;/a&gt; - safe Rust bridge for creating Erlang NIF functions&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Java 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/benanders/rjni"&gt;bennettanderson/rjni&lt;/a&gt; - use Java from Rust&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/drrb/java-rust-example"&gt;drrb/java-rust-example&lt;/a&gt; - use Rust from Java&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/j4rs"&gt;j4rs&lt;/a&gt; - use Java from Rust&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/jni"&gt;jni&lt;/a&gt; - use Rust from Java&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/jni-sys"&gt;jni-sys&lt;/a&gt; - Rust definitions corresponding to jni.h&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/rucaja"&gt;rucaja&lt;/a&gt; - use Java from Rust&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Lua 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/jcmoyer/rust-lua53"&gt;jcmoyer/rust-lua53&lt;/a&gt; - Lua 5.3 bindings for Rust&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lilyball/rust-lua"&gt;lilyball/rust-lua&lt;/a&gt; - Safe Rust bindings to Lua 5.1&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mlua-rs/mlua"&gt;mlua-rs/mlua&lt;/a&gt; - High level Lua 5.4/5.3/5.2/5.1 (including LuaJIT) and Roblox Luau bindings to Rust with async/await support &lt;a href="https://github.com/mlua-rs/mlua/actions"&gt;&lt;img src="https://github.com/mlua-rs/mlua/workflows/CI/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tickbh/td_rlua"&gt;tickbh/td_rlua&lt;/a&gt; [&lt;a href="https://crates.io/crates/td_rlua"&gt;td_rlua&lt;/a&gt;] - Zero-cost high-level lua 5.3 wrapper for Rust&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tomaka/hlua"&gt;tomaka/hlua&lt;/a&gt; - Rust library to interface with Lua&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;mruby 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/anima-engine/mrusty"&gt;anima-engine/mrusty&lt;/a&gt; - mruby safe bindings for Rust&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Node.js 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/infinyon/node-bindgen"&gt;infinyon/node-bindgen&lt;/a&gt; - Easy way to generate nodejs module using Rust&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/neon-bindings/neon"&gt;neon-bindings/neon&lt;/a&gt; - Rust bindings for writing safe and fast native Node.js modules&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/zhangyuang/node-ffi-rs"&gt;zhangyuang/node-ffi-rs&lt;/a&gt; - A module written in Rust and N-API provides interface (FFI) features for Node.js&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Objective-C 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SSheldon/rust-objc"&gt;SSheldon/rust-objc&lt;/a&gt; - Objective-C Runtime bindings and wrapper for Rust&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;PHP 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/phper-framework/phper"&gt;phper-framework/phper&lt;/a&gt; - The framework that allows us to write PHP extensions using pure and safe Rust whenever possible&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Prolog 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mthom/scryer-prolog/"&gt;mthom/scryer-prolog&lt;/a&gt; - Scryer Prolog is a free software ISO Prolog system written in Rust&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Python 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/dgrunwald/rust-cpython"&gt;dgrunwald/rust-cpython&lt;/a&gt; - Python bindings&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/getsentry/milksnake"&gt;getsentry/milksnake&lt;/a&gt; - extension for python setuptools that allows you to distribute dynamic linked libraries in Python wheels in the most portable way imaginable.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/PyO3/PyO3"&gt;PyO3/PyO3&lt;/a&gt; - Rust bindings for the Python interpreter&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/RustPython/RustPython"&gt;RustPython&lt;/a&gt; - A Python Interpreter written in Rust &lt;a href="https://github.com/RustPython/RustPython/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/RustPython/RustPython/workflows/CI/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Ruby 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/d-unsed/ruru"&gt;d-unsed/ruru&lt;/a&gt; - native Ruby extensions written in Rust&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/danielpclark/rutie"&gt;danielpclark/rutie&lt;/a&gt; - native Ruby extensions written in Rust and vice versa&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Web Assembly 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rhysd/wain"&gt;rhysd/wain&lt;/a&gt; - wain: WebAssembly INterpreter from scratch in Safe Rust with zero dependency &lt;a href="https://github.com/rhysd/wain/actions?query=workflow%3ACI+branch%3Amaster+event%3Apush"&gt;&lt;img src="https://github.com/rhysd/wain/workflows/CI/badge.svg?branch=master&amp;amp;event=push" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/wasm-bindgen/wasm-bindgen"&gt;wasm-bindgen&lt;/a&gt; - A project for facilitating high-level interactions between wasm modules and JS.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/drager/wasm-pack"&gt;wasm-pack&lt;/a&gt; - &lt;span&gt;📦&lt;/span&gt; &lt;span&gt;✨&lt;/span&gt; pack up the wasm and publish it to npm!&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Formatters&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dprint/dprint"&gt;dprint&lt;/a&gt; - A pluggable and configurable code formatting platform &lt;a href="https://github.com/dprint/dprint/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/dprint/dprint/workflows/CI/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jinxdash/prettier-plugin-rust"&gt;Prettier Rust&lt;/a&gt; - An opinionated Rust code formatter that autofixes bad syntax (&lt;a href="https://prettier.io/"&gt;Prettier&lt;/a&gt; community plugin)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-lang/rustfmt"&gt;rustfmt&lt;/a&gt; - Rust code formatter maintained by the Rust team and included in cargo&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;IDEs&lt;/h3&gt; 
&lt;p&gt;See also &lt;a href="https://areweideyet.com/"&gt;Are we (I)DE yet?&lt;/a&gt; and &lt;a href="https://www.rust-lang.org/tools"&gt;Rust Tools&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.eclipse.org/"&gt;Eclipse&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/eclipse-corrosion/corrosion"&gt;Eclipse Corrosion&lt;/a&gt; - a Rust development plugin for the Eclipse IDE, providing a rich edition experience through integration with the Rust Analyzer language server, Cargo runner and gdb debugger&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gnu.org/software/emacs/"&gt;Emacs&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/racer-rust/emacs-racer"&gt;emacs-racer&lt;/a&gt; - Autocompletion (see also &lt;a href="https://company-mode.github.io"&gt;company&lt;/a&gt; and &lt;a href="https://github.com/auto-complete/auto-complete"&gt;auto-complete&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/flycheck/flycheck-rust"&gt;flycheck-rust&lt;/a&gt; - Rust support for &lt;a href="https://github.com/flycheck/flycheck"&gt;Flycheck&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-mode"&gt;rust-mode&lt;/a&gt; - Rust Major Mode&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/brotzeit/rustic"&gt;rustic&lt;/a&gt; - Rust development environment for Emacs &lt;a href="https://github.com/brotzeit/rustic/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/brotzeit/rustic/workflows/CI/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitpod.io"&gt;gitpod.io&lt;/a&gt; - Online IDE with full Rust support based on Rust Language Server&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.gnome.org/Apps/Builder"&gt;gnome-builder&lt;/a&gt; - native support for rust and cargo since Version 3.22.2&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.jetbrains.com/idea/"&gt;IntelliJ&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/intellij-rust/intellij-rust"&gt;intellij-rust/intellij-rust&lt;/a&gt; - Rust plugin for the IntelliJ Platform&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://kakoune.org/"&gt;Kakoune&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/kakoune-lsp/kakoune-lsp/"&gt;kakoune-lsp&lt;/a&gt; - &lt;a href="https://microsoft.github.io/language-server-protocol/"&gt;LSP&lt;/a&gt; client. Implemented in Rust and supports rls out of the box.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lapce/lapce"&gt;lapce&lt;/a&gt; - Lightning-fast and Powerful Code Editor written in Rust. &lt;a href="https://github.com/lapce/lapce/actions/workflows/release.yml"&gt;&lt;img src="https://github.com/lapce/lapce/actions/workflows/release.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/madeso/ride"&gt;Ride&lt;/a&gt; - A Rust IDE&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.jetbrains.com/rust/"&gt;RustRover&lt;/a&gt; - A powerful Rust IDE by JetBrains, free for individual non-commercial use&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sublimetext.com/"&gt;Sublime Text&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-enhanced"&gt;rust-lang/rust-enhanced&lt;/a&gt; - official Rust package&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vim.sourceforge.io/"&gt;Vim&lt;/a&gt; - the ubiquitous text editor 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/autozimu/LanguageClient-neovim"&gt;autozimu/LanguageClient-neovim&lt;/a&gt; - &lt;a href="https://microsoft.github.io/language-server-protocol/"&gt;LSP&lt;/a&gt; client. Implemented in Rust and supports rls out of the box.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/nwiizo/cargo.nvim"&gt;cargo.nvim&lt;/a&gt; - A Neovim plugin for seamless integration with Cargo commands.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Saecki/crates.nvim"&gt;crates.nvim&lt;/a&gt; - plugin that helps to managing crates.io dependencies.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rust-lang/rust.vim"&gt;rust.vim&lt;/a&gt; - provides file detection, syntax highlighting, formatting, Syntastic integration, and more.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/racer-rust/vim-racer"&gt;vim-racer&lt;/a&gt; - allows vim to use &lt;a href="https://github.com/racer-rust/racer"&gt;Racer&lt;/a&gt; for Rust code completion and navigation.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Visual Studio 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ZoeyR/rls-vs2017"&gt;dgriffen/rls-vs2017&lt;/a&gt; - Rust support for Visual Studio 2017 Preview &lt;a href="https://ci.appveyor.com/project/dgriffen/rls-vs2017"&gt;&lt;img src="https://ci.appveyor.com/api/projects/status/d2lxlincwninhsng?svg=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/PistonDevelopers/VisualRust"&gt;PistonDevelopers/VisualRust&lt;/a&gt; - A Visual Studio extension for Rust &lt;a href="https://ci.appveyor.com/project/vosen/visualrust"&gt;&lt;img src="https://ci.appveyor.com/api/projects/status/5nw5no10jj0y4p3f?svg=true" alt="Build status" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb"&gt;CodeLLDB&lt;/a&gt; - A LLDB extension&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=fill-labs.dependi"&gt;Dependi&lt;/a&gt; - Manage your dependencies with ease&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=tamasfe.even-better-toml"&gt;Even Better TOML&lt;/a&gt; - TOML support in vscode&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=jinxdash.prettier-rust"&gt;Prettier - Code formatter (Rust)&lt;/a&gt; - Opinionated Rust code formatter that autofixes bad syntax (&lt;a href="https://prettier.io/"&gt;Prettier&lt;/a&gt; community plugin)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=rust-lang.rust-analyzer"&gt;rust-analyzer&lt;/a&gt; - An alternative rust language server to the RLS&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Profiling&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bencherdev/bencher"&gt;Bencher&lt;/a&gt; - A suite of continuous benchmarking tools designed to catch performance regressions in CI&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bheisler/criterion.rs"&gt;bheisler/criterion.rs&lt;/a&gt; - Statistics-driven benchmarking library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/koute/bytehound"&gt;Bytehound&lt;/a&gt; - A memory profiler for Linux&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nvzqz/divan"&gt;Divan&lt;/a&gt; - Simple yet powerful benchmarking library with allocation profiling&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ellisonch/rust-stopwatch"&gt;ellisonch/rust-stopwatch&lt;/a&gt; - A stopwatch library&lt;/li&gt; 
 &lt;li&gt;FlameGraphs 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/llogiq/flame"&gt;llogiq/flame&lt;/a&gt; - An intrusive flamegraph profiling tool for rust&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mrhooray/torch"&gt;mrhooray/torch&lt;/a&gt; - generates FlameGraphs based on DWARF Debug Info&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bytedance/g3"&gt;g3bench&lt;/a&gt; - A benchmark tool that supports HTTP 1.x, HTTP 2, HTTP 3, TLS Handshake, DNS and Cloudflare Keyless&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sharkdp/hyperfine"&gt;sharkdp/hyperfine&lt;/a&gt; - A command-line benchmarking tool&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Services&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deps-rs/deps.rs"&gt;deps.rs&lt;/a&gt; - Detect outdated or insecure dependencies&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.rs"&gt;docs.rs&lt;/a&gt; - Automatic documentation generation of crates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Static analysis&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://crates.io/keywords/assert"&gt;assert&lt;/a&gt;, &lt;a href="https://crates.io/keywords/static"&gt;static&lt;/a&gt;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/endorlabs/mirai"&gt;MIRAI&lt;/a&gt; - an abstract interpreter operating on Rust's mid-level intermediate representation (MIR) &lt;a href="https://github.com/endorlabs/mirai/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/endorlabs/mirai/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="Continuous Integration" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Artisan-Lab/RAPx"&gt;RAPx&lt;/a&gt; - A platform that helps Rust programmers develop and use advanced static analysis tools beyond those provided by the rustc compiler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/static_assertions"&gt;static_assertions&lt;/a&gt; - Compile-time assertions to ensure that invariants are met&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/verus-lang/verus"&gt;verus-lang/verus&lt;/a&gt; - Verified Rust for low-level systems code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://crates.io/keywords/test"&gt;test&lt;/a&gt;, &lt;a href="https://crates.io/keywords/testing"&gt;testing&lt;/a&gt;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Code Coverage 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-tarpaulin"&gt;tarpaulin&lt;/a&gt; - A code coverage tool&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Continuous Integration 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/japaric/trust"&gt;trust&lt;/a&gt; - A Travis CI and AppVeyor template to test your Rust crate on 5 architectures and publish binary releases of it for Linux, macOS and Windows&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Frameworks and Runners 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AlKass/polish"&gt;AlKass/polish&lt;/a&gt; - Mini Testing/Test-Driven Framework &lt;a href="https://crates.io/crates/polish"&gt;&lt;img src="https://img.shields.io/crates/v/polish.svg?sanitize=true" alt="Crates Package Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bitfield/cargo-testdox"&gt;bitfield/cargo-testdox&lt;/a&gt; [&lt;a href="https://crates.io/crates/cargo-testdox"&gt;cargo-testdox&lt;/a&gt;] - Turns your Rust tests into docs &lt;a href="https://github.com/bitfield/cargo-testdox/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/bitfield/cargo-testdox/actions/workflows/ci.yml/badge.svg?branch=main" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-dinghy/"&gt;cargo-dinghy&lt;/a&gt; - A cargo extension to simplify running library tests and benches on smartphones and other small processor devices.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cucumber"&gt;cucumber&lt;/a&gt; &lt;a href="https://crates.io/crates/cucumber"&gt;&lt;img src="https://img.shields.io/crates/v/cucumber.svg?sanitize=true" alt="Latest Version" /&gt;&lt;/a&gt; - An implementation of the Cucumber testing framework for Rust. Fully native, no external test runners or dependencies. &lt;a href="https://github.com/cucumber-rs/cucumber/actions"&gt;&lt;img src="https://github.com/cucumber-rs/cucumber/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/d-e-s-o/test-log"&gt;d-e-s-o/test-log&lt;/a&gt; [&lt;a href="https://crates.io/crates/test-log"&gt;test-log&lt;/a&gt;] - A replacement of the &lt;code&gt;#[test]&lt;/code&gt; attribute that initializes logging and/or tracing infrastructure before running tests. &lt;a href="https://github.com/d-e-s-o/test-log/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/d-e-s-o/test-log/actions/workflows/test.yml/badge.svg?branch=main" alt="GitHub Workflow Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/demonstrate"&gt;demonstrate&lt;/a&gt; - Declarative Testing Framework &lt;a href="https://github.com/aubaugh/demonstrate"&gt;&lt;img src="https://github.com/aubaugh/demonstrate/workflows/Continuous%20Integration/badge.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/googletest"&gt;GoogleTest Rust&lt;/a&gt; - Powerful test assertion framework based on the C++ test library GoogleTest &lt;a href="https://github.com/google/googletest-rust/actions?query=workflow%3ACI+branch%3Amain"&gt;&lt;img src="https://github.com/google/googletest-rust/workflows/CI/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/wfxr/rlt"&gt;rlt&lt;/a&gt; - A universal load testing framework, with real-time tui support.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/rstest"&gt;rstest&lt;/a&gt; - Fixture-based test framework &lt;a href="https://github.com/la10736/rstest/actions"&gt;&lt;img src="https://github.com/la10736/rstest/workflows/Test/badge.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/speculate"&gt;speculate&lt;/a&gt; - An RSpec inspired minimal testing framework&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Mocking and Test Data 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/asomers/mockall"&gt;asomers/mockall&lt;/a&gt; [&lt;a href="https://crates.io/crates/mockall"&gt;mockall&lt;/a&gt;] - A powerful mock object library. &lt;a href="https://cirrus-ci.com/github/asomers/mockall"&gt;&lt;img src="https://api.cirrus-ci.com/github/asomers/mockall.svg?sanitize=true" alt="Cirrus Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bcheidemann/fixtures-rs/tree/main/fixtures"&gt;bcheidemann/fixtures-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/fixtures"&gt;fixtures&lt;/a&gt;] - A proc macro for generating tests from fixtures using glob patterns&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/cksac/fake-rs"&gt;fake-rs&lt;/a&gt; - A library for generating fake data&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/calder/rust-goldenfile"&gt;goldenfile&lt;/a&gt; [&lt;a href="https://crates.io/crates/goldenfile"&gt;goldenfile&lt;/a&gt;] - A library providing a simple API for goldenfile testing.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/alexliesenfeld/httpmock"&gt;httpmock&lt;/a&gt; - HTTP mocking &lt;a href="https://dev.azure.com/alexliesenfeld/httpmock/_build/latest?definitionId=2&amp;amp;branchName=master"&gt;&lt;img src="https://dev.azure.com/alexliesenfeld/httpmock/_apis/build/status/alexliesenfeld.httpmock?branchName=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/mockiato"&gt;mockiato&lt;/a&gt; - A strict, yet friendly mocking library for unstable Rust 2018&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/mockito"&gt;mockito&lt;/a&gt; - HTTP mocking&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/IBM/mocktail"&gt;mocktail&lt;/a&gt; &lt;a href="https://crates.io/crates/mocktail"&gt;&lt;img src="https://img.shields.io/crates/v/mocktail" alt="mocktail" /&gt;&lt;/a&gt; - HTTP &amp;amp; gRPC server mocking for Rust &lt;img src="https://github.com/IBM/mocktail/actions/workflows/build.yml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/nrxus/faux/"&gt;nrxus/faux&lt;/a&gt; &lt;a href="https://crates.io/crates/faux"&gt;&lt;img src="https://img.shields.io/crates/v/faux.svg?sanitize=true" alt="Latest Version" /&gt;&lt;/a&gt; - A library to create mocks out of structs. &lt;img src="https://github.com/nrxus/faux/workflows/test/badge.svg?branch=master" alt="build" /&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/shuttle-hq/synth/"&gt;synth&lt;/a&gt; - Generate database data declaratively. &lt;a href="https://github.com/shuttle-hq/synth"&gt;&lt;img src="https://github.com/shuttle-hq/synth/actions/workflows/synth-test.yml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Mutation Testing 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/sourcefrog/cargo-mutants"&gt;cargo-mutants&lt;/a&gt; [&lt;a href="https://crates.io/crates/cargo-mutants"&gt;cargo-mutants&lt;/a&gt;] - Finds inadequately tested code by injecting mutations, no source changes required. &lt;a href="https://github.com/sourcefrog/cargo-mutants/actions/workflows/tests.yml?query=branch%3Amain"&gt;&lt;img src="https://github.com/sourcefrog/cargo-mutants/actions/workflows/tests.yml/badge.svg?branch=main&amp;amp;event=push" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/llogiq/mutagen"&gt;mutagen&lt;/a&gt; [&lt;a href="https://crates.io/crates/mutagen"&gt;mutagen&lt;/a&gt;] - A source-level mutation testing framework (nightly only)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Property Testing and Fuzzing 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/proptest"&gt;proptest&lt;/a&gt; - property testing framework inspired by the &lt;a href="https://hypothesis.works/"&gt;Hypothesis&lt;/a&gt; framework for Python&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/quickcheck"&gt;quickcheck&lt;/a&gt; - A Rust implementation of &lt;a href="https://wiki.haskell.org/Introduction_to_QuickCheck1"&gt;QuickCheck&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rust-fuzz/afl.rs"&gt;rust-fuzz/afl.rs&lt;/a&gt; - A Rust fuzzer, using &lt;a href="https://lcamtuf.coredump.cx/afl/"&gt;AFL&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Transpiling&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aleph-lang/aleph_ollama"&gt;aleph-lang/aleph_ollama&lt;/a&gt; [&lt;a href="https://crates.io/crates/aleph_ollama"&gt;aleph_ollama&lt;/a&gt;] - AI-powered source code translation tool using local Ollama API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BayesWitnesses/m2cgen"&gt;BayesWitnesses/m2cgen&lt;/a&gt; - A CLI tool to transpile trained classic machine learning models into a native Rust code with zero dependencies. &lt;a href="https://github.com/BayesWitnesses/m2cgen/actions"&gt;&lt;img src="https://github.com/BayesWitnesses/m2cgen/workflows/GitHub%20Actions/badge.svg?branch=master" alt="GitHub Actions Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/immunant/c2rust"&gt;immunant/c2rust&lt;/a&gt; - C to Rust translator and cross checker built atop Clang/LLVM.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jameysharp/corrode"&gt;jameysharp/corrode&lt;/a&gt; - A C to Rust translator written in Haskell.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Libraries&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/larksuite/perf-monitor-rs"&gt;perf-monitor-rs&lt;/a&gt; - A toolkit designed to be a foundation for applications to monitor their performance. &lt;a href="https://crates.io/crates/perf_monitor"&gt;&lt;img src="https://img.shields.io/crates/v/perf_monitor.svg?sanitize=true" alt="crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Artificial Intelligence&lt;/h3&gt; 
&lt;h4&gt;Genetic algorithms&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/innoave/genevo"&gt;innoave/genevo&lt;/a&gt; - Execute genetic algorithm (GA) simulations in a customizable and extensible way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/m-decoster/RsGenetic"&gt;m-decoster/RsGenetic&lt;/a&gt; - Genetic Algorithm library. In maintenance mode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Martin1887/oxigen"&gt;Martin1887/oxigen&lt;/a&gt; - Fast, parallel, extensible and adaptable genetic algorithm library. A example using this library solves the N Queens problem for N = 255 in only few seconds and using less than 1 MB of RAM.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pkalivas/radiate"&gt;pkalivas/radiate&lt;/a&gt; - A customizable parallel genetic programming engine capable of evolving solutions for supervised, unsupervised, and reinforcement learning problems. Comes with complete and customizable implementation of NEAT and Evtree.&lt;img src="https://img.shields.io/crates/v/radiate" alt="Crates.io" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/willi-kappler/darwin-rs"&gt;willi-kappler/darwin-rs&lt;/a&gt; - Evolutionary algorithms&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Machine learning&lt;/h4&gt; 
&lt;p&gt;See [&lt;a href="https://crates.io/keywords/machine-learning"&gt;Machine learning&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;See also &lt;a href="https://medium.com/@autumn_eng/about-rust-s-machine-learning-community-4cda5ec8a790#.hvkp56j3f"&gt;About Rust’s Machine Learning Community&lt;/a&gt; and &lt;a href="https://www.arewelearningyet.com"&gt;Are we learning yet?&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/autumnai/leaf"&gt;autumnai/leaf&lt;/a&gt; - Open Machine Intelligence framework.. Abandoned project. The most updated fork is &lt;a href="https://github.com/fff-rs/juice"&gt;juice&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ave-Sergeev/Tictonix"&gt;ave-sergeev/tictonix&lt;/a&gt; [&lt;a href="https://crates.io/crates/tictonix"&gt;tictonix&lt;/a&gt;] - A library that provides the ability to convert tokens into embeddings, as well as to encode their positions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blackportal-ai/delta"&gt;blackportal-ai/delta&lt;/a&gt; - Δ An Open-Source Machine Learning Framework in Rust. &lt;img src="https://img.shields.io/crates/v/deltaml.svg?sanitize=true" alt="crates.io" /&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/blackportal-ai/delta/core.yml?branch=master" alt="build" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blackportal-ai/nebula"&gt;blackportal-ai/nebula&lt;/a&gt; - A Package Manager for Machine Learning Datasets and Models. &lt;img src="https://img.shields.io/github/actions/workflow/status/blackportal-ai/nebula/core.yml?branch=master" alt="build" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tracel-ai/burn"&gt;burn&lt;/a&gt; - A Flexible and Comprehensive Deep Learning Framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coreylowman/dfdx"&gt;coreylowman/dfdx&lt;/a&gt; - CUDA accelerated machine learning framework that leverages many of Rust's unique features. &lt;img src="https://img.shields.io/crates/v/dfdx" alt="Crates.io" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/guillaume-be/rust-bert"&gt;guillaume-be/rust-bert&lt;/a&gt; [&lt;a href="https://crates.io/crates/rust_bert"&gt;rust_bert&lt;/a&gt;] - Ready-to-use NLP pipelines and language models&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huggingface/candle"&gt;huggingface/candle&lt;/a&gt; [&lt;a href="https://crates.io/crates/candle-core"&gt;candle-core&lt;/a&gt;] - a minimalist ML framework with a focus on easiness of use and on performance (including GPU support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huggingface/tokenizers"&gt;huggingface/tokenizers&lt;/a&gt; - Hugging Face's tokenizers for modern NLP pipelines (original implementation) with bindings for Python. &lt;a href="https://github.com/huggingface/tokenizers/actions"&gt;&lt;img src="https://github.com/huggingface/tokenizers/workflows/Rust/badge.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LaurentMazare/tch-rs"&gt;LaurentMazare/tch-rs&lt;/a&gt; - Bindings for PyTorch.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maciejkula/rustlearn"&gt;maciejkula/rustlearn&lt;/a&gt; - Machine learning library. &lt;a href="https://app.circleci.com/pipelines/github/maciejkula/rustlearn"&gt;&lt;img src="https://circleci.com/gh/maciejkula/rustlearn.svg?style=svg" alt="Circle CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Mottl/lightgbm3-rs"&gt;Mottl/lightgb3-rs&lt;/a&gt; - Bindings for LightGBM &lt;a href="https://crates.io/crates/lightgbm3"&gt;&lt;img src="https://img.shields.io/crates/v/lightgbm3.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Mottl/lightgbm3-rs/actions"&gt;&lt;img src="https://github.com/Mottl/lightgbm3-rs/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/perpetual-ml/perpetual"&gt;perpetual-ml/perpetual&lt;/a&gt; [&lt;a href="https://crates.io/crates/perpetual"&gt;perpetual&lt;/a&gt;] - A self-generalizing gradient boosting machine which doesn't need hyperparameter optimization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ramsyana/RustTensor"&gt;ramsyana/RustTensor&lt;/a&gt; - A learning-focused, high-performance tensor computation library built from scratch in Rust with automatic differentiation and CPU/CUDA backends.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-ml/linfa"&gt;rust-ml/linfa&lt;/a&gt; - Machine learning framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/smartcorelib/smartcore"&gt;smartcorelib/smartcore&lt;/a&gt; - Machine Learning Library [&lt;img src="https://img.shields.io/circleci/build/github/smartcorelib/smartcore" alt="Build Status" /&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tensorflow/rust"&gt;tensorflow/rust&lt;/a&gt; - Bindings for TensorFlow.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;OpenAI&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/64bit/async-openai"&gt;64bit/async-openai&lt;/a&gt; [&lt;a href="https://crates.io/crates/async-openai"&gt;async-openai&lt;/a&gt;] - Ergonomic Rust bindings for OpenAI API based on OpenAPI spec.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zurawiki/tiktoken-rs"&gt;zurawiki/tiktoken-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/tiktoken-rs"&gt;tiktoken-rs&lt;/a&gt;] - Library for tokenizing text with OpenAI models using tiktoken. &lt;a href="https://github.com/zurawiki/tiktoken-rs/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/zurawiki/tiktoken-rs/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Tooling&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BoundaryML/baml"&gt;BAML&lt;/a&gt; - A simple prompting language for building reliable AI workflows and agents. BAML's compiler is written in Rust!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Astronomy&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://crates.io/keywords/astronomy"&gt;astronomy&lt;/a&gt;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cds-astro/aladin-lite"&gt;cds-astro/aladin-lite&lt;/a&gt; - Web application for visualizing spatial and planetary image surveys in different projections&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/fitsio"&gt;fitsio&lt;/a&gt; - fits interface library wrapping cfitsio&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/flosse/rust-sun"&gt;flosse/rust-sun&lt;/a&gt; [&lt;a href="https://crates.io/crates/sun"&gt;sun&lt;/a&gt;] - A rust port of the JS library suncalc&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/saurvs/astro-rust"&gt;saurvs/astro-rust&lt;/a&gt; - astronomy&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Asynchronous&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://async.rs/"&gt;async-std&lt;/a&gt; [&lt;a href="https://crates.io/crates/async-std"&gt;async-std&lt;/a&gt;] - Async version of the Rust standard library &lt;a href="https://github.com/async-rs/async-std/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/async-rs/async-std/actions/workflows/ci.yml/badge.svg?branch=master" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dagrs-dev/dagrs"&gt;dagrs&lt;/a&gt; - A high-performance asynchronous task programming framework, which follows the concept of Flow based Programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dpc/mioco"&gt;dpc/mioco&lt;/a&gt; - Scalable, coroutine-based, asynchronous IO handling library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/igumnoff/gabriel2"&gt;igumnoff/gabriel2&lt;/a&gt; [&lt;a href="https://crates.io/crates/gabriel2"&gt;gabriel2&lt;/a&gt;] - Gabriel2: An actor-model library based on Tokio&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tokio-rs/mio"&gt;mio&lt;/a&gt; - MIO is a lightweight IO library, with a focus on adding as little overhead as possible over the OS abstractions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs"&gt;rust-lang/futures-rs&lt;/a&gt; - Zero-cost futures&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/t3hmrman/async-dropper"&gt;t3hmrman/async-dropper&lt;/a&gt; [&lt;a href="https://crates.io/crates/async-dropper"&gt;async-dropper&lt;/a&gt;] - Implementation of &lt;code&gt;AsyncDrop&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TeaEntityLab/fpRust"&gt;TeaEntityLab/fpRust&lt;/a&gt; - Monad/MonadIO, Handler, Coroutine/doNotation, Functional Programming features for Rust&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tokio-rs/tokio"&gt;tokio-rs/tokio&lt;/a&gt; - A runtime for writing reliable, asynchronous, and slim applications with the Rust programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tqwewe/kameo"&gt;tqwewe/kameo&lt;/a&gt; - Fault-tolerant Async Actors Built on Tokio&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Xudong-Huang/may"&gt;Xudong-Huang/may&lt;/a&gt; - Stackful coroutine library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zonyitoo/coio-rs"&gt;zonyitoo/coio-rs&lt;/a&gt; - A coroutine I/O library with a working-stealing scheduler&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Audio and Music&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://crates.io/keywords/audio"&gt;audio&lt;/a&gt;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aschey/stream-download-rs"&gt;aschey/stream-download-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/stream-download"&gt;stream-download&lt;/a&gt;] - A library for streaming audio, video, and other media content &lt;a href="https://github.com/aschey/stream-download-rs/actions"&gt;&lt;img src="https://github.com/aschey/stream-download-rs/actions/workflows/ci.yml/badge.svg?branch=main" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/hound"&gt;hound&lt;/a&gt; - A WAV encoding and decoding library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/insomnimus/nodi"&gt;insomnimus/nodi&lt;/a&gt; [&lt;a href="https://crates.io/crates/nodi"&gt;nodi&lt;/a&gt;] - A library for playback and abstraction of MIDI files. &lt;a href="https://github.com/insomnimus/nodi/actions"&gt;&lt;img src="https://github.com/insomnimus/nodi/actions/workflows/main.yml/badge.svg?branch=main" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jhasse/ears"&gt;jhasse/ears&lt;/a&gt; - A simple library to play Sounds and Musics, on top of OpenAL and libsndfile&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/musitdev/portmidi-rs"&gt;musitdev/portmidi-rs&lt;/a&gt; - &lt;a href="https://portmedia.sourceforge.net/portmidi/"&gt;PortMidi&lt;/a&gt; bindings&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ozankasikci/rust-music-theory"&gt;ozankasikci/rust-music-theory&lt;/a&gt; - Music theory library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pdeljanov/Symphonia"&gt;pdeljanov/Symphonia&lt;/a&gt; - Audio decoding and media demuxing library supporting AAC, FLAC, MP3, MP4, OGG, Vorbis, and WAV.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RustAudio"&gt;RustAudio&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/RustAudio/cpal"&gt;RustAudio/cpal&lt;/a&gt; - Low-level cross-platform audio I/O library. &lt;a href="https://github.com/RustAudio/cpal/actions"&gt;&lt;img src="https://github.com/RustAudio/cpal/workflows/cpal/badge.svg?branch=master" alt="Actions Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/RustAudio/rodio"&gt;RustAudio/rodio&lt;/a&gt; - Audio playback library&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/RustAudio/rust-portaudio"&gt;RustAudio/rust-portaudio&lt;/a&gt; - PortAudio bindings&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Serial-ATA/lofty-rs"&gt;Serial-ATA/lofty-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/lofty"&gt;lofty&lt;/a&gt;] - A library for reading and editing the metadata of various audio formats &lt;a href="https://github.com/Serial-ATA/lofty-rs/actions"&gt;&lt;img src="https://github.com/Serial-ATA/lofty-rs/actions/workflows/ci.yml/badge.svg?branch=main" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Authentication&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/constantoine/totp-rs"&gt;constantoine/totp-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/totp-rs"&gt;totp-rs&lt;/a&gt;] - 2fa library to generate and verify TOTP-based tokens &lt;img src="https://github.com/constantoine/totp-rs/workflows/Rust/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Keats/jsonwebtoken"&gt;Keats/jsonwebtoken&lt;/a&gt; - &lt;a href="https://en.wikipedia.org/wiki/JSON_Web_Token"&gt;JSON Web Token&lt;/a&gt; library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ramosbugs/oauth2-rs"&gt;oauth2&lt;/a&gt; - Extensible, strongly-typed OAuth2 client library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/197g/oxide-auth"&gt;oxide-auth&lt;/a&gt; - A OAuth2 server library, for use in combination with actix or other frontends, featuring a set of configurable and pluggable backends &lt;a href="https://cirrus-ci.com/github/HeroicKatora/oxide-auth"&gt;&lt;img src="https://api.cirrus-ci.com/github/197g/oxide-auth.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sgrust01/jwtvault"&gt;sgrust01/jwtvault&lt;/a&gt; - Async library to manage and orchestrate JWT workflow&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dermesser/yup-oauth2"&gt;yup-oauth2&lt;/a&gt; - An oauth2 client implementation providing the Device, Installed and Service Account flows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Automotive&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/idletea/tokio-socketcan"&gt;idletea/tokio-socketcan&lt;/a&gt; [&lt;a href="https://crates.io/crates/tokio-socketcan"&gt;tokio-socketcan&lt;/a&gt;] - Linux SocketCAN support for tokio based on the socketcan crate&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marcelbuesing/can-dbc"&gt;marcelbuesing/can-dbc&lt;/a&gt; [&lt;a href="https://crates.io/crates/can-dbc"&gt;can-dbc&lt;/a&gt;] - A parser for the DBC format&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marcelbuesing/tokio-socketcan-bcm"&gt;marcelbuesing/tokio-socketcan-bcm&lt;/a&gt; [&lt;a href="https://crates.io/crates/tokio-socketcan-bcm"&gt;tokio-socketcan-bcm&lt;/a&gt;] - Linux SocketCAN BCM support for tokio&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/socketcan-rs/socketcan-rs"&gt;mbr/socketcan&lt;/a&gt; [&lt;a href="https://crates.io/crates/socketcan"&gt;socketcan&lt;/a&gt;] - Linux SocketCAN library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Sensirion/lin-bus-rs"&gt;Sensirion/lin-bus&lt;/a&gt; [&lt;a href="https://crates.io/crates/lin-bus"&gt;lin-bus&lt;/a&gt;] - LIN bus driver traits and protocol implementation &lt;a href="https://app.circleci.com/pipelines/github/Sensirion/lin-bus-rs"&gt;&lt;img src="https://circleci.com/gh/Sensirion/lin-bus-rs.svg?style=svg" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bioinformatics&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/biodatageeks/polars-bio"&gt;polars-bio&lt;/a&gt; - Blazing-Fast Bioinformatic Operations on Python DataFrames &lt;img src="https://img.shields.io/pypi/v/polars-bio" alt="PyPI - Version" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-bio"&gt;Rust-Bio&lt;/a&gt; - bioinformatics libraries.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Caching&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/06chaynes/http-cache"&gt;06chaynes/http-cache&lt;/a&gt; [&lt;a href="https://crates.io/crates/http-cache"&gt;http-cache&lt;/a&gt;] - A caching middleware that follows HTTP caching rules &lt;a href="https://github.com/06chaynes/http-cache/actions/workflows/http-cache.yml"&gt;&lt;img src="https://github.com/06chaynes/http-cache/workflows/http-cache/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aisk/rust-memcache"&gt;aisk/rust-memcache&lt;/a&gt; - Memcached client library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/al8n/stretto"&gt;al8n/stretto&lt;/a&gt; - A high performance thread-safe memory-bound cache &lt;a href="https://github.com/al8n/stretto/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/al8n/stretto/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jaemk/cached"&gt;jaemk/cached&lt;/a&gt; - Simple function caching/memoization&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moka-rs/moka"&gt;moka-rs/moka&lt;/a&gt; - A high performance concurrent caching library inspired by the Caffeine library for Java &lt;a href="https://github.com/moka-rs/moka/actions/workflows/CI.yml"&gt;&lt;img src="https://github.com/moka-rs/moka/workflows/CI/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mozilla/sccache/"&gt;mozilla/sccache&lt;/a&gt; - Shared Compilation Cache, great compilation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zkat/cacache-rs"&gt;zkat/cacache-rs&lt;/a&gt; - A high-performance, concurrent, content-addressable disk cache, optimized for async APIs &lt;a href="https://github.com/zkat/cacache-rs/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/zkat/cacache-rs/workflows/CI/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Cloud&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;AWS [&lt;a href="https://crates.io/keywords/aws"&gt;aws&lt;/a&gt;] 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/awslabs/aws-lambda-rust-runtime"&gt;awslabs/aws-lambda-rust-runtime&lt;/a&gt; [&lt;a href="https://crates.io/crates/lambda_runtime"&gt;lambda_runtime&lt;/a&gt;] - Runtime for AWS Lambda &lt;a href="https://github.com/awslabs/aws-lambda-rust-runtime/actions"&gt;&lt;img src="https://github.com/awslabs/aws-lambda-rust-runtime/workflows/Rust/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/awslabs/aws-sdk-rust"&gt;awslabs/aws-sdk-rust&lt;/a&gt; - The new AWS SDK&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rusoto/rusoto"&gt;rusoto/rusoto&lt;/a&gt; - An AWS SDK for Rust&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Azure 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Azure/azure-sdk-for-rust"&gt;Azure/azure-sdk-for-rust&lt;/a&gt; - Official Azure SDK for Rust&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Load Balancer 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bparli/convey"&gt;Convey&lt;/a&gt; - Layer 4 Load Balancer with dynamic configuration loading.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Multi Cloud 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Qovery/engine"&gt;Qovery/engine&lt;/a&gt; - Abstraction layer library that turns easy application deployment on Cloud providers in just a few minutes&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Command-line&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Argument parsing 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/clap-rs/clap"&gt;clap-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/clap"&gt;clap&lt;/a&gt;] - A simple to use, full featured command-line argument parser&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cliparser"&gt;cliparser&lt;/a&gt; - Simple command line parser. &lt;a href="https://github.com/sagiegurari/cliparser/actions"&gt;&lt;img src="https://github.com/sagiegurari/cliparser/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/docopt/docopt.rs"&gt;docopt/docopt.rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/docopt"&gt;docopt&lt;/a&gt;] - Implementation of &lt;a href="http://docopt.org"&gt;DocOpt&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/google/argh"&gt;google/argh&lt;/a&gt; [&lt;a href="https://crates.io/crates/argh"&gt;argh&lt;/a&gt;] - An opinionated Derive-based argument parser optimized for code size &lt;a href="https://github.com/google/argh/actions"&gt;&lt;img src="https://github.com/google/argh/workflows/Argh/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/killercup/quicli"&gt;killercup/quicli&lt;/a&gt; [&lt;a href="https://crates.io/crates/quicli"&gt;quicli&lt;/a&gt;] - quickly build cool CLI apps&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ksk001100/seahorse"&gt;ksk001100/seahorse&lt;/a&gt; [&lt;a href="https://crates.io/crates/seahorse"&gt;seahorse&lt;/a&gt;] - A minimal CLI framework &lt;a href="https://github.com/ksk001100/seahorse/actions"&gt;&lt;img src="https://github.com/ksk001100/seahorse/workflows/CI/badge.svg?branch=master" alt="Build status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/TeXitoi/structopt"&gt;TeXitoi/structopt&lt;/a&gt; [&lt;a href="https://crates.io/crates/structopt"&gt;structopt&lt;/a&gt;] - parse command line argument by defining a struct&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Data visualization 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/nukesor/comfy-table"&gt;nukesor/comfy-table&lt;/a&gt; [&lt;a href="https://crates.io/crates/comfy-table"&gt;comfy-table&lt;/a&gt;] - Beautiful dynamic tables for your cli tools. &lt;a href="https://github.com/nukesor/comfy-table/actions"&gt;&lt;img src="https://github.com/Nukesor/comfy-table/workflows/Tests/badge.svg?branch=master" alt="Build status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/zhiburt/tabled"&gt;zhiburt/tabled&lt;/a&gt; [&lt;a href="https://crates.io/crates/tabled"&gt;tabled&lt;/a&gt;] - An easy to use library for pretty print tables of structs and enums. &lt;a href="https://github.com/zhiburt/tabled/actions"&gt;&lt;img src="https://github.com/zhiburt/tabled/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Human-centered design 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rust-cli/human-panic"&gt;rust-cli/human-panic&lt;/a&gt; [&lt;a href="https://crates.io/crates/human-panic"&gt;human-panic&lt;/a&gt;] - panic messages for humans&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Line editor 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/kkawakam/rustyline"&gt;kkawakam/rustyline&lt;/a&gt; [&lt;a href="https://crates.io/crates/rustyline"&gt;rustyline&lt;/a&gt;] - readline implementation&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/MovingtoMars/liner"&gt;MovingtoMars/liner&lt;/a&gt; [&lt;a href="https://crates.io/crates/liner"&gt;liner&lt;/a&gt;] - A library offering readline-like functionality&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/murarth/linefeed"&gt;murarth/linefeed&lt;/a&gt; [&lt;a href="https://crates.io/crates/linefeed"&gt;linefeed&lt;/a&gt;] - Configurable, extensible, interactive line reader&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/srijs/rust-copperline"&gt;srijs/rust-copperline&lt;/a&gt; [&lt;a href="https://crates.io/crates/copperline"&gt;copperline&lt;/a&gt;] - command line editing library&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Other 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mgrachev/update-informer"&gt;mgrachev/update-informer&lt;/a&gt; [&lt;a href="https://crates.io/crates/update-informer"&gt;update-informer&lt;/a&gt;] - Update informer for CLI applications. It checks for a new version on Crates.io and GitHub &lt;a href="https://github.com/mgrachev/update-informer/actions"&gt;&lt;img src="https://github.com/mgrachev/update-informer/workflows/CI/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Pipeline 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hniksic/rust-subprocess"&gt;hniksic/rust-subprocess&lt;/a&gt; [&lt;a href="https://crates.io/crates/subprocess"&gt;subprocess&lt;/a&gt;] - facilities for interaction with external pipelines&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://gitlab.com/imp/pager-rs"&gt;imp/pager-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/pager"&gt;pager&lt;/a&gt;] - pipe your output through an external pager&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/oconnor663/duct.rs"&gt;oconnor663/duct.rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/duct"&gt;duct&lt;/a&gt;] - A builder for subprocess pipelines and IO redirection&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rust-cli/rexpect"&gt;rust-cli/rexpect&lt;/a&gt; [&lt;a href="https://crates.io/crates/rexpect"&gt;rexpect&lt;/a&gt;] - automate interactive applications such as ssh, ftp, passwd, etc &lt;a href="https://github.com/rust-cli/rexpect/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/rust-cli/rexpect/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/zhiburt/expectrl"&gt;zhiburt/expectrl&lt;/a&gt; [&lt;a href="https://crates.io/crates/expectrl"&gt;expectrl&lt;/a&gt;] - A library for controlling interactive programs in a pseudo-terminal &lt;a href="https://github.com/zhiburt/expectrl/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/zhiburt/expectrl/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Progress 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/a8m/pb"&gt;a8m/pb&lt;/a&gt; [&lt;a href="https://crates.io/crates/pbr"&gt;pbr&lt;/a&gt;] - console progress bar&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/clitic/kdam"&gt;clitic/kdam&lt;/a&gt; [&lt;a href="https://crates.io/crates/kdam"&gt;kdam&lt;/a&gt;] - A console progress bar library inspired by tqdm &amp;amp; rich.progress &lt;a href="https://github.com/clitic/kdam/actions/workflows/tests.yml"&gt;&lt;img src="https://github.com/clitic/kdam/actions/workflows/tests.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/console-rs/indicatif"&gt;console-rs/indicatif&lt;/a&gt; [&lt;a href="https://crates.io/crates/indicatif"&gt;indicatif&lt;/a&gt;] - indicate progress to users&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/etienne-napoleone/spinach"&gt;etienne-napoleone/spinach&lt;/a&gt; [&lt;a href="https://crates.io/crates/spinach"&gt;spinach&lt;/a&gt;] - Practical spinner. &lt;a href="https://github.com/etienne-napoleone/spinach/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/etienne-napoleone/spinach/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/FGRibreau/spinners"&gt;FGRibreau/spinners&lt;/a&gt; [&lt;a href="https://crates.io/crates/spinners"&gt;spinners&lt;/a&gt;] - 60+ elegant terminal spinners&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Prompt 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hashmismatch/terminal_cli.rs"&gt;hashmismatch/terminal_cli.rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/terminal_cli"&gt;terminal_cli&lt;/a&gt;] - build an interactive command prompt&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mikaelmello/inquire"&gt;mikaelmello/inquire&lt;/a&gt; [&lt;a href="https://crates.io/crates/inquire"&gt;inquire&lt;/a&gt;] - A library for building interactive prompts on terminals. &lt;a href="https://github.com/mikaelmello/inquire/actions"&gt;&lt;img src="https://github.com/mikaelmello/inquire/actions/workflows/build.yml/badge.svg?branch=main" alt="Build status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://starship.rs/"&gt;starship/starship&lt;/a&gt; [&lt;a href="https://crates.io/crates/starship"&gt;starship&lt;/a&gt;] - A minimal, blazing fast, and extremely customizable prompt for any shell &lt;a href="https://github.com/starship/starship/actions"&gt;&lt;img src="https://github.com/starship/starship/actions/workflows/workflow.yml/badge.svg?sanitize=true" alt="Build status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ynqa/promkit"&gt;ynqa/promkit&lt;/a&gt; [&lt;a href="https://crates.io/crates/promkit"&gt;promkit&lt;/a&gt;] - A toolkit for building interactive command-line tools &lt;a href="https://github.com/ynqa/promkit/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/ynqa/promkit/actions/workflows/ci.yml/badge.svg?branch=main" alt="ci" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Style 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/colored-rs/colored"&gt;colored&lt;/a&gt; [&lt;a href="https://crates.io/crates/colored"&gt;colored&lt;/a&gt;] - Coloring terminal so simple, you already know how to do it!&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/console-rs/dialoguer"&gt;console-rs/dialoguer&lt;/a&gt; [&lt;a href="https://crates.io/crates/dialoguer"&gt;dialoguer&lt;/a&gt;] - Library for command line prompts and similar things.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LukasKalbertodt/bunt"&gt;LukasKalbertodt/bunt&lt;/a&gt; [&lt;a href="https://crates.io/crates/bunt"&gt;bunt&lt;/a&gt;] - cross-platform terminal colors and styling with macros &lt;a href="https://github.com/LukasKalbertodt/bunt/actions?query=workflow%3ACI+branch%3Amaster"&gt;&lt;img src="https://github.com/LukasKalbertodt/bunt/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Build status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LukasKalbertodt/term-painter"&gt;LukasKalbertodt/term-painter&lt;/a&gt; [&lt;a href="https://crates.io/crates/term-painter"&gt;term-painter&lt;/a&gt;] - cross-platform styled terminal output&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ogham/rust-ansi-term"&gt;ogham/rust-ansi-term&lt;/a&gt; [&lt;a href="https://crates.io/crates/ansi_term"&gt;ansi_term&lt;/a&gt;] - control colours and formatting on ANSI terminals&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SergioBenitez/yansi"&gt;SergioBenitez/yansi&lt;/a&gt; [&lt;a href="https://crates.io/crates/yansi"&gt;yansi&lt;/a&gt;] - A dead simple ANSI terminal color painting library&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;TUI 
  &lt;ul&gt; 
   &lt;li&gt;BearLibTerminal 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/nabijaczleweli/BearLibTerminal.rs"&gt;cfyzium/bearlibterminal&lt;/a&gt; [&lt;a href="https://crates.io/crates/bear-lib-terminal"&gt;bear-lib-terminal&lt;/a&gt;] - &lt;a href="https://github.com/tommyettinger/BearLibTerminal"&gt;BearLibTerminal&lt;/a&gt; bindings&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ccbrown/iocraft"&gt;ccbrown/iocraft&lt;/a&gt; [&lt;a href="https://crates.io/crates/iocraft"&gt;iocraft&lt;/a&gt;] - A crate for beautiful, artisanally crafted CLIs, TUIs, and text-based IO. &lt;a href="https://github.com/ccbrown/iocraft/actions"&gt;&lt;img src="https://github.com/ccbrown/iocraft/actions/workflows/commit.yaml/badge.svg?branch=main" alt="Build status" /&gt;&lt;/a&gt; &lt;a href="https://docs.rs/iocraft/"&gt;&lt;img src="https://img.shields.io/docsrs/iocraft" alt="docs.rs" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/gyscos/Cursive"&gt;gyscos/Cursive&lt;/a&gt; [&lt;a href="https://crates.io/crates/cursive"&gt;cursive&lt;/a&gt;] - build rich TUI applications&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ivanceras/titik"&gt;ivanceras/titik&lt;/a&gt; - a crossplatform TUI widget library with the goal of providing interactive widgets&lt;/li&gt; 
   &lt;li&gt;ncurses 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/ihalila/pancurses"&gt;ihalila/pancurses&lt;/a&gt; [&lt;a href="https://crates.io/crates/pancurses"&gt;pancurses&lt;/a&gt;] - curses library, supports linux and windows&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://github.com/jeaye/ncurses-rs"&gt;jeaye/ncurses-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/ncurses"&gt;ncurses&lt;/a&gt;] - &lt;a href="https://www.gnu.org/software/ncurses/"&gt;ncurses&lt;/a&gt; bindings&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ogham/rust-term-grid"&gt;ogham/rust-term-grid&lt;/a&gt; [&lt;a href="https://crates.io/crates/term_grid"&gt;term_grid&lt;/a&gt;] - Library for putting things in a grid&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ratatui/ratatui"&gt;ratatui-org/ratatui&lt;/a&gt; [&lt;a href="https://crates.io/crates/ratatui"&gt;ratatui&lt;/a&gt;] - Library that's all about cooking up terminal user interfaces (TUIs)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/redox-os/termion"&gt;redox-os/termion&lt;/a&gt; [&lt;a href="https://crates.io/crates/termion"&gt;termion&lt;/a&gt;] - bindless library for controlling terminals/TTY&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/ruterm"&gt;ruterm&lt;/a&gt; - tiny &amp;amp; simple library for working with TTY&lt;/li&gt; 
   &lt;li&gt;Termbox 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/gchp/rustbox"&gt;gchp/rustbox&lt;/a&gt; [&lt;a href="https://crates.io/crates/rustbox"&gt;rustbox&lt;/a&gt;] - bindings to &lt;a href="https://github.com/nsf/termbox"&gt;Termbox&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/crossterm-rs/crossterm"&gt;TimonPost/crossterm&lt;/a&gt; [&lt;a href="https://crates.io/crates/crossterm"&gt;crossterm&lt;/a&gt;] - crossplatform terminal library&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Compression&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://7-zip.org/7z.html"&gt;7z&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[&lt;a href="https://crates.io/crates/sevenz-rust"&gt;sevenz-rust&lt;/a&gt;] - A 7z decompressor/compressor written in pure rust.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://opensource.googleblog.com/2015/09/introducing-brotli-new-compression.html"&gt;Brotli&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/dropbox/rust-brotli"&gt;dropbox/rust-brotli&lt;/a&gt; - Brotli decompressor that optionally avoids the stdlib&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ende76/brotli-rs"&gt;ende76/brotli-rs&lt;/a&gt; - implementation of Brotli compression&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;bzip2 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/trifectatechfoundation/bzip2-rs"&gt;trifectatechfoundation/bzip2-rs&lt;/a&gt; - &lt;a href="https://www.sourceware.org/bzip2/"&gt;libbz2&lt;/a&gt; bindings&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;gzip 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/zopfli-rs/zopfli"&gt;zopfli&lt;/a&gt; [&lt;a href="https://crates.io/crates/zopfli"&gt;zopfli&lt;/a&gt;] - implementation of the Zopfli compression algorithm for higher quality deflate or zlib compression&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;gzp 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/sstadick/gzp/"&gt;sstadick/gzp&lt;/a&gt; - multi-threaded encoding and decoding of deflate formats and snappy&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;miniz 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rust-lang/flate2-rs"&gt;rust-lang/flate2-rs&lt;/a&gt; - &lt;a href="https://code.google.com/archive/p/miniz"&gt;miniz&lt;/a&gt; bindings &lt;a href="https://github.com/rust-lang/flate2-rs/actions"&gt;&lt;img src="https://github.com/rust-lang/flate2-rs/workflows/CI/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/roquess/paxit"&gt;paxit&lt;/a&gt; [&lt;a href="https://crates.io/crates/paxit"&gt;paxit&lt;/a&gt;] - Flexible library for compressing and decompressing files using various algorithms (zip, tar, gzip, xz, zst, etc.) with modular design for easy extension&lt;/li&gt; 
 &lt;li&gt;tar 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/alexcrichton/tar-rs"&gt;alexcrichton/tar-rs&lt;/a&gt; - tar archive reading/writing&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;zip 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/zip-rs/zip2"&gt;zip-rs/zip2&lt;/a&gt; [&lt;a href="https://crates.io/crates/zip"&gt;zip&lt;/a&gt;] - read and write ZIP archives&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;zstd 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/gyscos/zstd-rs"&gt;gyscos/zstd-rs&lt;/a&gt; - rust binding for the zstd compression library&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Computation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/argmin-rs/argmin"&gt;argmin-rs/argmin&lt;/a&gt; [&lt;a href="https://crates.io/crates/argmin"&gt;argmin&lt;/a&gt;] - Optimization library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Basic_Linear_Algebra_Subprograms"&gt;BLAS&lt;/a&gt; [&lt;a href="https://crates.io/keywords/blas"&gt;blas&lt;/a&gt;] 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mikkyang/rust-blas"&gt;mikkyang/rust-blas&lt;/a&gt; - BLAS bindings&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/calebwin/emu"&gt;calebwin/emu&lt;/a&gt; - A language for GPGPU numerical computing&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dimforge/nalgebra"&gt;dimforge/nalgebra&lt;/a&gt; - low-dimensional linear algebra library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sarah-quinones/faer-rs"&gt;faer-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/faer"&gt;faer&lt;/a&gt;] - Linear algebra foundation for Rust&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neogenie/fastnum"&gt;fastnum&lt;/a&gt; &lt;a href="https://crates.io/crates/fastnum"&gt;fastnum&lt;/a&gt; - Fast exact precision decimal numbers implemented in pure Rust. Suitable for financial, crypto and any other fixed-precision calculations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.gnu.org/software/gsl/"&gt;GSL&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GuillaumeGomez/rust-GSL"&gt;GuillaumeGomez/rust-GSL&lt;/a&gt; - GSL bindings&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/LAPACK"&gt;LAPACK&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/blas-lapack-rs/lapack"&gt;stainless-steel/lapack&lt;/a&gt; - LAPACK bindings&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Parallel 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/arrayfire/arrayfire-rust"&gt;arrayfire/arrayfire-rust&lt;/a&gt; - &lt;a href="https://github.com/arrayfire"&gt;Arrayfire&lt;/a&gt; bindings&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/autumnai/collenchyma"&gt;autumnai/collenchyma&lt;/a&gt; - An extensible, pluggable, backend-agnostic framework for parallel, high-performance computations on CUDA, OpenCL and common host CPU.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/luqmana/rust-opencl"&gt;luqmana/rust-opencl&lt;/a&gt; - &lt;a href="https://www.khronos.org/opencl/"&gt;OpenCL&lt;/a&gt; bindings&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Science 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Axect/Peroxide"&gt;Axect/Peroxide&lt;/a&gt; - Rust numeric library containing linear algebra, numerical analysis, statistics and machine learning tools in pure rust&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/cpmech/russell"&gt;cpmech/russell&lt;/a&gt; - Rust Scientific Library for numerical mathematics, ordinary differential equations, special math functions, high-performance (sparse) linear algebra&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Ryan-D-Gast/differential-equations"&gt;Ryan-D-Gast/differential-equations&lt;/a&gt; - A high-performance library for numerically solving differential equations&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Statrs 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/statrs-dev/statrs"&gt;statrs-dev/statrs&lt;/a&gt; - Robust statistical computation library&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Concurrency&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/crossbeam-rs/crossbeam"&gt;crossbeam-rs/crossbeam&lt;/a&gt; - Support for parallelism and low-level concurrency&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orium/archery"&gt;orium/archery&lt;/a&gt; [&lt;a href="https://crates.io/crates/archery"&gt;archery&lt;/a&gt;] - Library to abstract from &lt;code&gt;Rc&lt;/code&gt;/&lt;code&gt;Arc&lt;/code&gt; pointer types. &lt;a href="https://github.com/orium/archery/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/orium/archery/workflows/CI/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/orx-parallel"&gt;orx-parallel&lt;/a&gt; - High performance, configurable and expressive parallel computation library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rayon-rs/rayon"&gt;Rayon&lt;/a&gt; - A data parallelism library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rustcc/coroutine-rs"&gt;rustcc/coroutine-rs&lt;/a&gt; - Coroutine Library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zonyitoo/coio-rs"&gt;zonyitoo/coio-rs&lt;/a&gt; - Coroutine I/O&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andoriyu/uclicious"&gt;andoriyu/uclicious&lt;/a&gt; [&lt;a href="https://crates.io/crates/uclicious"&gt;uclicious&lt;/a&gt;] - &lt;a href="https://github.com/vstakhov/libucl"&gt;libUCL&lt;/a&gt; based feature-rich configuration library. &lt;a href="https://app.circleci.com/pipelines/github/vstakhov/libucl"&gt;&lt;img src="https://circleci.com/gh/vstakhov/libucl.svg?style=svg" alt="CircleCI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Kixunil/configure_me"&gt;Kixunil/configure_me&lt;/a&gt; [&lt;a href="https://crates.io/crates/configure_me"&gt;configure_me&lt;/a&gt;] - library for processing application configuration easily&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-cli/config-rs"&gt;rust-cli/config-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/config"&gt;config&lt;/a&gt;] - Layered configuration system (with strong support for 12-factor applications).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SergioBenitez/Figment"&gt;SergioBenitez/Figment&lt;/a&gt; [&lt;a href="https://crates.io/crates/figment"&gt;figment&lt;/a&gt;] - A configuration library so con-free, it's unreal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/softprops/envy"&gt;softprops/envy&lt;/a&gt; - deserialize env vars into typesafe structs &lt;a href="https://github.com/softprops/envy/actions/workflows/main.yml"&gt;&lt;img src="https://github.com/softprops/envy/actions/workflows/main.yml/badge.svg?sanitize=true" alt="Main" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Cryptography&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://crates.io/keywords/crypto"&gt;crypto&lt;/a&gt;, &lt;a href="https://crates.io/keywords/cryptography"&gt;cryptography&lt;/a&gt;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arkworks-rs/circom-compat"&gt;arkworks-rs/circom-compat&lt;/a&gt; - Arkworks bindings to Circom's R1CS, for Groth16 Proof and Witness generation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/briansmith/ring"&gt;briansmith/ring&lt;/a&gt; - Safe, fast, small crypto using Rust and BoringSSL's cryptography primitives.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/briansmith/webpki"&gt;briansmith/webpki&lt;/a&gt; - Web PKI TLS X.509 certificate validation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/conradkleinespel/rooster"&gt;conradkleinespel/rooster&lt;/a&gt; [&lt;a href="https://crates.io/crates/rooster"&gt;rooster&lt;/a&gt;] - Simple password manager to use in your terminal&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cossacklabs/themis"&gt;cossacklabs/themis&lt;/a&gt; [&lt;a href="https://crates.io/crates/themis"&gt;themis&lt;/a&gt;] - a high-level cryptographic library for solving typical data security tasks, best fit for multi-platform apps. &lt;a href="https://app.circleci.com/pipelines/github/cossacklabs/themis"&gt;&lt;img src="https://circleci.com/gh/cossacklabs/themis/tree/master.svg?style=shield" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DaGenix/rust-crypto"&gt;DaGenix/rust-crypto&lt;/a&gt; - cryptographic algorithms&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dalek-cryptography/curve25519-dalek"&gt;dalek-cryptography/curve25519-dalek&lt;/a&gt; - Curve25519 operations&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dalek-cryptography/ed25519-dalek"&gt;dalek-cryptography/ed25519-dalek&lt;/a&gt; - Ed25519 digital signatures&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dalek-cryptography/x25519-dalek"&gt;dalek-cryptography/x25519-dalek&lt;/a&gt; - X25519 key exchange&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/debris/tiny-keccak"&gt;debris/tiny-keccak&lt;/a&gt; - Keccak family (SHA3)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dusk-network/bls12_381"&gt;dusk-network/bls12-381&lt;/a&gt; - A Rust-native BLS12-381 with enhancements for zk performance: optimized multi-scalar multiplication, custom hashing, and serde support—ideal for privacy-focused protocols and zero-knowledge applications. &lt;img src="https://github.com/dusk-network/bls12_381/workflows/Continuous%20integration/badge.svg?sanitize=true" alt="Build Status" /&gt; [&lt;a href="https://crates.io/crates/dusk-bls12_381"&gt;dusk-bls12_381&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dusk-network/plonk/"&gt;dusk-network/plonk&lt;/a&gt; - A high-performance, Rust-native implementation of the PLONK zk-SNARK over BLS12-381, optimized with custom gates and KZG10 polynomial commitment for efficient zero-knowledge proofs. &lt;img src="https://github.com/dusk-network/plonk/workflows/Continuous%20integration/badge.svg?sanitize=true" alt="Build Status" /&gt; [&lt;a href="https://crates.io/crates/dusk-plonk"&gt;PLONK&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dusk-network/Poseidon252"&gt;dusk-network/poseidon252&lt;/a&gt; - A Rust-native Poseidon hash over BLS12-381, Poseidon252 is built for zk-SNARK efficiency, ideal for privacy-focused protocols and zero-knowledge applications. &lt;img src="https://github.com/dusk-network/Poseidon252/workflows/Continuous%20integration/badge.svg?sanitize=true" alt="Build Status" /&gt; [&lt;a href="https://crates.io/crates/dusk-poseidon"&gt;Poseidon&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/exonum/exonum"&gt;exonum/exonum&lt;/a&gt; [&lt;a href="https://crates.io/crates/exonum"&gt;exonum&lt;/a&gt;] - extensible framework for blockchain projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/facebook/opaque-ke"&gt;facebook/opaque-ke&lt;/a&gt; - Implementation of the recent &lt;a href="https://datatracker.ietf.org/doc/draft-krawczyk-cfrg-opaque/"&gt;OPAQUE&lt;/a&gt; password-authenticated key exchange. &lt;a href="https://github.com/facebook/opaque-ke"&gt;&lt;img src="https://github.com/facebook/opaque-ke/workflows/Rust%20CI/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iddm/randomorg"&gt;iddm/randomorg&lt;/a&gt; - A random.org client library. &lt;a href="https://crates.io/crates/randomorg"&gt;&lt;img src="https://img.shields.io/crates/v/randomorg.svg?sanitize=true" alt="Crates badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/klutzy/suruga"&gt;klutzy/suruga&lt;/a&gt; - Implementation of &lt;a href="https://datatracker.ietf.org/doc/html/rfc5246"&gt;TLS 1.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kn0sys/ecc-rs"&gt;kn0sys/ecc-rs&lt;/a&gt; - Intuitive library for elliptic curve cryptography tutorials &lt;a href="https://crates.io/crates/kn0syseccrs"&gt;&lt;img src="https://img.shields.io/crates/v/kn0syseccrs" alt="Crates.io Version" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kornelski/rust-security-framework"&gt;kornelski/rust-security-framework&lt;/a&gt; - Bindings for Security Framework (OSX native)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/libOctavo/octavo"&gt;libOctavo/octavo&lt;/a&gt; - Modular hash and crypto library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orion-rs/orion"&gt;orion-rs/orion&lt;/a&gt; - This library aims to provide easy and usable crypto. 'Usable' meaning exposing high-level API's that are easy to use and hard to misuse. &lt;a href="https://github.com/orion-rs/orion/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/orion-rs/orion/actions/workflows/test.yml/badge.svg?branch=master" alt="Tests" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/racum/rust-djangohashers"&gt;racum/rust-djangohashers&lt;/a&gt; [&lt;a href="https://crates.io/crates/djangohashers"&gt;djangohashers&lt;/a&gt;] - Port of the password primitives used in the Django Project. It doesn't require Django, only hashes and validates passwords according to its style.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RustCrypto/hashes"&gt;RustCrypto/hashes&lt;/a&gt; - Collection of cryptographic hash functions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rustls/rustls"&gt;rustls/rustls&lt;/a&gt; - Implementation of TLS&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sfackler/rust-native-tls"&gt;sfackler/rust-native-tls&lt;/a&gt; - Bindings for native TLS libraries&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sfackler/rust-openssl"&gt;sfackler/rust-openssl&lt;/a&gt; - &lt;a href="https://www.openssl.org/"&gt;OpenSSL&lt;/a&gt; bindings&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sorairolake/abcrypt"&gt;sorairolake/abcrypt&lt;/a&gt; [&lt;a href="https://crates.io/crates/abcrypt"&gt;abcrypt&lt;/a&gt;] - A simple, modern and secure file encryption library. &lt;a href="https://github.com/sorairolake/abcrypt/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/sorairolake/abcrypt/workflows/CI/badge.svg?branch=develop" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sorairolake/scryptenc-rs"&gt;sorairolake/scryptenc-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/scryptenc"&gt;scryptenc&lt;/a&gt;] - An implementation of the scrypt encrypted data format. &lt;a href="https://github.com/sorairolake/scryptenc-rs/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/sorairolake/scryptenc-rs/workflows/CI/badge.svg?branch=develop" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/w3f/schnorrkel"&gt;w3f/schnorrkel&lt;/a&gt; - Schnorr VRFs and signatures on the Ristretto group&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Data processing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amv-dev/yata"&gt;amv-dev/yata&lt;/a&gt; - high performance technical analysis library &lt;a href="https://github.com/amv-dev/yata/actions?query=workflow%3ARust"&gt;&lt;img src="https://img.shields.io/github/workflow/status/amv-dev/yata/Rust?branch=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-ndarray/ndarray"&gt;bluss/ndarray&lt;/a&gt; - N-dimensional array with array views, multidimensional slicing, and efficient operations&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cocoindex-io/cocoindex"&gt;cocoindex&lt;/a&gt; - ETL framework to build fresh index&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apache/datafusion"&gt;datafusion&lt;/a&gt; - DataFusion is a very fast, extensible query engine for building high-quality data-centric systems in Rust, using the Apache Arrow in-memory format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GoPlasmatic/datalogic-rs"&gt;GoPlasmatic/datalogic-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/datalogic-rs"&gt;datalogic-rs&lt;/a&gt;] - High-performance, type-safe JSONLogic evaluation engine in Rust, ideal for business rules and dynamic filtering.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kernelmachine/utah"&gt;kernelmachine/utah&lt;/a&gt; - Dataframe structure and operations&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paradedb/paradedb/tree/dev/pg_analytics"&gt;pg_analytics&lt;/a&gt; - PostgreSQL extension that accelerates analytical query processing inside Postgres to a performance level comparable to dedicated OLAP databases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paradedb/paradedb/tree/dev/pg_lakehouse"&gt;pg_lakehouse&lt;/a&gt; - PostgreSQL extension that transforms Postgres into an analytical query engine over object stores like AWS S3/GCS and table formats like Delta Lake/Iceberg.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pola-rs/polars"&gt;pola-rs/polars&lt;/a&gt; - Fast feature complete DataFrame library &lt;a href="https://github.com/pola-rs/polars/actions"&gt;&lt;img src="https://github.com/pola-rs/polars/actions/workflows/lint-rust.yml/badge.svg?sanitize=true" alt="Lint Rust" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/weld-project/weld"&gt;weld-project/weld&lt;/a&gt; - High-performance runtime for data analytics applications&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Data streaming&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arkflow-rs/arkflow"&gt;arkflow-rs/arkflow&lt;/a&gt; - High-performance Rust stream processing engine &lt;a href="https://github.com/arkflow-rs/arkflow/actions"&gt;&lt;img src="https://github.com/arkflow-rs/arkflow/actions/workflows/rust.yml/badge.svg?branch=main" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ArroyoSystems/arroyo"&gt;ArroyoSystems/arroyo&lt;/a&gt; - High-performance real-time analytics in Rust and SQL &lt;a href="https://github.com/ArroyoSystems/arroyo/actions"&gt;&lt;img src="https://github.com/ArroyoSystems/arroyo/actions/workflows/ci.yml/badge.svg?branch=master" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apache/iggy"&gt;iggy&lt;/a&gt; [&lt;a href="https://crates.io/crates/iggy"&gt;iggy&lt;/a&gt;] - Persistent message streaming platform, supporting QUIC, TCP and HTTP transport protocols &lt;a href="https://github.com/apache/iggy/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/apache/iggy/actions/workflows/test.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/infinyon/fluvio"&gt;infinyon/fluvio&lt;/a&gt; - Programmable data streaming platform &lt;a href="https://github.com/infinyon/fluvio/actions"&gt;&lt;img src="https://github.com/infinyon/fluvio/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/graphform/swim-rust"&gt;swim-rust&lt;/a&gt; [&lt;a href="https://crates.io/crates/swimos"&gt;swim-rust&lt;/a&gt;] - Self-contained distributed software platform for building stateful, massively real-time streaming applications.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Data structures&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ashvardanian/SimSIMD"&gt;ashvardanian/simsimd&lt;/a&gt; - SIMD-accelerated vector distances and similarity functions for x86 AVX2 &amp;amp; AVX-512, and Arm NEON &lt;a href="https://crates.io/crates/simsimd"&gt;&lt;img src="https://img.shields.io/crates/v/simsimd.svg?sanitize=true" alt="crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/becheran/grid"&gt;becheran/grid&lt;/a&gt; [&lt;a href="https://crates.io/crates/grid"&gt;grid&lt;/a&gt;] - Provide a two dimensional data structure that is easy to use and fast. &lt;a href="https://github.com/becheran/grid/actions"&gt;&lt;img src="https://github.com/becheran/grid/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="build status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/billyevans/tst"&gt;billyevans/tst&lt;/a&gt; [&lt;a href="https://crates.io/crates/tst"&gt;tst&lt;/a&gt;] - Ternary search tree collection&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/contain-rs"&gt;contain-rs&lt;/a&gt; - Extension of Rust's std::collections&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/danielpclark/array_tool"&gt;danielpclark/array_tool&lt;/a&gt; - Array helpers. Some of the most common methods you would use on Arrays made available on Vectors. Polymorphic implementations for handling most of your use cases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fizyk20/generic-array"&gt;fizyk20/generic-array&lt;/a&gt; - a hack to allow for arrays sized by typenums&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/garro95/priority-queue"&gt;garro95/priority-queue&lt;/a&gt;[&lt;a href="https://crates.io/crates/priority-queue"&gt;priority-queue&lt;/a&gt;] - A priority queue that implements priority changes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/greyblake/nutype"&gt;greyblake/nutype&lt;/a&gt; [&lt;a href="https://crates.io/crates/nutype"&gt;nutype&lt;/a&gt;] - define newtype structures with validation constraints. &lt;a href="https://github.com/greyblake/nutype/actions"&gt;&lt;img src="https://github.com/greyblake/nutype/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mrhooray/kdtree-rs"&gt;mrhooray/kdtree-rs&lt;/a&gt; - K-dimensional tree for fast geospatial indexing and nearest neighbors lookup&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orium/rpds"&gt;orium/rpds&lt;/a&gt; [&lt;a href="https://crates.io/crates/rpds"&gt;rpds&lt;/a&gt;] - Persistent data structures. &lt;a href="https://github.com/orium/rpds/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/orium/rpds/workflows/CI/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RoaringBitmap/roaring-rs"&gt;RoaringBitmap/roaring-rs&lt;/a&gt; - Roaring Bitmaps&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-itertools/itertools"&gt;rust-itertools/itertools&lt;/a&gt; - Extra iterator adaptors, functions and macros&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tnballo/scapegoat"&gt;tnballo/scapegoat&lt;/a&gt; [&lt;a href="https://crates.io/crates/scapegoat"&gt;scapegoat&lt;/a&gt;] - Safe, fallible, stack-only alternative to &lt;code&gt;BTreeSet&lt;/code&gt; and &lt;code&gt;BTreeMap&lt;/code&gt;. &lt;a href="https://github.com/tnballo/scapegoat/actions"&gt;&lt;img src="https://github.com/tnballo/scapegoat/workflows/test/badge.svg?branch=master" alt="GitHub Actions" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeberg.org/xfix/enum-map"&gt;xfix/enum-map&lt;/a&gt; [&lt;a href="https://crates.io/crates/enum-map"&gt;enum-map&lt;/a&gt;] - An optimized map implementation for enums using an array to store values.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yamafaktory/hypergraph"&gt;yamafaktory/hypergraph&lt;/a&gt; [&lt;a href="https://crates.io/crates/hypergraph"&gt;hypergraph&lt;/a&gt;] - Hypergraph is a data structure library to generate directed hypergraphs. &lt;a href="https://github.com/yamafaktory/hypergraph/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/yamafaktory/hypergraph/actions/workflows/ci.yml/badge.svg?branch=main" alt="ci" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Data visualization&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blitzar-tech/egui_graphs"&gt;blitzar-tech/egui_graphs&lt;/a&gt; [&lt;a href="https://crates.io/crates/egui_graphs"&gt;egui_graphs&lt;/a&gt;] - Interactive graph visualization widget powered by egui and petgraph. &lt;a href="https://crates.io/crates/egui_graphs"&gt;&lt;img src="https://img.shields.io/crates/v/egui_graphs" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://docs.rs/egui_graphs"&gt;&lt;img src="https://img.shields.io/docsrs/egui_graphs" alt="docs.rs" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/djduque/pgfplots"&gt;djduque/pgfplots&lt;/a&gt; [&lt;a href="https://crates.io/crates/pgfplots"&gt;pgfplots&lt;/a&gt;] - Library to generate publication-quality figures. &lt;a href="https://github.com/DJDuque/pgfplots/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/DJDuque/pgfplots/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mazznoer/colorgrad-rs"&gt;mazznoer/colorgrad-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/colorgrad"&gt;colorgrad&lt;/a&gt;] - Color scales library for data visualization, charts, games, maps, generative art and others.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/milliams/plotlib"&gt;milliams/plotlib&lt;/a&gt; - Data plotting library for Rust&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/plotly/plotly.rs"&gt;plotly&lt;/a&gt; - Plotly for Rust&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cpmech/plotpy"&gt;plotpy&lt;/a&gt; [&lt;a href="https://crates.io/crates/plotpy"&gt;plotpy&lt;/a&gt;] - Rust plotting library using Python (Matplotlib)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/plotters-rs/plotters"&gt;plotters&lt;/a&gt; - &lt;a href="https://github.com/plotters-rs/plotters/actions"&gt;&lt;img src="https://github.com/plotters-rs/plotters/workflows/CI/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rerun-io/rerun"&gt;rerun&lt;/a&gt; - [&lt;a href="https://crates.io/crates/rerun"&gt;rerun&lt;/a&gt;] - An SDK for logging computer vision and robotics data (tensors, point clouds, etc) paired with a visualizer for exploring that data over time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/saresend/Gust"&gt;saresend/gust&lt;/a&gt; - A small charting/visualization tool and partial vega implementation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Database&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://crates.io/keywords/database"&gt;database&lt;/a&gt;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;NoSQL [&lt;a href="https://crates.io/keywords/nosql"&gt;nosql&lt;/a&gt;]&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://arangodb.com"&gt;ArangoDB&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://gitlab.com/qonfucius/aragog"&gt;Aragog&lt;/a&gt; [&lt;a href="https://crates.io/crates/aragog"&gt;aragog&lt;/a&gt;] - A Lightweight ArangoDB Object document, relational and graph mapper &lt;a href="https://gitlab.com/qonfucius/aragog/-/commits/master"&gt;&lt;img src="https://gitlab.com/qonfucius/aragog/badges/master/pipeline.svg?sanitize=true" alt="pipeline status" /&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://github.com/fMeow/arangors"&gt;Arangors&lt;/a&gt; [&lt;a href="https://crates.io/crates/arangors"&gt;arangors&lt;/a&gt;] - An ArangoDB driver&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://cassandra.apache.org/_/index.html"&gt;Cassandra&lt;/a&gt; [&lt;a href="https://crates.io/keywords/cassandra"&gt;cassandra&lt;/a&gt;, &lt;a href="https://crates.io/keywords/cql"&gt;cql&lt;/a&gt;] 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/AlexPikalov/cdrs"&gt;AlexPikalov/cdrs&lt;/a&gt; [&lt;a href="https://crates.io/crates/cdrs"&gt;cdrs&lt;/a&gt;] - native client&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://github.com/cassandra-rs/cassandra-rs"&gt;cassandra-rs&lt;/a&gt; - bindings to the DataStax C/C++&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://github.com/krojew/cdrs-tokio"&gt;krojew/cdrs-tokio&lt;/a&gt; - High-level async Cassandra client written in 100% Rust. &lt;a href="https://github.com/krojew/cdrs-tokio/actions"&gt;&lt;img src="https://github.com/krojew/cdrs-tokio/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;[&lt;a href="https://crates.io/crates/cassandra-protocol"&gt;cassandra-protocol&lt;/a&gt;] - Cassandra protocol implementation.&lt;/li&gt; 
       &lt;li&gt;[&lt;a href="https://crates.io/crates/cdrs-tokio"&gt;cdrs-tokio&lt;/a&gt;] - production-ready async Apache Cassandra driverclient&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;CouchDB [&lt;a href="https://crates.io/keywords/couchdb"&gt;couchdb&lt;/a&gt;] 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/chill-rs/chill"&gt;chill-rs/chill&lt;/a&gt; [&lt;a href="https://crates.io/crates/chill"&gt;couchdb&lt;/a&gt;] - Client for the CouchDB REST API&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://aws.amazon.com/dynamodb/"&gt;DynamoDB&lt;/a&gt; [&lt;a href="https://crates.io/keywords/dynamodb"&gt;dynamodb&lt;/a&gt;] 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/softprops/dynomite"&gt;softprops/dynomite&lt;/a&gt; - A library for strongly-typed and convenient interaction with &lt;code&gt;rusoto_dynamodb&lt;/code&gt; &lt;a href="https://github.com/softprops/dynomite/actions"&gt;&lt;img src="https://github.com/softprops/dynomite/workflows/Main/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Elasticsearch [&lt;a href="https://crates.io/keywords/elasticsearch"&gt;elasticsearch&lt;/a&gt;] 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/benashford/rs-es"&gt;benashford/rs-es&lt;/a&gt; [&lt;a href="https://crates.io/crates/rs-es"&gt;rs-es&lt;/a&gt;] - Client for the &lt;a href="https://www.elastic.co/"&gt;Elastic&lt;/a&gt; REST API&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://github.com/elastic-rs/elastic"&gt;elastic-rs/elastic&lt;/a&gt; [&lt;a href="https://crates.io/crates/elastic"&gt;elastic&lt;/a&gt;] - elastic is an efficient, modular API client for Elasticsearch written in Rust &lt;a href="https://ci.appveyor.com/project/KodrAus/elastic"&gt;&lt;img src="https://ci.appveyor.com/api/projects/status/csa78tcumdpnbur2?svg=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;etcd 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/jimmycuadra/rust-etcd"&gt;jimmycuadra/rust-etcd&lt;/a&gt; [&lt;a href="https://crates.io/crates/etcd"&gt;etcd&lt;/a&gt;] - A client library for CoreOS's etcd.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.influxdata.com/"&gt;InfluxDB&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/driftluo/InfluxDBClient-rs"&gt;driftluo/InfluxDBClient-rs&lt;/a&gt; - Synchronization interface&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;LevelDB 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/skade/leveldb"&gt;skade/leveldb&lt;/a&gt; - &lt;a href="https://github.com/google/leveldb"&gt;LevelDB&lt;/a&gt; bindings&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;LMDB [&lt;a href="https://crates.io/keywords/lmdb"&gt;lmdb&lt;/a&gt;] 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/meilisearch/heed"&gt;meilisearch/heed&lt;/a&gt; [&lt;a href="https://crates.io/crates/heed"&gt;heed&lt;/a&gt;] - Another &lt;a href="https://www.symas.com/symas-embedded-database-lmdb"&gt;LMDB&lt;/a&gt; binding&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://github.com/vhbit/lmdb-rs"&gt;vhbit/lmdb-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/lmdb-rs"&gt;lmdb-rs&lt;/a&gt;] - &lt;a href="https://www.symas.com/symas-embedded-database-lmdb"&gt;LMDB&lt;/a&gt; bindings&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;MongoDB [&lt;a href="https://crates.io/keywords/mongodb"&gt;mongodb&lt;/a&gt;] 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/mongodb/mongo-rust-driver"&gt;mongodb/mongo-rust-driver&lt;/a&gt; [&lt;a href="https://crates.io/crates/mongodb"&gt;mongodb&lt;/a&gt;] - &lt;a href="https://www.mongodb.com/"&gt;MongoDB&lt;/a&gt; bindings&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://pythonhosted.org/pickleDB/"&gt;PickleDB&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/seladb/pickledb-rs"&gt;seladb/pickledb-rs&lt;/a&gt; - a lightweight and simple key-value store, heavily inspired by Python's PickleDB.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.polodb.org/"&gt;PoloDB&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/PoloDB/PoloDB"&gt;PoloDB&lt;/a&gt; - An embedded JSON-based database has API similar to MongoDB. &lt;img src="https://img.shields.io/github/actions/workflow/status/PoloDB/PoloDB/rust.yml" alt="GitHub Workflow Status" /&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.redb.org/"&gt;Redb&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/cberner/redb"&gt;Redb&lt;/a&gt; - An embedded key-value database. It provides a similar interface to other embedded key-value stores such as rocksdb and lmdb. &lt;img src="https://github.com/cberner/redb/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="GitHub Workflow Status" /&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Redis [&lt;a href="https://crates.io/keywords/redis"&gt;redis&lt;/a&gt;] 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/aembke/fred.rs"&gt;aembke/fred&lt;/a&gt; [&lt;a href="https://crates.io/crates/fred"&gt;fred&lt;/a&gt;] - A high level async &lt;a href="https://redis.io/"&gt;Redis&lt;/a&gt; client for Rust with Tokio. &lt;a href="https://raw.githubusercontent.com/rust-unofficial/awesome-rust/main/%5Bhttps://circleci.com/gh/aembke/fred.rs/tree/main%5D(https://app.circleci.com/pipelines/github/aembke/fred.rs?branch=main)"&gt;&lt;img src="https://circleci.com/gh/aembke/fred.rs/tree/main.svg?style=svg" alt="CircleCI" /&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://github.com/redis-rs/redis-rs"&gt;redis-rs&lt;/a&gt; - &lt;a href="https://redis.io/"&gt;Redis&lt;/a&gt; library &lt;a href="https://github.com/redis-rs/redis-rs/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/redis-rs/redis-rs/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="Rust" /&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://rocksdb.org/"&gt;RocksDB&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/rust-rocksdb/rust-rocksdb"&gt;rust-rocksdb/rust-rocksdb&lt;/a&gt; - RocksDB bindings &lt;a href="https://github.com/rust-rocksdb/rust-rocksdb/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/rust-rocksdb/rust-rocksdb/actions/workflows/rust.yml/badge.svg?branch=master" alt="RocksDB CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://surrealdb.com/"&gt;SurrealDB&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/surrealdb/surrealdb"&gt;surrealdb/surrealdb&lt;/a&gt; - SurrealDB embedded document-graph database&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/symisc/unqlite"&gt;UnQLite&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/zitsen/unqlite.rs"&gt;zitsen/unqlite.rs&lt;/a&gt; - UnQLite bindings&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://zookeeper.apache.org/"&gt;ZooKeeper&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/bonifaido/rust-zookeeper"&gt;bonifaido/rust-zookeeper&lt;/a&gt; [&lt;a href="https://crates.io/crates/zookeeper"&gt;zookeeper&lt;/a&gt;] - A client library for Apache ZooKeeper.&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://github.com/krojew/rust-zookeeper"&gt;krojew/rust-zookeeper&lt;/a&gt; [&lt;a href="https://crates.io/crates/zookeeper-async"&gt;zookeeper-async&lt;/a&gt;] - Async Zookeeper client, based on tokio. &lt;img src="https://github.com/krojew/rust-zookeeper/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="build status" /&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;OGM [&lt;a href="https://crates.io/keywords/ogm"&gt;ogm&lt;/a&gt;]&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://gitlab.com/qonfucius/aragog"&gt;Aragog&lt;/a&gt; [&lt;a href="https://crates.io/crates/aragog"&gt;aragog&lt;/a&gt;] - A Lightweight ArangoDB Object document, relational and graph mapper &lt;a href="https://gitlab.com/qonfucius/aragog/-/commits/master"&gt;&lt;img src="https://gitlab.com/qonfucius/aragog/badges/master/pipeline.svg?sanitize=true" alt="pipeline status" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ORM [&lt;a href="https://crates.io/keywords/orm"&gt;orm&lt;/a&gt;]&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/diesel-rs/diesel"&gt;diesel-rs/diesel&lt;/a&gt; - an ORM and Query builder&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ivanceras/rustorm"&gt;ivanceras/rustorm&lt;/a&gt; - an ORM&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/njord-rs/njord"&gt;njord&lt;/a&gt; - ⛵ A versatile, feature-rich Rust ORM &lt;a href="https://github.com/njord-rs/njord/actions/workflows/core.yml"&gt;&lt;img src="https://github.com/njord-rs/njord/actions/workflows/core.yml/badge.svg?sanitize=true" alt="build status" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/crates/v/njord.svg?sanitize=true" alt="crates.io" /&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rbatis/rbatis"&gt;rbatis/rbatis&lt;/a&gt; - ORM Framework High Performance(JSON based)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SeaQL/sea-orm"&gt;SeaQL/sea-orm&lt;/a&gt; - 🐚 An async &amp;amp; dynamic ORM &lt;a href="https://crates.io/crates/sea-orm"&gt;&lt;img src="https://img.shields.io/crates/v/sea-orm.svg?sanitize=true" alt="crate" /&gt;&lt;/a&gt; &lt;a href="https://docs.rs/sea-orm"&gt;&lt;img src="https://img.shields.io/docsrs/sea-orm/latest" alt="docs" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SeaQL/sea-orm/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/SeaQL/sea-orm/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="build status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SeaQL/seaography"&gt;SeaQL/seaography&lt;/a&gt; - 🧭 GraphQL framework for SeaORM &lt;a href="https://crates.io/crates/seaography"&gt;&lt;img src="https://img.shields.io/crates/v/seaography.svg?sanitize=true" alt="crate" /&gt;&lt;/a&gt; &lt;a href="https://docs.rs/seaography"&gt;&lt;img src="https://img.shields.io/docsrs/seaography/latest" alt="docs" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SeaQL/seaography/actions/workflows/tests.yaml"&gt;&lt;img src="https://github.com/SeaQL/seaography/actions/workflows/tests.yaml/badge.svg?sanitize=true" alt="build status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/thegenius/taitan-orm"&gt;thegenius/taitan-orm&lt;/a&gt; - The State of Art ORM for Rust, Async &amp;amp; Compile Time Generation.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/sfackler/r2d2"&gt;sfackler/r2d2&lt;/a&gt; - generic connection pool&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;SQL [&lt;a href="https://crates.io/keywords/sql"&gt;sql&lt;/a&gt;]&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Generic 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/launchbadge/sqlx"&gt;launchbadge/sqlx&lt;/a&gt; - async PostgreSQL/MySQL/SQLite connection pool with strong typing support &lt;a href="https://github.com/launchbadge/sqlx"&gt;&lt;img src="https://img.shields.io/github/workflow/status/launchbadge/sqlx/Rust/master?style=flat-square" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://github.com/SeaQL/sea-query"&gt;SeaQL/sea-query&lt;/a&gt; - 🔱 A dynamic SQL query builder for MySQL, Postgres and SQLite &lt;a href="https://crates.io/crates/sea-query"&gt;&lt;img src="https://img.shields.io/crates/v/sea-query.svg?sanitize=true" alt="crate" /&gt;&lt;/a&gt; &lt;a href="https://docs.rs/sea-query"&gt;&lt;img src="https://img.shields.io/docsrs/sea-query/latest" alt="docs" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SeaQL/sea-query/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/SeaQL/sea-query/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="build status" /&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://github.com/SeaQL/sea-schema"&gt;SeaQL/sea-schema&lt;/a&gt; - 🌿 SQL schema definition and discovery &lt;a href="https://crates.io/crates/sea-schema"&gt;&lt;img src="https://img.shields.io/crates/v/sea-schema.svg?sanitize=true" alt="crate" /&gt;&lt;/a&gt; &lt;a href="https://docs.rs/sea-schema"&gt;&lt;img src="https://img.shields.io/docsrs/sea-schema/latest" alt="docs" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SeaQL/sea-schema/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/SeaQL/sea-schema/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="build status" /&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Microsoft SQL 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/prisma/tiberius"&gt;prisma/tiberius&lt;/a&gt; - &lt;a href="https://github.com/prisma/tiberius/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/prisma/tiberius/actions/workflows/test.yml/badge.svg?branch=master" alt="Cargo tests" /&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;MySql [&lt;a href="https://crates.io/keywords/mysql"&gt;mysql&lt;/a&gt;] 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/AgilData/mysql-proxy-rs"&gt;AgilData/mysql-proxy-rs&lt;/a&gt; - A MySQL Proxy &lt;a href="https://app.circleci.com/pipelines/github/AgilData/mysql-proxy-rs?branch=master"&gt;&lt;img src="https://circleci.com/gh/AgilData/mysql-proxy-rs/tree/master.svg?style=svg" alt="CircleCI" /&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://github.com/blackbeam/mysql_async"&gt;blackbeam/mysql_async&lt;/a&gt; [&lt;a href="https://crates.io/crates/mysql_async"&gt;mysql_async&lt;/a&gt;] - asynchronous Mysql driver based on Tokio. &lt;a href="https://app.circleci.com/pipelines/github/blackbeam/mysql_async?branch=master"&gt;&lt;img src="https://circleci.com/gh/blackbeam/mysql_async/tree/master.svg?style=shield" alt="CircleCI" /&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://github.com/blackbeam/rust-mysql-simple"&gt;blackbeam/rust-mysql-simple&lt;/a&gt; [&lt;a href="https://crates.io/crates/mysql"&gt;mysql&lt;/a&gt;] - A native MySql client&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Oracle 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/kubo/rust-oracle"&gt;kubo/rust-oracle&lt;/a&gt; [&lt;a href="https://crates.io/crates/oracle"&gt;oracle&lt;/a&gt;] - Oracle driver &lt;a href="https://github.com/kubo/rust-oracle/actions/workflows/run-tests.yml"&gt;&lt;img src="https://github.com/kubo/rust-oracle/actions/workflows/run-tests.yml/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;PostgreSql [&lt;a href="https://crates.io/keywords/postgres"&gt;postgres&lt;/a&gt;, &lt;a href="https://crates.io/keywords/postgresql"&gt;postgresql&lt;/a&gt;] 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/c410-f3r/wtx"&gt;c410-f3r/wtx&lt;/a&gt; - Fast implementation with a low set of external dependencies.&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://github.com/sfackler/rust-postgres"&gt;sfackler/rust-postgres&lt;/a&gt; [&lt;a href="https://crates.io/crates/postgres"&gt;postgres&lt;/a&gt;] - A native &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt; client&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Sqlite [&lt;a href="https://crates.io/keywords/sqlite"&gt;sqlite&lt;/a&gt;] 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://github.com/rusqlite/rusqlite"&gt;rusqlite&lt;/a&gt; - &lt;a href="https://sqlite.org/index.html"&gt;Sqlite3&lt;/a&gt; bindings&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://venndb.rs/"&gt;VennDB&lt;/a&gt; [&lt;a href="https://github.com/plabayo/venndb"&gt;venndb&lt;/a&gt;] - An append-only in-memory database in Rust for rows queried using bit (flag) columns.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Date and time&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://crates.io/keywords/date"&gt;date&lt;/a&gt;, &lt;a href="https://crates.io/keywords/time"&gt;time&lt;/a&gt;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arthurhenrique/rusti-cal"&gt;arthurhenrique/rusti-cal&lt;/a&gt; [&lt;a href="https://crates.io/crates/rusti-cal"&gt;rusti-cal&lt;/a&gt;] - A cal(1) clone lightning-fast ~ more than 9999 years ~ Written in Rust.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BurntSushi/jiff"&gt;burntSushi/jiff&lt;/a&gt; - A date-time library for Rust that encourages you to jump into the pit of success. &lt;a href="https://github.com/BurntSushi/jiff/actions"&gt;&lt;img src="https://github.com/BurntSushi/jiff/workflows/ci/badge.svg?sanitize=true" alt="Build status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chronotope/chrono"&gt;chronotope/chrono&lt;/a&gt; - Date and time library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Mnwa/ms"&gt;Mnwa/ms&lt;/a&gt; [&lt;a href="https://crates.io/crates/ms-converter"&gt;ms-converter&lt;/a&gt;] - it's a library for converting human-like times to milliseconds &lt;a href="https://github.com/Mnwa/ms/actions?query=workflow%3Abuild"&gt;&lt;img src="https://github.com/Mnwa/ms/workflows/build/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sorairolake/nt-time"&gt;sorairolake/nt-time&lt;/a&gt; [&lt;a href="https://crates.io/crates/nt-time"&gt;nt-time&lt;/a&gt;] - A Windows file time library. &lt;a href="https://github.com/sorairolake/nt-time/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/sorairolake/nt-time/workflows/CI/badge.svg?branch=develop" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/time-rs/time"&gt;time-rs/time&lt;/a&gt; - &lt;a href="https://github.com/time-rs/time/actions"&gt;&lt;img src="https://github.com/time-rs/time/workflows/Build/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Distributed systems&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Antimony 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/antimonyproject/antimony"&gt;antimonyproject/antimony&lt;/a&gt; [&lt;a href="https://crates.io/crates/antimony"&gt;antimony&lt;/a&gt;] - stream processing / distributed computation platform&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Apache Kafka 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/fede1024/rust-rdkafka"&gt;fede1024/rust-rdkafka&lt;/a&gt; [&lt;a href="https://crates.io/crates/rdkafka"&gt;rdkafka&lt;/a&gt;] - &lt;a href="https://github.com/confluentinc/librdkafka"&gt;librdkafka&lt;/a&gt; bindings&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/gklijs/schema_registry_converter"&gt;gklijs/schema_registry_converter&lt;/a&gt; [&lt;a href="https://crates.io/crates/schema_registry_converter"&gt;schema_registry_converter&lt;/a&gt;] - to integrate with &lt;a href="https://www.confluent.io/product/confluent-platform/data-compatibility/"&gt;confluent schema registry&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/kafka-rust/kafka-rust"&gt;kafka-rust/kafka-rust&lt;/a&gt; - Rust client for Apache Kafka&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;HDFS 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hyunsik/hdfs-rs"&gt;hyunsik/hdfs-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/hdfs"&gt;hdfs&lt;/a&gt;] - libhdfs bindings&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Other 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/build-trust/ockam"&gt;build-trust/ockam&lt;/a&gt; [&lt;a href="https://crates.io/crates/ockam"&gt;ockam&lt;/a&gt;] - End-to-End Encryption, Mutual Authentication, and ABAC for distributed applications &lt;a href="https://github.com/build-trust/ockam"&gt;&lt;img src="https://github.com/build-trust/ockam/workflows/Rust/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Domain driven design&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/serverlesstechnology/cqrs"&gt;serverlesstechnology/cqrs&lt;/a&gt; [&lt;a href="https://crates.io/crates/cqrs-es"&gt;cqrs-es&lt;/a&gt;] - A framework for CQRS and event sourcing with &lt;a href="https://doc.rust-cqrs.org/"&gt;user guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;eBPF&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aya-rs/aya"&gt;aya/aya-rs&lt;/a&gt; - Built with a focus on developer experience and operability.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/libbpf/libbpf-rs"&gt;libbpf/libbpf-rs&lt;/a&gt; - A minimal and opinionated eBPF tooling.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Email&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://crates.io/keywords/email"&gt;email&lt;/a&gt;, &lt;a href="https://crates.io/keywords/imap"&gt;imap&lt;/a&gt;, &lt;a href="https://crates.io/keywords/smtp"&gt;smtp&lt;/a&gt;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/duesee/imap-codec"&gt;duesee/imap-codec&lt;/a&gt; [&lt;a href="https://crates.io/crates/imap-codec"&gt;imap-codec&lt;/a&gt;] - Rock-solid and complete codec for IMAP &lt;a href="https://github.com/duesee/imap-codec/actions/workflows/build_and_test.yml"&gt;&lt;img src="https://github.com/duesee/imap-codec/actions/workflows/build_and_test.yml/badge.svg?sanitize=true" alt="Build &amp;amp; Test" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gsquire/sendgrid-rs"&gt;gsquire/sendgrid-rs&lt;/a&gt; - Library for SendGrid API&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jdrouet/catapulte"&gt;jdrouet/catapulte&lt;/a&gt; - A microservice to send emails using &lt;a href="https://github.com/jdrouet/mrml"&gt;MRML&lt;/a&gt; templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jdrouet/jolimail"&gt;jdrouet/jolimail&lt;/a&gt; - A web application to build &lt;a href="https://github.com/jdrouet/mrml"&gt;MRML&lt;/a&gt; templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jdrouet/mrml"&gt;jdrouet/mrml&lt;/a&gt; - A library to generate nice email templates working on any mail client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lettre/lettre"&gt;lettre/lettre&lt;/a&gt; - an SMTP-library &lt;a href="https://github.com/lettre/lettre/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/lettre/lettre/actions/workflows/test.yml/badge.svg?branch=master" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mailtutan/mailtutan"&gt;mailtutan/mailtutan&lt;/a&gt; - An SMTP server for test and development environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/meli/meli"&gt;meli/meli&lt;/a&gt; - 🐝 terminal mail client&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/staktrace/mailparse"&gt;staktrace/mailparse&lt;/a&gt; [&lt;a href="https://crates.io/crates/mailparse"&gt;mailparse&lt;/a&gt;] - A library for parsing real-world email files&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stalwartlabs/mail-auth"&gt;stalwartlabs/mail-auth&lt;/a&gt; [&lt;a href="https://crates.io/crates/mail-auth"&gt;mail-auth&lt;/a&gt;] - DKIM, ARC, SPF and DMARC message authentication library &lt;a href="https://github.com/stalwartlabs/mail-auth/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/stalwartlabs/mail-auth/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stalwartlabs/mail-parser"&gt;stalwartlabs/mail-parser&lt;/a&gt; [&lt;a href="https://crates.io/crates/mail-parser"&gt;mail-parser&lt;/a&gt;] - A fast and robust e-mail parsing library with full MIME support &lt;a href="https://github.com/stalwartlabs/mail-parser/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/stalwartlabs/mail-parser/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stalwartlabs/mail-send"&gt;stalwartlabs/mail-send&lt;/a&gt; [&lt;a href="https://crates.io/crates/mail-send"&gt;mail-send&lt;/a&gt;] - E-mail builder and SMTP client library with DKIM support &lt;a href="https://github.com/stalwartlabs/mail-send/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/stalwartlabs/mail-send/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tweedegolf/mailcrab"&gt;tweedegolf/mailcrab&lt;/a&gt; - Email test server for development.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Encoding&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://crates.io/keywords/encoding"&gt;encoding&lt;/a&gt;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ASN.1 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/alex/rust-asn1"&gt;alex/rust-asn1&lt;/a&gt; - ASN.1 (DER) serializer&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Binary 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bincode-org/bincode"&gt;bincode-org/bincode&lt;/a&gt; - A binary encoder/decoder &lt;a href="https://github.com/bincode-org/bincode/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/bincode-org/bincode/actions/workflows/rust.yml/badge.svg?branch=trunk" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/jamesmunns/postcard"&gt;jamesmunns/postcard&lt;/a&gt; [&lt;a href="https://crates.io/crates/postcard"&gt;postcard&lt;/a&gt;] - Postcard is a #![no_std] focused serializer and deserializer for Serde.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/m4b/goblin"&gt;m4b/goblin&lt;/a&gt; [&lt;a href="https://crates.io/crates/goblin"&gt;goblin&lt;/a&gt;] - cross-platform, zero-copy, and endian-aware binary parsing&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;BSON 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mongodb/bson-rust"&gt;mongodb/bson-rust&lt;/a&gt; - Encoding and decoding support for BSON&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Byte swapping 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/BurntSushi/byteorder"&gt;BurntSushi/byteorder&lt;/a&gt; - Supports big-endian, little-endian and native byte orders&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Cap'n Proto 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/capnproto/capnproto-rust"&gt;capnproto/capnproto-rust&lt;/a&gt; - Cap'n Proto is a type system for distributed systems&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;CBOR 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/serde_cbor"&gt;serde_cbor&lt;/a&gt; - CBOR support for serde&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Character Encoding 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hsivonen/encoding_rs"&gt;hsivonen/encoding_rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/encoding_rs"&gt;encoding_rs&lt;/a&gt;] - A Gecko-oriented implementation of the Encoding Standard&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lifthrasiir/rust-encoding"&gt;lifthrasiir/rust-encoding&lt;/a&gt; - Character encoding support for Rust. (also known as rust-encoding) It is based on WHATWG Encoding Standard, and also provides an advanced interface for error detection and recovery.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;CRC 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mrhooray/crc-rs"&gt;mrhooray/crc-rs&lt;/a&gt; - Rust implementation of CRC(16, 32, 64) with support of various standards&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;CSV 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/BurntSushi/rust-csv"&gt;BurntSushi/rust-csv&lt;/a&gt; - A fast and flexible CSV reader and writer, with support for Serde&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;EDN 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/naomijub/edn-rs"&gt;edn-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/edn-rs"&gt;edn-rs&lt;/a&gt;] - crate to parse and emit EDN format into Rust types.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flatbuffers.dev/"&gt;FlatBuffers&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/frol/flatc-rust"&gt;frol/flatc-rust&lt;/a&gt; - FlatBuffers compiler (flatc) integration for Cargo build scripts&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;HAR 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mandrean/har-rs"&gt;mandrean/har-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/har"&gt;har&lt;/a&gt;] - A HTTP Archive Format (HAR) serialization &amp;amp; deserialization library&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;HTML 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/servo/html5ever"&gt;servo/html5ever&lt;/a&gt; - High-performance browser-grade HTML5 parser&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;JSON 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/cloudwego/sonic-rs"&gt;cloudwego/sonic-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/sonic-rs"&gt;sonic-rs&lt;/a&gt;] - A fast Rust JSON library based on SIMD.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/importcjj/rust-ajson"&gt;importcjj/rust-ajson&lt;/a&gt; [&lt;a href="https://crates.io/crates/ajson"&gt;ajson&lt;/a&gt;] - Get JSON values quickly&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rustadopt/jzon-rs/"&gt;rustadopt/jzon-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/jzon"&gt;jzon&lt;/a&gt;] - JSON implementation&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/serde-rs/json"&gt;serde-rs/json&lt;/a&gt; [&lt;a href="https://crates.io/crates/serde_json"&gt;serde_json&lt;/a&gt;] - JSON support for &lt;a href="https://github.com/serde-rs/serde"&gt;Serde&lt;/a&gt; framework&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/simd-lite/simd-json"&gt;simd-lite/simd-json&lt;/a&gt; [&lt;a href="https://crates.io/crates/simd-json"&gt;simd-json&lt;/a&gt;] - High performance JSON parser based on a port of simdjson&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;MsgPack 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/3Hren/msgpack-rust"&gt;3Hren/msgpack-rust&lt;/a&gt; - Low/high level MessagePack implementation&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;NetCDF 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/georust/netcdf"&gt;georust/netcdf&lt;/a&gt; [&lt;a href="https://crates.io/crates/netcdf"&gt;netcdf&lt;/a&gt;] - Medium-level netCDF bindings, allowing easy reading and writing of array-like structures to a file.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;PEM 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/jcreekmore/pem-rs"&gt;jcreekmore/pem-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/pem"&gt;pem&lt;/a&gt;] - Parse and encode PEM-encoded data&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ProtocolBuffers 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/stepancheg/rust-protobuf"&gt;stepancheg/rust-protobuf&lt;/a&gt; - Rust implementation of Google protocol buffers&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tokio-rs/prost"&gt;tokio-rs/prost&lt;/a&gt; - &lt;a href="https://github.com/tokio-rs/prost/actions"&gt;&lt;img src="https://github.com/tokio-rs/prost/workflows/continuous%20integration/badge.svg?branch=master" alt="continuous integration" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;rkyv 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rkyv/rkyv"&gt;rkyv/rkyv&lt;/a&gt; [&lt;a href="https://crates.io/crates/rkyv"&gt;rkyv&lt;/a&gt;] - rkyv (archive) is a zero-copy deserialization framework&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;RON (Rusty Object Notation) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ron-rs/ron"&gt;https://github.com/ron-rs/ron&lt;/a&gt; - Rusty Object Notation&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Serde 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/iddm/serde-aux/"&gt;iddm/serde-aux&lt;/a&gt; - additional tools for using with the serde library. &lt;a href="https://github.com/iddm/serde-aux/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/iddm/serde-aux/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/serde-aux"&gt;&lt;img src="https://img.shields.io/crates/v/serde-aux.svg?sanitize=true" alt="Crates badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;TOML 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tamasfe/taplo"&gt;tamasfe/taplo&lt;/a&gt; [&lt;a href="https://crates.io/crates/taplo"&gt;taplo&lt;/a&gt;] - A TOML toolkit &lt;a href="https://github.com/tamasfe/taplo/actions?query=workflow%3A%22Continuous+integration%22"&gt;&lt;img src="https://github.com/tamasfe/taplo/workflows/Continuous%20integration/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/toml-rs/toml"&gt;toml-rs/toml&lt;/a&gt; - &lt;a href="https://github.com/toml-rs/toml/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/toml-rs/toml/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vitiral/stfu8"&gt;vitiral/stfu8&lt;/a&gt; [&lt;a href="https://crates.io/crates/stfu8"&gt;stfu8&lt;/a&gt;] - Sorta Text Format in UTF-8&lt;/li&gt; 
 &lt;li&gt;XML 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Florob/RustyXML"&gt;Florob/RustyXML&lt;/a&gt; - an XML parser&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/netvl/xml-rs"&gt;netvl/xml-rs&lt;/a&gt; - A streaming XML library&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/shepmaster/sxd-document"&gt;shepmaster/sxd-document&lt;/a&gt; - An XML library&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/shepmaster/sxd-xpath"&gt;shepmaster/sxd-xpath&lt;/a&gt; - An XPath library&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tafia/quick-xml"&gt;tafia/quick-xml&lt;/a&gt; - High performance XML pull reader/writer&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/luminvent/yaserde"&gt;yaserde&lt;/a&gt; - Yet Another Serializer/Deserializer specialized for XML&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;YAML 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/chyh1990/yaml-rust"&gt;chyh1990/yaml-rust&lt;/a&gt; - The missing YAML 1.2 implementation.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/saphyr-rs/saphyr"&gt;saphyr&lt;/a&gt; - A set of crates dedicated to parsing YAML.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Filesystem&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://crates.io/keywords/filesystem"&gt;filesystem&lt;/a&gt;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Operations 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/camino-rs/camino"&gt;Camino&lt;/a&gt; [&lt;a href="https://crates.io/crates/camino"&gt;camino&lt;/a&gt;] - Like Rust's std::path::Path, but UTF-8.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/apache/opendal"&gt;OpenDAL&lt;/a&gt; [&lt;a href="https://crates.io/crates/opendal"&gt;opendal&lt;/a&gt;] - A unified data access layer, empowering users to seamlessly and efficiently retrieve data from diverse storage services. &lt;a href="https://github.com/apache/opendal/actions?query=branch%3Amain"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/apache/opendal/ci_core.yml?branch=main" alt="build" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ParthJadhav/Rust_Search"&gt;ParthJadhav/Rust_Search&lt;/a&gt; [&lt;a href="https://crates.io/crates/rust_search"&gt;rust_search&lt;/a&gt;] - Blazingly fast file search library.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/pop-os/dbus-udisks2"&gt;pop-os/dbus-udisks2&lt;/a&gt; [&lt;a href="https://crates.io/crates/dbus-udisks2"&gt;dbus-udisks2&lt;/a&gt;] - UDisks2 DBus API&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/pop-os/sys-mount"&gt;pop-os/sys-mount&lt;/a&gt; [&lt;a href="https://crates.io/crates/sys-mount"&gt;sys-mount&lt;/a&gt;] - High level abstraction for the &lt;code&gt;mount&lt;/code&gt; / &lt;code&gt;umount2&lt;/code&gt; system calls.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/vitiral/path_abs"&gt;vitiral/path_abs&lt;/a&gt; [&lt;a href="https://crates.io/crates/path_abs"&gt;path_abs&lt;/a&gt;] - Absolute serializable path types and associated methods.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/webdesus/fs_extra"&gt;webdesus/fs_extra&lt;/a&gt; - expanding opportunities standard library std::fs and std::io&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Temporary Files 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Stebalien/tempfile"&gt;Stebalien/tempfile&lt;/a&gt; - temporary file library&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Stebalien/xattr"&gt;Stebalien/xattr&lt;/a&gt; [&lt;a href="https://crates.io/crates/xattr"&gt;xattr&lt;/a&gt;] - list and manipulate unix extended file attributes&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/zboxfs/zbox"&gt;zboxfs/zbox&lt;/a&gt; [&lt;a href="https://crates.io/crates/zbox"&gt;zbox&lt;/a&gt;] - Zero-details, privacy-focused embeddable file system.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Finance&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/avhz/RustQuant"&gt;avhz/RustQuant&lt;/a&gt; [&lt;a href="https://crates.io/crates/RustQuant"&gt;RustQuant&lt;/a&gt;] - A quantitative finance library. &lt;img src="https://img.shields.io/github/actions/workflow/status/avhz/RustQuant/build.yml" alt="GitHub Workflow Status (with event)" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/d-e-s-o/apca"&gt;d-e-s-o/apca&lt;/a&gt; [&lt;a href="https://crates.io/crates/apca"&gt;apca&lt;/a&gt;] - Opinionated and comprehensive bindings to the &lt;a href="https://alpaca.markets/"&gt;Alpaca API&lt;/a&gt; for stock trading and more. &lt;img src="https://github.com/d-e-s-o/apca/actions/workflows/test.yml/badge.svg?branch=main" alt="GitHub Workflow Status" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-dd/stochastic-rs"&gt;stochastic-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/stochastic-rs"&gt;stochastic-rs&lt;/a&gt;] - High-performance data generation library for stochastic process with quant finance tools. &lt;img src="https://github.com/rust-dd/stochastic-rs/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="GitHub Workflow Status" /&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Functional Programming&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://crates.io/keywords/fp"&gt;functional programming&lt;/a&gt;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prelude 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/JasonShin/fp-core.rs"&gt;JasonShin/fp-core.rs&lt;/a&gt; - A library for functional programming&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/myrrlyn/tap"&gt;myrrlyn/tap&lt;/a&gt; - Suffix-Position Pipeline Behavior&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Game development&lt;/h3&gt; 
&lt;p&gt;See also &lt;a href="https://arewegameyet.rs"&gt;Are we game yet?&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Allegro 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SiegeLord/RustAllegro"&gt;SiegeLord/RustAllegro&lt;/a&gt; - &lt;a href="https://liballeg.org/"&gt;Allegro 5&lt;/a&gt; bindings&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ozkriff/awesome-quads"&gt;Awesome Quads&lt;/a&gt; - A curated list of links to miniquad/macroquad-related code &amp;amp; resources&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rofrol/awesome-wgpu"&gt;Awesome wgpu&lt;/a&gt; - A curated list of wgpu code and resources&lt;/li&gt; 
 &lt;li&gt;bracket-lib (previously RLTK) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/amethyst/bracket-lib"&gt;bracket-lib&lt;/a&gt; [&lt;a href="https://crates.io/crates/bracket-lib"&gt;bracket-lib&lt;/a&gt;] - The Roguelike Toolkit (RLTK). &lt;a href="https://github.com/amethyst/bracket-lib/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/amethyst/bracket-lib/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="Rust" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Challonge 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/iddm/challonge-rs"&gt;iddm/challonge-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/challonge"&gt;challonge&lt;/a&gt;] - Client library for the Challonge REST API. Helps to organize tournaments. &lt;a href="https://github.com/iddm/challonge-rs/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/iddm/challonge-rs/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Entity-Component Systems (ECS) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/amethyst/specs"&gt;amethyst/specs&lt;/a&gt; - Specs Parallel ECS&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/amethyst/legion"&gt;legion&lt;/a&gt; - A feature rich high performance ECS library with minimal boilerplate &lt;a href="https://github.com/amethyst/legion/actions"&gt;&lt;img src="https://github.com/amethyst/legion/workflows/CI/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Game Engines 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bevyengine/bevy"&gt;Bevy&lt;/a&gt; - is a refreshingly simple data-driven game engine. - &lt;a href="https://crates.io/crates/bevy"&gt;&lt;img src="https://img.shields.io/crates/v/bevy.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/bevy"&gt;&lt;img src="https://img.shields.io/crates/d/bevy.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://fyrox.rs/"&gt;Fyrox&lt;/a&gt; - Game engine 3D &lt;a href="https://crates.io/crates/fyrox"&gt;&lt;img src="https://img.shields.io/crates/v/fyrox.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://github.com/FyroxEngine/Fyrox/raw/master/LICENSE.md"&gt;&lt;img src="https://img.shields.io/crates/l/fyrox.svg?sanitize=true" alt="license" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/fyrox"&gt;&lt;img src="https://img.shields.io/crates/d/fyrox.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ggez/ggez"&gt;ggez&lt;/a&gt; - A lightweight game framework for making 2D games with minimum friction - &lt;a href="https://crates.io/crates/ggez"&gt;&lt;img src="https://img.shields.io/crates/v/ggez.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ggez/ggez/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="license" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/ggez"&gt;&lt;img src="https://img.shields.io/crates/d/ggez.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/sebcrozet/kiss3d"&gt;Kiss3d&lt;/a&gt; - A Keep It Simple, Stupid 3d graphics engine &lt;a href="https://crates.io/crates/kiss3d"&gt;&lt;img src="https://img.shields.io/crates/d/kiss3d.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Ruddle/oxidator"&gt;oxidator&lt;/a&gt; - A real time strategy game/engine supporting WebGPU&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.piston.rs/"&gt;Piston&lt;/a&gt; - &lt;a href="https://crates.io/crates/piston"&gt;&lt;img src="https://img.shields.io/crates/v/piston.svg?style=flat-square" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://github.com/PistonDevelopers/piston/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/crates/l/piston.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/piston"&gt;&lt;img src="https://img.shields.io/crates/d/piston.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/unrust/unrust"&gt;Unrust&lt;/a&gt; - Webgl 2.0 / native game engine&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Game Servers 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/gamedig/rust-gamedig"&gt;gamedig/rust-gamedig&lt;/a&gt; [&lt;a href="https://crates.io/crates/gamedig"&gt;gamedig&lt;/a&gt;] - Query game servers for informations such as name, players online, max players count etc. &lt;a href="https://crates.io/crates/gamedig"&gt;&lt;img src="https://img.shields.io/crates/v/gamedig.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/gamedig"&gt;&lt;img src="https://img.shields.io/crates/d/gamedig.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://godotengine.org/"&gt;Godot&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/godot-rust/gdext"&gt;godot-rust/gdext&lt;/a&gt; [&lt;a href="https://crates.io/crates/gdext"&gt;gdext&lt;/a&gt;] - Bindings to the Godot 4+ game engine &lt;a href="https://github.com/godot-rust/gdext/actions/workflows/full-ci.yml"&gt;&lt;img src="https://github.com/godot-rust/gdext/actions/workflows/full-ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/godot-rust/gdnative"&gt;godot-rust/gdnative&lt;/a&gt; [&lt;a href="https://crates.io/crates/gdnative"&gt;gdnative&lt;/a&gt;] - Bindings to the Godot 3+ game engine &lt;a href="https://github.com/godot-rust/gdnative/actions/workflows/full-ci.yml"&gt;&lt;img src="https://github.com/godot-rust/gdnative/actions/workflows/full-ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Minecraft 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bedrock-crustaceans/bedrock-rs"&gt;bedrock-crustaceans/bedrock-rs&lt;/a&gt; - Universal toolkit for Minecraft Bedrock Edition development in Rust. &lt;a href="https://github.com/bedrock-crustaceans/bedrock-rs"&gt;&lt;img src="https://img.shields.io/github/stars/bedrock-crustaceans/bedrock-rs" alt="GitHub stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bedrock-crustaceans/bedrock-rs/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/bedrock-crustaceans/bedrock-rs/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ferrumc-rs/ferrumc"&gt;FerrumC&lt;/a&gt; - A upgrade of the original Minecraft server in Rust [&lt;img src="https://github.com/ferrumc-rs/ferrumc/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="build badge" /&gt;]&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/pumpkin-mc/pumpkin"&gt;Pumpkin&lt;/a&gt; - A high-performance Minecraft server Software fully written in Rust&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.raylib.com/"&gt;Raylib&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/deltaphc/raylib-rs"&gt;deltaphc/raylib-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/raylib"&gt;raylib&lt;/a&gt;] - Bindings for raylib&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.libsdl.org/"&gt;SDL&lt;/a&gt; [&lt;a href="https://crates.io/keywords/sdl"&gt;sdl&lt;/a&gt;] 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/brson/rust-sdl"&gt;brson/rust-sdl&lt;/a&gt; - SDL1 bindings&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Rust-SDL2/rust-sdl2"&gt;Rust-SDL2/rust-sdl2&lt;/a&gt; - SDL2 bindings&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;SFML 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/jeremyletang/rust-sfml"&gt;jeremyletang/rust-sfml&lt;/a&gt; - &lt;a href="https://www.sfml-dev.org/"&gt;SFML&lt;/a&gt; bindings&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Skillratings 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/atomflunder/skillratings"&gt;atomflunder/skillratings&lt;/a&gt; [&lt;a href="https://crates.io/crates/skillratings"&gt;skillratings&lt;/a&gt;] - Collection of skill rating algorithms for multiplayer games like Elo, Glicko-2, TrueSkill etc. &lt;a href="https://crates.io/crates/skillratings"&gt;&lt;img src="https://img.shields.io/crates/v/skillratings" alt="crates.io badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/atomflunder/skillratings/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/atomflunder/skillratings/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Tatami 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/giraffekey/tatami"&gt;giraffekey/tatami&lt;/a&gt; [&lt;a href="https://crates.io/crates/tatami-dungeon"&gt;tatami&lt;/a&gt;] - A roguelike dungeon generation algorithm.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Toornament-rs 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/iddm/toornament-rs"&gt;iddm/toornament-rs&lt;/a&gt; - Toornament.com API bindings. &lt;a href="https://github.com/iddm/toornament-rs/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/iddm/toornament-rs/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/toornament"&gt;&lt;img src="https://img.shields.io/crates/v/toornament.svg?sanitize=true" alt="Crates badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Victorem 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/VictoremWinbringer/Victorem"&gt;VictoremWinbringer/Victorem&lt;/a&gt; [&lt;a href="https://crates.io/crates/Victorem"&gt;Victorem&lt;/a&gt;] - Easy UDP Game Server and UDP Client framework for creating simple 2D and 3D online game prototype&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Geospatial&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://crates.io/keywords/geo"&gt;geo&lt;/a&gt;, &lt;a href="https://crates.io/keywords/gis"&gt;gis&lt;/a&gt;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DaveKram/coord_transforms"&gt;DaveKram/coord_transforms&lt;/a&gt; [&lt;a href="https://crates.io/crates/coord_transforms"&gt;coord_transforms&lt;/a&gt;] - coordinate transformations (2-d, 3-d, and geospatial)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/georust"&gt;Georust&lt;/a&gt; - geospatial tools and libraries written&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maplibre/martin"&gt;MapLibre/Martin&lt;/a&gt; - Map tile server with PostGIS, MBTiles, PMTiles, and sprites support. &lt;a href="https://github.com/maplibre/martin/actions"&gt;&lt;img src="https://github.com/maplibre/martin/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI build" /&gt;&lt;/a&gt;&lt;a href="https://crates.io/crates/martin"&gt;&lt;img src="https://img.shields.io/crates/v/martin.svg?sanitize=true" alt="crates.io version" /&gt;&lt;/a&gt;&lt;a href="https://maplibre.org/martin/"&gt;&lt;img src="https://img.shields.io/badge/docs-Book-informational" alt="Book" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gx0r/rrgeo"&gt;rust-reverse-geocoder&lt;/a&gt; - A fast, offline reverse geocoder, inspired by &lt;a href="https://github.com/thampiman/reverse-geocoder"&gt;thampiman/reverse-geocoder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vlopes11/geomorph"&gt;vlopes11/geomorph&lt;/a&gt; [&lt;a href="https://crates.io/crates/geomorph"&gt;geomorph&lt;/a&gt;] - conversion between UTM, LatLon and MGRS coordinates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Graph algorithms&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neo4j-labs/graph"&gt;neo4j-labs/graph&lt;/a&gt; - A library for high-performant graph algorithms &lt;a href="https://github.com/neo4j-labs/graph/actions/workflows/rust.yml"&gt;&lt;img src="https://img.shields.io/github/workflow/status/neo4j-labs/graph/CI/main?label=CI" alt="graph CI status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/petgraph/petgraph"&gt;petgraph/petgraph&lt;/a&gt; - Graph data structure library. &lt;a href="https://github.com/petgraph/petgraph/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/petgraph/petgraph/workflows/Continuous%20integration/badge.svg?branch=master" alt="graph CI status" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Graphics&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://crates.io/keywords/graphics"&gt;graphics&lt;/a&gt;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fonts 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/redox-os/rusttype"&gt;redox-os/rusttype&lt;/a&gt; - Alternative to libraries like FreeType&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/harfbuzz/rustybuzz"&gt;rustybuzz&lt;/a&gt; - An incremental harfbuzz port&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gfx-rs/gfx"&gt;gfx-rs/gfx&lt;/a&gt; - A high-performance, bindless graphics API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gfx-rs/wgpu"&gt;gfx-rs/wgpu&lt;/a&gt; - Native WebGPU implementation based on gfx-hal. &lt;a href="https://github.com/gfx-rs/wgpu/actions"&gt;&lt;img src="https://github.com/gfx-rs/wgpu/workflows/CI/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;OpenGL [&lt;a href="https://crates.io/keywords/opengl"&gt;opengl&lt;/a&gt;] 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rust-windowing/gl-rs"&gt;gl-rs&lt;/a&gt; - An OpenGL function pointer loader&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/glium/glium"&gt;glium/glium&lt;/a&gt; - safe OpenGL wrapper.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/glutin"&gt;glutin&lt;/a&gt; - Alternative to &lt;a href="https://www.glfw.org/"&gt;GLFW&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/PistonDevelopers/glfw-rs"&gt;PistonDevelopers/glfw-rs&lt;/a&gt; - GLFW3 bindings and idiomatic wrapper&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;PDF 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bastibense/libharu_ng"&gt;bastibense/libharu_ng&lt;/a&gt; [&lt;a href="https://crates.io/crates/libharu_ng"&gt;libharu_ng&lt;/a&gt;] - Easily generate PDFs from your Rust app.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/fschutt/printpdf"&gt;fschutt/printpdf&lt;/a&gt; - PDF writing library&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/J-F-Liu/lopdf"&gt;J-F-Liu/lopdf&lt;/a&gt; - PDF document manipulation&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/kaj/rust-pdf"&gt;kaj/rust-pdf&lt;/a&gt; - Generating PDF files in pure Rust&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.vulkan.org/"&gt;Vulkan&lt;/a&gt; [&lt;a href="https://crates.io/keywords/vulkan"&gt;vulkan&lt;/a&gt;] 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://gitlab.com/Friz64/erupt"&gt;erupt&lt;/a&gt; [&lt;a href="https://crates.io/crates/erupt"&gt;erupt&lt;/a&gt;] - &lt;a href="https://gitlab.com/Friz64/erupt/-/pipelines"&gt;&lt;img src="https://gitlab.com/Friz64/erupt/badges/main/pipeline.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/vulkano-rs/vulkano"&gt;vulkano&lt;/a&gt; [&lt;a href="https://crates.io/crates/vulkano"&gt;vulkano&lt;/a&gt;] - Safe and rich Rust wrapper around the Vulkan API&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;GUI&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://crates.io/keywords/gui"&gt;gui&lt;/a&gt;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/autopilot-rs/autopilot-rs"&gt;autopilot-rs/autopilot-rs&lt;/a&gt; - A simple, cross-platform GUI automation library.&lt;/li&gt; 
 &lt;li&gt;Cocoa 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/servo/core-foundation-rs"&gt;servo/core-foundation-rs&lt;/a&gt; - Rust bindings to Core Foundation and other low level libraries on Mac OS X and iOS&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dioxuslabs/dioxus"&gt;DioxusLabs/dioxus&lt;/a&gt; - a portable, performant, and ergonomic framework for building cross-platform user interfaces in Rust. &lt;img src="https://github.com/dioxuslabs/dioxus/actions/workflows/main.yml/badge.svg?sanitize=true" alt="rust ci" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emilk/egui"&gt;emilk/egui&lt;/a&gt; - Simple, fast, and highly portable immediate mode GUI library. egui runs on the web, natively, and in your favorite game engine. &lt;a href="https://github.com/emilk/egui/actions?workflow=CI"&gt;&lt;img src="https://github.com/emilk/egui/workflows/CI/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emoon/rust_minifb"&gt;emoon/rust_minifb&lt;/a&gt; - minifb is a cross-platform window setup with optional bitmap rendering. It also comes with easy mouse and keyboard input. Primarily designed for prototyping&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.fltk.org/"&gt;FLTK&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/fltk-rs/fltk-rs"&gt;fltk-rs&lt;/a&gt; - FLTK bindings &lt;a href="https://github.com/fltk-rs/fltk-rs/actions"&gt;&lt;img src="https://github.com/fltk-rs/fltk-rs/workflows/Build/badge.svg?branch=master" alt="Build" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flutter.dev/"&gt;Flutter&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/cunarist/rinf"&gt;cunarist/rinf&lt;/a&gt; - Rust as your Flutter backend, Flutter as your Rust frontend &lt;a href="https://github.com/cunarist/rinf/actions/workflows/build_test.yaml?query=branch%3Amain"&gt;&lt;img src="https://github.com/cunarist/rinf/actions/workflows/build_test.yaml/badge.svg?sanitize=true" alt="Build Test" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/flutter-rs/flutter-rs"&gt;flutter-rs&lt;/a&gt; - Build flutter desktop app in dart &amp;amp; rust.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/fzyzcjy/flutter_rust_bridge"&gt;fzyzcjy/flutter_rust_bridge&lt;/a&gt; - High-level memory-safe binding generator for Flutter/Dart &amp;lt;-&amp;gt; Rust&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fschutt/azul"&gt;fschutt/azul&lt;/a&gt; - A free, functional, IMGUI-oriented GUI framework for rapid development of desktop applications written in Rust, supported by the Mozilla WebRender rendering engine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gtk.org/"&gt;GTK+&lt;/a&gt; [&lt;a href="https://crates.io/keywords/gtk"&gt;gtk&lt;/a&gt;] 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/gtk-rs/gtk4-rs"&gt;gtk-rs/gtk4-rs&lt;/a&gt; - GTK4 binding &lt;img src="https://github.com/gtk-rs/gtk4-rs/workflows/CI/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/antoyo/relm"&gt;relm&lt;/a&gt; - Asynchronous, GTK+-based, GUI library, inspired by Elm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iced-rs/iced"&gt;iced-rs/iced&lt;/a&gt; [&lt;a href="https://crates.io/crates/iced"&gt;iced&lt;/a&gt;] - A cross-platform GUI library, focused on simplicity and type-safety. Inspired by Elm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ocornut/imgui"&gt;ImGui&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/imgui-rs/imgui-rs"&gt;imgui-rs&lt;/a&gt; - Bindings for ImGui &lt;a href="https://github.com/imgui-rs/imgui-rs/actions"&gt;&lt;img src="https://github.com/imgui-rs/imgui-rs/workflows/ci/badge.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://webserver2.tecgraf.puc-rio.br/iup/"&gt;IUP&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/KISS-UI/kiss-ui"&gt;Kiss-ui&lt;/a&gt; - A simple UI framework built on IUP&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ivanceras/sauron-native"&gt;ivanceras/sauron-native&lt;/a&gt; - A truly native and cross platform GUI library. One unified code can be run as native GUI, Html Web and TUI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andlabs/libui"&gt;libui&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rust-native-ui/libui-rs"&gt;rust-native-ui/libui-rs&lt;/a&gt; - libui bindings.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/makepad/makepad"&gt;makepad/makepad&lt;/a&gt; [&lt;a href="https://crates.io/crates/makepad-widgets"&gt;makepad-widgets&lt;/a&gt;] - Makepad is a creative software development platform that compiles to wasm/webGL, osx/metal, windows/dx11 linux/opengl.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Immediate-Mode-UI/Nuklear"&gt;Nuklear&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/snuk182/nuklear-rust"&gt;nuklear-rust&lt;/a&gt; - Bindings for Nuklear&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/redox-os/orbtk"&gt;OrbTk&lt;/a&gt; - The Orbital Widget Toolkit is a multi platform (G)UI toolkit using SDL2 &lt;a href="https://github.com/redox-os/orbtk/actions"&gt;&lt;img src="https://github.com/redox-os/orbtk/workflows/build/badge.svg?branch=develop" alt="Build and test" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PistonDevelopers/conrod/"&gt;PistonDevelopers/conrod&lt;/a&gt; - An easy-to-use, immediate-mode, 2D GUI library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doc.qt.io"&gt;Qt&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/cyndis/qmlrs"&gt;cyndis/qmlrs&lt;/a&gt; - QtQuick bindings&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rust-qt"&gt;rust-qt&lt;/a&gt; - Qt bindings for Rust&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/woboq/qmetaobject-rs"&gt;woboq/qmetaobject-rs&lt;/a&gt; - Integrate Qml and Rust by building the QMetaObject at compile time.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RibirX/Ribir"&gt;Ribir&lt;/a&gt; - Ribir is a Rust GUI framework that helps you build beautiful and native multi-platform applications from a single codebase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rise-ui/rise"&gt;rise-ui&lt;/a&gt; - Simple component-based cross-Platform GUI Toolkit for developing beautiful and user-friendly interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/saurvs/nfd-rs"&gt;saurvs/nfd-rs&lt;/a&gt; - &lt;a href="https://github.com/mlabbe/nativefiledialog"&gt;nativefiledialog&lt;/a&gt; bindings&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sciter.com/"&gt;Sciter&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/sciter-sdk/rust-sciter"&gt;sciter-sdk/rust-sciter&lt;/a&gt; - Sciter bindings &lt;a href="https://ci.appveyor.com/project/sciter-sdk/rust-sciter"&gt;&lt;img src="https://ci.appveyor.com/api/projects/status/github/sciter-sdk/rust-sciter?svg=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/slint-ui/slint"&gt;slint-ui/slint&lt;/a&gt; &lt;a href="https://crates.io/crates/slint"&gt;slint&lt;/a&gt; - &lt;a href="https://slint.dev/"&gt;Slint&lt;/a&gt; is a toolkit to efficiently develop fluid graphical user interfaces for embedded devices and desktop applications. &lt;a href="https://github.com/slint-ui/slint/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/slint-ui/slint/workflows/CI/badge.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tauri-apps/tauri"&gt;tauri-apps/tauri&lt;/a&gt; - Build smaller, faster, and more secure desktop applications with a web frontend, powered by &lt;a href="https://github.com/tauri-apps/wry"&gt;WRY&lt;/a&gt;. &lt;a href="https://github.com/tauri-apps/tauri/actions?query=workflow%3A%22test+library%22"&gt;&lt;img src="https://img.shields.io/github/workflow/status/tauri-apps/tauri/test%20library?label=test%20library" alt="test library" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tauri-apps/wry"&gt;tauri-apps/wry&lt;/a&gt; - Webview Rendering librarY.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linebender/xilem"&gt;xilem&lt;/a&gt; - Successor of the data-first UI design toolkit &lt;a href="https://github.com/linebender/druid"&gt;druid&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Image processing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abonander/img_hash"&gt;abonander/img_hash&lt;/a&gt; - Perceptual image hashing and comparison for equality and similarity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Enet4/dicom-rs"&gt;Enet4/dicom-rs&lt;/a&gt; - A pure Rust implementation of the DICOM standard, allowing users to work with DICOM objects and interact with DICOM applications, while aiming to be fast, safe, and intuitive to use.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/image-rs/image"&gt;image-rs/image&lt;/a&gt; - Basic imaging processing functions and methods for converting to and from image formats&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/image-rs/imageproc"&gt;image-rs/imageproc&lt;/a&gt; - An image processing library, based on the &lt;code&gt;image&lt;/code&gt; library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marekm4/dominant_color"&gt;marekm4/dominant_color&lt;/a&gt; [&lt;a href="https://crates.io/crates/dominant_color"&gt;dominant_color&lt;/a&gt;] - Dominant color extractor &lt;img src="https://github.com/marekm4/dominant_color/actions/workflows/rust.yml/badge.svg?branch=master" alt="build badge" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-cv/cv"&gt;rust-cv/cv&lt;/a&gt; - Implement computer vision algorithms, abstractions, and systems. &lt;code&gt;#[no_std]&lt;/code&gt; is supported where possible. &lt;img src="https://github.com/rust-cv/cv/workflows/tests/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/teovoinea/steganography"&gt;teovoinea/steganography&lt;/a&gt; [&lt;a href="https://crates.io/crates/steganography"&gt;steganography&lt;/a&gt;] - A simple steganography library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twistedfall/opencv-rust"&gt;twistedfall/opencv-rust&lt;/a&gt; - Bindings for OpenCV&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Language specification&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shnewto/bnf"&gt;shnewto/bnf&lt;/a&gt; - A library for parsing Backus–Naur form context-free grammars.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Licensing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/WyvernIXTL/license-fetcher"&gt;WyvernIXTL/license-fetcher&lt;/a&gt; [&lt;a href="https://crates.io/crates/license-fetcher"&gt;license-fetcher&lt;/a&gt;] - Fetch licenses of dependencies at build time and embed them into your program.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Logging&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://crates.io/keywords/log"&gt;log&lt;/a&gt;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/donnie4w/tklog" title="donnie4w/tklog"&gt;donnie4w/tklog&lt;/a&gt; - lightweight and efficient rust structured log library with support for log levels, file segmentation, compressed archiving.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/estk/log4rs"&gt;estk/log4rs&lt;/a&gt; - highly configurable logging framework modeled after Java's Logback and log4j libraries &lt;a href="https://app.circleci.com/pipelines/github/estk/log4rs"&gt;&lt;img src="https://circleci.com/gh/estk/log4rs.svg?style=shield" alt="CircleCI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rbatis/fast_log"&gt;rbatis/fast_log&lt;/a&gt; - Async log High-performance asynchronous logging&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-lang/log"&gt;rust-lang/log&lt;/a&gt; - Logging implementation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seanmonstar/pretty-env-logger"&gt;seanmonstar/pretty-env-logger&lt;/a&gt; - A pretty, easy-to-use logger.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/slog-rs/slog"&gt;slog-rs/slog&lt;/a&gt; - Structured, composable logging&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tokio-rs/tracing"&gt;tokio-rs/tracing&lt;/a&gt; - An application level tracing framework for async-aware structured logging, error handling, metrics, and more &lt;a href="https://github.com/tokio-rs/tracing/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/tokio-rs/tracing/workflows/CI/badge.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Macro&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;cute 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mattgathu/cute"&gt;mattgathu/cute&lt;/a&gt; - Macro for Python-esque list comprehensions.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elastio/bon"&gt;elastio/bon&lt;/a&gt; [&lt;a href="https://crates.io/crates/bon"&gt;bon&lt;/a&gt;] - generate compile-time-checked builders for structs and functions, provides partial application, optional and named parameters for functions and methods. &lt;a href="https://github.com/elastio/bon/actions"&gt;&lt;img src="https://github.com/elastio/bon/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="build status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/StardustDL/Linq-in-Rust"&gt;Linq-in-Rust&lt;/a&gt; - Macro and methods for C#-LINQ-like expressions. &lt;a href="https://github.com/StardustDL/Linq-in-Rust/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/StardustDL/Linq-in-Rust/workflows/CI/badge.svg?branch=master" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Markup language&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;CommonMark 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/pulldown-cmark/pulldown-cmark"&gt;pulldown-cmark/pulldown-cmark&lt;/a&gt; - &lt;a href="https://commonmark.org/"&gt;CommonMark&lt;/a&gt; parser&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/insomnimus/tidier"&gt;insomnimus/tidier&lt;/a&gt; [&lt;a href="https://crates.io/crates/tidier"&gt;tidier&lt;/a&gt;] - A library to format HTML, XHTML and XML documents. &lt;a href="https://github.com/insomnimus/tidier/actions"&gt;&lt;img src="https://github.com/insomnimus/tidier/actions/workflows/main.yml/badge.svg?branch=main" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mobile&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Android / iOS 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ivnsch/rust_android_ios"&gt;ivnsch/rust_android_ios&lt;/a&gt; - An example of using a shared lib for Android and iOS using rust-swig and cbindgen respectively.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Generic 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Geal/rust_on_mobile"&gt;Geal/rust_on_mobile&lt;/a&gt; - iOS CocoaPods / Android JNI&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/redbadger/crux"&gt;redbadger/crux&lt;/a&gt; [&lt;a href="https://crates.io/crates/crux_core"&gt;crux_core&lt;/a&gt;] - Cross-platform app development. Crux helps you share your app's business logic and behavior across mobile (iOS/Android) and web - as a single reusable core. &lt;a href="https://github.com/redbadger/crux/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/redbadger/crux/build.yaml" alt="Build status" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;iOS 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/TimNN/cargo-lipo"&gt;TimNN/cargo-lipo&lt;/a&gt; - A cargo lipo subcommand which automatically creates a universal library for use with your iOS application.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Network programming&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bluetooth 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bluez/bluer"&gt;bluez/bluer&lt;/a&gt; [&lt;a href="https://crates.io/crates/bluer"&gt;bluer&lt;/a&gt;] - Official BlueZ bindings. &lt;a href="https://github.com/bluez/bluer/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/bluez/bluer/actions/workflows/rust.yml/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;CoAP 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Covertness/coap-rs"&gt;Covertness/coap-rs&lt;/a&gt; - A &lt;a href="https://datatracker.ietf.org/doc/html/rfc7252"&gt;Constrained Application Protocol(CoAP)&lt;/a&gt; library.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Docker 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/fussybeaver/bollard"&gt;fussybeaver/bollard&lt;/a&gt; - Docker daemon API&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;FTP 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mattnenterprise/rust-ftp"&gt;mattnenterprise/rust-ftp&lt;/a&gt; - an &lt;a href="https://en.wikipedia.org/wiki/File_Transfer_Protocol"&gt;FTP&lt;/a&gt; client&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;gRPC 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hyperium/tonic"&gt;hyperium/tonic&lt;/a&gt; - A native gRPC client &amp;amp; server implementation with async/await support &lt;a href="https://crates.io/crates/tonic"&gt;&lt;img src="https://img.shields.io/crates/v/tonic" alt="Crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tikv/grpc-rs"&gt;tikv/grpc-rs&lt;/a&gt; - The gRPC library built on C Core library and futures&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;HTTP 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Orange-OpenSource/hurl"&gt;Hurl&lt;/a&gt; - Run and test HTTP requests with plain text and libcurl &lt;a href="https://github.com/Orange-OpenSource/hurl/actions"&gt;&lt;img src="https://github.com/Orange-OpenSource/hurl/workflows/CI/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;IPNetwork 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/achanda/ipnetwork"&gt;achanda/ipnetwork&lt;/a&gt; - A library to work with IP networks&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/canndrew/netsim"&gt;candrew/netsim&lt;/a&gt; - A library for network simulation and testing&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Low level 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/actix/actix"&gt;actix/actix&lt;/a&gt; - Actor library&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/dylanmckay/protocol"&gt;dylanmckay/protocol&lt;/a&gt; - Custom TCP/UDP protocol definitions&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/libpnet/libpnet"&gt;libpnet/libpnet&lt;/a&gt; - A cross-platform, low level networking&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/smoltcp-rs/smoltcp"&gt;smoltcp-rs/smoltcp&lt;/a&gt; - A standalone, event-driven TCP/IP stack that is designed for bare-metal, real-time systems&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;message-io 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lemunozm/message-io"&gt;lemunozm/message-io&lt;/a&gt; - Event-driven message library to build network applications easy and fast. Supports TCP, UDP and WebSockets. &lt;a href="https://github.com/lemunozm/message-io/actions?query=workflow%3A%22message-io+ci%22"&gt;&lt;img src="https://img.shields.io/github/workflow/status/lemunozm/message-io/message-io%20ci" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;MQTT 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bytebeamio/rumqtt"&gt;bytebeamio/rumqtt&lt;/a&gt; - A library for developers to build applications that communicate with the &lt;a href="https://mqtt.org"&gt;MQTT protocol&lt;/a&gt; over TCP and WebSockets, with or without TLS. &lt;a href="https://github.com/bytebeamio/rumqtt/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/bytebeamio/rumqtt/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build and Test" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rmqtt/rmqtt"&gt;rmqtt/rmqtt&lt;/a&gt; - MQTT Server/MQTT Broker - Scalable Distributed MQTT Message Broker for IoT in the 5G Era&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;NanoMsg 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/thehydroimpulse/nanomsg.rs"&gt;thehydroimpulse/nanomsg.rs&lt;/a&gt; - &lt;a href="https://nanomsg.org/"&gt;nanomsg&lt;/a&gt; bindings&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;NATS 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/nats-io/nats.rs"&gt;nats-io/nats.rs&lt;/a&gt; - Client for NATS, the cloud native messaging system. &lt;a href="https://github.com/nats-io/nats.rs/actions"&gt;&lt;img src="https://github.com/nats-io/nats.rs/workflows/Rust/badge.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Nng 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://gitlab.com/neachdainn/nng-rs"&gt;neachdainn/nng-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/nng"&gt;Nng&lt;/a&gt;] - &lt;a href="https://nng.nanomsg.org/index.html"&gt;Nng (nanomsg v2)&lt;/a&gt; bindings &lt;a href="https://gitlab.com/neachdainn/nng-rs/-/pipelines"&gt;&lt;img src="https://gitlab.com/neachdainn/nng-rs/badges/master/pipeline.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;NNTP 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mattnenterprise/rust-nntp"&gt;mattnenterprise/rust-nntp&lt;/a&gt; [&lt;a href="https://crates.io/crates/nntp"&gt;nntp&lt;/a&gt;] - an &lt;a href="https://en.wikipedia.org/wiki/Network_News_Transfer_Protocol"&gt;NNTP&lt;/a&gt; client&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;P2P 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/libp2p/rust-libp2p"&gt;libp2p/rust-libp2p&lt;/a&gt; - Implementation of libp2p networking stack. &lt;a href="https://app.circleci.com/pipelines/github/libp2p/rust-libp2p"&gt;&lt;img src="https://circleci.com/gh/libp2p/rust-libp2p.svg?style=svg" alt="Circle CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/n0-computer/iroh"&gt;n0-computer/iroh&lt;/a&gt; [&lt;a href="https://crates.io/crates/iroh"&gt;iroh&lt;/a&gt;] - crate for building on direct connections between devices &lt;a href="https://github.com/n0-computer/iroh/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/n0-computer/iroh/actions/workflows/ci.yml/badge.svg?branch=main" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;POP3 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mattnenterprise/rust-pop3"&gt;mattnenterprise/rust-pop3&lt;/a&gt; [&lt;a href="https://crates.io/crates/pop3"&gt;pop3&lt;/a&gt;] - A &lt;a href="https://en.wikipedia.org/wiki/Post_Office_Protocol"&gt;POP3&lt;/a&gt; client&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;QUIC 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/aws/s2n-quic"&gt;aws/s2n-quic&lt;/a&gt; - An implementation of the IETF QUIC protocol &lt;img src="https://img.shields.io/github/actions/workflow/status/aws/s2n-quic/ci.yml?branch=main" alt="ci" /&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/cloudflare/quiche"&gt;cloudflare/quiche&lt;/a&gt; - cloudflare implementation of the QUIC transport protocol and HTTP/3 &lt;img src="https://img.shields.io/github/actions/workflow/status/cloudflare/quiche/stable.yml?branch=master" alt="build" /&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mozilla/neqo"&gt;mozilla/neqo&lt;/a&gt; - an Implementation of QUIC&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/quinn-rs/quinn"&gt;quinn-rs/quinn&lt;/a&gt; - Futures-based QUIC implementation &lt;a href="https://dev.azure.com/dochtman/Projects/_build"&gt;&lt;img src="https://dev.azure.com/dochtman/Projects/_apis/build/status/Quinn?branchName=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Tencent/tquic"&gt;tencent/tquic&lt;/a&gt; - A high-performance, lightweight, and cross-platform QUIC library &lt;a href="https://github.com/Tencent/tquic/actions/workflows/rust.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/tencent/tquic/rust.yml" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Raknet 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/b23r0/rust-raknet"&gt;b23r0/rust-raknet&lt;/a&gt; - RakNet Protocol implementation &lt;a href="https://github.com/b23r0/rust-raknet/actions/workflows/rust.yml"&gt;&lt;img src="https://img.shields.io/github/workflow/status/b23r0/rust-raknet/Rust" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;RPC 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ENQT-GmbH/remoc"&gt;ENQT-GmbH/remoc&lt;/a&gt; [&lt;a href="https://crates.io/crates/remoc"&gt;remoc&lt;/a&gt;] - Remoc provides channels (broadcast, mpsc, oneshot, watch) similar to Tokio's and trait calling over any remote transport. &lt;a href="https://github.com/ENQT-GmbH/remoc/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/ENQT-GmbH/remoc/actions/workflows/rust.yml/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/smallnest/rpcx-rs"&gt;smallnest/rpcx-rs&lt;/a&gt; - A RPC library for developing microservices in easy and simple way.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;SIP 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/restsend/rsipstack"&gt;restsend/rsipstack&lt;/a&gt; - A RFC 3261 compliant SIP stack&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Socket.io 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/1c3t3a/rust-socketio"&gt;1c3t3a/rust-socketio&lt;/a&gt; [&lt;a href="https://crates.io/crates/rust_socketio"&gt;rust_socketio&lt;/a&gt;] - an implementation of a &lt;a href="https://socket.io"&gt;socket.io&lt;/a&gt; client written in Rust. &lt;a href="https://github.com/1c3t3a/rust-socketio/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/1c3t3a/rust-socketio/actions/workflows/build.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;SSH 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/alexcrichton/ssh2-rs"&gt;alexcrichton/ssh2-rs&lt;/a&gt; - &lt;a href="https://libssh2.org/"&gt;libssh2&lt;/a&gt; bindings&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://pijul.org/thrussh"&gt;Thrussh&lt;/a&gt; [&lt;a href="https://crates.io/crates/thrussh"&gt;thrussh&lt;/a&gt;] - an SSH library, backed by &lt;a href="https://doc.libsodium.org/"&gt;libsodium&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Stomp 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/zslayton/stomp-rs"&gt;zslayton/stomp-rs&lt;/a&gt; - A &lt;a href="http://stomp.github.io/stomp-specification-1.2.html"&gt;STOMP 1.2&lt;/a&gt; client implementation&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;VPN 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/DefGuard/wireguard-rs"&gt;defguard/wireguard-rs&lt;/a&gt; - A multi-platform library providing a unified high-level API for managing WireGuard interfaces using native OS kernel and userspace WireGuard protocol implementations&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Zenoh 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/eclipse-zenoh-flow/zenoh-flow"&gt;eclipse-zenoh-flow/zenoh-flow&lt;/a&gt; - A declarative framework for computations that span from the &lt;em&gt;Cloud&lt;/em&gt; to the &lt;em&gt;Thing&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/eclipse-zenoh/zenoh"&gt;eclipse-zenoh/zenoh&lt;/a&gt; - Zero Overhead Network Protocol&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ZeroMQ 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/erickt/rust-zmq"&gt;erickt/rust-zmq&lt;/a&gt; - &lt;a href="https://zeromq.org/"&gt;ZeroMQ&lt;/a&gt; bindings&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Parsing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/0xlane/pe-sign"&gt;0xlane/pe-sign&lt;/a&gt; &lt;a href="https://crates.io/crates/pe-sign"&gt;[pe-sign]&lt;/a&gt; - A cross-platform rust no-std library for verifying and extracting signature information from PE files. &lt;a href="https://crates.io/crates/pe-sign"&gt;&lt;img src="https://img.shields.io/crates/v/pe-sign" alt="crates.io" /&gt;&lt;/a&gt; &lt;a href="https://github.com/0xlane/pe-sign/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/0xlane/pe-sign/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cchexcode/wavefront_rs"&gt;cchexcode/wavefront_rs&lt;/a&gt; - A parser for the Wavefront OBJ format. &lt;a href="https://crates.io/crates/wavefront_rs"&gt;&lt;img src="https://img.shields.io/crates/v/wavefront_rs.svg?sanitize=true" alt="crates.io" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/wavefront_rs"&gt;&lt;img src="https://img.shields.io/crates/d/wavefront_rs?label=crates.io%20downloads" alt="crates.io" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cchexcode/wavefront_rs/actions"&gt;&lt;img src="https://github.com/cchexcode/wavefront_rs/workflows/pipeline/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/comex/rust-shlex"&gt;comex/rust-shlex&lt;/a&gt; [&lt;a href="https://crates.io/crates/shlex"&gt;shlex&lt;/a&gt;] - Split a string into shell words, like Python's shlex. &lt;a href="https://github.com/comex/rust-shlex/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/comex/rust-shlex/actions/workflows/test.yml/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Eliah-Lakhin/lady-deirdre"&gt;Eliah-Lakhin/lady-deirdre&lt;/a&gt; - A framework for new programming languages and LSP servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Folyd/robotstxt"&gt;Folyd/robotstxt&lt;/a&gt; - Port of Google's robots.txt parser and matcher C++ library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/freestrings/jsonpath"&gt;freestrings/jsonpath&lt;/a&gt; - &lt;a href="https://goessner.net/articles/JsonPath/"&gt;JsonPath&lt;/a&gt; engine. Webassembly and Javascript support too&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/stl_io"&gt;hmeyer/stl_io&lt;/a&gt; - A parser for STL (STereoLithography) files&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/igumnoff/shiva"&gt;igumnoff/shiva&lt;/a&gt; - Shiva library: Implementation in Rust of a parser and generator for documents of any type (Plain text, Markdown, HTML, PDF and etc)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kevinmehall/rust-peg"&gt;kevinmehall/rust-peg&lt;/a&gt; - Parsing Expression Grammar (PEG) parser generator&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lalrpop/lalrpop"&gt;lalrpop/lalrpop&lt;/a&gt; - LR(1) parser generator&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/m4rw3r/chomp"&gt;m4rw3r/chomp&lt;/a&gt; - A fast monadic-style parser combinator&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Marwes/combine"&gt;Marwes/combine&lt;/a&gt; - parser combinator library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nrc/zero"&gt;nrc/zero&lt;/a&gt; [&lt;a href="https://crates.io/crates/zero/"&gt;zero&lt;/a&gt;] - zero-allocation parsing of binary data&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pest-parser/pest"&gt;pest-parser/pest&lt;/a&gt; - The Elegant Parser&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ptal/oak"&gt;ptal/oak&lt;/a&gt; - A typed PEG parser generator (compiler plugin)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-bakery/nom"&gt;rust-bakery/nom&lt;/a&gt; - parser combinator library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s-panferov/queryst"&gt;s-panferov/queryst&lt;/a&gt; - A query string parsing library inspired by &lt;a href="https://github.com/ljharb/qs#readme"&gt;gs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/softdevteam/grmtools/"&gt;softdevteam/grmtools&lt;/a&gt; - A LR parser with better error correction&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tree-sitter/tree-sitter"&gt;tree-sitter/tree-sitter&lt;/a&gt; - A parser generator tool and an incremental parsing library geared towards programming tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Peripherals&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fingerprint reader 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/alvaroparker/libfprint-rs"&gt;alvaroparker/libfprint-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/libfprint-rs"&gt;libfprint-rs&lt;/a&gt;] - Libfprint-rs provides a wrapper around the Linux libfprint library.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Serial Port 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/serialport/serialport-rs"&gt;serialport/serialport-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/serialport"&gt;serialport&lt;/a&gt;] - A cross-platform library that provides access to a serial port&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Platform specific&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Cross-platform 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/iddm/thread-priority/"&gt;iddm/thread-priority&lt;/a&gt; - Simple, crossplatform thread priority management. &lt;a href="https://github.com/iddm/thread-priority/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/iddm/thread-priority/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/thread-priority"&gt;&lt;img src="https://img.shields.io/crates/v/thread-priority.svg?sanitize=true" alt="Crates badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/battery"&gt;svartalf/rust-battery&lt;/a&gt; - Cross-platform information about the notebook batteries&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;FreeBSD 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/fubarnetes/libjail-rs/"&gt;fubarnetes/libjail-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/jail"&gt;jail&lt;/a&gt;] - FreeBSD jail library&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Linux 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hannobraun/inotify-rs"&gt;hannobraun/inotify-rs&lt;/a&gt; - &lt;a href="https://en.wikipedia.org/wiki/Inotify"&gt;inotify&lt;/a&gt; bindings &lt;a href="https://github.com/hannobraun/inotify-rs/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/hannobraun/inotify-rs/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="Rust" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/pop-os/distinst/"&gt;pop-os/distinst&lt;/a&gt; - Linux distribution installer&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/yaa110/rust-iptables"&gt;yaa110/rust-iptables&lt;/a&gt; [&lt;a href="https://crates.io/crates/iptables"&gt;iptables&lt;/a&gt;] - &lt;a href="https://www.netfilter.org/projects/iptables/index.html"&gt;iptables&lt;/a&gt; bindings&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Unix-like 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/nix-rust/nix"&gt;nix-rust/nix&lt;/a&gt; - Unix-like API bindings &lt;a href="https://cirrus-ci.com/github/nix-rust/nix"&gt;&lt;img src="https://api.cirrus-ci.com/github/nix-rust/nix.svg?sanitize=true" alt="Cirrus Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bytecodealliance/rustix"&gt;rustix&lt;/a&gt; - Safe bindings to POSIX/Unix/Linux/Winsock2 syscalls &lt;a href="https://github.com/bytecodealliance/rustix/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/bytecodealliance/rustix/workflows/CI/badge.svg?sanitize=true" alt="Actions Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/zargony/fuse-rs"&gt;zargony/fuse-rs&lt;/a&gt; - &lt;a href="https://github.com/libfuse/libfuse"&gt;FUSE&lt;/a&gt; bindings&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Windows 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/microsoft/windows-rs"&gt;microsoft/windows-rs&lt;/a&gt; - Rust for Windows &lt;a href="https://github.com/microsoft/windows-rs/actions"&gt;&lt;img src="https://github.com/microsoft/windows-rs/workflows/CI/badge.svg?sanitize=true" alt="Actions Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/retep998/winapi-rs"&gt;retep998/winapi-rs&lt;/a&gt; - Windows API bindings &lt;a href="https://github.com/retep998/winapi-rs/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/retep998/winapi-rs/actions/workflows/rust.yml/badge.svg?branch=dev" alt="Rust" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Reverse engineering&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/binarly-io/idalib"&gt;binarly-io/idalib&lt;/a&gt; [&lt;a href="https://crates.io/crates/idalib"&gt;idalib&lt;/a&gt;] - Rust bindings for the IDA SDK, enabling the development of standalone analysis tools using IDA v9.0’s idalib&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/encounter/objdiff"&gt;objdiff&lt;/a&gt; - A local diffing tool for decompilation projects&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Scripting&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://crates.io/keywords/scripting"&gt;scripting&lt;/a&gt;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rustq/3body-lang"&gt;3body-lang&lt;/a&gt; - The Three Body Language&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cel-rust/cel-rust"&gt;cel-rust&lt;/a&gt; [&lt;a href="https://crates.io/crates/cel-interpreter"&gt;cel-interpreter&lt;/a&gt;] - Common expression language parser and interpreter&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/duckscript"&gt;duckscript&lt;/a&gt; - &lt;a href="https://github.com/sagiegurari/duckscript"&gt;Simple, extendable and embeddable scripting language.&lt;/a&gt; &lt;a href="https://github.com/sagiegurari/duckscript/actions"&gt;&lt;img src="https://github.com/sagiegurari/duckscript/workflows/CI/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/facebook/starlark-rust"&gt;facebook/starlark-rust&lt;/a&gt; - A small, deterministic, thread-safe language with Python syntax&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fleabitdev/glsp"&gt;fleabitdev/gamelisp&lt;/a&gt; - A Lisp-like scripting language for game development&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/giraffekey/xylo"&gt;giraffekey/xylo&lt;/a&gt; [&lt;a href="https://crates.io/crates/xylo-lang"&gt;xylo-lang&lt;/a&gt;] - A functional programming language for procedural art. &lt;a href="https://github.com/giraffekey/xylo/actions"&gt;&lt;img src="https://github.com/giraffekey/xylo/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gluon-lang/gluon"&gt;gluon-lang/gluon&lt;/a&gt; - A small, statically-typed, functional programming language&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kcl-lang/kcl"&gt;kcl&lt;/a&gt; - A constraint-based record &amp;amp; functional language mainly used in configuration and policy scenarios.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/metacall/core"&gt;metacall/core&lt;/a&gt; [&lt;a href="https://crates.io/crates/metacall"&gt;metacall&lt;/a&gt;] - Cross-platform Polyglot Runtime which supports NodeJS, JavaScript, TypeScript, Python, Ruby, C#, Wasm, Java, Cobol and more. &lt;a href="https://gitlab.com/metacall/core"&gt;&lt;img src="https://gitlab.com/metacall/core/badges/master/pipeline.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mun-lang/mun"&gt;mun&lt;/a&gt; - A compiled, statically-typed scripting language with first class hot reloading support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/murarth/ketos"&gt;murarth/ketos&lt;/a&gt; - A Lisp dialect functional programming language serving as a scripting and extension language for rust&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PistonDevelopers/dyon"&gt;PistonDevelopers/dyon&lt;/a&gt; - A rusty dynamically typed scripting language&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rhaiscript/rhai"&gt;rhaiscript/rhai&lt;/a&gt; - A tiny and fast embedded scripting language resembling a combination of JavaScript and Rust &lt;a href="https://github.com/rhaiscript/rhai/actions"&gt;&lt;img src="https://github.com/rhaiscript/rhai/workflows/Build/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rune-rs/rune"&gt;rune-rs/rune&lt;/a&gt; - An embeddable dynamic programming language&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trynova/nova"&gt;trynova/nova&lt;/a&gt; - JavaScript engine written entirely in Rust&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Simulation&lt;/h3&gt; 
&lt;p&gt;[&lt;a href="https://crates.io/keywords/simulation"&gt;simulation&lt;/a&gt;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/nyx-space"&gt;nyx-space&lt;/a&gt; - High fidelity, fast, reliable and validated astrodynamical toolkit library, used for spacecraft mission design and orbit determination &lt;a href="https://gitlab.com/nyx-space/nyx/-/pipelines"&gt;&lt;img src="https://gitlab.com/nyx-space/nyx/badges/master/pipeline.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Social networks&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Telegram 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/FedericoBruzzone/tdlib-rs"&gt;tdilb-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/tdlib-rs"&gt;tdilb-rs&lt;/a&gt;] - Crossplatform Rust wrapper around the Telegram Database Library (TDLib) &lt;a href="https://github.com/FedericoBruzzone/tdlib-rs/actions/workflows/ci-linux.yml"&gt;&lt;img src="https://github.com/FedericoBruzzone/tdlib-rs/actions/workflows/ci-linux.yml/badge.svg?sanitize=true" alt="CI Linux" /&gt;&lt;/a&gt; &lt;a href="https://github.com/FedericoBruzzone/tdlib-rs/actions/workflows/ci-macos.yml"&gt;&lt;img src="https://github.com/FedericoBruzzone/tdlib-rs/actions/workflows/ci-macos.yml/badge.svg?sanitize=true" alt="CI macOS" /&gt;&lt;/a&gt; &lt;a href="https://github.com/FedericoBruzzone/tdlib-rs/actions/workflows/ci-windows.yml"&gt;&lt;img src="https://github.com/FedericoBruzzone/tdlib-rs/actions/workflows/ci-windows.yml/badge.svg?sanitize=true" alt="CI Windows" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;System&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ardaku/whoami"&gt;ardaku/whoami&lt;/a&gt; [&lt;a href="https://crates.io/crates/whoami"&gt;whoami&lt;/a&gt;] - crate to get the current user and environment. &lt;a href="https://github.com/ardaku/whoami/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/ardaku/whoami/actions/workflows/ci.yml/badge.svg?branch=stable" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GuillaumeGomez/sysinfo"&gt;GuillaumeGomez/sysinfo&lt;/a&gt; [&lt;a href="https://crates.io/crates/sysinfo"&gt;sysinfo&lt;/a&gt;] - Cross-platform library to fetch system information &lt;a href="https://github.com/GuillaumeGomez/sysinfo/actions/workflows/CI.yml"&gt;&lt;img src="https://github.com/GuillaumeGomez/sysinfo/actions/workflows/CI.yml/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/navidys/procsys"&gt;navidys/procsys&lt;/a&gt; [&lt;a href="https://crates.io/crates/procsys"&gt;procsys&lt;/a&gt;] - A library to retrieve system, kernel, and process metrics from the pseudo-filesystems /proc and /sys.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Phate6660/nixinfo"&gt;Phate6660/nixinfo&lt;/a&gt; [&lt;a href="https://crates.io/crates/nixinfo"&gt;nixinfo&lt;/a&gt;] - A lib crate for gathering system info such as cpu, distro, environment, kernel, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sorairolake/sysexits-rs"&gt;sorairolake/sysexits-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/sysexits"&gt;sysexits&lt;/a&gt;] - The system exit codes as defined by &lt;a href="https://manpages.ubuntu.com/manpages/lunar/man3/sysexits.h.3head.html"&gt;&lt;code&gt;&amp;lt;sysexits.h&amp;gt;&lt;/code&gt;&lt;/a&gt;. &lt;a href="https://github.com/sorairolake/sysexits-rs/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/sorairolake/sysexits-rs/workflows/CI/badge.svg?branch=develop" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Task scheduling&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BinChengZhao/delay-timer"&gt;delay-timer&lt;/a&gt; - Time-manager of delayed tasks. Like crontab, but asynchronous tasks are possible. &lt;a href="https://github.com/BinChengZhao/delay-timer/actions"&gt;&lt;img src="https://github.com/BinChengZhao/delay-timer/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="Build" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rustmailer/persistent-scheduler"&gt;persistent-scheduler&lt;/a&gt; [&lt;a href="https://crates.io/crates/persistent-scheduler"&gt;persistent-scheduler&lt;/a&gt;] - A high-performance task scheduling system built with Tokio, offering task persistence, repeatable tasks, and Cron-based scheduling for reliable time-based operations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Template engine&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Handlebars 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/sunng87/handlebars-rust"&gt;sunng87/handlebars-rust&lt;/a&gt; - Handlebars template engine with inheritance, custom helper support.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/zzau13/yarte"&gt;zzau13/yarte&lt;/a&gt; - Yarte stands for &lt;strong&gt;Y&lt;/strong&gt;et &lt;strong&gt;A&lt;/strong&gt;nother &lt;strong&gt;R&lt;/strong&gt;ust &lt;strong&gt;T&lt;/strong&gt;emplate &lt;strong&gt;E&lt;/strong&gt;ngine, is the fastest template engine.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;HTML 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/askama-rs/askama"&gt;askama&lt;/a&gt; - template rendering engine based on Jinja&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/kaj/ructe"&gt;kaj/ructe&lt;/a&gt; - HTML template system&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Keats/tera"&gt;Keats/tera&lt;/a&gt; - template engine based on Jinja2 and the Django template language. &lt;a href="https://github.com/Keats/tera/actions"&gt;&lt;img src="https://github.com/Keats/tera/workflows/ci/badge.svg?branch=master" alt="Actions Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lambda-fairy/maud"&gt;lambda-fairy/maud&lt;/a&gt; - compile-time HTML templates&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Stebalien/horrorshow-rs"&gt;Stebalien/horrorshow-rs&lt;/a&gt; - compile-time HTML templates&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Mustache 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rustache/rustache"&gt;rustache/rustache&lt;/a&gt; - a Rust implementation of the Mustache spec&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Text processing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/becheran/wildmatch"&gt;becheran/wildmatch&lt;/a&gt; [&lt;a href="https://crates.io/crates/wildmatch"&gt;wildmatch&lt;/a&gt;] - Simple string matching with questionmark- and star-wildcard operator &lt;a href="https://github.com/becheran/wildmatch/actions"&gt;&lt;img src="https://github.com/becheran/wildmatch/workflows/Build/badge.svg?branch=master" alt="Actions Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BurntSushi/suffix"&gt;BurntSushi/suffix&lt;/a&gt; - Linear time suffix array construction (with Unicode support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BurntSushi/tabwriter"&gt;BurntSushi/tabwriter&lt;/a&gt; - Elastic tab stops (i.e., text column alignment)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/probablykasper/cpc"&gt;cpc&lt;/a&gt; - Parses and calculates strings of math with support for units and unit conversion, from &lt;code&gt;1+2&lt;/code&gt; to &lt;code&gt;1% of round(1 lightyear / 14!s to km/h)&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Daniel-Liu-c0deb0t/triple_accel"&gt;Daniel-Liu-c0deb0t/triple_accel&lt;/a&gt; [&lt;a href="https://crates.io/crates/triple_accel"&gt;triple_accel&lt;/a&gt;] - Rust edit distance routines accelerated using SIMD; supports fast Hamming, Levenshtein, restricted Damerau-Levenshtein, etc. distance calculations and string search &lt;a href="https://github.com/Daniel-Liu-c0deb0t/triple_accel/actions"&gt;&lt;img src="https://github.com/Daniel-Liu-c0deb0t/triple_accel/workflows/Test/badge.svg?branch=master" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fancy-regex/fancy-regex"&gt;fancy-regex/fancy-regex&lt;/a&gt; [&lt;a href="https://crates.io/crates/fancy-regex"&gt;fancy-regex&lt;/a&gt;] - Regular expressions implementation designed to support a relatively rich set of features such as look-around and backtracking. &lt;a href="https://crates.io/crates/fancy-regex"&gt;&lt;img src="https://img.shields.io/crates/v/fancy-regex.svg?sanitize=true" alt="crates" /&gt;&lt;/a&gt; &lt;a href="https://github.com/fancy-regex/fancy-regex/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/fancy-regex/fancy-regex/workflows/ci/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/greyblake/whatlang-rs"&gt;greyblake/whatlang-rs&lt;/a&gt; - Natural language detection library based on trigrams&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Lucretiel/joinery"&gt;Lucretiel/joinery&lt;/a&gt; [&lt;a href="https://crates.io/crates/joinery"&gt;joinery&lt;/a&gt;] - Generic string + iterable joining&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mgeisler/textwrap"&gt;mgeisler/textwrap&lt;/a&gt; [&lt;a href="https://crates.io/crates/textwrap"&gt;textwrap&lt;/a&gt;] - Word wrap text (with support for hyphenation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/null8626/decancer"&gt;null8626/decancer&lt;/a&gt; [&lt;a href="https://crates.io/crates/decancer"&gt;decancer&lt;/a&gt;] - A tiny package that removes common unicode confusables/homoglyphs from strings. &lt;a href="https://crates.io/crates/decancer"&gt;&lt;img src="https://img.shields.io/crates/v/decancer.svg?sanitize=true" alt="crates" /&gt;&lt;/a&gt; &lt;a href="https://github.com/null8626/decancer/actions/workflows/CI.yml"&gt;&lt;img src="https://github.com/null8626/decancer/workflows/CI/badge.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ps1dr3x/easy_reader"&gt;ps1dr3x/easy_reader&lt;/a&gt; - A reader that allows forwards, backwards and random navigations through the lines of huge files without consuming iterators&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pwoolcoc/ngrams"&gt;pwoolcoc/ngrams&lt;/a&gt; [&lt;a href="https://crates.io/crates/ngrams"&gt;ngrams&lt;/a&gt;] - Construct &lt;a href="https://en.wikipedia.org/wiki/N-gram"&gt;n-grams&lt;/a&gt; from arbitrary iterators&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-lang/regex"&gt;rust-lang/regex&lt;/a&gt; - Regular expressions (RE2 style)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/strsim"&gt;strsim-rs&lt;/a&gt; - String similarity metrics&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yaa110/rake-rs"&gt;yaa110/rake-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/rake"&gt;rake&lt;/a&gt;] - Multilingual implementation of RAKE algorithm for Rust&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Text search&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andylokandy/simsearch-rs"&gt;andylokandy/simsearch-rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/simsearch"&gt;simsearch&lt;/a&gt;] - A simple and lightweight fuzzy search engine that works in memory, searching for similar strings&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BurntSushi/fst"&gt;BurntSushi/fst&lt;/a&gt; [&lt;a href="https://crates.io/crates/fst"&gt;fst&lt;/a&gt;] - a fast implementation of ordered sets and maps using finite state machines&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CurrySoftware/perlin"&gt;CurrySoftware/perlin&lt;/a&gt; [&lt;a href="https://crates.io/crates/perlin"&gt;perlin&lt;/a&gt;] - A lazy, zero-allocation and data-agnostic Information Retrieval library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/meilisearch/MeiliSearch"&gt;meilisearch/MeiliSearch&lt;/a&gt; - Ultra relevant, instant and typo-tolerant full-text search API. &lt;a href="https://github.com/meilisearch/MeiliSearch/actions"&gt;&lt;img src="https://github.com/meilisearch/MeiliSearch/workflows/Cargo%20test/badge.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paradedb/paradedb/tree/dev/pg_search"&gt;pg_search&lt;/a&gt; - PostgreSQL extension that enables full-text search over SQL tables using the BM25 algorithm, the state-of-the-art ranking function for full-text search.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SeekStorm/SeekStorm"&gt;SeekStorm&lt;/a&gt; [&lt;a href="https://crates.io/crates/seekstorm"&gt;SeekStorm&lt;/a&gt;] - sub-millisecond full-text search library &amp;amp; multi-tenancy server in Rust&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/quickwit-oss/tantivy"&gt;tantivy&lt;/a&gt; [&lt;a href="https://crates.io/crates/tantivy"&gt;tantivy&lt;/a&gt;] - A horse-speed full-text search engine library written in Rust. &lt;a href="https://github.com/quickwit-oss/tantivy/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/quickwit-oss/tantivy/actions/workflows/test.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Unsafe&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://crates.io/crates/zerocopy"&gt;zerocopy&lt;/a&gt; - "Zerocopy makes zero-cost memory manipulation effortless. We write &lt;code&gt;unsafe&lt;/code&gt; so you don’t have to."&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Video&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nathanbabcock/ffmpeg-sidecar"&gt;ffmpeg-sidecar&lt;/a&gt; - Wrap a standalone FFmpeg binary in an intuitive Iterator interface. &lt;a href="https://github.com/nathanbabcock/ffmpeg-sidecar/actions"&gt;&lt;img src="https://github.com/nathanbabcock/ffmpeg-sidecar/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Virtualization&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/beneills/quantum"&gt;beneills/quantum&lt;/a&gt; - Advanced quantum computer simulator&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bytecodealliance/wasmtime"&gt;bytecodealliance/wasmtime&lt;/a&gt; - A standalone runtime for WebAssembly &lt;a href="https://github.com/bytecodealliance/wasmtime/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/bytecodealliance/wasmtime/workflows/CI/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chromium.googlesource.com/chromiumos/platform/crosvm/"&gt;chromium/chromiumos/platform/crosvm&lt;/a&gt; - CrOSVM Enables Chrome OS to run Linux apps inside a fast, secure virtualized environment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oxidecomputer/propolis"&gt;oxidecomputer/propolis&lt;/a&gt; - Userspace program for illumos bhyve kernel modules&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/saurvs/hypervisor-rs"&gt;saurvs/hypervisor-rs&lt;/a&gt; - Hardware-accelerated virtualization on OS X&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Web programming&lt;/h3&gt; 
&lt;p&gt;See also &lt;a href="https://www.arewewebyet.org"&gt;Are we web yet?&lt;/a&gt; and &lt;a href="https://github.com/flosse/rust-web-framework-comparison"&gt;Rust web framework comparison&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Client-side / WASM 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/cargo-web"&gt;cargo-web&lt;/a&gt; - A Cargo subcommand for the client-side Web&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/leptos-rs/leptos"&gt;leptos&lt;/a&gt; - Leptos is a full-stack, isomorphic web framework leveraging fine-grained reactivity to build declarative user interfaces.&lt;a href="https://crates.io/crates/leptos"&gt;&lt;img src="https://img.shields.io/crates/v/create-rust-app.svg?sanitize=true" alt="crate" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ivanceras/sauron"&gt;sauron&lt;/a&gt; - Client side web framework which closely adheres to The Elm Architecture.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/seed-rs/seed"&gt;seed&lt;/a&gt; - A framework for creating web apps&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/stdweb"&gt;stdweb&lt;/a&gt; - A standard library for the client-side Web&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LiveDuo/tinyweb"&gt;tinyweb&lt;/a&gt; - A minimal Rust web framework for wasm in 800 lines of code&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/yew"&gt;yew&lt;/a&gt; - A framework for making client web apps&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;HTTP Client 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/0x676e67/wreq"&gt;0x676e67/wreq&lt;/a&gt; - An ergonomic Rust HTTP Client with TLS fingerprint. &lt;a href="https://github.com/0x676e67/wreq/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/0x676e67/wreq/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/wreq"&gt;&lt;img src="https://img.shields.io/crates/v/wreq.svg?logo=rust" alt="crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/alexcrichton/curl-rust"&gt;alexcrichton/curl-rust&lt;/a&gt; - &lt;a href="https://curl.se/libcurl/"&gt;libcurl&lt;/a&gt; bindings&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/async-graphql/async-graphql"&gt;async-graphql&lt;/a&gt; - A GraphQL server library &lt;a href="https://dev.azure.com/graphql-rust/GraphQL%20Rust/_build/latest?definitionId=1"&gt;&lt;img src="https://dev.azure.com/graphql-rust/GraphQL%20Rust/_apis/build/status/graphql-rust.juniper" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/c410-f3r/wtx"&gt;c410-f3r/wtx&lt;/a&gt; - HTTP/2 client framework&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://gitlab.com/Douman/yukikaze"&gt;DoumanAsh/yukikaze&lt;/a&gt; [&lt;a href="https://crates.io/crates/yukikaze"&gt;yukikaze&lt;/a&gt;] - Beautiful and elegant Yukikaze is little HTTP client library based on hyper. &lt;a href="https://gitlab.com/Douman/yukikaze"&gt;&lt;img src="https://gitlab.com/Douman/yukikaze/badges/master/pipeline.svg?sanitize=true" alt="build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ducaale/xh"&gt;ducaale/xh&lt;/a&gt; - Friendly and fast tool for sending HTTP requests &lt;a href="https://crates.io/crates/xh"&gt;&lt;img src="https://img.shields.io/crates/v/create-rust-app.svg?sanitize=true" alt="crate" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ducaale/xh/actions"&gt;&lt;img src="https://github.com/ducaale/xh/workflows/CI/badge.svg?branch=master" alt="GitHub actions Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/graphql-rust/graphql-client"&gt;graphql-client&lt;/a&gt; - Typed, correct GraphQL requests and responses. &lt;a href="https://github.com/graphql-rust/graphql-client/actions"&gt;&lt;img src="https://github.com/graphql-rust/graphql-client/workflows/CI/badge.svg?branch=master" alt="GitHub actions Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hyperium/hyper"&gt;hyperium/hyper&lt;/a&gt; - an HTTP implementation &lt;a href="https://github.com/hyperium/hyper/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/hyperium/hyper/workflows/CI/badge.svg?branch=master" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/plabayo/rama"&gt;plabayo/rama&lt;/a&gt; - A modular service framework to move and transform your network packets, can be used among other things, to build clients with TLS, JA3/JA4, H2 and QUIC/H3 fingerprint impersonation&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/seanmonstar/reqwest"&gt;seanmonstar/reqwest&lt;/a&gt; - an ergonomic HTTP Client.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;HTTP Server 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/actix/actix-web"&gt;actix/actix-web&lt;/a&gt; - A lightweight async web framework with websocket support&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/saru-tora/anansi"&gt;Anansi&lt;/a&gt; - A simple full-stack web framework&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://crates.io/crates/branca"&gt;branca&lt;/a&gt; - Implementation of Branca for Authenticated and Encrypted API tokens.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/c410-f3r/wtx"&gt;c410-f3r/wtx&lt;/a&gt; - Low and high level HTTP/2 server&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/carllerche/tower-web"&gt;carllerche/tower-web&lt;/a&gt; [&lt;a href="https://crates.io/crates/tower-web"&gt;tower-web&lt;/a&gt;] - A fast, boilerplate free, web framework&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/cot-rs/cot"&gt;Cot&lt;/a&gt; - The Rust web framework for lazy developers.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/GildedHonour/frank_jwt"&gt;GildedHonour/frank_jwt&lt;/a&gt; - JSON Web Token implementation.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/gotham-rs/gotham"&gt;Gotham&lt;/a&gt; - A flexible web framework that does not sacrifice safety, security or speed.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/graphul-rs/graphul"&gt;Graphul&lt;/a&gt; - An Express-inspired web framework. &lt;a href="https://crates.io/crates/graphul"&gt;&lt;img src="https://img.shields.io/crates/v/create-rust-app.svg?sanitize=true" alt="crate" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/sunng87/handlebars-rust"&gt;handlebars-rust&lt;/a&gt; - an Iron web framework middleware.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hyperium/hyper"&gt;hyperium/hyper&lt;/a&gt; - an HTTP implementation &lt;a href="https://github.com/hyperium/hyper/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/hyperium/hyper/workflows/CI/badge.svg?branch=master" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/iron/iron"&gt;Iron&lt;/a&gt; - A middleware-based server framework&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/graphql-rust/juniper"&gt;Juniper&lt;/a&gt; - GraphQL server library&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/miketang84/sapper"&gt;miketang84/sapper&lt;/a&gt; - A lightweight web framework built on async hyper.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/nickel-org/nickel.rs/"&gt;Nickel&lt;/a&gt; - inspired by &lt;a href="https://expressjs.com/"&gt;Express&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/plabayo/rama"&gt;plabayo/rama&lt;/a&gt; - A modular service framework to move and transform your network packets, can also be used to fingerprint incoming clients&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/poem-web/poem"&gt;poem-web/poem&lt;/a&gt; - A full-featured and easy-to-use web framework. &lt;a href="https://github.com/poem-web/poem/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/poem-web/poem/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rwf2/Rocket"&gt;Rocket&lt;/a&gt; - Rocket is a web framework with a focus on ease-of-use, expressability, and speed&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rustless/rustless"&gt;Rustless&lt;/a&gt; - A REST-like API micro-framework inspired by &lt;a href="https://github.com/ruby-grape/grape"&gt;Grape&lt;/a&gt; and &lt;a href="https://github.com/hyperium/hyper"&gt;Hyper&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/salvo-rs/salvo"&gt;Salvo&lt;/a&gt; - an easy to use webframework base on hyper and tokio. &lt;a href="https://github.com/salvo-rs/salvo/actions"&gt;&lt;img src="https://github.com/salvo-rs/salvo/actions/workflows/release.yml/badge.svg?sanitize=true" alt="build build" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/richerarc/saphir"&gt;Saphir&lt;/a&gt; - A progressive web framework with low-level control, without the pain.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/seanmonstar/warp"&gt;seanmonstar/warp&lt;/a&gt; - A super-easy, composable, web server framework for warp speeds. &lt;a href="https://crates.io/crates/warp"&gt;&lt;img src="https://img.shields.io/crates/v/create-rust-app.svg?sanitize=true" alt="crate" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/spring-rs/spring-rs"&gt;spring-rs&lt;/a&gt; - spring-rs is a application framework written in rust inspired by java's spring-boot.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tiny-http/tiny-http"&gt;tiny-http&lt;/a&gt; - Low level HTTP server library&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tokio-rs/axum"&gt;tokio/axum&lt;/a&gt; - Ergonomic and modular web framework built with Tokio, Tower, and Hyper &lt;a href="https://github.com/tokio-rs/axum/actions/workflows/CI.yml"&gt;&lt;img src="https://github.com/tokio-rs/axum/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tomaka/rouille"&gt;tomaka/rouille&lt;/a&gt; - Web framework&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/zino-rs/zino"&gt;Zino&lt;/a&gt; - Next-generation framework for composable applications&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Miscellaneous 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/cargonauts-rs/cargonauts"&gt;cargonauts&lt;/a&gt; - A web framework intended for building maintainable, well-factored web apps.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/edezhic/prest"&gt;edezhic/prest&lt;/a&gt; [&lt;a href="https://crates.io/crates/prest"&gt;prest&lt;/a&gt;] - Progressive RESTful framework aimed to simplify fullstack development&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hominee/dyer"&gt;hominee/dyer&lt;/a&gt; [&lt;a href="https://crates.io/crates/dyer"&gt;dyer&lt;/a&gt;] - dyer is designed for reliable, flexible and fast Request-Response based service, including data processing, web-crawling and so on, providing some friendly, flexible, comprehensive features without compromising speed.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/osohq/oso"&gt;osohq/oso&lt;/a&gt; [&lt;a href="https://crates.io/crates/oso"&gt;oso&lt;/a&gt;] - A policy engine for authorization that's embedded in your application. &lt;a href="https://github.com/osohq/oso/actions?query=branch%3Amain+workflow%3ADevelopment"&gt;&lt;img src="https://github.com/osohq/oso/workflows/Development/badge.svg?branch=main" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://gitlab.com/pwoolcoc/soup"&gt;pwoolcoc/soup&lt;/a&gt; [&lt;a href="https://crates.io/crates/soup"&gt;soup&lt;/a&gt;] - A library similar to Python's BeautifulSoup, designed to enable quick and easy manipulation and querying of HTML documents. &lt;a href="https://gitlab.com/pwoolcoc/soup/badges/master/pipeline.svg"&gt;&lt;img src="https://gitlab.com/pwoolcoc/soup/badges/master/pipeline.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://git.sr.ht/~pyrossh/rust-embed"&gt;pyrossh/rust-embed&lt;/a&gt; [&lt;a href="https://crates.io/crates/rust-embed"&gt;rust-embed&lt;/a&gt;] - A macro to embed static assets into the rust binary&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/thewh1teagle/rookie"&gt;rookie&lt;/a&gt; - Load cookies from any browser on any platform. &lt;img src="https://img.shields.io/crates/v/rookie.svg?sanitize=true" alt="crates.io" /&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rust-scraper/scraper"&gt;rust-scraper/scraper&lt;/a&gt; [&lt;a href="https://crates.io/crates/scraper"&gt;scraper&lt;/a&gt;] - HTML parsing and querying with CSS selectors. &lt;a href="https://github.com/rust-scraper/scraper/actions"&gt;&lt;img src="https://github.com/rust-scraper/scraper/actions/workflows/test.yml/badge.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/serenity-rs/serenity"&gt;serenity-rs/serenity&lt;/a&gt; [&lt;a href="https://crates.io/crates/serenity"&gt;serenity&lt;/a&gt;] - A library for the Discord API&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/softprops/openapi"&gt;softprops/openapi&lt;/a&gt; - A library for processing openapi spec files&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/svix/svix-webhooks"&gt;svix/svix-webhooks&lt;/a&gt; [&lt;a href="https://crates.io/crates/svix"&gt;svix&lt;/a&gt;] - A library for sending webhooks and verifying signatures.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://gitlab.com/SnejUgal/tbot"&gt;tbot&lt;/a&gt; [&lt;a href="https://crates.io/crates/tbot"&gt;tbot&lt;/a&gt;] - Make cool Telegram bots easily &lt;a href="https://gitlab.com/SnejUgal/tbot/-/commits/master"&gt;&lt;img src="https://gitlab.com/SnejUgal/tbot/badges/master/pipeline.svg?sanitize=true" alt="pipeline status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/teloxide/teloxide/"&gt;teloxide/teloxide&lt;/a&gt; - An elegant Telegram bots framework &lt;a href="https://github.com/teloxide/teloxide/actions"&gt;&lt;img src="https://github.com/teloxide/teloxide/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tu6ge/valitron"&gt;tu6ge/valitron&lt;/a&gt; [&lt;a href="https://crates.io/crates/valitron"&gt;valitron&lt;/a&gt;] - An ergonomic, functional and configurable validator&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/utkarshkukreti/select.rs"&gt;utkarshkukreti/select.rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/select"&gt;select&lt;/a&gt;] - A library to extract useful data from HTML documents, suitable for web scraping.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/juhaku/utoipa"&gt;Utoipa&lt;/a&gt; - Simple, Fast, Code first and Compile time generated OpenAPI documentation &lt;a href="https://crates.io/crates/utoipa"&gt;&lt;img src="https://img.shields.io/crates/v/utoipa.svg?label=crates.io&amp;amp;color=orange&amp;amp;logo=rust" alt="crates.io" /&gt;&lt;/a&gt; &lt;a href="https://github.com/juhaku/utoipa/actions/workflows/build.yaml"&gt;&lt;img src="https://github.com/juhaku/utoipa/actions/workflows/build.yaml/badge.svg?sanitize=true" alt="Utoipa build" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ProbablyClem/utoipauto"&gt;Utoipauto&lt;/a&gt; - Rust Macros to automate the addition of Paths/Schemas to Utoipa &lt;a href="https://crates.io/crates/utoipauto"&gt;&lt;img src="https://img.shields.io/crates/v/utoipauto.svg?label=crates.io&amp;amp;color=orange&amp;amp;logo=rust" alt="crates.io" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Reverse Proxy 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/sozu-proxy/sozu"&gt;sozu-proxy/sozu&lt;/a&gt; [&lt;a href="https://crates.io/crates/sozu"&gt;sozu&lt;/a&gt;] - A HTTP reverse proxy. &lt;a href="https://github.com/sozu-proxy/sozu/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/sozu-proxy/sozu/actions/workflows/ci.yml/badge.svg?branch=main" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Static Site Generators 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/cobalt-org/cobalt.rs"&gt;cobalt-org/cobalt.rs&lt;/a&gt; - Static site generator &lt;a href="https://dev.azure.com/cobalt-org/cobalt-org/_build?definitionId=2"&gt;&lt;img src="https://dev.azure.com/cobalt-org/cobalt-org/_apis/build/status/cobalt.rs?branchName=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/FuGangqiang/mdblog.rs"&gt;FuGangqiang/mdblog.rs&lt;/a&gt; [&lt;a href="https://crates.io/crates/mdblog"&gt;mdblog&lt;/a&gt;] - Static site generator from markdown files.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/getzola/zola"&gt;getzola/zola&lt;/a&gt; [&lt;a href="https://www.getzola.org/"&gt;zola&lt;/a&gt;] - An opinionated static site generator with everything built-in. &lt;a href="https://dev.azure.com/getzola/zola/_build"&gt;&lt;img src="https://dev.azure.com/getzola/zola/_apis/build/status/getzola.zola?branchName=master" alt="Build Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/grego/blades"&gt;grego/blades&lt;/a&gt; [&lt;a href="https://www.getblades.org/"&gt;blades&lt;/a&gt;] - Blazing fast dead simple static site generator.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/leven-the-blog/leven"&gt;leven-the-blog/leven&lt;/a&gt; [&lt;a href="https://crates.io/crates/leven"&gt;leven&lt;/a&gt;] - A simple, parallelized blog generator.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rochacbruno/marmite/"&gt;rochacbruno/marmite&lt;/a&gt; [&lt;a href="https://marmite.blog/"&gt;Marmite&lt;/a&gt;] - Zero config blog generator&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://datatracker.ietf.org/doc/rfc6455/"&gt;WebSocket&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/c410-f3r/wtx"&gt;c410-f3r/wtx&lt;/a&gt; - Client and server with encryption support.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/housleyjk/ws-rs"&gt;housleyjk/ws-rs&lt;/a&gt; - lightweight, event-driven WebSockets&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/iddm/urlshortener-rs"&gt;iddm/urlshortener-rs&lt;/a&gt; - A very simple urlshortener library. &lt;a href="https://github.com/iddm/urlshortener-rs/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/iddm/urlshortener-rs/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/urlshortener"&gt;&lt;img src="https://img.shields.io/crates/v/urlshortener.svg?sanitize=true" alt="Crates badge" /&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/graphform/ratchet"&gt;ratchet&lt;/a&gt; [&lt;a href="https://crates.io/crates/ratchet_rs"&gt;ratchet_rs&lt;/a&gt;] - Ratchet is a fast, lightweight and fully asynchronous implementation of the WebSocket protocol with support for extensions and Deflate.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/websockets-rs/rust-websocket"&gt;rust-websocket&lt;/a&gt; - A framework for dealing with WebSocket connections (both clients and servers)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/snapview/tungstenite-rs"&gt;snapview/tungstenite-rs&lt;/a&gt; - Lightweight stream-based WebSocket implementation.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/vi/websocat"&gt;vi/websocat&lt;/a&gt; - CLI for interacting with WebSockets, with functionality of Netcat, Curl and Socat.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Registries&lt;/h2&gt; 
&lt;p&gt;A registry allows you to publish your Rust libraries as crate packages, to share them with others publicly and privately.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cenotelie/cratery"&gt;cenotelie/cratery&lt;/a&gt; - A lightweight private cargo registry with batteries included, built for organisations, including features similar to &lt;a href="https://docs.rs"&gt;docs.rs&lt;/a&gt; and &lt;a href="https://deps.rs"&gt;deps.rs&lt;/a&gt;. &lt;a href="https://github.com/cenotelie/cratery/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/cenotelie/cratery/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloudsmith.com/product/formats/cargo-registry"&gt;Cloudsmith &lt;span&gt;💲&lt;/span&gt;&lt;/a&gt; - A fully managed package management SaaS, with first-class support for public and private Cargo/Rust registries (plus many others). Has a generous free-tier and is also completely free for open-source.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crates.io"&gt;Crates&lt;/a&gt; - The official public registry for Rust/Cargo.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.repoflow.io"&gt;RepoFlow&lt;/a&gt; - A simple and modern repository platform that can host Rust crate repositories and proxy crates.io. Also supports other package types like Docker, PyPI, Maven, npm, and RubyGems. Available as a cloud service or self-hosted.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/w4/chartered"&gt;w4/chartered&lt;/a&gt; - A private, authenticated, permissioned Cargo registry &lt;a href="https://github.com/w4/chartered/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/w4/chartered/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/rustaceans/make-it-mandatory-a-brief-history-of-rust-part-1-805459c60c6b"&gt;A Brief History of Rust. Part 1&lt;/a&gt; - From a developer's pursuit of software stability to a project that nearly destabilized its creator. &lt;a href="https://medium.com/rustaceans/make-it-mandatory-a-brief-history-of-rust-part-2-981d61451aa5"&gt;Part 2&lt;/a&gt;. &lt;a href="https://medium.com/rustaceans/make-it-mandatory-a-brief-history-of-rust-part-2-b8c0f7a7e781?sk=c0e7fe5fde11a62edc23f284f125aa18"&gt;Part 3&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Benchmarks 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/c410-f3r/wtx-bench"&gt;c410-f3r/wtx-bench&lt;/a&gt; - Web benchmarks&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/TeXitoi/benchmarksgame-rs"&gt;TeXitoi/benchmarksgame-rs&lt;/a&gt; - Implementations for the &lt;a href="https://benchmarksgame-team.pages.debian.net/benchmarksgame/"&gt;The Computer Language Benchmarks Game&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Decks &amp;amp; Presentations 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://speakerdeck.com/jvns/learning-systems-programming-with-rust"&gt;Learning systems programming with Rust&lt;/a&gt; - Presented by &lt;a href="https://twitter.com/@b0rk"&gt;Julia Evans&lt;/a&gt; @ Rustconf 2016.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=lO1z-7cuRYI"&gt;Rust: Hack Without Fear!&lt;/a&gt; - Presented by &lt;a href="https://github.com/nikomatsakis"&gt;Nicholas Matsakis&lt;/a&gt; @ C++Now 2018&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=t4CyEKb-ywA"&gt;Shipping a Solid Rust Crate&lt;/a&gt; - Presented by &lt;a href="https://github.com/mgattozzi"&gt;Michael Gattozzi&lt;/a&gt; @ RustConf 2017&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Learning 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://rust-exercises.com"&gt;100 Exercises To Learn Rust&lt;/a&gt; - Learn Rust through 100 hands-on exercises, covering syntax, types, and more&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/cognitive-engineering-lab/aquascope"&gt;Aquascope&lt;/a&gt; - Interactive visualizations of Rust at compile-time and run-time&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/jamesmunns/awesome-rust-streaming"&gt;Awesome Rust Streaming&lt;/a&gt; - A community curated list of livestreams.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://rustbeginners.github.io/awesome-rust-mentors/"&gt;awesome-rust-mentors&lt;/a&gt; - A list of helpful mentors willing to take mentees and educate them about Rust and programming.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://cis198-2016s.github.io/schedule/"&gt;CIS 198: Rust Programming&lt;/a&gt; - University of Pennsylvania's Comp Sci Rust Programming Course&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://app.codecrafters.io/tracks/rust"&gt;CodeCrafters.io&lt;/a&gt; - Build your own Redis, Git, Docker, or SQLite&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://google.github.io/comprehensive-rust/"&gt;Comprehensive Rust 🦀&lt;/a&gt; - A 3-day course on Rust Fundamentals plus 1-day courses on Android, Bare-metal Rust, and Concurrency. Available in English, &lt;a href="https://google.github.io/comprehensive-rust/pt-BR/"&gt;Brazilian Portuguese&lt;/a&gt;, and &lt;a href="https://google.github.io/comprehensive-rust/ko/"&gt;Korean&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Dhghomon/easy_rust"&gt;Easy Rust&lt;/a&gt; - Learn Rust in easy English.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://exercism.org/tracks/rust"&gt;exercism.org&lt;/a&gt; - programming exercises that help you learn new concepts in Rust.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://pragprog.com/titles/hwrust/hands-on-rust/"&gt;Hands-on Rust&lt;/a&gt; - A hands-on guide to learning Rust by making games - by &lt;a href="https://github.com/thebracket/"&gt;Herbert Wolverson&lt;/a&gt; (paid)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mre/idiomatic-rust"&gt;Idiomatic Rust&lt;/a&gt; - A peer-reviewed collection of articles/talks/repos which teach idiomatic Rust.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://labex.io/skilltrees/rust"&gt;LabEx Rust Skill Tree&lt;/a&gt; - A structured Rust learning path with hands-on labs, designed for beginners to master Rust step by step.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://rust-lang.guide/"&gt;Learn Rust 101&lt;/a&gt; - A guide to aid you in your journey of becoming a Rustacean (Rust developer)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/cuppar/rtd"&gt;Learn Rust by 500 lines code&lt;/a&gt; - Learn Rust by 500 lines code, build a Todo Cli Application from scratch.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://rust-unofficial.github.io/too-many-lists/"&gt;Learning Rust With Entirely Too Many Linked Lists&lt;/a&gt; - in-depth exploration of Rust's memory management rules, through implementing a few different types of list structures.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://lborb.github.io/book/"&gt;Little Book of Rust Books&lt;/a&gt; - Curated list of rust books and how-tos.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://hackr.io/tutorials/learn-rust"&gt;Programming Community Curated Resources for Learning Rust&lt;/a&gt; - A list of recommended resources voted by the programming community.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.manning.com/books/refactoring-to-rust"&gt;Refactoring to Rust&lt;/a&gt; - A book that introduces to Rust language.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://doc.rust-lang.org/rust-by-example/"&gt;Rust by Example&lt;/a&gt; - a collection of runnable examples that illustrate various Rust concepts and standard libraries.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://rust-lang-nursery.github.io/rust-cookbook/"&gt;Rust Cookbook&lt;/a&gt; - A collection of simple examples that demonstrate good practices to accomplish common programming tasks, using the crates of the Rust ecosystem.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ad-si/Rust-Flashcards"&gt;Rust Flashcards&lt;/a&gt; - Over 550 flashcards to learn Rust from first principles.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://overexact.com/rust-for-professionals/"&gt;Rust for professionals&lt;/a&gt; - A quick introduction to Rust for experienced software developers.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/warycat/rustgym"&gt;Rust Gym&lt;/a&gt; - A big collection of coding interview problems solved in Rust.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.manning.com/books/rust-in-action"&gt;Rust in Action&lt;/a&gt; - A hands-on guide to systems programming with Rust by &lt;a href="https://github.com/timClicks"&gt;Tim McNamara&lt;/a&gt; (paid)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.manning.com/livevideo/rust-in-motion?a_aid=cnichols&amp;amp;a_bid=6a993c2e"&gt;Rust in Motion&lt;/a&gt; - A video series by &lt;a href="https://github.com/carols10cents"&gt;Carol Nichols&lt;/a&gt; and &lt;a href="https://github.com/shepmaster"&gt;Jake Goulding&lt;/a&gt; (paid)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://cheats.rs/"&gt;Rust Language Cheat Sheet&lt;/a&gt; - Rust Language Cheat Sheet&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://rust-tieng-viet.github.io/"&gt;Rust Tiếng Việt&lt;/a&gt; - Learn Rust in Vietnamese.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/jondot/rust-how-do-i-start"&gt;rust-how-do-i-start&lt;/a&gt; - A repo dedicated to answering the question: "So, Rust. How do I &lt;em&gt;start&lt;/em&gt;?". A beginner only hand-picked resources and learning track.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ctjhoa/rust-learning"&gt;rust-learning&lt;/a&gt; - A collection of useful resources to learn Rust&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.rustfinity.com"&gt;Rustfinity&lt;/a&gt; - Interactive platform for practicing Rust through hands-on exercises and challenges&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/rust-lang/rustlings"&gt;Rustlings&lt;/a&gt; - small exercises to get you used to reading and writing Rust code&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AbdesamedBendjeddou/Rusty-CS"&gt;Rusty CS&lt;/a&gt; - A Computer Science Curriculum that helps practice the acquired academic knowledge in Rust&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/brson/stdx"&gt;stdx&lt;/a&gt; - Learn these crates first as an extension to std&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tourofrust.com"&gt;Tour of Rust&lt;/a&gt; - This is meant to be an interactive step by step guide through the features of the Rust programming language.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Podcasts 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://newrustacean.com"&gt;New Rustacean&lt;/a&gt; - A podcast about learning Rust&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://rustacean-station.org/"&gt;Rustacean Station&lt;/a&gt; - A community project for creating podcast content for Rust&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-unofficial/patterns"&gt;Rust Design Patterns&lt;/a&gt; - A catalogue of Rust design patterns, anti-patterns and idioms&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://aturon.github.io/"&gt;Rust Guidelines&lt;/a&gt; - Aaron Turon's blog posts on rust&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.manning.com/books/rust-servers-services-and-apps"&gt;Rust Servers, Services and Apps - MEAP&lt;/a&gt; - Build backend servers, services, and front-ends in Rust to get fast, reliable, and maintainable applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/"&gt;Rust Subreddit&lt;/a&gt; - A subreddit(forum) where rust related questions, articles and resources are posted and discussed&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sger/RustBooks"&gt;RustBooks&lt;/a&gt; - list of RustBooks&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLE7tQUdRKcybdIw61JpCoo89i4pWU5f_t"&gt;RustCamp 2015 Talks&lt;/a&gt; - Recorded talks from RustCamp 2015&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rustviz/rustviz"&gt;RustViz&lt;/a&gt; - generates visualizations from simple Rust programs to assist users in better understanding the Rust Lifetime and Borrowing mechanism.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jf_ddGnum_4"&gt;Watch Jon Gjengset Implement BitTorrent in Rust&lt;/a&gt; - Implementing (part of) a BitTorrent client in Rust&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://creativecommons.org/publicdomain/zero/1.0/"&gt;&lt;img src="https://licensebuttons.net/p/zero/1.0/88x31.png" alt="CC0" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>google/comprehensive-rust</title>
      <link>https://github.com/google/comprehensive-rust</link>
      <description>&lt;p&gt;This is the Rust course used by the Android team at Google. It provides you the material to quickly teach Rust.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Comprehensive Rust 🦀&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/google/comprehensive-rust/actions/workflows/build.yml?query=branch%3Amain"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/google/comprehensive-rust/build.yml?style=flat-square" alt="Build workflow" /&gt;&lt;/a&gt; &lt;a href="https://github.com/google/comprehensive-rust/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/google/comprehensive-rust?style=flat-square" alt="GitHub contributors" /&gt;&lt;/a&gt; &lt;a href="https://github.com/google/comprehensive-rust/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/google/comprehensive-rust?style=flat-square" alt="GitHub stars" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository has the source code for Comprehensive Rust 🦀, a multi-day Rust course developed by the Android team. The course covers all aspects of Rust, from basic syntax to generics and error handling. It also includes deep dives on &lt;a href="https://google.github.io/comprehensive-rust/android.html"&gt;Android&lt;/a&gt;, &lt;a href="https://google.github.io/comprehensive-rust/chromium.html"&gt;Chromium&lt;/a&gt;, &lt;a href="https://google.github.io/comprehensive-rust/bare-metal.html"&gt;bare-metal&lt;/a&gt;, and &lt;a href="https://google.github.io/comprehensive-rust/concurrency.html"&gt;concurrency&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Read the course at &lt;strong&gt;&lt;a href="https://google.github.io/comprehensive-rust/"&gt;https://google.github.io/comprehensive-rust/&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Course Format and Target Audience&lt;/h2&gt; 
&lt;p&gt;The course is used internally at Google when teaching Rust to experienced software engineers. They typically have a background in C++ or Java.&lt;/p&gt; 
&lt;p&gt;The course is taught in a classroom setting and we hope it will be useful for others who want to teach Rust to their team. The course will be less useful for self-study since you miss out on the discussions happening in the classroom. You don't see the questions and answers and you don't see the compiler errors we trigger when going through the code samples. We hope to improve on this via &lt;a href="https://github.com/google/comprehensive-rust/issues/53"&gt;speaker notes&lt;/a&gt; and by &lt;a href="https://github.com/google/comprehensive-rust/issues/52"&gt;publishing videos&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Press&lt;/h2&gt; 
&lt;p&gt;Articles and blog posts from around the web which cover Comprehensive Rust:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;2023-09-08: &lt;em&gt;&lt;a href="https://mo8it.com/blog/teaching-rust/"&gt;Teaching Rust in 5 days&lt;/a&gt;&lt;/em&gt;. Comprehensive Rust was used as a base for a 5-day university class on Rust.&lt;/li&gt; 
 &lt;li&gt;2023-09-21: &lt;em&gt;&lt;a href="https://security.googleblog.com/2023/09/scaling-rust-adoption-through-training.html"&gt;Scaling Rust Adoption Through Training&lt;/a&gt;&lt;/em&gt;. We published a blog post with details on the development of the course.&lt;/li&gt; 
 &lt;li&gt;2023-10-02: &lt;em&gt;&lt;a href="https://www.darkreading.com/application-security/google-microsoft-take-refuge-in-rust-languages-better-security"&gt;In Search of Rust Developers, Companies Turn to In-House Training&lt;/a&gt;&lt;/em&gt;. About how Microsoft, Google, and others are training people in Rust.&lt;/li&gt; 
 &lt;li&gt;2024-10-18: &lt;em&gt;&lt;a href="https://youtu.be/7h5KyMqt2-Q?si=4M99HdWWxMaqN8Zr"&gt;Rust Training at Scale | Rust Global @ RustConf 2024&lt;/a&gt;&lt;/em&gt;. What Google learnt from teaching Comprehensive Rust for more than two years.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;The course is built using a few tools:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-lang/mdBook"&gt;mdbook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/boozook/mdbook-svgbob"&gt;mdbook-svgbob&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/mdbook-i18n-helpers"&gt;mdbook-i18n-helpers and i18n-report&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/comprehensive-rust/main/mdbook-exerciser/"&gt;mdbook-exerciser&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google/comprehensive-rust/main/mdbook-course/"&gt;mdbook-course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marxin/mdbook-linkcheck2"&gt;mdbook-linkcheck2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;First install Rust by following the instructions on &lt;a href="https://rustup.rs/"&gt;https://rustup.rs/&lt;/a&gt;. Then clone this repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/google/comprehensive-rust/
cd comprehensive-rust
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then install these tools with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cargo xtask install-tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; We use &lt;code&gt;xtask&lt;/code&gt; for task automation within the project (e.g. installing required tools). Xtask is not a package that you should install. Visit &lt;a href="https://github.com/matklad/cargo-xtask"&gt;https://github.com/matklad/cargo-xtask&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Commands&lt;/h2&gt; 
&lt;p&gt;Here are some of the commonly used commands you can run in the project. Run &lt;code&gt;cargo xtask&lt;/code&gt; to view all available commands.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;cargo xtask install-tools&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Install all the tools the project depends on.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;cargo xtask serve&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Start a web server with the course. You'll find the content on &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;. To serve any of the translated versions of the course, add the language flag (--language or -l) followed by xx, where xx is the ISO 639 language code (e.g. cargo xtask serve -l da for the Danish translation).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;cargo xtask rust-tests&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Test the included Rust snippets.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;cargo xtask web-tests&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Run the web driver tests in the tests directory.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;cargo xtask build&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Create a static version of the course in the &lt;code&gt;book/&lt;/code&gt; directory. Note that you have to separately build and zip exercises and add them to book/html. To build any of the translated versions of the course, add the language flag (--language or -l) followed by xx, where xx is the ISO 639 language code (e.g. cargo xtask build -l da for the Danish translation). &lt;a href="https://raw.githubusercontent.com/google/comprehensive-rust/main/TRANSLATIONS.md"&gt;TRANSLATIONS.md&lt;/a&gt; contains further instructions.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; On Windows, you need to enable symlinks (&lt;code&gt;git config --global core.symlinks true&lt;/code&gt;) and Developer Mode.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We would like to receive your contributions. Please see &lt;a href="https://raw.githubusercontent.com/google/comprehensive-rust/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;For questions or comments, please contact &lt;a href="mailto:mgeisler@google.com"&gt;Martin Geisler&lt;/a&gt; or start a &lt;a href="https://github.com/google/comprehensive-rust/discussions"&gt;discussion on GitHub&lt;/a&gt;. We would love to hear from you.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openai/codex</title>
      <link>https://github.com/openai/codex</link>
      <description>&lt;p&gt;Lightweight coding agent that runs in your terminal&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;OpenAI Codex CLI&lt;/h1&gt; 
&lt;p align="center"&gt;&lt;code&gt;npm i -g @openai/codex&lt;/code&gt;&lt;br /&gt;or &lt;code&gt;brew install codex&lt;/code&gt;&lt;/p&gt; 
&lt;p align="center"&gt;&lt;strong&gt;Codex CLI&lt;/strong&gt; is a coding agent from OpenAI that runs locally on your computer.&lt;br /&gt;If you are looking for the &lt;em&gt;cloud-based agent&lt;/em&gt; from OpenAI, &lt;strong&gt;Codex Web&lt;/strong&gt;, see &lt;a href="https://chatgpt.com/codex"&gt;chatgpt.com/codex&lt;/a&gt;.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/openai/codex/main/.github/codex-cli-splash.png" alt="Codex CLI splash" width="50%" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Table of contents&lt;/strong&gt;&lt;/summary&gt; 
 &lt;!-- Begin ToC --&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#quickstart"&gt;Quickstart&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#installing-and-running-codex-cli"&gt;Installing and running Codex CLI&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#using-codex-with-your-chatgpt-plan"&gt;Using Codex with your ChatGPT plan&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#connecting-on-a-headless-machine"&gt;Connecting on a "Headless" Machine&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#authenticate-locally-and-copy-your-credentials-to-the-headless-machine"&gt;Authenticate locally and copy your credentials to the "headless" machine&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#connecting-through-vps-or-remote"&gt;Connecting through VPS or remote&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#usage-based-billing-alternative-use-an-openai-api-key"&gt;Usage-based billing alternative: Use an OpenAI API key&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#forcing-a-specific-auth-method-advanced"&gt;Forcing a specific auth method (advanced)&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#choosing-codexs-level-of-autonomy"&gt;Choosing Codex's level of autonomy&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#1-readwrite"&gt;&lt;strong&gt;1. Read/write&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#2-read-only"&gt;&lt;strong&gt;2. Read-only&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#3-advanced-configuration"&gt;&lt;strong&gt;3. Advanced configuration&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#can-i-run-without-any-approvals"&gt;Can I run without ANY approvals?&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#fine-tuning-in-configtoml"&gt;Fine-tuning in &lt;code&gt;config.toml&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#example-prompts"&gt;Example prompts&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#running-with-a-prompt-as-input"&gt;Running with a prompt as input&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#using-open-source-models"&gt;Using Open Source Models&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#platform-sandboxing-details"&gt;Platform sandboxing details&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#experimental-technology-disclaimer"&gt;Experimental technology disclaimer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#system-requirements"&gt;System requirements&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#cli-reference"&gt;CLI reference&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#memory--project-docs"&gt;Memory &amp;amp; project docs&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#non-interactive--ci-mode"&gt;Non-interactive / CI mode&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#model-context-protocol-mcp"&gt;Model Context Protocol (MCP)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#tracing--verbose-logging"&gt;Tracing / verbose logging&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#dotslash"&gt;DotSlash&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#zero-data-retention-zdr-usage"&gt;Zero data retention (ZDR) usage&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#codex-open-source-fund"&gt;Codex open source fund&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#contributing"&gt;Contributing&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#development-workflow"&gt;Development workflow&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#writing-high-impact-code-changes"&gt;Writing high-impact code changes&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#opening-a-pull-request"&gt;Opening a pull request&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#review-process"&gt;Review process&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#community-values"&gt;Community values&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#getting-help"&gt;Getting help&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#contributor-license-agreement-cla"&gt;Contributor license agreement (CLA)&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#quick-fixes"&gt;Quick fixes&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#releasing-codex"&gt;Releasing &lt;code&gt;codex&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#security--responsible-ai"&gt;Security &amp;amp; responsible AI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;!-- End ToC --&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;h3&gt;Installing and running Codex CLI&lt;/h3&gt; 
&lt;p&gt;Install globally with your preferred package manager:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm install -g @openai/codex  # Alternatively: `brew install codex`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then simply run &lt;code&gt;codex&lt;/code&gt; to get started:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;codex
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;You can also go to the &lt;a href="https://github.com/openai/codex/releases/latest"&gt;latest GitHub Release&lt;/a&gt; and download the appropriate binary for your platform.&lt;/summary&gt; 
 &lt;p&gt;Each GitHub Release contains many executables, but in practice, you likely want one of these:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;macOS 
   &lt;ul&gt; 
    &lt;li&gt;Apple Silicon/arm64: &lt;code&gt;codex-aarch64-apple-darwin.tar.gz&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;x86_64 (older Mac hardware): &lt;code&gt;codex-x86_64-apple-darwin.tar.gz&lt;/code&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Linux 
   &lt;ul&gt; 
    &lt;li&gt;x86_64: &lt;code&gt;codex-x86_64-unknown-linux-musl.tar.gz&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;arm64: &lt;code&gt;codex-aarch64-unknown-linux-musl.tar.gz&lt;/code&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Each archive contains a single entry with the platform baked into the name (e.g., &lt;code&gt;codex-x86_64-unknown-linux-musl&lt;/code&gt;), so you likely want to rename it to &lt;code&gt;codex&lt;/code&gt; after extracting it.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Using Codex with your ChatGPT plan&lt;/h3&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/openai/codex/main/.github/codex-cli-login.png" alt="Codex CLI login" width="50%" /&gt; &lt;/p&gt; 
&lt;p&gt;Run &lt;code&gt;codex&lt;/code&gt; and select &lt;strong&gt;Sign in with ChatGPT&lt;/strong&gt;. You'll need a Plus, Pro, or Team ChatGPT account, and will get access to our latest models, including &lt;code&gt;gpt-5&lt;/code&gt;, at no extra cost to your plan. (Enterprise is coming soon.)&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Important: If you've used the Codex CLI before, follow these steps to migrate from usage-based billing with your API key:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Update the CLI and ensure &lt;code&gt;codex --version&lt;/code&gt; is &lt;code&gt;0.20.0&lt;/code&gt; or later&lt;/li&gt; 
  &lt;li&gt;Delete &lt;code&gt;~/.codex/auth.json&lt;/code&gt; (this should be &lt;code&gt;C:\Users\USERNAME\.codex\auth.json&lt;/code&gt; on Windows)&lt;/li&gt; 
  &lt;li&gt;Run &lt;code&gt;codex login&lt;/code&gt; again&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you encounter problems with the login flow, please comment on &lt;a href="https://github.com/openai/codex/issues/1243"&gt;this issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Connecting on a "Headless" Machine&lt;/h3&gt; 
&lt;p&gt;Today, the login process entails running a server on &lt;code&gt;localhost:1455&lt;/code&gt;. If you are on a "headless" server, such as a Docker container or are &lt;code&gt;ssh&lt;/code&gt;'d into a remote machine, loading &lt;code&gt;localhost:1455&lt;/code&gt; in the browser on your local machine will not automatically connect to the webserver running on the &lt;em&gt;headless&lt;/em&gt; machine, so you must use one of the following workarounds:&lt;/p&gt; 
&lt;h4&gt;Authenticate locally and copy your credentials to the "headless" machine&lt;/h4&gt; 
&lt;p&gt;The easiest solution is likely to run through the &lt;code&gt;codex login&lt;/code&gt; process on your local machine such that &lt;code&gt;localhost:1455&lt;/code&gt; &lt;em&gt;is&lt;/em&gt; accessible in your web browser. When you complete the authentication process, an &lt;code&gt;auth.json&lt;/code&gt; file should be available at &lt;code&gt;$CODEX_HOME/auth.json&lt;/code&gt; (on Mac/Linux, &lt;code&gt;$CODEX_HOME&lt;/code&gt; defaults to &lt;code&gt;~/.codex&lt;/code&gt; whereas on Windows, it defaults to &lt;code&gt;%USERPROFILE%\.codex&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;Because the &lt;code&gt;auth.json&lt;/code&gt; file is not tied to a specific host, once you complete the authentication flow locally, you can copy the &lt;code&gt;$CODEX_HOME/auth.json&lt;/code&gt; file to the headless machine and then &lt;code&gt;codex&lt;/code&gt; should "just work" on that machine. Note to copy a file to a Docker container, you can do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# substitute MY_CONTAINER with the name or id of your Docker container:
CONTAINER_HOME=$(docker exec MY_CONTAINER printenv HOME)
docker exec MY_CONTAINER mkdir -p "$CONTAINER_HOME/.codex"
docker cp auth.json MY_CONTAINER:"$CONTAINER_HOME/.codex/auth.json"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;whereas if you are &lt;code&gt;ssh&lt;/code&gt;'d into a remote machine, you likely want to use &lt;a href="https://en.wikipedia.org/wiki/Secure_copy_protocol"&gt;&lt;code&gt;scp&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ssh user@remote 'mkdir -p ~/.codex'
scp ~/.codex/auth.json user@remote:~/.codex/auth.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or try this one-liner:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ssh user@remote 'mkdir -p ~/.codex &amp;amp;&amp;amp; cat &amp;gt; ~/.codex/auth.json' &amp;lt; ~/.codex/auth.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting through VPS or remote&lt;/h4&gt; 
&lt;p&gt;If you run Codex on a remote machine (VPS/server) without a local browser, the login helper starts a server on &lt;code&gt;localhost:1455&lt;/code&gt; on the remote host. To complete login in your local browser, forward that port to your machine before starting the login flow:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# From your local machine
ssh -L 1455:localhost:1455 &amp;lt;user&amp;gt;@&amp;lt;remote-host&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, in that SSH session, run &lt;code&gt;codex&lt;/code&gt; and select "Sign in with ChatGPT". When prompted, open the printed URL (it will be &lt;code&gt;http://localhost:1455/...&lt;/code&gt;) in your local browser. The traffic will be tunneled to the remote server.&lt;/p&gt; 
&lt;h3&gt;Usage-based billing alternative: Use an OpenAI API key&lt;/h3&gt; 
&lt;p&gt;If you prefer to pay-as-you-go, you can still authenticate with your OpenAI API key by setting it as an environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;export OPENAI_API_KEY="your-api-key-here"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;This command only sets the key for your current terminal session, which we recommend. To set it for all future sessions, you can also add the &lt;code&gt;export&lt;/code&gt; line to your shell's configuration file (e.g., &lt;code&gt;~/.zshrc&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;If you have signed in with ChatGPT, Codex will default to using your ChatGPT credits. If you wish to use your API key, use the &lt;code&gt;/logout&lt;/code&gt; command to clear your ChatGPT authentication.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Forcing a specific auth method (advanced)&lt;/h4&gt; 
&lt;p&gt;You can explicitly choose which authentication Codex should prefer when both are available.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;To always use your API key (even when ChatGPT auth exists), set:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# ~/.codex/config.toml
preferred_auth_method = "apikey"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or override ad-hoc via CLI:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;codex --config preferred_auth_method="apikey"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;To prefer ChatGPT auth (default), set:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# ~/.codex/config.toml
preferred_auth_method = "chatgpt"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;When &lt;code&gt;preferred_auth_method = "apikey"&lt;/code&gt; and an API key is available, the login screen is skipped.&lt;/li&gt; 
 &lt;li&gt;When &lt;code&gt;preferred_auth_method = "chatgpt"&lt;/code&gt; (default), Codex prefers ChatGPT auth if present; if only an API key is present, it will use the API key. Certain account types may also require API-key mode.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Choosing Codex's level of autonomy&lt;/h3&gt; 
&lt;p&gt;We always recommend running Codex in its default sandbox that gives you strong guardrails around what the agent can do. The default sandbox prevents it from editing files outside its workspace, or from accessing the network.&lt;/p&gt; 
&lt;p&gt;When you launch Codex in a new folder, it detects whether the folder is version controlled and recommends one of two levels of autonomy:&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;1. Read/write&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Codex can run commands and write files in the workspace without approval.&lt;/li&gt; 
 &lt;li&gt;To write files in other folders, access network, update git or perform other actions protected by the sandbox, Codex will need your permission.&lt;/li&gt; 
 &lt;li&gt;By default, the workspace includes the current directory, as well as temporary directories like &lt;code&gt;/tmp&lt;/code&gt;. You can see what directories are in the workspace with the &lt;code&gt;/status&lt;/code&gt; command. See the docs for how to customize this behavior.&lt;/li&gt; 
 &lt;li&gt;Advanced: You can manually specify this configuration by running &lt;code&gt;codex --sandbox workspace-write --ask-for-approval on-request&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;This is the recommended default for version-controlled folders.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;2. Read-only&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Codex can run read-only commands without approval.&lt;/li&gt; 
 &lt;li&gt;To edit files, access network, or perform other actions protected by the sandbox, Codex will need your permission.&lt;/li&gt; 
 &lt;li&gt;Advanced: You can manually specify this configuration by running &lt;code&gt;codex --sandbox read-only --ask-for-approval on-request&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;This is the recommended default non-version-controlled folders.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;3. Advanced configuration&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;Codex gives you fine-grained control over the sandbox with the &lt;code&gt;--sandbox&lt;/code&gt; option, and over when it requests approval with the &lt;code&gt;--ask-for-approval&lt;/code&gt; option. Run &lt;code&gt;codex help&lt;/code&gt; for more on these options.&lt;/p&gt; 
&lt;h4&gt;Can I run without ANY approvals?&lt;/h4&gt; 
&lt;p&gt;Yes, run codex non-interactively with &lt;code&gt;--ask-for-approval never&lt;/code&gt;. This option works with all &lt;code&gt;--sandbox&lt;/code&gt; options, so you still have full control over Codex's level of autonomy. It will make its best attempt with whatever contrainsts you provide. For example:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;code&gt;codex --ask-for-approval never --sandbox read-only&lt;/code&gt; when you are running many agents to answer questions in parallel in the same workspace.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;codex --ask-for-approval never --sandbox workspace-write&lt;/code&gt; when you want the agent to non-interactively take time to produce the best outcome, with strong guardrails around its behavior.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;codex --ask-for-approval never --sandbox danger-full-access&lt;/code&gt; to dangerously give the agent full autonomy. Because this disables important safety mechanisms, we recommend against using this unless running Codex in an isolated environment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Fine-tuning in &lt;code&gt;config.toml&lt;/code&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# approval mode
approval_policy = "untrusted"
sandbox_mode    = "read-only"

# full-auto mode
approval_policy = "on-request"
sandbox_mode    = "workspace-write"

# Optional: allow network in workspace-write mode
[sandbox_workspace_write]
network_access = true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also save presets as &lt;strong&gt;profiles&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[profiles.full_auto]
approval_policy = "on-request"
sandbox_mode    = "workspace-write"

[profiles.readonly_quiet]
approval_policy = "never"
sandbox_mode    = "read-only"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Example prompts&lt;/h3&gt; 
&lt;p&gt;Below are a few bite-size examples you can copy-paste. Replace the text in quotes with your own task. See the &lt;a href="https://github.com/openai/codex/raw/main/codex-cli/examples/prompting_guide.md"&gt;prompting guide&lt;/a&gt; for more tips and usage patterns.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;✨&lt;/th&gt; 
   &lt;th&gt;What you type&lt;/th&gt; 
   &lt;th&gt;What happens&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex "Refactor the Dashboard component to React Hooks"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Codex rewrites the class component, runs &lt;code&gt;npm test&lt;/code&gt;, and shows the diff.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex "Generate SQL migrations for adding a users table"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Infers your ORM, creates migration files, and runs them in a sandboxed DB.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex "Write unit tests for utils/date.ts"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Generates tests, executes them, and iterates until they pass.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex "Bulk-rename *.jpeg -&amp;gt; *.jpg with git mv"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Safely renames files and updates imports/usages.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex "Explain what this regex does: ^(?=.*[A-Z]).{8,}$"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Outputs a step-by-step human explanation.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex "Carefully review this repo, and propose 3 high impact well-scoped PRs"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Suggests impactful PRs in the current codebase.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex "Look for vulnerabilities and create a security review report"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Finds and explains security bugs.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Running with a prompt as input&lt;/h2&gt; 
&lt;p&gt;You can also run Codex CLI with a prompt as input:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;codex "explain this codebase to me"
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;codex --full-auto "create the fanciest todo-list app"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That's it - Codex will scaffold a file, run it inside a sandbox, install any missing dependencies, and show you the live result. Approve the changes and they'll be committed to your working directory.&lt;/p&gt; 
&lt;h2&gt;Using Open Source Models&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Use &lt;code&gt;--profile&lt;/code&gt; to use other models&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Codex also allows you to use other providers that support the OpenAI Chat Completions (or Responses) API.&lt;/p&gt; 
 &lt;p&gt;To do so, you must first define custom &lt;a href="https://raw.githubusercontent.com/openai/codex/main/config.md#model_providers"&gt;providers&lt;/a&gt; in &lt;code&gt;~/.codex/config.toml&lt;/code&gt;. For example, the provider for a standard Ollama setup would be defined as follows:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;[model_providers.ollama]
name = "Ollama"
base_url = "http://localhost:11434/v1"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The &lt;code&gt;base_url&lt;/code&gt; will have &lt;code&gt;/chat/completions&lt;/code&gt; appended to it to build the full URL for the request.&lt;/p&gt; 
 &lt;p&gt;For providers that also require an &lt;code&gt;Authorization&lt;/code&gt; header of the form &lt;code&gt;Bearer: SECRET&lt;/code&gt;, an &lt;code&gt;env_key&lt;/code&gt; can be specified, which indicates the environment variable to read to use as the value of &lt;code&gt;SECRET&lt;/code&gt; when making a request:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;[model_providers.openrouter]
name = "OpenRouter"
base_url = "https://openrouter.ai/api/v1"
env_key = "OPENROUTER_API_KEY"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Providers that speak the Responses API are also supported by adding &lt;code&gt;wire_api = "responses"&lt;/code&gt; as part of the definition. Accessing OpenAI models via Azure is an example of such a provider, though it also requires specifying additional &lt;code&gt;query_params&lt;/code&gt; that need to be appended to the request URL:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;[model_providers.azure]
name = "Azure"
# Make sure you set the appropriate subdomain for this URL.
base_url = "https://YOUR_PROJECT_NAME.openai.azure.com/openai"
env_key = "AZURE_OPENAI_API_KEY"  # Or "OPENAI_API_KEY", whichever you use.
# Newer versions appear to support the responses API, see https://github.com/openai/codex/pull/1321
query_params = { api-version = "2025-04-01-preview" }
wire_api = "responses"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Once you have defined a provider you wish to use, you can configure it as your default provider as follows:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;model_provider = "azure"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;[!TIP] If you find yourself experimenting with a variety of models and providers, then you likely want to invest in defining a &lt;em&gt;profile&lt;/em&gt; for each configuration like so:&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;[profiles.o3]
model_provider = "azure"
model = "o3"

[profiles.mistral]
model_provider = "ollama"
model = "mistral"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This way, you can specify one command-line argument (.e.g., &lt;code&gt;--profile o3&lt;/code&gt;, &lt;code&gt;--profile mistral&lt;/code&gt;) to override multiple settings together.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;Codex can run fully locally against an OpenAI-compatible OSS host (like Ollama) using the &lt;code&gt;--oss&lt;/code&gt; flag:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Interactive UI: 
  &lt;ul&gt; 
   &lt;li&gt;codex --oss&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Non-interactive (programmatic) mode: 
  &lt;ul&gt; 
   &lt;li&gt;echo "Refactor utils" | codex exec --oss&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Model selection when using &lt;code&gt;--oss&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you omit &lt;code&gt;-m/--model&lt;/code&gt;, Codex defaults to -m gpt-oss:20b and will verify it exists locally (downloading if needed).&lt;/li&gt; 
 &lt;li&gt;To pick a different size, pass one of: 
  &lt;ul&gt; 
   &lt;li&gt;-m "gpt-oss:20b"&lt;/li&gt; 
   &lt;li&gt;-m "gpt-oss:120b"&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Point Codex at your own OSS host:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;By default, &lt;code&gt;--oss&lt;/code&gt; talks to &lt;a href="http://localhost:11434/v1"&gt;http://localhost:11434/v1&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;To use a different host, set one of these environment variables before running Codex: 
  &lt;ul&gt; 
   &lt;li&gt;CODEX_OSS_BASE_URL, for example: 
    &lt;ul&gt; 
     &lt;li&gt;CODEX_OSS_BASE_URL="&lt;a href="http://my-ollama.example.com:11434/v1"&gt;http://my-ollama.example.com:11434/v1&lt;/a&gt;" codex --oss -m gpt-oss:20b&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;or CODEX_OSS_PORT (when the host is localhost): 
    &lt;ul&gt; 
     &lt;li&gt;CODEX_OSS_PORT=11434 codex --oss&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Advanced: you can persist this in your config instead of environment variables by overriding the built-in &lt;code&gt;oss&lt;/code&gt; provider in &lt;code&gt;~/.codex/config.toml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[model_providers.oss]
name = "Open Source"
base_url = "http://my-ollama.example.com:11434/v1"
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Platform sandboxing details&lt;/h3&gt; 
&lt;p&gt;By default, Codex CLI runs code and shell commands inside a restricted sandbox to protect your system.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Not all tool calls are sandboxed. Specifically, &lt;strong&gt;trusted Model Context Protocol (MCP) tool calls&lt;/strong&gt; are executed outside of the sandbox.&lt;br /&gt; This is intentional: MCP tools are explicitly configured and trusted by you, and they often need to connect to &lt;strong&gt;external applications or services&lt;/strong&gt; (e.g. issue trackers, databases, messaging systems).&lt;br /&gt; Running them outside the sandbox allows Codex to integrate with these external systems without being blocked by sandbox restrictions.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The mechanism Codex uses to implement the sandbox policy depends on your OS:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS 12+&lt;/strong&gt; uses &lt;strong&gt;Apple Seatbelt&lt;/strong&gt; and runs commands using &lt;code&gt;sandbox-exec&lt;/code&gt; with a profile (&lt;code&gt;-p&lt;/code&gt;) that corresponds to the &lt;code&gt;--sandbox&lt;/code&gt; that was specified.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt; uses a combination of Landlock/seccomp APIs to enforce the &lt;code&gt;sandbox&lt;/code&gt; configuration.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that when running Linux in a containerized environment such as Docker, sandboxing may not work if the host/container configuration does not support the necessary Landlock/seccomp APIs. In such cases, we recommend configuring your Docker container so that it provides the sandbox guarantees you are looking for and then running &lt;code&gt;codex&lt;/code&gt; with &lt;code&gt;--sandbox danger-full-access&lt;/code&gt; (or, more simply, the &lt;code&gt;--dangerously-bypass-approvals-and-sandbox&lt;/code&gt; flag) within your container.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Experimental technology disclaimer&lt;/h2&gt; 
&lt;p&gt;Codex CLI is an experimental project under active development. It is not yet stable, may contain bugs, incomplete features, or undergo breaking changes. We're building it in the open with the community and welcome:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bug reports&lt;/li&gt; 
 &lt;li&gt;Feature requests&lt;/li&gt; 
 &lt;li&gt;Pull requests&lt;/li&gt; 
 &lt;li&gt;Good vibes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Help us improve by filing issues or submitting PRs (see the section below for how to contribute)!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;System requirements&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Requirement&lt;/th&gt; 
   &lt;th&gt;Details&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Operating systems&lt;/td&gt; 
   &lt;td&gt;macOS 12+, Ubuntu 20.04+/Debian 10+, or Windows 11 &lt;strong&gt;via WSL2&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Git (optional, recommended)&lt;/td&gt; 
   &lt;td&gt;2.23+ for built-in PR helpers&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;RAM&lt;/td&gt; 
   &lt;td&gt;4-GB minimum (8-GB recommended)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h2&gt;CLI reference&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;codex&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Interactive TUI&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;codex "..."&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Initial prompt for interactive TUI&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex "fix lint errors"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;codex exec "..."&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Non-interactive "automation mode"&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex exec "explain utils.ts"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Key flags: &lt;code&gt;--model/-m&lt;/code&gt;, &lt;code&gt;--ask-for-approval/-a&lt;/code&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Memory &amp;amp; project docs&lt;/h2&gt; 
&lt;p&gt;You can give Codex extra instructions and guidance using &lt;code&gt;AGENTS.md&lt;/code&gt; files. Codex looks for &lt;code&gt;AGENTS.md&lt;/code&gt; files in the following places, and merges them top-down:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;~/.codex/AGENTS.md&lt;/code&gt; - personal global guidance&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AGENTS.md&lt;/code&gt; at repo root - shared project notes&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AGENTS.md&lt;/code&gt; in the current working directory - sub-folder/feature specifics&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Non-interactive / CI mode&lt;/h2&gt; 
&lt;p&gt;Run Codex head-less in pipelines. Example GitHub Action step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- name: Update changelog via Codex
  run: |
    npm install -g @openai/codex
    export OPENAI_API_KEY="${{ secrets.OPENAI_KEY }}"
    codex exec --full-auto "update CHANGELOG for next release"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Model Context Protocol (MCP)&lt;/h2&gt; 
&lt;p&gt;The Codex CLI can be configured to leverage MCP servers by defining an &lt;a href="https://raw.githubusercontent.com/openai/codex/main/codex-rs/config.md#mcp_servers"&gt;&lt;code&gt;mcp_servers&lt;/code&gt;&lt;/a&gt; section in &lt;code&gt;~/.codex/config.toml&lt;/code&gt;. It is intended to mirror how tools such as Claude and Cursor define &lt;code&gt;mcpServers&lt;/code&gt; in their respective JSON config files, though the Codex format is slightly different since it uses TOML rather than JSON, e.g.:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# IMPORTANT: the top-level key is `mcp_servers` rather than `mcpServers`.
[mcp_servers.server-name]
command = "npx"
args = ["-y", "mcp-server"]
env = { "API_KEY" = "value" }
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] It is somewhat experimental, but the Codex CLI can also be run as an MCP &lt;em&gt;server&lt;/em&gt; via &lt;code&gt;codex mcp&lt;/code&gt;. If you launch it with an MCP client such as &lt;code&gt;npx @modelcontextprotocol/inspector codex mcp&lt;/code&gt; and send it a &lt;code&gt;tools/list&lt;/code&gt; request, you will see that there is only one tool, &lt;code&gt;codex&lt;/code&gt;, that accepts a grab-bag of inputs, including a catch-all &lt;code&gt;config&lt;/code&gt; map for anything you might want to override. Feel free to play around with it and provide feedback via GitHub issues.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Tracing / verbose logging&lt;/h2&gt; 
&lt;p&gt;Because Codex is written in Rust, it honors the &lt;code&gt;RUST_LOG&lt;/code&gt; environment variable to configure its logging behavior.&lt;/p&gt; 
&lt;p&gt;The TUI defaults to &lt;code&gt;RUST_LOG=codex_core=info,codex_tui=info&lt;/code&gt; and log messages are written to &lt;code&gt;~/.codex/log/codex-tui.log&lt;/code&gt;, so you can leave the following running in a separate terminal to monitor log messages as they are written:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;tail -F ~/.codex/log/codex-tui.log
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By comparison, the non-interactive mode (&lt;code&gt;codex exec&lt;/code&gt;) defaults to &lt;code&gt;RUST_LOG=error&lt;/code&gt;, but messages are printed inline, so there is no need to monitor a separate file.&lt;/p&gt; 
&lt;p&gt;See the Rust documentation on &lt;a href="https://docs.rs/env_logger/latest/env_logger/#enabling-logging"&gt;&lt;code&gt;RUST_LOG&lt;/code&gt;&lt;/a&gt; for more information on the configuration options.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;DotSlash&lt;/h3&gt; 
&lt;p&gt;The GitHub Release also contains a &lt;a href="https://dotslash-cli.com/"&gt;DotSlash&lt;/a&gt; file for the Codex CLI named &lt;code&gt;codex&lt;/code&gt;. Using a DotSlash file makes it possible to make a lightweight commit to source control to ensure all contributors use the same version of an executable, regardless of what platform they use for development.&lt;/p&gt;  
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Build from source&lt;/strong&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Clone the repository and navigate to the root of the Cargo workspace.
git clone https://github.com/openai/codex.git
cd codex/codex-rs

# Install the Rust toolchain, if necessary.
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
source "$HOME/.cargo/env"
rustup component add rustfmt
rustup component add clippy

# Build Codex.
cargo build

# Launch the TUI with a sample prompt.
cargo run --bin codex -- "explain this codebase to me"

# After making changes, ensure the code is clean.
cargo fmt -- --config imports_granularity=Item
cargo clippy --tests

# Run the tests.
cargo test
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Codex supports a rich set of configuration options documented in &lt;a href="https://raw.githubusercontent.com/openai/codex/main/codex-rs/config.md"&gt;&lt;code&gt;codex-rs/config.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;By default, Codex loads its configuration from &lt;code&gt;~/.codex/config.toml&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Though &lt;code&gt;--config&lt;/code&gt; can be used to set/override ad-hoc config values for individual invocations of &lt;code&gt;codex&lt;/code&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;OpenAI released a model called Codex in 2021 - is this related?&lt;/summary&gt; 
 &lt;p&gt;In 2021, OpenAI released Codex, an AI system designed to generate code from natural language prompts. That original Codex model was deprecated as of March 2023 and is separate from the CLI tool.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Which models are supported?&lt;/summary&gt; 
 &lt;p&gt;Any model available with &lt;a href="https://platform.openai.com/docs/api-reference/responses"&gt;Responses API&lt;/a&gt;. The default is &lt;code&gt;o4-mini&lt;/code&gt;, but pass &lt;code&gt;--model gpt-4.1&lt;/code&gt; or set &lt;code&gt;model: gpt-4.1&lt;/code&gt; in your config file to override.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Why does &lt;code&gt;o3&lt;/code&gt; or &lt;code&gt;o4-mini&lt;/code&gt; not work for me?&lt;/summary&gt; 
 &lt;p&gt;It's possible that your &lt;a href="https://help.openai.com/en/articles/10910291-api-organization-verification"&gt;API account needs to be verified&lt;/a&gt; in order to start streaming responses and seeing chain of thought summaries from the API. If you're still running into issues, please let us know!&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;How do I stop Codex from editing my files?&lt;/summary&gt; 
 &lt;p&gt;Codex runs model-generated commands in a sandbox. If a proposed command or file change doesn't look right, you can simply type &lt;strong&gt;n&lt;/strong&gt; to deny the command or give the model feedback.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Does it work on Windows?&lt;/summary&gt; 
 &lt;p&gt;Not directly. It requires &lt;a href="https://learn.microsoft.com/en-us/windows/wsl/install"&gt;Windows Subsystem for Linux (WSL2)&lt;/a&gt; - Codex has been tested on macOS and Linux with Node 22.&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Zero data retention (ZDR) usage&lt;/h2&gt; 
&lt;p&gt;Codex CLI &lt;strong&gt;does&lt;/strong&gt; support OpenAI organizations with &lt;a href="https://platform.openai.com/docs/guides/your-data#zero-data-retention"&gt;Zero Data Retention (ZDR)&lt;/a&gt; enabled. If your OpenAI organization has Zero Data Retention enabled and you still encounter errors such as:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;OpenAI rejected the request. Error details: Status: 400, Code: unsupported_parameter, Type: invalid_request_error, Message: 400 Previous response cannot be used for this organization due to Zero Data Retention.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ensure you are running &lt;code&gt;codex&lt;/code&gt; with &lt;code&gt;--config disable_response_storage=true&lt;/code&gt; or add this line to &lt;code&gt;~/.codex/config.toml&lt;/code&gt; to avoid specifying the command line option each time:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;disable_response_storage = true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/openai/codex/main/codex-rs/config.md#disable_response_storage"&gt;the configuration documentation on &lt;code&gt;disable_response_storage&lt;/code&gt;&lt;/a&gt; for details.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Codex open source fund&lt;/h2&gt; 
&lt;p&gt;We're excited to launch a &lt;strong&gt;$1 million initiative&lt;/strong&gt; supporting open source projects that use Codex CLI and other OpenAI models.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grants are awarded up to &lt;strong&gt;$25,000&lt;/strong&gt; API credits.&lt;/li&gt; 
 &lt;li&gt;Applications are reviewed &lt;strong&gt;on a rolling basis&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Interested? &lt;a href="https://openai.com/form/codex-open-source-fund/"&gt;Apply here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project is under active development and the code will likely change pretty significantly.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;At the moment, we only plan to prioritize reviewing external contributions for bugs or security fixes.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you want to add a new feature or change the behavior of an existing one, please open an issue proposing the feature and get approval from an OpenAI team member before spending time building it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;New contributions that don't go through this process may be closed&lt;/strong&gt; if they aren't aligned with our current roadmap or conflict with other priorities/upcoming features.&lt;/p&gt; 
&lt;h3&gt;Development workflow&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a &lt;em&gt;topic branch&lt;/em&gt; from &lt;code&gt;main&lt;/code&gt; - e.g. &lt;code&gt;feat/interactive-prompt&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Keep your changes focused. Multiple unrelated fixes should be opened as separate PRs.&lt;/li&gt; 
 &lt;li&gt;Following the &lt;a href="https://raw.githubusercontent.com/openai/codex/main/#development-workflow"&gt;development setup&lt;/a&gt; instructions above, ensure your change is free of lint warnings and test failures.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Writing high-impact code changes&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Start with an issue.&lt;/strong&gt; Open a new one or comment on an existing discussion so we can agree on the solution before code is written.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Add or update tests.&lt;/strong&gt; Every new feature or bug-fix should come with test coverage that fails before your change and passes afterwards. 100% coverage is not required, but aim for meaningful assertions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Document behaviour.&lt;/strong&gt; If your change affects user-facing behaviour, update the README, inline help (&lt;code&gt;codex --help&lt;/code&gt;), or relevant example projects.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Keep commits atomic.&lt;/strong&gt; Each commit should compile and the tests should pass. This makes reviews and potential rollbacks easier.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Opening a pull request&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fill in the PR template (or include similar information) - &lt;strong&gt;What? Why? How?&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;strong&gt;all&lt;/strong&gt; checks locally (&lt;code&gt;cargo test &amp;amp;&amp;amp; cargo clippy --tests &amp;amp;&amp;amp; cargo fmt -- --config imports_granularity=Item&lt;/code&gt;). CI failures that could have been caught locally slow down the process.&lt;/li&gt; 
 &lt;li&gt;Make sure your branch is up-to-date with &lt;code&gt;main&lt;/code&gt; and that you have resolved merge conflicts.&lt;/li&gt; 
 &lt;li&gt;Mark the PR as &lt;strong&gt;Ready for review&lt;/strong&gt; only when you believe it is in a merge-able state.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Review process&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;One maintainer will be assigned as a primary reviewer.&lt;/li&gt; 
 &lt;li&gt;If your PR adds a new feature that was not previously discussed and approved, we may choose to close your PR (see &lt;a href="https://raw.githubusercontent.com/openai/codex/main/#contributing"&gt;Contributing&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;We may ask for changes - please do not take this personally. We value the work, but we also value consistency and long-term maintainability.&lt;/li&gt; 
 &lt;li&gt;When there is consensus that the PR meets the bar, a maintainer will squash-and-merge.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Community values&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Be kind and inclusive.&lt;/strong&gt; Treat others with respect; we follow the &lt;a href="https://www.contributor-covenant.org/"&gt;Contributor Covenant&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Assume good intent.&lt;/strong&gt; Written communication is hard - err on the side of generosity.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Teach &amp;amp; learn.&lt;/strong&gt; If you spot something confusing, open an issue or PR with improvements.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Getting help&lt;/h3&gt; 
&lt;p&gt;If you run into problems setting up the project, would like feedback on an idea, or just want to say &lt;em&gt;hi&lt;/em&gt; - please open a Discussion or jump into the relevant issue. We are happy to help.&lt;/p&gt; 
&lt;p&gt;Together we can make Codex CLI an incredible tool. &lt;strong&gt;Happy hacking!&lt;/strong&gt; &lt;span&gt;🚀&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;Contributor license agreement (CLA)&lt;/h3&gt; 
&lt;p&gt;All contributors &lt;strong&gt;must&lt;/strong&gt; accept the CLA. The process is lightweight:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Open your pull request.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Paste the following comment (or reply &lt;code&gt;recheck&lt;/code&gt; if you've signed before):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-text"&gt;I have read the CLA Document and I hereby sign the CLA
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The CLA-Assistant bot records your signature in the repo and marks the status check as passed.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;No special Git commands, email attachments, or commit footers required.&lt;/p&gt; 
&lt;h4&gt;Quick fixes&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Scenario&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Amend last commit&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git commit --amend -s --no-edit &amp;amp;&amp;amp; git push -f&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The &lt;strong&gt;DCO check&lt;/strong&gt; blocks merges until every commit in the PR carries the footer (with squash this is just the one).&lt;/p&gt; 
&lt;h3&gt;Releasing &lt;code&gt;codex&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;For admins only.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Make sure you are on &lt;code&gt;main&lt;/code&gt; and have no local changes. Then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;VERSION=0.2.0  # Can also be 0.2.0-alpha.1 or any valid Rust version.
./codex-rs/scripts/create_github_release.sh "$VERSION"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will make a local commit on top of &lt;code&gt;main&lt;/code&gt; with &lt;code&gt;version&lt;/code&gt; set to &lt;code&gt;$VERSION&lt;/code&gt; in &lt;code&gt;codex-rs/Cargo.toml&lt;/code&gt; (note that on &lt;code&gt;main&lt;/code&gt;, we leave the version as &lt;code&gt;version = "0.0.0"&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;This will push the commit using the tag &lt;code&gt;rust-v${VERSION}&lt;/code&gt;, which in turn kicks off &lt;a href="https://raw.githubusercontent.com/openai/codex/main/.github/workflows/rust-release.yml"&gt;the release workflow&lt;/a&gt;. This will create a new GitHub Release named &lt;code&gt;$VERSION&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If everything looks good in the generated GitHub Release, uncheck the &lt;strong&gt;pre-release&lt;/strong&gt; box so it is the latest release.&lt;/p&gt; 
&lt;p&gt;Create a PR to update &lt;a href="https://github.com/Homebrew/homebrew-core/raw/main/Formula/c/codex.rb"&gt;&lt;code&gt;Formula/c/codex.rb&lt;/code&gt;&lt;/a&gt; on Homebrew.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Security &amp;amp; responsible AI&lt;/h2&gt; 
&lt;p&gt;Have you discovered a vulnerability or have concerns about model output? Please e-mail &lt;strong&gt;&lt;a href="mailto:security@openai.com"&gt;security@openai.com&lt;/a&gt;&lt;/strong&gt; and we will respond promptly.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repository is licensed under the &lt;a href="https://raw.githubusercontent.com/openai/codex/main/LICENSE"&gt;Apache-2.0 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>YaLTeR/niri</title>
      <link>https://github.com/YaLTeR/niri</link>
      <description>&lt;p&gt;A scrollable-tiling Wayland compositor.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;niri&lt;/h1&gt; 
&lt;p align="center"&gt;A scrollable-tiling Wayland compositor.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://matrix.to/#/#niri:matrix.org"&gt;&lt;img alt="Matrix" src="https://img.shields.io/badge/matrix-%23niri-blue?logo=matrix" /&gt;&lt;/a&gt; &lt;a href="https://github.com/YaLTeR/niri/raw/main/LICENSE"&gt;&lt;img alt="GitHub License" src="https://img.shields.io/github/license/YaLTeR/niri" /&gt;&lt;/a&gt; &lt;a href="https://github.com/YaLTeR/niri/releases"&gt;&lt;img alt="GitHub Release" src="https://img.shields.io/github/v/release/YaLTeR/niri?logo=github" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://yalter.github.io/niri/Getting-Started.html"&gt;Getting Started&lt;/a&gt; | &lt;a href="https://yalter.github.io/niri/Configuration%3A-Introduction.html"&gt;Configuration&lt;/a&gt; | &lt;a href="https://github.com/YaLTeR/niri/discussions/325"&gt;Setup&amp;nbsp;Showcase&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/535e6530-2f44-4b84-a883-1240a3eee6e9" alt="niri with a few windows open" /&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;Windows are arranged in columns on an infinite strip going to the right. Opening a new window never causes existing windows to resize.&lt;/p&gt; 
&lt;p&gt;Every monitor has its own separate window strip. Windows can never "overflow" onto an adjacent monitor.&lt;/p&gt; 
&lt;p&gt;Workspaces are dynamic and arranged vertically. Every monitor has an independent set of workspaces, and there's always one empty workspace present all the way down.&lt;/p&gt; 
&lt;p&gt;The workspace arrangement is preserved across disconnecting and connecting monitors where it makes sense. When a monitor disconnects, its workspaces will move to another monitor, but upon reconnection they will move back to the original monitor.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Built from the ground up for scrollable tiling&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yalter.github.io/niri/Workspaces.html"&gt;Dynamic workspaces&lt;/a&gt; like in GNOME&lt;/li&gt; 
 &lt;li&gt;An &lt;a href="https://github.com/user-attachments/assets/379a5d1f-acdb-4c11-b36c-e85fd91f0995"&gt;Overview&lt;/a&gt; that zooms out workspaces and windows&lt;/li&gt; 
 &lt;li&gt;Built-in screenshot UI&lt;/li&gt; 
 &lt;li&gt;Monitor and window screencasting through xdg-desktop-portal-gnome 
  &lt;ul&gt; 
   &lt;li&gt;You can &lt;a href="https://yalter.github.io/niri/Configuration%3A-Window-Rules.html#block-out-from"&gt;block out&lt;/a&gt; sensitive windows from screencasts&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://yalter.github.io/niri/Screencasting.html#dynamic-screencast-target"&gt;Dynamic cast target&lt;/a&gt; that can change what it shows on the go&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/YaLTeR/niri/assets/1794388/946a910e-9bec-4cd1-a923-4a9421707515"&gt;Touchpad&lt;/a&gt; and &lt;a href="https://github.com/YaLTeR/niri/assets/1794388/8464e65d-4bf2-44fa-8c8e-5883355bd000"&gt;mouse&lt;/a&gt; gestures&lt;/li&gt; 
 &lt;li&gt;Group windows into &lt;a href="https://yalter.github.io/niri/Tabs.html"&gt;tabs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Configurable layout: gaps, borders, struts, window sizes&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yalter.github.io/niri/Configuration%3A-Layout.html#gradients"&gt;Gradient borders&lt;/a&gt; with Oklab and Oklch support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/YaLTeR/niri/assets/1794388/ce178da2-af9e-4c51-876f-8709c241d95e"&gt;Animations&lt;/a&gt; with support for &lt;a href="https://github.com/YaLTeR/niri/assets/1794388/27a238d6-0a22-4692-b794-30dc7a626fad"&gt;custom shaders&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Live-reloading config&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Video Demo&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/YaLTeR/niri/assets/1794388/bce834b0-f205-434e-a027-b373495f9729"&gt;https://github.com/YaLTeR/niri/assets/1794388/bce834b0-f205-434e-a027-b373495f9729&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Also check out this video from Brodie Robertson that showcases a lot of the niri functionality: &lt;a href="https://youtu.be/DeYx2exm04M"&gt;Niri Is My New Favorite Wayland Compositor&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;p&gt;Niri is stable for day-to-day use and does most things expected of a Wayland compositor. Many people are daily-driving niri, and are happy to help in our &lt;a href="https://matrix.to/#/#niri:matrix.org"&gt;Matrix channel&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Give it a try! Follow the instructions on the &lt;a href="https://yalter.github.io/niri/Getting-Started.html"&gt;Getting Started&lt;/a&gt; page. Have your &lt;a href="https://github.com/Alexays/Waybar"&gt;waybar&lt;/a&gt;s and &lt;a href="https://codeberg.org/dnkl/fuzzel"&gt;fuzzel&lt;/a&gt;s ready: niri is not a complete desktop environment. Also check out &lt;a href="https://github.com/Vortriz/awesome-niri"&gt;awesome-niri&lt;/a&gt;, a list of niri-related links and projects.&lt;/p&gt; 
&lt;p&gt;Here are some points you may have questions about:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-monitor&lt;/strong&gt;: yes, a core part of the design from the very start. Mixed DPI works.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fractional scaling&lt;/strong&gt;: yes, plus all niri UI stays pixel-perfect.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;NVIDIA&lt;/strong&gt;: seems to work fine.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Floating windows&lt;/strong&gt;: yes, starting from niri 25.01.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Input devices&lt;/strong&gt;: niri supports tablets, touchpads, and touchscreens. You can map the tablet to a specific monitor, or use &lt;a href="https://opentabletdriver.net/"&gt;OpenTabletDriver&lt;/a&gt;. We have touchpad gestures, but no touchscreen gestures yet.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Wlr protocols&lt;/strong&gt;: yes, we have most of the important ones like layer-shell, gamma-control, screencopy. You can check on &lt;a href="https://wayland.app"&gt;wayland.app&lt;/a&gt; at the bottom of each protocol's page.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: while I run niri on beefy machines, I try to stay conscious of performance. I've seen someone use it fine on an Eee&amp;nbsp;PC&amp;nbsp;900 from&amp;nbsp;2008, of all things.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Xwayland&lt;/strong&gt;: no built-in support, but xwayland-satellite is &lt;a href="https://yalter.github.io/niri/Xwayland.html#using-xwayland-satellite"&gt;easy to set up&lt;/a&gt; and works very well. 
  &lt;ul&gt; 
   &lt;li&gt;Steam and games, including Proton: work perfectly through xwayland-satellite.&lt;/li&gt; 
   &lt;li&gt;JetBrains IDEs, Ghidra: work well through xwayland-satellite.&lt;/li&gt; 
   &lt;li&gt;Discord and other Electron apps: work well through xwayland-satellite.&lt;/li&gt; 
   &lt;li&gt;Chromium and VSCode: work perfectly natively on Wayland with the right flags.&lt;/li&gt; 
   &lt;li&gt;X11 apps that want to position windows or bars at specific screen coordinates: won't work well; you can run them in a nested compositor like &lt;a href="https://yalter.github.io/niri/Xwayland.html#using-the-labwc-wayland-compositor"&gt;labwc&lt;/a&gt; or &lt;a href="https://yalter.github.io/niri/Xwayland.html#directly-running-xwayland-in-rootful-mode"&gt;rootful Xwayland&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Display scaling (integer or fractional) keeps X11 apps crisp, but you need the latest xwayland-satellite. For games, you can run them in &lt;a href="https://github.com/ValveSoftware/gamescope"&gt;gamescope&lt;/a&gt; at native resolution, even with display scaling.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Media&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/Kmz8ODolnDg?list=PLRdS-n5seLRqrmWDQY4KDqtRMfIwU0U3T"&gt;niri: Making a Wayland compositor in Rust&lt;/a&gt; · &lt;em&gt;December 2024&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;My talk from the 2024 Moscow RustCon about niri, and how I do randomized property testing and profiling, and measure input latency. The talk is in Russian, but I prepared full English subtitles that you can find in YouTube's subtitle language selector.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.trommelspeicher.de/podcast/special_the_developer_behind_niri"&gt;An interview with Ivan, the developer behind Niri&lt;/a&gt; · &lt;em&gt;June 2025&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;An interview by a German tech podcast Das Triumvirat (in English). We talk about niri development and history, and my experience building and maintaining niri.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://lwn.net/Articles/1025866/"&gt;A tour of the niri scrolling-tiling Wayland compositor&lt;/a&gt; · &lt;em&gt;July 2025&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;An LWN article with a nice overview and introduction to niri.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you'd like to help with niri, there are plenty of both coding- and non-coding-related ways to do so. See &lt;a href="https://github.com/YaLTeR/niri/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for an overview.&lt;/p&gt; 
&lt;h2&gt;Inspiration&lt;/h2&gt; 
&lt;p&gt;Niri is heavily inspired by &lt;a href="https://github.com/paperwm/PaperWM"&gt;PaperWM&lt;/a&gt; which implements scrollable tiling on top of GNOME Shell.&lt;/p&gt; 
&lt;p&gt;One of the reasons that prompted me to try writing my own compositor is being able to properly separate the monitors. Being a GNOME Shell extension, PaperWM has to work against Shell's global window coordinate space to prevent windows from overflowing.&lt;/p&gt; 
&lt;h2&gt;Tile Scrollably Elsewhere&lt;/h2&gt; 
&lt;p&gt;Here are some other projects which implement a similar workflow:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paperwm/PaperWM"&gt;PaperWM&lt;/a&gt;: scrollable tiling on top of GNOME Shell.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/peterfajdiga/karousel"&gt;karousel&lt;/a&gt;: scrollable tiling on top of KDE.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dawsers/scroll"&gt;scroll&lt;/a&gt; and &lt;a href="https://spwhitton.name/tech/code/papersway/"&gt;papersway&lt;/a&gt;: scrollable tiling on top of sway/i3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hyprwm/hyprland-plugins/tree/main/hyprscrolling"&gt;hyprscrolling&lt;/a&gt; and &lt;a href="https://gitlab.com/magus/hyprslidr"&gt;hyprslidr&lt;/a&gt;: scrollable tiling on top of Hyprland.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mogenson/PaperWM.spoon"&gt;PaperWM.spoon&lt;/a&gt;: scrollable tiling on top of macOS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;Our main communication channel is a Matrix chat, feel free to join and ask a question: &lt;a href="https://matrix.to/#/#niri:matrix.org"&gt;https://matrix.to/#/#niri:matrix.org&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We also have a community Discord server: &lt;a href="https://discord.gg/vT8Sfjy7sx"&gt;https://discord.gg/vT8Sfjy7sx&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DioxusLabs/dioxus</title>
      <link>https://github.com/DioxusLabs/dioxus</link>
      <description>&lt;p&gt;Fullstack app framework for web, desktop, and mobile.&lt;/p&gt;&lt;hr&gt;&lt;p&gt; &lt;/p&gt;
&lt;p align="center"&gt; 
 &lt;!-- &lt;img src="./notes/header-light-updated.svg#gh-light-mode-only" &gt;
      &lt;img src="./notes/header-dark-updated.svg#gh-dark-mode-only" &gt; --&gt; 
 &lt;!-- &lt;a href="https://dioxuslabs.com"&gt;
          &lt;img src="./notes/flat-splash.avif"&gt;
      &lt;/a&gt; --&gt; &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/splash-header-darkmode.svg#gh-dark-mode-only" style="width: 80%; height: auto;" /&gt; &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/splash-header.svg#gh-light-mode-only" style="width: 80%; height: auto;" /&gt; &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/image-splash.avif" /&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;!-- Crates version --&gt; 
 &lt;a href="https://crates.io/crates/dioxus"&gt; &lt;img src="https://img.shields.io/crates/v/dioxus.svg?style=flat-square" alt="Crates.io version" /&gt; &lt;/a&gt; 
 &lt;!-- Downloads --&gt; 
 &lt;a href="https://crates.io/crates/dioxus"&gt; &lt;img src="https://img.shields.io/crates/d/dioxus.svg?style=flat-square" alt="Download" /&gt; &lt;/a&gt; 
 &lt;!-- docs --&gt; 
 &lt;a href="https://docs.rs/dioxus"&gt; &lt;img src="https://img.shields.io/badge/docs-latest-blue.svg?style=flat-square" alt="docs.rs docs" /&gt; &lt;/a&gt; 
 &lt;!-- CI --&gt; 
 &lt;a href="https://github.com/jkelleyrtp/dioxus/actions"&gt; &lt;img src="https://github.com/dioxuslabs/dioxus/actions/workflows/main.yml/badge.svg?sanitize=true" alt="CI status" /&gt; &lt;/a&gt; 
 &lt;!--Awesome --&gt; 
 &lt;a href="https://dioxuslabs.com/awesome"&gt; &lt;img src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true" alt="Awesome Page" /&gt; &lt;/a&gt; 
 &lt;!-- Discord --&gt; 
 &lt;a href="https://discord.gg/XgGxMSkvUM"&gt; &lt;img src="https://img.shields.io/discord/899851952891002890.svg?logo=discord&amp;amp;style=flat-square" alt="Discord Link" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt; &lt;a href="https://dioxuslabs.com"&gt; Website &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href="https://github.com/DioxusLabs/dioxus/tree/main/examples"&gt; Examples &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href="https://dioxuslabs.com/learn/0.6/guide"&gt; Guide &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href="https://github.com/DioxusLabs/dioxus/raw/main/translations/zh-cn/README.md"&gt; 中文 &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href="https://github.com/DioxusLabs/dioxus/raw/main/translations/pt-br/README.md"&gt; PT-BR &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href="https://github.com/DioxusLabs/dioxus/raw/main/translations/ja-jp/README.md"&gt; 日本語 &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href="https://github.com/DioxusLabs/dioxus/raw/main/translations/tr-tr"&gt; Türkçe &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href="https://github.com/DioxusLabs/dioxus/raw/main/translations/ko-kr"&gt; 한국어 &lt;/a&gt; &lt;/h3&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/DioxusLabs/dioxus/releases/tag/v0.7.0-alpha.0"&gt;✨ Dioxus 0.7 is in alpha - test it out! ✨&lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;Build for web, desktop, and mobile, and more with a single codebase. Zero-config setup, integrated hot-reloading, and signals-based state management. Add backend functionality with Server Functions and bundle with our CLI.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;fn app() -&amp;gt; Element {
    let mut count = use_signal(|| 0);

    rsx! {
        h1 { "High-Five counter: {count}" }
        button { onclick: move |_| count += 1, "Up high!" }
        button { onclick: move |_| count -= 1, "Down low!" }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;⭐️ Unique features:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Cross-platform apps in three lines of code (web, desktop, mobile, server, and more)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dioxuslabs.com/blog/release-050"&gt;Ergonomic state management&lt;/a&gt; combines the best of React, Solid, and Svelte&lt;/li&gt; 
 &lt;li&gt;Built-in featureful, type-safe, fullstack web framework&lt;/li&gt; 
 &lt;li&gt;Integrated bundler for deploying to the web, macOS, Linux, and Windows&lt;/li&gt; 
 &lt;li&gt;Subsecond Rust hot-patching and asset hot-reloading&lt;/li&gt; 
 &lt;li&gt;And more! &lt;a href="https://dioxuslabs.com/learn/0.6/"&gt;Take a tour of Dioxus&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Instant hot-reloading&lt;/h2&gt; 
&lt;p&gt;With one command, &lt;code&gt;dx serve&lt;/code&gt; and your app is running. Edit your markup, styles, and see changes in milliseconds. Use our experimental &lt;code&gt;dx serve --hotpatch&lt;/code&gt; to update Rust code in real time.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/screenshots/refs/heads/main/blitz/hotreload-video.webp" /&gt; 
 &lt;!-- &lt;video src="https://private-user-images.githubusercontent.com/10237910/386919031-6da371d5-3340-46da-84ff-628216851ba6.mov" width="500"&gt;&lt;/video&gt; --&gt; 
 &lt;!-- &lt;video src="https://private-user-images.githubusercontent.com/10237910/386919031-6da371d5-3340-46da-84ff-628216851ba6.mov" width="500"&gt;&lt;/video&gt; --&gt; 
&lt;/div&gt; 
&lt;h2&gt;Build Beautiful Apps&lt;/h2&gt; 
&lt;p&gt;Dioxus apps are styled with HTML and CSS. Use the built-in TailwindCSS support or load your favorite CSS library. Easily call into native code (objective-c, JNI, Web-Sys) for a perfect native touch.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/ebou2.avif" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Experimental Native Renderer&lt;/h2&gt; 
&lt;p&gt;Render using web-sys, webview, server-side-rendering, liveview, or even with our experimental WGPU-based renderer. Embed Dioxus in Bevy, WGPU, or even run on embedded Linux!&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/screenshots/refs/heads/main/blitz/native-blitz-wgpu.webp" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;First-party primitive components&lt;/h2&gt; 
&lt;p&gt;Get started quickly with a complete set of primitives modeled after shadcn/ui and Radix-Primitives.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/primitive-components.avif" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;First-class Android and iOS support&lt;/h2&gt; 
&lt;p&gt;Dioxus is the fastest way to build native mobile apps with Rust. Simply run &lt;code&gt;dx serve --platform android&lt;/code&gt; and your app is running in an emulator or on device in seconds. Call directly into JNI and Native APIs.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/android_and_ios2.avif" width="500" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Productive, typesafe, fullstack web framework&lt;/h2&gt; 
&lt;p&gt;Directly call your backend from your frontend with our built-in type-safe RPC using &lt;a href="http://crates.io/crates/server_fn"&gt;&lt;code&gt;server_fn&lt;/code&gt;&lt;/a&gt;. Supports streaming, suspense, bundle splitting, websockets, and more.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;fn app() -&amp;gt; Element {
  let mut fortune = use_signal(|| "Fetch a fortune!");
  rsx! {
    h1 { "{fortune}" }
    button {
      onclick: move |_| async move {
        fortune.set(fetch_fortune().await.unwrap());
      }
    }
  }
}

#[server]
async fn fetch_fortune() -&amp;gt; ServerFnResult&amp;lt;String&amp;gt; {
  "Dioxus is super productive!".to_string()
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Bundle for web, desktop, and mobile&lt;/h2&gt; 
&lt;p&gt;Simply run &lt;code&gt;dx bundle&lt;/code&gt; and your app will be built and bundled with maximization optimizations. On the web, take advantage of &lt;a href="https://dioxuslabs.com/learn/0.6/guides/assets"&gt;&lt;code&gt;.avif&lt;/code&gt; generation, &lt;code&gt;.wasm&lt;/code&gt; compression, minification&lt;/a&gt;, and more. Build WebApps weighing &lt;a href="https://github.com/ealmloff/tiny-dioxus/"&gt;less than 50kb&lt;/a&gt; and desktop/mobile apps less than 5mb.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/bundle.gif" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Fantastic documentation&lt;/h2&gt; 
&lt;p&gt;We've put a ton of effort into building clean, readable, and comprehensive documentation. All html elements and listeners are documented with MDN docs, and our Docs runs continuous integration with Dioxus itself to ensure that the docs are always up to date. Check out the &lt;a href="https://dioxuslabs.com/learn/0.6/"&gt;Dioxus website&lt;/a&gt; for guides, references, recipes, and more. Fun fact: we use the Dioxus website as a testbed for new Dioxus features - &lt;a href="https://github.com/dioxusLabs/docsite"&gt;check it out!&lt;/a&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/docs.avif" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Modular and Customizable&lt;/h2&gt; 
&lt;p&gt;Build your own renderer, or use a community renderer like &lt;a href="http://freyaui.dev"&gt;Freya&lt;/a&gt;. Use our modular components like RSX, VirtualDom, Blitz, Taffy, and Subsecond.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/screenshots/refs/heads/main/blitz/freya-todo-example.webp" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Dioxus is a community-driven project, with a very active &lt;a href="https://discord.gg/XgGxMSkvUM"&gt;Discord&lt;/a&gt; and &lt;a href="https://github.com/DioxusLabs/dioxus/issues"&gt;GitHub&lt;/a&gt; community. We're always looking for help, and we're happy to answer questions and help you get started. &lt;a href="https://github.com/DioxusLabs/dioxus-std"&gt;Our SDK&lt;/a&gt; is community-run and we even have a &lt;a href="https://github.com/dioxus-community/"&gt;GitHub organization&lt;/a&gt; for the best Dioxus crates that receive free upgrades and support.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/DioxusLabs/dioxus/main/notes/dioxus-community.avif" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Full-time core team&lt;/h2&gt; 
&lt;p&gt;Dioxus has grown from a side project to a small team of fulltime engineers. Thanks to the generous support of FutureWei, Satellite.im, the GitHub Accelerator program, we're able to work on Dioxus full-time. Our long term goal is for Dioxus to become self-sustaining by providing paid high-quality enterprise tools. If your company is interested in adopting Dioxus and would like to work with us, please reach out!&lt;/p&gt; 
&lt;h2&gt;Supported Platforms&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;table style="width:100%"&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td&gt; &lt;b&gt;Web&lt;/b&gt; &lt;/td&gt; 
    &lt;td&gt; 
     &lt;ul&gt; 
      &lt;li&gt;Render directly to the DOM using WebAssembly&lt;/li&gt; 
      &lt;li&gt;Pre-render with SSR and rehydrate on the client&lt;/li&gt; 
      &lt;li&gt;Simple "hello world" at about 50kb, comparable to React&lt;/li&gt; 
      &lt;li&gt;Built-in dev server and hot reloading for quick iteration&lt;/li&gt; 
     &lt;/ul&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt; &lt;b&gt;Desktop&lt;/b&gt; &lt;/td&gt; 
    &lt;td&gt; 
     &lt;ul&gt; 
      &lt;li&gt;Render using Webview or - experimentally - with WGPU or &lt;a href="https://freyaui.dev"&gt;Freya&lt;/a&gt; (Skia) &lt;/li&gt; 
      &lt;li&gt;Zero-config setup. Simply `cargo run` or `dx serve` to build your app &lt;/li&gt; 
      &lt;li&gt;Full support for native system access without IPC &lt;/li&gt; 
      &lt;li&gt;Supports macOS, Linux, and Windows. Portable &amp;lt;3mb binaries &lt;/li&gt; 
     &lt;/ul&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt; &lt;b&gt;Mobile&lt;/b&gt; &lt;/td&gt; 
    &lt;td&gt; 
     &lt;ul&gt; 
      &lt;li&gt;Render using Webview or - experimentally - with WGPU or Skia &lt;/li&gt; 
      &lt;li&gt;Build .ipa and .apk files for iOS and Android &lt;/li&gt; 
      &lt;li&gt;Call directly into Java and Objective-C with minimal overhead&lt;/li&gt; 
      &lt;li&gt;From "hello world" to running on device in seconds&lt;/li&gt; 
     &lt;/ul&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt; &lt;b&gt;Server-side Rendering&lt;/b&gt; &lt;/td&gt; 
    &lt;td&gt; 
     &lt;ul&gt; 
      &lt;li&gt;Suspense, hydration, and server-side rendering&lt;/li&gt; 
      &lt;li&gt;Quickly drop in backend functionality with server functions&lt;/li&gt; 
      &lt;li&gt;Extractors, middleware, and routing integrations&lt;/li&gt; 
      &lt;li&gt;Static-site generation and incremental regeneration&lt;/li&gt; 
     &lt;/ul&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;h2&gt;Running the examples&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The examples in the main branch of this repository target the git version of dioxus and the CLI. If you are looking for examples that work with the latest stable release of dioxus, check out the &lt;a href="https://github.com/DioxusLabs/dioxus/tree/v0.6/examples"&gt;0.6 branch&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The examples in the top level of this repository can be run with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cargo run --example &amp;lt;example&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, we encourage you to download the dioxus-cli to test out features like hot-reloading. To install the most recent binary CLI, you can use cargo binstall.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cargo binstall dioxus-cli@0.7.0-rc.0 --force
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If this CLI is out-of-date, you can install it directly from git&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cargo install --git https://github.com/DioxusLabs/dioxus dioxus-cli --locked
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the CLI, you can also run examples with the web platform. You will need to disable the default desktop feature and enable the web feature with this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;dx serve --example &amp;lt;example&amp;gt; --platform web -- --no-default-features
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check out the website &lt;a href="https://dioxuslabs.com/learn/0.6/contributing"&gt;section on contributing&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Report issues on our &lt;a href="https://github.com/dioxuslabs/dioxus/issues"&gt;issue tracker&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/XgGxMSkvUM"&gt;Join&lt;/a&gt; the discord and ask questions!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;a href="https://github.com/dioxuslabs/dioxus/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=dioxuslabs/dioxus&amp;amp;max=30&amp;amp;columns=10" /&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under either the &lt;a href="https://github.com/DioxusLabs/dioxus/raw/master/LICENSE-MIT"&gt;MIT license&lt;/a&gt; or the &lt;a href="https://github.com/DioxusLabs/dioxus/raw/master/LICENSE-APACHE"&gt;Apache-2 License&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in Dioxus by you, shall be licensed as MIT or Apache-2, without any additional terms or conditions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rust-lang/rustlings</title>
      <link>https://github.com/rust-lang/rustlings</link>
      <description>&lt;p&gt;🦀 Small exercises to get you used to reading and writing Rust code!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href="https://rustlings.rust-lang.org"&gt;Rustlings&lt;/a&gt; 🦀&lt;/h1&gt; 
&lt;p&gt;Small exercises to get you used to reading and writing &lt;a href="https://www.rust-lang.org"&gt;Rust&lt;/a&gt; code - &lt;em&gt;Recommended in parallel to reading &lt;a href="https://doc.rust-lang.org/book"&gt;the official Rust book&lt;/a&gt; 📚️&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Visit the &lt;strong&gt;website&lt;/strong&gt; for a demo, info about setup and more:&lt;/p&gt; 
&lt;h2&gt;➡️ &lt;a href="https://rustlings.rust-lang.org"&gt;rustlings.rust-lang.org&lt;/a&gt; ⬅️&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>gleam-lang/gleam</title>
      <link>https://github.com/gleam-lang/gleam</link>
      <description>&lt;p&gt;⭐️ A friendly language for building type-safe, scalable systems!&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/gleam-lang/gleam/main/images/lucy.png" alt="Lucy, Gleam's mascot" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/gleam-lang/gleam/releases"&gt;&lt;img src="https://img.shields.io/github/release/gleam-lang/gleam" alt="GitHub release" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/Fm8Pwmy"&gt;&lt;img src="https://img.shields.io/discord/768594524158427167?color=blue" alt="Discord chat" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;!-- A spacer --&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;p&gt;Gleam is a friendly language for building type-safe systems that scale! For more information see &lt;a href="https://gleam.run"&gt;the website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support Gleam!&lt;/h2&gt; 
&lt;p&gt;Gleam is not owned by a corporation, instead it is kindly supported by its sponsors. If you like Gleam please consider &lt;a href="https://gleam.run/sponsor"&gt;sponsoring the project or members of the core team&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Thank you so much! 💖&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ofek/pyapp</title>
      <link>https://github.com/ofek/pyapp</link>
      <description>&lt;p&gt;Runtime installer for Python applications&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PyApp&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CI/CD&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ofek/pyapp/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/ofek/pyapp/actions/workflows/test.yml/badge.svg?sanitize=true" alt="CI - Test" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ofek/pyapp/actions/workflows/publish.yml"&gt;&lt;img src="https://github.com/ofek/pyapp/actions/workflows/publish.yml/badge.svg?sanitize=true" alt="CD - Publish" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Docs&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ofek/pyapp/actions/workflows/docs-latest.yml"&gt;&lt;img src="https://github.com/ofek/pyapp/actions/workflows/docs-latest.yml/badge.svg?sanitize=true" alt="Docs - Latest" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ofek/pyapp/actions/workflows/docs-dev.yml"&gt;&lt;img src="https://github.com/ofek/pyapp/actions/workflows/docs-dev.yml/badge.svg?sanitize=true" alt="Docs - Dev" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Project&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://crates.io/crates/pyapp"&gt;&lt;img src="https://img.shields.io/crates/v/pyapp" alt="Project - Version" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/pyapp"&gt;&lt;img src="https://img.shields.io/crates/d/pyapp?label=package%20downloads" alt="Project - Package downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ofek/pyapp/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/ofek/pyapp/total?label=repo%20downloads" alt="Project - Repo downloads" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Meta&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/pypa/hatch"&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%A5%9A-Hatch-4051b5.svg?sanitize=true" alt="Hatch project" /&gt;&lt;/a&gt; &lt;a href="https://spdx.org/licenses/"&gt;&lt;img src="https://img.shields.io/badge/license-Apache--2.0%20OR%20MIT-9400d3.svg?sanitize=true" alt="License - Apache-2.0 OR MIT" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/ofek"&gt;&lt;img src="https://img.shields.io/github/sponsors/ofek?logo=GitHub%20Sponsors&amp;amp;style=social" alt="GitHub Sponsors" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;p&gt;PyApp is a wrapper for Python applications that bootstrap themselves at runtime.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;th&gt;You build&lt;/th&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ofek/pyapp/master/docs/assets/images/example-build.gif" alt="PyApp example build" role="img" /&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;th&gt;User runs&lt;/th&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ofek/pyapp/master/docs/assets/images/example-run.gif" alt="PyApp example run" role="img" /&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;p&gt;See the &lt;a href="https://ofek.dev/pyapp/latest/how-to/"&gt;how-to&lt;/a&gt; for a detailed example walkthrough.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Easily build standalone binaries for every platform&lt;/li&gt; 
 &lt;li&gt;Optional management commands providing functionality such as self updates&lt;/li&gt; 
 &lt;li&gt;Extremely configurable runtime behavior allowing for targeting of different end users&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://ofek.dev/pyapp/"&gt;documentation&lt;/a&gt; is made with &lt;a href="https://github.com/squidfunk/mkdocs-material"&gt;Material for MkDocs&lt;/a&gt; and is hosted by &lt;a href="https://docs.github.com/en/pages"&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;PyApp is distributed under the terms of any of the following licenses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://spdx.org/licenses/Apache-2.0.html"&gt;Apache-2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://spdx.org/licenses/MIT.html"&gt;MIT&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>fish-shell/fish-shell</title>
      <link>https://github.com/fish-shell/fish-shell</link>
      <description>&lt;p&gt;The user-friendly command line shell.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. |Cirrus CI| image:: &lt;a href="https://api.cirrus-ci.com/github/fish-shell/fish-shell.svg?branch=master"&gt;https://api.cirrus-ci.com/github/fish-shell/fish-shell.svg?branch=master&lt;/a&gt; :target: &lt;a href="https://cirrus-ci.com/github/fish-shell/fish-shell"&gt;https://cirrus-ci.com/github/fish-shell/fish-shell&lt;/a&gt; :alt: Cirrus CI Build Status&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;fish &amp;lt;https://fishshell.com/&amp;gt;&lt;/code&gt;__ - the friendly interactive shell |Build Status| |Cirrus CI|&lt;/h1&gt; 
&lt;p&gt;fish is a smart and user-friendly command line shell for macOS, Linux, and the rest of the family. fish includes features like syntax highlighting, autosuggest-as-you-type, and fancy tab completions that just work, with no configuration required.&lt;/p&gt; 
&lt;p&gt;For downloads, screenshots and more, go to &lt;a href="https://fishshell.com/"&gt;https://fishshell.com/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;fish generally works like other shells, like bash or zsh. A few important differences can be found at &lt;a href="https://fishshell.com/docs/current/tutorial.html"&gt;https://fishshell.com/docs/current/tutorial.html&lt;/a&gt; by searching for the magic phrase “unlike other shells”.&lt;/p&gt; 
&lt;p&gt;Detailed user documentation is available by running &lt;code&gt;help&lt;/code&gt; within fish, and also at &lt;a href="https://fishshell.com/docs/current/index.html"&gt;https://fishshell.com/docs/current/index.html&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting fish&lt;/h2&gt; 
&lt;p&gt;macOS&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
fish can be installed:

-  using `Homebrew &amp;lt;http://brew.sh/&amp;gt;`__: ``brew install fish``
-  using `MacPorts &amp;lt;https://www.macports.org/&amp;gt;`__:
   ``sudo port install fish``
-  using the `installer from fishshell.com &amp;lt;https://fishshell.com/&amp;gt;`__
-  as a `standalone app from fishshell.com &amp;lt;https://fishshell.com/&amp;gt;`__

Note: The minimum supported macOS version is 10.10 "Yosemite".

Packages for Linux
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Packages for Debian, Fedora, openSUSE, and Red Hat Enterprise Linux/CentOS are available from the &lt;code&gt;openSUSE Build Service &amp;lt;https://software.opensuse.org/download.html?project=shells%3Afish&amp;amp;package=fish&amp;gt;&lt;/code&gt;__.&lt;/p&gt; 
&lt;p&gt;Packages for Ubuntu are available from the &lt;code&gt;fish PPA &amp;lt;https://launchpad.net/~fish-shell/+archive/ubuntu/release-4&amp;gt;&lt;/code&gt;__, and can be installed using the following commands:&lt;/p&gt; 
&lt;p&gt;::&lt;/p&gt; 
&lt;p&gt;sudo apt-add-repository ppa:fish-shell/release-4 sudo apt update sudo apt install fish&lt;/p&gt; 
&lt;p&gt;Instructions for other distributions may be found at &lt;code&gt;fishshell.com &amp;lt;https://fishshell.com&amp;gt;&lt;/code&gt;__.&lt;/p&gt; 
&lt;p&gt;Windows&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
-  On Windows 10/11, fish can be installed under the WSL Windows Subsystem
   for Linux with the instructions for the appropriate distribution
   listed above under “Packages for Linux”, or from source with the
   instructions below.
-  Fish can also be installed on all versions of Windows using
   `Cygwin &amp;lt;https://cygwin.com/&amp;gt;`__ or `MSYS2 &amp;lt;https://github.com/Berrysoft/fish-msys2&amp;gt;`__.

Building from source
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If packages are not available for your platform, GPG-signed tarballs are available from &lt;code&gt;fishshell.com &amp;lt;https://fishshell.com/&amp;gt;&lt;/code&gt;__ and &lt;code&gt;fish-shell on GitHub &amp;lt;https://github.com/fish-shell/fish-shell/releases&amp;gt;&lt;/code&gt;__. See the &lt;code&gt;Building &amp;lt;#building&amp;gt;&lt;/code&gt;_ section for instructions.&lt;/p&gt; 
&lt;h2&gt;Running fish&lt;/h2&gt; 
&lt;p&gt;Once installed, run &lt;code&gt;fish&lt;/code&gt; from your current shell to try fish out!&lt;/p&gt; 
&lt;p&gt;Dependencies&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
Running fish requires:

-  some common \*nix system utilities (currently ``mktemp``), in
   addition to the basic POSIX utilities (``cat``, ``cut``, ``dirname``,
   ``file``, ``ls``, ``mkdir``, ``mkfifo``, ``rm``, ``sort``, ``tee``, ``tr``,
   ``uname`` and ``sed`` at least, but the full coreutils plus ``find`` and
   ``awk`` is preferred)
-  The gettext library, if compiled with
   translation support

The following optional features also have specific requirements:

-  builtin commands that have the ``--help`` option or print usage
   messages require ``nroff`` or ``mandoc`` for
   display
-  automated completion generation from manual pages requires Python 3.5+
-  the ``fish_config`` web configuration tool requires Python 3.5+ and a web browser
-  system clipboard integration (with the default Ctrl-V and Ctrl-X
   bindings) require either the ``xsel``, ``xclip``,
   ``wl-copy``/``wl-paste`` or ``pbcopy``/``pbpaste`` utilities
-  full completions for ``yarn`` and ``npm`` require the
   ``all-the-package-names`` NPM module
-  ``colorls`` is used, if installed, to add color when running ``ls`` on platforms
   that do not have color support (such as OpenBSD)

Building
--------

.. _dependencies-1:

Dependencies
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Compiling fish requires:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Rust (version 1.70 or later)&lt;/li&gt; 
 &lt;li&gt;CMake (version 3.15 or later)&lt;/li&gt; 
 &lt;li&gt;a C compiler (for system feature detection and the test helper binary)&lt;/li&gt; 
 &lt;li&gt;PCRE2 (headers and libraries) - optional, this will be downloaded if missing&lt;/li&gt; 
 &lt;li&gt;gettext (headers and libraries) - optional, for translation support&lt;/li&gt; 
 &lt;li&gt;an Internet connection, as other dependencies will be downloaded automatically&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Sphinx is also optionally required to build the documentation from a cloned git repository.&lt;/p&gt; 
&lt;p&gt;Additionally, running the full test suite requires Python 3, tmux, and the pexpect package.&lt;/p&gt; 
&lt;p&gt;Building from source with CMake&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
Rather than building from source, consider using a packaged build for your platform. Using the
steps below makes fish difficult to uninstall or upgrade. Release packages are available from the
links above, and up-to-date `development builds of fish are available for many platforms
&amp;lt;https://github.com/fish-shell/fish-shell/wiki/Development-builds&amp;gt;`__

To install into ``/usr/local``, run:

.. code:: bash

   mkdir build; cd build
   cmake ..
   cmake --build .
   sudo cmake --install .

The install directory can be changed using the
``-DCMAKE_INSTALL_PREFIX`` parameter for ``cmake``.

CMake Build options
~~~~~~~~~~~~~~~~~~~

In addition to the normal CMake build options (like ``CMAKE_INSTALL_PREFIX``), fish's CMake build has some other options available to customize it.

- Rust_COMPILER=path - the path to rustc. If not set, cmake will check $PATH and ~/.cargo/bin
- Rust_CARGO=path - the path to cargo. If not set, cmake will check $PATH and ~/.cargo/bin
- Rust_CARGO_TARGET=target - the target to pass to cargo. Set this for cross-compilation.
- BUILD_DOCS=ON|OFF - whether to build the documentation. This is automatically set to OFF when Sphinx isn't installed.
- INSTALL_DOCS=ON|OFF - whether to install the docs. This is automatically set to on when BUILD_DOCS is or prebuilt documentation is available (like when building in-tree from a tarball).
- FISH_USE_SYSTEM_PCRE2=ON|OFF - whether to use an installed pcre2. This is normally autodetected.
- MAC_CODESIGN_ID=String|OFF - the codesign ID to use on Mac, or "OFF" to disable codesigning.
- WITH_GETTEXT=ON|OFF - whether to build with gettext support for translations.
- extra_functionsdir, extra_completionsdir and extra_confdir - to compile in an additional directory to be searched for functions, completions and configuration snippets

Building fish with embedded data (experimental)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also build fish with the data files embedded.&lt;/p&gt; 
&lt;p&gt;This will include all the datafiles like the included functions or web configuration tool in the main &lt;code&gt;fish&lt;/code&gt; binary.&lt;/p&gt; 
&lt;p&gt;Fish will then read these right from its own binary, and print them out when needed. Some files, like the webconfig tool and the manpage completion generator, will be extracted to a temporary directory on-demand. You can list the files with &lt;code&gt;status list-files&lt;/code&gt; and print one with &lt;code&gt;status get-file path/to/file&lt;/code&gt; (e.g. &lt;code&gt;status get-file functions/fish_prompt.fish&lt;/code&gt; to get the default prompt).&lt;/p&gt; 
&lt;p&gt;To install fish with embedded files, just use &lt;code&gt;cargo&lt;/code&gt;, like::&lt;/p&gt; 
&lt;p&gt;cargo install --path /path/to/fish # if you have a git clone cargo install --git &lt;a href="https://github.com/fish-shell/fish-shell"&gt;https://github.com/fish-shell/fish-shell&lt;/a&gt; --tag 4.0.0 # to build from git with a specific version cargo install --git &lt;a href="https://github.com/fish-shell/fish-shell"&gt;https://github.com/fish-shell/fish-shell&lt;/a&gt; # to build the current development snapshot without cloning&lt;/p&gt; 
&lt;p&gt;This will place the binaries in &lt;code&gt;~/.cargo/bin/&lt;/code&gt;, but you can place them wherever you want.&lt;/p&gt; 
&lt;p&gt;This build won't have the HTML docs (&lt;code&gt;help&lt;/code&gt; will open the online version) or translations.&lt;/p&gt; 
&lt;p&gt;It will try to build the man pages with sphinx-build. If that is not available and you would like to include man pages, you need to install it and retrigger the build script, e.g. by setting FISH_BUILD_DOCS=1::&lt;/p&gt; 
&lt;p&gt;FISH_BUILD_DOCS=1 cargo install --path .&lt;/p&gt; 
&lt;p&gt;Setting it to "0" disables the inclusion of man pages.&lt;/p&gt; 
&lt;p&gt;You can also link this build statically (but not against glibc) and move it to other computers.&lt;/p&gt; 
&lt;h2&gt;Contributing Changes to the Code&lt;/h2&gt; 
&lt;p&gt;See the &lt;code&gt;Guide for Developers &amp;lt;CONTRIBUTING.rst&amp;gt;&lt;/code&gt;__.&lt;/p&gt; 
&lt;h2&gt;Contact Us&lt;/h2&gt; 
&lt;p&gt;Questions, comments, rants and raves can be posted to the official fish mailing list at &lt;a href="https://lists.sourceforge.net/lists/listinfo/fish-users"&gt;https://lists.sourceforge.net/lists/listinfo/fish-users&lt;/a&gt; or join us on our &lt;code&gt;matrix channel &amp;lt;https://matrix.to/#/#fish-shell:matrix.org&amp;gt;&lt;/code&gt;&lt;strong&gt;. Or use the &lt;code&gt;fish tag on Unix &amp;amp; Linux Stackexchange &amp;lt;https://unix.stackexchange.com/questions/tagged/fish&amp;gt;&lt;/code&gt;&lt;/strong&gt;. There is also a fish tag on Stackoverflow, but it is typically a poor fit.&lt;/p&gt; 
&lt;p&gt;Found a bug? Have an awesome idea? Please &lt;code&gt;open an issue &amp;lt;https://github.com/fish-shell/fish-shell/issues/new&amp;gt;&lt;/code&gt;__.&lt;/p&gt; 
&lt;p&gt;.. |Build Status| image:: &lt;a href="https://github.com/fish-shell/fish-shell/workflows/make%20test/badge.svg"&gt;https://github.com/fish-shell/fish-shell/workflows/make%20test/badge.svg&lt;/a&gt; :target: &lt;a href="https://github.com/fish-shell/fish-shell/actions"&gt;https://github.com/fish-shell/fish-shell/actions&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>