<rss version="2.0">
  <channel>
    <title>GitHub Go Daily Trending</title>
    <description>Daily Trending of Go in GitHub</description>
    <pubDate>Tue, 12 Aug 2025 01:33:43 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>SagerNet/sing-box</title>
      <link>https://github.com/SagerNet/sing-box</link>
      <description>&lt;p&gt;The universal proxy platform&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sing-box&lt;/h1&gt; 
&lt;p&gt;The universal proxy platform.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/sing-box/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/sing-box.svg?sanitize=true" alt="Packaging status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://sing-box.sagernet.org"&gt;https://sing-box.sagernet.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright (C) 2022 by nekohasekai &amp;lt;contact-sagernet@sekai.icu&amp;gt;

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.

In addition, no derivative work may use the name or imply association
with this application without prior consent.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>gtsteffaniak/filebrowser</title>
      <link>https://github.com/gtsteffaniak/filebrowser</link>
      <description>&lt;p&gt;üìÇ Web File Browser&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/gtsteffaniak/filebrowser/backend"&gt;&lt;img src="https://goreportcard.com/badge/github.com/gtsteffaniak/filebrowser/backend" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://www.codacy.com/gh/gtsteffaniak/filebrowser/dashboard"&gt;&lt;img src="https://app.codacy.com/project/badge/Grade/1c48cfb7646d4009aa8c6f71287670b8" alt="Codacy Badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gtsteffaniak/filebrowser/releases"&gt;&lt;img src="https://img.shields.io/github/release/gtsteffaniak/filebrowser/all.svg?sanitize=true" alt="latest version" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/gtstef/filebrowser"&gt;&lt;img src="https://img.shields.io/docker/pulls/gtstef/filebrowser?label=latest%20Docker%20pulls" alt="DockerHub Pulls" /&gt;&lt;/a&gt; &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true" alt="Apache-2.0 License" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Q&amp;amp;A#is-there-a-way-to-donate-or-support-this-project"&gt;&lt;img src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif" alt="Donate" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;img width="150" src="https://github.com/user-attachments/assets/59986a2a-f960-4536-aa35-4a9a7c98ad48" title="Logo" /&gt; 
 &lt;h3&gt;FileBrowser Quantum&lt;/h3&gt; The best free self-hosted web-based file manager. 
 &lt;br /&gt;
 &lt;br /&gt; 
 &lt;img width="800" src="https://github.com/user-attachments/assets/95af22fa-7760-4f7b-9c20-51fdcfe8f4ea" title="Main Screenshot" /&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] There is no stable version -- &lt;span&gt;üöß&lt;/span&gt; planned for 2025. (&lt;a href="https://github.com/gtsteffaniak/filebrowser/discussions/628"&gt;Read more&lt;/a&gt;)&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://github.com/gtsteffaniak/filebrowser/discussions/787"&gt;FYI: how much RAM does it require?&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;FileBrowser Quantum provides an easy way to access and manage your files from the web. It has has a web page interface that allows you to create secure shared links, users with their own specific permissions and settings, and offers a great viewing experience for many file types.&lt;/p&gt; 
&lt;p&gt;This version is called "Quantum" because it packs tons of advanced features into a tiny easy to run file. Unlike the majority of alternative options, FileBrowser Quantum is simple to install and easy to configure.&lt;/p&gt; 
&lt;p&gt;The goal for this repo is to become the best open-source self-hosted file browsing application that exists -- &lt;strong&gt;all for free&lt;/strong&gt;. This repo will always be free and open-source.&lt;/p&gt; 
&lt;p&gt;Ready to try it out? See &lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Getting-Started"&gt;Getting Started Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How its different&lt;/h2&gt; 
&lt;p&gt;FileBrowser Quantum is a massive fork of the file browser open-source project with the following changes:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;‚úÖ Multiple sources support&lt;/li&gt; 
 &lt;li&gt;‚úÖ Login support for OIDC, password + 2FA, and proxy.&lt;/li&gt; 
 &lt;li&gt;‚úÖ Revamped UI&lt;/li&gt; 
 &lt;li&gt;‚úÖ Simplified configuration via &lt;code&gt;config.yaml&lt;/code&gt; config file.&lt;/li&gt; 
 &lt;li&gt;‚úÖ Ultra-efficient &lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Indexing"&gt;indexing&lt;/a&gt; and real-time updates 
  &lt;ul&gt; 
   &lt;li&gt;Real-time search results as you type.&lt;/li&gt; 
   &lt;li&gt;Real-time monitoring and updates in the UI.&lt;/li&gt; 
   &lt;li&gt;Search supports file and folder sizes, along with various filters.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;‚úÖ Better listing browsing 
  &lt;ul&gt; 
   &lt;li&gt;More file type previews, such as &lt;strong&gt;office&lt;/strong&gt; and &lt;strong&gt;video&lt;/strong&gt; file previews&lt;/li&gt; 
   &lt;li&gt;Instantly switches view modes and sort order without reloading data.&lt;/li&gt; 
   &lt;li&gt;Folder sizes are displayed.&lt;/li&gt; 
   &lt;li&gt;Navigating remembers the last scroll position.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;‚úÖ Developer API support 
  &lt;ul&gt; 
   &lt;li&gt;Ability to create long-lived API Tokens.&lt;/li&gt; 
   &lt;li&gt;A helpful Swagger page is available at &lt;code&gt;/swagger&lt;/code&gt; endpoint for API enabled users.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Notable features that this fork &lt;em&gt;does not&lt;/em&gt; have (removed):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;üöß&lt;/span&gt; jobs are not supported yet.&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;üöß&lt;/span&gt; rules are not supported yet.&lt;/li&gt; 
 &lt;li&gt;‚ùå shell commands are completely removed and will not be returned.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Every file and directory in the source gets indexed (by default). This enables powerful features such as instant search, but large source filesystems can increase your system requirements. &lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Indexing"&gt;See indexing wiki&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;FileBrowser Quantum differs significantly from the original version. Many of these changes required a significant overhaul. Creating a fork was a necessary process to make the program better. There have been many growing pains, but a stable release is planned and coming soon.&lt;/p&gt; 
&lt;h2&gt;The UI&lt;/h2&gt; 
&lt;p&gt;The UI has a simple three-component navigation system:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;(Left) Multi-action button with slide-out panel.&lt;/li&gt; 
 &lt;li&gt;(Middle) The powerful search bar.&lt;/li&gt; 
 &lt;li&gt;(Right) The view change toggle.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;All other functions are moved either into the action menu or pop-up menus. If the action does not depend on context, it will exist in the slide-out action panel. If the action is available based on context, it will show up as a pop-up menu.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img width="1000" src="https://github.com/user-attachments/assets/aa32b05c-f917-47bb-b07f-857edc5e47f7" title="Search GIF" /&gt; &lt;/p&gt; 
&lt;h2&gt;Install and Configuration&lt;/h2&gt; 
&lt;p&gt;Check out the &lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Getting-Started"&gt;Getting Started Wiki&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For help configuring your filebrowser see &lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Configuration-And-Examples"&gt;Configuration Wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Command Line Usage&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/CLI"&gt;CLI Wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;API Usage&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/API"&gt;API Wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Office File Support&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Office-Support#adding-open-office-integration-for-docker"&gt;Office Support Wiki&lt;/a&gt; on how to enable office file editing and office-related features.&lt;/p&gt; 
&lt;h2&gt;Migration from the original filebrowser&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Migration"&gt;Migration Wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Other Questions&lt;/h2&gt; 
&lt;p&gt;For more, see the &lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Q&amp;amp;A"&gt;Q&amp;amp;A Wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Comparison Chart&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Application Name&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://github.com/user-attachments/assets/59986a2a-f960-4536-aa35-4a9a7c98ad48" /&gt; Quantum&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://github.com/filebrowser/filebrowser/raw/master/frontend/public/img/logo.svg?sanitize=true" /&gt; Filebrowser&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://github.com/mickael-kerjean/filestash/raw/master/public/assets/logo/app_icon.png?raw=true" /&gt; Filestash&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://avatars.githubusercontent.com/u/19211038?s=200&amp;amp;v=4" /&gt; Nextcloud&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/da/Google_Drive_logo.png/480px-Google_Drive_logo.png" /&gt; Google_Drive&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://avatars.githubusercontent.com/u/6422152?v=4" /&gt; FileRun&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Filesystem support&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mac&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Self hostable&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Has Stable Release?&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;S3 support&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;webdav support&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FTP support&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Dedicated docs site?&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multiple sources at once&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Docker image size&lt;/td&gt; 
   &lt;td&gt;180 MB (with ffmpeg)&lt;/td&gt; 
   &lt;td&gt;31 MB&lt;/td&gt; 
   &lt;td&gt;240 MB (main image)&lt;/td&gt; 
   &lt;td&gt;250 MB&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;&amp;gt; 2 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Min. Memory Requirements&lt;/td&gt; 
   &lt;td&gt;256 MB&lt;/td&gt; 
   &lt;td&gt;128 MB&lt;/td&gt; 
   &lt;td&gt;128 MB (main image)&lt;/td&gt; 
   &lt;td&gt;512 MB&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;512 MB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;has standalone binary&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;price&lt;/td&gt; 
   &lt;td&gt;free&lt;/td&gt; 
   &lt;td&gt;free&lt;/td&gt; 
   &lt;td&gt;free&lt;/td&gt; 
   &lt;td&gt;free tier&lt;/td&gt; 
   &lt;td&gt;free tier&lt;/td&gt; 
   &lt;td&gt;$99+&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;rich media preview&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Upload files from the web?&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Advanced Search?&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;configurable&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Indexed Search?&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;configurable&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Content-aware search?&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;configurable&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Custom job support&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multiple users&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Single sign-on support&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LDAP sign-on support&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Long-live API key support&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;API documentation page&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mobile App&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;open source?&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;tags support&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;shareable web links?&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Event-based notifications&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Metrics&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;file space quotas&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;text-based files editor&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Office file support&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Office file previews&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Themes&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Branding support&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;activity log&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Comments support&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;trash support&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Starred/pinned files&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Chromecast support&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Share collections of files&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can archive selected files&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can browse archive files&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can convert documents&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can convert videos&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can convert photos&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;üöß&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>steveiliop56/tinyauth</title>
      <link>https://github.com/steveiliop56/tinyauth</link>
      <description>&lt;p&gt;The simplest way to protect your apps with a login screen.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img alt="Tinyauth" title="Tinyauth" width="96" src="https://raw.githubusercontent.com/steveiliop56/tinyauth/main/assets/logo-rounded.png" /&gt; 
 &lt;h1&gt;Tinyauth&lt;/h1&gt; 
 &lt;p&gt;The easiest way to secure your apps with a login screen.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;img alt="License" src="https://img.shields.io/github/license/steveiliop56/tinyauth" /&gt; 
 &lt;img alt="Release" src="https://img.shields.io/github/v/release/steveiliop56/tinyauth" /&gt; 
 &lt;img alt="Issues" src="https://img.shields.io/github/issues/steveiliop56/tinyauth" /&gt; 
 &lt;img alt="Tinyauth CI" src="https://github.com/steveiliop56/tinyauth/actions/workflows/ci.yml/badge.svg?sanitize=true" /&gt; 
 &lt;a title="Crowdin" target="_blank" href="https://crowdin.com/project/tinyauth"&gt;&lt;img src="https://badges.crowdin.net/tinyauth/localized.svg?sanitize=true" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;Tinyauth is a simple authentication middleware that adds a simple login screen or OAuth with Google, Github and any provider to all of your docker apps. It supports all the popular proxies like Traefik, Nginx and Caddy.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/steveiliop56/tinyauth/main/assets/screenshot.png" alt="Screenshot" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Tinyauth is in active development and configuration may change often. Please make sure to carefully read the release notes before updating.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;You can easily get started with Tinyauth by following the guide in the &lt;a href="https://tinyauth.app/docs/getting-started.html"&gt;documentation&lt;/a&gt;. There is also an available &lt;a href="https://raw.githubusercontent.com/steveiliop56/tinyauth/main/docker-compose.example.yml"&gt;docker compose&lt;/a&gt; file that has Traefik, Whoami and Tinyauth to demonstrate its capabilities.&lt;/p&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;If you are still not sure if Tinyauth suits your needs you can try out the &lt;a href="https://demo.tinyauth.app"&gt;demo&lt;/a&gt;. The default username is &lt;code&gt;user&lt;/code&gt; and the default password is &lt;code&gt;password&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find documentation and guides on all of the available configuration of Tinyauth in the &lt;a href="https://tinyauth.app"&gt;website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Discord&lt;/h2&gt; 
&lt;p&gt;Tinyauth has a &lt;a href="https://discord.gg/eHzVaCzRRd"&gt;discord&lt;/a&gt; server. Feel free to hop in to chat about self-hosting, homelabs and of course Tinyauth. See you there!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;All contributions to the codebase are welcome! If you have any free time feel free to pick up an &lt;a href="https://github.com/steveiliop56/tinyauth/issues"&gt;issue&lt;/a&gt; or add your own missing features. Make sure to check out the &lt;a href="https://raw.githubusercontent.com/steveiliop56/tinyauth/main/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; for instructions on how to get the development server up and running.&lt;/p&gt; 
&lt;h2&gt;Localization&lt;/h2&gt; 
&lt;p&gt;If you would like to help translate Tinyauth into more languages, visit the &lt;a href="https://crowdin.com/project/tinyauth"&gt;Crowdin&lt;/a&gt; page.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Tinyauth is licensed under the GNU General Public License v3.0. TL;DR ‚Äî You may copy, distribute and modify the software as long as you track changes/dates in source files. Any modifications to or software including (via compiler) GPL-licensed code must also be made available under the GPL along with build &amp;amp; install instructions. For more information about the license check the &lt;a href="https://raw.githubusercontent.com/steveiliop56/tinyauth/main/LICENSE"&gt;license&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;A big thank you to the following people for providing me with more coffee:&lt;/p&gt; 
&lt;!-- sponsors --&gt;
&lt;a href="https://github.com/erwinkramer"&gt;&lt;img src="https://github.com/erwinkramer.png" width="64px" alt="User avatar: erwinkramer" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
&lt;a href="https://github.com/nicotsx"&gt;&lt;img src="https://github.com/nicotsx.png" width="64px" alt="User avatar: nicotsx" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
&lt;a href="https://github.com/SimpleHomelab"&gt;&lt;img src="https://github.com/SimpleHomelab.png" width="64px" alt="User avatar: SimpleHomelab" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
&lt;a href="https://github.com/jmadden91"&gt;&lt;img src="https://github.com/jmadden91.png" width="64px" alt="User avatar: jmadden91" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
&lt;a href="https://github.com/tribor"&gt;&lt;img src="https://github.com/tribor.png" width="64px" alt="User avatar: tribor" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
&lt;a href="https://github.com/eliasbenb"&gt;&lt;img src="https://github.com/eliasbenb.png" width="64px" alt="User avatar: eliasbenb" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
&lt;a href="https://github.com/afunworm"&gt;&lt;img src="https://github.com/afunworm.png" width="64px" alt="User avatar: afunworm" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
&lt;!-- sponsors --&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Freepik&lt;/strong&gt; for providing the police hat and badge.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Renee French&lt;/strong&gt; for the original gopher logo.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Coderabbit AI&lt;/strong&gt; for providing free AI code reviews.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Syrhu&lt;/strong&gt; for providing the background image of the app.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#steveiliop56/tinyauth&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=steveiliop56/tinyauth&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jguer/yay</title>
      <link>https://github.com/Jguer/yay</link>
      <description>&lt;p&gt;Yet another Yogurt - An AUR Helper written in Go&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://aur.archlinux.org/packages/yay/"&gt;&lt;img src="https://img.shields.io/aur/version/yay?color=1793d1&amp;amp;label=yay&amp;amp;logo=arch-linux&amp;amp;style=for-the-badge" alt="yay" /&gt;&lt;/a&gt; &lt;a href="https://aur.archlinux.org/packages/yay-bin/"&gt;&lt;img src="https://img.shields.io/aur/version/yay-bin?color=1793d1&amp;amp;label=yay-bin&amp;amp;logo=arch-linux&amp;amp;style=for-the-badge" alt="yay-bin" /&gt;&lt;/a&gt; &lt;a href="https://aur.archlinux.org/packages/yay-git/"&gt;&lt;img src="https://img.shields.io/aur/version/yay-git?color=1793d1&amp;amp;label=yay-git&amp;amp;logo=arch-linux&amp;amp;style=for-the-badge" alt="yay-git" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/aur/votes/yay?color=333333&amp;amp;style=for-the-badge" alt="AUR votes" /&gt; &lt;a href="https://github.com/Jguer/yay/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/jguer/yay?color=333333&amp;amp;style=for-the-badge" alt="GitHub license" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Yay&lt;/h1&gt; 
&lt;p&gt;Yet Another Yogurt - An AUR Helper Written in Go&lt;/p&gt; 
&lt;h3&gt;Help translate yay: &lt;a href="https://app.transifex.com/yay-1/yay/"&gt;Transifex&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Advanced dependency solving&lt;/li&gt; 
 &lt;li&gt;PKGBUILD downloading from ABS or AUR&lt;/li&gt; 
 &lt;li&gt;Completions for AUR packages&lt;/li&gt; 
 &lt;li&gt;Query user up-front for all input (prior to starting builds)&lt;/li&gt; 
 &lt;li&gt;Narrow search (&lt;code&gt;yay linux header&lt;/code&gt; will first search &lt;code&gt;linux&lt;/code&gt; and then narrow on &lt;code&gt;header&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Find matching package providers during search and allow selection&lt;/li&gt; 
 &lt;li&gt;Remove make dependencies at the end of the build process&lt;/li&gt; 
 &lt;li&gt;Build local PKGBUILDs with AUR dependencies&lt;/li&gt; 
 &lt;li&gt;Un/Vote for packages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://asciinema.org/a/399431"&gt;&lt;img src="https://asciinema.org/a/399431.svg?sanitize=true" alt="asciicast" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://asciinema.org/a/399433"&gt;&lt;img src="https://asciinema.org/a/399433.svg?sanitize=true" alt="asciicast" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;If you are migrating from another AUR helper, you can simply install Yay with that helper.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; We are using &lt;code&gt;sudo&lt;/code&gt; in these examples, you can switch that out for a different privilege escalation tool.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Source&lt;/h3&gt; 
&lt;p&gt;The initial installation of Yay can be done by cloning the PKGBUILD and building with makepkg:&lt;/p&gt; 
&lt;p&gt;We make sure we have the &lt;code&gt;base-devel&lt;/code&gt; package group installed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -si
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to do all of this at once, we can chain the commands like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo pacman -S --needed git base-devel &amp;amp;&amp;amp; git clone https://aur.archlinux.org/yay.git &amp;amp;&amp;amp; cd yay &amp;amp;&amp;amp; makepkg -si
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Binary&lt;/h3&gt; 
&lt;p&gt;If you do not want to compile yay yourself you can use the builds generated by GitHub Actions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/yay-bin.git
cd yay-bin
makepkg -si
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to do all of this at once, we can chain the commands like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo pacman -S --needed git base-devel &amp;amp;&amp;amp; git clone https://aur.archlinux.org/yay-bin.git &amp;amp;&amp;amp; cd yay-bin &amp;amp;&amp;amp; makepkg -si
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Other distributions&lt;/h3&gt; 
&lt;p&gt;If you're using Manjaro or &lt;a href="https://repology.org/project/yay/versions"&gt;another distribution that packages &lt;code&gt;yay&lt;/code&gt;&lt;/a&gt; you can simply install yay using pacman (as root):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pacman -S --needed git base-devel yay
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; distributions sometimes lag updating yay on their repositories.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;First Use&lt;/h2&gt; 
&lt;h4&gt;Development packages upgrade&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Use &lt;code&gt;yay -Y --gendb&lt;/code&gt; to generate a development package database for &lt;code&gt;*-git&lt;/code&gt; packages that were installed without yay. This command should only be run once.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;yay -Syu --devel&lt;/code&gt; will then check for development package updates&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use &lt;code&gt;yay -Y --devel --save&lt;/code&gt; to make development package updates permanently enabled (&lt;code&gt;yay&lt;/code&gt; and &lt;code&gt;yay -Syu&lt;/code&gt; will then always check dev packages)&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Examples of Custom Operations&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Alias to &lt;code&gt;yay -Syu&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay &amp;lt;Search Term&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Present package-installation selection menu.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Bi &amp;lt;dir&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Install dependencies and build a local PKGBUILD.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -G &amp;lt;AUR Package&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Download PKGBUILD from ABS or AUR. (yay v12.0+)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Gp &amp;lt;AUR Package&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Print to stdout PKGBUILD from ABS or AUR.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Ps&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Print system statistics.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Syu --devel&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Perform system upgrade, but also check for development package updates.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Syu --timeupdate&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Perform system upgrade and use PKGBUILD modification time (not version number) to determine update.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Wu &amp;lt;AUR Package&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Unvote for package (Requires setting &lt;code&gt;AUR_USERNAME&lt;/code&gt; and &lt;code&gt;AUR_PASSWORD&lt;/code&gt; environment variables) (yay v11.3+)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Wv &amp;lt;AUR Package&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Vote for package (Requires setting &lt;code&gt;AUR_USERNAME&lt;/code&gt; and &lt;code&gt;AUR_PASSWORD&lt;/code&gt; environment variables). (yay v11.3+)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Y --combinedupgrade --save&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Make combined upgrade the default mode.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Y --gendb&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Generate development package database used for devel update.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Yc&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Clean unneeded dependencies.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Yay does not display colored output. How do I fix it?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Make sure you have the &lt;code&gt;Color&lt;/code&gt; option in your &lt;code&gt;/etc/pacman.conf&lt;/code&gt; (see issue &lt;a href="https://github.com/Jguer/yay/issues/123"&gt;#123&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Sometimes diffs are printed to the terminal, and other times they are paged via less. How do I fix this?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Yay uses &lt;code&gt;git diff&lt;/code&gt; to display diffs, which by default tells less not to page if the output can fit into one terminal length. This behavior can be overridden by exporting your own flags (&lt;code&gt;export LESS=SRX&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Yay is not asking me to edit PKGBUILDS, and I don't like the diff menu! What can I do?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;yay --editmenu --diffmenu=false --save&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How can I tell Yay to act only on AUR packages, or only on repo packages?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;yay -{OPERATION} --aur&lt;/code&gt; &lt;code&gt;yay -{OPERATION} --repo&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;A &lt;code&gt;Flagged Out Of Date AUR Packages&lt;/code&gt; message is displayed. Why doesn't Yay update them?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This message does not mean that updated AUR packages are available. It means the packages have been flagged out of date on the AUR, but their maintainers have not yet updated the &lt;code&gt;PKGBUILD&lt;/code&gt;s (see &lt;a href="https://wiki.archlinux.org/index.php/Arch_User_Repository#Foo_in_the_AUR_is_outdated.3B_what_should_I_do.3F"&gt;outdated AUR packages&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Yay doesn't install dependencies added to a PKGBUILD during installation.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Yay resolves all dependencies ahead of time. You are free to edit the PKGBUILD in any way, but any problems you cause are your own and should not be reported unless they can be reproduced with the original PKGBUILD.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;I know my &lt;code&gt;-git&lt;/code&gt; package has updates but yay doesn't offer to update it&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Yay uses a hash cache for development packages. Normally it is updated at the end of the package install with the message &lt;code&gt;Found git repo&lt;/code&gt;. If you transition between aur helpers and did not install the devel package using yay at some point, it is possible it never got added to the cache. &lt;code&gt;yay -Y --gendb&lt;/code&gt; will fix the current version of every devel package and start checking from there.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;I want to help out!&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Check &lt;a href="https://raw.githubusercontent.com/Jguer/yay/next/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;All support related to Yay should be requested via GitHub issues. Since Yay is not officially supported by Arch Linux, support should not be sought out on the forums, AUR comments or other official channels.&lt;/p&gt; 
&lt;p&gt;A broken AUR package should be reported as a comment on the package's AUR page. A package may only be considered broken if it fails to build with makepkg.&lt;/p&gt; 
&lt;p&gt;Reports should be made using makepkg and include the full output as well as any other relevant information. Never make reports using Yay or any other external tools.&lt;/p&gt; 
&lt;h2&gt;Images&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Jguer/jguer.github.io/refs/heads/master/yay/yay.png" width="42%" /&gt; &lt;img src="https://raw.githubusercontent.com/Jguer/jguer.github.io/refs/heads/master/yay/yay-s.png" width="42%" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Jguer/jguer.github.io/refs/heads/master/yay/yay-y.png" width="42%" /&gt; &lt;img src="https://raw.githubusercontent.com/Jguer/jguer.github.io/refs/heads/master/yay/yay-ps.png" width="42%" /&gt; &lt;/p&gt; 
&lt;h3&gt;Other AUR helpers/tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/morganamilo/paru"&gt;paru&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AladW/aurutils"&gt;aurutils&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actionless/pikaur"&gt;pikaur&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>go-dev-frame/sponge</title>
      <link>https://github.com/go-dev-frame/sponge</link>
      <description>&lt;p&gt;A powerful and easy-to-use Go development framework that enables you to effortlessly build stable, reliable, and high-performance backend services with a "low-code" approach.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;English | &lt;a href="https://raw.githubusercontent.com/go-dev-frame/sponge/main/assets/readme-cn.md"&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img width="500px" src="https://raw.githubusercontent.com/go-dev-frame/sponge/main/assets/logo.png" /&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/go-dev-frame/sponge"&gt;&lt;img src="https://goreportcard.com/badge/github.com/go-dev-frame/sponge" alt="Go Report" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/go-dev-frame/sponge"&gt;&lt;img src="https://codecov.io/gh/go-dev-frame/sponge/branch/main/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/go-dev-frame/sponge"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/go-dev-frame/sponge.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://github.com/go-dev-frame/sponge/actions"&gt;&lt;img src="https://github.com/go-dev-frame/sponge/workflows/Go/badge.svg?sanitize=true" alt="Go" /&gt;&lt;/a&gt; &lt;a href="https://github.com/avelino/awesome-go"&gt;&lt;img src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true" alt="Awesome Go" /&gt;&lt;/a&gt; &lt;a href="https://img.shields.io/github/license/go-dev-frame/sponge"&gt;&lt;img src="https://img.shields.io/github/license/go-dev-frame/sponge" alt="License: MIT" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;Sponge&lt;/strong&gt; is a powerful and easy-to-use Go development framework. Its core philosophy is &lt;strong&gt;"Definition is Code"&lt;/strong&gt;. It generates modular Go code by parsing &lt;code&gt;SQL&lt;/code&gt;, &lt;code&gt;Protobuf&lt;/code&gt;, and &lt;code&gt;JSON&lt;/code&gt; files. These code modules can be flexibly combined to build various types of complete backend services.&lt;/p&gt; 
&lt;p&gt;Sponge provides a one-stop project development solution, covering code generation, development, testing, API documentation, and deployment. It helps developers easily build stable and reliable high-performance backend services (including RESTful API, gRPC, HTTP+gRPC, gRPC Gateway, etc.) in a "low-code" manner, significantly improving the efficiency and quality of project development.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h3&gt;Why Choose Sponge?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Extremely High Development Efficiency&lt;/strong&gt;: Automatically generates CRUD APIs, project scaffolding, and glue code (non-business code), completely solving the problem of extensive repetitive work in traditional development processes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Out-of-the-Box&lt;/strong&gt;: Covers the entire development lifecycle (generate ‚Üí develop ‚Üí test ‚Üí deploy ‚Üí monitor), avoiding a fragmented toolchain.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Standardized Best Practices&lt;/strong&gt;: Based on mature solutions from the Go community (Gin/gRPC/Protobuf, etc.), eliminating the hassle of technology selection.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Minimal Learning Curve&lt;/strong&gt;: Get started quickly and focus on business logic through code generation and clear examples.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ideal for Team Collaboration&lt;/strong&gt;: Unified project structure improves code maintainability.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI Collaboration&lt;/strong&gt;: Based on Sponge's standardized directory and file structure, it intelligently generates business logic code, significantly reducing manual coding and improving development efficiency and code consistency.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h3&gt;Key Features&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;b&gt;One-Click Generation of Complete Backend Service Code.&lt;/b&gt; &lt;/summary&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;For &lt;code&gt;Web&lt;/code&gt;, &lt;code&gt;gRPC&lt;/code&gt;, or &lt;code&gt;HTTP+gRPC&lt;/code&gt; services that only require &lt;code&gt;CRUD APIs&lt;/code&gt;, there is no need to write any &lt;code&gt;Go&lt;/code&gt; code. Simply connect to a database (such as &lt;code&gt;MySQL&lt;/code&gt;, &lt;code&gt;MongoDB&lt;/code&gt;, &lt;code&gt;PostgreSQL&lt;/code&gt;, &lt;code&gt;SQLite&lt;/code&gt;), and you can generate the complete backend service code with one click and easily deploy it to a Linux server, Docker, or Kubernetes.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;b&gt;Efficiently Develop General-Purpose Services, from Definition to Implementation in One Step.&lt;/b&gt; &lt;/summary&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;To build general-purpose &lt;code&gt;Web&lt;/code&gt;, &lt;code&gt;gRPC&lt;/code&gt;, &lt;code&gt;HTTP+gRPC&lt;/code&gt;, or &lt;code&gt;gRPC Gateway&lt;/code&gt; services, you only need to focus on these three steps:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Define database tables (SQL DDL);&lt;/li&gt; 
   &lt;li&gt;Describe the API in a Protobuf file (Protobuf IDL);&lt;/li&gt; 
   &lt;li&gt;Implement the business logic (supports a built-in AI assistant to automatically generate and merge business logic code).&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;p&gt;All basic code, including &lt;strong&gt;CRUD APIs, service framework, and glue code&lt;/strong&gt;, is &lt;strong&gt;automatically generated by Sponge&lt;/strong&gt;, allowing developers to focus on core business and comprehensively improve development efficiency.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;b&gt;Supports Custom Templates for Flexible Expansion.&lt;/b&gt; &lt;/summary&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Sponge supports generating various types of code required for a project through custom templates, not limited to the &lt;code&gt;Go&lt;/code&gt; language. Examples include &lt;code&gt;backend code&lt;/code&gt;, &lt;code&gt;frontend code&lt;/code&gt;, &lt;code&gt;test code&lt;/code&gt;, &lt;code&gt;build and deployment scripts&lt;/code&gt;, etc.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;b&gt;Generate Code on a Web Page, Simple and Easy to Use.&lt;/b&gt; &lt;/summary&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Sponge provides code generation on a web page, avoiding complex command-line operations. Simply fill in the parameters on the page to generate code with one click.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;b&gt;Sponge and AI Assistant Collaborative Development for Infrastructure Automation and Business Logic Intelligence.&lt;/b&gt; &lt;/summary&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Sponge, combined with its built-in AI assistants (DeepSeek, ChatGPT, Gemini), creates a complete, efficient, and intelligent development solution:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Sponge&lt;/strong&gt;: Responsible for the automatic generation of infrastructure code, including &lt;code&gt;service framework&lt;/code&gt;, &lt;code&gt;CRUD APIs&lt;/code&gt;, &lt;code&gt;custom APIs (without business logic)&lt;/code&gt;, etc., ensuring a unified and standardized architecture.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;AI Assistant&lt;/strong&gt;: Focuses on business logic implementation, assisting with tasks such as &lt;code&gt;database table design&lt;/code&gt;, &lt;code&gt;Protobuf API definition&lt;/code&gt;, and &lt;code&gt;business logic writing&lt;/code&gt;, reducing repetitive work and improving R&amp;amp;D efficiency.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;br /&gt; 
&lt;h3&gt;Applicable Scenarios&lt;/h3&gt; 
&lt;p&gt;Sponge is suitable for rapidly building various types of high-performance backend services, including the following scenarios:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Developing RESTful API services&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Building microservice projects&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cloud-native project development&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rapidly refactoring legacy projects&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;As a starting point for Go beginners or as a best practice for teams&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Additionally, developers can generate various types of code to meet business needs through custom templates.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h3&gt;Online Experience&lt;/h3&gt; 
&lt;p&gt;Sponge provides an online experience for code generation: &lt;a href="https://go-sponge.com/en/ui"&gt;&lt;strong&gt;Code Generation&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: If you need to run the downloaded service code locally, you must first complete the local installation of Sponge.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;h3&gt;Getting Started&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install Sponge&lt;/strong&gt;: Supports Windows/macOS/Linux/Docker, see the &lt;a href="https://github.com/go-dev-frame/sponge/raw/main/assets/install-en.md"&gt;&lt;strong&gt;Sponge Installation Guide&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open the Code Generation UI Page&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;sponge run
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Access &lt;code&gt;http://localhost:24631&lt;/code&gt; in your local browser to generate code.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Example: One-Click Generation of Complete Web Service Backend Code&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Connect to the database, select table names.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Download Code: Get the complete code.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Generate Swagger Docs: &lt;code&gt;make docs&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run: &lt;code&gt;make run&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Test: Access the Swagger documentation at &lt;code&gt;http://localhost:8080/swagger/index.html&lt;/code&gt; in your browser to test the API.&lt;/p&gt; &lt;p align="center"&gt; &lt;img width="1500px" src="https://raw.githubusercontent.com/go-dev-frame/sponge/main/assets/en_sponge-ui.png" /&gt; &lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h3&gt;Components&lt;/h3&gt; 
&lt;p&gt;Sponge has built-in support for over 30 common components in the Go ecosystem (used on demand), including mainstream technology stacks such as &lt;strong&gt;Gin&lt;/strong&gt;, &lt;strong&gt;gRPC&lt;/strong&gt;, &lt;strong&gt;GORM&lt;/strong&gt;, &lt;strong&gt;MongoDB&lt;/strong&gt;, &lt;strong&gt;Redis&lt;/strong&gt;, &lt;strong&gt;Kafka&lt;/strong&gt;, &lt;strong&gt;DTM&lt;/strong&gt;, &lt;strong&gt;WebSocket&lt;/strong&gt;, &lt;strong&gt;Prometheus&lt;/strong&gt;, etc. &lt;a href="https://go-sponge.com/component/"&gt;&lt;strong&gt;View all components&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h3&gt;Code Generation Engine&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Sponge&lt;/strong&gt; provides powerful code generation capabilities, supporting both &lt;code&gt;built-in templates&lt;/code&gt; and &lt;code&gt;custom templates&lt;/code&gt; to quickly generate the code required for your project. It also integrates an &lt;code&gt;AI assistant&lt;/code&gt; to help generate business logic code.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Sponge generates a code framework based on built-in templates, as shown in the diagram below:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p align="center"&gt; &lt;img width="1500px" src="https://raw.githubusercontent.com/go-dev-frame/sponge/main/assets/sponge-framework.png" /&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Sponge generates a code framework based on custom templates, as shown in the diagram below:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p align="center"&gt; &lt;img width="1200px" src="https://raw.githubusercontent.com/go-dev-frame/sponge/main/assets/template-framework.png" /&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Sponge generates a business logic code framework based on functions and comments, as shown in the diagram below:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p align="center"&gt; &lt;img width="1200px" src="https://raw.githubusercontent.com/go-dev-frame/sponge/main/assets/ai-assistant-framework.png" /&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;h3&gt;Microservice framework&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Sponge&lt;/strong&gt; is a modern Go microservice framework that adopts a typical layered microservice architecture. It comes with a rich set of built-in service governance features, enabling developers to quickly build and maintain complex microservice systems. The structure of the framework is shown in the diagram below:&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img width="1000px" src="https://raw.githubusercontent.com/go-dev-frame/sponge/main/assets/en_microservices-framework.png" /&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;Performance testing of http and grpc service code created by the microservices framework: 50 concurrent, 1 million total requests.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/zhufuyi/microservices_framework_benchmark/main/test/assets/http-server.png" alt="http-server" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/zhufuyi/microservices_framework_benchmark/main/test/assets/grpc-server.png" alt="grpc-server" /&gt;&lt;/p&gt; 
&lt;p&gt;Click to view the &lt;a href="https://github.com/zhufuyi/microservices_framework_benchmark"&gt;&lt;strong&gt;test code&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h3&gt;Project Code Directory Structure&lt;/h3&gt; 
&lt;p&gt;The project code directory structure created by sponge follows the &lt;a href="https://github.com/golang-standards/project-layout"&gt;project-layout&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Sponge supports creating project code structures for &lt;code&gt;monolithic application in a single repository (monolith)&lt;/code&gt;, &lt;code&gt;microservices in multiple repositories (multi-repo)&lt;/code&gt;, and &lt;code&gt;microservices in a single repository (mono-repo)&lt;/code&gt;.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;b&gt;1. Directory structure for monolithic applications (monolith) or multi-repo microservices.&lt;/b&gt; &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;.
‚îú‚îÄ‚îÄ api            # Protobuf files and generated * pb.go directory
‚îú‚îÄ‚îÄ assets         # Store various static resources, such as images, markdown files, etc.
‚îú‚îÄ‚îÄ cmd            # Program entry directory
‚îú‚îÄ‚îÄ configs        # Directory for configuration files
‚îú‚îÄ‚îÄ deployments    # Bare metal, docker, k8s deployment script directory.
‚îú‚îÄ‚îÄ docs           # Directory for API interface Swagger documentation.
‚îú‚îÄ‚îÄ internal       # Directory for project internal code.
‚îÇ    ‚îú‚îÄ‚îÄ cache        # Cache directory wrapped around business logic.
‚îÇ    ‚îú‚îÄ‚îÄ config       # Directory for Go structure configuration files.
‚îÇ    ‚îú‚îÄ‚îÄ dao          # Data access directory.
‚îÇ    ‚îú‚îÄ‚îÄ database     # Directory for database initialization and migration.
‚îÇ    ‚îú‚îÄ‚îÄ ecode        # Directory for system error codes and custom business error codes.
‚îÇ    ‚îú‚îÄ‚îÄ handler      # Directory for implementing HTTP business functionality (specific to web services).
‚îÇ    ‚îú‚îÄ‚îÄ model        # Database model directory.
‚îÇ    ‚îú‚îÄ‚îÄ routers      # HTTP routing directory.
‚îÇ    ‚îú‚îÄ‚îÄ rpcclient    # Directory for client-side code that connects to grpc services.
‚îÇ    ‚îú‚îÄ‚îÄ server       # Directory for creating servers, including HTTP and grpc.
‚îÇ    ‚îú‚îÄ‚îÄ service      # Directory for implementing grpc business functionality (specific to grpc services).
‚îÇ    ‚îî‚îÄ‚îÄ types        # Directory for defining request and response parameter structures for HTTP.
‚îú‚îÄ‚îÄ pkg            # Directory for shared libraries.
‚îú‚îÄ‚îÄ scripts        # Directory for scripts.
‚îú‚îÄ‚îÄ test           # Directory for scripts required for testing services  and test SQL.
‚îú‚îÄ‚îÄ third_party    # Directory for third-party protobuf files or external helper programs.
‚îú‚îÄ‚îÄ Makefile       # Develop, test, deploy related command sets .
‚îú‚îÄ‚îÄ go.mod         # Go module dependencies and version control file.
‚îî‚îÄ‚îÄ go.sum         # Go module dependencies key and checksum file.
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;b&gt;2. Directory structure for mono-repo microservices (large repository).&lt;/b&gt; &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;.
‚îú‚îÄ‚îÄ api
‚îÇ    ‚îú‚îÄ‚îÄ server1       # Protobuf files and generated *pb.go directory for service 1.
‚îÇ    ‚îú‚îÄ‚îÄ server2       # Protobuf files and generated *pb.go directory for service 2.
‚îÇ    ‚îú‚îÄ‚îÄ server3       # Protobuf files and generated *pb.go directory for service 3.
‚îÇ    ‚îî‚îÄ‚îÄ ...
‚îú‚îÄ‚îÄ server1        # Code directory for Service 1, it has a similar structure to the microservice multi repo directory.
‚îú‚îÄ‚îÄ server2        # Code directory for Service 2, it has a similar structure to the microservice multi repo directory.
‚îú‚îÄ‚îÄ server3        # Code directory for Service 3, it has a similar structure to the microservice multi repo directory.
‚îú‚îÄ‚îÄ ...
‚îú‚îÄ‚îÄ third_party    # Third-party protobuf files.
‚îú‚îÄ‚îÄ go.mod         # Go module dependencies and version control file.
‚îî‚îÄ‚îÄ go.sum         # Go module dependencies' checksums and hash keys.
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br /&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;Click to view the &lt;a href="https://go-sponge.com/en/"&gt;Sponge Official Documentation&lt;/a&gt;, which completely covers core content such as development guides, components, service configuration, and deployment solutions.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h3&gt;Examples&lt;/h3&gt; 
&lt;h4&gt;Sponge Create Server Code Examples&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-dev-frame/sponge_examples/tree/main/1_web-gin-CRUD"&gt;Create &lt;strong&gt;web&lt;/strong&gt; service based on &lt;strong&gt;sql&lt;/strong&gt; (including CRUD)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-dev-frame/sponge_examples/tree/main/2_micro-grpc-CRUD"&gt;Create &lt;strong&gt;grpc&lt;/strong&gt; service based on &lt;strong&gt;sql&lt;/strong&gt; (including CRUD)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-dev-frame/sponge_examples/tree/main/3_web-gin-protobuf"&gt;Create &lt;strong&gt;web&lt;/strong&gt; service based on &lt;strong&gt;protobuf&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-dev-frame/sponge_examples/tree/main/4_micro-grpc-protobuf"&gt;Create &lt;strong&gt;grpc&lt;/strong&gt; service based on &lt;strong&gt;protobuf&lt;/strong&gt; &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-dev-frame/sponge_examples/tree/main/5_micro-gin-rpc-gateway"&gt;Create &lt;strong&gt;grpc gateway&lt;/strong&gt; service based on &lt;strong&gt;protobuf&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-dev-frame/sponge_examples/tree/main/_10_micro-grpc-http-protobuf"&gt;Create &lt;strong&gt;grpc+http&lt;/strong&gt; service based on &lt;strong&gt;protobuf&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Sponge+DTM Distributed Transaction Examples&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-dev-frame/sponge_examples/tree/main/9_order-grpc-distributed-transaction"&gt;Simple distributed order system&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-dev-frame/sponge_examples/tree/main/_12_sponge-dtm-flashSale"&gt;Flash sale&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-dev-frame/sponge_examples/tree/main/_14_eshop"&gt;E-Commerce system&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Sponge+AI Assistant Collaborative Development Examples&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-dev-frame/sponge_examples/tree/main/_15_appliance_store"&gt;Home appliance retail management&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Sponge Development Project Examples&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-dev-frame/sponge_examples/tree/main/7_community-single"&gt;Community backend services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-dev-frame/sponge_examples/tree/main/8_community-cluster"&gt;Monolithic service split into microservices&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Issues/PRs are welcome! &lt;a href="https://go-sponge.com/en/community/contribution.html"&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If Sponge is helpful to you, please give it a ‚≠ê Star! This will motivate us to keep iterating.&lt;/p&gt; 
&lt;br /&gt;</description>
    </item>
    
    <item>
      <title>fatedier/frp</title>
      <link>https://github.com/fatedier/frp</link>
      <description>&lt;p&gt;A fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;frp&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://circleci.com/gh/fatedier/frp"&gt;&lt;img src="https://circleci.com/gh/fatedier/frp.svg?style=shield" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/fatedier/frp/releases"&gt;&lt;img src="https://img.shields.io/github/tag/fatedier/frp.svg?label=release" alt="GitHub release" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/fatedier/frp"&gt;&lt;img src="https://goreportcard.com/badge/github.com/fatedier/frp" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://somsubhra.github.io/github-release-stats/?username=fatedier&amp;amp;repository=frp"&gt;&lt;img src="https://img.shields.io/github/downloads/fatedier/frp/total.svg?logo=github" alt="GitHub Releases Stats" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/README.md"&gt;README&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/README_zh.md"&gt;‰∏≠ÊñáÊñáÊ°£&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;frp is an open source project with its ongoing development made possible entirely by the support of our awesome sponsors. If you'd like to join them, please consider &lt;a href="https://github.com/sponsors/fatedier"&gt;sponsoring frp's development&lt;/a&gt;.&lt;/p&gt; 
&lt;h3 align="center"&gt;Gold Sponsors&lt;/h3&gt; 
&lt;!--gold sponsors start--&gt; 
&lt;p align="center"&gt; &lt;a href="https://go.warp.dev/frp" target="_blank"&gt; &lt;img width="360px" src="https://raw.githubusercontent.com/warpdotdev/brand-assets/refs/heads/main/Github/Sponsor/Warp-Github-LG-01.png" /&gt; &lt;br /&gt; &lt;b&gt;Warp, the intelligent terminal&lt;/b&gt; &lt;br /&gt; &lt;sub&gt;Available for macOS, Linux and Windows&lt;/sub&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://jb.gg/frp" target="_blank"&gt; &lt;img width="420px" src="https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/sponsor_jetbrains.jpg" /&gt; &lt;br /&gt; &lt;b&gt;The complete IDE crafted for professional Go developers&lt;/b&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/daytonaio/daytona" target="_blank"&gt; &lt;img width="420px" src="https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/sponsor_daytona.png" /&gt; &lt;br /&gt; &lt;b&gt;Secure and Elastic Infrastructure for Running Your AI-Generated Code&lt;/b&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/beclab/Olares" target="_blank"&gt; &lt;img width="420px" src="https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/sponsor_olares.jpeg" /&gt; &lt;br /&gt; &lt;b&gt;The sovereign cloud that puts you in control&lt;/b&gt; &lt;br /&gt; &lt;sub&gt;An open source, self-hosted alternative to public clouds, built for data ownership and privacy&lt;/sub&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;!--gold sponsors end--&gt; 
&lt;h2&gt;What is frp?&lt;/h2&gt; 
&lt;p&gt;frp is a fast reverse proxy that allows you to expose a local server located behind a NAT or firewall to the Internet. It currently supports &lt;strong&gt;TCP&lt;/strong&gt; and &lt;strong&gt;UDP&lt;/strong&gt;, as well as &lt;strong&gt;HTTP&lt;/strong&gt; and &lt;strong&gt;HTTPS&lt;/strong&gt; protocols, enabling requests to be forwarded to internal services via domain name.&lt;/p&gt; 
&lt;p&gt;frp also offers a P2P connect mode.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- vim-markdown-toc GFM --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#development-status"&gt;Development Status&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#about-v2"&gt;About V2&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#architecture"&gt;Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#example-usage"&gt;Example Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#access-your-computer-in-a-lan-network-via-ssh"&gt;Access your computer in a LAN network via SSH&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#multiple-ssh-services-sharing-the-same-port"&gt;Multiple SSH services sharing the same port&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#accessing-internal-web-services-with-custom-domains-in-lan"&gt;Accessing Internal Web Services with Custom Domains in LAN&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#forward-dns-query-requests"&gt;Forward DNS query requests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#forward-unix-domain-socket"&gt;Forward Unix Domain Socket&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#expose-a-simple-http-file-server"&gt;Expose a simple HTTP file server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#enable-https-for-a-local-https-service"&gt;Enable HTTPS for a local HTTP(S) service&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#expose-your-service-privately"&gt;Expose your service privately&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#p2p-mode"&gt;P2P Mode&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#features"&gt;Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#configuration-files"&gt;Configuration Files&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#using-environment-variables"&gt;Using Environment Variables&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#split-configures-into-different-files"&gt;Split Configures Into Different Files&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#server-dashboard"&gt;Server Dashboard&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#client-admin-ui"&gt;Client Admin UI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#monitor"&gt;Monitor&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#prometheus"&gt;Prometheus&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#authenticating-the-client"&gt;Authenticating the Client&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#token-authentication"&gt;Token Authentication&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#oidc-authentication"&gt;OIDC Authentication&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#encryption-and-compression"&gt;Encryption and Compression&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#tls"&gt;TLS&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#hot-reloading-frpc-configuration"&gt;Hot-Reloading frpc configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#get-proxy-status-from-client"&gt;Get proxy status from client&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#only-allowing-certain-ports-on-the-server"&gt;Only allowing certain ports on the server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#port-reuse"&gt;Port Reuse&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#bandwidth-limit"&gt;Bandwidth Limit&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#for-each-proxy"&gt;For Each Proxy&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#tcp-stream-multiplexing"&gt;TCP Stream Multiplexing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#support-kcp-protocol"&gt;Support KCP Protocol&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#support-quic-protocol"&gt;Support QUIC Protocol&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#connection-pooling"&gt;Connection Pooling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#load-balancing"&gt;Load balancing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#service-health-check"&gt;Service Health Check&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#rewriting-the-http-host-header"&gt;Rewriting the HTTP Host Header&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#setting-other-http-headers"&gt;Setting other HTTP Headers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#get-real-ip"&gt;Get Real IP&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#http-x-forwarded-for"&gt;HTTP X-Forwarded-For&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#proxy-protocol"&gt;Proxy Protocol&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#require-http-basic-auth-password-for-web-services"&gt;Require HTTP Basic Auth (Password) for Web Services&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#custom-subdomain-names"&gt;Custom Subdomain Names&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#url-routing"&gt;URL Routing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#tcp-port-multiplexing"&gt;TCP Port Multiplexing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#connecting-to-frps-via-proxy"&gt;Connecting to frps via PROXY&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#port-range-mapping"&gt;Port range mapping&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#client-plugins"&gt;Client Plugins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#server-manage-plugins"&gt;Server Manage Plugins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#ssh-tunnel-gateway"&gt;SSH Tunnel Gateway&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#virtual-network-virtualnet"&gt;Virtual Network (VirtualNet)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#feature-gates"&gt;Feature Gates&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#available-feature-gates"&gt;Available Feature Gates&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#enabling-feature-gates"&gt;Enabling Feature Gates&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#feature-lifecycle"&gt;Feature Lifecycle&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#related-projects"&gt;Related Projects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#donation"&gt;Donation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#github-sponsors"&gt;GitHub Sponsors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#paypal"&gt;PayPal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- vim-markdown-toc --&gt; 
&lt;h2&gt;Development Status&lt;/h2&gt; 
&lt;p&gt;frp is currently under development. You can try the latest release version in the &lt;code&gt;master&lt;/code&gt; branch, or use the &lt;code&gt;dev&lt;/code&gt; branch to access the version currently in development.&lt;/p&gt; 
&lt;p&gt;We are currently working on version 2 and attempting to perform some code refactoring and improvements. However, please note that it will not be compatible with version 1.&lt;/p&gt; 
&lt;p&gt;We will transition from version 0 to version 1 at the appropriate time and will only accept bug fixes and improvements, rather than big feature requests.&lt;/p&gt; 
&lt;h3&gt;About V2&lt;/h3&gt; 
&lt;p&gt;The complexity and difficulty of the v2 version are much higher than anticipated. I can only work on its development during fragmented time periods, and the constant interruptions disrupt productivity significantly. Given this situation, we will continue to optimize and iterate on the current version until we have more free time to proceed with the major version overhaul.&lt;/p&gt; 
&lt;p&gt;The concept behind v2 is based on my years of experience and reflection in the cloud-native domain, particularly in K8s and ServiceMesh. Its core is a modernized four-layer and seven-layer proxy, similar to envoy. This proxy itself is highly scalable, not only capable of implementing the functionality of intranet penetration but also applicable to various other domains. Building upon this highly scalable core, we aim to implement all the capabilities of frp v1 while also addressing the functionalities that were previously unachievable or difficult to implement in an elegant manner. Furthermore, we will maintain efficient development and iteration capabilities.&lt;/p&gt; 
&lt;p&gt;In addition, I envision frp itself becoming a highly extensible system and platform, similar to how we can provide a range of extension capabilities based on K8s. In K8s, we can customize development according to enterprise needs, utilizing features such as CRD, controller mode, webhook, CSI, and CNI. In frp v1, we introduced the concept of server plugins, which implemented some basic extensibility. However, it relies on a simple HTTP protocol and requires users to start independent processes and manage them on their own. This approach is far from flexible and convenient, and real-world demands vary greatly. It is unrealistic to expect a non-profit open-source project maintained by a few individuals to meet everyone's needs.&lt;/p&gt; 
&lt;p&gt;Finally, we acknowledge that the current design of modules such as configuration management, permission verification, certificate management, and API management is not modern enough. While we may carry out some optimizations in the v1 version, ensuring compatibility remains a challenging issue that requires a considerable amount of effort to address.&lt;/p&gt; 
&lt;p&gt;We sincerely appreciate your support for frp.&lt;/p&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/architecture.png" alt="architecture" /&gt;&lt;/p&gt; 
&lt;h2&gt;Example Usage&lt;/h2&gt; 
&lt;p&gt;To begin, download the latest program for your operating system and architecture from the &lt;a href="https://github.com/fatedier/frp/releases"&gt;Release&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;Next, place the &lt;code&gt;frps&lt;/code&gt; binary and server configuration file on Server A, which has a public IP address.&lt;/p&gt; 
&lt;p&gt;Finally, place the &lt;code&gt;frpc&lt;/code&gt; binary and client configuration file on Server B, which is located on a LAN that cannot be directly accessed from the public internet.&lt;/p&gt; 
&lt;p&gt;Some antiviruses improperly mark frpc as malware and delete it. This is due to frp being a networking tool capable of creating reverse proxies. Antiviruses sometimes flag reverse proxies due to their ability to bypass firewall port restrictions. If you are using antivirus, then you may need to whitelist/exclude frpc in your antivirus settings to avoid accidental quarantine/deletion. See &lt;a href="https://github.com/fatedier/frp/issues/3637"&gt;issue 3637&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Access your computer in a LAN network via SSH&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Modify &lt;code&gt;frps.toml&lt;/code&gt; on server A by setting the &lt;code&gt;bindPort&lt;/code&gt; for frp clients to connect to:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
bindPort = 7000
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Start &lt;code&gt;frps&lt;/code&gt; on server A:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frps -c ./frps.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Modify &lt;code&gt;frpc.toml&lt;/code&gt; on server B and set the &lt;code&gt;serverAddr&lt;/code&gt; field to the public IP address of your frps server:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "ssh"
type = "tcp"
localIP = "127.0.0.1"
localPort = 22
remotePort = 6000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the &lt;code&gt;localPort&lt;/code&gt; (listened on the client) and &lt;code&gt;remotePort&lt;/code&gt; (exposed on the server) are used for traffic going in and out of the frp system, while the &lt;code&gt;serverPort&lt;/code&gt; is used for communication between frps and frpc.&lt;/p&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; on server B:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frpc -c ./frpc.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;To access server B from another machine through server A via SSH (assuming the username is &lt;code&gt;test&lt;/code&gt;), use the following command:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;ssh -oPort=6000 test@x.x.x.x&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Multiple SSH services sharing the same port&lt;/h3&gt; 
&lt;p&gt;This example implements multiple SSH services exposed through the same port using a proxy of type tcpmux. Similarly, as long as the client supports the HTTP Connect proxy connection method, port reuse can be achieved in this way.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Deploy frps on a machine with a public IP and modify the frps.toml file. Here is a simplified configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;bindPort = 7000
tcpmuxHTTPConnectPort = 5002
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Deploy frpc on the internal machine A with the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "ssh1"
type = "tcpmux"
multiplexer = "httpconnect"
customDomains = ["machine-a.example.com"]
localIP = "127.0.0.1"
localPort = 22
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Deploy another frpc on the internal machine B with the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "ssh2"
type = "tcpmux"
multiplexer = "httpconnect"
customDomains = ["machine-b.example.com"]
localIP = "127.0.0.1"
localPort = 22
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;To access internal machine A using SSH ProxyCommand, assuming the username is "test":&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;ssh -o 'proxycommand socat - PROXY:x.x.x.x:%h:%p,proxyport=5002' test@machine-a.example.com&lt;/code&gt;&lt;/p&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;To access internal machine B, the only difference is the domain name, assuming the username is "test":&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;ssh -o 'proxycommand socat - PROXY:x.x.x.x:%h:%p,proxyport=5002' test@machine-b.example.com&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Accessing Internal Web Services with Custom Domains in LAN&lt;/h3&gt; 
&lt;p&gt;Sometimes we need to expose a local web service behind a NAT network to others for testing purposes with our own domain name.&lt;/p&gt; 
&lt;p&gt;Unfortunately, we cannot resolve a domain name to a local IP. However, we can use frp to expose an HTTP(S) service.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Modify &lt;code&gt;frps.toml&lt;/code&gt; and set the HTTP port for vhost to 8080:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
bindPort = 7000
vhostHTTPPort = 8080
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to configure an https proxy, you need to set up the &lt;code&gt;vhostHTTPSPort&lt;/code&gt;.&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Start &lt;code&gt;frps&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frps -c ./frps.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Modify &lt;code&gt;frpc.toml&lt;/code&gt; and set &lt;code&gt;serverAddr&lt;/code&gt; to the IP address of the remote frps server. Specify the &lt;code&gt;localPort&lt;/code&gt; of your web service:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "web"
type = "http"
localPort = 80
customDomains = ["www.example.com"]
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frpc -c ./frpc.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt; &lt;p&gt;Map the A record of &lt;code&gt;www.example.com&lt;/code&gt; to either the public IP of the remote frps server or a CNAME record pointing to your original domain.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Visit your local web service using url &lt;code&gt;http://www.example.com:8080&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Forward DNS query requests&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Modify &lt;code&gt;frps.toml&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
bindPort = 7000
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Start &lt;code&gt;frps&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frps -c ./frps.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Modify &lt;code&gt;frpc.toml&lt;/code&gt; and set &lt;code&gt;serverAddr&lt;/code&gt; to the IP address of the remote frps server. Forward DNS query requests to the Google Public DNS server &lt;code&gt;8.8.8.8:53&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "dns"
type = "udp"
localIP = "8.8.8.8"
localPort = 53
remotePort = 6000
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Start frpc:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frpc -c ./frpc.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Test DNS resolution using the &lt;code&gt;dig&lt;/code&gt; command:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;dig @x.x.x.x -p 6000 www.google.com&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Forward Unix Domain Socket&lt;/h3&gt; 
&lt;p&gt;Expose a Unix domain socket (e.g. the Docker daemon socket) as TCP.&lt;/p&gt; 
&lt;p&gt;Configure &lt;code&gt;frps&lt;/code&gt; as above.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; with the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "unix_domain_socket"
type = "tcp"
remotePort = 6000
[proxies.plugin]
type = "unix_domain_socket"
unixPath = "/var/run/docker.sock"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Test the configuration by getting the docker version using &lt;code&gt;curl&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;curl http://x.x.x.x:6000/version&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Expose a simple HTTP file server&lt;/h3&gt; 
&lt;p&gt;Expose a simple HTTP file server to access files stored in the LAN from the public Internet.&lt;/p&gt; 
&lt;p&gt;Configure &lt;code&gt;frps&lt;/code&gt; as described above, then:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; with the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "test_static_file"
type = "tcp"
remotePort = 6000
[proxies.plugin]
type = "static_file"
localPath = "/tmp/files"
stripPrefix = "static"
httpUser = "abc"
httpPassword = "abc"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Visit &lt;code&gt;http://x.x.x.x:6000/static/&lt;/code&gt; from your browser and specify correct username and password to view files in &lt;code&gt;/tmp/files&lt;/code&gt; on the &lt;code&gt;frpc&lt;/code&gt; machine.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Enable HTTPS for a local HTTP(S) service&lt;/h3&gt; 
&lt;p&gt;You may substitute &lt;code&gt;https2https&lt;/code&gt; for the plugin, and point the &lt;code&gt;localAddr&lt;/code&gt; to a HTTPS endpoint.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; with the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "test_https2http"
type = "https"
customDomains = ["test.example.com"]

[proxies.plugin]
type = "https2http"
localAddr = "127.0.0.1:80"
crtPath = "./server.crt"
keyPath = "./server.key"
hostHeaderRewrite = "127.0.0.1"
requestHeaders.set.x-from-where = "frp"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Visit &lt;code&gt;https://test.example.com&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Expose your service privately&lt;/h3&gt; 
&lt;p&gt;To mitigate risks associated with exposing certain services directly to the public network, STCP (Secret TCP) mode requires a preshared key to be used for access to the service from other clients.&lt;/p&gt; 
&lt;p&gt;Configure &lt;code&gt;frps&lt;/code&gt; same as above.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; on machine B with the following config. This example is for exposing the SSH service (port 22), and note the &lt;code&gt;secretKey&lt;/code&gt; field for the preshared key, and that the &lt;code&gt;remotePort&lt;/code&gt; field is removed here:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "secret_ssh"
type = "stcp"
secretKey = "abcdefg"
localIP = "127.0.0.1"
localPort = 22
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Start another &lt;code&gt;frpc&lt;/code&gt; (typically on another machine C) with the following config to access the SSH service with a security key (&lt;code&gt;secretKey&lt;/code&gt; field):&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[visitors]]
name = "secret_ssh_visitor"
type = "stcp"
serverName = "secret_ssh"
secretKey = "abcdefg"
bindAddr = "127.0.0.1"
bindPort = 6000
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;On machine C, connect to SSH on machine B, using this command:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;ssh -oPort=6000 127.0.0.1&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;P2P Mode&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;xtcp&lt;/strong&gt; is designed to transmit large amounts of data directly between clients. A frps server is still needed, as P2P here only refers to the actual data transmission.&lt;/p&gt; 
&lt;p&gt;Note that it may not work with all types of NAT devices. You might want to fallback to stcp if xtcp doesn't work.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; on machine B, and expose the SSH port. Note that the &lt;code&gt;remotePort&lt;/code&gt; field is removed:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000
# set up a new stun server if the default one is not available.
# natHoleStunServer = "xxx"

[[proxies]]
name = "p2p_ssh"
type = "xtcp"
secretKey = "abcdefg"
localIP = "127.0.0.1"
localPort = 22
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Start another &lt;code&gt;frpc&lt;/code&gt; (typically on another machine C) with the configuration to connect to SSH using P2P mode:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000
# set up a new stun server if the default one is not available.
# natHoleStunServer = "xxx"

[[visitors]]
name = "p2p_ssh_visitor"
type = "xtcp"
serverName = "p2p_ssh"
secretKey = "abcdefg"
bindAddr = "127.0.0.1"
bindPort = 6000
# when automatic tunnel persistence is required, set it to true
keepTunnelOpen = false
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;On machine C, connect to SSH on machine B, using this command:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;ssh -oPort=6000 127.0.0.1&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Configuration Files&lt;/h3&gt; 
&lt;p&gt;Since v0.52.0, we support TOML, YAML, and JSON for configuration. Please note that INI is deprecated and will be removed in future releases. New features will only be available in TOML, YAML, or JSON. Users wanting these new features should switch their configuration format accordingly.&lt;/p&gt; 
&lt;p&gt;Read the full example configuration files to find out even more features not described here.&lt;/p&gt; 
&lt;p&gt;Examples use TOML format, but you can still use YAML or JSON.&lt;/p&gt; 
&lt;p&gt;These configuration files is for reference only. Please do not use this configuration directly to run the program as it may have various issues.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/conf/frps_full_example.toml"&gt;Full configuration file for frps (Server)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/conf/frpc_full_example.toml"&gt;Full configuration file for frpc (Client)&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Using Environment Variables&lt;/h3&gt; 
&lt;p&gt;Environment variables can be referenced in the configuration file, using Go's standard format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "{{ .Envs.FRP_SERVER_ADDR }}"
serverPort = 7000

[[proxies]]
name = "ssh"
type = "tcp"
localIP = "127.0.0.1"
localPort = 22
remotePort = "{{ .Envs.FRP_SSH_REMOTE_PORT }}"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the config above, variables can be passed into &lt;code&gt;frpc&lt;/code&gt; program like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;export FRP_SERVER_ADDR=x.x.x.x
export FRP_SSH_REMOTE_PORT=6000
./frpc -c ./frpc.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;frpc&lt;/code&gt; will render configuration file template using OS environment variables. Remember to prefix your reference with &lt;code&gt;.Envs&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Split Configures Into Different Files&lt;/h3&gt; 
&lt;p&gt;You can split multiple proxy configs into different files and include them in the main file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000
includes = ["./confd/*.toml"]
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# ./confd/test.toml

[[proxies]]
name = "ssh"
type = "tcp"
localIP = "127.0.0.1"
localPort = 22
remotePort = 6000
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Server Dashboard&lt;/h3&gt; 
&lt;p&gt;Check frp's status and proxies' statistics information by Dashboard.&lt;/p&gt; 
&lt;p&gt;Configure a port for dashboard to enable this feature:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# The default value is 127.0.0.1. Change it to 0.0.0.0 when you want to access it from a public network.
webServer.addr = "0.0.0.0"
webServer.port = 7500
# dashboard's username and password are both optional
webServer.user = "admin"
webServer.password = "admin"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;code&gt;http://[serverAddr]:7500&lt;/code&gt; to see the dashboard, with username and password both being &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally, you can use HTTPS port by using your domains wildcard or normal SSL certificate:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;webServer.port = 7500
# dashboard's username and password are both optional
webServer.user = "admin"
webServer.password = "admin"
webServer.tls.certFile = "server.crt"
webServer.tls.keyFile = "server.key"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;code&gt;https://[serverAddr]:7500&lt;/code&gt; to see the dashboard in secure HTTPS connection, with username and password both being &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/dashboard.png" alt="dashboard" /&gt;&lt;/p&gt; 
&lt;h3&gt;Client Admin UI&lt;/h3&gt; 
&lt;p&gt;The Client Admin UI helps you check and manage frpc's configuration.&lt;/p&gt; 
&lt;p&gt;Configure an address for admin UI to enable this feature:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;webServer.addr = "127.0.0.1"
webServer.port = 7400
webServer.user = "admin"
webServer.password = "admin"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;code&gt;http://127.0.0.1:7400&lt;/code&gt; to see admin UI, with username and password both being &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Monitor&lt;/h3&gt; 
&lt;p&gt;When web server is enabled, frps will save monitor data in cache for 7 days. It will be cleared after process restart.&lt;/p&gt; 
&lt;p&gt;Prometheus is also supported.&lt;/p&gt; 
&lt;h4&gt;Prometheus&lt;/h4&gt; 
&lt;p&gt;Enable dashboard first, then configure &lt;code&gt;enablePrometheus = true&lt;/code&gt; in &lt;code&gt;frps.toml&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;http://{dashboard_addr}/metrics&lt;/code&gt; will provide prometheus monitor data.&lt;/p&gt; 
&lt;h3&gt;Authenticating the Client&lt;/h3&gt; 
&lt;p&gt;There are 2 authentication methods to authenticate frpc with frps.&lt;/p&gt; 
&lt;p&gt;You can decide which one to use by configuring &lt;code&gt;auth.method&lt;/code&gt; in &lt;code&gt;frpc.toml&lt;/code&gt; and &lt;code&gt;frps.toml&lt;/code&gt;, the default one is token.&lt;/p&gt; 
&lt;p&gt;Configuring &lt;code&gt;auth.additionalScopes = ["HeartBeats"]&lt;/code&gt; will use the configured authentication method to add and validate authentication on every heartbeat between frpc and frps.&lt;/p&gt; 
&lt;p&gt;Configuring &lt;code&gt;auth.additionalScopes = ["NewWorkConns"]&lt;/code&gt; will do the same for every new work connection between frpc and frps.&lt;/p&gt; 
&lt;h4&gt;Token Authentication&lt;/h4&gt; 
&lt;p&gt;When specifying &lt;code&gt;auth.method = "token"&lt;/code&gt; in &lt;code&gt;frpc.toml&lt;/code&gt; and &lt;code&gt;frps.toml&lt;/code&gt; - token based authentication will be used.&lt;/p&gt; 
&lt;p&gt;Make sure to specify the same &lt;code&gt;auth.token&lt;/code&gt; in &lt;code&gt;frps.toml&lt;/code&gt; and &lt;code&gt;frpc.toml&lt;/code&gt; for frpc to pass frps validation&lt;/p&gt; 
&lt;h5&gt;Token Source&lt;/h5&gt; 
&lt;p&gt;frp supports reading authentication tokens from external sources using the &lt;code&gt;tokenSource&lt;/code&gt; configuration. Currently, file-based token source is supported.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;File-based token source:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
auth.method = "token"
auth.tokenSource.type = "file"
auth.tokenSource.file.path = "/path/to/token/file"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The token will be read from the specified file at startup. This is useful for scenarios where tokens are managed by external systems or need to be kept separate from configuration files for security reasons.&lt;/p&gt; 
&lt;h4&gt;OIDC Authentication&lt;/h4&gt; 
&lt;p&gt;When specifying &lt;code&gt;auth.method = "oidc"&lt;/code&gt; in &lt;code&gt;frpc.toml&lt;/code&gt; and &lt;code&gt;frps.toml&lt;/code&gt; - OIDC based authentication will be used.&lt;/p&gt; 
&lt;p&gt;OIDC stands for OpenID Connect, and the flow used is called &lt;a href="https://tools.ietf.org/html/rfc6749#section-4.4"&gt;Client Credentials Grant&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To use this authentication type - configure &lt;code&gt;frpc.toml&lt;/code&gt; and &lt;code&gt;frps.toml&lt;/code&gt; as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
auth.method = "oidc"
auth.oidc.issuer = "https://example-oidc-issuer.com/"
auth.oidc.audience = "https://oidc-audience.com/.default"
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
auth.method = "oidc"
auth.oidc.clientID = "98692467-37de-409a-9fac-bb2585826f18" # Replace with OIDC client ID
auth.oidc.clientSecret = "oidc_secret"
auth.oidc.audience = "https://oidc-audience.com/.default"
auth.oidc.tokenEndpointURL = "https://example-oidc-endpoint.com/oauth2/v2.0/token"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Encryption and Compression&lt;/h3&gt; 
&lt;p&gt;The features are off by default. You can turn on encryption and/or compression:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "ssh"
type = "tcp"
localPort = 22
remotePort = 6000
transport.useEncryption = true
transport.useCompression = true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;TLS&lt;/h4&gt; 
&lt;p&gt;Since v0.50.0, the default value of &lt;code&gt;transport.tls.enable&lt;/code&gt; and &lt;code&gt;transport.tls.disableCustomTLSFirstByte&lt;/code&gt; has been changed to true, and tls is enabled by default.&lt;/p&gt; 
&lt;p&gt;For port multiplexing, frp sends a first byte &lt;code&gt;0x17&lt;/code&gt; to dial a TLS connection. This only takes effect when you set &lt;code&gt;transport.tls.disableCustomTLSFirstByte&lt;/code&gt; to false.&lt;/p&gt; 
&lt;p&gt;To &lt;strong&gt;enforce&lt;/strong&gt; &lt;code&gt;frps&lt;/code&gt; to only accept TLS connections - configure &lt;code&gt;transport.tls.force = true&lt;/code&gt; in &lt;code&gt;frps.toml&lt;/code&gt;. &lt;strong&gt;This is optional.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;frpc&lt;/code&gt; TLS settings:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;transport.tls.enable = true
transport.tls.certFile = "certificate.crt"
transport.tls.keyFile = "certificate.key"
transport.tls.trustedCaFile = "ca.crt"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;frps&lt;/code&gt; TLS settings:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;transport.tls.force = true
transport.tls.certFile = "certificate.crt"
transport.tls.keyFile = "certificate.key"
transport.tls.trustedCaFile = "ca.crt"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You will need &lt;strong&gt;a root CA cert&lt;/strong&gt; and &lt;strong&gt;at least one SSL/TLS certificate&lt;/strong&gt;. It &lt;strong&gt;can&lt;/strong&gt; be self-signed or regular (such as Let's Encrypt or another SSL/TLS certificate provider).&lt;/p&gt; 
&lt;p&gt;If you using &lt;code&gt;frp&lt;/code&gt; via IP address and not hostname, make sure to set the appropriate IP address in the Subject Alternative Name (SAN) area when generating SSL/TLS Certificates.&lt;/p&gt; 
&lt;p&gt;Given an example:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prepare openssl config file. It exists at &lt;code&gt;/etc/pki/tls/openssl.cnf&lt;/code&gt; in Linux System and &lt;code&gt;/System/Library/OpenSSL/openssl.cnf&lt;/code&gt; in MacOS, and you can copy it to current path, like &lt;code&gt;cp /etc/pki/tls/openssl.cnf ./my-openssl.cnf&lt;/code&gt;. If not, you can build it by yourself, like:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;cat &amp;gt; my-openssl.cnf &amp;lt;&amp;lt; EOF
[ ca ]
default_ca = CA_default
[ CA_default ]
x509_extensions = usr_cert
[ req ]
default_bits        = 2048
default_md          = sha256
default_keyfile     = privkey.pem
distinguished_name  = req_distinguished_name
attributes          = req_attributes
x509_extensions     = v3_ca
string_mask         = utf8only
[ req_distinguished_name ]
[ req_attributes ]
[ usr_cert ]
basicConstraints       = CA:FALSE
nsComment              = "OpenSSL Generated Certificate"
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer
[ v3_ca ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints       = CA:true
EOF
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;build ca certificates:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;openssl genrsa -out ca.key 2048
openssl req -x509 -new -nodes -key ca.key -subj "/CN=example.ca.com" -days 5000 -out ca.crt
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;build frps certificates:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;openssl genrsa -out server.key 2048

openssl req -new -sha256 -key server.key \
    -subj "/C=XX/ST=DEFAULT/L=DEFAULT/O=DEFAULT/CN=server.com" \
    -reqexts SAN \
    -config &amp;lt;(cat my-openssl.cnf &amp;lt;(printf "\n[SAN]\nsubjectAltName=DNS:localhost,IP:127.0.0.1,DNS:example.server.com")) \
    -out server.csr

openssl x509 -req -days 365 -sha256 \
	-in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial \
	-extfile &amp;lt;(printf "subjectAltName=DNS:localhost,IP:127.0.0.1,DNS:example.server.com") \
	-out server.crt
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;build frpc certificatesÔºö&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;openssl genrsa -out client.key 2048
openssl req -new -sha256 -key client.key \
    -subj "/C=XX/ST=DEFAULT/L=DEFAULT/O=DEFAULT/CN=client.com" \
    -reqexts SAN \
    -config &amp;lt;(cat my-openssl.cnf &amp;lt;(printf "\n[SAN]\nsubjectAltName=DNS:client.com,DNS:example.client.com")) \
    -out client.csr

openssl x509 -req -days 365 -sha256 \
    -in client.csr -CA ca.crt -CAkey ca.key -CAcreateserial \
	-extfile &amp;lt;(printf "subjectAltName=DNS:client.com,DNS:example.client.com") \
	-out client.crt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hot-Reloading frpc configuration&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;webServer&lt;/code&gt; fields are required for enabling HTTP API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
webServer.addr = "127.0.0.1"
webServer.port = 7400
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then run command &lt;code&gt;frpc reload -c ./frpc.toml&lt;/code&gt; and wait for about 10 seconds to let &lt;code&gt;frpc&lt;/code&gt; create or update or remove proxies.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note that global client parameters won't be modified except 'start'.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can run command &lt;code&gt;frpc verify -c ./frpc.toml&lt;/code&gt; before reloading to check if there are config errors.&lt;/p&gt; 
&lt;h3&gt;Get proxy status from client&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;frpc status -c ./frpc.toml&lt;/code&gt; to get status of all proxies. The &lt;code&gt;webServer&lt;/code&gt; fields are required for enabling HTTP API.&lt;/p&gt; 
&lt;h3&gt;Only allowing certain ports on the server&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;allowPorts&lt;/code&gt; in &lt;code&gt;frps.toml&lt;/code&gt; is used to avoid abuse of ports:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
allowPorts = [
  { start = 2000, end = 3000 },
  { single = 3001 },
  { single = 3003 },
  { start = 4000, end = 50000 }
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Port Reuse&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;vhostHTTPPort&lt;/code&gt; and &lt;code&gt;vhostHTTPSPort&lt;/code&gt; in frps can use same port with &lt;code&gt;bindPort&lt;/code&gt;. frps will detect the connection's protocol and handle it correspondingly.&lt;/p&gt; 
&lt;p&gt;What you need to pay attention to is that if you want to configure &lt;code&gt;vhostHTTPSPort&lt;/code&gt; and &lt;code&gt;bindPort&lt;/code&gt; to the same port, you need to first set &lt;code&gt;transport.tls.disableCustomTLSFirstByte&lt;/code&gt; to false.&lt;/p&gt; 
&lt;p&gt;We would like to try to allow multiple proxies bind a same remote port with different protocols in the future.&lt;/p&gt; 
&lt;h3&gt;Bandwidth Limit&lt;/h3&gt; 
&lt;h4&gt;For Each Proxy&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "ssh"
type = "tcp"
localPort = 22
remotePort = 6000
transport.bandwidthLimit = "1MB"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Set &lt;code&gt;transport.bandwidthLimit&lt;/code&gt; in each proxy's configure to enable this feature. Supported units are &lt;code&gt;MB&lt;/code&gt; and &lt;code&gt;KB&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Set &lt;code&gt;transport.bandwidthLimitMode&lt;/code&gt; to &lt;code&gt;client&lt;/code&gt; or &lt;code&gt;server&lt;/code&gt; to limit bandwidth on the client or server side. Default is &lt;code&gt;client&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;TCP Stream Multiplexing&lt;/h3&gt; 
&lt;p&gt;frp supports tcp stream multiplexing since v0.10.0 like HTTP2 Multiplexing, in which case all logic connections to the same frpc are multiplexed into the same TCP connection.&lt;/p&gt; 
&lt;p&gt;You can disable this feature by modify &lt;code&gt;frps.toml&lt;/code&gt; and &lt;code&gt;frpc.toml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml and frpc.toml, must be same
transport.tcpMux = false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Support KCP Protocol&lt;/h3&gt; 
&lt;p&gt;KCP is a fast and reliable protocol that can achieve the transmission effect of a reduction of the average latency by 30% to 40% and reduction of the maximum delay by a factor of three, at the cost of 10% to 20% more bandwidth wasted than TCP.&lt;/p&gt; 
&lt;p&gt;KCP mode uses UDP as the underlying transport. Using KCP in frp:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Enable KCP in frps:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
bindPort = 7000
# Specify a UDP port for KCP.
kcpBindPort = 7000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;kcpBindPort&lt;/code&gt; number can be the same number as &lt;code&gt;bindPort&lt;/code&gt;, since &lt;code&gt;bindPort&lt;/code&gt; field specifies a TCP port.&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Configure &lt;code&gt;frpc.toml&lt;/code&gt; to use KCP to connect to frps:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
# Same as the 'kcpBindPort' in frps.toml
serverPort = 7000
transport.protocol = "kcp"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Support QUIC Protocol&lt;/h3&gt; 
&lt;p&gt;QUIC is a new multiplexed transport built on top of UDP.&lt;/p&gt; 
&lt;p&gt;Using QUIC in frp:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Enable QUIC in frps:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
bindPort = 7000
# Specify a UDP port for QUIC.
quicBindPort = 7000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;quicBindPort&lt;/code&gt; number can be the same number as &lt;code&gt;bindPort&lt;/code&gt;, since &lt;code&gt;bindPort&lt;/code&gt; field specifies a TCP port.&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Configure &lt;code&gt;frpc.toml&lt;/code&gt; to use QUIC to connect to frps:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
# Same as the 'quicBindPort' in frps.toml
serverPort = 7000
transport.protocol = "quic"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Connection Pooling&lt;/h3&gt; 
&lt;p&gt;By default, frps creates a new frpc connection to the backend service upon a user request. With connection pooling, frps keeps a certain number of pre-established connections, reducing the time needed to establish a connection.&lt;/p&gt; 
&lt;p&gt;This feature is suitable for a large number of short connections.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Configure the limit of pool count each proxy can use in &lt;code&gt;frps.toml&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
transport.maxPoolCount = 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Enable and specify the number of connection pool:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
transport.poolCount = 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Load balancing&lt;/h3&gt; 
&lt;p&gt;Load balancing is supported by &lt;code&gt;group&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;This feature is only available for types &lt;code&gt;tcp&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;tcpmux&lt;/code&gt; now.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "test1"
type = "tcp"
localPort = 8080
remotePort = 80
loadBalancer.group = "web"
loadBalancer.groupKey = "123"

[[proxies]]
name = "test2"
type = "tcp"
localPort = 8081
remotePort = 80
loadBalancer.group = "web"
loadBalancer.groupKey = "123"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;loadBalancer.groupKey&lt;/code&gt; is used for authentication.&lt;/p&gt; 
&lt;p&gt;Connections to port 80 will be dispatched to proxies in the same group randomly.&lt;/p&gt; 
&lt;p&gt;For type &lt;code&gt;tcp&lt;/code&gt;, &lt;code&gt;remotePort&lt;/code&gt; in the same group should be the same.&lt;/p&gt; 
&lt;p&gt;For type &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;customDomains&lt;/code&gt;, &lt;code&gt;subdomain&lt;/code&gt;, &lt;code&gt;locations&lt;/code&gt; should be the same.&lt;/p&gt; 
&lt;h3&gt;Service Health Check&lt;/h3&gt; 
&lt;p&gt;Health check feature can help you achieve high availability with load balancing.&lt;/p&gt; 
&lt;p&gt;Add &lt;code&gt;healthCheck.type = "tcp"&lt;/code&gt; or &lt;code&gt;healthCheck.type = "http"&lt;/code&gt; to enable health check.&lt;/p&gt; 
&lt;p&gt;With health check type &lt;strong&gt;tcp&lt;/strong&gt;, the service port will be pinged (TCPing):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "test1"
type = "tcp"
localPort = 22
remotePort = 6000
# Enable TCP health check
healthCheck.type = "tcp"
# TCPing timeout seconds
healthCheck.timeoutSeconds = 3
# If health check failed 3 times in a row, the proxy will be removed from frps
healthCheck.maxFailed = 3
# A health check every 10 seconds
healthCheck.intervalSeconds = 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With health check type &lt;strong&gt;http&lt;/strong&gt;, an HTTP request will be sent to the service and an HTTP 2xx OK response is expected:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "web"
type = "http"
localIP = "127.0.0.1"
localPort = 80
customDomains = ["test.example.com"]
# Enable HTTP health check
healthCheck.type = "http"
# frpc will send a GET request to '/status'
# and expect an HTTP 2xx OK response
healthCheck.path = "/status"
healthCheck.timeoutSeconds = 3
healthCheck.maxFailed = 3
healthCheck.intervalSeconds = 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Rewriting the HTTP Host Header&lt;/h3&gt; 
&lt;p&gt;By default frp does not modify the tunneled HTTP requests at all as it's a byte-for-byte copy.&lt;/p&gt; 
&lt;p&gt;However, speaking of web servers and HTTP requests, your web server might rely on the &lt;code&gt;Host&lt;/code&gt; HTTP header to determine the website to be accessed. frp can rewrite the &lt;code&gt;Host&lt;/code&gt; header when forwarding the HTTP requests, with the &lt;code&gt;hostHeaderRewrite&lt;/code&gt; field:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "web"
type = "http"
localPort = 80
customDomains = ["test.example.com"]
hostHeaderRewrite = "dev.example.com"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The HTTP request will have the &lt;code&gt;Host&lt;/code&gt; header rewritten to &lt;code&gt;Host: dev.example.com&lt;/code&gt; when it reaches the actual web server, although the request from the browser probably has &lt;code&gt;Host: test.example.com&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Setting other HTTP Headers&lt;/h3&gt; 
&lt;p&gt;Similar to &lt;code&gt;Host&lt;/code&gt;, You can override other HTTP request and response headers with proxy type &lt;code&gt;http&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "web"
type = "http"
localPort = 80
customDomains = ["test.example.com"]
hostHeaderRewrite = "dev.example.com"
requestHeaders.set.x-from-where = "frp"
responseHeaders.set.foo = "bar"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In this example, it will set header &lt;code&gt;x-from-where: frp&lt;/code&gt; in the HTTP request and &lt;code&gt;foo: bar&lt;/code&gt; in the HTTP response.&lt;/p&gt; 
&lt;h3&gt;Get Real IP&lt;/h3&gt; 
&lt;h4&gt;HTTP X-Forwarded-For&lt;/h4&gt; 
&lt;p&gt;This feature is for &lt;code&gt;http&lt;/code&gt; proxies or proxies with the &lt;code&gt;https2http&lt;/code&gt; and &lt;code&gt;https2https&lt;/code&gt; plugins enabled.&lt;/p&gt; 
&lt;p&gt;You can get user's real IP from HTTP request headers &lt;code&gt;X-Forwarded-For&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Proxy Protocol&lt;/h4&gt; 
&lt;p&gt;frp supports Proxy Protocol to send user's real IP to local services.&lt;/p&gt; 
&lt;p&gt;Here is an example for https service:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "web"
type = "https"
localPort = 443
customDomains = ["test.example.com"]

# now v1 and v2 are supported
transport.proxyProtocolVersion = "v2"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can enable Proxy Protocol support in nginx to expose user's real IP in HTTP header &lt;code&gt;X-Real-IP&lt;/code&gt;, and then read &lt;code&gt;X-Real-IP&lt;/code&gt; header in your web service for the real IP.&lt;/p&gt; 
&lt;h3&gt;Require HTTP Basic Auth (Password) for Web Services&lt;/h3&gt; 
&lt;p&gt;Anyone who can guess your tunnel URL can access your local web server unless you protect it with a password.&lt;/p&gt; 
&lt;p&gt;This enforces HTTP Basic Auth on all requests with the username and password specified in frpc's configure file.&lt;/p&gt; 
&lt;p&gt;It can only be enabled when proxy type is http.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "web"
type = "http"
localPort = 80
customDomains = ["test.example.com"]
httpUser = "abc"
httpPassword = "abc"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Visit &lt;code&gt;http://test.example.com&lt;/code&gt; in the browser and now you are prompted to enter the username and password.&lt;/p&gt; 
&lt;h3&gt;Custom Subdomain Names&lt;/h3&gt; 
&lt;p&gt;It is convenient to use &lt;code&gt;subdomain&lt;/code&gt; configure for http and https types when many people share one frps server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
subDomainHost = "frps.com"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Resolve &lt;code&gt;*.frps.com&lt;/code&gt; to the frps server's IP. This is usually called a Wildcard DNS record.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "web"
type = "http"
localPort = 80
subdomain = "test"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you can visit your web service on &lt;code&gt;test.frps.com&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Note that if &lt;code&gt;subdomainHost&lt;/code&gt; is not empty, &lt;code&gt;customDomains&lt;/code&gt; should not be the subdomain of &lt;code&gt;subdomainHost&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;URL Routing&lt;/h3&gt; 
&lt;p&gt;frp supports forwarding HTTP requests to different backend web services by url routing.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;locations&lt;/code&gt; specifies the prefix of URL used for routing. frps first searches for the most specific prefix location given by literal strings regardless of the listed order.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "web01"
type = "http"
localPort = 80
customDomains = ["web.example.com"]
locations = ["/"]

[[proxies]]
name = "web02"
type = "http"
localPort = 81
customDomains = ["web.example.com"]
locations = ["/news", "/about"]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;HTTP requests with URL prefix &lt;code&gt;/news&lt;/code&gt; or &lt;code&gt;/about&lt;/code&gt; will be forwarded to &lt;strong&gt;web02&lt;/strong&gt; and other requests to &lt;strong&gt;web01&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;TCP Port Multiplexing&lt;/h3&gt; 
&lt;p&gt;frp supports receiving TCP sockets directed to different proxies on a single port on frps, similar to &lt;code&gt;vhostHTTPPort&lt;/code&gt; and &lt;code&gt;vhostHTTPSPort&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The only supported TCP port multiplexing method available at the moment is &lt;code&gt;httpconnect&lt;/code&gt; - HTTP CONNECT tunnel.&lt;/p&gt; 
&lt;p&gt;When setting &lt;code&gt;tcpmuxHTTPConnectPort&lt;/code&gt; to anything other than 0 in frps, frps will listen on this port for HTTP CONNECT requests.&lt;/p&gt; 
&lt;p&gt;The host of the HTTP CONNECT request will be used to match the proxy in frps. Proxy hosts can be configured in frpc by configuring &lt;code&gt;customDomains&lt;/code&gt; and / or &lt;code&gt;subdomain&lt;/code&gt; under &lt;code&gt;tcpmux&lt;/code&gt; proxies, when &lt;code&gt;multiplexer = "httpconnect"&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
bindPort = 7000
tcpmuxHTTPConnectPort = 1337
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000

[[proxies]]
name = "proxy1"
type = "tcpmux"
multiplexer = "httpconnect"
customDomains = ["test1"]
localPort = 80

[[proxies]]
name = "proxy2"
type = "tcpmux"
multiplexer = "httpconnect"
customDomains = ["test2"]
localPort = 8080
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the above configuration - frps can be contacted on port 1337 with a HTTP CONNECT header such as:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;CONNECT test1 HTTP/1.1\r\n\r\n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and the connection will be routed to &lt;code&gt;proxy1&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Connecting to frps via PROXY&lt;/h3&gt; 
&lt;p&gt;frpc can connect to frps through proxy if you set OS environment variable &lt;code&gt;HTTP_PROXY&lt;/code&gt;, or if &lt;code&gt;transport.proxyURL&lt;/code&gt; is set in frpc.toml file.&lt;/p&gt; 
&lt;p&gt;It only works when protocol is tcp.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml
serverAddr = "x.x.x.x"
serverPort = 7000
transport.proxyURL = "http://user:pwd@192.168.1.128:8080"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Port range mapping&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Added in v0.56.0&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;We can use the range syntax of Go template combined with the built-in &lt;code&gt;parseNumberRangePair&lt;/code&gt; function to achieve port range mapping.&lt;/p&gt; 
&lt;p&gt;The following example, when run, will create 8 proxies named &lt;code&gt;test-6000, test-6001 ... test-6007&lt;/code&gt;, each mapping the remote port to the local port.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{{- range $_, $v := parseNumberRangePair "6000-6006,6007" "6000-6006,6007" }}
[[proxies]]
name = "tcp-{{ $v.First }}"
type = "tcp"
localPort = {{ $v.First }}
remotePort = {{ $v.Second }}
{{- end }}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Client Plugins&lt;/h3&gt; 
&lt;p&gt;frpc only forwards requests to local TCP or UDP ports by default.&lt;/p&gt; 
&lt;p&gt;Plugins are used for providing rich features. There are built-in plugins such as &lt;code&gt;unix_domain_socket&lt;/code&gt;, &lt;code&gt;http_proxy&lt;/code&gt;, &lt;code&gt;socks5&lt;/code&gt;, &lt;code&gt;static_file&lt;/code&gt;, &lt;code&gt;http2https&lt;/code&gt;, &lt;code&gt;https2http&lt;/code&gt;, &lt;code&gt;https2https&lt;/code&gt; and you can see &lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/#example-usage"&gt;example usage&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Using plugin &lt;strong&gt;http_proxy&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frpc.toml

[[proxies]]
name = "http_proxy"
type = "tcp"
remotePort = 6000
[proxies.plugin]
type = "http_proxy"
httpUser = "abc"
httpPassword = "abc"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;httpUser&lt;/code&gt; and &lt;code&gt;httpPassword&lt;/code&gt; are configuration parameters used in &lt;code&gt;http_proxy&lt;/code&gt; plugin.&lt;/p&gt; 
&lt;h3&gt;Server Manage Plugins&lt;/h3&gt; 
&lt;p&gt;Read the &lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/doc/server_plugin.md"&gt;document&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Find more plugins in &lt;a href="https://github.com/gofrp/plugin"&gt;gofrp/plugin&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;SSH Tunnel Gateway&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;added in v0.53.0&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;frp supports listening to an SSH port on the frps side and achieves TCP protocol proxying through the SSH -R protocol, without relying on frpc.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# frps.toml
sshTunnelGateway.bindPort = 2200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When running &lt;code&gt;./frps -c frps.toml&lt;/code&gt;, a private key file named &lt;code&gt;.autogen_ssh_key&lt;/code&gt; will be automatically created in the current working directory. This generated private key file will be used by the SSH server in frps.&lt;/p&gt; 
&lt;p&gt;Executing the command&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ssh -R :80:127.0.0.1:8080 v0@{frp address} -p 2200 tcp --proxy_name "test-tcp" --remote_port 9090
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;sets up a proxy on frps that forwards the local 8080 service to the port 9090.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;frp (via SSH) (Ctrl+C to quit)

User:
ProxyName: test-tcp
Type: tcp
RemoteAddress: :9090
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is equivalent to:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;frpc tcp --proxy_name "test-tcp" --local_ip 127.0.0.1 --local_port 8080 --remote_port 9090
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please refer to this &lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/doc/ssh_tunnel_gateway.md"&gt;document&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Virtual Network (VirtualNet)&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Alpha feature added in v0.62.0&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;The VirtualNet feature enables frp to create and manage virtual network connections between clients and visitors through a TUN interface. This allows for IP-level routing between machines, extending frp beyond simple port forwarding to support full network connectivity.&lt;/p&gt; 
&lt;p&gt;For detailed information about configuration and usage, please refer to the &lt;a href="https://raw.githubusercontent.com/fatedier/frp/dev/doc/virtual_net.md"&gt;VirtualNet documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Feature Gates&lt;/h2&gt; 
&lt;p&gt;frp supports feature gates to enable or disable experimental features. This allows users to try out new features before they're considered stable.&lt;/p&gt; 
&lt;h3&gt;Available Feature Gates&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Stage&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;VirtualNet&lt;/td&gt; 
   &lt;td&gt;ALPHA&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;Virtual network capabilities for frp&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Enabling Feature Gates&lt;/h3&gt; 
&lt;p&gt;To enable an experimental feature, add the feature gate to your configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;featureGates = { VirtualNet = true }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Feature Lifecycle&lt;/h3&gt; 
&lt;p&gt;Features typically go through three stages:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;ALPHA&lt;/strong&gt;: Disabled by default, may be unstable&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;BETA&lt;/strong&gt;: May be enabled by default, more stable but still evolving&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GA (Generally Available)&lt;/strong&gt;: Enabled by default, ready for production use&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofrp/plugin"&gt;gofrp/plugin&lt;/a&gt; - A repository for frp plugins that contains a variety of plugins implemented based on the frp extension mechanism, meeting the customization needs of different scenarios.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofrp/tiny-frpc"&gt;gofrp/tiny-frpc&lt;/a&gt; - A lightweight version of the frp client (around 3.5MB at minimum) implemented using the ssh protocol, supporting some of the most commonly used features, suitable for devices with limited resources.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Interested in getting involved? We would like to help you!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Take a look at our &lt;a href="https://github.com/fatedier/frp/issues"&gt;issues list&lt;/a&gt; and consider sending a Pull Request to &lt;strong&gt;dev branch&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;If you want to add a new feature, please create an issue first to describe the new feature, as well as the implementation approach. Once a proposal is accepted, create an implementation of the new features and submit it as a pull request.&lt;/li&gt; 
 &lt;li&gt;Sorry for my poor English. Improvements for this document are welcome, even some typo fixes.&lt;/li&gt; 
 &lt;li&gt;If you have great ideas, send an email to &lt;a href="mailto:fatedier@gmail.com"&gt;fatedier@gmail.com&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note: We prefer you to give your advise in &lt;a href="https://github.com/fatedier/frp/issues"&gt;issues&lt;/a&gt;, so others with a same question can search it quickly and we don't need to answer them repeatedly.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Donation&lt;/h2&gt; 
&lt;p&gt;If frp helps you a lot, you can support us by:&lt;/p&gt; 
&lt;h3&gt;GitHub Sponsors&lt;/h3&gt; 
&lt;p&gt;Support us by &lt;a href="https://github.com/sponsors/fatedier"&gt;Github Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can have your company's logo placed on README file of this project.&lt;/p&gt; 
&lt;h3&gt;PayPal&lt;/h3&gt; 
&lt;p&gt;Donate money by &lt;a href="https://www.paypal.me/fatedier"&gt;PayPal&lt;/a&gt; to my account &lt;strong&gt;&lt;a href="mailto:fatedier@gmail.com"&gt;fatedier@gmail.com&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>crossplane/crossplane</title>
      <link>https://github.com/crossplane/crossplane</link>
      <description>&lt;p&gt;The Cloud Native Control Plane&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://www.bestpractices.dev/projects/3260"&gt;&lt;img src="https://www.bestpractices.dev/projects/3260/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt; &lt;img src="https://github.com/crossplane/crossplane/workflows/CI/badge.svg?sanitize=true" alt="CI" /&gt; &lt;a href="https://goreportcard.com/report/github.com/crossplane/crossplane"&gt;&lt;img src="https://goreportcard.com/badge/github.com/crossplane/crossplane" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/crossplane/crossplane/main/banner.png" alt="Crossplane" /&gt;&lt;/p&gt; 
&lt;p&gt;Crossplane is a framework for building cloud native control planes without needing to write code. It has a highly extensible backend that enables you to build a control plane that can orchestrate applications and infrastructure no matter where they run, and a highly configurable frontend that puts you in control of the schema of the declarative API it offers.&lt;/p&gt; 
&lt;p&gt;Crossplane is a &lt;a href="https://www.cncf.io/"&gt;Cloud Native Computing Foundation&lt;/a&gt; project.&lt;/p&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;p&gt;Crossplane's &lt;a href="https://docs.crossplane.io/latest/getting-started/"&gt;Get Started Docs&lt;/a&gt; cover install and cloud provider quickstarts.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/crossplane/crossplane/releases"&gt;&lt;img src="https://img.shields.io/github/release/crossplane/crossplane/all.svg?sanitize=true" alt="GitHub release" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/crossplane/crossplane"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/crossplane" alt="Artifact Hub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Currently maintained releases, as well as the next few upcoming releases are listed below. For more information take a look at the Crossplane &lt;a href="https://docs.crossplane.io/knowledge-base/guides/release-cycle"&gt;release cycle documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Release&lt;/th&gt; 
   &lt;th align="center"&gt;Release Date&lt;/th&gt; 
   &lt;th align="center"&gt;EOL&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;v1.19&lt;/td&gt; 
   &lt;td align="center"&gt;Feb 11, 2025&lt;/td&gt; 
   &lt;td align="center"&gt;Nov 2025&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;v1.20&lt;/td&gt; 
   &lt;td align="center"&gt;May 21, 2025&lt;/td&gt; 
   &lt;td align="center"&gt;Feb 2026&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;v2.0&lt;/td&gt; 
   &lt;td align="center"&gt;Aug 8, 2025&lt;/td&gt; 
   &lt;td align="center"&gt;May 2026&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;v2.1&lt;/td&gt; 
   &lt;td align="center"&gt;Early Nov '25&lt;/td&gt; 
   &lt;td align="center"&gt;Aug 2026&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;v2.2&lt;/td&gt; 
   &lt;td align="center"&gt;Early Feb '26&lt;/td&gt; 
   &lt;td align="center"&gt;Nov 2026&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;v2.3&lt;/td&gt; 
   &lt;td align="center"&gt;Early May '26&lt;/td&gt; 
   &lt;td align="center"&gt;Feb 2027&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;You can subscribe to the &lt;a href="https://zoom-lfx.platform.linuxfoundation.org/meetings/crossplane?view=month"&gt;community calendar&lt;/a&gt; to track all release dates, and find the most recent releases on the &lt;a href="https://github.com/crossplane/crossplane/releases"&gt;releases&lt;/a&gt; page.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The public roadmap for Crossplane is published as a GitHub project board. Issues added to the roadmap have been triaged and identified as valuable to the community, and therefore a priority for the project that we expect to invest in.&lt;/p&gt; 
&lt;p&gt;The maintainer team regularly triages requests from the community to identify features and issues of suitable scope and impact to include in this roadmap. The community is encouraged to show their support for potential roadmap issues by adding a &lt;span&gt;üëç&lt;/span&gt; reaction, leaving descriptive comments, and attending the &lt;a href="https://github.com/crossplane/crossplane/raw/main/README.md#get-involved"&gt;regular community meetings&lt;/a&gt; to discuss their requirements and use cases.&lt;/p&gt; 
&lt;p&gt;The maintainer team updates the roadmap on an as needed basis, in response to demand, priority, and available resources. The public roadmap can be updated at any time.&lt;/p&gt; 
&lt;p&gt;Milestones assigned to any issues in the roadmap are intended to give a sense of overall priority and the expected order of delivery. They should be considered approximate estimations and are &lt;strong&gt;not&lt;/strong&gt; a strict commitment to a specific delivery timeline.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/orgs/crossplane/projects/20/views/9?pane=info"&gt;Crossplane Roadmap&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Get Involved&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://slack.crossplane.io"&gt;&lt;img src="https://img.shields.io/badge/slack-crossplane-red?logo=slack" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://bsky.app/profile/crossplane.io"&gt;&lt;img src="https://img.shields.io/badge/bluesky-Follow-blue?logo=bluesky" alt="Bluesky Follow" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=crossplane_io&amp;amp;user_id=788180534543339520"&gt;&lt;img src="https://img.shields.io/twitter/follow/crossplane_io?logo=X&amp;amp;label=Follow&amp;amp;style=flat" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/@Crossplane"&gt;&lt;img src="https://img.shields.io/youtube/channel/subscribers/UC19FgzMBMqBro361HbE46Fw" alt="YouTube Channel Subscribers" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Crossplane is a community driven project; we welcome your contribution. To file a bug, suggest an improvement, or request a new feature please open an &lt;a href="https://github.com/crossplane/crossplane/issues"&gt;issue against Crossplane&lt;/a&gt; or the relevant provider. Refer to our &lt;a href="https://raw.githubusercontent.com/crossplane/crossplane/main/contributing/README.md"&gt;contributing guide&lt;/a&gt; for more information on how you can help.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discuss Crossplane on &lt;a href="https://slack.crossplane.io"&gt;Slack&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Follow us on &lt;a href="https://bsky.app/profile/crossplane.io"&gt;Bluesky&lt;/a&gt;, &lt;a href="https://twitter.com/crossplane_io"&gt;Twitter&lt;/a&gt;, or &lt;a href="https://www.linkedin.com/company/crossplane/"&gt;LinkedIn&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Contact us via &lt;a href="mailto:crossplane-info@lists.cncf.io"&gt;Email&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Join our regular community meetings.&lt;/li&gt; 
 &lt;li&gt;Provide feedback on our &lt;a href="https://github.com/orgs/crossplane/projects/20/views/9?pane=info"&gt;roadmap and releases board&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The Crossplane community meeting takes place every 4 weeks on &lt;a href="https://www.thetimezoneconverter.com/?t=10:00&amp;amp;tz=PT%20%28Pacific%20Time%29"&gt;Thursday at 10:00am Pacific Time&lt;/a&gt;. You can find the up to date meeting schedule on the &lt;a href="https://zoom-lfx.platform.linuxfoundation.org/meetings/crossplane?view=month"&gt;Community Calendar&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Anyone who wants to discuss the direction of the project, design and implementation reviews, or raise general questions with the broader community is encouraged to join.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Meeting link: &lt;a href="https://zoom-lfx.platform.linuxfoundation.org/meeting/98901510164?password=c60c41ae-1e1e-42d0-9a74-16de2fbb66f9"&gt;https://zoom-lfx.platform.linuxfoundation.org/meeting/98901510164?password=c60c41ae-1e1e-42d0-9a74-16de2fbb66f9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.google.com/document/d/1q_sp2jLQsDEOX7Yug6TPOv7Fwrys6EwcF5Itxjkno7Y/edit?usp=sharing"&gt;Current agenda and past meeting notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PL510POnNVaaYYYDSICFSNWFqNbx1EMr-M"&gt;Past meeting recordings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zoom-lfx.platform.linuxfoundation.org/meetings/crossplane?view=month"&gt;Community Calendar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Special Interest Groups (SIG)&lt;/h3&gt; 
&lt;p&gt;Each SIG collaborates in Slack and some groups have regular meetings, you can find the meetings in the &lt;a href="https://zoom-lfx.platform.linuxfoundation.org/meetings/crossplane?view=month"&gt;Community Calendar&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://crossplane.slack.com/archives/C08V9PMLRQA"&gt;#sig-cli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crossplane.slack.com/archives/C05BP6QFLUW"&gt;#sig-composition-environments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crossplane.slack.com/archives/C031Y29CSAE"&gt;#sig-composition-functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crossplane.slack.com/archives/C05BP8W5ALW"&gt;#sig-deletion-ordering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crossplane.slack.com/archives/C05U1LLM3B2"&gt;#sig-devex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crossplane.slack.com/archives/C02CAQ52DPU"&gt;#sig-docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crossplane.slack.com/archives/C05C8CCTVNV"&gt;#sig-e2e-testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crossplane.slack.com/archives/C061GNH3LA0"&gt;#sig-observability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crossplane.slack.com/archives/C04D5988QEA"&gt;#sig-observe-only&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crossplane.slack.com/archives/C056YAQRV16"&gt;#sig-provider-families&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crossplane.slack.com/archives/C05BY7DKFV2"&gt;#sig-secret-stores&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://crossplane.slack.com/archives/C05T19TB729"&gt;#sig-upjet&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Adopters&lt;/h2&gt; 
&lt;p&gt;A list of publicly known users of the Crossplane project can be found in &lt;a href="https://raw.githubusercontent.com/crossplane/crossplane/main/ADOPTERS.md"&gt;ADOPTERS.md&lt;/a&gt;. We encourage all users of Crossplane to add themselves to this list - we want to see the community's growing success!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Crossplane is under the Apache 2.0 license.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://app.fossa.io/projects/git%2Bgithub.com%2Fcrossplane%2Fcrossplane?ref=badge_large"&gt;&lt;img src="https://app.fossa.io/api/projects/git%2Bgithub.com%2Fcrossplane%2Fcrossplane.svg?type=large" alt="FOSSA Status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- Named links --&gt;</description>
    </item>
    
    <item>
      <title>apernet/hysteria</title>
      <link>https://github.com/apernet/hysteria</link>
      <description>&lt;p&gt;Hysteria is a powerful, lightning fast and censorship resistant proxy.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src="https://raw.githubusercontent.com/apernet/hysteria/master/logo.svg?sanitize=true" alt="Hysteria 2" /&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/apernet/hysteria/master/LICENSE.md"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://github.com/apernet/hysteria/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/apernet/hysteria?style=flat-square" alt="Release" /&gt;&lt;/a&gt; &lt;a href="https://t.me/hysteria_github"&gt;&lt;img src="https://img.shields.io/badge/chat-Telegram-blue?style=flat-square" alt="Telegram" /&gt;&lt;/a&gt; &lt;a href="https://github.com/apernet/hysteria/discussions"&gt;&lt;img src="https://img.shields.io/github/discussions/apernet/hysteria?style=flat-square" alt="Discussions" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2 style="text-align: center;"&gt;Hysteria is a powerful, lightning fast and censorship resistant proxy.&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://v2.hysteria.network/"&gt;Get Started&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;a href="https://v2.hysteria.network/zh/"&gt;‰∏≠ÊñáÊñáÊ°£&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;a href="https://v1.hysteria.network/"&gt;Hysteria 1.x (legacy)&lt;/a&gt;&lt;/h3&gt; 
&lt;hr /&gt; 
&lt;div class="feature-grid"&gt; 
 &lt;div&gt; 
  &lt;h3&gt;üõ†Ô∏è Jack of all trades&lt;/h3&gt; 
  &lt;p&gt;Wide range of modes including SOCKS5, HTTP Proxy, TCP/UDP Forwarding, Linux TProxy, TUN - with more features being added constantly.&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;h3&gt;‚ö° Blazing fast&lt;/h3&gt; 
  &lt;p&gt;Powered by a customized QUIC protocol, Hysteria is designed to deliver unparalleled performance over unreliable and lossy networks.&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;h3&gt;‚úä Censorship resistant&lt;/h3&gt; 
  &lt;p&gt;The protocol masquerades as standard HTTP/3 traffic, making it very difficult for censors to detect and block without widespread collateral damage.&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;h3&gt;üíª Cross-platform&lt;/h3&gt; 
  &lt;p&gt;We have builds for every major platform and architecture. Deploy anywhere &amp;amp; use everywhere. Not to mention the long list of 3rd party apps.&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;h3&gt;üîó Easy integration&lt;/h3&gt; 
  &lt;p&gt;With built-in support for custom authentication, traffic statistics &amp;amp; access control, Hysteria is easy to integrate into your infrastructure.&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;h3&gt;ü§ó Chill and supportive&lt;/h3&gt; 
  &lt;p&gt;We have well-documented specifications and code for developers to contribute and/or build their own apps. And a helpful community, too.&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;If you find Hysteria useful, consider giving it a ‚≠êÔ∏è!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#apernet/hysteria&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=apernet/hysteria&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lxc/incus</title>
      <link>https://github.com/lxc/incus</link>
      <description>&lt;p&gt;Powerful system container and virtual machine manager&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Incus&lt;/h1&gt; 
&lt;p&gt;Incus is a modern, secure and powerful system container and virtual machine manager.&lt;/p&gt; 
&lt;!-- Include start Incus intro --&gt; 
&lt;p&gt;It provides a unified experience for running and managing full Linux systems inside containers or virtual machines. Incus supports images for a large number of Linux distributions (official Ubuntu images and images provided by the community) and is built around a very powerful, yet pretty simple, REST API. Incus scales from one instance on a single machine to a cluster in a full data center rack, making it suitable for running workloads both for development and in production.&lt;/p&gt; 
&lt;p&gt;Incus allows you to easily set up a system that feels like a small private cloud. You can run any type of workload in an efficient way while keeping your resources optimized.&lt;/p&gt; 
&lt;p&gt;You should consider using Incus if you want to containerize different environments or run virtual machines, or in general run and manage your infrastructure in a cost-effective way.&lt;/p&gt; 
&lt;p&gt;You can try Incus online at: &lt;a href="https://linuxcontainers.org/incus/try-it/"&gt;&lt;code&gt;https://linuxcontainers.org/incus/try-it/&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- Include end Incus intro --&gt; 
&lt;h2&gt;Project history&lt;/h2&gt; 
&lt;p&gt;Incus, which is named after the &lt;a href="https://en.wikipedia.org/wiki/Cumulonimbus_incus"&gt;Cumulonimbus incus&lt;/a&gt; or anvil cloud started as a community fork of Canonical's LXD following &lt;a href="https://linuxcontainers.org/lxd/"&gt;Canonical's takeover&lt;/a&gt; of the LXD project from the Linux Containers community.&lt;/p&gt; 
&lt;p&gt;The project was then adopted by the Linux Containers community, taking back the spot left empty by LXD's departure.&lt;/p&gt; 
&lt;p&gt;Incus is a true open source community project, free of any &lt;a href="https://en.wikipedia.org/wiki/Contributor_License_Agreement"&gt;CLA&lt;/a&gt; and remains released under the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;Apache 2.0 license&lt;/a&gt;. It's maintained by the same team of developers that first created LXD.&lt;/p&gt; 
&lt;p&gt;LXD users wishing to migrate to Incus can easily do so through a migration tool called &lt;a href="https://linuxcontainers.org/incus/docs/main/howto/server_migrate_lxd/"&gt;&lt;code&gt;lxd-to-incus&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://linuxcontainers.org/incus/docs/main/tutorial/first_steps/"&gt;Getting started&lt;/a&gt; in the Incus documentation for installation instructions and first steps.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Release announcements: &lt;a href="https://discuss.linuxcontainers.org/c/news/"&gt;&lt;code&gt;https://discuss.linuxcontainers.org/c/news/&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Release tarballs: &lt;a href="https://github.com/lxc/incus/releases/"&gt;&lt;code&gt;https://github.com/lxc/incus/releases/&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://linuxcontainers.org/incus/docs/main/"&gt;&lt;code&gt;https://linuxcontainers.org/incus/docs/main/&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Service&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Tests&lt;/td&gt; 
   &lt;td&gt;GitHub&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/lxc/incus/actions?query=event%3Apush+branch%3Amain"&gt;&lt;img src="https://github.com/lxc/incus/actions/workflows/tests.yml/badge.svg?branch=main" alt="Build Status" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Go documentation&lt;/td&gt; 
   &lt;td&gt;Godoc&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://godoc.org/github.com/lxc/incus/v6/client"&gt;&lt;img src="https://godoc.org/github.com/lxc/incus/v6/client?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Static analysis&lt;/td&gt; 
   &lt;td&gt;GoReport&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://goreportcard.com/report/github.com/lxc/incus"&gt;&lt;img src="https://goreportcard.com/badge/github.com/lxc/incus" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Translations&lt;/td&gt; 
   &lt;td&gt;Weblate&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://hosted.weblate.org/projects/incus/"&gt;&lt;img src="https://hosted.weblate.org/widget/incus/svg-badge.svg?sanitize=true" alt="Translation status" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;!-- Include start security --&gt; 
&lt;p&gt;Consider the following aspects to ensure that your Incus installation is secure:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Keep your operating system up-to-date and install all available security patches.&lt;/li&gt; 
 &lt;li&gt;Use only supported Incus versions.&lt;/li&gt; 
 &lt;li&gt;Restrict access to the Incus daemon and the remote API.&lt;/li&gt; 
 &lt;li&gt;Do not use privileged containers unless required. If you use privileged containers, put appropriate security measures in place. See the &lt;a href="https://linuxcontainers.org/lxc/security/"&gt;LXC security page&lt;/a&gt; for more information.&lt;/li&gt; 
 &lt;li&gt;Configure your network interfaces to be secure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- Include end security --&gt; 
&lt;p&gt;See &lt;a href="https://github.com/lxc/incus/raw/main/doc/explanation/security.md"&gt;Security&lt;/a&gt; for detailed information.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt;&lt;/p&gt; 
&lt;!-- Include start security note --&gt; 
&lt;p&gt;Local access to Incus through the Unix socket always grants full access to Incus. This includes the ability to attach file system paths or devices to any instance as well as tweak the security features on any instance.&lt;/p&gt; 
&lt;p&gt;Therefore, you should only give such access to users who you'd trust with root access to your system.&lt;/p&gt; 
&lt;!-- Include end security note --&gt; 
&lt;!-- Include start support --&gt; 
&lt;h2&gt;Support and community&lt;/h2&gt; 
&lt;p&gt;The following channels are available for you to interact with the Incus community.&lt;/p&gt; 
&lt;h3&gt;Bug reports&lt;/h3&gt; 
&lt;p&gt;You can file bug reports and feature requests at: &lt;a href="https://github.com/lxc/incus/issues/new"&gt;&lt;code&gt;https://github.com/lxc/incus/issues/new&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Community support&lt;/h3&gt; 
&lt;p&gt;Community support is handling at: &lt;a href="https://discuss.linuxcontainers.org"&gt;&lt;code&gt;https://discuss.linuxcontainers.org&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Commercial support&lt;/h3&gt; 
&lt;p&gt;Commercial support is currently available from &lt;a href="https://zabbly.com"&gt;Zabbly&lt;/a&gt; for users of their &lt;a href="https://github.com/zabbly/incus"&gt;Debian or Ubuntu packages&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The official documentation is available at: &lt;a href="https://github.com/lxc/incus/tree/main/doc"&gt;&lt;code&gt;https://github.com/lxc/incus/tree/main/doc&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- Include end support --&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Fixes and new features are greatly appreciated. Make sure to read our &lt;a href="https://raw.githubusercontent.com/lxc/incus/main/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; first!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>k8sgpt-ai/k8sgpt</title>
      <link>https://github.com/k8sgpt-ai/k8sgpt</link>
      <description>&lt;p&gt;Giving Kubernetes Superpowers to everyone&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="./images/banner-white.png" width="600px;" /&gt; 
 &lt;img alt="Text changing depending on mode. Light: 'So light!' Dark: 'So dark!'" src="https://raw.githubusercontent.com/k8sgpt-ai/k8sgpt/main/images/banner-black.png" width="600px;" /&gt; 
&lt;/picture&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/languages/code-size/k8sgpt-ai/k8sgpt" alt="GitHub code size in bytes" /&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/k8sgpt-ai/k8sgpt/release.yaml" alt="GitHub Workflow Status" /&gt; &lt;img src="https://img.shields.io/github/v/release/k8sgpt-ai/k8sgpt" alt="GitHub release (latest by date)" /&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/7272"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/7272/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://docs.k8sgpt.ai/"&gt;&lt;img src="https://img.shields.io/static/v1?label=%F0%9F%93%96&amp;amp;message=Documentation&amp;amp;color=blue" alt="Link to documentation" /&gt;&lt;/a&gt; &lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fk8sgpt-ai%2Fk8sgpt?ref=badge_shield"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fk8sgpt-ai%2Fk8sgpt.svg?type=shield" alt="FOSSA Status" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://github.com/k8sgpt-ai/k8sgpt"&gt;&lt;img src="https://img.shields.io/github/go-mod/go-version/k8sgpt-ai/k8sgpt.svg?sanitize=true" alt="Go version" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/github/k8sgpt-ai/k8sgpt"&gt;&lt;img src="https://codecov.io/github/k8sgpt-ai/k8sgpt/graph/badge.svg?token=ZLR7NG8URE" alt="codecov" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/last-commit/k8sgpt-ai/k8sgpt/main" alt="GitHub last commit (branch)" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;k8sgpt&lt;/code&gt; is a tool for scanning your Kubernetes clusters, diagnosing, and triaging issues in simple English.&lt;/p&gt; 
&lt;p&gt;It has SRE experience codified into its analyzers and helps to pull out the most relevant information to enrich it with AI.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Out of the box integration with OpenAI, Azure, Cohere, Amazon Bedrock, Google Gemini and local models.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/k8sgpt?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-k8sgpt" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=389489&amp;amp;theme=light" alt="K8sGPT - K8sGPT gives Kubernetes Superpowers to everyone | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;a href="https://hellogithub.com/repository/9dfe44c18dfb4d6fa0181baf8b2cf2e1" target="_blank"&gt;&lt;img src="https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=9dfe44c18dfb4d6fa0181baf8b2cf2e1&amp;amp;claim_uid=gqG4wmzkMrP0eFy" alt="FeaturedÔΩúHelloGitHub" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/k8sgpt-ai/k8sgpt/main/images/demo4.gif" width="650px" /&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/k8sgpt-ai/k8sgpt/main/#k8sgpt"&gt;Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/k8sgpt-ai/k8sgpt/main/#cli-installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/k8sgpt-ai/k8sgpt/main/#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/k8sgpt-ai/k8sgpt/main/#analyzers"&gt;Analyzers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/k8sgpt-ai/k8sgpt/main/#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/k8sgpt-ai/k8sgpt/main/#llm-ai-backends"&gt;LLM AI Backends&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/k8sgpt-ai/k8sgpt/main/#key-features"&gt;Key Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/k8sgpt-ai/k8sgpt/main/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/k8sgpt-ai/k8sgpt/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/k8sgpt-ai/k8sgpt/main/#community"&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/k8sgpt-ai/k8sgpt/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;CLI Installation&lt;/h1&gt; 
&lt;h3&gt;Linux/Mac via brew&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew install k8sgpt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew tap k8sgpt-ai/k8sgpt
brew install k8sgpt
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;RPM-based installation (RedHat/CentOS/Fedora)&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;32 bit:&lt;/strong&gt;&lt;/p&gt; 
 &lt;!--x-release-please-start-version--&gt; 
 &lt;pre&gt;&lt;code&gt;sudo rpm -ivh https://github.com/k8sgpt-ai/k8sgpt/releases/download/v0.4.23/k8sgpt_386.rpm
&lt;/code&gt;&lt;/pre&gt; 
 &lt;!--x-release-please-end--&gt; 
 &lt;p&gt;&lt;strong&gt;64 bit:&lt;/strong&gt;&lt;/p&gt; 
 &lt;!--x-release-please-start-version--&gt; 
 &lt;pre&gt;&lt;code&gt;sudo rpm -ivh https://github.com/k8sgpt-ai/k8sgpt/releases/download/v0.4.23/k8sgpt_amd64.rpm
&lt;/code&gt;&lt;/pre&gt; 
 &lt;!--x-release-please-end--&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;DEB-based installation (Ubuntu/Debian)&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;32 bit:&lt;/strong&gt;&lt;/p&gt; 
 &lt;!--x-release-please-start-version--&gt; 
 &lt;pre&gt;&lt;code&gt;curl -LO https://github.com/k8sgpt-ai/k8sgpt/releases/download/v0.4.23/k8sgpt_386.deb
sudo dpkg -i k8sgpt_386.deb
&lt;/code&gt;&lt;/pre&gt; 
 &lt;!--x-release-please-end--&gt; 
 &lt;p&gt;&lt;strong&gt;64 bit:&lt;/strong&gt;&lt;/p&gt; 
 &lt;!--x-release-please-start-version--&gt; 
 &lt;pre&gt;&lt;code&gt;curl -LO https://github.com/k8sgpt-ai/k8sgpt/releases/download/v0.4.23/k8sgpt_amd64.deb
sudo dpkg -i k8sgpt_amd64.deb
&lt;/code&gt;&lt;/pre&gt; 
 &lt;!--x-release-please-end--&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;APK-based installation (Alpine)&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;32 bit:&lt;/strong&gt;&lt;/p&gt; 
 &lt;!--x-release-please-start-version--&gt; 
 &lt;pre&gt;&lt;code&gt;wget https://github.com/k8sgpt-ai/k8sgpt/releases/download/v0.4.23/k8sgpt_386.apk
apk add --allow-untrusted k8sgpt_386.apk
&lt;/code&gt;&lt;/pre&gt; 
 &lt;!--x-release-please-end--&gt; 
 &lt;p&gt;&lt;strong&gt;64 bit:&lt;/strong&gt;&lt;/p&gt; 
 &lt;!--x-release-please-start-version--&gt; 
 &lt;pre&gt;&lt;code&gt;wget https://github.com/k8sgpt-ai/k8sgpt/releases/download/v0.4.23/k8sgpt_amd64.apk
apk add --allow-untrusted k8sgpt_amd64.apk
&lt;/code&gt;&lt;/pre&gt; 
 &lt;!--x-release-please-end--&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Failing Installation on WSL or Linux (missing gcc)&lt;/summary&gt; When installing Homebrew on WSL or Linux, you may encounter the following error: 
 &lt;pre&gt;&lt;code&gt;==&amp;gt; Installing k8sgpt from k8sgpt-ai/k8sgpt Error: The following formula cannot be installed from a bottle and must be
built from the source. k8sgpt Install Clang or run brew install gcc.
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you install gcc as suggested, the problem will persist. Therefore, you need to install the build-essential package.&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;   sudo apt-get update
   sudo apt-get install build-essential
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download the latest Windows binaries of &lt;strong&gt;k8sgpt&lt;/strong&gt; from the &lt;a href="https://github.com/k8sgpt-ai/k8sgpt/releases"&gt;Release&lt;/a&gt; tab based on your system architecture.&lt;/li&gt; 
 &lt;li&gt;Extract the downloaded package to your desired location. Configure the system &lt;em&gt;PATH&lt;/em&gt; environment variable with the binary location&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Operator Installation&lt;/h2&gt; 
&lt;p&gt;To install within a Kubernetes cluster please use our &lt;code&gt;k8sgpt-operator&lt;/code&gt; with installation instructions available &lt;a href="https://github.com/k8sgpt-ai/k8sgpt-operator"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;This mode of operation is ideal for continuous monitoring of your cluster and can integrate with your existing monitoring such as Prometheus and Alertmanager.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Currently, the default AI provider is OpenAI, you will need to generate an API key from &lt;a href="https://openai.com"&gt;OpenAI&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;You can do this by running &lt;code&gt;k8sgpt generate&lt;/code&gt; to open a browser link to generate it&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;k8sgpt auth add&lt;/code&gt; to set it in k8sgpt. 
  &lt;ul&gt; 
   &lt;li&gt;You can provide the password directly using the &lt;code&gt;--password&lt;/code&gt; flag.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;k8sgpt filters&lt;/code&gt; to manage the active filters used by the analyzer. By default, all filters are executed during analysis.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;k8sgpt analyze&lt;/code&gt; to run a scan.&lt;/li&gt; 
 &lt;li&gt;And use &lt;code&gt;k8sgpt analyze --explain&lt;/code&gt; to get a more detailed explanation of the issues.&lt;/li&gt; 
 &lt;li&gt;You also run &lt;code&gt;k8sgpt analyze --with-doc&lt;/code&gt; (with or without the explain flag) to get the official documentation from Kubernetes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Using with Claude Desktop&lt;/h1&gt; 
&lt;p&gt;K8sGPT can be integrated with Claude Desktop to provide AI-powered Kubernetes cluster analysis. This integration requires K8sGPT v0.4.14 or later.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install K8sGPT v0.4.14 or later:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;brew install k8sgpt
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install Claude Desktop from the official website&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Configure K8sGPT with your preferred AI backend:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;k8sgpt auth
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Start the K8sGPT MCP server:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;k8sgpt serve --mcp
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In Claude Desktop:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Open Settings&lt;/li&gt; 
   &lt;li&gt;Navigate to the Integrations section&lt;/li&gt; 
   &lt;li&gt;Add K8sGPT as a new integration&lt;/li&gt; 
   &lt;li&gt;The MCP server will be automatically detected&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Configure Claude Desktop with the following JSON:&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "k8sgpt": {
      "command": "k8sgpt",
      "args": [
        "serve",
        "--mcp"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Once connected, you can use Claude Desktop to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Analyze your Kubernetes cluster&lt;/li&gt; 
 &lt;li&gt;Get detailed insights about cluster health&lt;/li&gt; 
 &lt;li&gt;Receive recommendations for fixing issues&lt;/li&gt; 
 &lt;li&gt;Query cluster information&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example commands in Claude Desktop:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;"Analyze my Kubernetes cluster"&lt;/li&gt; 
 &lt;li&gt;"What's the health status of my cluster?"&lt;/li&gt; 
 &lt;li&gt;"Show me any issues in the default namespace"&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you encounter connection issues:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Ensure K8sGPT is running with the MCP server enabled&lt;/li&gt; 
 &lt;li&gt;Verify your Kubernetes cluster is accessible&lt;/li&gt; 
 &lt;li&gt;Check that your AI backend is properly configured&lt;/li&gt; 
 &lt;li&gt;Restart both K8sGPT and Claude Desktop&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For more information, visit our &lt;a href="https://docs.k8sgpt.ai"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Analyzers&lt;/h2&gt; 
&lt;p&gt;K8sGPT uses analyzers to triage and diagnose issues in your cluster. It has a set of analyzers that are built in, but you will be able to write your own analyzers.&lt;/p&gt; 
&lt;h3&gt;Built in analyzers&lt;/h3&gt; 
&lt;h4&gt;Enabled by default&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; podAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; pvcAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; rsAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; serviceAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; eventAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; ingressAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; statefulSetAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; deploymentAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; jobAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; cronJobAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; nodeAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; mutatingWebhookAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; validatingWebhookAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; configMapAnalyzer&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Optional&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; hpaAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; pdbAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; networkPolicyAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; gatewayClass&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; gateway&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; httproute&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; logAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; storageAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; securityAnalyzer&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; ClusterCatalog&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; ClusterExtension&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Run a scan with the default analyzers&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;k8sgpt generate
k8sgpt auth add
k8sgpt analyze --explain
k8sgpt analyze --explain --with-doc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Filter on resource&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;k8sgpt analyze --explain --filter=Service
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Filter by namespace&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;k8sgpt analyze --explain --filter=Pod --namespace=default
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Output to JSON&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;k8sgpt analyze --explain --filter=Service --output=json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Anonymize during explain&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;k8sgpt analyze --explain --filter=Service --output=json --anonymize
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; Using filters &lt;/summary&gt; 
 &lt;p&gt;&lt;em&gt;List filters&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt filters list
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;Add default filters&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt filters add [filter(s)]
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Examples :&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Simple filter : &lt;code&gt;k8sgpt filters add Service&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Multiple filters : &lt;code&gt;k8sgpt filters add Ingress,Pod&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;em&gt;Remove default filters&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt filters remove [filter(s)]
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Examples :&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Simple filter : &lt;code&gt;k8sgpt filters remove Service&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Multiple filters : &lt;code&gt;k8sgpt filters remove Ingress,Pod&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; Additional commands &lt;/summary&gt; 
 &lt;p&gt;&lt;em&gt;List configured backends&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt auth list
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;Update configured backends&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt auth update $MY_BACKEND1,$MY_BACKEND2..
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;Remove configured backends&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt auth remove -b $MY_BACKEND1,$MY_BACKEND2..
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;List integrations&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt integrations list
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;Activate integrations&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt integrations activate [integration(s)]
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;Use integration&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt analyze --filter=[integration(s)]
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;Deactivate integrations&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt integrations deactivate [integration(s)]
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;Serve mode&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt serve
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;Analysis with serve mode&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;grpcurl -plaintext -d '{"namespace": "k8sgpt", "explain" : "true"}' localhost:8080 schema.v1.ServerAnalyzerService/Analyze
{
  "status": "OK"
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;Analysis with custom headers&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt analyze --explain --custom-headers CustomHeaderKey:CustomHeaderValue
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;Print analysis stats&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt analyze -s
The stats mode allows for debugging and understanding the time taken by an analysis by displaying the statistics of each analyzer.
- Analyzer Ingress took 47.125583ms
- Analyzer PersistentVolumeClaim took 53.009167ms
- Analyzer CronJob took 57.517792ms
- Analyzer Deployment took 156.6205ms
- Analyzer Node took 160.109833ms
- Analyzer ReplicaSet took 245.938333ms
- Analyzer StatefulSet took 448.0455ms
- Analyzer Pod took 5.662594708s
- Analyzer Service took 38.583359166s
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;Diagnostic information&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;To collect diagnostic information use the following command to create a &lt;code&gt;dump_&amp;lt;timestamp&amp;gt;_json&lt;/code&gt; in your local directory.&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt dump
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;LLM AI Backends&lt;/h2&gt; 
&lt;p&gt;K8sGPT uses the chosen LLM, generative AI provider when you want to explain the analysis results using --explain flag e.g. &lt;code&gt;k8sgpt analyze --explain&lt;/code&gt;. You can use &lt;code&gt;--backend&lt;/code&gt; flag to specify a configured provider (it's &lt;code&gt;openai&lt;/code&gt; by default).&lt;/p&gt; 
&lt;p&gt;You can list available providers using &lt;code&gt;k8sgpt auth list&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Default:
&amp;gt; openai
Active:
Unused:
&amp;gt; openai
&amp;gt; localai
&amp;gt; ollama
&amp;gt; azureopenai
&amp;gt; cohere
&amp;gt; amazonbedrock
&amp;gt; amazonsagemaker
&amp;gt; google
&amp;gt; huggingface
&amp;gt; noopai
&amp;gt; googlevertexai
&amp;gt; watsonxai
&amp;gt; customrest
&amp;gt; ibmwatsonxai
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For detailed documentation on how to configure and use each provider see &lt;a href="https://docs.k8sgpt.ai/reference/providers/backend/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;To set a new default provider&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;k8sgpt auth default -p azureopenai
Default provider set to azureopenai
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Using Amazon Bedrock with inference profiles&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;System Inference Profile&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;k8sgpt auth add --backend amazonbedrock --providerRegion us-east-1 --model arn:aws:bedrock:us-east-1:123456789012:inference-profile/my-inference-profile

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Application Inference Profile&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;k8sgpt auth add --backend amazonbedrock --providerRegion us-east-1 --model arn:aws:bedrock:us-east-1:123456789012:application-inference-profile/2uzp4s0w39t6

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;details&gt; 
 &lt;p&gt;With this option, the data is anonymized before being sent to the AI Backend. During the analysis execution, &lt;code&gt;k8sgpt&lt;/code&gt; retrieves sensitive data (Kubernetes object names, labels, etc.). This data is masked when sent to the AI backend and replaced by a key that can be used to de-anonymize the data when the solution is returned to the user.&lt;/p&gt; 
 &lt;summary&gt; Anonymization &lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Error reported during analysis:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;Error: HorizontalPodAutoscaler uses StatefulSet/fake-deployment as ScaleTargetRef which does not exist.
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="2"&gt; 
  &lt;li&gt;Payload sent to the AI backend:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;Error: HorizontalPodAutoscaler uses StatefulSet/tGLcCRcHa1Ce5Rs as ScaleTargetRef which does not exist.
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="3"&gt; 
  &lt;li&gt;Payload returned by the AI:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;The Kubernetes system is trying to scale a StatefulSet named tGLcCRcHa1Ce5Rs using the HorizontalPodAutoscaler, but it cannot find the StatefulSet. The solution is to verify that the StatefulSet name is spelled correctly and exists in the same namespace as the HorizontalPodAutoscaler.
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="4"&gt; 
  &lt;li&gt;Payload returned to the user:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;The Kubernetes system is trying to scale a StatefulSet named fake-deployment using the HorizontalPodAutoscaler, but it cannot find the StatefulSet. The solution is to verify that the StatefulSet name is spelled correctly and exists in the same namespace as the HorizontalPodAutoscaler.
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Further Details&lt;/h3&gt; 
 &lt;p&gt;Note: &lt;strong&gt;Anonymization does not currently apply to events.&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;In a few analysers like Pod, we feed to the AI backend the event messages which are not known beforehand thus we are not masking them for the &lt;strong&gt;time being&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;The following is the list of analysers in which data is &lt;strong&gt;being masked&lt;/strong&gt;:-&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Statefulset&lt;/li&gt; 
    &lt;li&gt;Service&lt;/li&gt; 
    &lt;li&gt;PodDisruptionBudget&lt;/li&gt; 
    &lt;li&gt;Node&lt;/li&gt; 
    &lt;li&gt;NetworkPolicy&lt;/li&gt; 
    &lt;li&gt;Ingress&lt;/li&gt; 
    &lt;li&gt;HPA&lt;/li&gt; 
    &lt;li&gt;Deployment&lt;/li&gt; 
    &lt;li&gt;Cronjob&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;The following is the list of analysers in which data is &lt;strong&gt;not being masked&lt;/strong&gt;:-&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;ReplicaSet&lt;/li&gt; 
    &lt;li&gt;PersistentVolumeClaim&lt;/li&gt; 
    &lt;li&gt;Pod&lt;/li&gt; 
    &lt;li&gt;Log&lt;/li&gt; 
    &lt;li&gt;&lt;strong&gt;&lt;em&gt;*Events&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;*Note&lt;/strong&gt;:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;k8gpt will not mask the above analysers because they do not send any identifying information except &lt;strong&gt;Events&lt;/strong&gt; analyser.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Masking for &lt;strong&gt;Events&lt;/strong&gt; analyzer is scheduled in the near future as seen in this &lt;a href="https://github.com/k8sgpt-ai/k8sgpt/issues/560"&gt;issue&lt;/a&gt;. &lt;em&gt;Further research has to be made to understand the patterns and be able to mask the sensitive parts of an event like pod name, namespace etc.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;The following is the list of fields which are not &lt;strong&gt;being masked&lt;/strong&gt;:-&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Describe&lt;/li&gt; 
    &lt;li&gt;ObjectStatus&lt;/li&gt; 
    &lt;li&gt;Replicas&lt;/li&gt; 
    &lt;li&gt;ContainerStatus&lt;/li&gt; 
    &lt;li&gt;&lt;strong&gt;&lt;em&gt;*Event Message&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
    &lt;li&gt;ReplicaStatus&lt;/li&gt; 
    &lt;li&gt;Count (Pod)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;*Note&lt;/strong&gt;:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;It is quite possible the payload of the event message might have something like "super-secret-project-pod-X crashed" which we don't currently redact &lt;em&gt;(scheduled in the near future as seen in this &lt;a href="https://github.com/k8sgpt-ai/k8sgpt/issues/560"&gt;issue&lt;/a&gt;)&lt;/em&gt;.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Proceed with care&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The K8gpt team recommends using an entirely different backend &lt;strong&gt;(a local model) in critical production environments&lt;/strong&gt;. By using a local model, you can rest assured that everything stays within your DMZ, and nothing is leaked.&lt;/li&gt; 
  &lt;li&gt;If there is any uncertainty about the possibility of sending data to a public LLM (open AI, Azure AI) and it poses a risk to business-critical operations, then, in such cases, the use of public LLM should be avoided based on personal assessment and the jurisdiction of risks involved.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; Configuration management&lt;/summary&gt; 
 &lt;p&gt;&lt;code&gt;k8sgpt&lt;/code&gt; stores config data in the &lt;code&gt;$XDG_CONFIG_HOME/k8sgpt/k8sgpt.yaml&lt;/code&gt; file. The data is stored in plain text, including your OpenAI key.&lt;/p&gt; 
 &lt;p&gt;Config file locations:&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;OS&lt;/th&gt; 
    &lt;th&gt;Path&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;MacOS&lt;/td&gt; 
    &lt;td&gt;~/Library/Application Support/k8sgpt/k8sgpt.yaml&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Linux&lt;/td&gt; 
    &lt;td&gt;~/.config/k8sgpt/k8sgpt.yaml&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Windows&lt;/td&gt; 
    &lt;td&gt;%LOCALAPPDATA%/k8sgpt/k8sgpt.yaml&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;details&gt;
  There may be scenarios where caching remotely is preferred. In these scenarios K8sGPT supports AWS S3 or Azure Blob storage Integration. 
 &lt;summary&gt; Remote caching &lt;/summary&gt; 
 &lt;em&gt;Note: You can configure and use only one remote cache at a time&lt;/em&gt; 
 &lt;p&gt;&lt;em&gt;Adding a remote cache&lt;/em&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;AWS S3 
   &lt;ul&gt; 
    &lt;li&gt;&lt;em&gt;As a prerequisite &lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt; and &lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt; are required as environmental variables.&lt;/em&gt;&lt;/li&gt; 
    &lt;li&gt;Configuration, &lt;code&gt;k8sgpt cache add s3 --region &amp;lt;aws region&amp;gt; --bucket &amp;lt;name&amp;gt;&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;Minio Configuration with HTTP endpoint &lt;code&gt; k8sgpt cache add s3 --bucket &amp;lt;name&amp;gt; --endpoint &amp;lt;http://localhost:9000&amp;gt;&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;Minio Configuration with HTTPs endpoint, skipping TLS verification &lt;code&gt; k8sgpt cache add s3 --bucket &amp;lt;name&amp;gt; --endpoint &amp;lt;https://localhost:9000&amp;gt; --insecure&lt;/code&gt; 
     &lt;ul&gt; 
      &lt;li&gt;K8sGPT will create the bucket if it does not exist&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Azure Storage 
   &lt;ul&gt; 
    &lt;li&gt;We support a number of &lt;a href="https://learn.microsoft.com/en-us/azure/developer/go/azure-sdk-authentication?tabs=bash#2-authenticate-with-azure"&gt;techniques&lt;/a&gt; to authenticate against Azure&lt;/li&gt; 
    &lt;li&gt;Configuration, &lt;code&gt;k8sgpt cache add azure --storageacc &amp;lt;storage account name&amp;gt; --container &amp;lt;container name&amp;gt;&lt;/code&gt; 
     &lt;ul&gt; 
      &lt;li&gt;K8sGPT assumes that the storage account already exist and it will create the container if it does not exist&lt;/li&gt; 
      &lt;li&gt;It is the &lt;strong&gt;user&lt;/strong&gt; responsibility have to grant specific permissions to their identity in order to be able to upload blob files and create SA containers (e.g Storage Blob Data Contributor)&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Google Cloud Storage 
   &lt;ul&gt; 
    &lt;li&gt;&lt;em&gt;As a prerequisite &lt;code&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/code&gt; are required as environmental variables.&lt;/em&gt;&lt;/li&gt; 
    &lt;li&gt;Configuration, &lt;code&gt; k8sgpt cache add gcs --region &amp;lt;gcp region&amp;gt; --bucket &amp;lt;name&amp;gt; --projectid &amp;lt;project id&amp;gt;&lt;/code&gt; 
     &lt;ul&gt; 
      &lt;li&gt;K8sGPT will create the bucket if it does not exist&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;em&gt;Listing cache items&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt cache list
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;Purging an object from the cache&lt;/em&gt; Note: purging an object using this command will delete upstream files, so it requires appropriate permissions.&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt cache purge $OBJECT_NAME
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;Removing the remote cache&lt;/em&gt; Note: this will not delete the upstream S3 bucket or Azure storage container&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt cache remove
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; Custom Analyzers&lt;/summary&gt; 
 &lt;p&gt;There may be scenarios where you wish to write your own analyzer in a language of your choice. K8sGPT now supports the ability to do so by abiding by the &lt;a href="https://github.com/k8sgpt-ai/schemas/raw/main/protobuf/schema/v1/custom_analyzer.proto"&gt;schema&lt;/a&gt; and serving the analyzer for consumption. To do so, define the analyzer within the K8sGPT configuration and it will add it into the scanning process. In addition to this you will need to enable the following flag on analysis:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt analyze --custom-analysis
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Here is an example local host analyzer in &lt;a href="https://github.com/k8sgpt-ai/host-analyzer"&gt;Rust&lt;/a&gt; When this is run on &lt;code&gt;localhost:8080&lt;/code&gt; the K8sGPT config can pick it up with the following additions:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;custom_analyzers:
  - name: host-analyzer
    connection:
      url: localhost
      port: 8080
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This now gives the ability to pass through hostOS information ( from this analyzer example ) to K8sGPT to use as context with normal analysis.&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;See the docs on how to write a custom analyzer&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;Listing custom analyzers configured&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt custom-analyzer list
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;Adding custom analyzer without install&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt custom-analyzer add --name my-custom-analyzer --port 8085
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;Removing custom analyzer&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;k8sgpt custom-analyzer remove --names "my-custom-analyzer,my-custom-analyzer-2"
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Find our official documentation available &lt;a href="https://docs.k8sgpt.ai"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read our &lt;a href="https://raw.githubusercontent.com/k8sgpt-ai/k8sgpt/main/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Find us on &lt;a href="https://join.slack.com/t/k8sgpt/shared_invite/zt-332vhyaxv-bfjJwHZLXWVCB3QaXafEYQ"&gt;Slack&lt;/a&gt;&lt;/p&gt; 
&lt;a href="https://github.com/k8sgpt-ai/k8sgpt/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=k8sgpt-ai/k8sgpt" /&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fk8sgpt-ai%2Fk8sgpt?ref=badge_large"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fk8sgpt-ai%2Fk8sgpt.svg?type=large" alt="FOSSA Status" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AdguardTeam/AdGuardHome</title>
      <link>https://github.com/AdguardTeam/AdGuardHome</link>
      <description>&lt;p&gt;Network-wide ads &amp; trackers blocking DNS server&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="doc/adguard_home_darkmode.svg" /&gt; 
  &lt;img alt="AdGuard Home" src="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/doc/adguard_home_lightmode.svg?sanitize=true" width="300px" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt;Privacy protection center for you and your devices&lt;/h3&gt; 
&lt;p align="center"&gt; Free and open source, powerful network-wide ads &amp;amp; trackers blocking DNS server. &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://adguard.com/"&gt;AdGuard.com&lt;/a&gt; | &lt;a href="https://github.com/AdguardTeam/AdGuardHome/wiki"&gt;Wiki&lt;/a&gt; | &lt;a href="https://reddit.com/r/Adguard"&gt;Reddit&lt;/a&gt; | &lt;a href="https://twitter.com/AdGuard"&gt;Twitter&lt;/a&gt; | &lt;a href="https://t.me/adguard_en"&gt;Telegram&lt;/a&gt; &lt;br /&gt;&lt;br /&gt; &lt;a href="https://codecov.io/github/AdguardTeam/AdGuardHome?branch=master"&gt; &lt;img src="https://img.shields.io/codecov/c/github/AdguardTeam/AdGuardHome/master.svg?sanitize=true" alt="Code Coverage" /&gt; &lt;/a&gt; &lt;a href="https://goreportcard.com/report/AdguardTeam/AdGuardHome"&gt; &lt;img src="https://goreportcard.com/badge/github.com/AdguardTeam/AdGuardHome" alt="Go Report Card" /&gt; &lt;/a&gt; &lt;a href="https://hub.docker.com/r/adguard/adguardhome"&gt; &lt;img alt="Docker Pulls" src="https://img.shields.io/docker/pulls/adguard/adguardhome.svg?maxAge=604800" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://github.com/AdguardTeam/AdGuardHome/releases"&gt; &lt;img src="https://img.shields.io/github/release/AdguardTeam/AdGuardHome/all.svg?sanitize=true" alt="Latest release" /&gt; &lt;/a&gt; &lt;a href="https://snapcraft.io/adguard-home"&gt; &lt;img alt="adguard-home" src="https://snapcraft.io/adguard-home/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;img src="https://cdn.adtidy.org/public/Adguard/Common/adguard_home.gif" width="800" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;AdGuard Home is a network-wide software for blocking ads and tracking. After you set it up, it'll cover ALL your home devices, and you don't need any client-side software for that.&lt;/p&gt; 
&lt;p&gt;It operates as a DNS server that re-routes tracking domains to a ‚Äúblack hole‚Äù, thus preventing your devices from connecting to those servers. It's based on software we use for our public &lt;a href="https://adguard-dns.io/"&gt;AdGuard DNS&lt;/a&gt; servers, and both share a lot of code.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#getting-started"&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#automated-install-linux-and-mac"&gt;Automated install (Linux/Unix/MacOS/FreeBSD/OpenBSD)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#alternative-methods"&gt;Alternative methods&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#guides"&gt;Guides&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#api"&gt;API&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison"&gt;Comparing AdGuard Home to other solutions&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-adguard-dns"&gt;How is this different from public AdGuard DNS servers?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-pi-hole"&gt;How does AdGuard Home compare to Pi-Hole&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-adblock"&gt;How does AdGuard Home compare to traditional ad blockers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-limitations"&gt;Known limitations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#how-to-build"&gt;How to build from source&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#building"&gt;Building&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#contributing"&gt;Contributing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#test-unstable-versions"&gt;Test unstable versions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#reporting-issues"&gt;Reporting issues&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#translate"&gt;Help with translations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#help-other"&gt;Other&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#uses"&gt;Projects that use AdGuard Home&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#acknowledgments"&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#privacy"&gt;Privacy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#getting-started" id="getting-started" name="getting-started"&gt;Getting Started&lt;/a&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#automated-install-linux-and-mac" id="automated-install-linux-and-mac" name="automated-install-linux-and-mac"&gt;Automated install (Linux/Unix/MacOS/FreeBSD/OpenBSD)&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;To install with &lt;code&gt;curl&lt;/code&gt; run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl -s -S -L https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install with &lt;code&gt;wget&lt;/code&gt; run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;wget --no-verbose -O - https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install with &lt;code&gt;fetch&lt;/code&gt; run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;fetch -o - https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The script also accepts some options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-c &amp;lt;channel&amp;gt;&lt;/code&gt; to use specified channel;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-r&lt;/code&gt; to reinstall AdGuard Home;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-u&lt;/code&gt; to uninstall AdGuard Home;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-v&lt;/code&gt; for verbose output.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that options &lt;code&gt;-r&lt;/code&gt; and &lt;code&gt;-u&lt;/code&gt; are mutually exclusive.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#alternative-methods" id="alternative-methods" name="alternative-methods"&gt;Alternative methods&lt;/a&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#manual-installation" id="manual-installation" name="manual-installation"&gt;Manual installation&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Please read the &lt;strong&gt;&lt;a href="https://adguard-dns.io/kb/adguard-home/getting-started/"&gt;Getting Started&lt;/a&gt;&lt;/strong&gt; article on our Wiki to learn how to install AdGuard Home manually, and how to configure your devices to use it.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#docker" id="docker" name="docker"&gt;Docker&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;You can use our official Docker image on &lt;a href="https://hub.docker.com/r/adguard/adguardhome"&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#snap-store" id="snap-store" name="snap-store"&gt;Snap Store&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;If you're running &lt;strong&gt;Linux,&lt;/strong&gt; there's a secure and easy way to install AdGuard Home: get it from the &lt;a href="https://snapcraft.io/adguard-home"&gt;Snap Store&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#guides" id="guides" name="guides"&gt;Guides&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;See our &lt;a href="https://github.com/AdguardTeam/AdGuardHome/wiki"&gt;Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#api" id="api" name="api"&gt;API&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;If you want to integrate with AdGuard Home, you can use our &lt;a href="https://github.com/AdguardTeam/AdGuardHome/tree/master/openapi"&gt;REST API&lt;/a&gt;. Alternatively, you can use this &lt;a href="https://pypi.org/project/adguardhome/"&gt;python client&lt;/a&gt;, which is used to build the &lt;a href="https://www.home-assistant.io/integrations/adguard/"&gt;AdGuard Home Hass.io Add-on&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison" id="comparison" name="comparison"&gt;Comparing AdGuard Home to other solutions&lt;/a&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-adguard-dns" id="comparison-adguard-dns" name="comparison-adguard-dns"&gt;How is this different from public AdGuard DNS servers?&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Running your own AdGuard Home server allows you to do much more than using a public DNS server. It's a completely different level. See for yourself:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Choose what exactly the server blocks and permits.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Monitor your network activity.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Add your own custom filtering rules.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Most importantly, it's your own server, and you are the only one who's in control.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-pi-hole" id="comparison-pi-hole" name="comparison-pi-hole"&gt;How does AdGuard Home compare to Pi-Hole&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;At this point, AdGuard Home has a lot in common with Pi-Hole. Both block ads and trackers using the so-called ‚ÄúDNS sinkholing‚Äù method and both allow customizing what's blocked.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] We're not going to stop here. DNS sinkholing is not a bad starting point, but this is just the beginning.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;AdGuard Home provides a lot of features out-of-the-box with no need to install and configure additional software. We want it to be simple to the point when even casual users can set it up with minimal effort.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Some of the listed features can be added to Pi-Hole by installing additional software or by manually using SSH terminal and reconfiguring one of the utilities Pi-Hole consists of. However, in our opinion, this cannot be legitimately counted as a Pi-Hole's feature.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;AdGuard&amp;nbsp;Home&lt;/th&gt; 
   &lt;th&gt;Pi-Hole&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Blocking ads and trackers&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Customizing blocklists&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Built-in DHCP server&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;HTTPS for the Admin interface&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;Kind of, but you'll need to manually configure lighttpd&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Encrypted DNS upstream servers (DNS-over-HTTPS, DNS-over-TLS, DNSCrypt)&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå (requires additional software)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Cross-platform&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå (not natively, only via Docker)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Running as a DNS-over-HTTPS or DNS-over-TLS server&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå (requires additional software)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Blocking phishing and malware domains&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå (requires non-default blocklists)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Parental control (blocking adult domains)&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå (requires non-default blocklists)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Force Safe search on search engines&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Per-client (device) configuration&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Access settings (choose who can use AGH DNS)&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Running &lt;a href="https://adguard-dns.io/kb/adguard-home/getting-started/#running-without-superuser"&gt;without root privileges&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-adblock" id="comparison-adblock" name="comparison-adblock"&gt;How does AdGuard Home compare to traditional ad blockers&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;It depends.&lt;/p&gt; 
&lt;p&gt;DNS sinkholing is capable of blocking a big percentage of ads, but it lacks the flexibility and the power of traditional ad blockers. You can get a good impression about the difference between these methods by reading &lt;a href="https://adguard.com/blog/adguard-vs-adaway-dns66.html"&gt;this article&lt;/a&gt;, which compares AdGuard for Android (a traditional ad blocker) to hosts-level ad blockers (which are almost identical to DNS-based blockers in their capabilities). This level of protection is enough for some users.&lt;/p&gt; 
&lt;p&gt;Additionally, using a DNS-based blocker can help to block ads, tracking and analytics requests on other types of devices, such as SmartTVs, smart speakers or other kinds of IoT devices (on which you can't install traditional ad blockers).&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-limitations" id="comparison-limitations" name="comparison-limitations"&gt;Known limitations&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Here are some examples of what cannot be blocked by a DNS-level blocker:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;YouTube, Twitch ads;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Facebook, Twitter, Instagram sponsored posts.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Essentially, any advertising that shares a domain with content cannot be blocked by a DNS-level blocker.&lt;/p&gt; 
&lt;p&gt;Is there a chance to handle this in the future? DNS will never be enough to do this. Our only option is to use a content blocking proxy like what we do in the standalone AdGuard applications. We're &lt;a href="https://github.com/AdguardTeam/AdGuardHome/issues/1228"&gt;going to bring&lt;/a&gt; this feature support to AdGuard Home in the future. Unfortunately, even in this case, there still will be cases when this won't be enough or would require quite a complicated configuration.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#how-to-build" id="how-to-build" name="how-to-build"&gt;How to build from source&lt;/a&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#prerequisites" id="prerequisites" name="prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;make init&lt;/code&gt; to prepare the development environment.&lt;/p&gt; 
&lt;p&gt;You will need this to build AdGuard Home:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/dl/"&gt;Go&lt;/a&gt; v1.24 or later;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt; v20.19 or later;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/"&gt;npm&lt;/a&gt; v10.8 or later;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#building" id="building" name="building"&gt;Building&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Open your terminal and execute these commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/AdguardTeam/AdGuardHome
cd AdGuardHome
make
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] The non-standard &lt;code&gt;-j&lt;/code&gt; flag is currently not supported, so building with &lt;code&gt;make -j 4&lt;/code&gt; or setting your &lt;code&gt;MAKEFLAGS&lt;/code&gt; to include, for example, &lt;code&gt;-j 4&lt;/code&gt; is likely to break the build. If you do have your &lt;code&gt;MAKEFLAGS&lt;/code&gt; set to that, and you don't want to change it, you can override it by running &lt;code&gt;make -j 1&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Check the &lt;a href="https://github.com/AdguardTeam/AdGuardHome/raw/master/Makefile"&gt;&lt;code&gt;Makefile&lt;/code&gt;&lt;/a&gt; to learn about other commands.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#building-cross" id="building-cross" name="building-cross"&gt;Building for a different platform&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;You can build AdGuard Home for any OS/ARCH that Go supports. In order to do this, specify &lt;code&gt;GOOS&lt;/code&gt; and &lt;code&gt;GOARCH&lt;/code&gt; environment variables as macros when running &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;env GOOS='linux' GOARCH='arm64' make
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;make GOOS='linux' GOARCH='arm64'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#preparing-releases" id="preparing-releases" name="preparing-releases"&gt;Preparing releases&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;You'll need &lt;a href="https://snapcraft.io/"&gt;&lt;code&gt;snapcraft&lt;/code&gt;&lt;/a&gt; to prepare a release build. Once installed, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;make build-release CHANNEL='...' VERSION='...'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/AdguardTeam/AdGuardHome/tree/master/scripts#build-releasesh-build-a-release-for-all-platforms"&gt;&lt;code&gt;build-release&lt;/code&gt; target documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#docker-image" id="docker-image" name="docker-image"&gt;Docker image&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Run &lt;code&gt;make build-docker&lt;/code&gt; to build the Docker image locally (the one that we publish to DockerHub). Please note, that we're using &lt;a href="https://docs.docker.com/buildx/working-with-buildx/"&gt;Docker Buildx&lt;/a&gt; to build our official image.&lt;/p&gt; 
&lt;p&gt;You may need to prepare before using these builds:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;(Linux-only) Install Qemu:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker run --rm --privileged multiarch/qemu-user-static --reset -p yes --credential yes
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Prepare the builder:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker buildx create --name buildx-builder --driver docker-container --use
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/AdguardTeam/AdGuardHome/tree/master/scripts#build-dockersh-build-a-multi-architecture-docker-image"&gt;&lt;code&gt;build-docker&lt;/code&gt; target documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#debugging-the-frontend" id="debugging-the-frontend" name="debugging-the-frontend"&gt;Debugging the frontend&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;When you need to debug the frontend without recompiling the production version every time, for example to check how your labels would look on a form, you can run the frontend build a development environment.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;In a separate terminal, run:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;( cd ./client/ &amp;amp;&amp;amp; env NODE_ENV='development' npm run watch )
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run your &lt;code&gt;AdGuardHome&lt;/code&gt; binary with the &lt;code&gt;--local-frontend&lt;/code&gt; flag, which instructs AdGuard Home to ignore the built-in frontend files and use those from the &lt;code&gt;./build/&lt;/code&gt; directory.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Now any changes you make in the &lt;code&gt;./client/&lt;/code&gt; directory should be recompiled and become available on the web UI. Make sure that you disable the browser cache to make sure that you actually get the recompiled version.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#e2e-frontend-tests" id="e2e-frontend-tests" name="e2e-frontend-tests"&gt;End-to-End (E2E) Frontend Tests&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;AdGuard Home uses &lt;a href="https://playwright.dev"&gt;Playwright&lt;/a&gt; for E2E testing. Tests are located in &lt;code&gt;tests/e2e&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Running Tests:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;npm run test:e2e&lt;/code&gt; ‚Äì run all tests (headless).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run test:e2e:interactive&lt;/code&gt; ‚Äì run tests interactively.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run test:e2e:debug&lt;/code&gt; ‚Äì run tests in debug mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run test:e2e:codegen&lt;/code&gt; ‚Äì generate new test code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Setup:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; to install dependencies.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npx playwright install&lt;/code&gt; to set up required browsers.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; Playwright will download and install its own browser binaries for testing, which may differ from the browsers installed on your system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#contributing" id="contributing" name="contributing"&gt;Contributing&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;You are welcome to fork this repository, make your changes and &lt;a href="https://github.com/AdguardTeam/AdGuardHome/pulls"&gt;submit a pull request&lt;/a&gt;. Please make sure you follow our &lt;a href="https://github.com/AdguardTeam/CodeGuidelines/"&gt;code guidelines&lt;/a&gt; though.&lt;/p&gt; 
&lt;p&gt;Please note that we don't expect people to contribute to both UI and backend parts of the program simultaneously. Ideally, the backend part is implemented first, i.e. configuration, API, and the functionality itself. The UI part can be implemented later in a different pull request by a different person.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#test-unstable-versions" id="test-unstable-versions" name="test-unstable-versions"&gt;Test unstable versions&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;There are two update channels that you can use:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;beta&lt;/code&gt;: beta versions of AdGuard Home. More or less stable versions, usually released every two weeks or more often.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;edge&lt;/code&gt;: the newest version of AdGuard Home from the development branch. New updates are pushed to this channel daily.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are three options how you can install an unstable version:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://snapcraft.io/adguard-home"&gt;Snap Store&lt;/a&gt;: look for the &lt;code&gt;beta&lt;/code&gt; and &lt;code&gt;edge&lt;/code&gt; channels.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://hub.docker.com/r/adguard/adguardhome"&gt;Docker Hub&lt;/a&gt;: look for the &lt;code&gt;beta&lt;/code&gt; and &lt;code&gt;edge&lt;/code&gt; tags.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Standalone builds. Use the automated installation script or look for the available builds &lt;a href="https://github.com/AdguardTeam/AdGuardHome/wiki/Platforms"&gt;on the Wiki&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Script to install a beta version:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;curl -s -S -L https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -c beta
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Script to install an edge version:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;curl -s -S -L https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -c edge
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#reporting-issues" id="reporting-issues" name="reporting-issues"&gt;Report issues&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;If you run into any problem or have a suggestion, head to &lt;a href="https://github.com/AdguardTeam/AdGuardHome/issues"&gt;this page&lt;/a&gt; and click on the ‚ÄúNew issue‚Äù button. Please follow the instructions in the issue form carefully and don't forget to start by searching for duplicates.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#translate" id="translate" name="translate"&gt;Help with translations&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;If you want to help with AdGuard Home translations, please learn more about translating AdGuard products &lt;a href="https://kb.adguard.com/en/general/adguard-translations"&gt;in our Knowledge Base&lt;/a&gt;. You can contribute to the &lt;a href="https://crowdin.com/project/adguard-applications/en#/adguard-home"&gt;AdGuardHome project on CrowdIn&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#help-other" id="help-other" name="help-other"&gt;Other&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Another way you can contribute is by &lt;a href="https://github.com/AdguardTeam/AdGuardHome/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22"&gt;looking for issues&lt;/a&gt; marked as &lt;code&gt;help wanted&lt;/code&gt;, asking if the issue is up for grabs, and sending a PR fixing the bug or implementing the feature.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#uses" id="uses" name="uses"&gt;Projects that use AdGuard Home&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Please note that these projects are not affiliated with AdGuard, but are made by third-party developers and fans.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://apps.apple.com/app/apple-store/id1543143740"&gt;AdGuard Home Remote&lt;/a&gt;: iOS app by &lt;a href="https://rocketscience-it.nl/"&gt;Joost&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/frenck/python-adguardhome"&gt;Python library&lt;/a&gt; by &lt;a href="https://github.com/frenck"&gt;@frenck&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/hassio-addons/addon-adguard-home"&gt;Home Assistant add-on&lt;/a&gt; by &lt;a href="https://github.com/frenck"&gt;@frenck&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/kongfl888/luci-app-adguardhome"&gt;OpenWrt LUCI app&lt;/a&gt; by &lt;a href="https://github.com/kongfl888"&gt;@kongfl888&lt;/a&gt; (originally by &lt;a href="https://github.com/rufengsuixing"&gt;@rufengsuixing&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/bakito/adguardhome-sync"&gt;AdGuardHome sync&lt;/a&gt; by &lt;a href="https://github.com/bakito"&gt;@bakito&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/Lissy93/AdGuardian-Term"&gt;Terminal-based, real-time traffic monitoring and statistics for your AdGuard Home instance&lt;/a&gt; by &lt;a href="https://github.com/Lissy93"&gt;@Lissy93&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://forum.gl-inet.com/t/adguardhome-on-gl-routers/10664"&gt;AdGuard Home on GLInet routers&lt;/a&gt; by &lt;a href="https://gl-inet.com/"&gt;Gl-Inet&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://git.cloudron.io/cloudron/adguard-home-app"&gt;Cloudron app&lt;/a&gt; by &lt;a href="https://github.com/gramakri"&gt;@gramakri&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/jumpsmm7/Asuswrt-Merlin-AdGuardHome-Installer"&gt;Asuswrt-Merlin-AdGuardHome-Installer&lt;/a&gt; by &lt;a href="https://github.com/jumpsmm7"&gt;@jumpsmm7&lt;/a&gt; aka &lt;a href="https://www.snbforums.com/members/somewhereovertherainbow.64179/"&gt;@SomeWhereOverTheRainBow&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/Andrea055/AdguardHomeAPI"&gt;Node.js library&lt;/a&gt; by &lt;a href="https://github.com/Andrea055/"&gt;@Andrea055&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/satheshshiva/Adguard-Home-Browser-Ext"&gt;Browser Extension&lt;/a&gt; by &lt;a href="https://github.com/satheshshiva/"&gt;@satheshshiva&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/diasdmhub/AdGuard_Home_Zabbix_Template"&gt;Zabbix Template for AdGuard Home&lt;/a&gt; by &lt;a href="https://github.com/diasdmhub"&gt;@diasdmhub&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://community.chocolatey.org/packages/adguardhome/"&gt;Chocolatey package&lt;/a&gt; by &lt;a href="https://community.chocolatey.org/profiles/niks255"&gt;niks255&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#acknowledgments" id="acknowledgments" name="acknowledgments"&gt;Acknowledgments&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;This software wouldn't have been possible without:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/dl/"&gt;Go&lt;/a&gt; and its libraries: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bluele/gcache"&gt;gcache&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/miekg/dns"&gt;miekg's dns&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/go-yaml/yaml"&gt;go-yaml&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://godoc.org/github.com/kardianos/service"&gt;service&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AdguardTeam/dnsproxy"&gt;dnsproxy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AdguardTeam/urlfilter"&gt;urlfilter&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; and its libraries: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://reactjs.org"&gt;React.js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tabler/tabler"&gt;Tabler&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;And many more Node.js packages.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cliqz-oss/whotracks.me"&gt;whotracks.me data&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You might have seen that &lt;a href="https://coredns.io"&gt;CoreDNS&lt;/a&gt; was mentioned here before, but we've stopped using it in AdGuard Home.&lt;/p&gt; 
&lt;p&gt;For the full list of all Node.js packages in use, please take a look at &lt;a href="https://github.com/AdguardTeam/AdGuardHome/raw/master/client/package.json"&gt;&lt;code&gt;client/package.json&lt;/code&gt;&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#privacy" id="privacy" name="privacy"&gt;Privacy&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Our main idea is that you are the one, who should be in control of your data. So it is only natural, that AdGuard Home does not collect any usage statistics, and does not use any web services unless you configure it to do so. See also the &lt;a href="https://adguard.com/en/privacy/home.html"&gt;full privacy policy&lt;/a&gt; with every bit that &lt;em&gt;could in theory be sent&lt;/em&gt; by AdGuard Home is available.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sundowndev/phoneinfoga</title>
      <link>https://github.com/sundowndev/phoneinfoga</link>
      <description>&lt;p&gt;Information gathering framework for phone numbers&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/sundowndev/phoneinfoga/master/docs/images/banner.png" width="500" alt="project logo" /&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/sundowndev/phoneinfoga/actions"&gt; &lt;img src="https://github.com/sundowndev/phoneinfoga/workflows/Build/badge.svg?sanitize=true" alt="build status" /&gt; &lt;/a&gt; 
 &lt;a href="https://goreportcard.com/report/github.com/sundowndev/phoneinfoga/v2"&gt; &lt;img src="https://goreportcard.com/badge/github.com/sundowndev/phoneinfoga/v2" alt="go report" /&gt; &lt;/a&gt; 
 &lt;a href="https://codeclimate.com/github/sundowndev/phoneinfoga/maintainability"&gt; &lt;img src="https://api.codeclimate.com/v1/badges/3259feb1c68df1cd4f71/maintainability" alt="code climate badge" /&gt; &lt;/a&gt; 
 &lt;a href="https://coveralls.io/github/sundowndev/phoneinfoga"&gt; &lt;img src="https://coveralls.io/repos/github/sundowndev/phoneinfoga/badge.svg?sanitize=true" alt="Coverage Status" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/sundowndev/phoneinfoga/releases"&gt; &lt;img src="https://img.shields.io/github/release/SundownDEV/phoneinfoga.svg?sanitize=true" alt="Latest version" /&gt; &lt;/a&gt; 
 &lt;a href="https://hub.docker.com/r/sundowndev/phoneinfoga"&gt; &lt;img src="https://img.shields.io/docker/pulls/sundowndev/phoneinfoga.svg?sanitize=true" alt="Docker pulls" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h4 align="center"&gt;Information gathering framework for phone numbers&lt;/h4&gt; 
&lt;p align="center"&gt; &lt;a href="https://sundowndev.github.io/phoneinfoga/"&gt;Documentation&lt;/a&gt; ‚Ä¢ &lt;a href="https://petstore.swagger.io/?url=https://raw.githubusercontent.com/sundowndev/phoneinfoga/master/web/docs/swagger.yaml"&gt;API documentation&lt;/a&gt; ‚Ä¢ &lt;a href="https://medium.com/@SundownDEV/phone-number-scanning-osint-recon-tool-6ad8f0cac27b"&gt;Related blog post&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;PhoneInfoga is one of the most advanced tools to scan international phone numbers. It allows you to first gather basic information such as country, area, carrier and line type, then use various techniques to try to find the VoIP provider or identify the owner. It works with a collection of scanners that must be configured in order for the tool to be effective. PhoneInfoga doesn't automate everything, it's just there to help investigating on phone numbers.&lt;/p&gt; 
&lt;h2&gt;Current status&lt;/h2&gt; 
&lt;p&gt;This project is stable and production-ready.&lt;/p&gt; 
&lt;h4&gt;Demo instance termination&lt;/h4&gt; 
&lt;p&gt;The demo instance has been terminated on December 21th, 2023. It's been expensive to maintain this instance throughout the years given the number of requests it received (~20K/month), without bringing much value to users compared to using it locally. Use it locally with your own API keys for a better experience.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check if phone number exists&lt;/li&gt; 
 &lt;li&gt;Gather basic information such as country, line type and carrier&lt;/li&gt; 
 &lt;li&gt;OSINT footprinting using external APIs, phone books &amp;amp; search engines&lt;/li&gt; 
 &lt;li&gt;Check for reputation reports, social media, disposable numbers and more&lt;/li&gt; 
 &lt;li&gt;Use the graphical user interface to run scans from the browser&lt;/li&gt; 
 &lt;li&gt;Programmatic usage with the &lt;a href="https://petstore.swagger.io/?url=https://raw.githubusercontent.com/sundowndev/phoneinfoga/master/web/docs/swagger.yaml"&gt;REST API&lt;/a&gt; and &lt;a href="https://pkg.go.dev/github.com/sundowndev/phoneinfoga/v2"&gt;Go modules&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Anti-features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Does not claim to provide relevant or verified data, it's just a tool !&lt;/li&gt; 
 &lt;li&gt;Does not allow to "track" a phone or its owner in real time&lt;/li&gt; 
 &lt;li&gt;Does not allow to get the precise phone location&lt;/li&gt; 
 &lt;li&gt;Does not allow to hack a phone&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fsundowndev%2FPhoneInfoga?ref=badge_shield"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fsundowndev%2FPhoneInfoga.svg?type=shield" alt="FOSSA Status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This tool is licensed under the GNU General Public License v3.0.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.flaticon.com/free-icon/fingerprint-search-symbol-of-secret-service-investigation_48838"&gt;Icon&lt;/a&gt; made by &lt;a href="https://www.freepik.com/" title="Freepik"&gt;Freepik&lt;/a&gt; from &lt;a href="https://www.flaticon.com/" title="Flaticon"&gt;flaticon.com&lt;/a&gt; is licensed by &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0" target="_blank"&gt;CC 3.0 BY&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Support me by signing up to DigitalOcean using my link ($200 free credits)&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.digitalocean.com/?refcode=31f5ef768eb3&amp;amp;utm_campaign=Referral_Invite&amp;amp;utm_medium=Referral_Program&amp;amp;utm_source=badge"&gt;&lt;img src="https://web-platforms.sfo2.cdn.digitaloceanspaces.com/WWW/Badge%203.svg?sanitize=true" alt="DigitalOcean Referral Badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://github.com/sundowndev/static/raw/main/sponsors.svg?v=c68eba9" width="100%" heigh="auto" /&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>glanceapp/glance</title>
      <link>https://github.com/glanceapp/glance</link>
      <description>&lt;p&gt;A self-hosted dashboard that puts all your feeds in one place&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt;&lt;em&gt;What if you could see everything at a...&lt;/em&gt;&lt;/p&gt; 
&lt;h1 align="center"&gt;Glance&lt;/h1&gt; 
&lt;p align="center"&gt;&lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/#installation"&gt;Install&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/configuration.md#configuring-glance"&gt;Configuration&lt;/a&gt; ‚Ä¢ &lt;a href="https://discord.com/invite/7KQ7Xa9kJd"&gt;Discord&lt;/a&gt; ‚Ä¢ &lt;a href="https://github.com/sponsors/glanceapp"&gt;Sponsor&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt;&lt;a href="https://github.com/glanceapp/community-widgets"&gt;Community widgets&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/preconfigured-pages.md"&gt;Preconfigured pages&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/themes.md"&gt;Themes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/glanceapp/glance/main/docs/images/readme-main-image.png" alt="" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Various widgets&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;RSS feeds&lt;/li&gt; 
 &lt;li&gt;Subreddit posts&lt;/li&gt; 
 &lt;li&gt;Hacker News posts&lt;/li&gt; 
 &lt;li&gt;Weather forecasts&lt;/li&gt; 
 &lt;li&gt;YouTube channel uploads&lt;/li&gt; 
 &lt;li&gt;Twitch channels&lt;/li&gt; 
 &lt;li&gt;Market prices&lt;/li&gt; 
 &lt;li&gt;Docker containers status&lt;/li&gt; 
 &lt;li&gt;Server stats&lt;/li&gt; 
 &lt;li&gt;Custom widgets&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/configuration.md#configuring-glance"&gt;and many more...&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Fast and lightweight&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Low memory usage&lt;/li&gt; 
 &lt;li&gt;Few dependencies&lt;/li&gt; 
 &lt;li&gt;Minimal vanilla JS&lt;/li&gt; 
 &lt;li&gt;Single &amp;lt;20mb binary available for multiple OSs &amp;amp; architectures and just as small Docker container&lt;/li&gt; 
 &lt;li&gt;Uncached pages usually load within ~1s (depending on internet speed and number of widgets)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Tons of customizability&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Different layouts&lt;/li&gt; 
 &lt;li&gt;As many pages/tabs as you need&lt;/li&gt; 
 &lt;li&gt;Numerous configuration options for each widget&lt;/li&gt; 
 &lt;li&gt;Multiple styles for some widgets&lt;/li&gt; 
 &lt;li&gt;Custom CSS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Optimized for mobile devices&lt;/h3&gt; 
&lt;p&gt;Because you'll want to take it with you on the go.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/glanceapp/glance/main/docs/images/mobile-preview.png" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Themeable&lt;/h3&gt; 
&lt;p&gt;Easily create your own theme by tweaking a few numbers or choose from one of the &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/themes.md"&gt;already available themes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/glanceapp/glance/main/docs/images/themes-example.png" alt="" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Configuration is done through YAML files, to learn more about how the layout works, how to add more pages and how to configure widgets, visit the &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/configuration.md#configuring-glance"&gt;configuration documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Preview example configuration file&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;pages:
  - name: Home
    columns:
      - size: small
        widgets:
          - type: calendar
            first-day-of-week: monday

          - type: rss
            limit: 10
            collapse-after: 3
            cache: 12h
            feeds:
              - url: https://selfh.st/rss/
                title: selfh.st
                limit: 4
              - url: https://ciechanow.ski/atom.xml
              - url: https://www.joshwcomeau.com/rss.xml
                title: Josh Comeau
              - url: https://samwho.dev/rss.xml
              - url: https://ishadeed.com/feed.xml
                title: Ahmad Shadeed

          - type: twitch-channels
            channels:
              - theprimeagen
              - j_blow
              - piratesoftware
              - cohhcarnage
              - christitustech
              - EJ_SA

      - size: full
        widgets:
          - type: group
            widgets:
              - type: hacker-news
              - type: lobsters

          - type: videos
            channels:
              - UCXuqSBlHAE6Xw-yeJA0Tunw # Linus Tech Tips
              - UCR-DXc1voovS8nhAvccRZhg # Jeff Geerling
              - UCsBjURrPoezykLs9EqgamOA # Fireship
              - UCBJycsmduvYEL83R_U4JriQ # Marques Brownlee
              - UCHnyfMqiRRG1u-2MsSQLbXA # Veritasium

          - type: group
            widgets:
              - type: reddit
                subreddit: technology
                show-thumbnails: true
              - type: reddit
                subreddit: selfhosted
                show-thumbnails: true

      - size: small
        widgets:
          - type: weather
            location: London, United Kingdom
            units: metric
            hour-format: 12h

          - type: markets
            markets:
              - symbol: SPY
                name: S&amp;amp;P 500
              - symbol: BTC-USD
                name: Bitcoin
              - symbol: NVDA
                name: NVIDIA
              - symbol: AAPL
                name: Apple
              - symbol: MSFT
                name: Microsoft

          - type: releases
            cache: 1d
            repositories:
              - glanceapp/glance
              - go-gitea/gitea
              - immich-app/immich
              - syncthing/syncthing
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br /&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Choose one of the following methods:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Docker compose using provided directory structure (recommended)&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;Create a new directory called &lt;code&gt;glance&lt;/code&gt; as well as the template files within it by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;mkdir glance &amp;amp;&amp;amp; cd glance &amp;amp;&amp;amp; curl -sL https://github.com/glanceapp/docker-compose-template/archive/refs/heads/main.tar.gz | tar -xzf - --strip-components 2
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/glanceapp/docker-compose-template/tree/main/root"&gt;click here to view the files that will be created&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;Then, edit the following files as desired:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt; to configure the port, volumes and other containery things&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;config/home.yml&lt;/code&gt; to configure the widgets or layout of the home page&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;config/glance.yml&lt;/code&gt; if you want to change the theme or add more pages&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;details&gt; 
  &lt;summary&gt;Other files you may want to edit&lt;/summary&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;.env&lt;/code&gt; to configure environment variables that will be available inside configuration files&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;assets/user.css&lt;/code&gt; to add custom CSS&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/details&gt; 
 &lt;p&gt;When ready, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you encounter any issues, you can check the logs by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose logs
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Docker compose manual&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;Create a &lt;code&gt;docker-compose.yml&lt;/code&gt; file with the following contents:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  glance:
    container_name: glance
    image: glanceapp/glance
    restart: unless-stopped
    volumes:
      - ./config:/app/config
    ports:
      - 8080:8080
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Then, create a new directory called &lt;code&gt;config&lt;/code&gt; and download the example starting &lt;a href="https://github.com/glanceapp/glance/raw/main/docs/glance.yml"&gt;&lt;code&gt;glance.yml&lt;/code&gt;&lt;/a&gt; file into it by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;mkdir config &amp;amp;&amp;amp; wget -O config/glance.yml https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Feel free to edit the &lt;code&gt;glance.yml&lt;/code&gt; file to your liking, and when ready run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you encounter any issues, you can check the logs by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker logs glance
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Manual binary installation&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;Precompiled binaries are available for Linux, Windows and macOS (x86, x86_64, ARM and ARM64 architectures).&lt;/p&gt; 
 &lt;h3&gt;Linux&lt;/h3&gt; 
 &lt;p&gt;Visit the &lt;a href="https://github.com/glanceapp/glance/releases/latest"&gt;latest release page&lt;/a&gt; for available binaries. You can place the binary in &lt;code&gt;/opt/glance/&lt;/code&gt; and have it start with your server via a &lt;a href="https://linuxhandbook.com/create-systemd-services/"&gt;systemd service&lt;/a&gt;. By default, when running the binary, it will look for a &lt;code&gt;glance.yml&lt;/code&gt; file in the directory it's placed in. To specify a different path for the config file, use the &lt;code&gt;--config&lt;/code&gt; option:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;/opt/glance/glance --config /etc/glance.yml
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To grab a starting template for the config file, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;wget https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Windows&lt;/h3&gt; 
 &lt;p&gt;Download and extract the executable from the &lt;a href="https://github.com/glanceapp/glance/releases/latest"&gt;latest release&lt;/a&gt; (most likely the file called &lt;code&gt;glance-windows-amd64.zip&lt;/code&gt; if you're on a 64-bit system) and place it in a folder of your choice. Then, create a new text file called &lt;code&gt;glance.yml&lt;/code&gt; in the same folder and paste the content from &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml"&gt;here&lt;/a&gt; in it. You should then be able to run the executable and access the dashboard by visiting &lt;code&gt;http://localhost:8080&lt;/code&gt; in your browser.&lt;/p&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Other&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;Glance can also be installed through the following 3rd party channels:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://community-scripts.github.io/ProxmoxVE/scripts?id=glance"&gt;Proxmox VE Helper Script&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://search.nixos.org/packages?channel=unstable&amp;amp;show=glance"&gt;NixOS package&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://coolify.io/docs/services/glance/"&gt;Coolify.io&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;br /&gt; 
&lt;h2&gt;Common issues&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Requests timing out&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;The most common cause of this is when using Pi-Hole, AdGuard Home or other ad-blocking DNS services, which by default have a fairly low rate limit. Depending on the number of widgets you have in a single page, this limit can very easily be exceeded. To fix this, increase the rate limit in the settings of your DNS service.&lt;/p&gt; 
 &lt;p&gt;If using Podman, in some rare cases the timeout can be caused by an unknown issue, in which case it may be resolved by adding the following to the bottom of your &lt;code&gt;docker-compose.yml&lt;/code&gt; file:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;networks:
  podman:
    external: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Broken layout for markets, bookmarks or other widgets&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;This is almost always caused by the browser extension Dark Reader. To fix this, disable dark mode for the domain where Glance is hosted.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;cannot unmarshal !!map into []glance.page&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;The most common cause of this is having a &lt;code&gt;pages&lt;/code&gt; key in your &lt;code&gt;glance.yml&lt;/code&gt; and then also having a &lt;code&gt;pages&lt;/code&gt; key inside one of your included pages. To fix this, remove the &lt;code&gt;pages&lt;/code&gt; key from the top of your included pages.&lt;/p&gt; 
&lt;/details&gt; 
&lt;br /&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Does the information on the page update automatically?&lt;/strong&gt;&lt;/summary&gt; No, a page refresh is required to update the information. Some things do dynamically update where it makes sense, like the clock widget and the relative time showing how long ago something happened. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;How frequently do widgets update?&lt;/strong&gt;&lt;/summary&gt; No requests are made periodically in the background, information is only fetched upon loading the page and then cached. The default cache lifetime is different for each widget and can be configured. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Can I create my own widgets?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Yes, there are multiple ways to create custom widgets:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;iframe&lt;/code&gt; widget - allows you to embed things from other websites&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;html&lt;/code&gt; widget - allows you to insert your own static HTML&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;extension&lt;/code&gt; widget - fetch HTML from a URL&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;custom-api&lt;/code&gt; widget - fetch JSON from a URL and render it using custom HTML&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Can I change the title of a widget?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Yes, the title of all widgets can be changed by specifying the &lt;code&gt;title&lt;/code&gt; property in the widget's configuration:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;- type: rss
  title: My custom title

- type: markets
  title: My custom title

- type: videos
  title: My custom title

# and so on for all widgets...
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br /&gt; 
&lt;h2&gt;Feature requests&lt;/h2&gt; 
&lt;p&gt;New feature suggestions are always welcome and will be considered, though please keep in mind that some of them may be out of scope for what the project is trying to achieve (or is reasonably capable of). If you have an idea for a new feature and would like to share it, you can do so &lt;a href="https://github.com/glanceapp/glance/issues/new?template=feature_request.yml"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Feature requests are tagged with one of the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/glanceapp/glance/labels/roadmap"&gt;Roadmap&lt;/a&gt; - will be implemented in a future release&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/glanceapp/glance/labels/backlog"&gt;Backlog&lt;/a&gt; - may be implemented in the future but needs further feedback or interest from the community&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/glanceapp/glance/labels/icebox"&gt;Icebox&lt;/a&gt; - no plans to implement as it doesn't currently align with the project's goals or capabilities, may be revised at a later date&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;Choose one of the following methods:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Build binary with Go&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;Requirements: &lt;a href="https://go.dev/dl/"&gt;Go&lt;/a&gt; &amp;gt;= v1.23&lt;/p&gt; 
 &lt;p&gt;To build the project for your current OS and architecture, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;go build -o build/glance .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To build for a specific OS and architecture, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;GOOS=linux GOARCH=amd64 go build -o build/glance .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;a href="https://go.dev/doc/install/source#:~:text=$GOOS%20and%20$GOARCH"&gt;&lt;em&gt;click here for a full list of GOOS and GOARCH combinations&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Alternatively, if you just want to run the app without creating a binary, like when you're testing out changes, you can run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;go run .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Build project and Docker image with Docker&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;Requirements: &lt;a href="https://docs.docker.com/engine/install/"&gt;Docker&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;To build the project and image using just Docker, run:&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;(replace &lt;code&gt;owner&lt;/code&gt; with your name or organization)&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker build -t owner/glance:latest .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you wish to push the image to a registry (by default Docker Hub), run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker push owner/glance:latest
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;br /&gt; 
&lt;h2&gt;Contributing guidelines&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Before working on a new feature it's preferable to submit a feature request first and state that you'd like to implement it yourself&lt;/li&gt; 
 &lt;li&gt;Please don't submit PRs for feature requests that are either in the roadmap&lt;sup&gt;[1]&lt;/sup&gt;, backlog&lt;sup&gt;[2]&lt;/sup&gt; or icebox&lt;sup&gt;[3]&lt;/sup&gt;&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;dev&lt;/code&gt; for the base branch if you're adding new features or fixing bugs, otherwise use &lt;code&gt;main&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Avoid introducing new dependencies&lt;/li&gt; 
 &lt;li&gt;Avoid making backwards-incompatible configuration changes&lt;/li&gt; 
 &lt;li&gt;Avoid introducing new colors or hard-coding colors, use the standard &lt;code&gt;primary&lt;/code&gt;, &lt;code&gt;positive&lt;/code&gt; and &lt;code&gt;negative&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For icons, try to use &lt;a href="https://heroicons.com/"&gt;heroicons&lt;/a&gt; where applicable&lt;/li&gt; 
 &lt;li&gt;Provide a screenshot of the changes if UI related where possible&lt;/li&gt; 
 &lt;li&gt;No &lt;code&gt;package.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;&lt;sup&gt;[1] [2] [3]&lt;/sup&gt;&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;[1] The feature likely already has work put into it that may conflict with your implementation&lt;/p&gt; 
 &lt;p&gt;[2] The demand, implementation or functionality for this feature is not yet clear&lt;/p&gt; 
 &lt;p&gt;[3] No plans to add this feature for the time being&lt;/p&gt; 
&lt;/details&gt; 
&lt;br /&gt; 
&lt;h2&gt;Thank you&lt;/h2&gt; 
&lt;p&gt;To all the people who were generous enough to &lt;a href="https://github.com/sponsors/glanceapp"&gt;sponsor&lt;/a&gt; the project and to everyone who has contributed in any way, be it PRs, submitting issues, helping others in the discussions or Discord server, creating guides and tools or just mentioning Glance on social media. Your support is greatly appreciated and helps keep the project going.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sammcj/gollama</title>
      <link>https://github.com/sammcj/gollama</link>
      <description>&lt;p&gt;Go manage your Ollama models&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gollama&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/sammcj/gollama/main/gollama-logo.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Gollama is a macOS / Linux tool for managing Ollama models.&lt;/p&gt; 
&lt;p&gt;It provides a TUI (Text User Interface) for listing, inspecting, deleting, copying, and pushing Ollama models as well as bidirectional syncing with LM Studio*.&lt;/p&gt; 
&lt;p&gt;The application allows users to interactively select models, sort, filter, edit, run, unload and perform actions on them using hotkeys.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/sammcj/gollama/main/screenshots/gollama-v1.0.0.jpg" alt="" /&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/#gollama"&gt;Gollama&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/#installation"&gt;Installation&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/#go-install-recommended"&gt;go install (recommended)&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/#curl"&gt;curl&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/#manually"&gt;Manually&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/#if-command-not-found-gollama"&gt;if "command not found: gollama"&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/#usage"&gt;Usage&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/#key-bindings"&gt;Key Bindings&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/#installation-and-build-from-source"&gt;Installation and build from source&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/#themes"&gt;Themes&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/#logging"&gt;Logging&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/#acknowledgements"&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;The project started off as a rewrite of my &lt;a href="https://smcleod.net/2024/03/llamalink-ollama-to-lm-studio-llm-model-linker/"&gt;llamalink&lt;/a&gt; project, but I decided to expand it to include more features and make it more user-friendly.&lt;/p&gt; 
&lt;p&gt;It's in active development, so there are some bugs and missing features, however I'm finding it useful for managing my models every day, especially for cleaning up old models.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;List available models&lt;/li&gt; 
 &lt;li&gt;Display metadata such as size, quantisation level, model family, and modified date&lt;/li&gt; 
 &lt;li&gt;Edit / update a model's Modelfile&lt;/li&gt; 
 &lt;li&gt;Sort models by name, size, modification date, quantisation level, family etc&lt;/li&gt; 
 &lt;li&gt;Select and delete models&lt;/li&gt; 
 &lt;li&gt;Run and unload models&lt;/li&gt; 
 &lt;li&gt;Inspect model for additional details&lt;/li&gt; 
 &lt;li&gt;Calculate approximate vRAM usage for a model&lt;/li&gt; 
 &lt;li&gt;Bidirectional sync with LM Studio: 
  &lt;ul&gt; 
   &lt;li&gt;Link Ollama models to LM Studio&lt;/li&gt; 
   &lt;li&gt;Create Ollama models from LM Studio models &lt;strong&gt;EXPERIMENTAL&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Copy / rename models&lt;/li&gt; 
 &lt;li&gt;Push models to a registry&lt;/li&gt; 
 &lt;li&gt;Copy models to remote hosts (spit)&lt;/li&gt; 
 &lt;li&gt;Show running models&lt;/li&gt; 
 &lt;li&gt;Has some cool bugs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See also - &lt;a href="https://github.com/sammcj/ingest"&gt;ingest&lt;/a&gt; for passing directories/repos of code to markdown formatted for LLMs.&lt;/p&gt; 
&lt;p&gt;Gollama Intro ("Podcast" Episode):&lt;/p&gt; 
&lt;p&gt;
 &lt;audio src="https://github.com/sammcj/smcleod_files/raw/refs/heads/master/audio/podcast-ep-sw/Podcast%20Episode%20-%20Gollama.mp3" controls preload&gt;&lt;/audio&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;go install (recommended)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;go install github.com/sammcj/gollama@HEAD
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;curl&lt;/h3&gt; 
&lt;p&gt;I don't recommend this method as it's not as easy to update, but you can use the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl -sL https://raw.githubusercontent.com/sammcj/gollama/refs/heads/main/scripts/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manually&lt;/h3&gt; 
&lt;p&gt;Download the most recent release from the &lt;a href="https://github.com/sammcj/gollama/releases"&gt;releases page&lt;/a&gt; and extract the binary to a directory in your PATH.&lt;/p&gt; 
&lt;p&gt;e.g. &lt;code&gt;zip -d gollama*.zip -d gollama &amp;amp;&amp;amp; mv gollama /usr/local/bin&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;if "command not found: gollama"&lt;/h3&gt; 
&lt;p&gt;If you see this error, add environment variables to &lt;code&gt;.zshrc&lt;/code&gt; or &lt;code&gt;.bashrc&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;echo 'export PATH=$PATH:$HOME/go/bin' &amp;gt;&amp;gt; ~/.zshrc
source ~/.zshrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To run the &lt;code&gt;gollama&lt;/code&gt; application, use the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;gollama
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Tip&lt;/em&gt;: I like to alias gollama to &lt;code&gt;g&lt;/code&gt; for quick access:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;echo "alias g=gollama" &amp;gt;&amp;gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Key Bindings&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Space&lt;/code&gt;: Select&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Enter&lt;/code&gt;: Run model (Ollama run)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;i&lt;/code&gt;: Inspect model&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;t&lt;/code&gt;: Top (show running models)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;D&lt;/code&gt;: Delete model&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;e&lt;/code&gt;: Edit model&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;c&lt;/code&gt;: Copy model&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;U&lt;/code&gt;: Unload all models&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;p&lt;/code&gt;: Pull an existing model&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ctrl+k&lt;/code&gt;: Pull model &amp;amp; preserve user configuration&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ctrl+p&lt;/code&gt;: Pull (get) new model&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;P&lt;/code&gt;: Push model&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;n&lt;/code&gt;: Sort by name&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;s&lt;/code&gt;: Sort by size&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;m&lt;/code&gt;: Sort by modified&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;k&lt;/code&gt;: Sort by quantisation&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;f&lt;/code&gt;: Sort by family&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt;: Sort by parameter size&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;l&lt;/code&gt;: Link model to LM Studio&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;L&lt;/code&gt;: Link all models to LM Studio&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;r&lt;/code&gt;: Rename model &lt;em&gt;&lt;strong&gt;(Work in progress)&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;q&lt;/code&gt;: Quit&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Top&lt;/h4&gt; 
&lt;p&gt;Top (&lt;code&gt;t&lt;/code&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/sammcj/gollama/main/screenshots/gollama-top.jpg" alt="" /&gt;&lt;/p&gt; 
&lt;h4&gt;Inspect&lt;/h4&gt; 
&lt;p&gt;Inspect (&lt;code&gt;i&lt;/code&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/sammcj/gollama/main/screenshots/gollama-inspect.png" alt="" /&gt;&lt;/p&gt; 
&lt;h4&gt;Link&lt;/h4&gt; 
&lt;p&gt;Gollama supports bidirectional syncing between Ollama and LM Studio:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Ollama ‚Üí LM Studio:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Link (&lt;code&gt;l&lt;/code&gt;): Link selected model to LM Studio&lt;/li&gt; 
 &lt;li&gt;Link All (&lt;code&gt;L&lt;/code&gt;): Link all models to LM Studio&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;LM Studio ‚Üí Ollama:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--link-lmstudio&lt;/code&gt;: Link LM Studio models to Ollama (creates symlinks)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-C&lt;/code&gt; or &lt;code&gt;--create-from-lmstudio&lt;/code&gt;: Create Ollama models from LM Studio models&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Vision model support&lt;/strong&gt;: Automatically detects and handles mmproj files for vision models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Smart filtering&lt;/strong&gt;: Skips models already linked between systems&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Safe operation&lt;/strong&gt;: Dry-run mode (&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--dry-run&lt;/code&gt;) shows what would happen without making changes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configurable parameters&lt;/strong&gt;: Uses sensible defaults (16K context, 0.6 temperature, etc.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When linking models to LM Studio, Gollama creates a Modelfile with the template from LM-Studio and a set of default parameters that you can adjust.&lt;/p&gt; 
&lt;p&gt;Note: Linking requires admin privileges if you're running Windows.&lt;/p&gt; 
&lt;h4&gt;Spit (Copy to Remote)&lt;/h4&gt; 
&lt;p&gt;The spit functionality allows you to copy Ollama models to remote hosts. This is useful for distributing models across multiple machines or creating backups.&lt;/p&gt; 
&lt;p&gt;You can use the command-line interface:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# Copy a specific model to a remote host
gollama --spit my-model --remote http://remote-host:11434

# Copy all models to a remote host
gollama --spit-all --remote http://remote-host:11434
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This functionality uses the &lt;a href="https://github.com/sammcj/spitter"&gt;spitter&lt;/a&gt; package to handle the model copying process.&lt;/p&gt; 
&lt;h4&gt;Command-line Options&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Model Management:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: List all available Ollama models and exit&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-s &amp;lt;search term&amp;gt;&lt;/code&gt;: Search for models by name 
  &lt;ul&gt; 
   &lt;li&gt;OR operator (&lt;code&gt;'term1|term2'&lt;/code&gt;) returns models that match either term&lt;/li&gt; 
   &lt;li&gt;AND operator (&lt;code&gt;'term1&amp;amp;term2'&lt;/code&gt;) returns models that match both terms&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-e &amp;lt;model&amp;gt;&lt;/code&gt;: Edit the Modelfile for a model&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: Unload all running models&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: Print the version and exit&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;LM Studio Integration:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-L&lt;/code&gt;: Link all available Ollama models to LM Studio and exit&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--link-lmstudio&lt;/code&gt;: Link all available LM Studio models to Ollama and exit &lt;strong&gt;EXPERIMENTAL&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-C&lt;/code&gt; or &lt;code&gt;--create-from-lmstudio&lt;/code&gt;: Create Ollama models from LM Studio models &lt;strong&gt;EXPERIMENTAL&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--dry-run&lt;/code&gt;: Show what would happen without making any changes (works with all sync operations)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Configuration:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-h&lt;/code&gt;, or &lt;code&gt;--host&lt;/code&gt;: Specify the host for the Ollama API&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-H&lt;/code&gt;: Shortcut for &lt;code&gt;-h http://localhost:11434&lt;/code&gt; (connect to local Ollama API)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ollama-dir&lt;/code&gt;: Custom Ollama models directory&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--lm-dir&lt;/code&gt;: Custom LM Studio models directory&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--log&lt;/code&gt; or &lt;code&gt;--log-level&lt;/code&gt;: Override log level (debug, info, warn, error)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Cleanup:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--cleanup&lt;/code&gt;: Remove all symlinked models and empty directories and exit&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--no-cleanup&lt;/code&gt;: Don't cleanup broken symlinks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Remote Operations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--spit &amp;lt;model&amp;gt;&lt;/code&gt;: Copy a model to a remote host&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--spit-all&lt;/code&gt;: Copy all models to a remote host&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--remote &amp;lt;url&amp;gt;&lt;/code&gt;: Remote host URL for spit operations (e.g., &lt;a href="http://remote-host:11434"&gt;http://remote-host:11434&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;vRAM Analysis:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--vram&lt;/code&gt;: Estimate vRAM usage for a model. Accepts: 
  &lt;ul&gt; 
   &lt;li&gt;Ollama models (e.g. &lt;code&gt;llama3.1:8b-instruct-q6_K&lt;/code&gt;, &lt;code&gt;qwen2:14b-q4_0&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;HuggingFace models (e.g. &lt;code&gt;NousResearch/Hermes-2-Theta-Llama-3-8B&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--fits&lt;/code&gt;: Available memory in GB for context calculation (e.g. &lt;code&gt;6&lt;/code&gt; for 6GB)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--vram-to-nth&lt;/code&gt; or &lt;code&gt;--context&lt;/code&gt;: Maximum context length to analyze (e.g. &lt;code&gt;32k&lt;/code&gt; or &lt;code&gt;128k&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--quant&lt;/code&gt;: Override quantisation level (e.g. &lt;code&gt;Q4_0&lt;/code&gt;, &lt;code&gt;Q5_K_M&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Simple model listing&lt;/h5&gt; 
&lt;p&gt;Gollama can also be called with &lt;code&gt;-l&lt;/code&gt; to list models without the TUI.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;gollama -l
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;List (&lt;code&gt;gollama -l&lt;/code&gt;):&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/sammcj/gollama/main/screenshots/cli-list.jpg" alt="" /&gt;&lt;/p&gt; 
&lt;h5&gt;Edit&lt;/h5&gt; 
&lt;p&gt;Gollama can be called with &lt;code&gt;-e&lt;/code&gt; to edit the Modelfile for a model.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;gollama -e my-model
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Search&lt;/h5&gt; 
&lt;p&gt;Gollama can be called with &lt;code&gt;-s&lt;/code&gt; to search for models by name.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;gollama -s my-model # returns models that contain 'my-model'

gollama -s 'my-model|my-other-model' # returns models that contain either 'my-model' or 'my-other-model'

gollama -s 'my-model&amp;amp;instruct' # returns models that contain both 'my-model' and 'instruct'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;vRAM Estimation&lt;/h5&gt; 
&lt;p&gt;Gollama includes a comprehensive vRAM estimation feature:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Calculate vRAM usage for a pulled Ollama model (e.g. &lt;code&gt;my-model:mytag&lt;/code&gt;), or huggingface model ID (e.g. &lt;code&gt;author/name&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Determine maximum context length for a given vRAM constraint&lt;/li&gt; 
 &lt;li&gt;Find the best quantisation setting for a given vRAM and context constraint&lt;/li&gt; 
 &lt;li&gt;Shows estimates for different k/v cache quantisation options (fp16, q8_0, q4_0)&lt;/li&gt; 
 &lt;li&gt;Automatic detection of available CUDA vRAM (&lt;strong&gt;coming soon!&lt;/strong&gt;) or system RAM&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/sammcj/gollama/main/screenshots/vram.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;To estimate (v)RAM usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;gollama --vram llama3.1:8b-instruct-q6_K

üìä VRAM Estimation for Model: llama3.1:8b-instruct-q6_K

| QUANT   | CTX  | BPW | 2K  | 8K              | 16K             | 32K             | 49K             | 64K |
| ------- | ---- | --- | --- | --------------- | --------------- | --------------- | --------------- |
| IQ1_S   | 1.56 | 2.2 | 2.8 | 3.7(3.7,3.7)    | 5.5(5.5,5.5)    | 7.3(7.3,7.3)    | 9.1(9.1,9.1)    |
| IQ2_XXS | 2.06 | 2.6 | 3.3 | 4.3(4.3,4.3)    | 6.1(6.1,6.1)    | 7.9(7.9,7.9)    | 9.8(9.8,9.8)    |
| IQ2_XS  | 2.31 | 2.9 | 3.6 | 4.5(4.5,4.5)    | 6.4(6.4,6.4)    | 8.2(8.2,8.2)    | 10.1(10.1,10.1) |
| IQ2_S   | 2.50 | 3.1 | 3.8 | 4.7(4.7,4.7)    | 6.6(6.6,6.6)    | 8.5(8.5,8.5)    | 10.4(10.4,10.4) |
| IQ2_M   | 2.70 | 3.2 | 4.0 | 4.9(4.9,4.9)    | 6.8(6.8,6.8)    | 8.7(8.7,8.7)    | 10.6(10.6,10.6) |
| IQ3_XXS | 3.06 | 3.6 | 4.3 | 5.3(5.3,5.3)    | 7.2(7.2,7.2)    | 9.2(9.2,9.2)    | 11.1(11.1,11.1) |
| IQ3_XS  | 3.30 | 3.8 | 4.5 | 5.5(5.5,5.5)    | 7.5(7.5,7.5)    | 9.5(9.5,9.5)    | 11.4(11.4,11.4) |
| Q2_K    | 3.35 | 3.9 | 4.6 | 5.6(5.6,5.6)    | 7.6(7.6,7.6)    | 9.5(9.5,9.5)    | 11.5(11.5,11.5) |
| Q3_K_S  | 3.50 | 4.0 | 4.8 | 5.7(5.7,5.7)    | 7.7(7.7,7.7)    | 9.7(9.7,9.7)    | 11.7(11.7,11.7) |
| IQ3_S   | 3.50 | 4.0 | 4.8 | 5.7(5.7,5.7)    | 7.7(7.7,7.7)    | 9.7(9.7,9.7)    | 11.7(11.7,11.7) |
| IQ3_M   | 3.70 | 4.2 | 5.0 | 6.0(6.0,6.0)    | 8.0(8.0,8.0)    | 9.9(9.9,9.9)    | 12.0(12.0,12.0) |
| Q3_K_M  | 3.91 | 4.4 | 5.2 | 6.2(6.2,6.2)    | 8.2(8.2,8.2)    | 10.2(10.2,10.2) | 12.2(12.2,12.2) |
| IQ4_XS  | 4.25 | 4.7 | 5.5 | 6.5(6.5,6.5)    | 8.6(8.6,8.6)    | 10.6(10.6,10.6) | 12.7(12.7,12.7) |
| Q3_K_L  | 4.27 | 4.7 | 5.5 | 6.5(6.5,6.5)    | 8.6(8.6,8.6)    | 10.7(10.7,10.7) | 12.7(12.7,12.7) |
| IQ4_NL  | 4.50 | 5.0 | 5.7 | 6.8(6.8,6.8)    | 8.9(8.9,8.9)    | 10.9(10.9,10.9) | 13.0(13.0,13.0) |
| Q4_0    | 4.55 | 5.0 | 5.8 | 6.8(6.8,6.8)    | 8.9(8.9,8.9)    | 11.0(11.0,11.0) | 13.1(13.1,13.1) |
| Q4_K_S  | 4.58 | 5.0 | 5.8 | 6.9(6.9,6.9)    | 8.9(8.9,8.9)    | 11.0(11.0,11.0) | 13.1(13.1,13.1) |
| Q4_K_M  | 4.85 | 5.3 | 6.1 | 7.1(7.1,7.1)    | 9.2(9.2,9.2)    | 11.4(11.4,11.4) | 13.5(13.5,13.5) |
| Q4_K_L  | 4.90 | 5.3 | 6.1 | 7.2(7.2,7.2)    | 9.3(9.3,9.3)    | 11.4(11.4,11.4) | 13.6(13.6,13.6) |
| Q5_K_S  | 5.54 | 5.9 | 6.8 | 7.8(7.8,7.8)    | 10.0(10.0,10.0) | 12.2(12.2,12.2) | 14.4(14.4,14.4) |
| Q5_0    | 5.54 | 5.9 | 6.8 | 7.8(7.8,7.8)    | 10.0(10.0,10.0) | 12.2(12.2,12.2) | 14.4(14.4,14.4) |
| Q5_K_M  | 5.69 | 6.1 | 6.9 | 8.0(8.0,8.0)    | 10.2(10.2,10.2) | 12.4(12.4,12.4) | 14.6(14.6,14.6) |
| Q5_K_L  | 5.75 | 6.1 | 7.0 | 8.1(8.1,8.1)    | 10.3(10.3,10.3) | 12.5(12.5,12.5) | 14.7(14.7,14.7) |
| Q6_K    | 6.59 | 7.0 | 8.0 | 9.4(9.4,9.4)    | 12.2(12.2,12.2) | 15.0(15.0,15.0) | 17.8(17.8,17.8) |
| Q8_0    | 8.50 | 8.8 | 9.9 | 11.4(11.4,11.4) | 14.4(14.4,14.4) | 17.4(17.4,17.4) | 20.3(20.3,20.3) |
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To find the best quantisation type for a given memory constraint (e.g. 6GB) you can provide &lt;code&gt;--fits &amp;lt;number of GB&amp;gt;&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;gollama --vram NousResearch/Hermes-2-Theta-Llama-3-8B --fits 6

üìä VRAM Estimation for Model: NousResearch/Hermes-2-Theta-Llama-3-8B

| QUANT/CTX | BPW  | 2K  | 8K  | 16K          | 32K           | 49K            | 64K             |
| --------- | ---- | --- | --- | ------------ | ------------- | -------------- | --------------- |
| IQ1_S     | 1.56 | 2.4 | 3.8 | 5.7(4.7,4.2) | 9.5(7.5,6.5)  | 13.3(10.3,8.8) | 17.1(13.1,11.1) |
| IQ2_XXS   | 2.06 | 2.9 | 4.3 | 6.3(5.3,4.8) | 10.1(8.1,7.1) | 13.9(10.9,9.4) | 17.8(13.8,11.8) |
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will display a table showing vRAM usage for various quantisation types and context sizes.&lt;/p&gt; 
&lt;p&gt;The vRAM estimator works by:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fetching the model configuration from Hugging Face (if not cached locally)&lt;/li&gt; 
 &lt;li&gt;Calculating the memory requirements for model parameters, activations, and KV cache&lt;/li&gt; 
 &lt;li&gt;Adjusting calculations based on the specified quantisation settings&lt;/li&gt; 
 &lt;li&gt;Performing binary and linear searches to optimize for context length or quantisation settings&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Note: The estimator will attempt to use CUDA vRAM if available, otherwise it will fall back to system RAM for calculations.&lt;/p&gt; 
&lt;h5&gt;LM Studio Integration Examples&lt;/h5&gt; 
&lt;p&gt;&lt;strong&gt;Create Ollama models from LM Studio models:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WARNING: EXPERIMENTAL, BACK UP YOUR MODELS FIRST!&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# Dry-run to see what would be created (recommended first step)
gollama -C -n
# or
gollama --create-from-lmstudio --dry-run

# Actually create the models
gollama -C
# or
gollama --create-from-lmstudio

# Create with debug logging
gollama -C --log debug
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Link LM Studio models to Ollama (symlinks):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# Dry-run first
gollama --link-lmstudio -n

# Create symlinks
gollama --link-lmstudio
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Link Ollama models to LM Studio:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# Link all models with dry-run
gollama -L -n

# Actually link all models
gollama -L
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Key differences between linking and creating:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--link-lmstudio&lt;/code&gt;&lt;/strong&gt;: Creates symlinks, LM Studio uses original Ollama files&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;-C&lt;/code&gt; / &lt;code&gt;--create-from-lmstudio&lt;/code&gt;&lt;/strong&gt;: Creates new Ollama models, independent copies with proper metadata&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Vision model support:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The create functionality automatically detects and handles vision models with mmproj files:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ gollama -C -n
[DRY RUN] Found 5 unlinked LM Studio models
[DRY RUN] Processing model publisher/vision-model... (vision model with 1 projection files) success!
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Gollama uses a JSON configuration file located at &lt;code&gt;~/.config/gollama/config.json&lt;/code&gt;. The configuration file includes options for sorting, columns, API keys, log levels, theme etc...&lt;/p&gt; 
&lt;p&gt;Example configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "default_sort": "modified",
  "columns": [
    "Name",
    "Size",
    "Quant",
    "Family",
    "Modified",
    "ID"
  ],
  "ollama_api_key": "",
  "ollama_api_url": "http://localhost:11434",
  "lm_studio_file_paths": "",
  "log_level": "info",
  "log_file_path": "/Users/username/.config/gollama/gollama.log",
  "sort_order": "Size",
  "strip_string": "my-private-registry.internal/",
  "editor": "/Applications/Visual Studio Code.app/Contents/Resources/app/bin/code",
  "docker_container": ""
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;strip_string&lt;/code&gt; can be used to remove a prefix from model names as they are displayed in the TUI. This can be useful if you have a common prefix such as a private registry that you want to remove for display purposes.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;editor&lt;/code&gt; specifies which editor to use for editing modelfiles when pressing 'e'. If empty, falls back to the &lt;code&gt;EDITOR&lt;/code&gt; environment variable, then defaults to &lt;code&gt;vim&lt;/code&gt;. External editors like VS Code are supported and will show a popup interface.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;docker_container&lt;/code&gt; - &lt;strong&gt;experimental&lt;/strong&gt; - if set, gollama will attempt to perform any run operations inside the specified container.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;theme&lt;/code&gt; - &lt;strong&gt;experimental&lt;/strong&gt; The name of the theme to use (without .json extension)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation and build from source&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Clone the repository:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/sammcj/gollama.git
cd gollama
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Build:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;go get
make build
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;./gollama
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Themes&lt;/h3&gt; 
&lt;p&gt;Gollama has basic customisable theme support, themes are stored as JSON files in &lt;code&gt;~/.config/gollama/themes/&lt;/code&gt;. The active theme can be set via the &lt;code&gt;theme&lt;/code&gt; setting in your config file (without the .json extension).&lt;/p&gt; 
&lt;p&gt;Default themes will be created if they don't exist:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;default&lt;/code&gt; - Dark theme with neon accents (default)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;light-neon&lt;/code&gt; - Light theme with neon accents, suitable for light terminal backgrounds&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To create a custom theme:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create a new JSON file in the themes directory (e.g. &lt;code&gt;~/.config/gollama/themes/my-theme.json&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Use the following structure:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "name": "my-theme",
  "description": "My custom theme",
  "colours": {
    "header_foreground": "#AA1493",
    "header_border": "#BA1B11",
    "selected": "#FFFFFF",
    ...
  },
  "family": {
    "llama": "#FF1493",
    "alpaca": "#FF00FF",
    ...
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Colours can be specified as ANSI colour codes (e.g. "241") or hex values (e.g. "#FF00FF"). The &lt;code&gt;family&lt;/code&gt; section defines colours for different model families in the list view.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: Using the VSCode extension &lt;a href="https://marketplace.visualstudio.com/items?itemName=naumovs.color-highlight"&gt;'Color Highlight'&lt;/a&gt; makes it easier to find the hex values for colours.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Logging&lt;/h2&gt; 
&lt;p&gt;Logs can be found in the &lt;code&gt;gollama.log&lt;/code&gt; which is stored in &lt;code&gt;$HOME/.config/gollama/gollama.log&lt;/code&gt; by default.&lt;/p&gt; 
&lt;p&gt;The log level can be set in the configuration file or overridden via command-line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# Override log level for a single command
gollama -C --log debug

# Or use the long form
gollama --create-from-lmstudio --log-level debug
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Available log levels: &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Please fork the repository and create a pull request with your changes.&lt;/p&gt; 
&lt;!-- readme: contributors -start --&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/sammcj"&gt; &lt;img src="https://avatars.githubusercontent.com/u/862951?v=4" width="50;" alt="sammcj" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Sam&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Camsbury"&gt; &lt;img src="https://avatars.githubusercontent.com/u/7485022?v=4" width="50;" alt="Camsbury" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Cameron Kingsbury&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/KimCookieYa"&gt; &lt;img src="https://avatars.githubusercontent.com/u/45006957?v=4" width="50;" alt="KimCookieYa" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;KimCookieYa&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/DenisBalan"&gt; &lt;img src="https://avatars.githubusercontent.com/u/33955091?v=4" width="50;" alt="DenisBalan" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Denis Balan&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/erg"&gt; &lt;img src="https://avatars.githubusercontent.com/u/27430?v=4" width="50;" alt="erg" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Doug Coleman&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Impact123"&gt; &lt;img src="https://avatars.githubusercontent.com/u/899193?v=4" width="50;" alt="Impact123" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Impact&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/josekasna"&gt; &lt;img src="https://avatars.githubusercontent.com/u/138180151?v=4" width="50;" alt="josekasna" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Jose Almaraz&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/jralmaraz"&gt; &lt;img src="https://avatars.githubusercontent.com/u/13877691?v=4" width="50;" alt="jralmaraz" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Jose Roberto Almaraz&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Br1ght0ne"&gt; &lt;img src="https://avatars.githubusercontent.com/u/12615679?v=4" width="50;" alt="Br1ght0ne" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Oleksii Filonenko&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/southwolf"&gt; &lt;img src="https://avatars.githubusercontent.com/u/150648?v=4" width="50;" alt="southwolf" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;SouthWolf&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/agustif"&gt; &lt;img src="https://avatars.githubusercontent.com/u/6601142?v=4" width="50;" alt="agustif" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;agustif&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/anrgct"&gt; &lt;img src="https://avatars.githubusercontent.com/u/16172523?v=4" width="50;" alt="anrgct" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;anrgct&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/fuho"&gt; &lt;img src="https://avatars.githubusercontent.com/u/539452?v=4" width="50;" alt="fuho" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;ondrej&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
 &lt;tbody&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- readme: contributors -end --&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://ollama.com/"&gt;Ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggerganov/llama.cpp"&gt;Llama.cpp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://charm.sh/"&gt;Charmbracelet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sammcj/spitter"&gt;Spitter&lt;/a&gt; - For model copying functionality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thank you to folks such as Matt Williams, Fahd Mirza and AI Code King for giving this a shot and providing feedback.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=T4uiTnacyhI"&gt;&lt;img src="https://img.youtube.com/vi/T4uiTnacyhI/0.jpg" alt="AI Code King - Easiest &amp;amp; Interactive way to Manage &amp;amp; Run Ollama Models Locally" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=OCXuYm6LKgE"&gt;&lt;img src="https://img.youtube.com/vi/OCXuYm6LKgE/0.jpg" alt="Matt Williams - My favourite way to run Ollama: Gollama" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=24yqFrQV-4Q"&gt;&lt;img src="https://img.youtube.com/vi/24yqFrQV-4Q/0.jpg" alt="Fahd Mirza - Gollama - Manage Ollama Models Locally" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright ¬© 2024 Sam McLeod&lt;/p&gt; 
&lt;p&gt;This project is licensed under the MIT License. See the &lt;a href="https://raw.githubusercontent.com/sammcj/gollama/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>e2b-dev/infra</title>
      <link>https://github.com/e2b-dev/infra</link>
      <description>&lt;p&gt;Infrastructure for AI code interpreting that's powering E2B.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/e2b-dev/infra/main/readme-assets/infra-light.png#gh-light-mode-only" alt="E2B Infra Preview Light" /&gt; &lt;img src="https://raw.githubusercontent.com/e2b-dev/infra/main/readme-assets/infra-dark.png#gh-dark-mode-only" alt="E2B Infra Preview Dark" /&gt;&lt;/p&gt; 
&lt;h1&gt;E2B Infrastructure&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://e2b.dev"&gt;E2B&lt;/a&gt; is an open-source infrastructure for AI code interpreting. In our main repository &lt;a href="https://github.com/e2b-dev/E2B"&gt;e2b-dev/e2b&lt;/a&gt; we are giving you SDKs and CLI to customize and manage environments and run your AI agents in the cloud.&lt;/p&gt; 
&lt;p&gt;This repository contains the infrastructure that powers the E2B platform.&lt;/p&gt; 
&lt;h2&gt;Self-hosting&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href="https://raw.githubusercontent.com/e2b-dev/infra/main/self-host.md"&gt;self-hosting guide&lt;/a&gt; to learn how to set up the infrastructure on your own. The infrastructure is deployed using Terraform.&lt;/p&gt; 
&lt;p&gt;Supported cloud providers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üü¢ GCP&lt;/li&gt; 
 &lt;li&gt;üöß AWS&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Azure&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; General linux machine&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>coder/coder</title>
      <link>https://github.com/coder/coder</link>
      <description>&lt;p&gt;Secure environments for developers and their agents&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://coder.com#gh-light-mode-only"&gt; &lt;img src="https://raw.githubusercontent.com/coder/coder/main/docs/images/logo-black.png" alt="Coder Logo Light" style="width: 128px" /&gt; &lt;/a&gt; 
 &lt;a href="https://coder.com#gh-dark-mode-only"&gt; &lt;img src="https://raw.githubusercontent.com/coder/coder/main/docs/images/logo-white.png" alt="Coder Logo Dark" style="width: 128px" /&gt; &lt;/a&gt; 
 &lt;h1&gt; Self-Hosted Cloud Development Environments &lt;/h1&gt; 
 &lt;a href="https://coder.com#gh-light-mode-only"&gt; &lt;img src="https://raw.githubusercontent.com/coder/coder/main/docs/images/banner-black.png" alt="Coder Banner Light" style="width: 650px" /&gt; &lt;/a&gt; 
 &lt;a href="https://coder.com#gh-dark-mode-only"&gt; &lt;img src="https://raw.githubusercontent.com/coder/coder/main/docs/images/banner-white.png" alt="Coder Banner Dark" style="width: 650px" /&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/coder/coder/main/#quickstart"&gt;Quickstart&lt;/a&gt; | &lt;a href="https://coder.com/docs"&gt;Docs&lt;/a&gt; | &lt;a href="https://coder.com/why"&gt;Why Coder&lt;/a&gt; | &lt;a href="https://coder.com/pricing#compare-plans"&gt;Premium&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://discord.gg/coder"&gt;&lt;img src="https://img.shields.io/discord/747933592273027093?label=discord" alt="discord" /&gt;&lt;/a&gt; &lt;a href="https://github.com/coder/coder/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/coder/coder" alt="release" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/coder/coder"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/coder/coder.svg?sanitize=true" alt="godoc" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/coder/coder/v2"&gt;&lt;img src="https://goreportcard.com/badge/github.com/coder/coder/v2" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://www.bestpractices.dev/projects/9511"&gt;&lt;img src="https://www.bestpractices.dev/projects/9511/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com%2Fcoder%2Fcoder"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/coder/coder/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/coder/coder/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/coder/coder" alt="license" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://coder.com"&gt;Coder&lt;/a&gt; enables organizations to set up development environments in their public or private cloud infrastructure. Cloud development environments are defined with Terraform, connected through a secure high-speed Wireguard¬Æ tunnel, and automatically shut down when not used to save on costs. Coder gives engineering teams the flexibility to use the cloud for workloads most beneficial to them.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Define cloud development environments in Terraform 
  &lt;ul&gt; 
   &lt;li&gt;EC2 VMs, Kubernetes Pods, Docker Containers, etc.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Automatically shutdown idle resources to save on costs&lt;/li&gt; 
 &lt;li&gt;Onboard developers in seconds instead of days&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/coder/coder/main/docs/images/hero-image.png" alt="Coder Hero Image" /&gt; &lt;/p&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;The most convenient way to try Coder is to install it on your local machine and experiment with provisioning cloud development environments using Docker (works on Linux, macOS, and Windows).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# First, install Coder
curl -L https://coder.com/install.sh | sh

# Start the Coder server (caches data in ~/.cache/coder)
coder server

# Navigate to http://localhost:3000 to create your initial user,
# create a Docker template and provision a workspace
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;The easiest way to install Coder is to use our &lt;a href="https://github.com/coder/coder/raw/main/install.sh"&gt;install script&lt;/a&gt; for Linux and macOS. For Windows, use the latest &lt;code&gt;..._installer.exe&lt;/code&gt; file from GitHub Releases.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl -L https://coder.com/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can run the install script with &lt;code&gt;--dry-run&lt;/code&gt; to see the commands that will be used to install without executing them. Run the install script with &lt;code&gt;--help&lt;/code&gt; for additional flags.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;See &lt;a href="https://coder.com/docs/install"&gt;install&lt;/a&gt; for additional methods.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Once installed, you can start a production deployment with a single command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# Automatically sets up an external access URL on *.try.coder.app
coder server

# Requires a PostgreSQL instance (version 13 or higher) and external access URL
coder server --postgres-url &amp;lt;url&amp;gt; --access-url &amp;lt;url&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use &lt;code&gt;coder --help&lt;/code&gt; to get a list of flags and environment variables. Use our &lt;a href="https://coder.com/docs/install"&gt;install guides&lt;/a&gt; for a complete walkthrough.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Browse our docs &lt;a href="https://coder.com/docs"&gt;here&lt;/a&gt; or visit a specific section below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://coder.com/docs/templates"&gt;&lt;strong&gt;Templates&lt;/strong&gt;&lt;/a&gt;: Templates are written in Terraform and describe the infrastructure for workspaces&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://coder.com/docs/workspaces"&gt;&lt;strong&gt;Workspaces&lt;/strong&gt;&lt;/a&gt;: Workspaces contain the IDEs, dependencies, and configuration information needed for software development&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://coder.com/docs/ides"&gt;&lt;strong&gt;IDEs&lt;/strong&gt;&lt;/a&gt;: Connect your existing editor to a workspace&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://coder.com/docs/admin"&gt;&lt;strong&gt;Administration&lt;/strong&gt;&lt;/a&gt;: Learn how to operate Coder&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://coder.com/pricing#compare-plans"&gt;&lt;strong&gt;Premium&lt;/strong&gt;&lt;/a&gt;: Learn about our paid features built for large teams&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Feel free to &lt;a href="https://github.com/coder/coder/issues/new"&gt;open an issue&lt;/a&gt; if you have questions, run into bugs, or have a feature request.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/coder"&gt;Join our Discord&lt;/a&gt; to provide feedback on in-progress features and chat with the community using Coder!&lt;/p&gt; 
&lt;h2&gt;Integrations&lt;/h2&gt; 
&lt;p&gt;We are always working on new integrations. Please feel free to open an issue and ask for an integration. Contributions are welcome in any official or community repositories.&lt;/p&gt; 
&lt;h3&gt;Official&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=coder.coder-remote"&gt;&lt;strong&gt;VS Code Extension&lt;/strong&gt;&lt;/a&gt;: Open any Coder workspace in VS Code with a single click&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://plugins.jetbrains.com/plugin/26968-coder"&gt;&lt;strong&gt;JetBrains Toolbox Plugin&lt;/strong&gt;&lt;/a&gt;: Open any Coder workspace from JetBrains Toolbox with a single click&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://plugins.jetbrains.com/plugin/19620-coder"&gt;&lt;strong&gt;JetBrains Gateway Plugin&lt;/strong&gt;&lt;/a&gt;: Open any Coder workspace in JetBrains Gateway with a single click&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coder/envbuilder"&gt;&lt;strong&gt;Dev Container Builder&lt;/strong&gt;&lt;/a&gt;: Build development environments using &lt;code&gt;devcontainer.json&lt;/code&gt; on Docker, Kubernetes, and OpenShift&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://registry.coder.com"&gt;&lt;strong&gt;Coder Registry&lt;/strong&gt;&lt;/a&gt;: Build and extend development environments with common use-cases&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coder/coder-logstream-kube"&gt;&lt;strong&gt;Kubernetes Log Stream&lt;/strong&gt;&lt;/a&gt;: Stream Kubernetes Pod events to the Coder startup logs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coder/code-marketplace"&gt;&lt;strong&gt;Self-Hosted VS Code Extension Marketplace&lt;/strong&gt;&lt;/a&gt;: A private extension marketplace that works in restricted or airgapped networks integrating with &lt;a href="https://github.com/coder/code-server"&gt;code-server&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marketplace/actions/setup-coder"&gt;&lt;strong&gt;Setup Coder&lt;/strong&gt;&lt;/a&gt;: An action to setup coder CLI in GitHub workflows.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ElliotG/coder-oss-tf"&gt;&lt;strong&gt;Provision Coder with Terraform&lt;/strong&gt;&lt;/a&gt;: Provision Coder on Google GKE, Azure AKS, AWS EKS, DigitalOcean DOKS, IBMCloud K8s, OVHCloud K8s, and Scaleway K8s Kapsule with Terraform&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marketplace/actions/update-coder-template"&gt;&lt;strong&gt;Coder Template GitHub Action&lt;/strong&gt;&lt;/a&gt;: A GitHub Action that updates Coder templates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We are always happy to see new contributors to Coder. If you are new to the Coder codebase, we have &lt;a href="https://coder.com/docs/CONTRIBUTING"&gt;a guide on how to get started&lt;/a&gt;. We'd love to see your contributions!&lt;/p&gt; 
&lt;h2&gt;Hiring&lt;/h2&gt; 
&lt;p&gt;Apply &lt;a href="https://jobs.ashbyhq.com/coder?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=unknown"&gt;here&lt;/a&gt; if you're interested in joining our team.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pocketbase/pocketbase</title>
      <link>https://github.com/pocketbase/pocketbase</link>
      <description>&lt;p&gt;Open Source realtime backend in 1 file&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://pocketbase.io" target="_blank" rel="noopener"&gt; &lt;img src="https://i.imgur.com/5qimnm5.png" alt="PocketBase - open source backend in 1 file" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/pocketbase/pocketbase/actions/workflows/release.yaml" target="_blank" rel="noopener"&gt;&lt;img src="https://github.com/pocketbase/pocketbase/actions/workflows/release.yaml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt; &lt;a href="https://github.com/pocketbase/pocketbase/releases" target="_blank" rel="noopener"&gt;&lt;img src="https://img.shields.io/github/release/pocketbase/pocketbase.svg?sanitize=true" alt="Latest releases" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/pocketbase/pocketbase" target="_blank" rel="noopener"&gt;&lt;img src="https://godoc.org/github.com/pocketbase/pocketbase?status.svg?sanitize=true" alt="Go package documentation" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pocketbase.io"&gt;PocketBase&lt;/a&gt; is an open source Go backend that includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;embedded database (&lt;em&gt;SQLite&lt;/em&gt;) with &lt;strong&gt;realtime subscriptions&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;built-in &lt;strong&gt;files and users management&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;convenient &lt;strong&gt;Admin dashboard UI&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;and simple &lt;strong&gt;REST-ish API&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;For documentation and examples, please visit &lt;a href="https://pocketbase.io/docs"&gt;https://pocketbase.io/docs&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Please keep in mind that PocketBase is still under active development and therefore full backward compatibility is not guaranteed before reaching v1.0.0.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;API SDK clients&lt;/h2&gt; 
&lt;p&gt;The easiest way to interact with the PocketBase Web APIs is to use one of the official SDK clients:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;JavaScript - &lt;a href="https://github.com/pocketbase/js-sdk"&gt;pocketbase/js-sdk&lt;/a&gt;&lt;/strong&gt; (&lt;em&gt;Browser, Node.js, React Native&lt;/em&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dart - &lt;a href="https://github.com/pocketbase/dart-sdk"&gt;pocketbase/dart-sdk&lt;/a&gt;&lt;/strong&gt; (&lt;em&gt;Web, Mobile, Desktop, CLI&lt;/em&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You could also check the recommendations in &lt;a href="https://pocketbase.io/docs/how-to-use/"&gt;https://pocketbase.io/docs/how-to-use/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;h3&gt;Use as standalone app&lt;/h3&gt; 
&lt;p&gt;You could download the prebuilt executable for your platform from the &lt;a href="https://github.com/pocketbase/pocketbase/releases"&gt;Releases page&lt;/a&gt;. Once downloaded, extract the archive and run &lt;code&gt;./pocketbase serve&lt;/code&gt; in the extracted directory.&lt;/p&gt; 
&lt;p&gt;The prebuilt executables are based on the &lt;a href="https://github.com/pocketbase/pocketbase/raw/master/examples/base/main.go"&gt;&lt;code&gt;examples/base/main.go&lt;/code&gt; file&lt;/a&gt; and comes with the JS VM plugin enabled by default which allows to extend PocketBase with JavaScript (&lt;em&gt;for more details please refer to &lt;a href="https://pocketbase.io/docs/js-overview/"&gt;Extend with JavaScript&lt;/a&gt;&lt;/em&gt;).&lt;/p&gt; 
&lt;h3&gt;Use as a Go framework/toolkit&lt;/h3&gt; 
&lt;p&gt;PocketBase is distributed as a regular Go library package which allows you to build your own custom app specific business logic and still have a single portable executable at the end.&lt;/p&gt; 
&lt;p&gt;Here is a minimal example:&lt;/p&gt; 
&lt;ol start="0"&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://go.dev/doc/install"&gt;Install Go 1.23+&lt;/a&gt; (&lt;em&gt;if you haven't already&lt;/em&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create a new project directory with the following &lt;code&gt;main.go&lt;/code&gt; file inside it:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/pocketbase/pocketbase"
    "github.com/pocketbase/pocketbase/core"
)

func main() {
    app := pocketbase.New()

    app.OnServe().BindFunc(func(se *core.ServeEvent) error {
        // registers new "GET /hello" route
        se.Router.GET("/hello", func(re *core.RequestEvent) error {
            return re.String(200, "Hello world!")
        })

        return se.Next()
    })

    if err := app.Start(); err != nil {
        log.Fatal(err)
    }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To init the dependencies, run &lt;code&gt;go mod init myapp &amp;amp;&amp;amp; go mod tidy&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To start the application, run &lt;code&gt;go run main.go serve&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To build a statically linked executable, you can run &lt;code&gt;CGO_ENABLED=0 go build&lt;/code&gt; and then start the created executable with &lt;code&gt;./myapp serve&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;For more details please refer to &lt;a href="https://pocketbase.io/docs/go-overview/"&gt;Extend with Go&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Building and running the repo main.go example&lt;/h3&gt; 
&lt;p&gt;To build the minimal standalone executable, like the prebuilt ones in the releases page, you can simply run &lt;code&gt;go build&lt;/code&gt; inside the &lt;code&gt;examples/base&lt;/code&gt; directory:&lt;/p&gt; 
&lt;ol start="0"&gt; 
 &lt;li&gt;&lt;a href="https://go.dev/doc/install"&gt;Install Go 1.23+&lt;/a&gt; (&lt;em&gt;if you haven't already&lt;/em&gt;)&lt;/li&gt; 
 &lt;li&gt;Clone/download the repo&lt;/li&gt; 
 &lt;li&gt;Navigate to &lt;code&gt;examples/base&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build&lt;/code&gt; (&lt;em&gt;&lt;a href="https://go.dev/doc/install/source#environment"&gt;https://go.dev/doc/install/source#environment&lt;/a&gt;&lt;/em&gt;)&lt;/li&gt; 
 &lt;li&gt;Start the created executable by running &lt;code&gt;./base serve&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Note that the supported build targets by the pure Go SQLite driver at the moment are:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;darwin  amd64
darwin  arm64
freebsd amd64
freebsd arm64
linux   386
linux   amd64
linux   arm
linux   arm64
linux   ppc64le
linux   riscv64
linux   s390x
windows amd64
windows arm64
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;p&gt;PocketBase comes with mixed bag of unit and integration tests. To run them, use the standard &lt;code&gt;go test&lt;/code&gt; command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go test ./...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check also the &lt;a href="http://pocketbase.io/docs/testing"&gt;Testing guide&lt;/a&gt; to learn how to write your own custom application tests.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you discover a security vulnerability within PocketBase, please send an e-mail to &lt;strong&gt;support at pocketbase.io&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;All reports will be promptly addressed and you'll be credited in the fix release notes.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;PocketBase is free and open source project licensed under the &lt;a href="https://raw.githubusercontent.com/pocketbase/pocketbase/master/LICENSE.md"&gt;MIT License&lt;/a&gt;. You are free to do whatever you want with it, even offering it as a paid service.&lt;/p&gt; 
&lt;p&gt;You could help continuing its development by:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pocketbase/pocketbase/master/CONTRIBUTING.md"&gt;Contribute to the source code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pocketbase/pocketbase/issues"&gt;Suggest new features and report issues&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;PRs for new OAuth2 providers, bug fixes, code optimizations and documentation improvements are more than welcome.&lt;/p&gt; 
&lt;p&gt;But please refrain creating PRs for &lt;em&gt;new features&lt;/em&gt; without previously discussing the implementation details. PocketBase has a &lt;a href="https://github.com/orgs/pocketbase/projects/2"&gt;roadmap&lt;/a&gt; and I try to work on issues in specific order and such PRs often come in out of nowhere and skew all initial planning with tedious back-and-forth communication.&lt;/p&gt; 
&lt;p&gt;Don't get upset if I close your PR, even if it is well executed and tested. This doesn't mean that it will never be merged. Later we can always refer to it and/or take pieces of your implementation when the time comes to work on the issue (don't worry you'll be credited in the release notes).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tailscale/tailscale</title>
      <link>https://github.com/tailscale/tailscale</link>
      <description>&lt;p&gt;The easiest, most secure way to use WireGuard and 2FA.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tailscale&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://tailscale.com"&gt;https://tailscale.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Private WireGuard¬Æ networks made easy&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;This repository contains the majority of Tailscale's open source code. Notably, it includes the &lt;code&gt;tailscaled&lt;/code&gt; daemon and the &lt;code&gt;tailscale&lt;/code&gt; CLI tool. The &lt;code&gt;tailscaled&lt;/code&gt; daemon runs on Linux, Windows, &lt;a href="https://tailscale.com/kb/1065/macos-variants/"&gt;macOS&lt;/a&gt;, and to varying degrees on FreeBSD and OpenBSD. The Tailscale iOS and Android apps use this repo's code, but this repo doesn't contain the mobile GUI code.&lt;/p&gt; 
&lt;p&gt;Other &lt;a href="https://github.com/orgs/tailscale/repositories"&gt;Tailscale repos&lt;/a&gt; of note:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;the Android app is at &lt;a href="https://github.com/tailscale/tailscale-android"&gt;https://github.com/tailscale/tailscale-android&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;the Synology package is at &lt;a href="https://github.com/tailscale/tailscale-synology"&gt;https://github.com/tailscale/tailscale-synology&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;the QNAP package is at &lt;a href="https://github.com/tailscale/tailscale-qpkg"&gt;https://github.com/tailscale/tailscale-qpkg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;the Chocolatey packaging is at &lt;a href="https://github.com/tailscale/tailscale-chocolatey"&gt;https://github.com/tailscale/tailscale-chocolatey&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For background on which parts of Tailscale are open source and why, see &lt;a href="https://tailscale.com/opensource/"&gt;https://tailscale.com/opensource/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Using&lt;/h2&gt; 
&lt;p&gt;We serve packages for a variety of distros and platforms at &lt;a href="https://pkgs.tailscale.com/"&gt;https://pkgs.tailscale.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Other clients&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://tailscale.com/download"&gt;macOS, iOS, and Windows clients&lt;/a&gt; use the code in this repository but additionally include small GUI wrappers. The GUI wrappers on non-open source platforms are themselves not open source.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;We always require the latest Go release, currently Go 1.23. (While we build releases with our &lt;a href="https://github.com/tailscale/go/"&gt;Go fork&lt;/a&gt;, its use is not required.)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go install tailscale.com/cmd/tailscale{,d}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're packaging Tailscale for distribution, use &lt;code&gt;build_dist.sh&lt;/code&gt; instead, to burn commit IDs and version info into the binaries:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./build_dist.sh tailscale.com/cmd/tailscale
./build_dist.sh tailscale.com/cmd/tailscaled
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your distro has conventions that preclude the use of &lt;code&gt;build_dist.sh&lt;/code&gt;, please do the equivalent of what it does in your distro's way, so that bug reports contain useful version information.&lt;/p&gt; 
&lt;h2&gt;Bugs&lt;/h2&gt; 
&lt;p&gt;Please file any issues about this code or the hosted service on &lt;a href="https://github.com/tailscale/tailscale/issues"&gt;the issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;PRs welcome! But please file bugs. Commit messages should &lt;a href="https://docs.github.com/en/github/writing-on-github/autolinked-references-and-urls"&gt;reference bugs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We require &lt;a href="https://en.wikipedia.org/wiki/Developer_Certificate_of_Origin"&gt;Developer Certificate of Origin&lt;/a&gt; &lt;code&gt;Signed-off-by&lt;/code&gt; lines in commits.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/tailscale/tailscale/main/docs/commit-messages.md"&gt;commit-messages.md&lt;/a&gt; (or skim &lt;code&gt;git log&lt;/code&gt;) for our commit message style.&lt;/p&gt; 
&lt;h2&gt;About Us&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://tailscale.com/"&gt;Tailscale&lt;/a&gt; is primarily developed by the people at &lt;a href="https://github.com/orgs/tailscale/people"&gt;https://github.com/orgs/tailscale/people&lt;/a&gt;. For other contributors, see:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tailscale/tailscale/graphs/contributors"&gt;https://github.com/tailscale/tailscale/graphs/contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tailscale/tailscale-android/graphs/contributors"&gt;https://github.com/tailscale/tailscale-android/graphs/contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Legal&lt;/h2&gt; 
&lt;p&gt;WireGuard is a registered trademark of Jason A. Donenfeld.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RezaSi/go-interview-practice</title>
      <link>https://github.com/RezaSi/go-interview-practice</link>
      <description>&lt;p&gt;Go Interview Practice is a series of coding challenges to help you prepare for technical interviews in Go. Solve problems, submit your solutions, and receive instant feedback with automated testing. Track your progress with per-challenge scoreboards and improve your coding skills step by step.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Go Interview Practice&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/RezaSi/go-interview-practice/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/RezaSi/go-interview-practice?style=for-the-badge&amp;amp;logo=github&amp;amp;color=yellow" alt="GitHub Stars" /&gt;&lt;/a&gt; &lt;a href="https://golang.org/"&gt;&lt;img src="https://img.shields.io/badge/Go-1.19+-00ADD8?style=for-the-badge&amp;amp;logo=go" alt="Go Version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/RezaSi/go-interview-practice"&gt;&lt;img src="https://img.shields.io/badge/Challenges-30+-brightgreen?style=for-the-badge&amp;amp;logo=checkmarx" alt="Challenges" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;a href="https://trendshift.io/repositories/14255" target="_blank"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/14255" alt="RezaSi%2Fgo-interview-practice | Trendshift" style="width: 250px;" width="250" /&gt; &lt;/a&gt; 
 &lt;p&gt;&lt;strong&gt;‚≠ê Star the repo if it‚Äôs useful to you&lt;/strong&gt; &lt;br /&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Welcome to the &lt;strong&gt;Go Interview Practice&lt;/strong&gt; repository! Master Go programming and ace your technical interviews with our interactive coding challenges.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Visual Overview&lt;/h2&gt; 
&lt;h3&gt;Interactive Challenge Platform&lt;/h3&gt; 
&lt;p&gt;Our comprehensive web interface provides everything you need to practice and master Go programming:&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;video src="https://github.com/user-attachments/assets/23468aab-a032-4326-9d05-84de86c9128c" controls width="90%"&gt;&lt;/video&gt; 
 &lt;p&gt;&lt;em&gt;A brief introduction to the project&lt;/em&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Code &amp;amp; Test Experience&lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/images/challenge.png" alt="Go Interview Practice Web UI - challenge" width="48%" style="margin-right: 2%;" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/images/result.png" alt="Go Interview Practice Web UI - result" width="48%" /&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td align="center" width="48%"&gt; &lt;strong&gt;Interactive Code Editor&lt;/strong&gt;&lt;br /&gt; &lt;em&gt;Write, edit, and test your Go solutions&lt;br /&gt;with syntax highlighting and real-time feedback&lt;/em&gt; &lt;/td&gt; 
    &lt;td width="4%"&gt;&lt;/td&gt; 
    &lt;td align="center" width="48%"&gt; &lt;strong&gt;Instant Results &amp;amp; Analytics&lt;/strong&gt;&lt;br /&gt; &lt;em&gt;Get immediate test results, performance metrics,&lt;br /&gt;and detailed execution analysis&lt;/em&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Competitive Leaderboard&lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/images/scoreboard.png" alt="Go Interview Practice - Main Leaderboard" width="90%" /&gt; 
 &lt;p&gt;&lt;em&gt;Beautiful leaderboard showcasing top developers with challenge completion indicators, rankings, and achievements&lt;/em&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üèÜ Top 10 Leaderboard&lt;/h2&gt; 
&lt;p&gt;Our most accomplished Go developers, ranked by number of challenges completed:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The data below is automatically updated by GitHub Actions when challenge scoreboards change.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;üèÖ&lt;/th&gt; 
   &lt;th align="center"&gt;Developer&lt;/th&gt; 
   &lt;th align="center"&gt;Solved&lt;/th&gt; 
   &lt;th align="center"&gt;Rate&lt;/th&gt; 
   &lt;th align="center"&gt;Achievement&lt;/th&gt; 
   &lt;th align="left"&gt;Progress&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;ü•á&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/odelbos.png" width="24" height="24" style="border-radius: 50%;" /&gt;&lt;br /&gt;&lt;strong&gt;&lt;a href="https://github.com/odelbos"&gt;odelbos&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;29&lt;/strong&gt;/30&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;96.7%&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Master&lt;/td&gt; 
   &lt;td align="left"&gt;‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚¨ú‚úÖ‚úÖ‚úÖ&lt;br /&gt;‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;ü•à&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/mick4711.png" width="24" height="24" style="border-radius: 50%;" /&gt;&lt;br /&gt;&lt;strong&gt;&lt;a href="https://github.com/mick4711"&gt;mick4711&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;23&lt;/strong&gt;/30&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;76.7%&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Master&lt;/td&gt; 
   &lt;td align="left"&gt;‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚¨ú‚¨ú‚úÖ‚úÖ‚¨ú&lt;br /&gt;‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚¨ú‚¨ú‚úÖ‚úÖ‚¨ú‚¨ú‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;ü•â&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/y1hao.png" width="24" height="24" style="border-radius: 50%;" /&gt;&lt;br /&gt;&lt;strong&gt;&lt;a href="https://github.com/y1hao"&gt;y1hao&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;21&lt;/strong&gt;/30&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;70.0%&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Master&lt;/td&gt; 
   &lt;td align="left"&gt;‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚¨ú‚úÖ‚¨ú‚¨ú‚úÖ‚úÖ‚¨ú&lt;br /&gt;‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚¨ú‚¨ú‚¨ú‚úÖ‚¨ú‚¨ú‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;4&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/JackDalberg.png" width="24" height="24" style="border-radius: 50%;" /&gt;&lt;br /&gt;&lt;strong&gt;&lt;a href="https://github.com/JackDalberg"&gt;JackDalberg&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;20&lt;/strong&gt;/30&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;66.7%&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Master&lt;/td&gt; 
   &lt;td align="left"&gt;‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚¨ú‚úÖ‚¨ú‚¨ú‚úÖ‚úÖ‚¨ú&lt;br /&gt;‚¨ú‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚¨ú‚¨ú‚¨ú‚úÖ‚¨ú‚¨ú‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;5&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/Gandook.png" width="24" height="24" style="border-radius: 50%;" /&gt;&lt;br /&gt;&lt;strong&gt;&lt;a href="https://github.com/Gandook"&gt;Gandook&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;18&lt;/strong&gt;/30&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;60.0%&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Expert&lt;/td&gt; 
   &lt;td align="left"&gt;‚úÖ‚úÖ‚úÖ‚úÖ‚¨ú‚úÖ‚úÖ‚úÖ‚¨ú‚úÖ‚¨ú‚¨ú‚úÖ‚¨ú‚¨ú&lt;br /&gt;‚¨ú‚úÖ‚úÖ‚úÖ‚¨ú‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚¨ú‚úÖ‚¨ú‚¨ú‚¨ú&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;6&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/ashwinipatankar.png" width="24" height="24" style="border-radius: 50%;" /&gt;&lt;br /&gt;&lt;strong&gt;&lt;a href="https://github.com/ashwinipatankar"&gt;ashwinipatankar&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;18&lt;/strong&gt;/30&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;60.0%&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Expert&lt;/td&gt; 
   &lt;td align="left"&gt;‚úÖ‚úÖ‚úÖ‚¨ú‚úÖ‚úÖ‚úÖ‚¨ú‚úÖ‚úÖ‚¨ú‚¨ú‚úÖ‚úÖ‚¨ú&lt;br /&gt;‚¨ú‚úÖ‚úÖ‚úÖ‚¨ú‚úÖ‚úÖ‚úÖ‚¨ú‚¨ú‚¨ú‚úÖ‚¨ú‚¨ú‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;7&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/PolinaSvet.png" width="24" height="24" style="border-radius: 50%;" /&gt;&lt;br /&gt;&lt;strong&gt;&lt;a href="https://github.com/PolinaSvet"&gt;PolinaSvet&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;15&lt;/strong&gt;/30&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;50.0%&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Expert&lt;/td&gt; 
   &lt;td align="left"&gt;‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚¨ú‚¨ú‚úÖ‚¨ú‚¨ú‚úÖ‚úÖ‚¨ú&lt;br /&gt;‚úÖ‚úÖ‚úÖ‚¨ú‚¨ú‚úÖ‚úÖ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;8&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/KhaledMosaad.png" width="24" height="24" style="border-radius: 50%;" /&gt;&lt;br /&gt;&lt;strong&gt;&lt;a href="https://github.com/KhaledMosaad"&gt;KhaledMosaad&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;14&lt;/strong&gt;/30&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;46.7%&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Advanced&lt;/td&gt; 
   &lt;td align="left"&gt;‚úÖ‚úÖ‚úÖ‚¨ú‚¨ú‚úÖ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚úÖ‚¨ú‚¨ú&lt;br /&gt;‚¨ú‚úÖ‚úÖ‚úÖ‚¨ú‚úÖ‚úÖ‚úÖ‚¨ú‚¨ú‚úÖ‚úÖ‚¨ú‚¨ú‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;9&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/RezaSi.png" width="24" height="24" style="border-radius: 50%;" /&gt;&lt;br /&gt;&lt;strong&gt;&lt;a href="https://github.com/RezaSi"&gt;RezaSi&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;14&lt;/strong&gt;/30&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;46.7%&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Advanced&lt;/td&gt; 
   &lt;td align="left"&gt;‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚¨ú‚¨ú‚¨ú‚úÖ‚¨ú‚¨ú‚úÖ‚¨ú‚¨ú&lt;br /&gt;‚¨ú‚úÖ‚úÖ‚úÖ‚¨ú‚úÖ‚úÖ‚úÖ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;10&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/MYK12397.png" width="24" height="24" style="border-radius: 50%;" /&gt;&lt;br /&gt;&lt;strong&gt;&lt;a href="https://github.com/MYK12397"&gt;MYK12397&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;11&lt;/strong&gt;/30&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;36.7%&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Advanced&lt;/td&gt; 
   &lt;td align="left"&gt;‚¨ú‚úÖ‚úÖ‚¨ú‚úÖ‚úÖ‚úÖ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú&lt;br /&gt;‚¨ú‚úÖ‚úÖ‚úÖ‚¨ú‚úÖ‚¨ú‚¨ú‚úÖ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;‚úÖ Completed ‚Ä¢ ‚¨ú Not Completed&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;All 30 challenges shown in two rows&lt;/em&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;Updated automatically based on 30 available challenges&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Challenge Progress Overview&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Total Challenges Available&lt;/strong&gt;: 30&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Active Developers&lt;/strong&gt;: 82&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Most Challenges Solved&lt;/strong&gt;: 29 by odelbos&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END_CLASSIC_LEADERBOARD --&gt; 
&lt;h2&gt;üöÄ Package Challenges Leaderboard&lt;/h2&gt; 
&lt;p&gt;Master Go packages through hands-on challenges! Each package offers a structured learning path with real-world scenarios.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The data below is automatically updated by GitHub Actions when package challenge scoreboards change.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;üèÖ&lt;/th&gt; 
   &lt;th align="center"&gt;Developer&lt;/th&gt; 
   &lt;th align="center"&gt;Total Solved&lt;/th&gt; 
   &lt;th align="center"&gt;Packages&lt;/th&gt; 
   &lt;th align="center"&gt;Achievement&lt;/th&gt; 
   &lt;th align="left"&gt;Challenge Distribution&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;ü•á&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/odelbos.png" width="24" height="24" style="border-radius: 50%;" /&gt;&lt;br /&gt;&lt;strong&gt;&lt;a href="https://github.com/odelbos"&gt;odelbos&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;15&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;4&lt;/strong&gt; pkgs&lt;/td&gt; 
   &lt;td align="center"&gt;üî• Package Master&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;strong&gt;cobra&lt;/strong&gt;: 4 ‚Ä¢ &lt;strong&gt;fiber&lt;/strong&gt;: 3 ‚Ä¢ &lt;strong&gt;gin&lt;/strong&gt;: 3 ‚Ä¢ &lt;strong&gt;gorm&lt;/strong&gt;: 5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;ü•à&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/RezaSi.png" width="24" height="24" style="border-radius: 50%;" /&gt;&lt;br /&gt;&lt;strong&gt;&lt;a href="https://github.com/RezaSi"&gt;RezaSi&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;3&lt;/strong&gt; pkgs&lt;/td&gt; 
   &lt;td align="center"&gt;üöÄ Package Intermediate&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;strong&gt;cobra&lt;/strong&gt;: 1 ‚Ä¢ &lt;strong&gt;gin&lt;/strong&gt;: 1 ‚Ä¢ &lt;strong&gt;gorm&lt;/strong&gt;: 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;ü•â&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/ashwinipatankar.png" width="24" height="24" style="border-radius: 50%;" /&gt;&lt;br /&gt;&lt;strong&gt;&lt;a href="https://github.com/ashwinipatankar"&gt;ashwinipatankar&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;1&lt;/strong&gt; pkg&lt;/td&gt; 
   &lt;td align="center"&gt;üöÄ Package Intermediate&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;strong&gt;cobra&lt;/strong&gt;: 3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;4&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/GleeN987.png" width="24" height="24" style="border-radius: 50%;" /&gt;&lt;br /&gt;&lt;strong&gt;&lt;a href="https://github.com/GleeN987"&gt;GleeN987&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;1&lt;/strong&gt; pkg&lt;/td&gt; 
   &lt;td align="center"&gt;üå± Package Beginner&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;strong&gt;gin&lt;/strong&gt;: 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;5&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/MarioPaez.png" width="24" height="24" style="border-radius: 50%;" /&gt;&lt;br /&gt;&lt;strong&gt;&lt;a href="https://github.com/MarioPaez"&gt;MarioPaez&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;1&lt;/strong&gt; pkg&lt;/td&gt; 
   &lt;td align="center"&gt;üå± Package Beginner&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;strong&gt;gin&lt;/strong&gt;: 1&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;üöÄ &lt;strong&gt;Package Challenges&lt;/strong&gt; - Learn Go packages through practical, real-world scenarios&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;üì¶ Per-Package Progress&lt;/h3&gt; 
&lt;h4&gt;Cobra Package&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Rank&lt;/th&gt; 
   &lt;th align="center"&gt;Developer&lt;/th&gt; 
   &lt;th align="center"&gt;Completed&lt;/th&gt; 
   &lt;th align="left"&gt;Progress&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;ü•á&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;&lt;a href="https://github.com/odelbos"&gt;odelbos&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;4/4&lt;/td&gt; 
   &lt;td align="left"&gt;üü©üü©üü©üü©üü©üü©üü©üü©üü©üü© 100%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;ü•à&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;&lt;a href="https://github.com/ashwinipatankar"&gt;ashwinipatankar&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;3/4&lt;/td&gt; 
   &lt;td align="left"&gt;üü©üü©üü©üü©üü©üü©üü©‚¨ú‚¨ú‚¨ú 75%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;ü•â&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;&lt;a href="https://github.com/RezaSi"&gt;RezaSi&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;1/4&lt;/td&gt; 
   &lt;td align="left"&gt;üü©üü©‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú 25%&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Fiber Package&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Rank&lt;/th&gt; 
   &lt;th align="center"&gt;Developer&lt;/th&gt; 
   &lt;th align="center"&gt;Completed&lt;/th&gt; 
   &lt;th align="left"&gt;Progress&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;ü•á&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;&lt;a href="https://github.com/odelbos"&gt;odelbos&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;3/4&lt;/td&gt; 
   &lt;td align="left"&gt;üü©üü©üü©üü©üü©üü©üü©‚¨ú‚¨ú‚¨ú 75%&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Gin Package&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Rank&lt;/th&gt; 
   &lt;th align="center"&gt;Developer&lt;/th&gt; 
   &lt;th align="center"&gt;Completed&lt;/th&gt; 
   &lt;th align="left"&gt;Progress&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;ü•á&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;&lt;a href="https://github.com/odelbos"&gt;odelbos&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;3/4&lt;/td&gt; 
   &lt;td align="left"&gt;üü©üü©üü©üü©üü©üü©üü©‚¨ú‚¨ú‚¨ú 75%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;ü•à&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;&lt;a href="https://github.com/GleeN987"&gt;GleeN987&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;1/4&lt;/td&gt; 
   &lt;td align="left"&gt;üü©üü©‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú 25%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;ü•â&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;&lt;a href="https://github.com/MarioPaez"&gt;MarioPaez&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;1/4&lt;/td&gt; 
   &lt;td align="left"&gt;üü©üü©‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú 25%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;4&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;&lt;a href="https://github.com/RezaSi"&gt;RezaSi&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;1/4&lt;/td&gt; 
   &lt;td align="left"&gt;üü©üü©‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú 25%&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Gorm Package&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Rank&lt;/th&gt; 
   &lt;th align="center"&gt;Developer&lt;/th&gt; 
   &lt;th align="center"&gt;Completed&lt;/th&gt; 
   &lt;th align="left"&gt;Progress&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;ü•á&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;&lt;a href="https://github.com/odelbos"&gt;odelbos&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;5/5&lt;/td&gt; 
   &lt;td align="left"&gt;üü©üü©üü©üü©üü©üü©üü©üü©üü©üü© 100%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;ü•à&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;&lt;a href="https://github.com/RezaSi"&gt;RezaSi&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;1/5&lt;/td&gt; 
   &lt;td align="left"&gt;üü©üü©‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú 20%&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;üìä Package Challenge Statistics&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Total Package Challenges Available&lt;/strong&gt;: 17&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Active Package Learners&lt;/strong&gt;: 5&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Available Packages&lt;/strong&gt;: 4 (cobra, fiber, gin, gorm)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Most Package Challenges Solved&lt;/strong&gt;: 15 by odelbos&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END_PACKAGE_LEADERBOARD --&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Interactive Web UI&lt;/strong&gt; - Code, test, and submit solutions in your browser&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automated Testing&lt;/strong&gt; - Get immediate feedback on your solutions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automated Scoreboards&lt;/strong&gt; - Solutions are automatically scored and ranked&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Profile Badges&lt;/strong&gt; - Beautiful auto-updating badges for GitHub profiles, LinkedIn, and portfolios&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance Analytics&lt;/strong&gt; - Track execution time and memory usage for your solutions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comprehensive Learning&lt;/strong&gt; - Each challenge includes detailed explanations and resources&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Progressive Difficulty&lt;/strong&gt; - From beginner to advanced Go concepts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI Interview Simulation&lt;/strong&gt; - Practice with AI-powered code review and interviewer questions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;AI Interview Simulation&lt;/h2&gt; 
&lt;p&gt;Transform your coding practice into realistic interview scenarios with our AI-powered features:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Real-Time Code Review&lt;/strong&gt; - Get instant feedback on code quality, complexity analysis, and improvement suggestions&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Dynamic Interview Questions&lt;/strong&gt; - AI generates follow-up questions based on your solution approach&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Progressive Hints&lt;/strong&gt; - 4-level hint system from subtle nudges to detailed explanations&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Multi-LLM Support&lt;/strong&gt; - Works with Gemini (recommended), OpenAI, or Claude&lt;/p&gt; 
&lt;p&gt;Simply add your API key to experience interview-style feedback that adapts to your code and challenges you with realistic technical questions.&lt;/p&gt; 
&lt;h3&gt;AI Interview Experience&lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/images/interview-code-review.png" alt="AI Code Review - Real-time feedback and analysis" width="48%" style="margin-right: 2%;" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/images/interview-questions.png" alt="AI Interview Questions - Dynamic follow-up questions" width="48%" /&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td align="center" width="48%"&gt; &lt;strong&gt;AI Code Review&lt;/strong&gt;&lt;br /&gt; &lt;em&gt;Get instant feedback on code quality, complexity analysis,&lt;br /&gt;and improvement suggestions from AI&lt;/em&gt; &lt;/td&gt; 
    &lt;td align="center" width="48%"&gt; &lt;strong&gt;Dynamic Interview Questions&lt;/strong&gt;&lt;br /&gt; &lt;em&gt;AI generates follow-up questions based on your&lt;br /&gt;solution approach and coding patterns&lt;/em&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: You must fork this repository first before cloning, otherwise you won't be able to push your solutions or create pull requests!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Option 1: Web UI (Recommended)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. First, fork this repository on GitHub
#    Go to https://github.com/RezaSi/go-interview-practice
#    Click the "Fork" button in the top-right corner

# 2. Clone your forked repository (replace 'yourusername' with your GitHub username)
git clone https://github.com/yourusername/go-interview-practice.git
cd go-interview-practice

# 3. Start the web interface
cd web-ui
go run main.go

# 4. Open http://localhost:8080 in your browser

# 5. Optional: Enable AI Features (Recommended) ü§ñ
# Add your free Gemini API key to enable AI interview simulation
echo "AI_PROVIDER=gemini" &amp;gt; web-ui/.env
echo "GEMINI_API_KEY=your_actual_api_key_here" &amp;gt;&amp;gt; web-ui/.env
# Get your free API key: https://makersuite.google.com/app/apikey
# Note: .env files are automatically ignored by git for security
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;After solving challenges and submitting solutions:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Your solutions will be automatically saved to your local repository&lt;/li&gt; 
 &lt;li&gt;Follow the provided Git commands to commit and push your changes&lt;/li&gt; 
 &lt;li&gt;Create a pull request to contribute your solutions back to the main project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Option 2: GitHub Codespaces (Cloud Development + Web UI)&lt;/h3&gt; 
&lt;p&gt;Want to get started instantly without setting up anything locally? Use GitHub Codespaces!&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork this repository&lt;/strong&gt; (if you haven't already)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Open in Codespaces&lt;/strong&gt;: Click the green "Code" button on your forked repository, then select "Codespaces" tab&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create Codespace&lt;/strong&gt;: Click "Create codespace on main"&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Start the Web UI&lt;/strong&gt;: Once the codespace loads, open a terminal and run: &lt;pre&gt;&lt;code class="language-bash"&gt;cd web-ui
go run main.go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Optional: Enable AI Features&lt;/strong&gt;: Add your Gemini API key: &lt;pre&gt;&lt;code class="language-bash"&gt;echo "AI_PROVIDER=gemini" &amp;gt; .env
echo "GEMINI_API_KEY=your_actual_api_key_here" &amp;gt;&amp;gt; .env
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Access the Web UI&lt;/strong&gt;: Click on the "Ports" tab in the bottom panel, then click the "Open in Browser" button next to port 8080&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Benefits of using Codespaces:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;No local setup required&lt;/li&gt; 
 &lt;li&gt;Pre-configured Go environment&lt;/li&gt; 
 &lt;li&gt;Full VS Code experience in the browser&lt;/li&gt; 
 &lt;li&gt;Automatic port forwarding for the web UI&lt;/li&gt; 
 &lt;li&gt;All dependencies pre-installed&lt;/li&gt; 
 &lt;li&gt;Works on any device with a browser&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Option 3: Command Line&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Fork the repository first (see step 1 above)
# 2. Clone your fork and set up a challenge workspace
git clone https://github.com/yourusername/go-interview-practice.git
cd go-interview-practice
./create_submission.sh 1  # For challenge #1

# 3. Implement your solution in the editor of your choice

# 4. Run tests
cd challenge-1
./run_tests.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Scoreboards&lt;/h2&gt; 
&lt;p&gt;Each challenge has its own scoreboard that tracks:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Successful submissions by user&lt;/li&gt; 
 &lt;li&gt;Execution time rankings&lt;/li&gt; 
 &lt;li&gt;Code efficiency metrics&lt;/li&gt; 
 &lt;li&gt;Completion dates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;View global and per-challenge scoreboards in the Web UI to compare your solutions with others.&lt;/p&gt; 
&lt;h2&gt;Profile Badges for Contributors&lt;/h2&gt; 
&lt;p&gt;Showcase your Go programming achievements with auto-updating profile badges for GitHub profiles, portfolios, and personal websites.&lt;/p&gt; 
&lt;h3&gt;Examples&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/RezaSi/go-interview-practice"&gt;&lt;img src="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/badges/RezaSi.svg?sanitize=true" alt="Go Interview Practice Achievement" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/RezaSi/go-interview-practice"&gt;&lt;img src="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/badges/RezaSi_compact.svg?sanitize=true" alt="Go Interview Practice Compact" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Quick Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-markdown"&gt;[![Go Interview Practice Achievement](https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/badges/YOUR_USERNAME.svg)](https://github.com/RezaSi/go-interview-practice)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After contributing solutions, your badges are automatically generated in &lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/badges/"&gt;&lt;code&gt;badges/YOUR_USERNAME_badges.md&lt;/code&gt;&lt;/a&gt; with multiple formats ready to use.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/docs/profile-badges-guide.md"&gt;Complete Badge Guide &amp;amp; Examples ‚Üí&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Challenge Categories&lt;/h2&gt; 
&lt;h3&gt;Beginner&lt;/h3&gt; 
&lt;p&gt;Perfect for those new to Go or brushing up on fundamentals&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-1"&gt;Challenge 1&lt;/a&gt;&lt;/strong&gt;: Sum of Two Numbers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-2"&gt;Challenge 2&lt;/a&gt;&lt;/strong&gt;: Reverse a String&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-3"&gt;Challenge 3&lt;/a&gt;&lt;/strong&gt;: Employee Data Management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-6"&gt;Challenge 6&lt;/a&gt;&lt;/strong&gt;: Word Frequency Counter&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-18"&gt;Challenge 18&lt;/a&gt;&lt;/strong&gt;: Temperature Converter&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-21"&gt;Challenge 21&lt;/a&gt;&lt;/strong&gt;: Binary Search Implementation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-22"&gt;Challenge 22&lt;/a&gt;&lt;/strong&gt;: Greedy Coin Change&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Intermediate&lt;/h3&gt; 
&lt;p&gt;For developers familiar with Go who want to deepen their knowledge&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-4"&gt;Challenge 4&lt;/a&gt;&lt;/strong&gt;: Concurrent Graph BFS Queries&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-5"&gt;Challenge 5&lt;/a&gt;&lt;/strong&gt;: HTTP Authentication Middleware&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-7"&gt;Challenge 7&lt;/a&gt;&lt;/strong&gt;: Bank Account with Error Handling&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-10"&gt;Challenge 10&lt;/a&gt;&lt;/strong&gt;: Polymorphic Shape Calculator&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-13"&gt;Challenge 13&lt;/a&gt;&lt;/strong&gt;: SQL Database Operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-14"&gt;Challenge 14&lt;/a&gt;&lt;/strong&gt;: Microservices with gRPC&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-16"&gt;Challenge 16&lt;/a&gt;&lt;/strong&gt;: Performance Optimization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-17"&gt;Challenge 17&lt;/a&gt;&lt;/strong&gt;: Interactive Debugging Tutorial&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-19"&gt;Challenge 19&lt;/a&gt;&lt;/strong&gt;: Slice Operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-20"&gt;Challenge 20&lt;/a&gt;&lt;/strong&gt;: Circuit Breaker Pattern&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-23"&gt;Challenge 23&lt;/a&gt;&lt;/strong&gt;: String Pattern Matching&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-27"&gt;Challenge 27&lt;/a&gt;&lt;/strong&gt;: Go Generics Data Structures&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-30"&gt;Challenge 30&lt;/a&gt;&lt;/strong&gt;: Context Management Implementation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced&lt;/h3&gt; 
&lt;p&gt;Challenging problems that test mastery of Go and computer science concepts&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-8"&gt;Challenge 8&lt;/a&gt;&lt;/strong&gt;: Chat Server with Channels&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-9"&gt;Challenge 9&lt;/a&gt;&lt;/strong&gt;: RESTful Book Management API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-11"&gt;Challenge 11&lt;/a&gt;&lt;/strong&gt;: Concurrent Web Content Aggregator&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-12"&gt;Challenge 12&lt;/a&gt;&lt;/strong&gt;: File Processing Pipeline&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-15"&gt;Challenge 15&lt;/a&gt;&lt;/strong&gt;: OAuth2 Authentication&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-24"&gt;Challenge 24&lt;/a&gt;&lt;/strong&gt;: Dynamic Programming - Longest Increasing Subsequence&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-25"&gt;Challenge 25&lt;/a&gt;&lt;/strong&gt;: Graph Algorithms - Shortest Path&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-26"&gt;Challenge 26&lt;/a&gt;&lt;/strong&gt;: Regular Expression Text Processor&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-28"&gt;Challenge 28&lt;/a&gt;&lt;/strong&gt;: Cache Implementation with Multiple Eviction Policies&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/challenge-29"&gt;Challenge 29&lt;/a&gt;&lt;/strong&gt;: Rate Limiter Implementation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to Use This Repository&lt;/h2&gt; 
&lt;h3&gt;1. Explore Challenges&lt;/h3&gt; 
&lt;p&gt;Browse challenges through the web UI or in the code repository. Each challenge includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Detailed problem statement&lt;/li&gt; 
 &lt;li&gt;Function signature to implement&lt;/li&gt; 
 &lt;li&gt;Comprehensive test cases&lt;/li&gt; 
 &lt;li&gt;Learning resources&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2. Implement Your Solution&lt;/h3&gt; 
&lt;p&gt;Write code that solves the challenge requirements and passes all test cases.&lt;/p&gt; 
&lt;h3&gt;3. Test &amp;amp; Refine&lt;/h3&gt; 
&lt;p&gt;Use the built-in testing tools to validate your solution, then refine it for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Correctness&lt;/li&gt; 
 &lt;li&gt;Efficiency&lt;/li&gt; 
 &lt;li&gt;Code quality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;4. Submit &amp;amp; Compare&lt;/h3&gt; 
&lt;p&gt;Submit your passing solution to be added to the scoreboard:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Your solution is automatically tested and scored&lt;/li&gt; 
 &lt;li&gt;Execution time and resource usage are recorded&lt;/li&gt; 
 &lt;li&gt;Your solution is ranked among other submissions&lt;/li&gt; 
 &lt;li&gt;Access detailed performance metrics to optimize further&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;5. Learn &amp;amp; Progress&lt;/h3&gt; 
&lt;p&gt;Review the learning materials to deepen your understanding of the concepts used.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! You can contribute in several ways:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Submit Solutions:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Solve existing classic or package challenges&lt;/li&gt; 
 &lt;li&gt;Submit your solutions via pull request&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Add New Challenges:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Classic Challenges:&lt;/strong&gt; Algorithm and data structure problems&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Package Challenges:&lt;/strong&gt; Framework-specific practical applications (Gin, Cobra, GORM, etc.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Quick Steps:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Choose challenge type (classic or package-based)&lt;/li&gt; 
 &lt;li&gt;Follow our template structure&lt;/li&gt; 
 &lt;li&gt;Submit a pull request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for detailed guidelines on both challenge types.&lt;/p&gt; 
&lt;h2&gt;üè¢ Premium Business Sponsors&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Thank you to our premium sponsors who make this project possible!&lt;/em&gt;&lt;/p&gt; 
&lt;!-- 
Premium sponsor logos will appear here when we have them. Format:
&lt;div align="center"&gt;
&lt;a href="https://company-website.com" target="_blank"&gt;
&lt;img src="https://company-logo-url.com/logo.png" alt="Company Name" height="60" style="margin: 0 20px;"&gt;
&lt;/a&gt;
&lt;/div&gt;
--&gt; 
&lt;p&gt;&lt;em&gt;Interested in premium sponsorship? &lt;a href="https://github.com/sponsors/RezaSi"&gt;Contact us&lt;/a&gt; to feature your company logo here and on our platform!&lt;/em&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href="https://raw.githubusercontent.com/RezaSi/go-interview-practice/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/RezaSi/go-interview-practice"&gt;&lt;img src="https://starchart.cc/RezaSi/go-interview-practice.svg?variant=adaptive" alt="Stargazers over time" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Happy Coding!&lt;/strong&gt; üíª&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>