<rss version="2.0">
  <channel>
    <title>GitHub Go Daily Trending</title>
    <description>Daily Trending of Go in GitHub</description>
    <pubDate>Mon, 01 Sep 2025 01:34:53 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>qichiyuhub/rule</title>
      <link>https://github.com/qichiyuhub/rule</link>
      <description>&lt;p&gt;Clash、Sing-box、等分流规则&lt;/p&gt;&lt;hr&gt;&lt;p&gt;本仓库规则只作为视频演示用途，考虑到兼容性，通用性，不能满足所有人的需求，请fork到自己仓库根据自己实际情况进行修改，参考七尺宇频道相关教程。&lt;br /&gt; 也可联系我进行定制&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>henrygd/beszel</title>
      <link>https://github.com/henrygd/beszel</link>
      <description>&lt;p&gt;Lightweight server monitoring hub with historical data, docker stats, and alerts.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Beszel&lt;/h1&gt; 
&lt;p&gt;Beszel is a lightweight server monitoring platform that includes Docker statistics, historical data, and alert functions.&lt;/p&gt; 
&lt;p&gt;It has a friendly web interface, simple configuration, and is ready to use out of the box. It supports automatic backup, multi-user, OAuth authentication, and API access.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/henrygd/beszel-agent"&gt;&lt;img src="https://img.shields.io/docker/image-size/henrygd/beszel-agent/latest?logo=docker&amp;amp;label=agent%20image%20size" alt="agent Docker Image Size" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/henrygd/beszel"&gt;&lt;img src="https://img.shields.io/docker/image-size/henrygd/beszel/latest?logo=docker&amp;amp;label=hub%20image%20size" alt="hub Docker Image Size" /&gt;&lt;/a&gt; &lt;a href="https://github.com/henrygd/beszel/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/henrygd/beszel?color=%239944ee" alt="MIT license" /&gt;&lt;/a&gt; &lt;a href="https://crowdin.com/project/beszel"&gt;&lt;img src="https://badges.crowdin.net/beszel/localized.svg?sanitize=true" alt="Crowdin" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://henrygd-assets.b-cdn.net/beszel/screenshot-new.png" alt="Screenshot of Beszel dashboard and system page, side by side. The dashboard shows metrics from multiple connected systems, while the system page shows detailed metrics for a single system." /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Lightweight&lt;/strong&gt;: Smaller and less resource-intensive than leading solutions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt;: Easy setup with little manual configuration required.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker stats&lt;/strong&gt;: Tracks CPU, memory, and network usage history for each container.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Alerts&lt;/strong&gt;: Configurable alerts for CPU, memory, disk, bandwidth, temperature, load average, and status.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt;: Users manage their own systems. Admins can share systems across users.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OAuth / OIDC&lt;/strong&gt;: Supports many OAuth2 providers. Password auth can be disabled.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic backups&lt;/strong&gt;: Save to and restore from disk or S3-compatible storage.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- - **REST API**: Use or update your data in your own scripts and applications. --&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;Beszel consists of two main components: the &lt;strong&gt;hub&lt;/strong&gt; and the &lt;strong&gt;agent&lt;/strong&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Hub&lt;/strong&gt;: A web application built on &lt;a href="https://pocketbase.io/"&gt;PocketBase&lt;/a&gt; that provides a dashboard for viewing and managing connected systems.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Agent&lt;/strong&gt;: Runs on each system you want to monitor and communicates system metrics to the hub.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://beszel.dev/guide/getting-started"&gt;quick start guide&lt;/a&gt; and other documentation is available on our website, &lt;a href="https://beszel.dev"&gt;beszel.dev&lt;/a&gt;. You'll be up and running in a few minutes.&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://beszel.dev/image/dashboard.png" alt="Dashboard" /&gt; &lt;img src="https://beszel.dev/image/system-full.png" alt="System page" /&gt; &lt;img src="https://beszel.dev/image/settings-notifications.png" alt="Notification Settings" /&gt;&lt;/p&gt; 
&lt;h2&gt;Supported metrics&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;CPU usage&lt;/strong&gt; - Host system and Docker / Podman containers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Memory usage&lt;/strong&gt; - Host system and containers. Includes swap and ZFS ARC.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Disk usage&lt;/strong&gt; - Host system. Supports multiple partitions and devices.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Disk I/O&lt;/strong&gt; - Host system. Supports multiple partitions and devices.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Network usage&lt;/strong&gt; - Host system and containers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Load average&lt;/strong&gt; - Host system.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Temperature&lt;/strong&gt; - Host system sensors.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GPU usage / temperature / power draw&lt;/strong&gt; - Nvidia and AMD only. Must use binary agent.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Battery&lt;/strong&gt; - Host system battery charge.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Help and discussion&lt;/h2&gt; 
&lt;p&gt;Please search existing issues and discussions before opening a new one. I try my best to respond, but may not always have time to do so.&lt;/p&gt; 
&lt;h4&gt;Bug reports and feature requests&lt;/h4&gt; 
&lt;p&gt;Bug reports and detailed feature requests should be posted on &lt;a href="https://github.com/henrygd/beszel/issues"&gt;GitHub issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Support and general discussion&lt;/h4&gt; 
&lt;p&gt;Support requests and general discussion can be posted on &lt;a href="https://github.com/henrygd/beszel/discussions"&gt;GitHub discussions&lt;/a&gt; or the community-run &lt;a href="https://matrix.to/#/#beszel:matrix.org"&gt;Matrix room&lt;/a&gt;: &lt;code&gt;#beszel:matrix.org&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Beszel is licensed under the MIT License. See the &lt;a href="https://raw.githubusercontent.com/henrygd/beszel/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>netbirdio/netbird</title>
      <link>https://github.com/netbirdio/netbird</link>
      <description>&lt;p&gt;Connect your devices into a secure WireGuard®-based overlay network with SSO, MFA and granular access controls.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;p align="center"&gt; &lt;img width="234" src="https://raw.githubusercontent.com/netbirdio/netbird/main/docs/media/logo-full.png" /&gt; &lt;/p&gt; 
 &lt;p&gt; &lt;a href="https://img.shields.io/badge/license-BSD--3-blue)"&gt; &lt;img src="https://sonarcloud.io/api/project_badges/measure?project=netbirdio_netbird&amp;amp;metric=alert_status" /&gt; &lt;/a&gt; &lt;a href="https://github.com/netbirdio/netbird/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/license-BSD--3-blue" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://docs.netbird.io/slack-url"&gt; &lt;img src="https://img.shields.io/badge/slack-@netbird-red.svg?logo=slack" /&gt; &lt;/a&gt; &lt;a href="https://forum.netbird.io"&gt; &lt;img src="https://img.shields.io/badge/community forum-@netbird-red.svg?logo=discourse" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://gurubase.io/g/netbird"&gt; &lt;img src="https://img.shields.io/badge/Gurubase-Ask%20NetBird%20Guru-006BFF" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;strong&gt; Start using NetBird at &lt;a href="https://netbird.io/pricing"&gt;netbird.io&lt;/a&gt; &lt;br /&gt; See &lt;a href="https://netbird.io/docs/"&gt;Documentation&lt;/a&gt; &lt;br /&gt; Join our &lt;a href="https://docs.netbird.io/slack-url"&gt;Slack channel&lt;/a&gt; or our &lt;a href="https://forum.netbird.io"&gt;Community forum&lt;/a&gt; &lt;br /&gt; &lt;/strong&gt; &lt;br /&gt; &lt;a href="https://registry.terraform.io/providers/netbirdio/netbird/latest"&gt; New: NetBird terraform provider &lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;strong&gt;NetBird combines a configuration-free peer-to-peer private network and a centralized access control system in a single platform, making it easy to create secure private networks for your organization or home.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Connect.&lt;/strong&gt; NetBird creates a WireGuard-based overlay network that automatically connects your machines over an encrypted tunnel, leaving behind the hassle of opening ports, complex firewall rules, VPN gateways, and so forth.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Secure.&lt;/strong&gt; NetBird enables secure remote access by applying granular access policies while allowing you to manage them intuitively from a single place. Works universally on any infrastructure.&lt;/p&gt; 
&lt;h3&gt;Open Source Network Security in a Single Platform&lt;/h3&gt; 
&lt;img width="1188" alt="centralized-network-management 1" src="https://github.com/user-attachments/assets/c28cc8e4-15d2-4d2f-bb97-a6433db39d56" /&gt; 
&lt;h3&gt;NetBird on Lawrence Systems (Video)&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Kwrff6h0rEw"&gt;&lt;img src="https://img.youtube.com/vi/Kwrff6h0rEw/0.jpg" alt="Watch the video" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Key features&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Connectivity&lt;/th&gt; 
   &lt;th&gt;Management&lt;/th&gt; 
   &lt;th&gt;Security&lt;/th&gt; 
   &lt;th&gt;Automation&lt;/th&gt; 
   &lt;th&gt;Platforms&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Kernel WireGuard&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://github.com/netbirdio/dashboard"&gt;Admin Web UI&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/installation#running-net-bird-with-sso-login"&gt;SSO &amp;amp; MFA support&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/api"&gt;Public API&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Linux&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Peer-to-peer connections&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Auto peer discovery and configuration&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-network-access"&gt;Access control - groups &amp;amp; rules&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/register-machines-using-setup-keys"&gt;Setup keys for bulk network provisioning&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Mac&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Connection relay fallback&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/selfhosted/identity-providers"&gt;IdP integrations&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/audit-events-logging"&gt;Activity logging&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/selfhosted/selfhosted-quickstart"&gt;Self-hosting quickstart script&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Windows&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/routing-traffic-to-private-networks"&gt;Routes to external networks&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-dns-in-your-network"&gt;Private DNS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-posture-checks"&gt;Device posture checks&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] IdP groups sync with JWT&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Android&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] NAT traversal with BPF&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/add-users-to-your-network"&gt;Multiuser support&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Peer-to-peer encryption&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] iOS&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://netbird.io/knowledge-hub/the-first-quantum-resistant-mesh-vpn"&gt;Quantum-resistance with Rosenpass&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] OpenWRT&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/enforce-periodic-user-authentication"&gt;Periodic re-authentication&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/netbird-on-faas"&gt;Serverless&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Docker&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Quickstart with NetBird Cloud&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and install NetBird at &lt;a href="https://app.netbird.io/install"&gt;https://app.netbird.io/install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow the steps to sign-up with Google, Microsoft, GitHub or your email address.&lt;/li&gt; 
 &lt;li&gt;Check NetBird &lt;a href="https://app.netbird.io/"&gt;admin UI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Add more machines.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quickstart with self-hosted NetBird&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This is the quickest way to try self-hosted NetBird. It should take around 5 minutes to get started if you already have a public domain and a VM. Follow the &lt;a href="https://docs.netbird.io/selfhosted/selfhosted-guide#advanced-guide-with-a-custom-identity-provider"&gt;Advanced guide with a custom identity provider&lt;/a&gt; for installations with different IDPs.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Infrastructure requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A Linux VM with at least &lt;strong&gt;1CPU&lt;/strong&gt; and &lt;strong&gt;2GB&lt;/strong&gt; of memory.&lt;/li&gt; 
 &lt;li&gt;The VM should be publicly accessible on TCP ports &lt;strong&gt;80&lt;/strong&gt; and &lt;strong&gt;443&lt;/strong&gt; and UDP ports: &lt;strong&gt;3478&lt;/strong&gt;, &lt;strong&gt;49152-65535&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Public domain&lt;/strong&gt; name pointing to the VM.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Software requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker installed on the VM with the docker-compose plugin (&lt;a href="https://docs.docker.com/engine/install/"&gt;Docker installation guide&lt;/a&gt;) or docker with docker-compose in version 2 or higher.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jqlang.github.io/jq/"&gt;jq&lt;/a&gt; installed. In most distributions Usually available in the official repositories and can be installed with &lt;code&gt;sudo apt install jq&lt;/code&gt; or &lt;code&gt;sudo yum install jq&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://curl.se/"&gt;curl&lt;/a&gt; installed. Usually available in the official repositories and can be installed with &lt;code&gt;sudo apt install curl&lt;/code&gt; or &lt;code&gt;sudo yum install curl&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and run the installation script:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export NETBIRD_DOMAIN=netbird.example.com; curl -fsSL https://github.com/netbirdio/netbird/releases/latest/download/getting-started-with-zitadel.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Once finished, you can manage the resources via &lt;code&gt;docker-compose&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;A bit on NetBird internals&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Every machine in the network runs &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/client/"&gt;NetBird Agent (or Client)&lt;/a&gt; that manages WireGuard.&lt;/li&gt; 
 &lt;li&gt;Every agent connects to &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/management/"&gt;Management Service&lt;/a&gt; that holds network state, manages peer IPs, and distributes network updates to agents (peers).&lt;/li&gt; 
 &lt;li&gt;NetBird agent uses WebRTC ICE implemented in &lt;a href="https://github.com/pion/ice"&gt;pion/ice library&lt;/a&gt; to discover connection candidates when establishing a peer-to-peer connection between machines.&lt;/li&gt; 
 &lt;li&gt;Connection candidates are discovered with the help of &lt;a href="https://en.wikipedia.org/wiki/STUN"&gt;STUN&lt;/a&gt; servers.&lt;/li&gt; 
 &lt;li&gt;Agents negotiate a connection through &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/signal/"&gt;Signal Service&lt;/a&gt; passing p2p encrypted messages with candidates.&lt;/li&gt; 
 &lt;li&gt;Sometimes the NAT traversal is unsuccessful due to strict NATs (e.g. mobile carrier-grade NAT) and a p2p connection isn't possible. When this occurs the system falls back to a relay server called &lt;a href="https://en.wikipedia.org/wiki/Traversal_Using_Relays_around_NAT"&gt;TURN&lt;/a&gt;, and a secure WireGuard tunnel is established via the TURN server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/coturn/coturn"&gt;Coturn&lt;/a&gt; is the one that has been successfully used for STUN and TURN in NetBird setups.&lt;/p&gt; 
&lt;p float="left" align="middle"&gt; &lt;img src="https://docs.netbird.io/docs-static/img/architecture/high-level-dia.png" width="700" /&gt; &lt;/p&gt; 
&lt;p&gt;See a complete &lt;a href="https://docs.netbird.io/about-netbird/how-netbird-works#architecture"&gt;architecture overview&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;Community projects&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/physk/netbird-installer"&gt;NetBird installer script&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://galaxy.ansible.com/ui/repo/published/dominion_solutions/netbird/"&gt;NetBird ansible collection by Dominion Solutions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;main&lt;/code&gt; branch may be in an &lt;em&gt;unstable or even broken state&lt;/em&gt; during development. For stable versions, see &lt;a href="https://github.com/netbirdio/netbird/releases"&gt;releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Support acknowledgement&lt;/h3&gt; 
&lt;p&gt;In November 2022, NetBird joined the &lt;a href="https://www.forschung-it-sicherheit-kommunikationssysteme.de/foerderung/bekanntmachungen/startup-secure"&gt;StartUpSecure program&lt;/a&gt; sponsored by The Federal Ministry of Education and Research of The Federal Republic of Germany. Together with &lt;a href="https://cispa.de/en"&gt;CISPA Helmholtz Center for Information Security&lt;/a&gt; NetBird brings the security best practices and simplicity to private networking.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/700848/203091324-c6d311a0-22b5-4b05-a288-91cbc6cdcc46.png" alt="CISPA_Logo_BLACK_EN_RZ_RGB (1)" /&gt;&lt;/p&gt; 
&lt;h3&gt;Testimonials&lt;/h3&gt; 
&lt;p&gt;We use open-source technologies like &lt;a href="https://www.wireguard.com/"&gt;WireGuard®&lt;/a&gt;, &lt;a href="https://github.com/pion/ice"&gt;Pion ICE (WebRTC)&lt;/a&gt;, &lt;a href="https://github.com/coturn/coturn"&gt;Coturn&lt;/a&gt;, and &lt;a href="https://rosenpass.eu"&gt;Rosenpass&lt;/a&gt;. We very much appreciate the work these guys are doing and we'd greatly appreciate if you could support them in any way (e.g., by giving a star or a contribution).&lt;/p&gt; 
&lt;h3&gt;Legal&lt;/h3&gt; 
&lt;p&gt;This repository is licensed under BSD-3-Clause license that applies to all parts of the repository except for the directories management/, signal/ and relay/. Those directories are licensed under the GNU Affero General Public License version 3.0 (AGPLv3). See the respective LICENSE files inside each directory.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;WireGuard&lt;/em&gt; and the &lt;em&gt;WireGuard&lt;/em&gt; logo are &lt;a href="https://www.wireguard.com/trademark-policy/"&gt;registered trademarks&lt;/a&gt; of Jason A. Donenfeld.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gohugoio/hugo</title>
      <link>https://github.com/gohugoio/hugo</link>
      <description>&lt;p&gt;The world’s fastest framework for building websites.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://gohugo.io/"&gt;&lt;img src="https://raw.githubusercontent.com/gohugoio/gohugoioTheme/master/static/images/hugo-logo-wide.svg?sanitize=true" alt="Hugo" width="565" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A fast and flexible static site generator built with love by &lt;a href="https://github.com/bep"&gt;bep&lt;/a&gt;, &lt;a href="https://github.com/spf13"&gt;spf13&lt;/a&gt;, and &lt;a href="https://github.com/gohugoio/hugo/graphs/contributors"&gt;friends&lt;/a&gt; in &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://godoc.org/github.com/gohugoio/hugo"&gt;&lt;img src="https://godoc.org/github.com/gohugoio/hugo?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gohugoio/hugo/actions?query=workflow%3ATest"&gt;&lt;img src="https://github.com/gohugoio/hugo/workflows/Test/badge.svg?sanitize=true" alt="Tests on Linux, MacOS and Windows" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/gohugoio/hugo"&gt;&lt;img src="https://goreportcard.com/badge/github.com/gohugoio/hugo" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://gohugo.io"&gt;Website&lt;/a&gt; | &lt;a href="https://gohugo.io/installation"&gt;Installation&lt;/a&gt; | &lt;a href="https://gohugo.io/documentation"&gt;Documentation&lt;/a&gt; | &lt;a href="https://discourse.gohugo.io"&gt;Support&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/gohugoio/hugo/master/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; | &lt;a rel="me" href="https://fosstodon.org/@gohugoio"&gt;Mastodon&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Hugo is a &lt;a href="https://en.wikipedia.org/wiki/Static_site_generator"&gt;static site generator&lt;/a&gt; written in &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt;, optimized for speed and designed for flexibility. With its advanced templating system and fast asset pipelines, Hugo renders a complete site in seconds, often less.&lt;/p&gt; 
&lt;p&gt;Due to its flexible framework, multilingual support, and powerful taxonomy system, Hugo is widely used to create:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Corporate, government, nonprofit, education, news, event, and project sites&lt;/li&gt; 
 &lt;li&gt;Documentation sites&lt;/li&gt; 
 &lt;li&gt;Image portfolios&lt;/li&gt; 
 &lt;li&gt;Landing pages&lt;/li&gt; 
 &lt;li&gt;Business, professional, and personal blogs&lt;/li&gt; 
 &lt;li&gt;Resumes and CVs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Use Hugo's embedded web server during development to instantly see changes to content, structure, behavior, and presentation. Then deploy the site to your host, or push changes to your Git provider for automated builds and deployment.&lt;/p&gt; 
&lt;p&gt;Hugo's fast asset pipelines include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Image processing – Convert, resize, crop, rotate, adjust colors, apply filters, overlay text and images, and extract EXIF data&lt;/li&gt; 
 &lt;li&gt;JavaScript bundling – Transpile TypeScript and JSX to JavaScript, bundle, tree shake, minify, create source maps, and perform SRI hashing.&lt;/li&gt; 
 &lt;li&gt;Sass processing – Transpile Sass to CSS, bundle, tree shake, minify, create source maps, perform SRI hashing, and integrate with PostCSS&lt;/li&gt; 
 &lt;li&gt;Tailwind CSS processing – Compile Tailwind CSS utility classes into standard CSS, bundle, tree shake, optimize, minify, perform SRI hashing, and integrate with PostCSS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And with &lt;a href="https://gohugo.io/hugo-modules/"&gt;Hugo Modules&lt;/a&gt;, you can share content, assets, data, translations, themes, templates, and configuration with other projects via public or private Git repositories.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://gohugo.io/about/features/"&gt;features&lt;/a&gt; section of the documentation for a comprehensive summary of Hugo's capabilities.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p float="left"&gt; &lt;a href="https://www.linode.com/?utm_campaign=hugosponsor&amp;amp;utm_medium=banner&amp;amp;utm_source=hugogithub" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/gohugoio/hugoDocs/master/assets/images/sponsors/linode-logo_standard_light_medium.png" width="200" alt="Linode" /&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://www.jetbrains.com/go/?utm_source=OSS&amp;amp;utm_medium=referral&amp;amp;utm_campaign=hugo" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/gohugoio/hugoDocs/master/assets/images/sponsors/goland.svg?sanitize=true" width="200" alt="The complete IDE crafted for professional Go developers." /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Editions&lt;/h2&gt; 
&lt;p&gt;Hugo is available in three editions: standard, extended, and extended/deploy. While the standard edition provides core functionality, the extended and extended/deploy editions offer advanced features.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Feature&lt;/th&gt; 
   &lt;th align="center"&gt;extended edition&lt;/th&gt; 
   &lt;th align="center"&gt;extended/deploy edition&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Encode to the WebP format when &lt;a href="https://gohugo.io/content-management/image-processing/"&gt;processing images&lt;/a&gt;. You can decode WebP images with any edition.&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://gohugo.io/functions/css/sass/"&gt;Transpile Sass to CSS&lt;/a&gt; using the embedded LibSass transpiler. You can use the &lt;a href="https://gohugo.io/functions/css/sass/#dart-sass"&gt;Dart Sass&lt;/a&gt; transpiler with any edition.&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Deploy your site directly to a Google Cloud Storage bucket, an AWS S3 bucket, or an Azure Storage container. See&amp;nbsp;&lt;a href="https://gohugo.io/hosting-and-deployment/hugo-deploy/"&gt;details&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Unless your specific deployment needs require the extended/deploy edition, we recommend the extended edition.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Install Hugo from a &lt;a href="https://github.com/gohugoio/hugo/releases/latest"&gt;prebuilt binary&lt;/a&gt;, package manager, or package repository. Please see the installation instructions for your operating system:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/installation/macos"&gt;macOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/installation/linux"&gt;Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/installation/windows"&gt;Windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/installation/bsd"&gt;DragonFly BSD, FreeBSD, NetBSD, and OpenBSD&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build from source&lt;/h2&gt; 
&lt;p&gt;Prerequisites to build Hugo from source:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Standard edition: Go 1.24.0 or later&lt;/li&gt; 
 &lt;li&gt;Extended edition: Go 1.24.0 or later, and GCC&lt;/li&gt; 
 &lt;li&gt;Extended/deploy edition: Go 1.24.0 or later, and GCC&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Build the standard edition:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;go install github.com/gohugoio/hugo@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build the extended edition:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;CGO_ENABLED=1 go install -tags extended github.com/gohugoio/hugo@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build the extended/deploy edition:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;CGO_ENABLED=1 go install -tags extended,withdeploy github.com/gohugoio/hugo@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#gohugoio/hugo&amp;amp;Timeline"&gt;&lt;img src="https://api.star-history.com/svg?repos=gohugoio/hugo&amp;amp;type=Timeline" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Hugo's &lt;a href="https://gohugo.io/documentation"&gt;documentation&lt;/a&gt; includes installation instructions, a quick start guide, conceptual explanations, reference information, and examples.&lt;/p&gt; 
&lt;p&gt;Please submit documentation issues and pull requests to the &lt;a href="https://github.com/gohugoio/hugoDocs"&gt;documentation repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Please &lt;strong&gt;do not use the issue queue&lt;/strong&gt; for questions or troubleshooting. Unless you are certain that your issue is a software defect, use the &lt;a href="https://discourse.gohugo.io"&gt;forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Hugo’s &lt;a href="https://discourse.gohugo.io"&gt;forum&lt;/a&gt; is an active community of users and developers who answer questions, share knowledge, and provide examples. A quick search of over 20,000 topics will often answer your question. Please be sure to read about &lt;a href="https://discourse.gohugo.io/t/requesting-help/9132"&gt;requesting help&lt;/a&gt; before asking your first question.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;You can contribute to the Hugo project by:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Answering questions on the &lt;a href="https://discourse.gohugo.io"&gt;forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Improving the &lt;a href="https://gohugo.io/documentation"&gt;documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Monitoring the &lt;a href="https://github.com/gohugoio/hugo/issues"&gt;issue queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Creating or improving &lt;a href="https://themes.gohugo.io/"&gt;themes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Squashing &lt;a href="https://github.com/gohugoio/hugo/issues?q=is%3Aopen+is%3Aissue+label%3ABug"&gt;bugs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please submit documentation issues and pull requests to the &lt;a href="https://github.com/gohugoio/hugoDocs"&gt;documentation repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you have an idea for an enhancement or new feature, create a new topic on the &lt;a href="https://discourse.gohugo.io"&gt;forum&lt;/a&gt; in the "Feature" category. This will help you to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Determine if the capability already exists&lt;/li&gt; 
 &lt;li&gt;Measure interest&lt;/li&gt; 
 &lt;li&gt;Refine the concept&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If there is sufficient interest, &lt;a href="https://github.com/gohugoio/hugo/issues/new?labels=Proposal%2C+NeedsTriage&amp;amp;template=feature_request.md"&gt;create a proposal&lt;/a&gt;. Do not submit a pull request until the project lead accepts the proposal.&lt;/p&gt; 
&lt;p&gt;For a complete guide to contributing to Hugo, see the &lt;a href="https://raw.githubusercontent.com/gohugoio/hugo/master/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Dependencies&lt;/h2&gt; 
&lt;p&gt;Hugo stands on the shoulders of great open source libraries. Run &lt;code&gt;hugo env --logLevel info&lt;/code&gt; to display a list of dependencies.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;See current dependencies&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-text"&gt;github.com/BurntSushi/locker="v0.0.0-20171006230638-a6e239ea1c69"
github.com/PuerkitoBio/goquery="v1.10.1"
github.com/alecthomas/chroma/v2="v2.15.0"
github.com/andybalholm/cascadia="v1.3.3"
github.com/armon/go-radix="v1.0.1-0.20221118154546-54df44f2176c"
github.com/bep/clocks="v0.5.0"
github.com/bep/debounce="v1.2.0"
github.com/bep/gitmap="v1.6.0"
github.com/bep/goat="v0.5.0"
github.com/bep/godartsass/v2="v2.3.2"
github.com/bep/golibsass="v1.2.0"
github.com/bep/gowebp="v0.3.0"
github.com/bep/imagemeta="v0.8.4"
github.com/bep/lazycache="v0.7.0"
github.com/bep/logg="v0.4.0"
github.com/bep/mclib="v1.20400.20402"
github.com/bep/overlayfs="v0.9.2"
github.com/bep/simplecobra="v0.5.0"
github.com/bep/tmc="v0.5.1"
github.com/cespare/xxhash/v2="v2.3.0"
github.com/clbanning/mxj/v2="v2.7.0"
github.com/cpuguy83/go-md2man/v2="v2.0.4"
github.com/disintegration/gift="v1.2.1"
github.com/dlclark/regexp2="v1.11.5"
github.com/dop251/goja="v0.0.0-20250125213203-5ef83b82af17"
github.com/evanw/esbuild="v0.24.2"
github.com/fatih/color="v1.18.0"
github.com/frankban/quicktest="v1.14.6"
github.com/fsnotify/fsnotify="v1.8.0"
github.com/getkin/kin-openapi="v0.129.0"
github.com/ghodss/yaml="v1.0.0"
github.com/go-openapi/jsonpointer="v0.21.0"
github.com/go-openapi/swag="v0.23.0"
github.com/go-sourcemap/sourcemap="v2.1.4+incompatible"
github.com/gobuffalo/flect="v1.0.3"
github.com/gobwas/glob="v0.2.3"
github.com/gohugoio/go-i18n/v2="v2.1.3-0.20230805085216-e63c13218d0e"
github.com/gohugoio/hashstructure="v0.5.0"
github.com/gohugoio/httpcache="v0.7.0"
github.com/gohugoio/hugo-goldmark-extensions/extras="v0.2.0"
github.com/gohugoio/hugo-goldmark-extensions/passthrough="v0.3.0"
github.com/gohugoio/locales="v0.14.0"
github.com/gohugoio/localescompressed="v1.0.1"
github.com/golang/freetype="v0.0.0-20170609003504-e2365dfdc4a0"
github.com/google/go-cmp="v0.6.0"
github.com/google/pprof="v0.0.0-20250208200701-d0013a598941"
github.com/gorilla/websocket="v1.5.3"
github.com/hairyhenderson/go-codeowners="v0.7.0"
github.com/hashicorp/golang-lru/v2="v2.0.7"
github.com/jdkato/prose="v1.2.1"
github.com/josharian/intern="v1.0.0"
github.com/kr/pretty="v0.3.1"
github.com/kr/text="v0.2.0"
github.com/kyokomi/emoji/v2="v2.2.13"
github.com/lucasb-eyer/go-colorful="v1.2.0"
github.com/mailru/easyjson="v0.7.7"
github.com/makeworld-the-better-one/dither/v2="v2.4.0"
github.com/marekm4/color-extractor="v1.2.1"
github.com/mattn/go-colorable="v0.1.13"
github.com/mattn/go-isatty="v0.0.20"
github.com/mattn/go-runewidth="v0.0.9"
github.com/mazznoer/csscolorparser="v0.1.5"
github.com/mitchellh/mapstructure="v1.5.1-0.20231216201459-8508981c8b6c"
github.com/mohae/deepcopy="v0.0.0-20170929034955-c48cc78d4826"
github.com/muesli/smartcrop="v0.3.0"
github.com/niklasfasching/go-org="v1.7.0"
github.com/oasdiff/yaml3="v0.0.0-20241210130736-a94c01f36349"
github.com/oasdiff/yaml="v0.0.0-20241210131133-6b86fb107d80"
github.com/olekukonko/tablewriter="v0.0.5"
github.com/pbnjay/memory="v0.0.0-20210728143218-7b4eea64cf58"
github.com/pelletier/go-toml/v2="v2.2.3"
github.com/perimeterx/marshmallow="v1.1.5"
github.com/pkg/browser="v0.0.0-20240102092130-5ac0b6a4141c"
github.com/pkg/errors="v0.9.1"
github.com/rivo/uniseg="v0.4.7"
github.com/rogpeppe/go-internal="v1.13.1"
github.com/russross/blackfriday/v2="v2.1.0"
github.com/sass/libsass="3.6.6"
github.com/spf13/afero="v1.11.0"
github.com/spf13/cast="v1.7.1"
github.com/spf13/cobra="v1.8.1"
github.com/spf13/fsync="v0.10.1"
github.com/spf13/pflag="v1.0.6"
github.com/tdewolff/minify/v2="v2.20.37"
github.com/tdewolff/parse/v2="v2.7.15"
github.com/tetratelabs/wazero="v1.8.2"
github.com/webmproject/libwebp="v1.3.2"
github.com/yuin/goldmark-emoji="v1.0.4"
github.com/yuin/goldmark="v1.7.8"
go.uber.org/automaxprocs="v1.5.3"
golang.org/x/crypto="v0.33.0"
golang.org/x/exp="v0.0.0-20250210185358-939b2ce775ac"
golang.org/x/image="v0.24.0"
golang.org/x/mod="v0.23.0"
golang.org/x/net="v0.35.0"
golang.org/x/sync="v0.11.0"
golang.org/x/sys="v0.30.0"
golang.org/x/text="v0.22.0"
golang.org/x/tools="v0.30.0"
golang.org/x/xerrors="v0.0.0-20240903120638-7835f813f4da"
gonum.org/v1/plot="v0.15.0"
google.golang.org/protobuf="v1.36.5"
gopkg.in/yaml.v2="v2.4.0"
gopkg.in/yaml.v3="v3.0.1"
oss.terrastruct.com/d2="v0.6.9"
oss.terrastruct.com/util-go="v0.0.0-20241005222610-44c011a04896"
rsc.io/qr="v0.2.0"
software.sslmate.com/src/go-pkcs12="v0.2.0"
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>jorgerojas26/lazysql</title>
      <link>https://github.com/jorgerojas26/lazysql</link>
      <description>&lt;p&gt;A cross-platform TUI database management tool written in Go.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name="readme-top"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/jorgerojas26/lazysql/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/jorgerojas26/lazysql?style=for-the-badge" alt="Contributors" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jorgerojas26/lazysql/network/members"&gt;&lt;img src="https://img.shields.io/github/forks/jorgerojas26/lazysql?style=for-the-badge" alt="Forks" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jorgerojas26/lazysql/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/jorgerojas26/lazysql?style=for-the-badge" alt="Stargazers" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jorgerojas26/lazysql/issues"&gt;&lt;img src="https://img.shields.io/github/issues/jorgerojas26/lazysql?style=for-the-badge" alt="Issues" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jorgerojas26/lazysql/raw/main/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/github/license/jorgerojas26/lazysql.svg?style=for-the-badge" alt="MIT License" /&gt;&lt;/a&gt; &lt;a href="https://linkedin.com/in/jorgerojas26"&gt;&lt;img src="https://img.shields.io/badge/-LinkedIn-black.svg?style=for-the-badge&amp;amp;logo=linkedin&amp;amp;colorB=555" alt="LinkedIn" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- PROJECT LOGO --&gt; 
&lt;div align="center"&gt; 
 &lt;!-- &lt;a href="https://github.com/jorgerojas26/lazysql"&gt; --&gt; 
 &lt;!--   &lt;img src="images/logo.png" alt="Logo" width="80" height="80"&gt; --&gt; 
 &lt;!-- &lt;/a&gt; --&gt; 
 &lt;h3 align="center"&gt;LAZYSQL&lt;/h3&gt; 
 &lt;p align="center"&gt; A cross-platform TUI database management tool written in Go. &lt;/p&gt; 
&lt;/div&gt; 
&lt;!-- TABLE OF CONTENTS --&gt; 
&lt;details&gt; 
 &lt;summary&gt;Table of Contents&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#about-the-project"&gt;About The Project&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#built-with"&gt;Built With&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt; &lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#getting-started"&gt;Getting Started&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#commands"&gt;Commands&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#keybindings"&gt;Keybindings&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#contact"&gt;Contact&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#acknowledgments"&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;!-- ABOUT THE PROJECT --&gt; 
&lt;h2&gt;About The Project&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/images/lazysql-connection-selection.png" alt="Product Name Screen Shot" /&gt; &lt;img src="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/images/lazysql.png" alt="Product Name Screen Shot" /&gt;&lt;/p&gt; 
&lt;p&gt;This project is heavily inspired by &lt;a href="https://github.com/jesseduffield/lazygit"&gt;Lazygit&lt;/a&gt;, which I think is the best TUI client for Git.&lt;/p&gt; 
&lt;p&gt;I wanted to have a tool like that, but for SQL. I didn't find one that fits my needs, so I created one myself.&lt;/p&gt; 
&lt;p&gt;I live in the terminal, so if you are like me, this tool can become handy for you too.&lt;/p&gt; 
&lt;p&gt;This is my first Open Source project, also, this is my first Go project. I am not a brilliant programmer. I am just a typical JavaScript developer that wanted to learn a new language, I also wanted a TUI SQL Client, so blanca y en botella, leche! (white and bottled).&lt;/p&gt; 
&lt;p&gt;This project is in ALPHA stage, please feel free to complain about my spaghetti code.&lt;/p&gt; 
&lt;p&gt;I use Lazysql daily in my full-time job as a full-stack javascript developer in its current (buggy xD) state. So, the plan is to improve and fix my little boy as a side-project in my free time.&lt;/p&gt; 
&lt;h3&gt;Built With&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/Golang-gray?style=for-the-badge&amp;amp;logo=go" alt="Golang" /&gt; &lt;img src="https://img.shields.io/badge/tview-gray?style=for-the-badge&amp;amp;logo=go" alt="Golang" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Cross-platform (macOS, Windows, Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Vim Keybindings&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Can manage multiple connections (Backspace)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Tabs&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; SQL Editor (CTRL + e)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- GETTING STARTED --&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;h4&gt;Homebrew&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew tap jorgerojas26/lazysql
brew install lazysql
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Install with go package manager&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go install github.com/jorgerojas26/lazysql@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Binary Releases&lt;/h4&gt; 
&lt;p&gt;For Windows, macOS or Linux, you can download a binary release &lt;a href="https://github.com/jorgerojas26/lazysql/releases"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Third party (maintained by the community)&lt;/h4&gt; 
&lt;p&gt;Arch Linux users can install it from the AUR with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;paru -S lazysql

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yay -S lazysql

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or install it manual with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://aur.archlinux.org/lazysql.git
cd lazysql
makepkg -si
&lt;/code&gt;&lt;/pre&gt; 
&lt;p align="right"&gt;(&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#readme-top"&gt;back to top&lt;/a&gt;)&lt;/p&gt; 
&lt;!-- USAGE EXAMPLES --&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;If the &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt; environment variable is set, the configuration file will be located at:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;${XDG_CONFIG_HOME}/lazysql/config.toml&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If not, the configuration file will be located at:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows: &lt;code&gt;%APPDATA%\lazysql\config.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;macOS: &lt;code&gt;~/Library/Application Support/lazysql/config.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Linux: &lt;code&gt;~/.config/lazysql/config.toml&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The configuration file is a TOML file and can be used to define multiple connections.&lt;/p&gt; 
&lt;h3&gt;Example configuration&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[[database]]
Name = 'Production database'
Provider = 'postgres'
DBName = 'foo'
URL = 'postgres://postgres:urlencodedpassword@localhost:${port}/foo'
Commands = [
  { Command = 'ssh -tt remote-bastion -L ${port}:localhost:5432', WaitForPort = '${port}' }
]
[[database]]
Name = 'Development database'
Provider = 'postgres'
DBName = 'foo'
URL = 'postgres://postgres:urlencodedpassword@localhost:5432/foo'
[application]
DefaultPageSize = 300
DisableSidebar = false
SidebarOverlay = false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;[aplication]&lt;/code&gt; section is used to define some app settings. Not all settings are available yet, this is a work in progress.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For a list of keyboard shortcuts press &lt;code&gt;?&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Open the TUI with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ lazysql
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To launch lazysql with the ability to pick from the saved connections.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ lazysql [connection_url]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To launch lazysql and connect to database at [connection_url].&lt;/p&gt; 
&lt;h3&gt;Connect to a DB&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start &lt;code&gt;lazysql&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Create a new connection (press &lt;code&gt;n&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Provide a name for the connection as well as the URL to connect to (see &lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#example-connection-urls"&gt;example connection URL&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Connect to the DB (press &lt;code&gt;&amp;lt;Enter&amp;gt;&lt;/code&gt;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;If you already have a connection set up:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start &lt;code&gt;lazysql&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Select the right connection (press &lt;code&gt;j&lt;/code&gt; and &lt;code&gt;h&lt;/code&gt; for navigation)&lt;/li&gt; 
 &lt;li&gt;Connect to the DB (press &lt;code&gt;c&lt;/code&gt; or &lt;code&gt;&amp;lt;Enter&amp;gt;&lt;/code&gt;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Create a table&lt;/h3&gt; 
&lt;p&gt;There is currently no way to create a table from the TUI. However you can run the query to create the table as a SQL-Query, inside the &lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#execute-sql-querys"&gt;SQL Editor&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can update the tree by pressing &lt;code&gt;R&lt;/code&gt;, so you can see your newly created table.&lt;/p&gt; 
&lt;h3&gt;Execute SQL querys&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Press &lt;code&gt;&amp;lt;Ctrl+E&amp;gt;&lt;/code&gt; to open the built-in SQL Editor&lt;/li&gt; 
 &lt;li&gt;Write the SQL query&lt;/li&gt; 
 &lt;li&gt;Press &lt;code&gt;&amp;lt;Ctrl+R&amp;gt;&lt;/code&gt; to execute the SQL query&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;To switch back to the table-tree press &lt;code&gt;H&lt;/code&gt;&lt;/p&gt; 
 &lt;p&gt;After executing a &lt;code&gt;SELECT&lt;/code&gt;-query a table will be displayed under the SQL-Editor with the query-result. &lt;br /&gt; To switch focus back to SQL-Editor press &lt;code&gt;/&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Open/view a table&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Expand the table-tree by pressing &lt;code&gt;e&lt;/code&gt; or &lt;code&gt;&amp;lt;Enter&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Select the table you want to view 
  &lt;ul&gt; 
   &lt;li&gt;next node &lt;code&gt;j&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;previous node &lt;code&gt;k&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;last node &lt;code&gt;G&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;first node &lt;code&gt;g&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Press &lt;code&gt;&amp;lt;Enter&amp;gt;&lt;/code&gt; to open the table&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;To switch back to the table-tree press &lt;code&gt;H&lt;/code&gt; &lt;br /&gt; To switch back to the table press &lt;code&gt;L&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Filter rows&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#openview-a-table"&gt;Open a table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Press &lt;code&gt;/&lt;/code&gt; to focus the filter input&lt;/li&gt; 
 &lt;li&gt;Write a &lt;code&gt;WHERE&lt;/code&gt;-clause to filter the table&lt;/li&gt; 
 &lt;li&gt;Press &lt;code&gt;&amp;lt;Enter&amp;gt;&lt;/code&gt; to submit your filter&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;To remove the filter, focuse the filter input (press &lt;code&gt;/&lt;/code&gt;) and press &lt;code&gt;&amp;lt;Esc&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Insert a row&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#openview-a-table"&gt;Open a table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Press &lt;code&gt;1&lt;/code&gt; to switch to the record tab&lt;/li&gt; 
 &lt;li&gt;Press &lt;code&gt;o&lt;/code&gt; to insert a new row&lt;/li&gt; 
 &lt;li&gt;Fill out all columns&lt;/li&gt; 
 &lt;li&gt;Press &lt;code&gt;&amp;lt;Ctrl+S&amp;gt;&lt;/code&gt; to save the changes&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Edit a column&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#openview-a-table"&gt;Open a table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Press &lt;code&gt;1&lt;/code&gt; to switch to the record tab&lt;/li&gt; 
 &lt;li&gt;Move to the column you want to edit&lt;/li&gt; 
 &lt;li&gt;Press &lt;code&gt;c&lt;/code&gt; to edit, Press &lt;code&gt;&amp;lt;Enter&amp;gt;&lt;/code&gt; to submit&lt;/li&gt; 
 &lt;li&gt;Press &lt;code&gt;&amp;lt;Ctrl+S&amp;gt;&lt;/code&gt; to save the changes&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p align="right"&gt;(&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#readme-top"&gt;back to top&lt;/a&gt;)&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; MySQL&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; PostgreSQL&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; SQLite&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; MSSQL&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; MongoDB&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Support for multiple RDBMS is a work in progress.&lt;/p&gt; 
&lt;!-- COMMANDS --&gt; 
&lt;h2&gt;Commands&lt;/h2&gt; 
&lt;p&gt;In some cases, mostly when connecting to remote databases, it might be necessary to run a custom command before being able to connect to the database. For example when you can only access the database through a remote bastion, you would probably first need to open an SSH tunnel by running the following command in a separate terminal:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ssh remote-bastion -L 5432:localhost:5432
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In order to make it easier to run these commands, lazysql supports running custom commands before connecting to the database. You can define these commands in the configuration file like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[[database]]
Name = 'server'
Provider = 'postgres'
DBName = 'foo'
URL = 'postgres://postgres:password@localhost:${port}/foo'
Commands = [
  { Command = 'ssh -tt remote-bastion -L ${port}:localhost:5432', WaitForPort = '${port}' }
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;Command&lt;/code&gt; field is required and can contain any command that you would normally run in your terminal. The &lt;code&gt;WaitForPort&lt;/code&gt; field is optional and can be used to wait for a specific port to be open before continuing.&lt;/p&gt; 
&lt;p&gt;When you define the &lt;code&gt;${port}&lt;/code&gt; variable in the URL field, lazysql will automatically replace it with a random free port number. This port number will then be used in the connection URL and is available in the &lt;code&gt;Commands&lt;/code&gt; field so that you can use it to configure the command.&lt;/p&gt; 
&lt;p&gt;You can even chain commands to, for example, connect to a remote server and then to a postgres container running in a remote k8s cluster:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[[database]]
Name = 'container'
Provider = 'postgres'
DBName = 'foo'
URL = 'postgres://postgres:password@localhost:${port}/foo'
Commands = [
  { Command = 'ssh -tt remote-bastion -L 6443:localhost:6443', WaitForPort = '6443' },
  { Command = 'kubectl port-forward service/postgres ${port}:5432 --kubeconfig /path/to/kube.conf', WaitForPort = '${port}' }
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- KEYBINDINGS --&gt; 
&lt;h2&gt;Keybindings&lt;/h2&gt; 
&lt;h3&gt;Global&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Key&lt;/th&gt; 
   &lt;th&gt;Action&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;q&lt;/td&gt; 
   &lt;td&gt;Quit&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CTRL + e&lt;/td&gt; 
   &lt;td&gt;Open SQL editor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Backspace&lt;/td&gt; 
   &lt;td&gt;Return to connection selection&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;?&lt;/td&gt; 
   &lt;td&gt;Show keybindings popup&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Table&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Key&lt;/th&gt; 
   &lt;th&gt;Action&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;c&lt;/td&gt; 
   &lt;td&gt;Edit table cell&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;d&lt;/td&gt; 
   &lt;td&gt;Delete row&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;o&lt;/td&gt; 
   &lt;td&gt;Add row&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;/&lt;/td&gt; 
   &lt;td&gt;Focus the filter input or SQL editor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CTRL + s&lt;/td&gt; 
   &lt;td&gt;Commit changes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;gt;&lt;/td&gt; 
   &lt;td&gt;Next page&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;lt;&lt;/td&gt; 
   &lt;td&gt;Previous page&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;K&lt;/td&gt; 
   &lt;td&gt;Sort ASC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;J&lt;/td&gt; 
   &lt;td&gt;Sort DESC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;H&lt;/td&gt; 
   &lt;td&gt;Focus tree panel&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CTRL+[&lt;/td&gt; 
   &lt;td&gt;Focus previous tab&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CTRL+]&lt;/td&gt; 
   &lt;td&gt;Focus next tab&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;X&lt;/td&gt; 
   &lt;td&gt;Close current tab&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;R&lt;/td&gt; 
   &lt;td&gt;Refresh the current table&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Tree&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Key&lt;/th&gt; 
   &lt;th&gt;Action&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;L&lt;/td&gt; 
   &lt;td&gt;Focus table panel&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;G&lt;/td&gt; 
   &lt;td&gt;Focus last database tree node&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;g&lt;/td&gt; 
   &lt;td&gt;Focus first database tree node&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CTRL+u&lt;/td&gt; 
   &lt;td&gt;Scroll 5 items up&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CTRL+d&lt;/td&gt; 
   &lt;td&gt;Scroll 5 items down&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;SQL Editor&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Key&lt;/th&gt; 
   &lt;th&gt;Action&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CTRL + R&lt;/td&gt; 
   &lt;td&gt;Run the SQL statement&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CTRL + Space&lt;/td&gt; 
   &lt;td&gt;Open external editor (Linux only)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Specific editor for lazysql can be set by &lt;code&gt;$SQL_EDITOR&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Specific terminal for opening editor can be set by &lt;code&gt;$SQL_TERMINAL&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Example connection URLs&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;postgres://user:pass@localhost/dbname
pg://user:pass@localhost/dbname?sslmode=disable
mysql://user:pass@localhost/dbname
mysql:/var/run/mysqld/mysqld.sock
sqlserver://user:pass@remote-host.com/dbname
mssql://user:pass@remote-host.com/instance/dbname
ms://user:pass@remote-host.com:port/instance/dbname?keepAlive=10
oracle://user:pass@somehost.com/sid
sap://user:pass@localhost/dbname
file:myfile.sqlite3?loc=auto
/path/to/sqlite/file/test.db
odbc+postgres://user:pass@localhost:port/dbname?option1=
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- ROADMAP --&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Support for NoSQL databases&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Columns and indexes creation through TUI&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Table tree input filter&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Custom keybindings&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Show keybindings on a modal&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Rewrite row &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;delete&lt;/code&gt; logic&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/jorgerojas26/lazysql/issues"&gt;open issues&lt;/a&gt; for a full list of proposed features (and known issues).&lt;/p&gt; 
&lt;p align="right"&gt;(&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#readme-top"&gt;back to top&lt;/a&gt;)&lt;/p&gt; 
&lt;h2&gt;Clipboard support&lt;/h2&gt; 
&lt;p&gt;We use &lt;a href="https://github.com/atotto/clipboard?tab=readme-ov-file#clipboard-for-go"&gt;atotto/clipboard&lt;/a&gt; to copy to clipboard.&lt;/p&gt; 
&lt;p&gt;Platforms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OSX&lt;/li&gt; 
 &lt;li&gt;Windows 7 (probably work on other Windows)&lt;/li&gt; 
 &lt;li&gt;Linux, Unix (requires 'xclip' or 'xsel' command to be installed)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- CONTRIBUTING --&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions, issues, and pull requests are welcome!&lt;/p&gt; 
&lt;p align="right"&gt;(&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#readme-top"&gt;back to top&lt;/a&gt;)&lt;/p&gt; 
&lt;!-- LICENSE --&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Distributed under the MIT License. See &lt;code&gt;LICENSE.txt&lt;/code&gt; for more information.&lt;/p&gt; 
&lt;p align="right"&gt;(&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#readme-top"&gt;back to top&lt;/a&gt;)&lt;/p&gt; 
&lt;!-- CONTACT --&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;Jorge Rojas - &lt;a href="https://www.linkedin.com/in/jorgerojas26/"&gt;LinkedIn&lt;/a&gt; - &lt;a href="mailto:jorgeluisrojasb@gmail.com"&gt;jorgeluisrojasb@gmail.com&lt;/a&gt;&lt;/p&gt; 
&lt;p align="right"&gt;(&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#readme-top"&gt;back to top&lt;/a&gt;)&lt;/p&gt; 
&lt;h2&gt;Alternatives&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vladbalmos/mitzasql"&gt;Mitzasql&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TaKO8Ki/gobang"&gt;Gobang&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="right"&gt;(&lt;a href="https://raw.githubusercontent.com/jorgerojas26/lazysql/main/#readme-top"&gt;back to top&lt;/a&gt;)&lt;/p&gt; 
&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt; 
&lt;!-- https://www.markdownguide.org/basic-syntax/#reference-style-links --&gt;</description>
    </item>
    
    <item>
      <title>traefik/traefik</title>
      <link>https://github.com/traefik/traefik</link>
      <description>&lt;p&gt;The Cloud Native Application Proxy&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="docs/content/assets/img/traefik.logo-dark.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="docs/content/assets/img/traefik.logo.png" /&gt; 
  &lt;img alt="Traefik" title="Traefik" src="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/assets/img/traefik.logo.png" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://traefik-oss.semaphoreci.com/projects/traefik"&gt;&lt;img src="https://traefik-oss.semaphoreci.com/badges/traefik/branches/master.svg?style=shields" alt="Build Status SemaphoreCI" /&gt;&lt;/a&gt; &lt;a href="https://doc.traefik.io/traefik"&gt;&lt;img src="https://img.shields.io/badge/docs-current-brightgreen.svg?sanitize=true" alt="Docs" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/traefik/traefik"&gt;&lt;img src="https://goreportcard.com/badge/traefik/traefik" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/traefik/traefik/raw/master/LICENSE.md"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://community.traefik.io/"&gt;&lt;img src="https://img.shields.io/badge/style-register-green.svg?style=social&amp;amp;label=Discourse" alt="Join the community support forum at https://community.traefik.io/" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=traefik"&gt;&lt;img src="https://img.shields.io/twitter/follow/traefik.svg?style=social" alt="Twitter" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Traefik (pronounced &lt;em&gt;traffic&lt;/em&gt;) is a modern HTTP reverse proxy and load balancer that makes deploying microservices easy. Traefik integrates with your existing infrastructure components (&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;, &lt;a href="https://docs.docker.com/engine/swarm/"&gt;Swarm mode&lt;/a&gt;, &lt;a href="https://kubernetes.io"&gt;Kubernetes&lt;/a&gt;, &lt;a href="https://www.consul.io/"&gt;Consul&lt;/a&gt;, &lt;a href="https://coreos.com/etcd/"&gt;Etcd&lt;/a&gt;, &lt;a href="https://rancher.com"&gt;Rancher v2&lt;/a&gt;, &lt;a href="https://aws.amazon.com/ecs"&gt;Amazon ECS&lt;/a&gt;, ...) and configures itself automatically and dynamically. Pointing Traefik at your orchestrator should be the &lt;em&gt;only&lt;/em&gt; configuration step you need.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;. &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#overview"&gt;Overview&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#features"&gt;Features&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#supported-backends"&gt;Supported backends&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#quickstart"&gt;Quickstart&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#web-ui"&gt;Web UI&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#documentation"&gt;Documentation&lt;/a&gt;&lt;/strong&gt; .&lt;/p&gt; 
&lt;p&gt;. &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#support"&gt;Support&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#release-cycle"&gt;Release cycle&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#maintainers"&gt;Maintainers&lt;/a&gt;&lt;/strong&gt; . &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/#credits"&gt;Credits&lt;/a&gt;&lt;/strong&gt; .&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; When migrating to a new major version of Traefik, please refer to the &lt;a href="https://doc.traefik.io/traefik/migrate/v2-to-v3/"&gt;migration guide&lt;/a&gt; to ensure a smooth transition and to be aware of any breaking changes.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Imagine that you have deployed a bunch of microservices with the help of an orchestrator (like Swarm or Kubernetes) or a service registry (like etcd or consul). Now you want users to access these microservices, and you need a reverse proxy.&lt;/p&gt; 
&lt;p&gt;Traditional reverse-proxies require that you configure &lt;em&gt;each&lt;/em&gt; route that will connect paths and subdomains to &lt;em&gt;each&lt;/em&gt; microservice. In an environment where you add, remove, kill, upgrade, or scale your services &lt;em&gt;many&lt;/em&gt; times a day, the task of keeping the routes up to date becomes tedious.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This is when Traefik can help you!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Traefik listens to your service registry/orchestrator API and instantly generates the routes so your microservices are connected to the outside world -- without further intervention from your part.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Run Traefik and let it do the work for you!&lt;/strong&gt; &lt;em&gt;(But if you'd rather configure some of your routes manually, Traefik supports that too!)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/assets/img/traefik-architecture.png" alt="Architecture" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Continuously updates its configuration (No restarts!)&lt;/li&gt; 
 &lt;li&gt;Supports multiple load balancing algorithms&lt;/li&gt; 
 &lt;li&gt;Provides HTTPS to your microservices by leveraging &lt;a href="https://letsencrypt.org"&gt;Let's Encrypt&lt;/a&gt; (wildcard certificates support)&lt;/li&gt; 
 &lt;li&gt;Circuit breakers, retry&lt;/li&gt; 
 &lt;li&gt;See the magic through its clean web UI&lt;/li&gt; 
 &lt;li&gt;WebSocket, HTTP/2, gRPC ready&lt;/li&gt; 
 &lt;li&gt;Provides metrics (Rest, Prometheus, Datadog, Statsd, InfluxDB 2.X)&lt;/li&gt; 
 &lt;li&gt;Keeps access logs (JSON, CLF)&lt;/li&gt; 
 &lt;li&gt;Fast&lt;/li&gt; 
 &lt;li&gt;Exposes a Rest API&lt;/li&gt; 
 &lt;li&gt;Packaged as a single binary file (made with &lt;span&gt;❤️&lt;/span&gt; with go) and available as an &lt;a href="https://hub.docker.com/r/_/traefik/"&gt;official&lt;/a&gt; docker image&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Backends&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/docker/"&gt;Docker&lt;/a&gt; / &lt;a href="https://doc.traefik.io/traefik/providers/docker/"&gt;Swarm mode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/kubernetes-crd/"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/ecs/"&gt;ECS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doc.traefik.io/traefik/providers/file/"&gt;File&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;To get your hands on Traefik, you can use the &lt;a href="https://doc.traefik.io/traefik/getting-started/quick-start/"&gt;5-Minute Quickstart&lt;/a&gt; in our documentation (you will need Docker).&lt;/p&gt; 
&lt;h2&gt;Web UI&lt;/h2&gt; 
&lt;p&gt;You can access the simple HTML frontend of Traefik.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/assets/img/webui-dashboard.png" alt="Web UI Providers" /&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find the complete documentation of Traefik v3 at &lt;a href="https://doc.traefik.io/traefik/"&gt;https://doc.traefik.io/traefik/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;To get community support, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;join the Traefik community forum: &lt;a href="https://community.traefik.io/"&gt;&lt;img src="https://img.shields.io/badge/style-register-green.svg?style=social&amp;amp;label=Discourse" alt="Join the chat at https://community.traefik.io/" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you need commercial support, please contact &lt;a href="https://traefik.io"&gt;Traefik.io&lt;/a&gt; by mail: &lt;a href="mailto:support@traefik.io"&gt;mailto:support@traefik.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grab the latest binary from the &lt;a href="https://github.com/traefik/traefik/releases"&gt;releases&lt;/a&gt; page and run it with the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/traefik.sample.toml"&gt;sample configuration file&lt;/a&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;./traefik --configFile=traefik.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or use the official tiny Docker image and run it with the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/traefik.sample.toml"&gt;sample configuration file&lt;/a&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker run -d -p 8080:8080 -p 80:80 -v $PWD/traefik.toml:/etc/traefik/traefik.toml traefik
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or get the sources:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/traefik/traefik
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Introductory Videos&lt;/h2&gt; 
&lt;p&gt;You can find high level and deep dive videos on &lt;a href="https://videos.traefik.io"&gt;videos.traefik.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;p&gt;We are strongly promoting a philosophy of openness and sharing, and firmly standing against the elitist closed approach. Being part of the core team should be accessible to anyone who is motivated and want to be part of that journey! This &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/contributing/maintainers-guidelines.md"&gt;document&lt;/a&gt; describes how to be part of the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/docs/content/contributing/maintainers.md"&gt;maintainers' team&lt;/a&gt; as well as various responsibilities and guidelines for Traefik maintainers. You can also find more information on our process to review pull requests and manage issues &lt;a href="https://github.com/traefik/contributors-guide/raw/master/issue_triage.md"&gt;in this document&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you'd like to contribute to the project, refer to the &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/CONTRIBUTING.md"&gt;contributing documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please note that this project is released with a &lt;a href="https://raw.githubusercontent.com/traefik/traefik/master/CODE_OF_CONDUCT.md"&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project, you agree to abide by its terms.&lt;/p&gt; 
&lt;h2&gt;Release Cycle&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;We usually release 3/4 new versions (e.g. 1.1.0, 1.2.0, 1.3.0) per year.&lt;/li&gt; 
 &lt;li&gt;Release Candidates are available before the release (e.g. 1.1.0-rc1, 1.1.0-rc2, 1.1.0-rc3, 1.1.0-rc4, before 1.1.0).&lt;/li&gt; 
 &lt;li&gt;Bug-fixes (e.g. 1.1.1, 1.1.2, 1.2.1, 1.2.3) are released as needed (no additional features are delivered in those versions, bug-fixes only).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each version is supported until the next one is released (e.g. 1.1.x will be supported until 1.2.0 is out).&lt;/p&gt; 
&lt;p&gt;We use &lt;a href="https://semver.org/"&gt;Semantic Versioning&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Mailing Lists&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;General announcements, new releases: mail at &lt;a href="mailto:news+subscribe@traefik.io"&gt;news+subscribe@traefik.io&lt;/a&gt; or on &lt;a href="https://groups.google.com/a/traefik.io/forum/#!forum/news"&gt;the online viewer&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Security announcements: mail at &lt;a href="mailto:security+subscribe@traefik.io"&gt;security+subscribe@traefik.io&lt;/a&gt; or on &lt;a href="https://groups.google.com/a/traefik.io/forum/#!forum/security"&gt;the online viewer&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Kudos to &lt;a href="https://www.instagram.com/pierroks/"&gt;Peka&lt;/a&gt; for his awesome work on the gopher's logo!.&lt;/p&gt; 
&lt;p&gt;The gopher's logo of Traefik is licensed under the Creative Commons 3.0 Attributions license.&lt;/p&gt; 
&lt;p&gt;The gopher's logo of Traefik was inspired by the gopher stickers made by &lt;a href="https://twitter.com/tenntenn"&gt;Takuya Ueda&lt;/a&gt;. The original Go gopher was designed by &lt;a href="https://reneefrench.blogspot.com/"&gt;Renee French&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alireza0/s-ui</title>
      <link>https://github.com/alireza0/s-ui</link>
      <description>&lt;p&gt;An advanced Web Panel • Built for SagerNet/Sing-Box&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;S-UI&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;An Advanced Web Panel • Built on SagerNet/Sing-Box&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/v/release/alireza0/s-ui.svg?sanitize=true" alt="" /&gt; &lt;img src="https://img.shields.io/docker/pulls/alireza7/s-ui.svg?sanitize=true" alt="S-UI Docker pull" /&gt; &lt;a href="https://goreportcard.com/report/github.com/alireza0/s-ui"&gt;&lt;img src="https://goreportcard.com/badge/github.com/alireza0/s-ui" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://img.shields.io/github/downloads/alireza0/s-ui/total.svg"&gt;&lt;img src="https://img.shields.io/github/downloads/alireza0/s-ui/total.svg?sanitize=true" alt="Downloads" /&gt;&lt;/a&gt; &lt;a href="https://www.gnu.org/licenses/gpl-3.0.en.html"&gt;&lt;img src="https://img.shields.io/badge/license-GPL%20V3-blue.svg?longCache=true" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This project is only for personal learning and communication, please do not use it for illegal purposes, please do not use it in a production environment&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;If you think this project is helpful to you, you may wish to give a&lt;/strong&gt;&lt;span&gt;🌟&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/alireza7"&gt;&lt;img src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" alt="&amp;quot;Buy Me A Coffee&amp;quot;" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;USDT (TRC20): &lt;code&gt;TYTq73Gj6dJ67qe58JVPD9zpjW2cc9XgVz&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Overview&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Features&lt;/th&gt; 
   &lt;th align="center"&gt;Enable?&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multi-Protocol&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multi-Language&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multi-Client/Inbound&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Advanced Traffic Routing Interface&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Client &amp;amp; Traffic &amp;amp; System Status&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Subscription Service (link/json + info)&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Dark/Light Theme&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;API Interface&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Supported Platforms&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Architecture&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;amd64, arm64, armv7, armv6, armv5, 386, s390x&lt;/td&gt; 
   &lt;td&gt;✅ Supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;amd64, 386, arm64&lt;/td&gt; 
   &lt;td&gt;✅ Supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;amd64, arm64&lt;/td&gt; 
   &lt;td&gt;🚧 Experimental&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://github.com/alireza0/s-ui-frontend/raw/main/media/main.png" alt="&amp;quot;Main&amp;quot;" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/alireza0/s-ui-frontend/raw/main/screenshots.md"&gt;Other UI Screenshots&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;API Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/alireza0/s-ui/wiki/API-Documentation"&gt;API-Documentation Wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Default Installation Information&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Panel Port: 2095&lt;/li&gt; 
 &lt;li&gt;Panel Path: /app/&lt;/li&gt; 
 &lt;li&gt;Subscription Port: 2096&lt;/li&gt; 
 &lt;li&gt;Subscription Path: /sub/&lt;/li&gt; 
 &lt;li&gt;User/Password: admin&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install &amp;amp; Upgrade to Latest Version&lt;/h2&gt; 
&lt;h3&gt;Linux/macOS&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;bash &amp;lt;(curl -Ls https://raw.githubusercontent.com/alireza0/s-ui/master/install.sh)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the latest Windows release from &lt;a href="https://github.com/alireza0/s-ui/releases/latest"&gt;GitHub Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Extract the ZIP file&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;install-windows.bat&lt;/code&gt; as Administrator&lt;/li&gt; 
 &lt;li&gt;Follow the installation wizard&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Install legacy Version&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; To install your desired legacy version, add the version to the end of the installation command. e.g., ver &lt;code&gt;1.0.0&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;VERSION=1.0.0 &amp;amp;&amp;amp; bash &amp;lt;(curl -Ls https://raw.githubusercontent.com/alireza0/s-ui/$VERSION/install.sh) $VERSION
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Manual installation&lt;/h2&gt; 
&lt;h3&gt;Linux/macOS&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Get the latest version of S-UI based on your OS/Architecture from GitHub: &lt;a href="https://github.com/alireza0/s-ui/releases/latest"&gt;https://github.com/alireza0/s-ui/releases/latest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OPTIONAL&lt;/strong&gt; Get the latest version of &lt;code&gt;s-ui.sh&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/alireza0/s-ui/master/s-ui.sh"&gt;https://raw.githubusercontent.com/alireza0/s-ui/master/s-ui.sh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OPTIONAL&lt;/strong&gt; Copy &lt;code&gt;s-ui.sh&lt;/code&gt; to /usr/bin/ and run &lt;code&gt;chmod +x /usr/bin/s-ui&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Extract s-ui tar.gz file to a directory of your choice and navigate to the directory where you extracted the tar.gz file.&lt;/li&gt; 
 &lt;li&gt;Copy *.service files to /etc/systemd/system/ and run &lt;code&gt;systemctl daemon-reload&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Enable autostart and start S-UI service using &lt;code&gt;systemctl enable s-ui --now&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Start sing-box service using &lt;code&gt;systemctl enable sing-box --now&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Get the latest Windows version from GitHub: &lt;a href="https://github.com/alireza0/s-ui/releases/latest"&gt;https://github.com/alireza0/s-ui/releases/latest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Download the appropriate Windows package (e.g., &lt;code&gt;s-ui-windows-amd64.zip&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Extract the ZIP file to a directory of your choice&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;install-windows.bat&lt;/code&gt; as Administrator&lt;/li&gt; 
 &lt;li&gt;Follow the installation wizard&lt;/li&gt; 
 &lt;li&gt;Access the panel at &lt;a href="http://localhost:2095/app"&gt;http://localhost:2095/app&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Uninstall S-UI&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo -i

systemctl disable s-ui  --now

rm -f /etc/systemd/system/sing-box.service
systemctl daemon-reload

rm -fr /usr/local/s-ui
rm /usr/bin/s-ui
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install using Docker&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click for details&lt;/summary&gt; 
 &lt;h3&gt;Usage&lt;/h3&gt; 
 &lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Install Docker&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;curl -fsSL https://get.docker.com | sh
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Install S-UI&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Docker compose method&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;mkdir s-ui &amp;amp;&amp;amp; cd s-ui
wget -q https://raw.githubusercontent.com/alireza0/s-ui/master/docker-compose.yml
docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Use docker&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;mkdir s-ui &amp;amp;&amp;amp; cd s-ui
docker run -itd \
    -p 2095:2095 -p 2096:2096 -p 443:443 -p 80:80 \
    -v $PWD/db/:/app/db/ \
    -v $PWD/cert/:/root/cert/ \
    --name s-ui --restart=unless-stopped \
    alireza7/s-ui:latest
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Build your own image&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/alireza0/s-ui
git submodule update --init --recursive
docker build -t s-ui .
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Manual run ( contribution )&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click for details&lt;/summary&gt; 
 &lt;h3&gt;Build and run whole project&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;./runSUI.sh
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Clone the repository&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;# clone repository
git clone https://github.com/alireza0/s-ui
# clone submodules
git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;- Frontend&lt;/h3&gt; 
 &lt;p&gt;Visit &lt;a href="https://github.com/alireza0/s-ui-frontend"&gt;s-ui-frontend&lt;/a&gt; for frontend code&lt;/p&gt; 
 &lt;h3&gt;- Backend&lt;/h3&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Please build frontend once before!&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;To build backend:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;# remove old frontend compiled files
rm -fr web/html/*
# apply new frontend compiled files
cp -R frontend/dist/ web/html/
# build
go build -o sui main.go
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To run backend (from root folder of repository):&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;./sui
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Languages&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;English&lt;/li&gt; 
 &lt;li&gt;Farsi&lt;/li&gt; 
 &lt;li&gt;Vietnamese&lt;/li&gt; 
 &lt;li&gt;Chinese (Simplified)&lt;/li&gt; 
 &lt;li&gt;Chinese (Traditional)&lt;/li&gt; 
 &lt;li&gt;Russian&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supported protocols: 
  &lt;ul&gt; 
   &lt;li&gt;General: Mixed, SOCKS, HTTP, HTTPS, Direct, Redirect, TProxy&lt;/li&gt; 
   &lt;li&gt;V2Ray based: VLESS, VMess, Trojan, Shadowsocks&lt;/li&gt; 
   &lt;li&gt;Other protocols: ShadowTLS, Hysteria, Hysteria2, Naive, TUIC&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Supports XTLS protocols&lt;/li&gt; 
 &lt;li&gt;An advanced interface for routing traffic, incorporating PROXY Protocol, External, and Transparent Proxy, SSL Certificate, and Port&lt;/li&gt; 
 &lt;li&gt;An advanced interface for inbound and outbound configuration&lt;/li&gt; 
 &lt;li&gt;Clients’ traffic cap and expiration date&lt;/li&gt; 
 &lt;li&gt;Displays online clients, inbounds and outbounds with traffic statistics, and system status monitoring&lt;/li&gt; 
 &lt;li&gt;Subscription service with ability to add external links and subscription&lt;/li&gt; 
 &lt;li&gt;HTTPS for secure access to the web panel and subscription service (self-provided domain + SSL certificate)&lt;/li&gt; 
 &lt;li&gt;Dark/Light theme&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Environment Variables&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click for details&lt;/summary&gt; 
 &lt;h3&gt;Usage&lt;/h3&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Variable&lt;/th&gt; 
    &lt;th align="center"&gt;Type&lt;/th&gt; 
    &lt;th align="left"&gt;Default&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SUI_LOG_LEVEL&lt;/td&gt; 
    &lt;td align="center"&gt;&lt;code&gt;"debug"&lt;/code&gt; | &lt;code&gt;"info"&lt;/code&gt; | &lt;code&gt;"warn"&lt;/code&gt; | &lt;code&gt;"error"&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;"info"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SUI_DEBUG&lt;/td&gt; 
    &lt;td align="center"&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SUI_BIN_FOLDER&lt;/td&gt; 
    &lt;td align="center"&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;"bin"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SUI_DB_FOLDER&lt;/td&gt; 
    &lt;td align="center"&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;"db"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SINGBOX_API&lt;/td&gt; 
    &lt;td align="center"&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;-&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;h2&gt;SSL Certificate&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click for details&lt;/summary&gt; 
 &lt;h3&gt;Certbot&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;snap install core; snap refresh core
snap install --classic certbot
ln -s /snap/bin/certbot /usr/bin/certbot

certbot certonly --standalone --register-unsafely-without-email --non-interactive --agree-tos -d &amp;lt;Your Domain Name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Stargazers over Time&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/alireza0/s-ui"&gt;&lt;img src="https://starchart.cc/alireza0/s-ui.svg?sanitize=true" alt="Stargazers over time" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>goharbor/harbor</title>
      <link>https://github.com/goharbor/harbor</link>
      <description>&lt;p&gt;An open source trusted cloud native registry project that stores, signs, and scans content.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Harbor&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/goharbor/harbor/actions?query=event%3Apush+branch%3Amain+workflow%3ACI+"&gt;&lt;img src="https://github.com/goharbor/harbor/workflows/CI/badge.svg?branch=main&amp;amp;event=push" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/goharbor/harbor"&gt;&lt;img src="https://codecov.io/gh/goharbor/harbor/branch/main/graph/badge.svg?sanitize=true" alt="Coverage Status" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/goharbor/harbor"&gt;&lt;img src="https://goreportcard.com/badge/github.com/goharbor/harbor" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/2095"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/2095/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://www.codacy.com/gh/goharbor/harbor/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=goharbor/harbor&amp;amp;utm_campaign=Badge_Grade"&gt;&lt;img src="https://app.codacy.com/project/badge/Grade/792fe1755edc4d6e91f4c3469f553389" alt="Codacy Badge" /&gt;&lt;/a&gt; &lt;img src="https://github.com/goharbor/harbor/workflows/Code%20scanning%20-%20action/badge.svg?sanitize=true" alt="Code scanning - action" /&gt; &lt;a href="https://www.googleapis.com/storage/v1/b/harbor-nightly/o"&gt;&lt;img src="https://us-central1-eminent-nation-87317.cloudfunctions.net/harbor-nightly-result" alt="Nightly Status" /&gt;&lt;/a&gt; &lt;img src="https://github.com/goharbor/harbor/workflows/CONFORMANCE_TEST/badge.svg?sanitize=true" alt="CONFORMANCE_TEST" /&gt; &lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fgoharbor%2Fharbor?ref=badge_shield"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fgoharbor%2Fharbor.svg?type=shield" alt="FOSSA Status" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/harbor/harbor"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/harbor" alt="Artifact HUB" /&gt;&lt;/a&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;img src="https://raw.githubusercontent.com/goharbor/website/master/docs/img/readme/bell-outline-badged.svg?sanitize=true" alt="notification" /&gt;Community Meeting&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;The Harbor Project holds bi-weekly community calls in two different timezones. To join the community calls or to watch previous meeting notes and recordings, please visit the &lt;a href="https://github.com/goharbor/community/raw/master/MEETING_SCHEDULE.md"&gt;meeting schedule&lt;/a&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;br /&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;main&lt;/code&gt; branch may be in an &lt;em&gt;unstable or even broken state&lt;/em&gt; during development. Please use &lt;a href="https://github.com/goharbor/harbor/releases"&gt;releases&lt;/a&gt; instead of the &lt;code&gt;main&lt;/code&gt; branch in order to get a stable set of binaries.&lt;/p&gt; 
&lt;img alt="Harbor" src="https://raw.githubusercontent.com/goharbor/website/master/docs/img/readme/harbor_logo.png" /&gt; 
&lt;p&gt;Harbor is an open source trusted cloud native registry project that stores, signs, and scans content. Harbor extends the open source Docker Distribution by adding the functionalities usually required by users such as security, identity and management. Having a registry closer to the build and run environment can improve the image transfer efficiency. Harbor supports replication of images between registries, and also offers advanced security features such as user management, access control and activity auditing.&lt;/p&gt; 
&lt;p&gt;Harbor is hosted by the &lt;a href="https://cncf.io"&gt;Cloud Native Computing Foundation&lt;/a&gt; (CNCF). If you are an organization that wants to help shape the evolution of cloud native technologies, consider joining the CNCF. For details about whose involved and how Harbor plays a role, read the CNCF &lt;a href="https://www.cncf.io/blog/2018/07/31/cncf-to-host-harbor-in-the-sandbox/"&gt;announcement&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Cloud native registry&lt;/strong&gt;: With support for both container images and &lt;a href="https://helm.sh"&gt;Helm&lt;/a&gt; charts, Harbor serves as registry for cloud native environments like container runtimes and orchestration platforms.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Role based access control&lt;/strong&gt;: Users access different repositories through 'projects' and a user can have different permission for images or Helm charts under a project.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Policy based replication&lt;/strong&gt;: Images and charts can be replicated (synchronized) between multiple registry instances based on policies with using filters (repository, tag and label). Harbor automatically retries a replication if it encounters any errors. This can be used to assist loadbalancing, achieve high availability, and facilitate multi-datacenter deployments in hybrid and multi-cloud scenarios.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vulnerability Scanning&lt;/strong&gt;: Harbor scans images regularly for vulnerabilities and has policy checks to prevent vulnerable images from being deployed.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LDAP/AD support&lt;/strong&gt;: Harbor integrates with existing enterprise LDAP/AD for user authentication and management, and supports importing LDAP groups into Harbor that can then be given permissions to specific projects.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OIDC support&lt;/strong&gt;: Harbor leverages OpenID Connect (OIDC) to verify the identity of users authenticated by an external authorization server or identity provider. Single sign-on can be enabled to log into the Harbor portal.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Image deletion &amp;amp; garbage collection&lt;/strong&gt;: System admin can run garbage collection jobs so that images(dangling manifests and unreferenced blobs) can be deleted and their space can be freed up periodically.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Notary&lt;/strong&gt;: Support signing container images using Docker Content Trust (leveraging Notary) for guaranteeing authenticity and provenance. In addition, policies that prevent unsigned images from being deployed can also be activated.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Graphical user portal&lt;/strong&gt;: User can easily browse, search repositories and manage projects.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Auditing&lt;/strong&gt;: All the operations to the repositories are tracked through logs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RESTful API&lt;/strong&gt;: RESTful APIs are provided to facilitate administrative operations, and are easy to use for integration with external systems. An embedded Swagger UI is available for exploring and testing the API.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy deployment&lt;/strong&gt;: Harbor can be deployed via Docker compose as well Helm Chart, and a Harbor Operator was added recently as well.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;For learning the architecture design of Harbor, check the document &lt;a href="https://github.com/goharbor/harbor/wiki/Architecture-Overview-of-Harbor"&gt;Architecture Overview of Harbor&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Harbor RESTful API: The APIs for most administrative operations of Harbor and can be used to perform integrations with Harbor programmatically. 
  &lt;ul&gt; 
   &lt;li&gt;Part 1: &lt;a href="https://editor.swagger.io/?url=https://raw.githubusercontent.com/goharbor/harbor/main/api/v2.0/swagger.yaml"&gt;New or changed APIs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install &amp;amp; Run&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;System requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;On a Linux host:&lt;/strong&gt; docker 20.10.10-ce+ and docker-compose 1.18.0+ .&lt;/p&gt; 
&lt;p&gt;Download binaries of &lt;strong&gt;&lt;a href="https://github.com/goharbor/harbor/releases"&gt;Harbor release &lt;/a&gt;&lt;/strong&gt; and follow &lt;strong&gt;&lt;a href="https://goharbor.io/docs/latest/install-config/"&gt;Installation &amp;amp; Configuration Guide&lt;/a&gt;&lt;/strong&gt; to install Harbor.&lt;/p&gt; 
&lt;p&gt;If you want to deploy Harbor on Kubernetes, please use the &lt;strong&gt;&lt;a href="https://github.com/goharbor/harbor-helm"&gt;Harbor chart&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Refer to the &lt;strong&gt;&lt;a href="https://goharbor.io/docs/"&gt;documentation&lt;/a&gt;&lt;/strong&gt; for more details on how to use Harbor.&lt;/p&gt; 
&lt;h2&gt;OCI Distribution Conformance Tests&lt;/h2&gt; 
&lt;p&gt;Check the OCI distribution conformance tests &lt;a href="https://storage.googleapis.com/harbor-conformance-test/report.html"&gt;report&lt;/a&gt; of Harbor.&lt;/p&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://goharbor.io/docs/edge/install-config/harbor-compatibility-list/"&gt;compatibility list&lt;/a&gt; document provides compatibility information for the Harbor components.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://goharbor.io/docs/edge/install-config/harbor-compatibility-list/#replication-adapters"&gt;Replication adapters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goharbor.io/docs/edge/install-config/harbor-compatibility-list/#oidc-adapters"&gt;OIDC adapters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goharbor.io/docs/edge/install-config/harbor-compatibility-list/#scanner-adapters"&gt;Scanner adapters&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Twitter:&lt;/strong&gt; &lt;a href="https://twitter.com/project_harbor"&gt;@project_harbor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User Group:&lt;/strong&gt; Join Harbor user email group: &lt;a href="https://lists.cncf.io/g/harbor-users"&gt;harbor-users@lists.cncf.io&lt;/a&gt; to get update of Harbor's news, features, releases, or to provide suggestion and feedback.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Developer Group:&lt;/strong&gt; Join Harbor developer group: &lt;a href="https://lists.cncf.io/g/harbor-dev"&gt;harbor-dev@lists.cncf.io&lt;/a&gt; for discussion on Harbor development and contribution.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Slack:&lt;/strong&gt; Join Harbor's community for discussion and ask questions: &lt;a href="https://slack.cncf.io/"&gt;Cloud Native Computing Foundation&lt;/a&gt;, channel: &lt;a href="https://cloud-native.slack.com/messages/harbor/"&gt;#harbor&lt;/a&gt; and &lt;a href="https://cloud-native.slack.com/messages/harbor-dev/"&gt;#harbor-dev&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demos&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://demo.goharbor.io"&gt;Live Demo&lt;/a&gt;&lt;/strong&gt; - A demo environment with the latest Harbor stable build installed. For additional information please refer to &lt;a href="https://goharbor.io/docs/latest/install-config/demo-server/"&gt;this page&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/goharbor/harbor/wiki/Video-demos-for-Harbor"&gt;Video Demos&lt;/a&gt;&lt;/strong&gt; - Demos for Harbor features and continuously updated.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Partners and Users&lt;/h2&gt; 
&lt;p&gt;For a list of users, please refer to &lt;a href="https://raw.githubusercontent.com/goharbor/harbor/main/ADOPTERS.md"&gt;ADOPTERS.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;h3&gt;Security Audit&lt;/h3&gt; 
&lt;p&gt;A third party security audit was performed by Cure53 in October 2019. You can see the full report &lt;a href="https://goharbor.io/docs/2.0.0/security/Harbor_Security_Audit_Oct2019.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Reporting security vulnerabilities&lt;/h3&gt; 
&lt;p&gt;If you've found a security related issue, a vulnerability, or a potential vulnerability in Harbor please let the &lt;a href="mailto:cncf-harbor-security@lists.cncf.io"&gt;Harbor Security Team&lt;/a&gt; know with the details of the vulnerability. We'll send a confirmation email to acknowledge your report, and we'll send an additional email when we've identified the issue positively or negatively.&lt;/p&gt; 
&lt;p&gt;For further details please see our complete &lt;a href="https://raw.githubusercontent.com/goharbor/harbor/main/SECURITY.md"&gt;security release process&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Harbor is available under the &lt;a href="https://raw.githubusercontent.com/goharbor/harbor/main/LICENSE"&gt;Apache 2 license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project uses open source components which have additional licensing terms. The official docker images and licensing terms for these open source components can be found at the following locations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Photon OS 1.0: &lt;a href="https://hub.docker.com/_/photon/"&gt;docker image&lt;/a&gt;, &lt;a href="https://github.com/vmware/photon/raw/master/COPYING"&gt;license&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Fossa Status&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fgoharbor%2Fharbor?ref=badge_large"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fgoharbor%2Fharbor.svg?type=large" alt="FOSSA Status" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kubernetes/kops</title>
      <link>https://github.com/kubernetes/kops</link>
      <description>&lt;p&gt;Kubernetes Operations (kOps) - Production Grade k8s Installation, Upgrades and Management&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;kOps - Kubernetes Operations&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/kubernetes/kops/actions/workflows/main.yml"&gt;&lt;img src="https://github.com/kubernetes/kops/actions/workflows/main.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/v/release/kubernetes/kops" alt="GitHub release (latest SemVer)" /&gt; &lt;a href="https://goreportcard.com/report/k8s.io/kops"&gt;&lt;img src="https://goreportcard.com/badge/k8s.io/kops" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/k8s.io/kops"&gt;&lt;img src="https://godoc.org/k8s.io/kops?status.svg?sanitize=true" alt="GoDoc Widget" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The easiest way to get a production grade Kubernetes cluster up and running.&lt;/p&gt; 
&lt;h2&gt;What is kOps?&lt;/h2&gt; 
&lt;p&gt;We like to think of it as &lt;code&gt;kubectl&lt;/code&gt; for clusters.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;kops&lt;/code&gt; will not only help you create, destroy, upgrade and maintain production-grade, highly available, Kubernetes cluster, but it will also provision the necessary cloud infrastructure.&lt;/p&gt; 
&lt;p&gt;AWS (Amazon Web Services) and GCP (Google Cloud Platform) are currently officially supported, with DigitalOcean, Hetzner and OpenStack in beta support, and Azure in alpha.&lt;/p&gt; 
&lt;h2&gt;Can I see it in action?&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;a href="https://asciinema.org/a/97298"&gt; &lt;img src="https://asciinema.org/a/97298.png" width="885" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Installing and launching a Kubernetes cluster hosted on AWS, GCE, DigitalOcean, Hetzner, OpenStack, Azure&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://kops.sigs.k8s.io/getting_started/install/"&gt;Getting Started&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation is in the &lt;code&gt;/docs&lt;/code&gt; directory, and can be seen at &lt;a href="https://kops.sigs.k8s.io/"&gt;kops.sigs.k8s.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Releases and kubernetes Release Compatibility&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://kops.sigs.k8s.io/welcome/releases/"&gt;Releases and versioning&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Involved and Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://kops.sigs.k8s.io/contributing/"&gt;Contributing&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Office Hours&lt;/h3&gt; 
&lt;p&gt;kOps maintainers set aside one hour every other week for &lt;strong&gt;public&lt;/strong&gt; office hours. This time is used to gather with community members interested in kOps. This session is open to both developers and users.&lt;/p&gt; 
&lt;p&gt;We do maintain an &lt;a href="https://docs.google.com/document/d/12QkyL0FkNbWPcLFxxRGSPt_tNPBHbmni3YLY-lHny7E/edit"&gt;agenda&lt;/a&gt; and stick to it as much as possible. If you want to hold the floor, put your item in this doc. Bullet/note form is fine. Even if your topic gets in late, we do our best to cover it.&lt;/p&gt; 
&lt;p&gt;For more information about the office hours and how to join, see &lt;a href="https://kops.sigs.k8s.io/welcome/office_hours/"&gt;Office Hours&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ipfs/kubo</title>
      <link>https://github.com/ipfs/kubo</link>
      <description>&lt;p&gt;An IPFS implementation in Go&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;br /&gt; &lt;a href="https://docs.ipfs.tech/how-to/command-line-quick-start/"&gt;&lt;img src="https://user-images.githubusercontent.com/157609/250148884-d6d12db8-fdcf-4be3-8546-2550b69845d8.png" alt="Kubo logo" title="Kubo logo" width="200" /&gt;&lt;/a&gt; &lt;br /&gt; Kubo: IPFS Implementation in GO &lt;br /&gt; &lt;/h1&gt; 
&lt;p align="center" style="font-size: 1.2rem;"&gt;The first implementation of IPFS.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://ipfs.tech"&gt;&lt;img src="https://img.shields.io/badge/project-IPFS-blue.svg?style=flat-square" alt="Official Part of IPFS Project" /&gt;&lt;/a&gt; &lt;a href="https://discuss.ipfs.tech"&gt;&lt;img alt="Discourse Forum" src="https://img.shields.io/discourse/posts?server=https%3A%2F%2Fdiscuss.ipfs.tech" /&gt;&lt;/a&gt; &lt;a href="https://matrix.to/#/#ipfs-space:ipfs.io"&gt;&lt;img alt="Matrix" src="https://img.shields.io/matrix/ipfs-space%3Aipfs.io?server_fqdn=matrix.org" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ipfs/kubo/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/ipfs/kubo/gobuild.yml?branch=master" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ipfs/kubo/releases"&gt;&lt;img alt="GitHub release" src="https://img.shields.io/github/v/release/ipfs/kubo?filter=!*rc*" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;What is Kubo?&lt;/h2&gt; 
&lt;p&gt;Kubo was the first IPFS implementation and is the most widely used one today. Implementing the &lt;em&gt;Interplanetary Filesystem&lt;/em&gt; - the standard for content-addressing on the Web, interoperable with HTTP. Thus powered by future-proof data models and the libp2p for network communication. Kubo is written in Go.&lt;/p&gt; 
&lt;p&gt;Featureset&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Runs an IPFS-Node as a network service that is part of LAN and WAN DHT&lt;/li&gt; 
 &lt;li&gt;Native support for UnixFS (most popular way to represent files and directories on IPFS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://specs.ipfs.tech/http-gateways/"&gt;HTTP Gateway&lt;/a&gt; (&lt;code&gt;/ipfs&lt;/code&gt; and &lt;code&gt;/ipns&lt;/code&gt;) functionality for trusted and &lt;a href="https://docs.ipfs.tech/reference/http/gateway/#trustless-verifiable-retrieval"&gt;trustless&lt;/a&gt; content retrieval&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://specs.ipfs.tech/routing/http-routing-v1/"&gt;HTTP Routing V1&lt;/a&gt; (&lt;code&gt;/routing/v1&lt;/code&gt;) client and server implementation for &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/delegated-routing.md"&gt;delegated routing&lt;/a&gt; lookups&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.ipfs.tech/reference/kubo/rpc/"&gt;HTTP Kubo RPC API&lt;/a&gt; (&lt;code&gt;/api/v0&lt;/code&gt;) to access and control the daemon&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.ipfs.tech/reference/kubo/cli/"&gt;Command Line Interface&lt;/a&gt; based on (&lt;code&gt;/api/v0&lt;/code&gt;) RPC API&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ipfs/ipfs-webui/#readme"&gt;WebUI&lt;/a&gt; to manage the Kubo node&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/content-blocking.md"&gt;Content blocking&lt;/a&gt; support for operators of public nodes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Other implementations&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://docs.ipfs.tech/basics/ipfs-implementations/"&gt;List&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is IPFS?&lt;/h2&gt; 
&lt;p&gt;IPFS is a global, versioned, peer-to-peer filesystem. It combines good ideas from previous systems such as Git, BitTorrent, Kademlia, SFS, and the Web. It is like a single BitTorrent swarm, exchanging git objects. IPFS provides an interface as simple as the HTTP web, but with permanence built-in. You can also mount the world at /ipfs.&lt;/p&gt; 
&lt;p&gt;For more info see: &lt;a href="https://docs.ipfs.tech/concepts/what-is-ipfs/"&gt;https://docs.ipfs.tech/concepts/what-is-ipfs/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Before opening an issue, consider using one of the following locations to ensure you are opening your thread in the right place:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;kubo (previously named go-ipfs) &lt;em&gt;implementation&lt;/em&gt; bugs in &lt;a href="https://github.com/ipfs/kubo/issues"&gt;this repo&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Documentation issues in &lt;a href="https://github.com/ipfs/ipfs-docs/issues"&gt;ipfs/docs issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;IPFS &lt;em&gt;design&lt;/em&gt; in &lt;a href="https://github.com/ipfs/specs/issues"&gt;ipfs/specs issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Exploration of new ideas in &lt;a href="https://github.com/ipfs/notes/issues"&gt;ipfs/notes issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Ask questions and meet the rest of the community at the &lt;a href="https://discuss.ipfs.tech"&gt;IPFS Forum&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Or &lt;a href="https://docs.ipfs.tech/community/chat/"&gt;chat with us&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCdjsUXJ3QawK4O5L1kqqsew"&gt;&lt;img src="https://img.shields.io/youtube/channel/subscribers/UCdjsUXJ3QawK4O5L1kqqsew?label=Subscribe%20IPFS&amp;amp;style=social&amp;amp;cacheSeconds=3600" alt="YouTube Channel Subscribers" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/IPFS"&gt;&lt;img src="https://img.shields.io/twitter/follow/IPFS?style=social&amp;amp;cacheSeconds=3600" alt="Follow @IPFS on Twitter" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Next milestones&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/ipfs/kubo/milestones"&gt;Milestones on GitHub&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#what-is-kubo"&gt;What is Kubo?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#what-is-ipfs"&gt;What is IPFS?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#next-milestones"&gt;Next milestones&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#security-issues"&gt;Security Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#install"&gt;Install&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#minimal-system-requirements"&gt;Minimal System Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#docker"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#official-prebuilt-binaries"&gt;Official prebuilt binaries&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#updating"&gt;Updating&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#downloading-builds-using-ipfs"&gt;Downloading builds using IPFS&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#unofficial-linux-packages"&gt;Unofficial Linux packages&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#arch-linux"&gt;ArchLinux&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#gentoo-linux"&gt;Gentoo Linux&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#nix"&gt;Nix&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#solus"&gt;Solus&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#opensuse"&gt;openSUSE&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#guix"&gt;Guix&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#snap"&gt;Snap&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#ubuntu-ppa"&gt;Ubuntu PPA&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#fedora-copr"&gt;Fedora&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#unofficial-windows-packages"&gt;Unofficial Windows packages&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#chocolatey"&gt;Chocolatey&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#scoop"&gt;Scoop&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#unofficial-macos-packages"&gt;Unofficial MacOS packages&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#macports"&gt;MacPorts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#nix-macos"&gt;Nix&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#homebrew"&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#build-from-source"&gt;Build from Source&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#install-go"&gt;Install Go&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#download-and-compile-ipfs"&gt;Download and Compile IPFS&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#cross-compiling"&gt;Cross Compiling&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#getting-started"&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#some-things-to-try"&gt;Some things to try&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#troubleshooting-1"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#packages"&gt;Packages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#development"&gt;Development&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#map-of-implemented-subsystems"&gt;Map of Implemented Subsystems&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#cli-http-api-architecture-diagram"&gt;CLI, HTTP-API, Architecture Diagram&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#testing"&gt;Testing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#development-dependencies"&gt;Development Dependencies&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#developer-notes"&gt;Developer Notes&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#maintainer-info"&gt;Maintainer Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security Issues&lt;/h2&gt; 
&lt;p&gt;Please follow &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/SECURITY.md"&gt;&lt;code&gt;SECURITY.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;The canonical download instructions for IPFS are over at: &lt;a href="https://docs.ipfs.tech/install/"&gt;https://docs.ipfs.tech/install/&lt;/a&gt;. It is &lt;strong&gt;highly recommended&lt;/strong&gt; you follow those instructions if you are not interested in working on IPFS development.&lt;/p&gt; 
&lt;p&gt;For production use, Release Docker images (below) are recommended.&lt;/p&gt; 
&lt;h3&gt;Minimal System Requirements&lt;/h3&gt; 
&lt;p&gt;Kubo runs on most Linux, macOS, and Windows systems. For optimal performance, we recommend at least 6 GB of RAM and 2 CPU cores (more is ideal, as Kubo is highly parallel).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Larger pinsets require additional memory, with an estimated ~1 GiB of RAM per 20 million items for reproviding to the Amino DHT.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] Systems with less than the recommended memory may experience instability, frequent OOM errors or restarts, and missing data announcement (reprovider window), which can make data fully or partially inaccessible to other peers. Running Kubo on underprovisioned hardware is at your own risk.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;Official images are published at &lt;a href="https://hub.docker.com/r/ipfs/kubo/"&gt;https://hub.docker.com/r/ipfs/kubo/&lt;/a&gt;: &lt;a href="https://hub.docker.com/r/ipfs/kubo/"&gt;&lt;img src="https://img.shields.io/docker/v/ipfs/kubo?color=blue&amp;amp;label=kubo%20docker%20image&amp;amp;logo=docker&amp;amp;sort=semver&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="Docker Image Version (latest semver)" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;🟢 Release Images&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;These are production grade images. Use them.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;latest&lt;/code&gt; and &lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=release"&gt;&lt;code&gt;release&lt;/code&gt;&lt;/a&gt; tags always point at &lt;a href="https://github.com/ipfs/kubo/releases/latest"&gt;the latest stable release&lt;/a&gt;. If you use this, remember to &lt;code&gt;docker pull&lt;/code&gt; periodically to update.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=v"&gt;&lt;code&gt;vN.N.N&lt;/code&gt;&lt;/a&gt; points at a specific &lt;a href="https://github.com/ipfs/kubo/releases"&gt;release tag&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🟠 Developer Preview Images&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;These tags are used by developers for internal testing, not intended for end users or production use.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=master-latest"&gt;&lt;code&gt;master-latest&lt;/code&gt;&lt;/a&gt; always points at the &lt;code&gt;HEAD&lt;/code&gt; of the &lt;a href="https://github.com/ipfs/kubo/commits/master/"&gt;&lt;code&gt;master&lt;/code&gt;&lt;/a&gt; branch&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=master-2"&gt;&lt;code&gt;master-YYYY-DD-MM-GITSHA&lt;/code&gt;&lt;/a&gt; points at a specific commit from the &lt;code&gt;master&lt;/code&gt; branch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🔴 Internal Staging Images&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;We use &lt;code&gt;staging&lt;/code&gt; for testing arbitrary commits and experimental patches. 
  &lt;ul&gt; 
   &lt;li&gt;To build image for current HEAD, force push to &lt;code&gt;staging&lt;/code&gt; via &lt;code&gt;git push origin HEAD:staging --force&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=staging-latest"&gt;&lt;code&gt;staging-latest&lt;/code&gt;&lt;/a&gt; always points at the &lt;code&gt;HEAD&lt;/code&gt; of the &lt;a href="https://github.com/ipfs/kubo/commits/staging/"&gt;&lt;code&gt;staging&lt;/code&gt;&lt;/a&gt; branch&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=staging-2"&gt;&lt;code&gt;staging-YYYY-DD-MM-GITSHA&lt;/code&gt;&lt;/a&gt; points at a specific commit from the &lt;code&gt;staging&lt;/code&gt; branch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ docker pull ipfs/kubo:latest
$ docker run --rm -it --net=host ipfs/kubo:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To &lt;a href="https://docs.ipfs.tech/install/run-ipfs-inside-docker/#customizing-your-node"&gt;customize your node&lt;/a&gt;, pass necessary config via &lt;code&gt;-e&lt;/code&gt; or by mounting scripts in the &lt;code&gt;/container-init.d&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Learn more at &lt;a href="https://docs.ipfs.tech/install/run-ipfs-inside-docker/"&gt;https://docs.ipfs.tech/install/run-ipfs-inside-docker/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Official prebuilt binaries&lt;/h3&gt; 
&lt;p&gt;The official binaries are published at &lt;a href="https://dist.ipfs.tech#kubo"&gt;https://dist.ipfs.tech#kubo&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://dist.ipfs.tech#kubo"&gt;&lt;img src="https://img.shields.io/github/v/release/ipfs/kubo?label=dist.ipfs.tech&amp;amp;logo=ipfs&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="dist.ipfs.tech Downloads" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;From there:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Click the blue "Download Kubo" on the right side of the page.&lt;/li&gt; 
 &lt;li&gt;Open/extract the archive.&lt;/li&gt; 
 &lt;li&gt;Move kubo (&lt;code&gt;ipfs&lt;/code&gt;) to your path (&lt;code&gt;install.sh&lt;/code&gt; can do it for you).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are unable to access &lt;a href="https://dist.ipfs.tech#kubo"&gt;dist.ipfs.tech&lt;/a&gt;, you can also download kubo from:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;this project's GitHub &lt;a href="https://github.com/ipfs/kubo/releases/latest"&gt;releases&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/ipns/dist.ipfs.tech&lt;/code&gt; at &lt;a href="https://dweb.link/ipns/dist.ipfs.tech#kubo"&gt;dweb.link&lt;/a&gt; gateway&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Updating&lt;/h4&gt; 
&lt;h5&gt;Downloading builds using IPFS&lt;/h5&gt; 
&lt;p&gt;List the available versions of Kubo implementation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ ipfs cat /ipns/dist.ipfs.tech/kubo/versions
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, to view available builds for a version from the previous command (&lt;code&gt;$VERSION&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ ipfs ls /ipns/dist.ipfs.tech/kubo/$VERSION
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To download a given build of a version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_darwin-386.tar.gz    # darwin 32-bit build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_darwin-amd64.tar.gz  # darwin 64-bit build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_freebsd-amd64.tar.gz # freebsd 64-bit build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_linux-386.tar.gz     # linux 32-bit build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_linux-amd64.tar.gz   # linux 64-bit build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_linux-arm.tar.gz     # linux arm build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_windows-amd64.zip    # windows 64-bit build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Unofficial Linux packages&lt;/h3&gt; 
&lt;a href="https://repology.org/project/kubo/versions"&gt; &lt;img src="https://repology.org/badge/vertical-allrepos/kubo.svg?sanitize=true" alt="Packaging status" align="right" /&gt; &lt;/a&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#arch-linux"&gt;ArchLinux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#gentoo-linux"&gt;Gentoo Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#nix-linux"&gt;Nix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#solus"&gt;Solus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#opensuse"&gt;openSUSE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#guix"&gt;Guix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#snap"&gt;Snap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#ubuntu-ppa"&gt;Ubuntu PPA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#fedora-copr"&gt;Fedora&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Arch Linux&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://wiki.archlinux.org/title/IPFS"&gt;&lt;img src="https://img.shields.io/archlinux/v/community/x86_64/kubo?color=1793d1&amp;amp;label=kubo&amp;amp;logo=arch-linux&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="kubo via Community Repo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# pacman -S kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://archlinux.org/packages/kubo/"&gt;&lt;img src="https://img.shields.io/static/v1?label=kubo-git&amp;amp;message=latest%40master&amp;amp;color=1793d1&amp;amp;logo=arch-linux&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="kubo-git via AUR" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a name="gentoo-linux"&gt;Gentoo Linux&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://wiki.gentoo.org/wiki/Kubo"&gt;https://wiki.gentoo.org/wiki/Kubo&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# emerge -a net-p2p/kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://packages.gentoo.org/packages/net-p2p/kubo"&gt;https://packages.gentoo.org/packages/net-p2p/kubo&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a name="nix-linux"&gt;Nix&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;With the purely functional package manager &lt;a href="https://nixos.org/nix/"&gt;Nix&lt;/a&gt; you can install kubo like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ nix-env -i kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also install the Package by using its attribute name, which is also &lt;code&gt;kubo&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Solus&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://dev.getsol.us/source/kubo/repository/master/"&gt;Package for Solus&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo eopkg install kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also install it through the Solus software center.&lt;/p&gt; 
&lt;h4&gt;openSUSE&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://software.opensuse.org/package/kubo"&gt;Community Package for kubo&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Guix&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://packages.guix.gnu.org/search/?query=kubo"&gt;Community Package for kubo&lt;/a&gt; is available.&lt;/p&gt; 
&lt;h4&gt;Snap&lt;/h4&gt; 
&lt;p&gt;No longer supported, see rationale in &lt;a href="https://github.com/ipfs/kubo/issues/8688"&gt;kubo#8688&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Ubuntu PPA&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://launchpad.net/~twdragon/+archive/ubuntu/ipfs"&gt;PPA homepage&lt;/a&gt; on Launchpad.&lt;/p&gt; 
&lt;h5&gt;Latest Ubuntu (&amp;gt;= 20.04 LTS)&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo add-apt-repository ppa:twdragon/ipfs
sudo apt update
sudo apt install ipfs-kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fedora COPR&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/taw00/ipfs-rpm"&gt;&lt;code&gt;taw00/ipfs-rpm&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;Any Ubuntu version&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo su
echo 'deb https://ppa.launchpadcontent.net/twdragon/ipfs/ubuntu &amp;lt;&amp;lt;DISTRO&amp;gt;&amp;gt; main' &amp;gt;&amp;gt; /etc/apt/sources.list.d/ipfs
echo 'deb-src https://ppa.launchpadcontent.net/twdragon/ipfs/ubuntu &amp;lt;&amp;lt;DISTRO&amp;gt;&amp;gt; main' &amp;gt;&amp;gt; /etc/apt/sources.list.d/ipfs
exit
sudo apt update
sudo apt install ipfs-kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;where &lt;code&gt;&amp;lt;&amp;lt;DISTRO&amp;gt;&amp;gt;&lt;/code&gt; is the codename of your Ubuntu distribution (for example, &lt;code&gt;jammy&lt;/code&gt; for 22.04 LTS). During the first installation the package maintenance script may automatically ask you about which networking profile, CPU accounting model, and/or existing node configuration file you want to use.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this method also may work with any compatible Debian-based distro which has &lt;code&gt;libc6&lt;/code&gt; inside, and APT as a package manager.&lt;/p&gt; 
&lt;h3&gt;Unofficial Windows packages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#chocolatey"&gt;Chocolatey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#scoop"&gt;Scoop&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Chocolatey&lt;/h4&gt; 
&lt;p&gt;No longer supported, see rationale in &lt;a href="https://github.com/ipfs/kubo/issues/9341"&gt;kubo#9341&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Scoop&lt;/h4&gt; 
&lt;p&gt;Scoop provides kubo as &lt;code&gt;kubo&lt;/code&gt; in its 'extras' bucket.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Powershell"&gt;PS&amp;gt; scoop bucket add extras
PS&amp;gt; scoop install kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Unofficial macOS packages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#macports"&gt;MacPorts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#nix-macos"&gt;Nix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#homebrew"&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;MacPorts&lt;/h4&gt; 
&lt;p&gt;The package &lt;a href="https://ports.macports.org/port/ipfs"&gt;ipfs&lt;/a&gt; currently points to kubo and is being maintained.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo port install ipfs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a name="nix-macos"&gt;Nix&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;In macOS you can use the purely functional package manager &lt;a href="https://nixos.org/nix/"&gt;Nix&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ nix-env -i kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also install the Package by using its attribute name, which is also &lt;code&gt;kubo&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Homebrew&lt;/h4&gt; 
&lt;p&gt;A Homebrew formula &lt;a href="https://formulae.brew.sh/formula/ipfs"&gt;ipfs&lt;/a&gt; is maintained too.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ brew install --formula ipfs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build from Source&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/go-mod/go-version/ipfs/kubo?label=Requires%20Go&amp;amp;logo=go&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="GitHub go.mod Go version" /&gt;&lt;/p&gt; 
&lt;p&gt;kubo's build system requires Go and some standard POSIX build tools:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GNU make&lt;/li&gt; 
 &lt;li&gt;Git&lt;/li&gt; 
 &lt;li&gt;GCC (or some other go compatible C Compiler) (optional)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To build without GCC, build with &lt;code&gt;CGO_ENABLED=0&lt;/code&gt; (e.g., &lt;code&gt;make build CGO_ENABLED=0&lt;/code&gt;).&lt;/p&gt; 
&lt;h4&gt;Install Go&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/go-mod/go-version/ipfs/kubo?label=Requires%20Go&amp;amp;logo=go&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="GitHub go.mod Go version" /&gt;&lt;/p&gt; 
&lt;p&gt;If you need to update: &lt;a href="https://golang.org/dl/"&gt;Download latest version of Go&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You'll need to add Go's bin directories to your &lt;code&gt;$PATH&lt;/code&gt; environment variable e.g., by adding these lines to your &lt;code&gt;/etc/profile&lt;/code&gt; (for a system-wide installation) or &lt;code&gt;$HOME/.profile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;export PATH=$PATH:/usr/local/go/bin
export PATH=$PATH:$GOPATH/bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(If you run into trouble, see the &lt;a href="https://golang.org/doc/install"&gt;Go install instructions&lt;/a&gt;).&lt;/p&gt; 
&lt;h4&gt;Download and Compile IPFS&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ipfs/kubo.git

$ cd kubo
$ make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can run &lt;code&gt;make build&lt;/code&gt; to build the kubo binary (storing it in &lt;code&gt;cmd/ipfs/ipfs&lt;/code&gt;) without installing it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you get an error along the lines of "fatal error: stdlib.h: No such file or directory", you're missing a C compiler. Either re-run &lt;code&gt;make&lt;/code&gt; with &lt;code&gt;CGO_ENABLED=0&lt;/code&gt; or install GCC.&lt;/p&gt; 
&lt;h5&gt;Cross Compiling&lt;/h5&gt; 
&lt;p&gt;Compiling for a different platform is as simple as running:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make build GOOS=myTargetOS GOARCH=myTargetArchitecture
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Troubleshooting&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Separate &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/windows.md"&gt;instructions are available for building on Windows&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;git&lt;/code&gt; is required in order for &lt;code&gt;go get&lt;/code&gt; to fetch all dependencies.&lt;/li&gt; 
 &lt;li&gt;Package managers often contain out-of-date &lt;code&gt;golang&lt;/code&gt; packages. Ensure that &lt;code&gt;go version&lt;/code&gt; reports the minimum version required (see go.mod). See above for how to install go.&lt;/li&gt; 
 &lt;li&gt;If you are interested in development, please install the development dependencies as well.&lt;/li&gt; 
 &lt;li&gt;Shell command completions can be generated with one of the &lt;code&gt;ipfs commands completion&lt;/code&gt; subcommands. Read &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/command-completion.md"&gt;docs/command-completion.md&lt;/a&gt; to learn more.&lt;/li&gt; 
 &lt;li&gt;See the &lt;a href="https://github.com/ipfs/kubo/tree/master/misc"&gt;misc folder&lt;/a&gt; for how to connect IPFS to systemd or whatever init system your distro uses.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://docs.ipfs.tech/how-to/command-line-quick-start/"&gt;&lt;img src="https://img.shields.io/static/v1?label=docs&amp;amp;message=Command-line%20quick%20start&amp;amp;color=blue&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="docs: Command-line quick start" /&gt;&lt;/a&gt; &lt;a href="https://docs.ipfs.tech/reference/kubo/cli/"&gt;&lt;img src="https://img.shields.io/static/v1?label=docs&amp;amp;message=Command-line%20reference&amp;amp;color=blue&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="docs: Command-line reference" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To start using IPFS, you must first initialize IPFS's config files on your system, this is done with &lt;code&gt;ipfs init&lt;/code&gt;. See &lt;code&gt;ipfs init --help&lt;/code&gt; for information on the optional arguments it takes. After initialization is complete, you can use &lt;code&gt;ipfs mount&lt;/code&gt;, &lt;code&gt;ipfs add&lt;/code&gt; and any of the other commands to explore!&lt;/p&gt; 
&lt;p&gt;For detailed configuration options, see &lt;a href="https://github.com/ipfs/kubo/raw/master/docs/config.md"&gt;docs/config.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Some things to try&lt;/h3&gt; 
&lt;p&gt;Basic proof of 'ipfs working' locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;echo "hello world" &amp;gt; hello
ipfs add hello
# This should output a hash string that looks something like:
# QmT78zSuBmuS4z925WZfrqQ1qHaJ56DQaTfyMUF7F8ff5o
ipfs cat &amp;lt;that hash&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;HTTP/RPC clients&lt;/h3&gt; 
&lt;p&gt;For programmatic interaction with Kubo, see our &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/http-rpc-clients.md"&gt;list of HTTP/RPC clients&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;If you have previously installed IPFS before and you are running into problems getting a newer version to work, try deleting (or backing up somewhere else) your IPFS config directory (~/.ipfs by default) and rerunning &lt;code&gt;ipfs init&lt;/code&gt;. This will reinitialize the config file to its defaults and clear out the local datastore of any bad entries.&lt;/p&gt; 
&lt;p&gt;For more information about configuration options, see &lt;a href="https://github.com/ipfs/kubo/raw/master/docs/config.md"&gt;docs/config.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please direct general questions and help requests to our &lt;a href="https://discuss.ipfs.tech"&gt;forums&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you believe you've found a bug, check the &lt;a href="https://github.com/ipfs/kubo/issues"&gt;issues list&lt;/a&gt; and, if you don't see your problem there, either come talk to us on &lt;a href="https://docs.ipfs.tech/community/chat/"&gt;Matrix chat&lt;/a&gt;, or file an issue of your own!&lt;/p&gt; 
&lt;h2&gt;Packages&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://docs.ipfs.tech/reference/go/api/"&gt;IPFS in GO&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Some places to get you started on the codebase:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Main file: &lt;a href="https://github.com/ipfs/kubo/raw/master/cmd/ipfs/main.go"&gt;./cmd/ipfs/main.go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;CLI Commands: &lt;a href="https://github.com/ipfs/kubo/tree/master/core/commands"&gt;./core/commands/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Bitswap (the data trading engine): &lt;a href="https://github.com/ipfs/go-bitswap"&gt;go-bitswap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;libp2p 
  &lt;ul&gt; 
   &lt;li&gt;libp2p: &lt;a href="https://github.com/libp2p/go-libp2p"&gt;https://github.com/libp2p/go-libp2p&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;DHT: &lt;a href="https://github.com/libp2p/go-libp2p-kad-dht"&gt;https://github.com/libp2p/go-libp2p-kad-dht&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ipfs/kubo/tree/master/docs/add-code-flow.md"&gt;IPFS : The &lt;code&gt;Add&lt;/code&gt; command demystified&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Map of Implemented Subsystems&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;WIP&lt;/strong&gt;: This is a high-level architecture diagram of the various sub-systems of this specific implementation. To be updated with how they interact. Anyone who has suggestions is welcome to comment &lt;a href="https://docs.google.com/drawings/d/1OVpBT2q-NtSJqlPX3buvjYhOnWfdzb85YEsM_njesME/edit"&gt;here&lt;/a&gt; on how we can improve this! &lt;img src="https://docs.google.com/drawings/d/e/2PACX-1vS_n1FvSu6mdmSirkBrIIEib2gqhgtatD9awaP2_WdrGN4zTNeg620XQd9P95WT-IvognSxIIdCM5uE/pub?w=1446&amp;amp;h=1036" /&gt;&lt;/p&gt; 
&lt;h3&gt;CLI, HTTP-API, Architecture Diagram&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ipfs/kubo/master/docs/cli-http-api-core-diagram.png" alt="" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://github.com/ipfs/pm/pull/678#discussion_r210410924"&gt;Origin&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Description: Dotted means "likely going away". The "Legacy" parts are thin wrappers around some commands to translate between the new system and the old system. The grayed-out parts on the "daemon" diagram are there to show that the code is all the same, it's just that we turn some pieces on and some pieces off depending on whether we're running on the client or the server.&lt;/p&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;make test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Development Dependencies&lt;/h3&gt; 
&lt;p&gt;If you make changes to the protocol buffers, you will need to install the &lt;a href="https://github.com/google/protobuf"&gt;protoc compiler&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Developer Notes&lt;/h3&gt; 
&lt;p&gt;Find more documentation for developers on &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs"&gt;docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Maintainer Info&lt;/h2&gt; 
&lt;p&gt;Kubo is maintained by &lt;a href="https://ipshipyard.com/"&gt;Shipyard&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;This repository is part of &lt;a href="https://ipshipyard.notion.site/IPFS-Go-Triage-Boxo-Kubo-Rainbow-0ddee6b7f28d412da7dabe4f9107c29a"&gt;Shipyard's GO Triage triage&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ipshipyard.notion.site/Kubo-Release-Process-6dba4f5755c9458ab5685eeb28173778"&gt;Release Process&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/ipfs/community/raw/master/CONTRIBUTING.md"&gt;&lt;img src="https://cdn.rawgit.com/jbenet/contribute-ipfs-gif/master/img/contribute.gif" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We ❤️ all &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/AUTHORS"&gt;our contributors&lt;/a&gt;; this project wouldn’t be what it is without you! If you want to help out, please see &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This repository falls under the IPFS &lt;a href="https://github.com/ipfs/community/raw/master/code-of-conduct.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Members of IPFS community provide Kubo support on &lt;a href="https://discuss.ipfs.tech/c/help/help-kubo/23"&gt;discussion forum category here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Need help with IPFS itself? Learn where to get help and support at &lt;a href="https://ipfs.tech/help"&gt;https://ipfs.tech/help&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is dual-licensed under Apache 2.0 and MIT terms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Apache License, Version 2.0, (&lt;a href="https://github.com/ipfs/kubo/raw/master/LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;MIT license (&lt;a href="https://github.com/ipfs/kubo/raw/master/LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href="http://opensource.org/licenses/MIT"&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>nats-io/nats-server</title>
      <link>https://github.com/nats-io/nats-server</link>
      <description>&lt;p&gt;High-Performance server for NATS.io, the cloud and edge native messaging system.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/nats-io/nats-server/main/logos/nats-horizontal-color.png" width="300" alt="NATS Logo" /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://nats.io"&gt;NATS&lt;/a&gt; is a simple, secure and performant communications system for digital systems, services and devices. NATS is part of the Cloud Native Computing Foundation (&lt;a href="https://cncf.io"&gt;CNCF&lt;/a&gt;). NATS has over &lt;a href="https://nats.io/download/"&gt;40 client language implementations&lt;/a&gt;, and its server can run on-premise, in the cloud, at the edge, and even on a Raspberry Pi. NATS can secure and simplify design and operation of modern distributed systems.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache2-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nats-io/nats-server/actions/workflows/tests.yaml"&gt;&lt;img src="https://github.com/nats-io/nats-server/actions/workflows/tests.yaml/badge.svg?branch=main" alt="Build" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nats-io/nats-server/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/nats-io/nats-server" alt="Release" /&gt;&lt;/a&gt; &lt;a href="https://slack.nats.io"&gt;&lt;img src="https://img.shields.io/badge/chat-on%20slack-green" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/nats-io/nats-server?branch=main"&gt;&lt;img src="https://coveralls.io/repos/github/nats-io/nats-server/badge.svg?branch=main" alt="Coverage" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/_/nats"&gt;&lt;img src="https://img.shields.io/docker/pulls/_/nats.svg?sanitize=true" alt="Docker Downloads" /&gt;&lt;/a&gt; &lt;a href="https://somsubhra.github.io/github-release-stats/?username=nats-io&amp;amp;repository=nats-server"&gt;&lt;img src="https://img.shields.io/github/downloads/nats-io/nats-server/total.svg?logo=github" alt="GitHub Downloads" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/1895"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/1895/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/nats/nats"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/nats" alt="Artifact Hub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nats.io"&gt;Official Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.nats.io"&gt;Official Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.nats.io/reference/faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Watch &lt;a href="https://rethink.synadia.com/episodes/1/"&gt;a video overview&lt;/a&gt; of NATS.&lt;/li&gt; 
 &lt;li&gt;Watch &lt;a href="https://www.youtube.com/watch?v=sm63oAVPqAM"&gt;this video from SCALE 13x&lt;/a&gt; to learn more about its origin story and design philosophy.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/nats_io"&gt;Twitter&lt;/a&gt;: Follow us on Twitter!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/natsio"&gt;Google Groups&lt;/a&gt;: Where you can ask questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://natsio.slack.com"&gt;Slack&lt;/a&gt;: Click &lt;a href="https://slack.nats.io"&gt;here&lt;/a&gt; to join. You can ask questions to our maintainers and to the rich and active community.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you are interested in contributing to NATS, read about our...&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nats-io/nats-server/main/CONTRIBUTING.md"&gt;Contributing guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nats-io"&gt;Report issues or propose Pull Requests&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The NATS product roadmap can be found &lt;a href="https://nats.io/about/#roadmap"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Adopters&lt;/h2&gt; 
&lt;p&gt;Who uses NATS? See our &lt;a href="https://nats.io/#who-uses-nats"&gt;list of users&lt;/a&gt; on &lt;a href="https://nats.io"&gt;https://nats.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;h3&gt;Security Audit&lt;/h3&gt; 
&lt;p&gt;A third party security audit was performed by Trail of Bits following engagement by the Open Source Technology Improvement Fund (OSTIF). You can see the &lt;a href="https://github.com/trailofbits/publications/raw/master/reviews/2025-04-ostif-nats-securityreview.pdf"&gt;full report from April 2025 here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Reporting Security Vulnerabilities&lt;/h3&gt; 
&lt;p&gt;If you've found a vulnerability or a potential vulnerability in the NATS server, please let us know at &lt;a href="mailto:security@nats.io"&gt;nats-security&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Unless otherwise noted, the NATS source files are distributed under the Apache Version 2.0 license found in the LICENSE file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hashicorp/terraform</title>
      <link>https://github.com/hashicorp/terraform</link>
      <description>&lt;p&gt;Terraform enables you to safely and predictably create, change, and improve infrastructure. It is a source-available tool that codifies APIs into declarative configuration files that can be shared amongst team members, treated as code, edited, reviewed, and versioned.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Terraform&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href="https://developer.hashicorp.com/terraform"&gt;https://developer.hashicorp.com/terraform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Forums: &lt;a href="https://discuss.hashicorp.com/c/terraform-core"&gt;HashiCorp Discuss&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://developer.hashicorp.com/terraform/docs"&gt;https://developer.hashicorp.com/terraform/docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tutorials: &lt;a href="https://developer.hashicorp.com/terraform/tutorials"&gt;HashiCorp's Learn Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Certification Exam: &lt;a href="https://www.hashicorp.com/certification/#hashicorp-certified-terraform-associate"&gt;HashiCorp Certified: Terraform Associate&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img alt="Terraform" src="https://www.datocms-assets.com/2885/1731373310-terraform_white.svg?sanitize=true" width="600px" /&gt; 
&lt;p&gt;Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.&lt;/p&gt; 
&lt;p&gt;The key features of Terraform are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Infrastructure as Code&lt;/strong&gt;: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Execution Plans&lt;/strong&gt;: Terraform has a "planning" step where it generates an execution plan. The execution plan shows what Terraform will do when you call apply. This lets you avoid any surprises when Terraform manipulates infrastructure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Resource Graph&lt;/strong&gt;: Terraform builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, Terraform builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Change Automation&lt;/strong&gt;: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what Terraform will change and in what order, avoiding many possible human errors.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information, refer to the &lt;a href="https://www.terraform.io/intro"&gt;What is Terraform?&lt;/a&gt; page on the Terraform website.&lt;/p&gt; 
&lt;h2&gt;Getting Started &amp;amp; Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation is available on the &lt;a href="https://developer.hashicorp.com/terraform"&gt;Terraform website&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.hashicorp.com/terraform/intro"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.hashicorp.com/terraform/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you're new to Terraform and want to get started creating infrastructure, please check out our &lt;a href="https://learn.hashicorp.com/terraform#getting-started"&gt;Getting Started guides&lt;/a&gt; on HashiCorp's learning platform. There are also &lt;a href="https://learn.hashicorp.com/terraform#operations-and-development"&gt;additional guides&lt;/a&gt; to continue your learning.&lt;/p&gt; 
&lt;p&gt;Show off your Terraform knowledge by passing a certification exam. Visit the &lt;a href="https://www.hashicorp.com/certification/"&gt;certification page&lt;/a&gt; for information about exams and find &lt;a href="https://learn.hashicorp.com/terraform/certification/terraform-associate"&gt;study materials&lt;/a&gt; on HashiCorp's learning platform.&lt;/p&gt; 
&lt;h2&gt;Developing Terraform&lt;/h2&gt; 
&lt;p&gt;This repository contains only Terraform core, which includes the command line interface and the main graph engine. Providers are implemented as plugins, and Terraform can automatically download providers that are published on &lt;a href="https://registry.terraform.io"&gt;the Terraform Registry&lt;/a&gt;. HashiCorp develops some providers, and others are developed by other organizations. For more information, refer to &lt;a href="https://developer.hashicorp.com/terraform/plugin"&gt;Plugin development&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;To learn more about compiling Terraform and contributing suggested changes, refer to &lt;a href="https://raw.githubusercontent.com/hashicorp/terraform/main/.github/CONTRIBUTING.md"&gt;the contributing guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To learn more about how we handle bug reports, refer to the &lt;a href="https://raw.githubusercontent.com/hashicorp/terraform/main/BUGPROCESS.md"&gt;bug triage guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To learn how to contribute to the Terraform documentation, refer to the &lt;a href="https://github.com/hashicorp/web-unified-docs"&gt;Web Unified Docs repository&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/hashicorp/terraform/raw/main/LICENSE"&gt;Business Source License 1.1&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>charmbracelet/crush</title>
      <link>https://github.com/charmbracelet/crush</link>
      <description>&lt;p&gt;The glamourous AI coding agent for your favourite terminal 💘&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Crush&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://stuff.charm.sh/crush/charm-crush.png"&gt;&lt;img width="450" alt="Charm Crush Logo" src="https://github.com/user-attachments/assets/adc1a6f4-b284-4603-836c-59038caa2e8b" /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href="https://github.com/charmbracelet/crush/releases"&gt;&lt;img src="https://img.shields.io/github/release/charmbracelet/crush" alt="Latest Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/charmbracelet/crush/actions"&gt;&lt;img src="https://github.com/charmbracelet/crush/workflows/build/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;Your new coding bestie, now available in your favourite terminal.&lt;br /&gt;Your tools, your code, and your workflows, wired into your LLM of choice.&lt;/p&gt; 
&lt;p align="center"&gt;&lt;img width="800" alt="Crush Demo" src="https://github.com/user-attachments/assets/58280caf-851b-470a-b6f7-d5c4ea8a1968" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Model:&lt;/strong&gt; choose from a wide range of LLMs or add your own via OpenAI- or Anthropic-compatible APIs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible:&lt;/strong&gt; switch LLMs mid-session while preserving context&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Session-Based:&lt;/strong&gt; maintain multiple work sessions and contexts per project&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LSP-Enhanced:&lt;/strong&gt; Crush uses LSPs for additional context, just like you do&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible:&lt;/strong&gt; add capabilities via MCPs (&lt;code&gt;http&lt;/code&gt;, &lt;code&gt;stdio&lt;/code&gt;, and &lt;code&gt;sse&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Works Everywhere:&lt;/strong&gt; first-class support in every terminal on macOS, Linux, Windows (PowerShell and WSL), FreeBSD, OpenBSD, and NetBSD&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Use a package manager:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Homebrew
brew install charmbracelet/tap/crush

# NPM
npm install -g @charmland/crush

# Arch Linux (btw)
yay -S crush-bin

# Nix
nix run github:numtide/nix-ai-tools#crush
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Windows users:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Winget
winget install charmbracelet.crush

# Scoop
scoop bucket add charm https://github.com/charmbracelet/scoop-bucket.git
scoop install crush
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Nix (NUR)&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Crush is available via &lt;a href="https://github.com/nix-community/NUR"&gt;NUR&lt;/a&gt; in &lt;code&gt;nur.repos.charmbracelet.crush&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;You can also try out Crush via &lt;code&gt;nix-shell&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Add the NUR channel.
nix-channel --add https://github.com/nix-community/NUR/archive/main.tar.gz nur
nix-channel --update

# Get Crush in a Nix shell.
nix-shell -p '(import &amp;lt;nur&amp;gt; { pkgs = import &amp;lt;nixpkgs&amp;gt; {}; }).repos.charmbracelet.crush'
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Debian/Ubuntu&lt;/strong&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg
echo "deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *" | sudo tee /etc/apt/sources.list.d/charm.list
sudo apt update &amp;amp;&amp;amp; sudo apt install crush
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Fedora/RHEL&lt;/strong&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;echo '[charm]
name=Charm
baseurl=https://repo.charm.sh/yum/
enabled=1
gpgcheck=1
gpgkey=https://repo.charm.sh/yum/gpg.key' | sudo tee /etc/yum.repos.d/charm.repo
sudo yum install crush
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Or, download it:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/crush/releases"&gt;Packages&lt;/a&gt; are available in Debian and RPM formats&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/crush/releases"&gt;Binaries&lt;/a&gt; are available for Linux, macOS, Windows, FreeBSD, OpenBSD, and NetBSD&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or just install it with Go:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go install github.com/charmbracelet/crush@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Productivity may increase when using Crush and you may find yourself nerd sniped when first using the application. If the symptoms persist, join the &lt;a href="https://charm.land/discord"&gt;Discord&lt;/a&gt; and nerd snipe the rest of us.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;The quickest way to get started is to grab an API key for your preferred provider such as Anthropic, OpenAI, Groq, or OpenRouter and just start Crush. You'll be prompted to enter your API key.&lt;/p&gt; 
&lt;p&gt;That said, you can also set environment variables for preferred providers.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Environment Variable&lt;/th&gt; 
   &lt;th&gt;Provider&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ANTHROPIC_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Anthropic&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;OpenAI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OPENROUTER_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;OpenRouter&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;GEMINI_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Google Gemini&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;VERTEXAI_PROJECT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Google Cloud VertexAI (Gemini)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;VERTEXAI_LOCATION&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Google Cloud VertexAI (Gemini)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;GROQ_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Groq&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;AWS Bedrock (Claude)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;AWS Bedrock (Claude)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AWS_REGION&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;AWS Bedrock (Claude)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AZURE_OPENAI_ENDPOINT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Azure OpenAI models&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AZURE_OPENAI_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Azure OpenAI models (optional when using Entra ID)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AZURE_OPENAI_API_VERSION&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Azure OpenAI models&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;By the Way&lt;/h3&gt; 
&lt;p&gt;Is there a provider you’d like to see in Crush? Is there an existing model that needs an update?&lt;/p&gt; 
&lt;p&gt;Crush’s default model listing is managed in &lt;a href="https://github.com/charmbracelet/catwalk"&gt;Catwalk&lt;/a&gt;, a community-supported, open source repository of Crush-compatible models, and you’re welcome to contribute.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/charmbracelet/catwalk"&gt;&lt;img width="174" height="174" alt="Catwalk Badge" src="https://github.com/user-attachments/assets/95b49515-fe82-4409-b10d-5beb0873787d" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Crush runs great with no configuration. That said, if you do need or want to customize Crush, configuration can be added either local to the project itself, or globally, with the following priority:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;.crush.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;crush.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$HOME/.config/crush/crush.json&lt;/code&gt; (Windows: &lt;code&gt;%USERPROFILE%\AppData\Local\crush\crush.json&lt;/code&gt;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Configuration itself is stored as a JSON object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
   "this-setting": {"this": "that"},
   "that-setting": ["ceci", "cela"]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As an additional note, Crush also stores ephemeral data, such as application state, in one additional location:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Unix
$HOME/.local/share/crush/crush.json

# Windows
%LOCALAPPDATA%\crush\crush.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LSPs&lt;/h3&gt; 
&lt;p&gt;Crush can use LSPs for additional context to help inform its decisions, just like you would. LSPs can be added manually like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "lsp": {
    "go": {
      "command": "gopls",
      "env": {
        "GOTOOLCHAIN": "go1.24.5"
      }
    },
    "typescript": {
      "command": "typescript-language-server",
      "args": ["--stdio"]
    },
    "nix": {
      "command": "nil"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MCPs&lt;/h3&gt; 
&lt;p&gt;Crush also supports Model Context Protocol (MCP) servers through three transport types: &lt;code&gt;stdio&lt;/code&gt; for command-line servers, &lt;code&gt;http&lt;/code&gt; for HTTP endpoints, and &lt;code&gt;sse&lt;/code&gt; for Server-Sent Events. Environment variable expansion is supported using &lt;code&gt;$(echo $VAR)&lt;/code&gt; syntax.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "mcp": {
    "filesystem": {
      "type": "stdio",
      "command": "node",
      "args": ["/path/to/mcp-server.js"],
      "env": {
        "NODE_ENV": "production"
      }
    },
    "github": {
      "type": "http",
      "url": "https://example.com/mcp/",
      "headers": {
        "Authorization": "$(echo Bearer $EXAMPLE_MCP_TOKEN)"
      }
    },
    "streaming-service": {
      "type": "sse",
      "url": "https://example.com/mcp/sse",
      "headers": {
        "API-Key": "$(echo $API_KEY)"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Ignoring Files&lt;/h3&gt; 
&lt;p&gt;Crush respects &lt;code&gt;.gitignore&lt;/code&gt; files by default, but you can also create a &lt;code&gt;.crushignore&lt;/code&gt; file to specify additional files and directories that Crush should ignore. This is useful for excluding files that you want in version control but don't want Crush to consider when providing context.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;.crushignore&lt;/code&gt; file uses the same syntax as &lt;code&gt;.gitignore&lt;/code&gt; and can be placed in the root of your project or in subdirectories.&lt;/p&gt; 
&lt;h3&gt;Allowing Tools&lt;/h3&gt; 
&lt;p&gt;By default, Crush will ask you for permission before running tool calls. If you'd like, you can allow tools to be executed without prompting you for permissions. Use this with care.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "permissions": {
    "allowed_tools": [
      "view",
      "ls",
      "grep",
      "edit",
      "mcp_context7_get-library-doc"
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also skip all permission prompts entirely by running Crush with the &lt;code&gt;--yolo&lt;/code&gt; flag. Be very, very careful with this feature.&lt;/p&gt; 
&lt;h3&gt;Local Models&lt;/h3&gt; 
&lt;p&gt;Local models can also be configured via OpenAI-compatible API. Here are two common examples:&lt;/p&gt; 
&lt;h4&gt;Ollama&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "providers": {
    "ollama": {
      "name": "Ollama",
      "base_url": "http://localhost:11434/v1/",
      "type": "openai",
      "models": [
        {
          "name": "Qwen 3 30B",
          "id": "qwen3:30b",
          "context_window": 256000,
          "default_max_tokens": 20000
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;LM Studio&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "providers": {
    "lmstudio": {
      "name": "LM Studio",
      "base_url": "http://localhost:1234/v1/",
      "type": "openai",
      "models": [
        {
          "name": "Qwen 3 30B",
          "id": "qwen/qwen3-30b-a3b-2507",
          "context_window": 256000,
          "default_max_tokens": 20000
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Custom Providers&lt;/h3&gt; 
&lt;p&gt;Crush supports custom provider configurations for both OpenAI-compatible and Anthropic-compatible APIs.&lt;/p&gt; 
&lt;h4&gt;OpenAI-Compatible APIs&lt;/h4&gt; 
&lt;p&gt;Here’s an example configuration for Deepseek, which uses an OpenAI-compatible API. Don't forget to set &lt;code&gt;DEEPSEEK_API_KEY&lt;/code&gt; in your environment.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "providers": {
    "deepseek": {
      "type": "openai",
      "base_url": "https://api.deepseek.com/v1",
      "api_key": "$DEEPSEEK_API_KEY",
      "models": [
        {
          "id": "deepseek-chat",
          "name": "Deepseek V3",
          "cost_per_1m_in": 0.27,
          "cost_per_1m_out": 1.1,
          "cost_per_1m_in_cached": 0.07,
          "cost_per_1m_out_cached": 1.1,
          "context_window": 64000,
          "default_max_tokens": 5000
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Anthropic-Compatible APIs&lt;/h4&gt; 
&lt;p&gt;Custom Anthropic-compatible providers follow this format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "providers": {
    "custom-anthropic": {
      "type": "anthropic",
      "base_url": "https://api.anthropic.com/v1",
      "api_key": "$ANTHROPIC_API_KEY",
      "extra_headers": {
        "anthropic-version": "2023-06-01"
      },
      "models": [
        {
          "id": "claude-sonnet-4-20250514",
          "name": "Claude Sonnet 4",
          "cost_per_1m_in": 3,
          "cost_per_1m_out": 15,
          "cost_per_1m_in_cached": 3.75,
          "cost_per_1m_out_cached": 0.3,
          "context_window": 200000,
          "default_max_tokens": 50000,
          "can_reason": true,
          "supports_attachments": true
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Amazon Bedrock&lt;/h3&gt; 
&lt;p&gt;Crush currently supports running Anthropic models through Bedrock, with caching disabled.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A Bedrock provider will appear once you have AWS configured, i.e. &lt;code&gt;aws configure&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Crush also expects the &lt;code&gt;AWS_REGION&lt;/code&gt; or &lt;code&gt;AWS_DEFAULT_REGION&lt;/code&gt; to be set&lt;/li&gt; 
 &lt;li&gt;To use a specific AWS profile set &lt;code&gt;AWS_PROFILE&lt;/code&gt; in your environment, i.e. &lt;code&gt;AWS_PROFILE=myprofile crush&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Vertex AI Platform&lt;/h3&gt; 
&lt;p&gt;Vertex AI will appear in the list of available providers when &lt;code&gt;VERTEXAI_PROJECT&lt;/code&gt; and &lt;code&gt;VERTEXAI_LOCATION&lt;/code&gt; are set. You will also need to be authenticated:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gcloud auth application-default login
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To add specific models to the configuration, configure as such:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "providers": {
    "vertexai": {
      "models": [
        {
          "id": "claude-sonnet-4@20250514",
          "name": "VertexAI Sonnet 4",
          "cost_per_1m_in": 3,
          "cost_per_1m_out": 15,
          "cost_per_1m_in_cached": 3.75,
          "cost_per_1m_out_cached": 0.3,
          "context_window": 200000,
          "default_max_tokens": 50000,
          "can_reason": true,
          "supports_attachments": true
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;A Note on Claude Max and GitHub Copilot&lt;/h2&gt; 
&lt;p&gt;Crush only supports model providers through official, compliant APIs. We do not support or endorse any methods that rely on personal Claude Max and GitHub Copilot accounts or OAuth workarounds, which may violate Anthropic and Microsoft’s Terms of Service.&lt;/p&gt; 
&lt;p&gt;We’re committed to building sustainable, trusted integrations with model providers. If you’re a provider interested in working with us, &lt;a href="mailto:vt100@charm.sh"&gt;reach out&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Logging&lt;/h2&gt; 
&lt;p&gt;Sometimes you need to look at logs. Luckily, Crush logs all sorts of stuff. Logs are stored in &lt;code&gt;./.crush/logs/crush.log&lt;/code&gt; relative to the project.&lt;/p&gt; 
&lt;p&gt;The CLI also contains some helper commands to make perusing recent logs easier:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Print the last 1000 lines
crush logs

# Print the last 500 lines
crush logs --tail 500

# Follow logs in real time
crush logs --follow
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Want more logging? Run &lt;code&gt;crush&lt;/code&gt; with the &lt;code&gt;--debug&lt;/code&gt; flag, or enable it in the config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "options": {
    "debug": true,
    "debug_lsp": true
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Whatcha think?&lt;/h2&gt; 
&lt;p&gt;We’d love to hear your thoughts on this project. Need help? We gotchu. You can find us on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/charmcli"&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://charm.land/discord"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://charm.land/slack"&gt;Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mastodon.social/@charmcli"&gt;The Fediverse&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/charmbracelet/crush/raw/main/LICENSE.md"&gt;FSL-1.1-MIT&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Part of &lt;a href="https://charm.land"&gt;Charm&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://charm.land/"&gt;&lt;img alt="The Charm logo" width="400" src="https://stuff.charm.sh/charm-banner-next.jpg" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!--prettier-ignore--&gt; 
&lt;p&gt;Charm热爱开源 • Charm loves open source&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SagerNet/sing-box</title>
      <link>https://github.com/SagerNet/sing-box</link>
      <description>&lt;p&gt;The universal proxy platform&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sing-box&lt;/h1&gt; 
&lt;p&gt;The universal proxy platform.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/sing-box/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/sing-box.svg?sanitize=true" alt="Packaging status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://sing-box.sagernet.org"&gt;https://sing-box.sagernet.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright (C) 2022 by nekohasekai &amp;lt;contact-sagernet@sekai.icu&amp;gt;

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.

In addition, no derivative work may use the name or imply association
with this application without prior consent.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>cockroachdb/cockroach</title>
      <link>https://github.com/cockroachdb/cockroach</link>
      <description>&lt;p&gt;CockroachDB — the cloud native, distributed SQL database designed for high availability, effortless scale, and control over data placement.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/cockroachdb/cockroach/master/docs/media/cockroach_db.png?raw=true" width="70%" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;CockroachDB is a cloud-native distributed SQL database designed to build, scale, and manage modern, data-intensive applications.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cockroachdb/cockroach/master/#what-is-cockroachdb"&gt;What is CockroachDB?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cockroachdb/cockroach/master/#docs"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cockroachdb/cockroach/master/#starting-with-cockroachcloud"&gt;Starting with Cockroach Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cockroachdb/cockroach/master/#starting-with-cockroachdb"&gt;Starting with CockroachDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cockroachdb/cockroach/master/#client-drivers"&gt;Client Drivers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cockroachdb/cockroach/master/#deployment"&gt;Deployment&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cockroachdb/cockroach/master/#need-help"&gt;Need Help?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cockroachdb/cockroach/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cockroachdb/cockroach/master/#design"&gt;Design&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cockroachdb/cockroach/master/#comparison-with-other-databases"&gt;Comparison with Other Databases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cockroachdb/cockroach/master/#see-also"&gt;See Also&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What is CockroachDB?&lt;/h2&gt; 
&lt;p&gt;CockroachDB is a distributed SQL database built on a transactional and strongly-consistent key-value store. It &lt;strong&gt;scales&lt;/strong&gt; horizontally; &lt;strong&gt;survives&lt;/strong&gt; disk, machine, rack, and even datacenter failures with minimal latency disruption and no manual intervention; supports &lt;strong&gt;strongly-consistent&lt;/strong&gt; ACID transactions; and provides a familiar &lt;strong&gt;SQL&lt;/strong&gt; API for structuring, manipulating, and querying data.&lt;/p&gt; 
&lt;p&gt;For more details, see our &lt;a href="https://cockroachlabs.com/docs/stable/frequently-asked-questions.html"&gt;FAQ&lt;/a&gt; or &lt;a href="https://www.cockroachlabs.com/docs/stable/architecture/overview.html"&gt;architecture document&lt;/a&gt;.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.youtube.com/watch?v=VgXiMcbGwzQ"&gt; &lt;img src="https://raw.githubusercontent.com/cockroachdb/cockroach/master/docs/media/explainer-video-preview.png" width="70%" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Docs&lt;/h2&gt; 
&lt;p&gt;For guidance on installation, development, deployment, and administration, see our &lt;a href="https://cockroachlabs.com/docs/stable/"&gt;User Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Starting with CockroachCloud&lt;/h2&gt; 
&lt;p&gt;We can run CockroachDB for you, so you don't have to run your own cluster.&lt;/p&gt; 
&lt;p&gt;See our online documentation: &lt;a href="https://www.cockroachlabs.com/docs/cockroachcloud/quickstart.html"&gt;Quickstart with CockroachCloud&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Starting with CockroachDB&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install CockroachDB: &lt;a href="https://www.cockroachlabs.com/docs/stable/install-cockroachdb.html"&gt;using a pre-built executable&lt;/a&gt; or &lt;a href="https://cockroachlabs.atlassian.net/wiki/spaces/CRDB/pages/181338446/Getting+and+building+CockroachDB+from+source"&gt;build it from source&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cockroachlabs.com/docs/stable/start-a-local-cluster.html"&gt;Start a local cluster&lt;/a&gt; and connect to it via the &lt;a href="https://www.cockroachlabs.com/docs/stable/use-the-built-in-sql-client.html"&gt;built-in SQL client&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cockroachlabs.com/docs/stable/learn-cockroachdb-sql.html"&gt;Learn more about CockroachDB SQL&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Use a PostgreSQL-compatible driver or ORM to &lt;a href="https://www.cockroachlabs.com/docs/stable/hello-world-example-apps.html"&gt;build an app with CockroachDB&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cockroachlabs.com/docs/stable/demo-data-replication.html"&gt;Explore core features&lt;/a&gt;, such as data replication, automatic rebalancing, and fault tolerance and recovery.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Client Drivers&lt;/h2&gt; 
&lt;p&gt;CockroachDB supports the PostgreSQL wire protocol, so you can use any available PostgreSQL client drivers to connect from various languages.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For recommended drivers that we've tested, see &lt;a href="https://www.cockroachlabs.com/docs/stable/install-client-drivers.html"&gt;Install Client Drivers&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For tutorials using these drivers, as well as supported ORMs, see &lt;a href="https://www.cockroachlabs.com/docs/stable/example-apps.html"&gt;Example Apps&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.cockroachlabs.com/docs/cockroachcloud/quickstart"&gt;CockroachCloud&lt;/a&gt; - Steps to create a &lt;a href="https://cockroachlabs.cloud/signup?referralId=githubquickstart"&gt;free CockroachCloud cluster&lt;/a&gt; on your preferred Cloud platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cockroachlabs.com/docs/stable/manual-deployment.html"&gt;Manual&lt;/a&gt; - Steps to deploy a CockroachDB cluster manually on multiple machines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cockroachlabs.com/docs/stable/cloud-deployment.html"&gt;Cloud&lt;/a&gt; - Guides for deploying CockroachDB on various cloud platforms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cockroachlabs.com/docs/stable/orchestration.html"&gt;Orchestration&lt;/a&gt; - Guides for running CockroachDB with popular open-source orchestration systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Need Help?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://go.crdb.dev/p/slack"&gt;CockroachDB Community Slack&lt;/a&gt; - Join our slack to connect with our engineers and other users running CockroachDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://forum.cockroachlabs.com/"&gt;CockroachDB Forum&lt;/a&gt; and &lt;a href="https://stackoverflow.com/questions/tagged/cockroachdb"&gt;Stack Overflow&lt;/a&gt; - Ask questions, find answers, and help other users.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cockroachlabs.com/docs/stable/troubleshooting-overview.html"&gt;Troubleshooting documentation&lt;/a&gt; - Learn how to troubleshoot common errors, cluster setup, and SQL query behavior.&lt;/li&gt; 
 &lt;li&gt;For filing bugs, suggesting improvements, or requesting new features, help us out by &lt;a href="https://github.com/cockroachdb/cockroach/issues/new"&gt;opening an issue&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://wiki.crdb.io/wiki/spaces/CRDB/pages/181338446/Getting+and+building+from+source"&gt;our wiki&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome your contributions! If you're looking for issues to work on, try looking at the &lt;a href="https://github.com/cockroachdb/cockroach/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22"&gt;good first issue list&lt;/a&gt;. We do our best to tag issues suitable for new external contributors with that label, so it's a great way to find something you can help with!&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://wiki.crdb.io/wiki/spaces/CRDB/pages/73204033/Contributing+to+CockroachDB"&gt;our wiki&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;Engineering discussions take place on our public mailing list, &lt;a href="https://groups.google.com/forum/#!forum/cockroach-db"&gt;cockroach-db@googlegroups.com&lt;/a&gt;. Also please join our &lt;a href="https://go.crdb.dev/p/slack"&gt;Community Slack&lt;/a&gt; (there's a dedicated #contributors channel!) to ask questions, discuss your ideas, and connect with other contributors.&lt;/p&gt; 
&lt;h2&gt;Design&lt;/h2&gt; 
&lt;p&gt;For an in-depth discussion of the CockroachDB architecture, see our &lt;a href="https://www.cockroachlabs.com/docs/stable/architecture/overview.html"&gt;Architecture Guide&lt;/a&gt;. For the original design motivation, see our &lt;a href="https://github.com/cockroachdb/cockroach/raw/master/docs/design.md"&gt;design doc&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;All versions released after November 18, 2024, including patch fixes for prior versions 23.1 onward, are published under the &lt;a href="https://raw.githubusercontent.com/cockroachdb/cockroach/master/LICENSE"&gt;CockroachDB Software License (CSL)&lt;/a&gt;. Source code in a given file is licensed under the CSL and the copyright belongs to The Cockroach Authors unless otherwise noted in the file or in a LICENSE or README file located in the same or parent directory of the file.&lt;/p&gt; 
&lt;h2&gt;Comparison with Other Databases&lt;/h2&gt; 
&lt;p&gt;To see how key features of CockroachDB stack up against other databases, check out &lt;a href="https://www.cockroachlabs.com/docs/stable/cockroachdb-in-comparison.html"&gt;CockroachDB in Comparison&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;See Also&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.cockroachlabs.com/community/tech-talks/"&gt;Tech Talks&lt;/a&gt; (by CockroachDB founders, engineers, and customers!)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cockroachlabs.com/docs/stable/"&gt;CockroachDB User Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cockroachlabs.com/blog/"&gt;The CockroachDB Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Key design documents 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.cockroachlabs.com/blog/serializable-lockless-distributed-isolation-cockroachdb/"&gt;Serializable, Lockless, Distributed: Isolation in CockroachDB&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.cockroachlabs.com/blog/consensus-made-thrive/"&gt;Consensus, Made Thrive&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.cockroachlabs.com/blog/trust-but-verify-cockroachdb-checks-replication/"&gt;Trust, But Verify: How CockroachDB Checks Replication&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.cockroachlabs.com/blog/living-without-atomic-clocks/"&gt;Living Without Atomic Clocks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/cockroachdb/cockroach/raw/master/docs/design.md"&gt;The CockroachDB Architecture Document&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>elastic/beats</title>
      <link>https://github.com/elastic/beats</link>
      <description>&lt;p&gt;🐠 Beats - Lightweight shippers for Elasticsearch &amp; Logstash&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/elastic/beats"&gt;&lt;img src="https://goreportcard.com/badge/github.com/elastic/beats" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://houndci.com"&gt;&lt;img src="https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg?sanitize=true" alt="Reviewed by Hound" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Beats - The Lightweight Shippers of the Elastic Stack&lt;/h1&gt; 
&lt;p&gt;The &lt;a href="https://www.elastic.co/beats"&gt;Beats&lt;/a&gt; are lightweight data shippers, written in Go, that you install on your servers to capture all sorts of operational data (think of logs, metrics, or network packet data). The Beats send the operational data to Elasticsearch, either directly or via Logstash, so it can be visualized with Kibana.&lt;/p&gt; 
&lt;p&gt;By "lightweight", we mean that Beats have a small installation footprint, use limited system resources, and have no runtime dependencies.&lt;/p&gt; 
&lt;p&gt;This repository contains &lt;a href="https://github.com/elastic/beats/tree/main/libbeat"&gt;libbeat&lt;/a&gt;, our Go framework for creating Beats, and all the officially supported Beats:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Beat&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/elastic/beats/tree/main/auditbeat"&gt;Auditbeat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Collect your Linux audit framework data and monitor the integrity of your files.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/elastic/beats/tree/main/filebeat"&gt;Filebeat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Tails and ships log files&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/elastic/beats/tree/main/heartbeat"&gt;Heartbeat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Ping remote services for availability&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/elastic/beats/tree/main/metricbeat"&gt;Metricbeat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Fetches sets of metrics from the operating system and services&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/elastic/beats/tree/main/packetbeat"&gt;Packetbeat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Monitors the network and applications by sniffing packets&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/elastic/beats/tree/main/winlogbeat"&gt;Winlogbeat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Fetches and ships Windows Event logs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/elastic/beats/tree/main/x-pack/osquerybeat"&gt;Osquerybeat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Runs Osquery and manages interraction with it.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;In addition to the above Beats, which are officially supported by &lt;a href="https://elastic.co"&gt;Elastic&lt;/a&gt;, the community has created a set of other Beats that make use of libbeat but live outside of this Github repository. We maintain a list of community Beats &lt;a href="https://www.elastic.co/guide/en/beats/libbeat/master/community-beats.html"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation and Getting Started&lt;/h2&gt; 
&lt;p&gt;You can find the documentation and getting started guides for each of the Beats on the &lt;a href="https://www.elastic.co/guide/"&gt;elastic.co site&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.elastic.co/guide/en/beats/libbeat/current/index.html"&gt;Beats platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.elastic.co/guide/en/beats/auditbeat/current/index.html"&gt;Auditbeat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.elastic.co/guide/en/beats/filebeat/current/index.html"&gt;Filebeat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.elastic.co/guide/en/beats/heartbeat/current/index.html"&gt;Heartbeat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.elastic.co/guide/en/beats/metricbeat/current/index.html"&gt;Metricbeat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.elastic.co/guide/en/beats/packetbeat/current/index.html"&gt;Packetbeat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.elastic.co/guide/en/beats/winlogbeat/current/index.html"&gt;Winlogbeat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation and Getting Started information for the Elastic Agent&lt;/h2&gt; 
&lt;p&gt;You can find the documentation and getting started guides for the Elastic Agent on the &lt;a href="https://www.elastic.co/downloads/elastic-agent"&gt;elastic.co site&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Help&lt;/h2&gt; 
&lt;p&gt;If you need help or hit an issue, please start by opening a topic on our &lt;a href="https://discuss.elastic.co/c/beats"&gt;discuss forums&lt;/a&gt;. Please note that we reserve GitHub tickets for confirmed bugs and enhancement requests.&lt;/p&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;p&gt;You can download pre-compiled Beats binaries, as well as packages for the supported platforms, from &lt;a href="https://www.elastic.co/downloads/beats"&gt;this page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We'd love working with you! You can help make the Beats better in many ways: report issues, help us reproduce issues, fix bugs, add functionality, or even create your own Beat.&lt;/p&gt; 
&lt;p&gt;Please start by reading our &lt;a href="https://raw.githubusercontent.com/elastic/beats/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;Building Beats from the Source&lt;/h2&gt; 
&lt;p&gt;See our &lt;a href="https://raw.githubusercontent.com/elastic/beats/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; file for information about setting up your dev environment to build Beats from the source.&lt;/p&gt; 
&lt;h2&gt;Snapshots&lt;/h2&gt; 
&lt;p&gt;For testing purposes, we generate snapshot builds that you can find &lt;a href="https://artifacts-api.elastic.co/v1/search/8.0-SNAPSHOT/"&gt;here&lt;/a&gt;. Please be aware that these are built on top of main and are not meant for production.&lt;/p&gt; 
&lt;h2&gt;CI&lt;/h2&gt; 
&lt;h3&gt;PR Comments&lt;/h3&gt; 
&lt;p&gt;It is possible to trigger some jobs by putting a comment on a GitHub PR. (This service is only available for users affiliated with Elastic and not for open-source contributors.)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://buildkite.com/elastic/beats"&gt;beats CI pipeline&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;/test&lt;/code&gt; will kick off a default build.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/elastic/beats/main/%5Bhttps://buildkite.com/elastic/beats%5D(https://buildkite.com/elastic/docs-build-pr)"&gt;docs CI pipeline&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;run docs-build&lt;/code&gt; will kick off a docs build.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;PR Labels&lt;/h3&gt; 
&lt;p&gt;It's possible to configure the build on a GitHub PR by labeling the PR with certain labels. Elastic users can find more details at &lt;a href="https://docs.elastic.dev/ingest-dev-docs/beats/beats-ci"&gt;https://docs.elastic.dev/ingest-dev-docs/beats/beats-ci&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>syncthing/syncthing</title>
      <link>https://github.com/syncthing/syncthing</link>
      <description>&lt;p&gt;Open Source Continuous File Synchronization&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://syncthing.net/"&gt;&lt;img src="https://raw.githubusercontent.com/syncthing/syncthing/main/assets/logo-text-128.png" alt="Syncthing" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://www.mozilla.org/MPL/2.0/"&gt;&lt;img src="https://img.shields.io/badge/license-MPLv2-blue.svg?style=flat-square" alt="MPLv2 License" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/88"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/88/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/syncthing/syncthing"&gt;&lt;img src="https://goreportcard.com/badge/github.com/syncthing/syncthing" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Goals&lt;/h2&gt; 
&lt;p&gt;Syncthing is a &lt;strong&gt;continuous file synchronization program&lt;/strong&gt;. It synchronizes files between two or more computers. We strive to fulfill the goals below. The goals are listed in order of importance, the most important ones first. This is the summary version of the goal list - for more commentary, see the full &lt;a href="https://github.com/syncthing/syncthing/raw/main/GOALS.md"&gt;Goals document&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Syncthing should be:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Safe From Data Loss&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Protecting the user's data is paramount. We take every reasonable precaution to avoid corrupting the user's files.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Secure Against Attackers&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Again, protecting the user's data is paramount. Regardless of our other goals, we must never allow the user's data to be susceptible to eavesdropping or modification by unauthorized parties.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Easy to Use&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Syncthing should be approachable, understandable, and inclusive.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Automatic&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;User interaction should be required only when absolutely necessary.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Universally Available&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Syncthing should run on every common computer. We are mindful that the latest technology is not always available to every individual.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For Individuals&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Syncthing is primarily about empowering the individual user with safe, secure, and easy to use file synchronization.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Everything Else&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;There are many things we care about that don't make it on to the list. It is fine to optimize for these values, as long as they are not in conflict with the stated goals above.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Take a look at the &lt;a href="https://docs.syncthing.net/intro/getting-started.html"&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There are a few examples for keeping Syncthing running in the background on your system in &lt;a href="https://github.com/syncthing/syncthing/raw/main/etc"&gt;the etc directory&lt;/a&gt;. There are also several &lt;a href="https://docs.syncthing.net/users/contrib.html#gui-wrappers"&gt;GUI implementations&lt;/a&gt; for Windows, Mac, and Linux.&lt;/p&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;p&gt;To run Syncthing in Docker, see &lt;a href="https://github.com/syncthing/syncthing/raw/main/README-Docker.md"&gt;the Docker README&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting in Touch&lt;/h2&gt; 
&lt;p&gt;The first and best point of contact is the &lt;a href="https://forum.syncthing.net/"&gt;Forum&lt;/a&gt;. If you've found something that is clearly a bug, feel free to report it in the &lt;a href="https://github.com/syncthing/syncthing/issues"&gt;GitHub issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you believe that you’ve found a Syncthing-related security vulnerability, please report it by emailing &lt;a href="mailto:security@syncthing.net"&gt;security@syncthing.net&lt;/a&gt;. Do not report it in the Forum or issue tracker.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;Building Syncthing from source is easy. After extracting the source bundle from a release or checking out git, you just need to run &lt;code&gt;go run build.go&lt;/code&gt; and the binaries are created in &lt;code&gt;./bin&lt;/code&gt;. There's &lt;a href="https://docs.syncthing.net/dev/building.html"&gt;a guide&lt;/a&gt; with more details on the build process.&lt;/p&gt; 
&lt;h2&gt;Signed Releases&lt;/h2&gt; 
&lt;p&gt;Release binaries are GPG signed with the key available from &lt;a href="https://syncthing.net/security/"&gt;https://syncthing.net/security/&lt;/a&gt;. There is also a built-in automatic upgrade mechanism (disabled in some distribution channels) which uses a compiled in ECDSA signature. macOS and Windows binaries are also code-signed.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Please see the Syncthing &lt;a href="https://docs.syncthing.net/"&gt;documentation site&lt;/a&gt; &lt;a href="https://github.com/syncthing/docs"&gt;[source]&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All code is licensed under the &lt;a href="https://github.com/syncthing/syncthing/raw/main/LICENSE"&gt;MPLv2 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cli/cli</title>
      <link>https://github.com/cli/cli</link>
      <description>&lt;p&gt;GitHub’s official command line tool&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub CLI&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;gh&lt;/code&gt; is GitHub on the command line. It brings pull requests, issues, and other GitHub concepts to the terminal next to where you are already working with &lt;code&gt;git&lt;/code&gt; and your code.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/98482/84171218-327e7a80-aa40-11ea-8cd1-5177fc2d0e72.png" alt="screenshot of gh pr status" /&gt;&lt;/p&gt; 
&lt;p&gt;GitHub CLI is supported for users on GitHub.com, GitHub Enterprise Cloud, and GitHub Enterprise Server 2.20+ with support for macOS, Windows, and Linux.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/#installation"&gt;installation options see below&lt;/a&gt;, for usage instructions &lt;a href="https://cli.github.com/manual/"&gt;see the manual&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If anything feels off or if you feel that some functionality is missing, please check out the &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/.github/CONTRIBUTING.md"&gt;contributing page&lt;/a&gt;. There you will find instructions for sharing your feedback, building the tool locally, and submitting pull requests to the project.&lt;/p&gt; 
&lt;p&gt;If you are a hubber and are interested in shipping new commands for the CLI, check out our &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/working-with-us.md"&gt;doc on internal contributions&lt;/a&gt;&lt;/p&gt; 
&lt;!-- this anchor is linked to from elsewhere, so avoid renaming it --&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_macos.md"&gt;macOS&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_macos.md#homebrew"&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_macos.md#precompiled-binaries"&gt;Precompiled binaries&lt;/a&gt; on &lt;a href="https://github.com/cli/cli/releases/latest"&gt;releases page&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For additional macOS packages and installers, see &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_macos.md#community-unofficial"&gt;community-supported docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_linux.md"&gt;Linux &amp;amp; Unix&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_linux.md#debian"&gt;Debian, Raspberry Pi, Ubuntu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_linux.md#rpm"&gt;Amazon Linux, CentOS, Fedora, openSUSE, RHEL, SUSE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_linux.md#precompiled-binaries"&gt;Precompiled binaries&lt;/a&gt; on &lt;a href="https://github.com/cli/cli/releases/latest"&gt;releases page&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For additional Linux &amp;amp; Unix packages and installers, see &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_linux.md#community-unofficial"&gt;community-supported docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_windows.md"&gt;Windows&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_windows.md#winget"&gt;WinGet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_windows.md#precompiled-binaries"&gt;Precompiled binaries&lt;/a&gt; on &lt;a href="https://github.com/cli/cli/releases/latest"&gt;releases page&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For additional Windows packages and installers, see &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_windows.md#community-unofficial"&gt;community-supported docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Build from source&lt;/h3&gt; 
&lt;p&gt;See here on how to &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/install_source.md"&gt;build GitHub CLI from source&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;GitHub Codespaces&lt;/h3&gt; 
&lt;p&gt;To add GitHub CLI to your codespace, add the following to your &lt;a href="https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/adding-features-to-a-devcontainer-file"&gt;devcontainer file&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;"features": {
  "ghcr.io/devcontainers/features/github-cli:1": {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;GitHub Actions&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners"&gt;GitHub-hosted runners&lt;/a&gt; have the GitHub CLI pre-installed, which is updated weekly.&lt;/p&gt; 
&lt;p&gt;If a specific version is needed, your GitHub Actions workflow will need to install it based on the &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/#macos"&gt;macOS&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/#linux--unix"&gt;Linux &amp;amp; Unix&lt;/a&gt;, or &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/#windows"&gt;Windows&lt;/a&gt; instructions above.&lt;/p&gt; 
&lt;p&gt;For information on all pre-installed tools, see &lt;a href="https://github.com/actions/runner-images"&gt;&lt;code&gt;actions/runner-images&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Verification of binaries&lt;/h3&gt; 
&lt;p&gt;Since version 2.50.0, &lt;code&gt;gh&lt;/code&gt; has been producing &lt;a href="https://github.blog/changelog/2024-06-25-artifact-attestations-is-generally-available/"&gt;Build Provenance Attestation&lt;/a&gt;, enabling a cryptographically verifiable paper-trail back to the origin GitHub repository, git revision, and build instructions used. The build provenance attestations are signed and rely on Public Good &lt;a href="https://www.sigstore.dev/"&gt;Sigstore&lt;/a&gt; for PKI.&lt;/p&gt; 
&lt;p&gt;There are two common ways to verify a downloaded release, depending on whether &lt;code&gt;gh&lt;/code&gt; is already installed or not. If &lt;code&gt;gh&lt;/code&gt; is installed, it's trivial to verify a new release:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Option 1: Using &lt;code&gt;gh&lt;/code&gt; if already installed:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;$ gh at verify -R cli/cli gh_2.62.0_macOS_arm64.zip
Loaded digest sha256:fdb77f31b8a6dd23c3fd858758d692a45f7fc76383e37d475bdcae038df92afc for file://gh_2.62.0_macOS_arm64.zip
Loaded 1 attestation from GitHub API
✓ Verification succeeded!

sha256:fdb77f31b8a6dd23c3fd858758d692a45f7fc76383e37d475bdcae038df92afc was attested by:
REPO     PREDICATE_TYPE                  WORKFLOW
cli/cli  https://slsa.dev/provenance/v1  .github/workflows/deployment.yml@refs/heads/trunk
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Option 2: Using Sigstore &lt;a href="https://github.com/sigstore/cosign"&gt;&lt;code&gt;cosign&lt;/code&gt;&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;To perform this, download the &lt;a href="https://github.com/cli/cli/attestations"&gt;attestation&lt;/a&gt; for the downloaded release and use cosign to verify the authenticity of the downloaded release:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;$ cosign verify-blob-attestation --bundle cli-cli-attestation-3120304.sigstore.json \
      --new-bundle-format \
      --certificate-oidc-issuer="https://token.actions.githubusercontent.com" \
      --certificate-identity="https://github.com/cli/cli/.github/workflows/deployment.yml@refs/heads/trunk" \
      gh_2.62.0_macOS_arm64.zip
Verified OK
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Comparison with hub&lt;/h2&gt; 
&lt;p&gt;For many years, &lt;a href="https://github.com/github/hub"&gt;hub&lt;/a&gt; was the unofficial GitHub CLI tool. &lt;code&gt;gh&lt;/code&gt; is a new project that helps us explore what an official GitHub CLI tool can look like with a fundamentally different design. While both tools bring GitHub to the terminal, &lt;code&gt;hub&lt;/code&gt; behaves as a proxy to &lt;code&gt;git&lt;/code&gt;, and &lt;code&gt;gh&lt;/code&gt; is a standalone tool. Check out our &lt;a href="https://raw.githubusercontent.com/cli/cli/trunk/docs/gh-vs-hub.md"&gt;more detailed explanation&lt;/a&gt; to learn more.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jguer/yay</title>
      <link>https://github.com/Jguer/yay</link>
      <description>&lt;p&gt;Yet another Yogurt - An AUR Helper written in Go&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://aur.archlinux.org/packages/yay/"&gt;&lt;img src="https://img.shields.io/aur/version/yay?color=1793d1&amp;amp;label=yay&amp;amp;logo=arch-linux&amp;amp;style=for-the-badge" alt="yay" /&gt;&lt;/a&gt; &lt;a href="https://aur.archlinux.org/packages/yay-bin/"&gt;&lt;img src="https://img.shields.io/aur/version/yay-bin?color=1793d1&amp;amp;label=yay-bin&amp;amp;logo=arch-linux&amp;amp;style=for-the-badge" alt="yay-bin" /&gt;&lt;/a&gt; &lt;a href="https://aur.archlinux.org/packages/yay-git/"&gt;&lt;img src="https://img.shields.io/aur/version/yay-git?color=1793d1&amp;amp;label=yay-git&amp;amp;logo=arch-linux&amp;amp;style=for-the-badge" alt="yay-git" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/aur/votes/yay?color=333333&amp;amp;style=for-the-badge" alt="AUR votes" /&gt; &lt;a href="https://github.com/Jguer/yay/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/jguer/yay?color=333333&amp;amp;style=for-the-badge" alt="GitHub license" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Yay&lt;/h1&gt; 
&lt;p&gt;Yet Another Yogurt - An AUR Helper Written in Go&lt;/p&gt; 
&lt;h3&gt;Help translate yay: &lt;a href="https://app.transifex.com/yay-1/yay/"&gt;Transifex&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Advanced dependency solving&lt;/li&gt; 
 &lt;li&gt;PKGBUILD downloading from ABS or AUR&lt;/li&gt; 
 &lt;li&gt;Completions for AUR packages&lt;/li&gt; 
 &lt;li&gt;Query user up-front for all input (prior to starting builds)&lt;/li&gt; 
 &lt;li&gt;Narrow search (&lt;code&gt;yay linux header&lt;/code&gt; will first search &lt;code&gt;linux&lt;/code&gt; and then narrow on &lt;code&gt;header&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Find matching package providers during search and allow selection&lt;/li&gt; 
 &lt;li&gt;Remove make dependencies at the end of the build process&lt;/li&gt; 
 &lt;li&gt;Build local PKGBUILDs with AUR dependencies&lt;/li&gt; 
 &lt;li&gt;Un/Vote for packages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://asciinema.org/a/399431"&gt;&lt;img src="https://asciinema.org/a/399431.svg?sanitize=true" alt="asciicast" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://asciinema.org/a/399433"&gt;&lt;img src="https://asciinema.org/a/399433.svg?sanitize=true" alt="asciicast" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;If you are migrating from another AUR helper, you can simply install Yay with that helper.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; We are using &lt;code&gt;sudo&lt;/code&gt; in these examples, you can switch that out for a different privilege escalation tool.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Source&lt;/h3&gt; 
&lt;p&gt;The initial installation of Yay can be done by cloning the PKGBUILD and building with makepkg:&lt;/p&gt; 
&lt;p&gt;We make sure we have the &lt;code&gt;base-devel&lt;/code&gt; package group installed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -si
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to do all of this at once, we can chain the commands like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo pacman -S --needed git base-devel &amp;amp;&amp;amp; git clone https://aur.archlinux.org/yay.git &amp;amp;&amp;amp; cd yay &amp;amp;&amp;amp; makepkg -si
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Binary&lt;/h3&gt; 
&lt;p&gt;If you do not want to compile yay yourself you can use the builds generated by GitHub Actions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo pacman -S --needed git base-devel
git clone https://aur.archlinux.org/yay-bin.git
cd yay-bin
makepkg -si
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to do all of this at once, we can chain the commands like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo pacman -S --needed git base-devel &amp;amp;&amp;amp; git clone https://aur.archlinux.org/yay-bin.git &amp;amp;&amp;amp; cd yay-bin &amp;amp;&amp;amp; makepkg -si
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Other distributions&lt;/h3&gt; 
&lt;p&gt;If you're using Manjaro or &lt;a href="https://repology.org/project/yay/versions"&gt;another distribution that packages &lt;code&gt;yay&lt;/code&gt;&lt;/a&gt; you can simply install yay using pacman (as root):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pacman -S --needed git base-devel yay
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; distributions sometimes lag updating yay on their repositories.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;First Use&lt;/h2&gt; 
&lt;h4&gt;Development packages upgrade&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Use &lt;code&gt;yay -Y --gendb&lt;/code&gt; to generate a development package database for &lt;code&gt;*-git&lt;/code&gt; packages that were installed without yay. This command should only be run once.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;yay -Syu --devel&lt;/code&gt; will then check for development package updates&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use &lt;code&gt;yay -Y --devel --save&lt;/code&gt; to make development package updates permanently enabled (&lt;code&gt;yay&lt;/code&gt; and &lt;code&gt;yay -Syu&lt;/code&gt; will then always check dev packages)&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Examples of Custom Operations&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Alias to &lt;code&gt;yay -Syu&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay &amp;lt;Search Term&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Present package-installation selection menu.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Bi &amp;lt;dir&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Install dependencies and build a local PKGBUILD.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -G &amp;lt;AUR Package&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Download PKGBUILD from ABS or AUR. (yay v12.0+)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Gp &amp;lt;AUR Package&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Print to stdout PKGBUILD from ABS or AUR.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Ps&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Print system statistics.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Syu --devel&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Perform system upgrade, but also check for development package updates.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Syu --timeupdate&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Perform system upgrade and use PKGBUILD modification time (not version number) to determine update.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Wu &amp;lt;AUR Package&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Unvote for package (Requires setting &lt;code&gt;AUR_USERNAME&lt;/code&gt; and &lt;code&gt;AUR_PASSWORD&lt;/code&gt; environment variables) (yay v11.3+)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Wv &amp;lt;AUR Package&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Vote for package (Requires setting &lt;code&gt;AUR_USERNAME&lt;/code&gt; and &lt;code&gt;AUR_PASSWORD&lt;/code&gt; environment variables). (yay v11.3+)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Y --combinedupgrade --save&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Make combined upgrade the default mode.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Y --gendb&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Generate development package database used for devel update.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yay -Yc&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Clean unneeded dependencies.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Yay does not display colored output. How do I fix it?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Make sure you have the &lt;code&gt;Color&lt;/code&gt; option in your &lt;code&gt;/etc/pacman.conf&lt;/code&gt; (see issue &lt;a href="https://github.com/Jguer/yay/issues/123"&gt;#123&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Sometimes diffs are printed to the terminal, and other times they are paged via less. How do I fix this?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Yay uses &lt;code&gt;git diff&lt;/code&gt; to display diffs, which by default tells less not to page if the output can fit into one terminal length. This behavior can be overridden by exporting your own flags (&lt;code&gt;export LESS=SRX&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Yay is not asking me to edit PKGBUILDS, and I don't like the diff menu! What can I do?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;yay --editmenu --diffmenu=false --save&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How can I tell Yay to act only on AUR packages, or only on repo packages?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;yay -{OPERATION} --aur&lt;/code&gt; &lt;code&gt;yay -{OPERATION} --repo&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;A &lt;code&gt;Flagged Out Of Date AUR Packages&lt;/code&gt; message is displayed. Why doesn't Yay update them?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This message does not mean that updated AUR packages are available. It means the packages have been flagged out of date on the AUR, but their maintainers have not yet updated the &lt;code&gt;PKGBUILD&lt;/code&gt;s (see &lt;a href="https://wiki.archlinux.org/index.php/Arch_User_Repository#Foo_in_the_AUR_is_outdated.3B_what_should_I_do.3F"&gt;outdated AUR packages&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Yay doesn't install dependencies added to a PKGBUILD during installation.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Yay resolves all dependencies ahead of time. You are free to edit the PKGBUILD in any way, but any problems you cause are your own and should not be reported unless they can be reproduced with the original PKGBUILD.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;I know my &lt;code&gt;-git&lt;/code&gt; package has updates but yay doesn't offer to update it&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Yay uses a hash cache for development packages. Normally it is updated at the end of the package install with the message &lt;code&gt;Found git repo&lt;/code&gt;. If you transition between aur helpers and did not install the devel package using yay at some point, it is possible it never got added to the cache. &lt;code&gt;yay -Y --gendb&lt;/code&gt; will fix the current version of every devel package and start checking from there.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;I want to help out!&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Check &lt;a href="https://raw.githubusercontent.com/Jguer/yay/next/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;All support related to Yay should be requested via GitHub issues. Since Yay is not officially supported by Arch Linux, support should not be sought out on the forums, AUR comments or other official channels.&lt;/p&gt; 
&lt;p&gt;A broken AUR package should be reported as a comment on the package's AUR page. A package may only be considered broken if it fails to build with makepkg.&lt;/p&gt; 
&lt;p&gt;Reports should be made using makepkg and include the full output as well as any other relevant information. Never make reports using Yay or any other external tools.&lt;/p&gt; 
&lt;h2&gt;Images&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Jguer/jguer.github.io/refs/heads/master/yay/yay.png" width="42%" /&gt; &lt;img src="https://raw.githubusercontent.com/Jguer/jguer.github.io/refs/heads/master/yay/yay-s.png" width="42%" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Jguer/jguer.github.io/refs/heads/master/yay/yay-y.png" width="42%" /&gt; &lt;img src="https://raw.githubusercontent.com/Jguer/jguer.github.io/refs/heads/master/yay/yay-ps.png" width="42%" /&gt; &lt;/p&gt; 
&lt;h3&gt;Other AUR helpers/tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/morganamilo/paru"&gt;paru&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AladW/aurutils"&gt;aurutils&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/actionless/pikaur"&gt;pikaur&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>m1k1o/neko</title>
      <link>https://github.com/m1k1o/neko</link>
      <description>&lt;p&gt;A self hosted virtual browser that runs in docker and uses WebRTC.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://github.com/m1k1o/neko" title="Neko's Github repository."&gt; &lt;img src="https://neko.m1k1o.net/img/logo.png" width="400" height="auto" /&gt; &lt;/a&gt; 
 &lt;p align="center"&gt; &lt;a href="https://github.com/m1k1o/neko/releases"&gt; &lt;img src="https://img.shields.io/github/v/release/m1k1o/neko" alt="release" /&gt; &lt;/a&gt; &lt;a href="https://github.com/m1k1o/neko/raw/master/LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/m1k1o/neko" alt="license" /&gt; &lt;/a&gt; &lt;a href="https://hub.docker.com/r/m1k1o/neko"&gt; &lt;img src="https://img.shields.io/docker/pulls/m1k1o/neko" alt="pulls" /&gt; &lt;/a&gt; &lt;a href="https://github.com/m1k1o/neko/issues"&gt; &lt;img src="https://img.shields.io/github/issues/m1k1o/neko" alt="issues" /&gt; &lt;/a&gt; &lt;a href="https://github.com/sponsors/m1k1o"&gt; &lt;img src="https://img.shields.io/badge/-sponsor-red" alt="issues" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/3U6hWpC"&gt; &lt;img src="https://discordapp.com/api/guilds/665851821906067466/widget.png" alt="Chat on discord" /&gt; &lt;/a&gt; &lt;a href="https://hellogithub.com/repository/4536d4546af24196af3f08a023dfa007" target="_blank"&gt; &lt;img src="https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=4536d4546af24196af3f08a023dfa007&amp;amp;claim_uid=0x19e4dJwD83aW2&amp;amp;theme=small" alt="Featured｜HelloGitHub" /&gt; &lt;/a&gt; &lt;a href="https://github.com/m1k1o/neko/actions"&gt; &lt;img src="https://github.com/m1k1o/neko/actions/workflows/ghcr.yml/badge.svg?sanitize=true" alt="build" /&gt; &lt;/a&gt; &lt;/p&gt; 
 &lt;img src="https://neko.m1k1o.net/img/intro.gif" width="650" height="auto" /&gt; 
&lt;/div&gt; 
&lt;h1&gt;n.eko&lt;/h1&gt; 
&lt;p&gt;Welcome to Neko, a self-hosted virtual browser that runs in Docker and uses WebRTC technology. Neko is a powerful tool that allows you to &lt;strong&gt;run a fully-functional browser in a virtual environment&lt;/strong&gt;, giving you the ability to &lt;strong&gt;access the internet securely and privately from anywhere&lt;/strong&gt;. With Neko, you can browse the web, &lt;strong&gt;run applications&lt;/strong&gt;, and perform other tasks just as you would on a regular browser, all within a &lt;strong&gt;secure and isolated environment&lt;/strong&gt;. Whether you are a developer looking to test web applications, a &lt;strong&gt;privacy-conscious user seeking a secure browsing experience&lt;/strong&gt;, or simply someone who wants to take advantage of the &lt;strong&gt;convenience and flexibility of a virtual browser&lt;/strong&gt;, Neko is the perfect solution.&lt;/p&gt; 
&lt;p&gt;In addition to its security and privacy features, Neko offers the &lt;strong&gt;ability for multiple users to access it simultaneously&lt;/strong&gt;. This makes it an ideal solution for teams or organizations that need to share access to a browser, as well as for individuals who want to use &lt;strong&gt;multiple devices to access the same virtual environment&lt;/strong&gt;. With Neko, you can &lt;strong&gt;easily and securely share access to a browser with others&lt;/strong&gt;, without having to worry about maintaining separate configurations or settings. Whether you need to &lt;strong&gt;collaborate on a project&lt;/strong&gt;, access shared resources, or simply want to &lt;strong&gt;share access to a browser with friends or family&lt;/strong&gt;, Neko makes it easy to do so.&lt;/p&gt; 
&lt;p&gt;Neko is also a great tool for &lt;strong&gt;hosting watch parties&lt;/strong&gt; and interactive presentations. With its virtual browser capabilities, Neko allows you to host watch parties and presentations that are &lt;strong&gt;accessible from anywhere&lt;/strong&gt;, without the need for in-person gatherings. This makes it easy to &lt;strong&gt;stay connected with friends and colleagues&lt;/strong&gt;, even when you are unable to meet in person. With Neko, you can easily host a watch party or give an &lt;strong&gt;interactive presentation&lt;/strong&gt;, whether it's for leisure or work. Simply invite your guests to join the virtual environment, and you can share the screen and &lt;strong&gt;interact with them in real-time&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;This app uses WebRTC to stream a desktop inside of a docker container, original author made this because &lt;a href="https://en.wikipedia.org/wiki/Rabb.it"&gt;rabb.it&lt;/a&gt; went under and his internet could not handle streaming and discord kept crashing when his friend attempted to. He just wanted to watch anime with his friends ლ(ಠ益ಠლ) so he started digging throughout the internet and found a few &lt;em&gt;kinda&lt;/em&gt; clones, but none of them had the virtual browser, then he found &lt;a href="https://github.com/Khauri/Turtus"&gt;Turtus&lt;/a&gt; and he was able to figure out the rest.&lt;/p&gt; 
&lt;p&gt;Then I found &lt;a href="https://github.com/nurdism/neko"&gt;this&lt;/a&gt; project and started to dig into it. I really liked the idea of having collaborative browser browsing together with multiple people, so I created a fork. Initially, I wanted to merge my changes to the upstream repository, but the original author did not have time for this project anymore and it got eventually archived.&lt;/p&gt; 
&lt;h2&gt;Use-cases and comparison&lt;/h2&gt; 
&lt;p&gt;Neko started as a virtual browser that is streamed using WebRTC to multiple users.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It is &lt;strong&gt;not only limited to a browser&lt;/strong&gt;; it can run anything that runs on linux (e.g. VLC). Browser only happens to be the most popular and widely used use-case.&lt;/li&gt; 
 &lt;li&gt;In fact, it is not limited to a single program either; you can install a full desktop environment (e.g. XFCE, KDE).&lt;/li&gt; 
 &lt;li&gt;Speaking of limits, it does not need to run in a container; you could install neko on your host, connect to your X server and control your whole VM.&lt;/li&gt; 
 &lt;li&gt;Theoretically it is not limited to only X server, anything that can be controlled and scraped periodically for images could be used instead. 
  &lt;ul&gt; 
   &lt;li&gt;Like implementing RDP or VNC protocol, where neko would only act as WebRTC relay server. This is currently only future.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Primary use case is connecting with multiple people, leveraging real time synchronization and interactivity:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Watch party&lt;/strong&gt; - watching video content together with multiple people and reacting to it (chat, emotes) - open source alternative to &lt;a href="https://giggl.app/"&gt;giggl.app&lt;/a&gt; or &lt;a href="https://watch.hyperbeam.com"&gt;hyperbeam&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Interactive presentation&lt;/strong&gt; - not only screen sharing, but others can control the screen.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Collaborative tool&lt;/strong&gt; - brainstorming ideas, cobrowsing, code debugging together.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Support/Teaching&lt;/strong&gt; - interactively guiding people in controlled environment.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Embed anything&lt;/strong&gt; - embed virtual browser in your web app - open source alternative to &lt;a href="https://hyperbeam.com/"&gt;hyperbeam API&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;open any third-party website or application, synchronize audio and video flawlessly among multiple participants.&lt;/li&gt; 
   &lt;li&gt;request rooms using API with &lt;a href="https://github.com/m1k1o/neko-rooms"&gt;neko-rooms&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Other use cases that benefit from single-user:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Personal workspace&lt;/strong&gt; - streaming containerized apps and desktops to end-users - similar to &lt;a href="https://www.kasmweb.com/"&gt;kasm&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Persistent browser&lt;/strong&gt; - own browser with persistent cookies available anywhere - similar to &lt;a href="https://www.mightyapp.com/"&gt;mightyapp&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;no state is left on the host browser after terminating the connection.&lt;/li&gt; 
   &lt;li&gt;sensitive data like cookies are not transferred - only video is shared.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Throwaway browser&lt;/strong&gt; - a better solution for planning secret parties and buying birthday gifts off the internet. 
  &lt;ul&gt; 
   &lt;li&gt;use Tor Browser and &lt;a href="https://github.com/m1k1o/neko-vpn"&gt;VPN&lt;/a&gt; for additional anonymity.&lt;/li&gt; 
   &lt;li&gt;mitigates risk of OS fingerprinting and browser vulnerabilities by running in container.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Session broadcasting&lt;/strong&gt; - broadcast room content using RTMP (to e.g. twitch or youtube...).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Session recording&lt;/strong&gt; - broadcast RTMP can be saved to a file using e.g. &lt;a href="https://www.nginx.com/products/nginx/modules/rtmp-media-streaming/"&gt;nginx-rtmp&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;have clean environment when recording tutorials.&lt;/li&gt; 
   &lt;li&gt;no need to hide bookmarks or use incognito mode.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jump host&lt;/strong&gt; - access your internal applications securely without the need for VPN.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automated browser&lt;/strong&gt; - you can install &lt;a href="https://playwright.dev/"&gt;playwright&lt;/a&gt; or &lt;a href="https://pptr.dev/"&gt;puppeteer&lt;/a&gt; and automate tasks while being able to actively intercept them.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Compared to clientless remote desktop gateway (e.g. &lt;a href="https://guacamole.apache.org/"&gt;Apache Guacamole&lt;/a&gt; or &lt;a href="https://github.com/novnc/websockify"&gt;websockify&lt;/a&gt; with &lt;a href="https://novnc.com/"&gt;noVNC&lt;/a&gt;), installed with remote desktop server along with desired program (e.g. &lt;a href="https://docs.linuxserver.io/images/docker-firefox"&gt;linuxserver/firefox&lt;/a&gt;) provides neko additionally:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Smooth video&lt;/strong&gt; because it uses WebRTC and not images sent over WebSockets.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Built in audio&lt;/strong&gt; support, what is not part of Apache Guacamole or noVNC.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-participant control&lt;/strong&gt;, what is not natively supported by Apache Guacamole or noVNC.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Supported browsers&lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://neko.m1k1o.net/docs/v3/installation/docker-images#firefox"&gt; &lt;img src="https://neko.m1k1o.net/img/icons/firefox.svg?sanitize=true" title="ghcr.io/m1k1o/neko/firefox" width="60" height="auto" /&gt; &lt;/a&gt; 
 &lt;a href="https://neko.m1k1o.net/docs/v3/installation/docker-images#tor-browser"&gt; &lt;img src="https://neko.m1k1o.net/img/icons/tor-browser.svg?sanitize=true" title="ghcr.io/m1k1o/neko/tor-browser" width="60" height="auto" /&gt; &lt;/a&gt; 
 &lt;a href="https://neko.m1k1o.net/docs/v3/installation/docker-images#waterfox"&gt; &lt;img src="https://neko.m1k1o.net/img/icons/waterfox.svg?sanitize=true" title="ghcr.io/m1k1o/neko/waterfox" width="60" height="auto" /&gt; &lt;/a&gt; 
 &lt;a href="https://neko.m1k1o.net/docs/v3/installation/docker-images#chromium"&gt; &lt;img src="https://neko.m1k1o.net/img/icons/chromium.svg?sanitize=true" title="ghcr.io/m1k1o/neko/chromium" width="60" height="auto" /&gt; &lt;/a&gt; 
 &lt;a href="https://neko.m1k1o.net/docs/v3/installation/docker-images#google-chrome"&gt; &lt;img src="https://neko.m1k1o.net/img/icons/google-chrome.svg?sanitize=true" title="ghcr.io/m1k1o/neko/google-chrome" width="60" height="auto" /&gt; &lt;/a&gt; 
 &lt;a href="https://neko.m1k1o.net/docs/v3/installation/docker-images#ungoogled-chromium"&gt; &lt;img src="https://neko.m1k1o.net/img/icons/ungoogled-chromium.svg?sanitize=true" title="ghcr.io/m1k1o/neko/google-chrome" width="60" height="auto" /&gt; &lt;/a&gt; 
 &lt;a href="https://neko.m1k1o.net/docs/v3/installation/docker-images#microsoft-edge"&gt; &lt;img src="https://neko.m1k1o.net/img/icons/microsoft-edge.svg?sanitize=true" title="ghcr.io/m1k1o/neko/microsoft-edge" width="60" height="auto" /&gt; &lt;/a&gt; 
 &lt;a href="https://neko.m1k1o.net/docs/v3/installation/docker-images#brave"&gt; &lt;img src="https://neko.m1k1o.net/img/icons/brave.svg?sanitize=true" title="ghcr.io/m1k1o/neko/brave" width="60" height="auto" /&gt; &lt;/a&gt; 
 &lt;a href="https://neko.m1k1o.net/docs/v3/installation/docker-images#vivaldi"&gt; &lt;img src="https://neko.m1k1o.net/img/icons/vivaldi.svg?sanitize=true" title="ghcr.io/m1k1o/neko/vivaldi" width="60" height="auto" /&gt; &lt;/a&gt; 
 &lt;a href="https://neko.m1k1o.net/docs/v3/installation/docker-images#opera"&gt; &lt;img src="https://neko.m1k1o.net/img/icons/opera.svg?sanitize=true" title="ghcr.io/m1k1o/neko/opera" width="60" height="auto" /&gt; &lt;/a&gt; 
 &lt;p&gt;... see &lt;a href="https://neko.m1k1o.net/docs/v3/installation/docker-images"&gt;all available images&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;Other applications&lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://neko.m1k1o.net/docs/v3/installation/docker-images#xfce"&gt; &lt;img src="https://neko.m1k1o.net/img/icons/xfce.svg?sanitize=true" title="ghcr.io/m1k1o/neko/xfce" width="60" height="auto" /&gt; &lt;/a&gt; 
 &lt;a href="https://neko.m1k1o.net/docs/v3/installation/docker-images#kde"&gt; &lt;img src="https://neko.m1k1o.net/img/icons/kde.svg?sanitize=true" title="ghcr.io/m1k1o/neko/kde" width="60" height="auto" /&gt; &lt;/a&gt; 
 &lt;a href="https://neko.m1k1o.net/docs/v3/installation/docker-images#remmina"&gt; &lt;img src="https://neko.m1k1o.net/img/icons/remmina.svg?sanitize=true" title="ghcr.io/m1k1o/neko/remmina" width="60" height="auto" /&gt; &lt;/a&gt; 
 &lt;a href="https://neko.m1k1o.net/docs/v3/installation/docker-images#vlc"&gt; &lt;img src="https://neko.m1k1o.net/img/icons/vlc.svg?sanitize=true" title="ghcr.io/m1k1o/neko/vlc" width="60" height="auto" /&gt; &lt;/a&gt; 
 &lt;p&gt;... others in &lt;a href="https://github.com/m1k1o/neko-apps"&gt;m1k1o/neko-apps&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;Why neko?&lt;/h3&gt; 
&lt;p&gt;I like cats 🐱 (&lt;code&gt;Neko&lt;/code&gt; is the Japanese word for cat), I'm a weeb/nerd.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;But why the cat butt?&lt;/strong&gt;&lt;/em&gt; Because cats are &lt;em&gt;assholes&lt;/em&gt;, but you love them anyways.&lt;/p&gt; 
&lt;h2&gt;Multiple rooms&lt;/h2&gt; 
&lt;p&gt;For neko room management software, visit &lt;a href="https://github.com/m1k1o/neko-rooms"&gt;neko-rooms&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;It also offers &lt;a href="https://github.com/m1k1o/neko-rooms/?tab=readme-ov-file#zero-knowledge-installation-with-https"&gt;Zero-knowledge installation (with HTTPS)&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Full documentation is available at &lt;a href="https://neko.m1k1o.net/"&gt;neko.m1k1o.net&lt;/a&gt;. Key sections include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://neko.m1k1o.net/docs/v3/migration-from-v2"&gt;Migration from V2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://neko.m1k1o.net/docs/v3/quick-start"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://neko.m1k1o.net/docs/v3/installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://neko.m1k1o.net/docs/v3/installation/examples"&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://neko.m1k1o.net/docs/v3/configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://neko.m1k1o.net/docs/v3/faq"&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://neko.m1k1o.net/docs/v3/troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to Contribute&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Check the &lt;a href="https://neko.m1k1o.net/contributing"&gt;Contributing Guide&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you find Neko useful, consider supporting the project via &lt;a href="https://github.com/sponsors/m1k1o"&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>XTLS/Xray-core</title>
      <link>https://github.com/XTLS/Xray-core</link>
      <description>&lt;p&gt;Xray, Penetrates Everything. Also the best v2ray-core. Where the magic happens. An open platform for various uses.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Project X&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS"&gt;Project X&lt;/a&gt; originates from XTLS protocol, providing a set of network tools such as &lt;a href="https://github.com/XTLS/Xray-core"&gt;Xray-core&lt;/a&gt; and &lt;a href="https://github.com/XTLS/REALITY"&gt;REALITY&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS/Xray-core#readme"&gt;README&lt;/a&gt; is open, so feel free to submit your project &lt;a href="https://github.com/XTLS/Xray-core/pulls"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Donation &amp;amp; NFTs&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/1"&gt;Collect a Project X NFT to support the development of Project X!&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/1"&gt;&lt;img alt="Project X NFT" width="150px" src="https://raw2.seadn.io/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/7fa9ce900fb39b44226348db330e32/8b7fa9ce900fb39b44226348db330e32.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ETH/USDT/USDC: &lt;code&gt;0xDc3Fe44F0f25D13CACb1C4896CD0D321df3146Ee&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Project X NFT: &lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/1"&gt;https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/1&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VLESS NFT: &lt;a href="https://opensea.io/collection/vless"&gt;https://opensea.io/collection/vless&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REALITY NFT: &lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/2"&gt;https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/2&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Related links: &lt;a href="https://github.com/XTLS/Xray-core/pull/5067"&gt;VLESS Post-Quantum Encryption&lt;/a&gt;, &lt;a href="https://github.com/XTLS/Xray-core/discussions/4113"&gt;XHTTP: Beyond REALITY&lt;/a&gt;, &lt;a href="https://github.com/XTLS/Xray-core/discussions/3633"&gt;Announcement of NFTs by Project X&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS/Xray-core/raw/main/LICENSE"&gt;Mozilla Public License Version 2.0&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://xtls.github.io"&gt;Project X Official Website&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Telegram&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectXray"&gt;Project X&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectXtls"&gt;Project X Channel&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectVless"&gt;Project VLESS&lt;/a&gt; (Русский)&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectXhttp"&gt;Project XHTTP&lt;/a&gt; (Persian)&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux Script 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-install"&gt;XTLS/Xray-install&lt;/a&gt; (&lt;strong&gt;Official&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/team-cloudchaser/tempest"&gt;tempest&lt;/a&gt; (supports &lt;a href="https://systemd.io"&gt;&lt;code&gt;systemd&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/OpenRC/openrc"&gt;OpenRC&lt;/a&gt;; Linux-only)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Docker 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://ghcr.io/xtls/xray-core"&gt;ghcr.io/xtls/xray-core&lt;/a&gt; (&lt;strong&gt;Official&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://hub.docker.com/r/teddysun/xray"&gt;teddysun/xray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/wulabing/xray_docker"&gt;wulabing/xray_docker&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Web Panel - &lt;strong&gt;WARNING: Please DO NOT USE plain HTTP panels like 3X-UI&lt;/strong&gt;, as they are believed to be bribed by Iran GFW for supporting plain HTTP by default and refused to change (&lt;a href="https://github.com/XTLS/Xray-core/pull/3884#issuecomment-2439595331"&gt;https://github.com/XTLS/Xray-core/pull/3884#issuecomment-2439595331&lt;/a&gt;), which has already put many users' data security in danger in the past few years. &lt;strong&gt;If you are already using 3X-UI, please switch to the following panels, which are verified to support HTTPS and SSH port forwarding only:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/remnawave/panel"&gt;Remnawave&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Gozargah/Marzban"&gt;Marzban&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/qist/xray-ui"&gt;Xray-UI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hiddify/Hiddify-Manager"&gt;Hiddify&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;One Click 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/zxcvos/Xray-script"&gt;Xray-REALITY&lt;/a&gt;, &lt;a href="https://github.com/sajjaddg/xray-reality"&gt;xray-reality&lt;/a&gt;, &lt;a href="https://github.com/aleskxyz/reality-ezpz"&gt;reality-ezpz&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hello-yunshu/Xray_bash_onekey"&gt;Xray_bash_onekey&lt;/a&gt;, &lt;a href="https://github.com/LordPenguin666/XTool"&gt;XTool&lt;/a&gt;, &lt;a href="https://github.com/vpainless/vpainless"&gt;VPainLess&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mack-a/v2ray-agent"&gt;v2ray-agent&lt;/a&gt;, &lt;a href="https://github.com/wulabing/Xray_onekey"&gt;Xray_onekey&lt;/a&gt;, &lt;a href="https://github.com/proxysu/ProxySU"&gt;ProxySU&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Magisk 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Asterisk4Magisk/Xray4Magisk"&gt;Xray4Magisk&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/E7KMbb/Xray_For_Magisk"&gt;Xray_For_Magisk&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Homebrew 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;brew install xray&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Example 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/REALITY#readme"&gt;VLESS-XTLS-uTLS-REALITY&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-examples/tree/main/VLESS-TCP-XTLS-Vision"&gt;VLESS-TCP-XTLS-Vision&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-examples/tree/main/All-in-One-fallbacks-Nginx"&gt;All-in-One-fallbacks-Nginx&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Xray-examples 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-examples"&gt;XTLS/Xray-examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/chika0801/Xray-examples"&gt;chika0801/Xray-examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lxhao61/integrated-examples"&gt;lxhao61/integrated-examples&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Tutorial 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/chika0801/Xray-install"&gt;XTLS Vision&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://cscot.pages.dev/2023/03/02/Xray-REALITY-tutorial/"&gt;REALITY (English)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SasukeFreestyle/XTLS-Iran-Reality"&gt;XTLS-Iran-Reality (English)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://computerscot.github.io/vless-xtls-utls-reality-steal-oneself.html"&gt;Xray REALITY with 'steal oneself' (English)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://g800.pages.dev/wireguard"&gt;Xray with WireGuard inbound (English)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;GUI Clients&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenWrt 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/xiaorouji/openwrt-passwall"&gt;PassWall&lt;/a&gt;, &lt;a href="https://github.com/xiaorouji/openwrt-passwall2"&gt;PassWall 2&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/fw876/helloworld"&gt;ShadowSocksR Plus+&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/yichya/luci-app-xray"&gt;luci-app-xray&lt;/a&gt; (&lt;a href="https://github.com/yichya/openwrt-xray"&gt;openwrt-xray&lt;/a&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Asuswrt-Merlin 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/DanielLavrushin/asuswrt-merlin-xrayui"&gt;XRAYUI&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Windows 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/2dust/v2rayN"&gt;v2rayN&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Furious"&gt;Furious&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/InvisibleManVPN/InvisibleMan-XRayClient"&gt;Invisible Man - Xray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Android 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/2dust/v2rayNG"&gt;v2rayNG&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/X-flutter"&gt;X-flutter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SaeedDev94/Xray"&gt;SaeedDev94/Xray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lhear/SimpleXray"&gt;SimpleXray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;iOS &amp;amp; macOS arm64 &amp;amp; tvOS 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/happ-proxy-utility/id6504287215"&gt;Happ&lt;/a&gt; (&lt;a href="https://apps.apple.com/us/app/happ-proxy-utility-for-tv/id6748297274"&gt;tvOS&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/streisand/id6450534064"&gt;Streisand&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/OneXray/OneXray"&gt;OneXray&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;macOS arm64 &amp;amp; x64 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/happ-proxy-utility/id6504287215"&gt;Happ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/yanue/V2rayU"&gt;V2rayU&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tzmax/V2RayXS"&gt;V2RayXS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Furious"&gt;Furious&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/OneXray/OneXray"&gt;OneXray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/goxray/desktop"&gt;GoXRay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Linux 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/v2rayA/v2rayA"&gt;v2rayA&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Furious"&gt;Furious&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ketetefid/GorzRay"&gt;GorzRay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/goxray/desktop"&gt;GoXRay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Others that support VLESS, XTLS, REALITY, XUDP, PLUX...&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;iOS &amp;amp; macOS arm64 &amp;amp; tvOS 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/shadowrocket/id932747118"&gt;Shadowrocket&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/us/app/loon/id1373567447"&gt;Loon&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Xray Tools 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lilendian0x00/xray-knife"&gt;xray-knife&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/kutovoys/xray-checker"&gt;xray-checker&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Xray Wrapper 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/libXray"&gt;XTLS/libXray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/remnawave/xtls-sdk"&gt;xtls-sdk&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hiddify/xtlsapi"&gt;xtlsapi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/2dust/AndroidLibXrayLite"&gt;AndroidLibXrayLite&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Xray-core-python"&gt;Xray-core-python&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XVGuardian/xray-api"&gt;xray-api&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/XrayR-project/XrayR"&gt;XrayR&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XrayR-project/XrayR-release"&gt;XrayR-release&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/missuo/XrayR-V2Board"&gt;XrayR-V2Board&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Cores 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/amnezia-vpn"&gt;Amnezia VPN&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/MetaCubeX/mihomo"&gt;mihomo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SagerNet/sing-box"&gt;sing-box&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS/Xray-core/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://deepwiki.com/XTLS/Xray-core"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-core/releases/tag/v1.0.0"&gt;Xray-core v1.0.0&lt;/a&gt; was forked from &lt;a href="https://github.com/v2fly/v2ray-core/commit/9a03cc5c98d04cc28320fcee26dbc236b3291256"&gt;v2fly-core 9a03cc5&lt;/a&gt;, and we have made &amp;amp; accumulated a huge number of enhancements over time, check &lt;a href="https://github.com/XTLS/Xray-core/releases"&gt;the release notes for each version&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For third-party projects used in &lt;a href="https://github.com/XTLS/Xray-core"&gt;Xray-core&lt;/a&gt;, check your local or &lt;a href="https://github.com/XTLS/Xray-core/raw/main/go.mod"&gt;the latest go.mod&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;One-line Compilation&lt;/h2&gt; 
&lt;h3&gt;Windows (PowerShell)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;$env:CGO_ENABLED=0
go build -o xray.exe -trimpath -buildvcs=false -ldflags="-s -w -buildid=" -v ./main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux / macOS&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;CGO_ENABLED=0 go build -o xray -trimpath -buildvcs=false -ldflags="-s -w -buildid=" -v ./main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Reproducible Releases&lt;/h3&gt; 
&lt;p&gt;Make sure that you are using the same Go version, and remember to set the git commit id (7 bytes):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;CGO_ENABLED=0 go build -o xray -trimpath -buildvcs=false -gcflags="all=-l=4" -ldflags="-X github.com/xtls/xray-core/core.build=REPLACE -s -w -buildid=" -v ./main
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are compiling a 32-bit MIPS/MIPSLE target, use this command instead:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;CGO_ENABLED=0 go build -o xray -trimpath -buildvcs=false -gcflags="-l=4" -ldflags="-X github.com/xtls/xray-core/core.build=REPLACE -s -w -buildid=" -v ./main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/XTLS/Xray-core"&gt;&lt;img src="https://starchart.cc/XTLS/Xray-core.svg?sanitize=true" alt="Stargazers over time" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>XIU2/CloudflareSpeedTest</title>
      <link>https://github.com/XIU2/CloudflareSpeedTest</link>
      <description>&lt;p&gt;🌩「自选优选 IP」测试 Cloudflare CDN 延迟和速度，获取最快 IP ！当然也支持其他 CDN / 多个解析 IP 的网站 ~&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;XIU2/CloudflareSpeedTest&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/XIU2/CloudflareSpeedTest/"&gt;&lt;img src="https://img.shields.io/github/go-mod/go-version/XIU2/CloudflareSpeedTest.svg?style=flat-square&amp;amp;label=Go&amp;amp;color=00ADD8&amp;amp;logo=go" alt="Go Version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/XIU2/CloudflareSpeedTest.svg?style=flat-square&amp;amp;label=Release&amp;amp;color=00ADD8&amp;amp;logo=github" alt="Release Version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/"&gt;&lt;img src="https://img.shields.io/github/license/XIU2/CloudflareSpeedTest.svg?style=flat-square&amp;amp;label=License&amp;amp;color=00ADD8&amp;amp;logo=github" alt="GitHub license" /&gt;&lt;/a&gt; &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/"&gt;&lt;img src="https://img.shields.io/github/stars/XIU2/CloudflareSpeedTest.svg?style=flat-square&amp;amp;label=Star&amp;amp;color=00ADD8&amp;amp;logo=github" alt="GitHub Star" /&gt;&lt;/a&gt; &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/"&gt;&lt;img src="https://img.shields.io/github/forks/XIU2/CloudflareSpeedTest.svg?style=flat-square&amp;amp;label=Fork&amp;amp;color=00ADD8&amp;amp;logo=github" alt="GitHub Fork" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;国外很多网站都在使用 Cloudflare CDN，但分配给中国内地访客的 IP 并不友好（延迟高、丢包多、速度慢）。&lt;br /&gt; 虽然 Cloudflare 公开了所有 &lt;a href="https://www.cloudflare.com/zh-cn/ips/"&gt;IP 段&lt;/a&gt; ，但想要在这么多 IP 中找到适合自己的，怕是要累死，于是就有了这个软件。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;「自选优选 IP」测试 Cloudflare CDN 延迟和速度，获取最快 IP (IPv4+IPv6)&lt;/strong&gt;！好用的话&lt;strong&gt;点个&lt;code&gt;⭐&lt;/code&gt;鼓励一下叭~&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;分享我其他开源项目：&lt;a href="https://github.com/XIU2/TrackersListCollection"&gt;&lt;strong&gt;TrackersList.com&lt;/strong&gt; - 全网热门 BT Tracker 列表！有效提高 BT 下载速度~&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/XIU2/TrackersListCollection.svg?style=flat-square&amp;amp;label=Star&amp;amp;color=4285dd&amp;amp;logo=github" height="16px" /&gt;&lt;/em&gt;&lt;br /&gt; &lt;em&gt;&lt;a href="https://github.com/XIU2/UserScript"&gt;&lt;strong&gt;UserScript&lt;/strong&gt; - 🐵 Github 高速下载、知乎增强、自动无缝翻页、护眼模式 等十几个&lt;strong&gt;油猴脚本&lt;/strong&gt;~&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/XIU2/UserScript.svg?style=flat-square&amp;amp;label=Star&amp;amp;color=4285dd&amp;amp;logo=github" height="16px" /&gt;&lt;/em&gt;&lt;br /&gt; &lt;em&gt;&lt;a href="https://github.com/XIU2/SNIProxy"&gt;&lt;strong&gt;SNIProxy&lt;/strong&gt; - 🧷 自用的简单 SNI Proxy（支持全平台、全系统、前置代理、配置简单等~&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/XIU2/SNIProxy.svg?style=flat-square&amp;amp;label=Star&amp;amp;color=4285dd&amp;amp;logo=github" height="16px" /&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;当然了，本项目也支持对 &lt;strong&gt;&lt;code&gt;其他 CDN / 多个解析 IP 的网站&lt;/code&gt;&lt;/strong&gt; 延迟测速，但相对应的下载测速地址需自行寻找。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Cloudflare CDN 已&lt;strong&gt;明文禁止代理&lt;/strong&gt;方式使用，对于&lt;strong&gt;代理套 CDN&lt;/strong&gt; 的自行承担风险，请勿过度依赖 &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/discussions/382"&gt;#382&lt;/a&gt; &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/discussions/383"&gt;#383&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;# 快速使用&lt;/h2&gt; 
&lt;h3&gt;下载运行&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;下载编译好的可执行文件（ &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/releases"&gt;Github Releases&lt;/a&gt; / &lt;a href="https://xiu.lanzoub.com/b0742hkxe"&gt;蓝奏云&lt;/a&gt; ）并解压。&lt;/li&gt; 
 &lt;li&gt;双击运行 &lt;code&gt;cfst.exe&lt;/code&gt; 文件（Windows 系统），等待测速完成...&lt;/li&gt; 
&lt;/ol&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;「 点击查看 Windows 系统下其他安装方式」&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;如果你有 scoop(Windows 下的命令行安装程序)，则可以这样安装:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;# 添加最多人使用的中文软件包仓库：dorado
scoop bucket add dorado https://github.com/chawyehsu/dorado
# 安装cloudflare-speedtest
scoop install dorado/cloudflare-speedtest
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;「 点击查看 Linux 系统下的使用示例 」&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;以下命令仅为示例，版本号和文件名请前往 &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/releases"&gt;&lt;strong&gt;Releases&lt;/strong&gt;&lt;/a&gt; 查看。&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;# 如果是第一次使用，则建议创建新文件夹（后续更新时，跳过该步骤）
mkdir cfst

# 进入文件夹（后续更新，只需要从这里重复下面的下载、解压命令即可）
cd cfst

# 下载 CFST 压缩包（自行根据需求替换 URL 中 [版本号] 和 [文件名]）
wget -N https://github.com/XIU2/CloudflareSpeedTest/releases/download/v2.3.4/cfst_linux_amd64.tar.gz
# 如果你是在国内网络环境中下载，那么请使用下面这几个镜像加速之一：
# wget -N https://ghfast.top/https://github.com/XIU2/CloudflareSpeedTest/releases/download/v2.3.4/cfst_linux_arm64.tar.gz
# wget -N https://wget.la/https://github.com/XIU2/CloudflareSpeedTest/releases/download/v2.3.4/cfst_linux_arm64.tar.gz
# wget -N https://ghproxy.net/https://github.com/XIU2/CloudflareSpeedTest/releases/download/v2.3.4/cfst_linux_arm64.tar.gz
# wget -N https://gh-proxy.com/https://github.com/XIU2/CloudflareSpeedTest/releases/download/v2.3.4/cfst_linux_arm64.tar.gz
# wget -N https://hk.gh-proxy.com/https://github.com/XIU2/CloudflareSpeedTest/releases/download/v2.3.4/cfst_linux_arm64.tar.gz
# 如果下载失败的话，尝试删除 -N 参数（如果是为了更新，则记得提前删除旧压缩包 rm cfst_linux_amd64.tar.gz ）

# 解压（不需要删除旧文件，会直接覆盖，自行根据需求替换 文件名）
tar -zxf cfst_linux_amd64.tar.gz

# 赋予执行权限
chmod +x cfst

# 运行（不带参数）
./cfst

# 运行（带参数示例）
./cfst -tl 200 -dn 20
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;如果平&lt;strong&gt;均延迟非常低&lt;/strong&gt;（如 0.xx），则说明 CFST &lt;strong&gt;测速时走了代理&lt;/strong&gt;，请先关闭代理软件后再测速。&lt;br /&gt; 如果在&lt;strong&gt;路由器&lt;/strong&gt;上运行，建议先关闭路由器内的代理（或将其排除），否则测速结果可能会&lt;strong&gt;不准确/无法使用&lt;/strong&gt;。&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;在&lt;strong&gt;手机&lt;/strong&gt;上独立运行 CFST 测速的简单教程：&lt;strong&gt;&lt;a href="https://github.com/XIU2/CloudflareSpeedTest/discussions/61"&gt;Android&lt;/a&gt;、&lt;a href="https://github.com/xianshenglu/cloudflare-ip-tester-app"&gt;Android APP&lt;/a&gt;、&lt;a href="https://github.com/XIU2/CloudflareSpeedTest/discussions/321"&gt;IOS&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] 注意！本软件仅适用于网站，&lt;strong&gt;不支持给使用 UDP 协议的 Cloudflare WARP 优选 IP&lt;/strong&gt;，具体见：&lt;a href="https://github.com/XIU2/CloudflareSpeedTest/discussions/392"&gt;#392&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;结果示例&lt;/h3&gt; 
&lt;p&gt;测速完毕后，默认会显示&lt;strong&gt;最快的 10 个 IP&lt;/strong&gt;，示例（仅为输出内容示例）：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;IP 地址           已发送  已接收  丢包率  平均延迟  下载速度(MB/s)  地区码
104.27.200.69     4      4       0.00   146.23    28.64          LAX
172.67.60.78      4      4       0.00   139.82    15.02          SEA
104.25.140.153    4      4       0.00   146.49    14.90          SJC
104.27.192.65     4      4       0.00   140.28    14.07          LAX
172.67.62.214     4      4       0.00   139.29    12.71          LAX
104.27.207.5      4      4       0.00   145.92    11.95          LAX
172.67.54.193     4      4       0.00   146.71    11.55          LAX
104.22.66.8       4      4       0.00   147.42    11.11          SEA
104.27.197.63     4      4       0.00   131.29    10.26          FRA
172.67.58.91      4      4       0.00   140.19    9.14           SJC
...

# 如果平均延迟非常低（如 0.xx），则说明 CFST 测速时走了代理，请先关闭代理软件后再测速。
# 如果在路由器上运行，请先关闭路由器内的代理（或将其排除），否则测速结果可能会不准确/无法使用。

# 因为每次测速都是在每个 IP 段中随机 IP，所以每次的测速结果都不可能相同，这是正常的！

# 注意！我发现电脑开机后第一次测速延迟会明显偏高（手动 TCPing 也一样），后续测速都正常
# 因此建议大家开机后第一次正式测速前，先随便测几个 IP（无需等待延迟测速完成，只要进度条动了就可以直接关了）

# 软件在 默认参数 下的整个流程大概步骤：
# 1. 延迟测速（默认 TCPing 模式，HTTPing 模式需要手动加上参数）
# 2. 延迟排序（延迟 从低到高 排序并按条件过滤，不同丢包率会分开排序，因此可能会有一些延迟低但丢包的 IP 排到后面）
# 3. 下载测速（从延迟最低的 IP 开始依次下载测速，默认测够 10 个就会停止）
# 4. 速度排序（速度从高到低排序）
# 5. 输出结果（通过参数控制是否输出到命令行(-p 0)或输出到文件(-o "")）

# 注意：输出的结果文件 result.csv 通过微软 Excel 表格打开会中文乱码，这是正常的，其他表格软件/记事本都显示正常
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;测速结果第一行就是&lt;strong&gt;既下载速度最快、又平均延迟最低的最快 IP&lt;/strong&gt;！&lt;/p&gt; 
&lt;p&gt;完整结果保存在当前目录下的 &lt;code&gt;result.csv&lt;/code&gt; 文件中，用&lt;strong&gt;记事本/表格软件&lt;/strong&gt;打开，格式如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;IP 地址,已发送,已接收,丢包率,平均延迟,下载速度(MB/s),地区码
104.27.200.69,4,4,0.00,146.23,28.64,LAX
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] &lt;em&gt;如果你发现&lt;strong&gt;下载速度为 0.00&lt;/strong&gt;，那么可以用&lt;strong&gt;调试模式 &lt;code&gt;-debug&lt;/code&gt;&lt;/strong&gt; 排查一下，详见：&lt;a href="https://github.com/XIU2/CloudflareSpeedTest#-%E4%B8%8B%E8%BD%BD%E6%B5%8B%E9%80%9F%E9%83%BD%E6%98%AF-000-"&gt;&lt;strong&gt;# 下载测速都是 0.00 ？&lt;/strong&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;大家可以按自己需求，对完整结果&lt;strong&gt;进一步筛选处理&lt;/strong&gt;，或者去看一看进阶使用&lt;strong&gt;指定过滤条件&lt;/strong&gt;！&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;# 进阶使用&lt;/h2&gt; 
&lt;p&gt;直接运行使用的是默认参数，如果想要测速结果更全面、更符合自己的要求，可以自定义参数。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Dart"&gt;C:\&amp;gt;cfst.exe -h

CloudflareSpeedTest vX.X.X
测试各个 CDN 或网站所有 IP 的延迟和速度，获取最快 IP (IPv4+IPv6)！
https://github.com/XIU2/CloudflareSpeedTest

参数：
    -n 200
        延迟测速线程；越多延迟测速越快，性能弱的设备 (如路由器) 请勿太高；(默认 200 最多 1000)
    -t 4
        延迟测速次数；单个 IP 延迟测速的次数；(默认 4 次)
    -dn 10
        下载测速数量；延迟测速并排序后，从最低延迟起下载测速的数量；(默认 10 个)
    -dt 10
        下载测速时间；单个 IP 下载测速最长时间，不能太短；(默认 10 秒)
    -tp 443
        指定测速端口；延迟测速/下载测速时使用的端口；(默认 443 端口)
    -url https://cf.xiu2.xyz/url
        指定测速地址；延迟测速(HTTPing)/下载测速时使用的地址，默认地址不保证可用性，建议自建；
        当下载测速时，软件会从 HTTP 响应头中获取该 IP 当前地区码（支持 Cloudflare、AWS CloudFront、Fastly、Gcore、CDN77、Bunny 等 CDN）并显示出来。

    -httping
        切换测速模式；延迟测速模式改为 HTTP 协议，所用测试地址为 [-url] 参数；(默认 TCPing)
        当使用 HTTP 测速模式时，软件会从 HTTP 响应头中获取该 IP 当前地区码（支持 Cloudflare、AWS CloudFront、Fastly、Gcore、CDN77、Bunny 等 CDN）并显示出来。
        注意：HTTPing 本质上也算一种 网络扫描 行为，因此如果你在服务器上面运行，需要降低并发(-n)，否则可能会被一些严格的商家暂停服务。
        如果你遇到 HTTPing 首次测速可用 IP 数量正常，后续测速越来越少甚至直接为 0，但停一段时间后又恢复了的情况，那么也可能是被 运营商、Cloudflare CDN 认为你在网络扫描而 触发临时限制机制，因此才会过一会儿就恢复了，建议降低并发(-n)减少这种情况的发生。
    -httping-code 200
        有效状态代码；HTTPing 延迟测速时网页返回的有效 HTTP 状态码，仅限一个；(默认 200 301 302)
    -cfcolo HKG,KHH,NRT,LAX,SEA,SJC,FRA,MAD
        匹配指定地区；IATA 机场地区码或国家/城市码，英文逗号分隔，大小写均可，仅 HTTPing 模式可用；(默认 所有地区)
        支持 Cloudflare、AWS CloudFront、Fastly、Gcore、CDN77、Bunny 等 CDN
        其中 Cloudflare、AWS CloudFront、Fastly 使用的是 IATA 三字机场地区码，如：HKG,LAX
        其中 CDN77、Bunny 使用的是 二字国家/区域码，如：US,CN
        其中 Gcore 使用的是 二字城市码，如：FR,AM
        因此大家使用 -cfcolo 指定地区码时要根据不同的 CDN 来指定不同类型的地区码。

    -tl 200
        平均延迟上限；只输出低于指定平均延迟的 IP，各上下限条件可搭配使用；(默认 9999 ms)
    -tll 40
        平均延迟下限；只输出高于指定平均延迟的 IP；(默认 0 ms)
    -tlr 0.2
        丢包几率上限；只输出低于/等于指定丢包率的 IP，范围 0.00~1.00，0 过滤掉任何丢包的 IP；(默认 1.00)
    -sl 5
        下载速度下限；只输出高于指定下载速度的 IP，凑够指定数量 [-dn] 才会停止测速；(默认 0.00 MB/s)

    -p 10
        显示结果数量；测速后直接显示指定数量的结果，为 0 时不显示结果直接退出；(默认 10 个)
    -f ip.txt
        IP段数据文件；如路径含有空格请加上引号；支持其他 CDN IP段；(默认 ip.txt)
    -ip 1.1.1.1,2.2.2.2/24,2606:4700::/32
        指定IP段数据；直接通过参数指定要测速的 IP 段数据，英文逗号分隔；(默认 空)
    -o result.csv
        写入结果文件；如路径含有空格请加上引号；值为空时不写入文件 [-o ""]；(默认 result.csv)

    -dd
        禁用下载测速；禁用后测速结果会按延迟排序 (默认按下载速度排序)；(默认 启用)
    -allip
        测速全部的IP；对 IP 段中的每个 IP (仅支持 IPv4) 进行测速；(默认 每个 /24 段随机测速一个 IP)

    -debug
        调试输出模式；会在一些非预期情况下输出更多日志以便判断原因；(默认 关闭)
        目前该功能仅针对 HTTPing 延迟测速过程 及 下载测速过程，当过程中因为各种原因导致当前 IP 测速中断都会输出错误原因
        例如：HTTPing 延迟测速过程中，因为 HTTP 状态码不符合或测速地址有问题或超时等原因而终止测速
        例如：下载测速过程中，因为下载测速地址有问题（被阻断、403状态码、超时）等原因而终止测速（导致显示 0.00）

    -v
        打印程序版本 + 检查版本更新
    -h
        打印帮助说明
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;界面解释&lt;/h3&gt; 
&lt;p&gt;为了避免大家对测速过程中的&lt;strong&gt;输出内容产生误解（可用、队列等数字，下载测速一半就"中断"？下载测速"卡住"不动？）&lt;/strong&gt;，我特意解释下。&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;「 点击展开 查看内容 」&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;hr /&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;该示例把常用参数都给加上了，即为：&lt;code&gt;-tll 40 -tl 150 -sl 1 -dn 5&lt;/code&gt;，最后输出结果如下：&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;# XIU2/CloudflareSpeedTest vX.X.X

开始延迟测速（模式：TCP, 端口：443, 范围：40 ~ 150 ms, 丢包：1.00)
321 / 321 [-----------------------------------------------------------] 可用: 30
开始下载测速（下限：1.00 MB/s, 数量：5, 队列：10）
3 / 5 [-----------------------------------------↗--------------------]
IP 地址           已发送  已接收  丢包率  平均延迟  下载速度(MB/s)  地区码
XXX.XXX.XXX.XXX   4      4       0.00   83.32     3.66           LAX
XXX.XXX.XXX.XXX   4      4       0.00   107.81    2.49           LAX
XXX.XXX.XXX.XXX   4      3       0.25   149.59    1.04           N/A

完整测速结果已写入 result.csv 文件，可使用记事本/表格软件查看。
按下 回车键 或 Ctrl+C 退出。
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr /&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;刚接触 CFST 的人，可能会迷惑&lt;strong&gt;明明延迟测速可用 IP 有 30 个，怎么最后只剩下 3 个了呢？&lt;/strong&gt;&lt;br /&gt; 下载测速里的队列又是什么意思？难道我下载测速还要排队？&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;CFST 会先延迟测速，在这过程中进度条右侧会实时显示可用 IP 数量（&lt;code&gt;可用: 30&lt;/code&gt;），但注意该可用数量指的是&lt;strong&gt;测试通过没有超时的 IP 数量&lt;/strong&gt;，和延迟上下限、丢包条件无关。当延迟测速完成后，因为还指定了&lt;strong&gt;延迟上下限、丢包&lt;/strong&gt;的条件，所以按照条件过滤后只剩下 &lt;code&gt;10&lt;/code&gt; 个了（也就是等待下载测速的 &lt;code&gt;队列：10&lt;/code&gt;）。&lt;/p&gt; 
 &lt;p&gt;即以上示例中，&lt;code&gt;321&lt;/code&gt; 个 IP 延迟测速完成后，只有 &lt;code&gt;30&lt;/code&gt; 个 IP 测试通过没有超时，然后根据延迟上下限范围：&lt;code&gt;40 ~ 150 ms&lt;/code&gt; 及丢包上限条件过滤后，只剩下 &lt;code&gt;10&lt;/code&gt; 个满足要求的 IP 了。如果你 &lt;code&gt;-dd&lt;/code&gt; 禁用了下载测速，那么就会直接输出这 &lt;code&gt;10&lt;/code&gt; 个 IP 了。当然该示例并未禁用，因此接下来软件会继续对这 &lt;code&gt;10&lt;/code&gt; 个 IP 进行下载测速（&lt;code&gt;队列：10&lt;/code&gt;）。&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;因为下载测速是单线程一个个 IP 挨着排队测速的，因此等待下载测速的 IP 数量才会叫做 &lt;code&gt;队列&lt;/code&gt;。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;hr /&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;你可能注意到了，&lt;strong&gt;明明指定了要找到 5 个满足下载速度条件的 IP，怎么才 3 个就 “中断” 了呢？&lt;/strong&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;下载测速进度条中的 &lt;code&gt;3 / 5&lt;/code&gt;，前者指的是找到了 &lt;code&gt;3&lt;/code&gt; 个满足下载速度下限条件的 IP（即下载速度高于 &lt;code&gt;1 MB/s&lt;/code&gt; ），后者 &lt;code&gt;5&lt;/code&gt; 指的是你要求找到 &lt;code&gt;5&lt;/code&gt; 个满足下载速度下限条件的 IP（&lt;code&gt;-dn 5&lt;/code&gt;）。&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;另外，提醒一下，如果你指定的 &lt;code&gt;-dn&lt;/code&gt; 大于下载测速队列，比如你延迟测速后只剩下 &lt;code&gt;4&lt;/code&gt; 个 IP 了，那么下载测速进度条中后面的数字就会和下载测速队列一样都是 &lt;code&gt;4&lt;/code&gt; 个，而非你 &lt;code&gt;-dn&lt;/code&gt; 指定的 &lt;code&gt;5&lt;/code&gt; 个了。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;软件在测速完这 &lt;code&gt;10&lt;/code&gt; 个 IP 后，只找到了 &lt;code&gt;3&lt;/code&gt; 个下载速度高于 &lt;code&gt;1 MB/s&lt;/code&gt; 的 IP，剩下的 &lt;code&gt;7&lt;/code&gt; 个 IP 都是 “不及格” 的。&lt;/p&gt; 
 &lt;p&gt;因此，这不是 &lt;code&gt;“每次测速都不到 5 就中断了”&lt;/code&gt;，而是所有 IP 都下载测速完了，但却只找到了 &lt;code&gt;3&lt;/code&gt; 个满足条件的。&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;还有一种情况，那就是当可用 IP 很多时（几百几千），你还设置了下载速度条件，那么可能就会遇到：&lt;strong&gt;怎么下载测速进度条老是卡在 &lt;code&gt;X / 5&lt;/code&gt; 了呢？&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;这其实并不是卡住了，而是只有当找到一个满足条件的 IP 时，进度条才会 +1，因此如果一直找不到，那么 CFST 就会一直下载测速下去，因此在表现为进度条卡住不动，但这也是在提醒你：你设置的下载速度条件对你来说已经高于实际了，你需要适当调低预期。&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;如果不想遇到这种全部测速一遍都没几个满足条件的情况，那么就要&lt;strong&gt;调低下载速度上限参数 &lt;code&gt;-sl&lt;/code&gt;&lt;/strong&gt;，或者移除。&lt;/p&gt; 
 &lt;p&gt;因为只要指定了 &lt;code&gt;-sl&lt;/code&gt; 参数，那么只要没有凑够 &lt;code&gt;-dn&lt;/code&gt; 的数量（默认 10 个），就会一直测速下去，直到凑够或全部测速完。移除 &lt;code&gt;-sl&lt;/code&gt; 并添加 &lt;code&gt;-dn 20&lt;/code&gt; 参数，这样就是只测速延迟最低的前 20 个 IP，测速完就停止，节省时间。&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;另外，如果全部队列 IP 都测速完了，但一个满足下载速度条件的 IP 都没有，你可能需要调低预期的下载测速下限条件，但你需要知道当前的大概测速速度都在什么范围，那么你就可以加上 &lt;code&gt;-debug&lt;/code&gt; 参数开启调试模式，这样再遇到这种情况时，就会&lt;strong&gt;忽略条件返回所有测速结果&lt;/strong&gt;，你就能看到这些 IP 的下载速度都有多少，心里也就有数了，然后&lt;strong&gt;适当调低 &lt;code&gt;-sl&lt;/code&gt; 再试试&lt;/strong&gt;。&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;注意，如果你&lt;strong&gt;没有指定&lt;/strong&gt;下载测速下限 &lt;code&gt;-sl&lt;/code&gt; 条件，那么无论什么情况下 CFST 都会&lt;strong&gt;输出所有测速结果&lt;/strong&gt;。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;同样，延迟测速方面，&lt;code&gt;可用: 30&lt;/code&gt;、&lt;code&gt;队列：10&lt;/code&gt; 这两个数值也可以让你清楚，你设置的延迟条件对你来说是否过于苛刻。如果可用 IP 一大堆，但条件过滤后只剩下 2、3 个，那不用说就知道需要&lt;strong&gt;调低预期的延迟/丢包条件&lt;/strong&gt;了。&lt;/p&gt; 
 &lt;p&gt;这两个机制，一个是告诉你&lt;strong&gt;延迟丢包条件&lt;/strong&gt;是否合适的，一个是告诉你&lt;strong&gt;下载速度条件&lt;/strong&gt;是否合适的。&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h3&gt;使用示例&lt;/h3&gt; 
&lt;p&gt;Windows 要指定参数需要在 CMD 中运行，或者把参数添加到快捷方式目标中。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;各参数均有&lt;strong&gt;默认值&lt;/strong&gt;，当使用默认值时参数可以省略（&lt;strong&gt;按需选择&lt;/strong&gt;），参数&lt;strong&gt;不分前后顺序&lt;/strong&gt;。&lt;/li&gt; 
  &lt;li&gt;Windows &lt;strong&gt;PowerShell&lt;/strong&gt; 只需把下面命令中的 &lt;code&gt;cfst.exe&lt;/code&gt; 改为 &lt;code&gt;.\cfst.exe&lt;/code&gt; 即可。&lt;/li&gt; 
  &lt;li&gt;Linux / macOS 系统只需要把下面命令中的 &lt;code&gt;cfst.exe&lt;/code&gt; 改为 &lt;code&gt;./cfst&lt;/code&gt; 即可。&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h4&gt;# CMD 带参数运行&lt;/h4&gt; 
&lt;p&gt;对命令行程序不熟悉的人，可能不知道该如何带参数运行，我就简单说一下。&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;「 点击展开 查看内容 」&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;很多人打开 CMD 直接就以&lt;strong&gt;绝对路径&lt;/strong&gt;运行 CFST 会报错，这是因为默认的 &lt;code&gt;-f ip.txt&lt;/code&gt; 参数是相对路径，需要指定绝对路径的 ip.txt 才行，但这样毕竟太麻烦了，因此还是建议进入 CFST 程序目录下，以&lt;strong&gt;相对路径&lt;/strong&gt;方式运行：&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;方式 一&lt;/strong&gt;：&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;打开 CFST 程序所在目录&lt;/li&gt; 
  &lt;li&gt;空白处按下 &lt;kbd&gt;Shift + 鼠标右键&lt;/kbd&gt; 显示右键菜单&lt;/li&gt; 
  &lt;li&gt;选择 &lt;strong&gt;[在此处打开命令窗口]&lt;/strong&gt; 来打开 CMD 窗口，此时默认就位于当前目录下&lt;/li&gt; 
  &lt;li&gt;输入带参数的命令，如：&lt;code&gt;cfst.exe -tl 200 -dn 20&lt;/code&gt; 即可运行&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;strong&gt;方式 二&lt;/strong&gt;：&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;打开 CFST 程序所在目录&lt;/li&gt; 
  &lt;li&gt;直接在文件夹地址栏中全选(或清空)并输入 &lt;code&gt;cmd&lt;/code&gt; 回车就能打开 CMD 窗口，此时默认就位于当前目录下&lt;/li&gt; 
  &lt;li&gt;输入带参数的命令，如：&lt;code&gt;cfst.exe -tl 200 -dn 20&lt;/code&gt; 即可运行&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;当然你也可以随便打开一个 CMD 窗口，然后输入如 &lt;code&gt;cd /d "D:\Program Files\cfst"&lt;/code&gt; 来进入程序目录&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;提示&lt;/strong&gt;：如果用的是 &lt;strong&gt;PowerShell&lt;/strong&gt; 只需把命令中的 &lt;code&gt;cfst.exe&lt;/code&gt; 改为 &lt;code&gt;.\cfst.exe&lt;/code&gt; 即可。&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h4&gt;# Windows 快捷方式带参数运行&lt;/h4&gt; 
&lt;p&gt;如果不经常修改运行参数（比如平时都是直接双击运行）的人，建议使用快捷方式，更方便点。&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;「 点击展开 查看内容 」&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;右键 &lt;code&gt;cfst.exe&lt;/code&gt; 文件 - &lt;strong&gt;[创建快捷方式]&lt;/strong&gt;，然后右键该快捷方式 - &lt;strong&gt;[属性]&lt;/strong&gt;，修改其&lt;strong&gt;目标&lt;/strong&gt;：&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 如果要不输出结果文件，那么请加上 -o " "，引号里的是空格（没有空格会导致该参数被省略）。
D:\ABC\cfst\cfst.exe -tl 200 -dn 20 -o " "

# 如果文件路径包含引号，则需要把启动参数放在引号外面，记得引号和 - 之间有空格。
"D:\Program Files\cfst\cfst.exe" -tl 200 -dn 20 -o " "

# 注意！快捷方式 - 起始位置 不能是空的，否则就会因为绝对路径而找不到 ip.txt 文件
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h4&gt;# IPv4/IPv6&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;「 点击展开 查看内容 」&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;hr /&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 指定自带的 IPv4 数据文件可测速这些 IPv4 地址（-f 默认值就是 ip.txt，所以该参数可省略）
cfst.exe -f ip.txt

# 指定自带的 IPv6 数据文件可测速这些 IPv6 地址
# 另外，v2.1.0 版本后支持 IPv4+IPv6 混合测速并移除了 -ipv6 参数，因此一个文件内可以同时包含 IPv4+IPv6 地址
cfst.exe -f ipv6.txt

# 也可以直接通过参数指定要测速的 IP
cfst.exe -ip 1.1.1.1,2606:4700::/32
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;测速 IPv6 时，可能会注意到每次测速数量都不一样，了解原因： &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/issues/120"&gt;#120&lt;/a&gt;&lt;br /&gt; 因为 IPv6 太多（以亿为单位），且绝大部分 IP 段压根未启用，所以我只扫了一部分可用的 IPv6 段写到 &lt;code&gt;ipv6.txt&lt;/code&gt; 文件中，有兴趣的可以自行扫描增删，ASN 数据源来自：&lt;a href="https://bgp.he.net/AS13335#_prefixes6"&gt;bgp.he.net&lt;/a&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h4&gt;# HTTPing&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;「 点击展开 查看内容 」&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;目前有两种延迟测速模式，分别为 &lt;strong&gt;TCP 协议、HTTP 协议&lt;/strong&gt;。&lt;br /&gt; TCP 协议耗时更短、消耗资源更少，超时时间为 1 秒，该协议为默认模式。&lt;br /&gt; HTTP 协议适用于快速测试某域名指向某 IP 时是否可以访问，超时时间为 2 秒。&lt;br /&gt; 同一个 IP，各协议去 Ping 得到的延迟一般为：&lt;strong&gt;ICMP &amp;lt; TCP &amp;lt; HTTP&lt;/strong&gt;，越靠右对丢包等网络波动越敏感。&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;注意：HTTPing 本质上也算一种&lt;strong&gt;网络扫描&lt;/strong&gt;行为，因此如果你在服务器上面运行，需要&lt;strong&gt;降低并发&lt;/strong&gt;(&lt;code&gt;-n&lt;/code&gt;)，否则可能会被一些严格的商家暂停服务。如果你遇到 HTTPing 首次测速可用 IP 数量正常，后续测速越来越少甚至直接为 0，但停一段时间后又恢复了的情况，那么也可能是被 运营商、Cloudflare CDN 认为你在网络扫描而&lt;strong&gt;触发临时限制机制&lt;/strong&gt;，因此才会过一会儿就恢复了，建议&lt;strong&gt;降低并发&lt;/strong&gt;(&lt;code&gt;-n&lt;/code&gt;)减少这种情况的发生。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;另外，本软件 HTTPing 仅获取&lt;strong&gt;响应头(response headers)&lt;/strong&gt;，并不获取正文内容（即 URL 文件大小不影响 HTTPing 测试，但如果你还要下载测速的话，那么还是需要一个大文件的），类似于 curl -i 功能。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;另外，HTTPing 过程中，软件会从 HTTP 响应头中获取该 IP 当前地区码（支持 Cloudflare、AWS CloudFront、Fastly、Gcore、CDN77、Bunny 等 CDN）并显示出来，而 TCPing 过程中无法这样做（但 下载测速 时也会这样做来获取地区码，毕竟下载测速也是个 HTTP 链接）&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 只需加上 -httping 参数即可切换到 HTTP 协议延迟测速模式
cfst.exe -httping

# 软件会根据访问时网页返回的有效 HTTP 状态码来判断可用性（当然超时也算），默认对返回 200 301 302 这三个 HTTP 状态码的视为有效，可以手动指定认为有效的 HTTP 状态码，但只能指定一个（你需要提前确定测试地址正常情况下会返回哪个状态码）
cfst.exe -httping -httping-code 200

# 通过 -url 参数来指定 HTTPing 测试地址（可以是任意网页 URL，不局限于具体文件地址）
cfst.exe -httping -url https://cf.xiu2.xyz/url
# 如果你要 HTTPing 测试其他网站/CDN，那么指定一个该网站/使用该 CDN 的地址（因为软件默认地址是 Cloudflare 的，只能用于测试 Cloudflare 的 IP）

# 注意：如果测速地址为 HTTP 协议，记得加上 -tp 80（这个参数会影响 延迟测速/下载测速 时使用的端口）
# 同理，如果要测速 80 端口，那么也需要加上 -url 参数来指定一个 http:// 协议的地址才行（且该地址不会强制重定向至 HTTPS），如果是非 80 443 端口，那么需要确定该下载测速地址是否支持通过该端口访问。
cfst.exe -httping -tp 80 -url http://cdn.cloudflare.steamstatic.com/steam/apps/5952/movie_max.webm
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h4&gt;# 匹配指定地区&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;「 点击展开 查看内容 」&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;Cloudflare CDN 的节点 IP 是 Anycast IP，即每个 IP 对应的服务器节点及地区不是固定的，而是动态变化的，&lt;strong&gt;不同地区、不同运营商、不同时间段&lt;/strong&gt;访问&lt;strong&gt;同一个 IP&lt;/strong&gt; 分配到的服务器节点地区和路线也都是不一样的（比如同一个 IP，美国人访问就是分配到就近的美国节点服务器，日本人访问则就又变成了就近的日本节点服务器了，国内内地就比较特殊了，只能给你分配到其他国家，当然不同的 IP 段路由变化/分配逻辑也是不同的，有的 IP 段会较为固定）。&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;！虽然 Cloudflare CDN 有很多亚洲节点，但&lt;strong&gt;不代表你就能用上&lt;/strong&gt;，新加坡人测速可能随便一抓一大把的新加坡节点，但你全部扫一遍可能都遇不到一个，因为这是由 CDN 控制的。Anycast IP 的路由是经常变的，同一个 IP 今天可能是美国，明天你再访问可能就又分配到欧洲节点了（当然这只是个例子，一般没有那么频繁，这也和很多因素有关，比如线路拥塞程度，成本变动等），因此&lt;strong&gt;不要对该功能有过高期待&lt;/strong&gt;~&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;或者你随便找个 Cloudflare CDN 的 IP（比如官网域名的解析 IP &lt;code&gt;104.16.123.96&lt;/code&gt;），然后去那些有全球节点的&lt;a href="https://ping.sx/ping?t=104.16.123.96"&gt;在线 Ping 测试&lt;/a&gt;网站，你就会发现这个 IP 在全球大部分地区的延迟都是个位数（而且很多都是 0.X ms），就算一些地方延迟高一些但也基本都控制在 几十ms，只有在国内才会发现突然变成了 上百ms 了。&lt;/p&gt; 
 &lt;p&gt;这就是 Anycast 技术，也就只有国内大陆这种特殊的网络情况，才需要对 Anycast 的 CDN IP 进行优选。&lt;/p&gt; 
 &lt;p&gt;因此，对于这种 Anycast IP 的实际服务器位置，就不能靠那些在线 IP 地址位置查询网站来判断了。&lt;/p&gt; 
 &lt;p&gt;除了通过 &lt;strong&gt;HTTP 响应头&lt;/strong&gt;获取地区码外（该功能的实现方式），还可以手动访问 &lt;code&gt;http://CloudflareIP/cdn-cgi/trace&lt;/code&gt; 来获知 CDN 分配给你的实际节点地区码。&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;该功能支持 &lt;strong&gt;Cloudflare、AWS CloudFront、Fastly、Gcore、CDN77、Bunny&lt;/strong&gt; 等 CDN。&lt;br /&gt; 但注意，不是所有 CDN 都支持 Anycast 技术的，很多 CDN 会限制一个网站能使用的 IP 范围。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;其中 &lt;strong&gt;Cloudflare、AWS CloudFront、Fastly&lt;/strong&gt; 都使用的是 &lt;strong&gt;&lt;code&gt;IATA 三字机场地区码&lt;/code&gt;&lt;/strong&gt;，如：HKG,LAX&lt;br /&gt; 而 &lt;strong&gt;CDN77、Bunny&lt;/strong&gt; 使用的是 &lt;strong&gt;&lt;code&gt;二字国家/区域码&lt;/code&gt;&lt;/strong&gt;，如：US,CN&lt;br /&gt; &lt;strong&gt;Gcore&lt;/strong&gt; 则使用的是 &lt;strong&gt;&lt;code&gt;二字城市码&lt;/code&gt;&lt;/strong&gt;，如：FR,AM&lt;br /&gt; 因此大家使用 &lt;code&gt;-cfcolo&lt;/code&gt; 指定地区码时要根据不同的 CDN 来指定不同类型的地区码。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：如果你要用于筛选 AWS CloudFront CDN 地区，那么要通过 &lt;code&gt;-url&lt;/code&gt; 参数指定一个使用 AWS CloudFront CDN 的下载测速地址（因为软件默认下载测速地址是 Cloudflare CDN 的），另外有时候 HTTPing 模式测速一些 AWS CloudFront 地址会返回 403 错误，这种情况下需要加上 &lt;code&gt;-httping-code 403&lt;/code&gt; 才能正确获取地区码。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 指定地区名后，延迟测速后得到的结果就都是指定地区的 IP 了（如果没有指定 -dd 的话则会继续进行下载测速）
# 如果延迟测速后结果为 0，则说明没有找到任何一个（未超时可用的）指定地区的 IP。
# 节点地区名为当地 IATA 机场地区码或国家/城市码，指定多个时用英文逗号分隔，v2.2.3 版本后支持小写

cfst.exe -httping -cfcolo HKG,KHH,NRT,LAX,SEA,SJC,FRA,MAD

# 注意，该参数只有在 HTTPing 延迟测速模式下才可用（因为软件是通过 HTTP 链接中的响应头来获得该 IP 的实际地区码）

# 另外，HTTPing 过程中，软件会从 HTTP 响应头中获取该 IP 当前地区码（支持 Cloudflare、AWS CloudFront、Fastly、Gcore、CDN77、Bunny 等 CDN）并显示出来，而 TCPing 过程中无法这样做（但 下载测速 时也会这样做来获取地区码，毕竟下载测速也是个 HTTP 链接）
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;&lt;code&gt;IATA 三字机场地区码&lt;/code&gt;&lt;/strong&gt;，可见：&lt;a href="https://www.cloudflarestatus.com/"&gt;https://www.cloudflarestatus.com/&lt;/a&gt;&lt;br /&gt; &lt;strong&gt;&lt;code&gt;二字国家码&lt;/code&gt;&lt;/strong&gt;，可见：&lt;a href="https://zh.wikipedia.org/wiki/ISO_3166-1%E4%BA%8C%E4%BD%8D%E5%AD%97%E6%AF%8D%E4%BB%A3%E7%A0%81#%E6%AD%A3%E5%BC%8F%E5%88%86%E9%85%8D%E4%BB%A3%E7%A0%81"&gt;https://zh.wikipedia.org/wiki/ISO_3166-1二位字母代码#正式分配代码&lt;/a&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h4&gt;# 文件相对/绝对路径&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;「 点击展开 查看内容 」&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;hr /&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 指定 IPv4 数据文件，不显示结果直接退出，输出结果到文件（-p 值为 0）
cfst.exe -f 1.txt -p 0 -dd

# 指定 IPv4 数据文件，不输出结果到文件，直接显示结果（-p 值为 10 条，-o 值为空但引号不能少）
cfst.exe -f 2.txt -o "" -p 10 -dd

# 指定 IPv4 数据文件 及 输出结果到文件（相对路径，即当前目录下，如含空格请加上引号）
cfst.exe -f 3.txt -o result.txt -dd


# 指定 IPv4 数据文件 及 输出结果到文件（相对路径，即当前目录内的 abc 文件夹下，如含空格请加上引号）
# Linux（CFST 程序所在目录内的 abc 文件夹下）
./cfst -f abc/3.txt -o abc/result.txt -dd

# Windows（注意是反斜杠）
cfst.exe -f abc\3.txt -o abc\result.txt -dd


# 指定 IPv4 数据文件 及 输出结果到文件（绝对路径，即 C:\abc\ 目录下，如含空格请加上引号）
# Linux（/abc/ 目录下）
./cfst -f /abc/4.txt -o /abc/result.csv -dd

# Windows（注意是反斜杠）
cfst.exe -f C:\abc\4.txt -o C:\abc\result.csv -dd


# 如果要以【绝对路径】运行 CFST，那么 -f / -o 参数中的文件名也必须是【绝对路径】，否则会报错找不到文件！
# Linux（/abc/ 目录下）
/abc/cfst -f /abc/4.txt -o /abc/result.csv -dd

# Windows（注意是反斜杠）
C:\abc\cfst.exe -f C:\abc\4.txt -o C:\abc\result.csv -dd
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h4&gt;# 测速其他端口&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;「 点击展开 查看内容 」&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;hr /&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 如果你想要测速非默认 443 的其他端口，则需要通过 -tp 参数指定（该参数会影响 延迟测速/下载测速 时使用的端口）

# 如果要延迟测速 80 端口+下载测速（如果 -dd 禁用了下载测速则不需要），那么还需要指定 http:// 协议的下载测速地址才行（且该地址不会强制重定向至 HTTPS，因为那样就变成 443 端口了）
cfst.exe -tp 80 -url http://cdn.cloudflare.steamstatic.com/steam/apps/5952/movie_max.webm

# 如果是非 80 443 的其他端口，那么需要确定你使用的下载测速地址是否支持通过该非标端口访问。
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h4&gt;# 自定义测速地址&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;「 点击展开 查看内容 」&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;hr /&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 该参数适用于下载测速 及 HTTP 协议的延迟测速，对于后者该地址可以是任意网页 URL（不局限于具体文件地址）

# 地址要求：可以直接下载、文件大小超过 200MB、用的是 Cloudflare CDN
cfst.exe -url https://cf.xiu2.xyz/url

# 注意：如果测速地址为 HTTP 协议（该地址不能强制重定向至 HTTPS），记得加上 -tp 80（这个参数会影响 延迟测速/下载测速 时使用的端口），如果是非 80 443 端口，那么需要确定下载测速地址是否支持通过该端口访问。
cfst.exe -tp 80 -url http://cdn.cloudflare.steamstatic.com/steam/apps/5952/movie_max.webm
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h4&gt;# 自定义测速条件（指定 延迟/丢包/下载速度 的目标范围）&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;「 点击展开 查看内容 」&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;hr /&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;注意：延迟测速进度条右边的&lt;strong&gt;可用数量&lt;/strong&gt;，仅指延迟测速过程中&lt;strong&gt;未超时的 IP 数量&lt;/strong&gt;，和延迟上下限条件无关。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;仅指定 &lt;strong&gt;[平均延迟上限]&lt;/strong&gt; 条件&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 平均延迟上限：200 ms，下载速度下限：0 MB/s
# 即找到平均延迟低于 200 ms 的 IP，然后再按延迟从低到高进行 10 次下载测速
cfst.exe -tl 200
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;如果&lt;strong&gt;没有找到一个满足延迟&lt;/strong&gt;条件的 IP，那么不会输出任何内容。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;hr /&gt; 
 &lt;ul&gt; 
  &lt;li&gt;仅指定 &lt;strong&gt;[平均延迟上限]&lt;/strong&gt; 条件，且&lt;strong&gt;只延迟测速，不下载测速&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 平均延迟上限：200 ms，下载速度下限：0 MB/s，数量：不知道多少 个
# 即只输出低于 200ms 的 IP，且不再下载测速（因为不再下载测速，所以 -dn 参数就无效了）
cfst.exe -tl 200 -dd
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ul&gt; 
  &lt;li&gt;仅指定 &lt;strong&gt;[丢包几率上限]&lt;/strong&gt; 条件&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 丢包几率上限：0.25
# 即找到丢包率低于等于 0.25 的 IP，范围 0.00~1.00，如果 -tlr 0 则代表过滤掉任何丢包的 IP
cfst.exe -tlr 0.25
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr /&gt; 
 &lt;ul&gt; 
  &lt;li&gt;仅指定 &lt;strong&gt;[下载速度下限]&lt;/strong&gt; 条件&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 平均延迟上限：9999 ms，下载速度下限：5 MB/s，数量：10 个（可选）
# 即需要找到 10 个平均延迟低于 9999 ms 且下载速度高于 5 MB/s 的 IP 才会停止测速
cfst.exe -sl 5 -dn 10
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;如果&lt;strong&gt;没有找到一个满足速度&lt;/strong&gt;条件的 IP，那么不会输出任何内容，你可能需要调低预期的下载测速下限条件，但你需要知道当前的大概测速速度都在什么范围，那么你就可以加上 &lt;code&gt;-debug&lt;/code&gt; 参数开启调试模式，这样再遇到这种情况时，就会&lt;strong&gt;忽略条件返回所有测速结果&lt;/strong&gt;，你就能看到这些 IP 的下载速度都有多少，心里也就有数了，然后&lt;strong&gt;适当调低 &lt;code&gt;-sl&lt;/code&gt; 再试试&lt;/strong&gt;。&lt;br /&gt; 注意，如果你&lt;strong&gt;没有指定&lt;/strong&gt;下载测速下限 &lt;code&gt;-sl&lt;/code&gt; 条件，那么无论什么情况下 CFST 都会&lt;strong&gt;输出所有测速结果&lt;/strong&gt;。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;没有指定平均延迟上限时，如果一直&lt;strong&gt;凑不够&lt;/strong&gt;满足条件的 IP 数量，就会&lt;strong&gt;一直测速&lt;/strong&gt;下去。&lt;br /&gt; 建议&lt;strong&gt;同时指定 [下载速度下限] + [平均延迟上限]&lt;/strong&gt;，这样测速到指定延迟上限还没凑够数量，就会终止测速。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;hr /&gt; 
 &lt;ul&gt; 
  &lt;li&gt;同时指定 &lt;strong&gt;[平均延迟上限] + [下载速度下限]&lt;/strong&gt; 条件&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 平均延迟上限、下载速度下限均支持小数（如 -sl 0.5）
# 平均延迟上限：200 ms，下载速度下限：5.6 MB/s，数量：10 个（可选）
# 即需要找到 10 个平均延迟低于 200 ms 且下载速度高于 5 .6MB/s 的 IP 才会停止测速
cfst.exe -tl 200 -sl 5.6 -dn 10
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;如果&lt;strong&gt;没有找到一个满足延迟&lt;/strong&gt;条件的 IP，那么不会输出任何内容。&lt;br /&gt; 如果&lt;strong&gt;没有找到一个满足速度&lt;/strong&gt;条件的 IP，那么不会输出任何内容，但可以通过加上 &lt;code&gt;-debug&lt;/code&gt; 参数开启调试模式，这时会忽略条件输出所有 IP 测速结果（方便你下次测速时调整条件）。&lt;br /&gt; 所以建议先不指定条件测速一遍，看看平均延迟和下载速度大概在什么范围，避免指定条件&lt;strong&gt;过低/过高&lt;/strong&gt;！&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;因为 Cloudflare 公开的 IP 段是&lt;strong&gt;回源 IP+任播 IP&lt;/strong&gt;，而&lt;strong&gt;回源 IP&lt;/strong&gt;是无法使用的，所以下载测速是 0.00。&lt;br /&gt; 运行时可以加上 &lt;code&gt;-sl 0.01&lt;/code&gt;（下载速度下限），过滤掉&lt;strong&gt;回源 IP&lt;/strong&gt;（下载测速低于 0.01MB/s 的结果）。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;为了避免大家迷糊，我列出了在各种条件组合下的预期输出结果都是什么样的。&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;没有指定任何 延迟/速度条件 (即都是默认值)：&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;无论如何，都直接输出 &lt;strong&gt;所有测速结果&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;&lt;strong&gt;指定了任何 延迟条件（&lt;code&gt;-tl&lt;/code&gt; &lt;code&gt;-tll&lt;/code&gt;，且无论是否开启调试模式 &lt;code&gt;-debug&lt;/code&gt; 都一样）：&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;如果找到最少 1 个满足条件的 IP，则只输出 &lt;strong&gt;这几个满足条件的 IP&lt;/strong&gt;（如没有禁用下载测速，则会继续下载测速）&lt;/li&gt; 
  &lt;li&gt;如果没找到任何满足条件的 IP，则会输出 &lt;strong&gt;空&lt;/strong&gt;（如没有禁用下载测速，也会因为数量为 0 而跳过下载测速）&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;&lt;strong&gt;指定了任何 下载速度条件 (&lt;code&gt;-sl&lt;/code&gt;)：&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;且当 &lt;strong&gt;关闭 调试模式&lt;/strong&gt; 时（即没加上 &lt;code&gt;-debug&lt;/code&gt; 参数，这种情况下和延迟测速的逻辑完全一致）：&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;如果找到最少 1 个满足条件的 IP，则只输出 &lt;strong&gt;这几个满足条件的 IP&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;如果没找到任何满足条件的 IP，则输出 &lt;strong&gt;空&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;且当 &lt;strong&gt;开启 调试模式&lt;/strong&gt; 时（即加上了 &lt;code&gt;-debug&lt;/code&gt; 参数，延迟测速并没有加上下面第二条里的逻辑，所以依然输出 空）：&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;如果找到最少 1 个满足条件的 IP，则只输出 &lt;strong&gt;这几个满足条件的 IP&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;如果没找到任何满足条件的 IP，则直接输出 &lt;strong&gt;所有测速结果&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h4&gt;# 单独对一个或多个 IP 测速&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;「 点击展开 查看内容 」&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;&lt;strong&gt;方式 一&lt;/strong&gt;： 直接通过参数指定要测速的 IP 段数据。&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 先进入 CFST 所在目录，然后运行：
# Windows 系统（在 CMD 中运行）
cfst.exe -ip 1.1.1.1,2.2.2.2/24,2606:4700::/32

# Linux 系统
./cfst -ip 1.1.1.1,2.2.2.2/24,2606:4700::/32
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;&lt;strong&gt;方式 二&lt;/strong&gt;： 或者把这些 IP 按如下格式写入到任意文本文件中，例如：&lt;code&gt;1.txt&lt;/code&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;1.1.1.1
1.1.1.200
1.0.0.1/24
2606:4700::/32
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;单个 IP 的话可以省略 &lt;code&gt;/32&lt;/code&gt; 子网掩码了（即 &lt;code&gt;1.1.1.1&lt;/code&gt;等同于 &lt;code&gt;1.1.1.1/32&lt;/code&gt;）。&lt;br /&gt; 子网掩码 &lt;code&gt;/24&lt;/code&gt; 指的是这个 IP 最后一段，即 &lt;code&gt;1.0.0.1~1.0.0.255&lt;/code&gt;。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;然后运行 CFST 时加上启动参数 &lt;code&gt;-f 1.txt&lt;/code&gt; 来指定 IP 段数据文件。&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 先进入 CFST 所在目录，然后运行：
# Windows 系统（在 CMD 中运行）
cfst.exe -f 1.txt

# Linux 系统
./cfst -f 1.txt

# 对于 1.0.0.1/24 这样的 IP 段只会随机最后一段（1.0.0.1~255），如果要测速该 IP 段中的所有 IP，请加上 -allip 参数。
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h4&gt;# 下载测速都是 0.00 ？&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;「 点击展开 查看内容 」&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;&lt;strong&gt;## 原理简单解释：&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;首先要明白，CFST 下载测速过程，本质上和你将 &lt;code&gt;IP 下载测速地址域名&lt;/code&gt; 写入 hosts 文件，然后浏览器去访问下载测速地址是一样的，只不过软件将其自动化了（类似于 &lt;code&gt;curl -I --resolve 下载测速地址域名:443:IP https://下载测速地址&lt;/code&gt;）。&lt;/p&gt; 
 &lt;p&gt;因此如果下载测速结果全都是 0.00 MB/s，那么代表&lt;strong&gt;下载测速过程中出问题报错&lt;/strong&gt;，导致直接终止测速了（并最终显示为 0.00），就只有这几种可能性：&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;strong&gt;下载测速地址有问题&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;测速的 IP 地址有问题&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;你的网络有问题&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;&lt;strong&gt;## 调试模式排查：&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;接下来&lt;strong&gt;请务必&lt;/strong&gt;先在你原先使用的 CFST 运行命令后&lt;strong&gt;追加一个 &lt;code&gt;-debug&lt;/code&gt; 参数来开启调试模式&lt;/strong&gt;，重新跑一遍测速，这样下载测速过程中出现任何报错都会显示具体原因方便你排查。&lt;/p&gt; 
 &lt;p&gt;常见的下载测速失败报错原因有（因为是 Go 语言的原生报错信息，因此基本都是英文）：&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;code&gt;... read: connection reset by peer ... &lt;/code&gt;&lt;br /&gt; &lt;strong&gt;链接被重置&lt;/strong&gt;，可能是下载测速地址被阻断了 或测速 IP 被针对性 HTTPS 阻断了，可能是蔷干的，也可能是运营商干的（比如移动或部分地区的白名单），当然也可能是测速 IP 服务器单纯的重置了你这个不合法的链接请求&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;... HTTP 状态码: 403 ...&lt;/code&gt;&lt;br /&gt; 像这种直接提示 &lt;strong&gt;HTTP 状态码&lt;/strong&gt;的，比较好判断，如 403 就是下载测速地址禁止你访问，404 就是下载测速地址路径对应的文件找不到（具体其他的可以搜索 HTTP 状态码含义）&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;... context deadline exceeded (Client.Timeout exceeded while awaiting headers) ...&lt;/code&gt;&lt;br /&gt; 这种一般是&lt;strong&gt;请求超时&lt;/strong&gt;引起的，可能是 IP 或网络问题，也可能是 &lt;code&gt;-dt&lt;/code&gt; 下载测速时间设置的太短了（当然默认的 10 秒肯定算不上短）&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;... tls: handshake failure ...&lt;/code&gt; 或 &lt;code&gt;... tls: failed to verify certificate ...&lt;/code&gt;&lt;br /&gt; 这种 &lt;strong&gt;TLS 握手失败/SSL 证书错误&lt;/strong&gt; 代表下载测速地址和测速 IP 服务器不匹配，也就是下载测速地址与测速 IP 其中一方有误（例如下载测速地址是托管在 Fastly CDN 的，但测速 IP 是 Cloudflare CDN 的，或者反过来，总之就是你访问下载测速地址时该测速的 IP 服务器告诉你这个网站域名它不认识并把你拒之门外）&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;... tls: failed to verify certificate: x509: certificate is valid for XXX.XX, not YYY.YY ...&lt;/code&gt;&lt;br /&gt; 这种是 &lt;strong&gt;SSL 证书里没有包含你下载测速地址的域名&lt;/strong&gt;，要么是下载测速地址证书配置有问题，要么就是该测速服务器 IP 上并没有该下载测速地址域名对应的 SSL 证书，也就意味着这个服务器 IP 是不能用于该下载测速地址域名的（比如你用谷歌的服务器 IP 去下载测速百度的域名就会这样，或像上面 4 的原因一样）&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;... tls: failed to verify certificate: x509: certificate has expired or is not yet valid: current time ...&lt;/code&gt;&lt;br /&gt; 这种是 &lt;strong&gt;SSL 证书过期了或者尚未到有效时间&lt;/strong&gt;，除了这个原因外，也可能是和上面 4、5 的原因一样（这 4、5、6 三种报错可能会同时出现在同一个服务器 IP 上）&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;... tls: failed to verify certificate: x509: certificate signed by unknown authority.&lt;/code&gt;&lt;br /&gt; 这种代表&lt;strong&gt;系统证书配置有问题&lt;/strong&gt;，导致 TLS 握手时无法验证证书，目前只在 Termux 内遇到过（解决方法见：&lt;a href="https://github.com/XIU2/CloudflareSpeedTest/discussions/61"&gt;https://github.com/XIU2/CloudflareSpeedTest/discussions/61&lt;/a&gt; 帖子末尾）&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;如果你遇到了其他报错原因，且翻译后还是不懂，可以发 Issues 或 Discussions 询问，我也会更新到这里。&lt;br /&gt; 但注意，发 Issues 或 Discussions 询问时，请记得带上&lt;strong&gt;调试模式下 CFST 输出的完整内容（或者完整截图）&lt;/strong&gt;。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;根据上面的报错原因排查一遍后，如果还是无法解决，那么可以尝试下面这些进一步排查：&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;&lt;strong&gt;一、下载测速地址有问题&lt;/strong&gt;：&lt;/p&gt; 
 &lt;p&gt;先去 &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/discussions/490"&gt;#490&lt;/a&gt; 找几个其他的下载测速地址都试试。&lt;/p&gt; 
 &lt;p&gt;如果其中有能下载测速出结果的，则就代表你之前使用的下载测速地址有问题（注意，目前默认下载测速地址仅为一个带负载均衡轮询的重定向链接，会自动重定向到上面帖子里大家分享的公益下载测速地址，而这些地址在&lt;strong&gt;不同地区的可用性可能有差异&lt;/strong&gt;，因此可能出现之前不行现在又正常的情况，如果&lt;strong&gt;想要稳定，建议自建&lt;/strong&gt;，上面帖子写了几种自建方法）。&lt;/p&gt; 
 &lt;p&gt;如果找了很多，都是一样 0.00，那么就要考虑其他可能性了。&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;&lt;strong&gt;二、测速的 IP 地址有问题&lt;/strong&gt;：&lt;/p&gt; 
 &lt;p&gt;你用来测速的 IP 地址，可能一些 TCP 测试是通的，但实际上因为各种原因导致不能建立 HTTP 链接（比如是回源 IP，比如是企业用户专用 IP 等等），因此你可以多尝试一些其他的 IP 看是否可行。&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;&lt;strong&gt;三、你的网络有问题&lt;/strong&gt;：&lt;/p&gt; 
 &lt;p&gt;这个就比较麻烦了，如果你现在是用电脑+宽带来使用 CFST 测速的，那么可以尝试关闭手机 WIFI 并打开流量，然后数据线连接电脑，设置好 USB 网络共享（不同手机系统不太一样，具体自行搜索哈），并拔掉电脑的网线，这样你的电脑现在就是走的手机流量数据网络了（如果手机流量数据和宽带不是一个运营商会更好排查），然后再次运行 CFST 测速看看结果是否改变（也可以同时尝试上面的排查方法来交叉验证）。&lt;/p&gt; 
 &lt;p&gt;如果测速结果正常了，那么显然就是宽带网络的问题，如果还是一样的 0.00，那么就麻烦了。。。&lt;/p&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h4&gt;# 一劳永逸加速所有使用 Cloudflare CDN 的网站（不需要再一个个添加域名到 Hosts 了）&lt;/h4&gt; 
&lt;p&gt;我以前说过，开发该软件项目的目的就是为了通过&lt;strong&gt;改 Hosts 的方式来加速访问使用 Cloudflare CDN 的网站&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;但就如 &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/issues/8"&gt;&lt;strong&gt;#8&lt;/strong&gt;&lt;/a&gt; 所说，一个个添加域名到 Hosts 实在&lt;strong&gt;太麻烦&lt;/strong&gt;了，于是我就找到了个&lt;strong&gt;一劳永逸&lt;/strong&gt;的办法！可以看这个 &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/discussions/71"&gt;&lt;strong&gt;还在一个个添加 Hosts？完美本地加速所有使用 Cloudflare CDN 的网站方法来了！&lt;/strong&gt;&lt;/a&gt; 和另一个&lt;a href="https://github.com/XIU2/CloudflareSpeedTest/discussions/317"&gt;依靠本地 DNS 服务来修改域名解析 IP 为自选 IP&lt;/a&gt; 的教程。&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h4&gt;# 自动更新 Hosts&lt;/h4&gt; 
&lt;p&gt;考虑到很多人获得最快 Cloudflare CDN IP 后，需要替换 Hosts 文件中的 IP。&lt;/p&gt; 
&lt;p&gt;可以看这个 &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/discussions/312"&gt;&lt;strong&gt;Issues&lt;/strong&gt;&lt;/a&gt; 获取 &lt;strong&gt;Windows/Linux 自动更新 Hosts 脚本&lt;/strong&gt;！&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;问题反馈&lt;/h2&gt; 
&lt;p&gt;如果你遇到什么问题，可以先去 &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/issues"&gt;&lt;strong&gt;Issues&lt;/strong&gt;&lt;/a&gt;、&lt;a href="https://github.com/XIU2/CloudflareSpeedTest/discussions"&gt;Discussions&lt;/a&gt; 里看看是否有别人问过了（记得去看下 &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/issues?q=is%3Aissue+is%3Aclosed"&gt;&lt;strong&gt;Closed&lt;/strong&gt;&lt;/a&gt; 的）。&lt;br /&gt; 如果没找到类似问题，请新开个 &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/issues/new"&gt;&lt;strong&gt;Issues&lt;/strong&gt;&lt;/a&gt; 来告诉我！&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] &lt;strong&gt;注意&lt;/strong&gt;！&lt;em&gt;与 CFST 本身 &lt;code&gt;反馈问题、功能建议&lt;/code&gt; 无关的，请前往项目内部 论坛 讨论（顶部的 &lt;code&gt;💬 Discussions&lt;/code&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;如果帮到你的话就 "打赏" 一下吧~🎉✨&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://github.com/XIU2/XIU2/raw/master/img/zs-01.png" alt="微信赞赏" /&gt;&lt;img src="https://github.com/XIU2/XIU2/raw/master/img/zs-02.png" alt="支付宝赞赏" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;衍生项目&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/xianshenglu/cloudflare-ip-tester-app"&gt;https://github.com/xianshenglu/cloudflare-ip-tester-app&lt;/a&gt;&lt;/em&gt;&lt;br /&gt; &lt;em&gt;&lt;strong&gt;CFST 安卓版 APP &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/discussions/320"&gt;#202&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/mingxiaoyu/luci-app-cloudflarespeedtest"&gt;https://github.com/mingxiaoyu/luci-app-cloudflarespeedtest&lt;/a&gt;&lt;/em&gt;&lt;br /&gt; &lt;em&gt;&lt;strong&gt;CFST OpenWrt 路由器插件版 &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/discussions/319"&gt;#174&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/immortalwrt-collections/openwrt-cdnspeedtest"&gt;https://github.com/immortalwrt-collections/openwrt-cdnspeedtest&lt;/a&gt;&lt;/em&gt;&lt;br /&gt; &lt;em&gt;&lt;strong&gt;CFST OpenWrt 原生编译版本 &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/discussions/64"&gt;#64&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/hoseinnikkhah/CloudflareSpeedTest-English"&gt;https://github.com/hoseinnikkhah/CloudflareSpeedTest-English&lt;/a&gt;&lt;/em&gt;&lt;br /&gt; &lt;em&gt;&lt;strong&gt;English language version of CFST (Text language differences only) &lt;a href="https://github.com/XIU2/CloudflareSpeedTest/issues/68"&gt;#64&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;此处仅收集了在本项目中宣传过的部分 CFST 相关衍生项目，如果有遗漏可以告诉我~&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;感谢项目&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;&lt;a href="https://github.com/Spedoske/CloudflareScanner"&gt;https://github.com/Spedoske/CloudflareScanner&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;因为该项目已经很长时间没更新了，而我又产生了很多功能需求，所以我临时学了下 Go 语言就上手了（菜）...&lt;/em&gt;&lt;br /&gt; &lt;em&gt;本软件基于该项目制作，但&lt;strong&gt;已添加大量功能及修复 BUG&lt;/strong&gt;，并根据大家的使用反馈积极添加、优化功能（闲）...&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;手动编译&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;「 点击展开 查看内容 」&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;为了方便，我是在编译的时候将版本号写入代码中的 version 变量，因此你手动编译时，需要像下面这样在 &lt;code&gt;go build&lt;/code&gt; 命令后面加上 &lt;code&gt;-ldflags&lt;/code&gt; 参数来指定版本号：&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;go build -ldflags "-s -w -X main.version=v1.0.0"
# 在 CloudflareSpeedTest 目录中通过命令行（例如 CMD、Bat 脚本）运行该命令，即可编译一个可在和当前设备同样系统、位数、架构的环境下运行的二进制程序（Go 会自动检测你的系统位数、架构）且版本号为 v1.0.0
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;如果想要在 Windows 64位系统下编译&lt;strong&gt;其他系统、架构、位数&lt;/strong&gt;，那么需要指定 &lt;strong&gt;GOOS&lt;/strong&gt; 和 &lt;strong&gt;GOARCH&lt;/strong&gt; 变量。&lt;/p&gt; 
 &lt;p&gt;例如在 Windows 系统下编译一个适用于 &lt;strong&gt;Linux 系统 amd 架构 64 位&lt;/strong&gt;的二进制程序：&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bat"&gt;SET GOOS=linux
SET GOARCH=amd64
go build -ldflags "-s -w -X main.version=v1.0.0"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;例如在 Linux 系统下编译一个适用于 &lt;strong&gt;Windows 系统 amd 架构 32 位&lt;/strong&gt;的二进制程序：&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;GOOS=windows
GOARCH=386
go build -ldflags "-s -w -X main.version=v1.0.0"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;可以运行 &lt;code&gt;go tool dist list&lt;/code&gt; 来查看当前 Go 版本支持编译哪些组合。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;当然，为了方便批量编译，我会专门指定一个变量为版本号，后续编译直接调用该版本号变量即可。&lt;br /&gt; 同时，批量编译的话，还需要分开放到不同文件夹才行（或者文件名不同），需要加上 &lt;code&gt;-o&lt;/code&gt; 参数指定。&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bat"&gt;:: Windows 系统下是这样：
SET version=v1.0.0
SET GOOS=linux
SET GOARCH=amd64
go build -o Releases\cfst_linux_amd64\cfst -ldflags "-s -w -X main.version=%version%"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Linux 系统下是这样：
version=v1.0.0
GOOS=windows
GOARCH=386
go build -o Releases/cfst_windows_386/cfst.exe -ldflags "-s -w -X main.version=${version}"
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The GPL-3.0 License.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>